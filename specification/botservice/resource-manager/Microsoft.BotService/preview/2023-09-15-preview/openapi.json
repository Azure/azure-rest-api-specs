{
  "swagger": "2.0",
  "info": {
    "title": "Azure Bot Service",
    "version": "2023-09-15-preview",
    "description": "Azure Bot Service is a platform for creating smart conversational agents.",
    "x-typespec-generated": [
      {
        "emitter": "@azure-tools/typespec-autorest"
      }
    ]
  },
  "schemes": [
    "https"
  ],
  "host": "management.azure.com",
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "description": "Azure Active Directory OAuth2 Flow.",
      "flow": "implicit",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "tags": [
    {
      "name": "Operations"
    },
    {
      "name": "Bots"
    },
    {
      "name": "BotChannels"
    },
    {
      "name": "ConnectionSettings"
    },
    {
      "name": "AzureBotServicePrivateEndpointConnections"
    },
    {
      "name": "NetworkSecurityPerimeterConfigurations"
    }
  ],
  "paths": {
    "/providers/Microsoft.BotService/operations": {
      "get": {
        "operationId": "Operations_List",
        "tags": [
          "Operations"
        ],
        "description": "List the operations for the provider",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/OperationListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.BotService/botServices": {
      "get": {
        "operationId": "Bots_List",
        "tags": [
          "Bots"
        ],
        "description": "Returns all the resources of a particular type belonging to a subscription.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/BotListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.BotService/botServices/{resourceName}/connections": {
      "get": {
        "operationId": "ConnectionSettings_ListServiceProviders",
        "tags": [
          "ConnectionSettings"
        ],
        "description": "Lists the available Service Providers for creating Connection Settings",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "The name of the Bot resource.",
            "required": true,
            "type": "string",
            "minLength": 2,
            "maxLength": 64,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ConnectionSettingListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.BotService/hostSettings": {
      "get": {
        "operationId": "HostSettingsOperations_Get",
        "description": "Get per subscription settings needed to host bot in compute resource such as Azure App Service",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Azure Subscription ID.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/HostSettingsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.BotService/listQnAMakerEndpointKeys": {
      "post": {
        "operationId": "QnAMakerEndpointKeysOperations_Get",
        "description": "Lists the QnA Maker endpoint keys",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Azure Subscription ID.",
            "required": true,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "The request body parameters to provide for the check name availability request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/QnAMakerEndpointKeysRequestBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/QnAMakerEndpointKeysResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.BotService/operationresults/{operationResultId}": {
      "get": {
        "operationId": "OperationResultsOperations_Get",
        "description": "Get the operation result for a long running operation.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Azure Subscription ID.",
            "required": true,
            "type": "string"
          },
          {
            "name": "operationResultId",
            "in": "path",
            "description": "The ID of the operation result to get.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/OperationResultsDescription"
            }
          },
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful. "
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/{channelName}/providers/Microsoft.BotService/botServices/{resourceName}/listWithKeys": {
      "post": {
        "operationId": "Bots_ListWithKeys",
        "tags": [
          "Bots"
        ],
        "description": "Lists a Channel registration for a Bot Service including secrets",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "channelName",
            "in": "path",
            "description": "The name of the Channel resource.",
            "required": true,
            "type": "string",
            "enum": [
              "AlexaChannel",
              "FacebookChannel",
              "EmailChannel",
              "KikChannel",
              "TelegramChannel",
              "SlackChannel",
              "MsTeamsChannel",
              "SkypeChannel",
              "WebChatChannel",
              "DirectLineChannel",
              "SmsChannel",
              "LineChannel",
              "DirectLineSpeechChannel",
              "OutlookChannel",
              "Omnichannel",
              "TelephonyChannel",
              "AcsChatChannel",
              "SearchAssistant",
              "M365Extensions"
            ],
            "x-ms-enum": {
              "name": "ChannelName",
              "modelAsString": false
            }
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "The name of the Bot resource.",
            "required": true,
            "type": "string",
            "minLength": 2,
            "maxLength": 64,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The content of the action request",
            "required": true,
            "schema": {
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ListChannelWithKeysResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/{channelName}/providers/Microsoft.BotService/botServices/{resourceName}/regenerateKeys": {
      "post": {
        "operationId": "Bots_RegenerateKeys",
        "tags": [
          "Bots"
        ],
        "description": "Regenerates secret keys and returns them for the DirectLine Channel of a particular BotService resource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "channelName",
            "in": "path",
            "description": "The name of the Channel resource for which keys are to be regenerated.",
            "required": true,
            "type": "string",
            "enum": [
              "WebChatChannel",
              "DirectLineChannel"
            ],
            "x-ms-enum": {
              "name": "RegenerateKeysChannelName",
              "modelAsString": false
            }
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "The name of the Bot resource.",
            "required": true,
            "type": "string",
            "minLength": 2,
            "maxLength": 64,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The content of the action request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SiteInfo"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/BotChannel"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.BotService/botServices": {
      "get": {
        "operationId": "Bots_ListByResourceGroup",
        "tags": [
          "Bots"
        ],
        "description": "Returns all the resources of a particular type belonging to a resource group",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/BotListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.BotService/botServices/{resourceName}": {
      "get": {
        "operationId": "Bots_Get",
        "tags": [
          "Bots"
        ],
        "description": "Returns a BotService specified by the parameters.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "The name of the Bot resource.",
            "required": true,
            "type": "string",
            "minLength": 2,
            "maxLength": 64,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Bot"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "operationId": "Bots_Create",
        "tags": [
          "Bots"
        ],
        "description": "Creates a Bot Service. Bot Service is a resource group wide resource type.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "The name of the Bot resource.",
            "required": true,
            "type": "string",
            "minLength": 2,
            "maxLength": 64,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Bot"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'Bot' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/Bot"
            }
          },
          "201": {
            "description": "Resource 'Bot' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/Bot"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "patch": {
        "operationId": "Bots_Update",
        "tags": [
          "Bots"
        ],
        "description": "Updates a Bot Service",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "The name of the Bot resource.",
            "required": true,
            "type": "string",
            "minLength": 2,
            "maxLength": 64,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "The resource properties to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BotUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Bot"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "operationId": "Bots_Delete",
        "tags": [
          "Bots"
        ],
        "description": "Deletes a Bot Service from the resource group. ",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "The name of the Bot resource.",
            "required": true,
            "type": "string",
            "minLength": 2,
            "maxLength": 64,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.BotService/botServices/{resourceName}/channels": {
      "get": {
        "operationId": "BotChannels_ListByBot",
        "tags": [
          "BotChannels"
        ],
        "description": "Returns all the Channel registrations of a particular BotService resource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "The name of the Bot resource.",
            "required": true,
            "type": "string",
            "minLength": 2,
            "maxLength": 64,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/BotChannelListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.BotService/botServices/{resourceName}/channels/{channelName}": {
      "get": {
        "operationId": "BotChannels_Get",
        "tags": [
          "BotChannels"
        ],
        "description": "Returns a BotService Channel registration specified by the parameters.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "The name of the Bot resource.",
            "required": true,
            "type": "string",
            "minLength": 2,
            "maxLength": 64,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$"
          },
          {
            "name": "channelName",
            "in": "path",
            "description": "The name of the Bot resource.",
            "required": true,
            "type": "string",
            "minLength": 2,
            "maxLength": 64,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/BotChannel"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "operationId": "BotChannels_Create",
        "tags": [
          "BotChannels"
        ],
        "description": "Creates a Channel registration for a Bot Service",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "The name of the Bot resource.",
            "required": true,
            "type": "string",
            "minLength": 2,
            "maxLength": 64,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$"
          },
          {
            "name": "channelName",
            "in": "path",
            "description": "The name of the Bot resource.",
            "required": true,
            "type": "string",
            "minLength": 2,
            "maxLength": 64,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BotChannel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'BotChannel' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/BotChannel"
            }
          },
          "201": {
            "description": "Resource 'BotChannel' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/BotChannel"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "patch": {
        "operationId": "BotChannels_Update",
        "tags": [
          "BotChannels"
        ],
        "description": "Updates a Channel registration for a Bot Service",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "The name of the Bot resource.",
            "required": true,
            "type": "string",
            "minLength": 2,
            "maxLength": 64,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$"
          },
          {
            "name": "channelName",
            "in": "path",
            "description": "The name of the Bot resource.",
            "required": true,
            "type": "string",
            "minLength": 2,
            "maxLength": 64,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "The resource properties to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BotChannelUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/BotChannel"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "operationId": "BotChannels_Delete",
        "tags": [
          "BotChannels"
        ],
        "description": "Deletes a Channel registration from a Bot Service",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "The name of the Bot resource.",
            "required": true,
            "type": "string",
            "minLength": 2,
            "maxLength": 64,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$"
          },
          {
            "name": "channelName",
            "in": "path",
            "description": "The name of the Bot resource.",
            "required": true,
            "type": "string",
            "minLength": 2,
            "maxLength": 64,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.BotService/botServices/{resourceName}/connections": {
      "get": {
        "operationId": "ConnectionSettings_ListByBot",
        "tags": [
          "ConnectionSettings"
        ],
        "description": "Returns all the Connection Settings registered to a particular BotService resource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "The name of the Bot resource.",
            "required": true,
            "type": "string",
            "minLength": 2,
            "maxLength": 64,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ConnectionSettingListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.BotService/botServices/{resourceName}/connections/{connectionName}": {
      "get": {
        "operationId": "ConnectionSettings_Get",
        "tags": [
          "ConnectionSettings"
        ],
        "description": "Get a Connection Setting registration for a Bot Service",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "The name of the Bot resource.",
            "required": true,
            "type": "string",
            "minLength": 2,
            "maxLength": 64,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$"
          },
          {
            "name": "connectionName",
            "in": "path",
            "description": "The name of the Bot Service Connection Setting resource.",
            "required": true,
            "type": "string",
            "minLength": 2,
            "maxLength": 64,
            "pattern": "^[a-zA-Z0-9][\\sa-zA-Z0-9_.-]*$"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ConnectionSetting"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "operationId": "ConnectionSettings_Create",
        "tags": [
          "ConnectionSettings"
        ],
        "description": "Register a new Auth Connection for a Bot Service",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "The name of the Bot resource.",
            "required": true,
            "type": "string",
            "minLength": 2,
            "maxLength": 64,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$"
          },
          {
            "name": "connectionName",
            "in": "path",
            "description": "The name of the Bot Service Connection Setting resource.",
            "required": true,
            "type": "string",
            "minLength": 2,
            "maxLength": 64,
            "pattern": "^[a-zA-Z0-9][\\sa-zA-Z0-9_.-]*$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ConnectionSetting"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'ConnectionSetting' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/ConnectionSetting"
            }
          },
          "201": {
            "description": "Resource 'ConnectionSetting' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/ConnectionSetting"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "patch": {
        "operationId": "ConnectionSettings_Update",
        "tags": [
          "ConnectionSettings"
        ],
        "description": "Updates a Connection Setting registration for a Bot Service",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "The name of the Bot resource.",
            "required": true,
            "type": "string",
            "minLength": 2,
            "maxLength": 64,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$"
          },
          {
            "name": "connectionName",
            "in": "path",
            "description": "The name of the Bot Service Connection Setting resource.",
            "required": true,
            "type": "string",
            "minLength": 2,
            "maxLength": 64,
            "pattern": "^[a-zA-Z0-9][\\sa-zA-Z0-9_.-]*$"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "The resource properties to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ConnectionSettingUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ConnectionSetting"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "operationId": "ConnectionSettings_Delete",
        "tags": [
          "ConnectionSettings"
        ],
        "description": "Deletes a Connection Setting registration for a Bot Service",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "The name of the Bot resource.",
            "required": true,
            "type": "string",
            "minLength": 2,
            "maxLength": 64,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$"
          },
          {
            "name": "connectionName",
            "in": "path",
            "description": "The name of the Bot Service Connection Setting resource.",
            "required": true,
            "type": "string",
            "minLength": 2,
            "maxLength": 64,
            "pattern": "^[a-zA-Z0-9][\\sa-zA-Z0-9_.-]*$"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.BotService/botServices/{resourceName}/connections/{connectionName}/listWithSecrets": {
      "post": {
        "operationId": "ConnectionSettings_ListWithSecrets",
        "tags": [
          "ConnectionSettings"
        ],
        "description": "Get a Connection Setting registration for a Bot Service",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "The name of the Bot resource.",
            "required": true,
            "type": "string",
            "minLength": 2,
            "maxLength": 64,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$"
          },
          {
            "name": "connectionName",
            "in": "path",
            "description": "The name of the Bot Service Connection Setting resource.",
            "required": true,
            "type": "string",
            "minLength": 2,
            "maxLength": 64,
            "pattern": "^[a-zA-Z0-9][\\sa-zA-Z0-9_.-]*$"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The content of the action request",
            "required": true,
            "schema": {
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ConnectionSetting"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.BotService/botServices/{resourceName}/createSignInUrl": {
      "post": {
        "operationId": "Bots_CreateSignInUrl",
        "tags": [
          "Bots"
        ],
        "description": "Creates an email channel sign in url for a Bot Service",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "The name of the Bot resource.",
            "required": true,
            "type": "string",
            "minLength": 2,
            "maxLength": 64,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The content of the action request",
            "required": true,
            "schema": {
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/CreateEmailSignInUrlResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.BotService/botServices/{resourceName}/networkSecurityPerimeterConfigurations": {
      "get": {
        "operationId": "NetworkSecurityPerimeterConfigurations_ListByBot",
        "tags": [
          "NetworkSecurityPerimeterConfigurations"
        ],
        "description": "List Network Security Perimeter configurations associated with the Bot.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "The name of the Bot resource.",
            "required": true,
            "type": "string",
            "minLength": 2,
            "maxLength": 64,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/NetworkSecurityPerimeterConfigurationListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.BotService/botServices/{resourceName}/networkSecurityPerimeterConfigurations/{networkSecurityPerimeterConfigurationName}": {
      "get": {
        "operationId": "NetworkSecurityPerimeterConfigurations_Get",
        "tags": [
          "NetworkSecurityPerimeterConfigurations"
        ],
        "description": "Gets the specified Network Security Perimeter configuration associated with the Bot.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "The name of the Bot resource.",
            "required": true,
            "type": "string",
            "minLength": 2,
            "maxLength": 64,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$"
          },
          {
            "name": "networkSecurityPerimeterConfigurationName",
            "in": "path",
            "description": "The resource association Name. Composed of parameter guid and association name.",
            "required": true,
            "type": "string",
            "pattern": ".*"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/NetworkSecurityPerimeterConfiguration"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.BotService/botServices/{resourceName}/networkSecurityPerimeterConfigurations/{networkSecurityPerimeterConfigurationName}/reconcile": {
      "post": {
        "operationId": "NetworkSecurityPerimeterConfigurations_Reconcile",
        "tags": [
          "NetworkSecurityPerimeterConfigurations"
        ],
        "description": "Reconcile the specified Network Security Perimeter configuration associated with the Bot.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "The name of the Bot resource.",
            "required": true,
            "type": "string",
            "minLength": 2,
            "maxLength": 64,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$"
          },
          {
            "name": "networkSecurityPerimeterConfigurationName",
            "in": "path",
            "description": "The resource association Name. Composed of parameter guid and association name.",
            "required": true,
            "type": "string",
            "pattern": ".*"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The content of the action request",
            "required": true,
            "schema": {
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/NetworkSecurityPerimeterConfiguration"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.BotService/botServices/{resourceName}/privateEndpointConnections": {
      "get": {
        "operationId": "AzureBotServicePrivateEndpointConnections_ListByBot",
        "tags": [
          "AzureBotServicePrivateEndpointConnections"
        ],
        "description": "List all the private endpoint connections associated with the Bot.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "The name of the Bot resource.",
            "required": true,
            "type": "string",
            "minLength": 2,
            "maxLength": 64,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/AzureBotServicePrivateEndpointConnectionListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.BotService/botServices/{resourceName}/privateEndpointConnections/{privateEndpointConnectionName}": {
      "get": {
        "operationId": "AzureBotServicePrivateEndpointConnections_Get",
        "tags": [
          "AzureBotServicePrivateEndpointConnections"
        ],
        "description": "Gets the specified private endpoint connection associated with the Bot.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "The name of the Bot resource.",
            "required": true,
            "type": "string",
            "minLength": 2,
            "maxLength": 64,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$"
          },
          {
            "name": "privateEndpointConnectionName",
            "in": "path",
            "description": "The name of the private endpoint connection associated with the Azure resource",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/AzureBotServicePrivateEndpointConnection"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "operationId": "AzureBotServicePrivateEndpointConnections_Create",
        "tags": [
          "AzureBotServicePrivateEndpointConnections"
        ],
        "description": "Update the state of specified private endpoint connection associated with the Bot.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "The name of the Bot resource.",
            "required": true,
            "type": "string",
            "minLength": 2,
            "maxLength": 64,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$"
          },
          {
            "name": "privateEndpointConnectionName",
            "in": "path",
            "description": "The name of the private endpoint connection associated with the Azure resource",
            "required": true,
            "type": "string"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AzureBotServicePrivateEndpointConnection"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'AzureBotServicePrivateEndpointConnection' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/AzureBotServicePrivateEndpointConnection"
            }
          },
          "201": {
            "description": "Resource 'AzureBotServicePrivateEndpointConnection' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/AzureBotServicePrivateEndpointConnection"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "operationId": "AzureBotServicePrivateEndpointConnections_Delete",
        "tags": [
          "AzureBotServicePrivateEndpointConnections"
        ],
        "description": "Deletes the specified private endpoint connection associated with the Bot.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "The name of the Bot resource.",
            "required": true,
            "type": "string",
            "minLength": 2,
            "maxLength": 64,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$"
          },
          {
            "name": "privateEndpointConnectionName",
            "in": "path",
            "description": "The name of the private endpoint connection associated with the Azure resource",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.BotService/botServices/{resourceName}/privateLinkResources/{resourceGroupName}/{resourceName}/{subscriptionId}": {
      "get": {
        "operationId": "Bots_ListByBotResource",
        "tags": [
          "Bots"
        ],
        "description": "Gets the private link resources that need to be created for a Bot.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the Bot resource group in the user subscription.",
            "required": true,
            "type": "string",
            "minLength": 2,
            "maxLength": 64,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "The name of the Bot resource.",
            "required": true,
            "type": "string",
            "minLength": 2,
            "maxLength": 64,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Azure Subscription ID.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/PrivateLinkResourceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        }
      }
    }
  },
  "definitions": {
    "AccessMode": {
      "type": "string",
      "enum": [
        "Enforced",
        "Learning",
        "Audit"
      ],
      "x-ms-enum": {
        "name": "AccessMode",
        "modelAsString": true
      }
    },
    "AcsChatChannel": {
      "type": "object",
      "description": "AcsChat channel definition",
      "allOf": [
        {
          "$ref": "#/definitions/Channel"
        }
      ],
      "x-ms-discriminator-value": "AcsChatChannel"
    },
    "AlexaChannel": {
      "type": "object",
      "description": "Alexa channel definition",
      "properties": {
        "properties": {
          "$ref": "#/definitions/AlexaChannelProperties",
          "description": "The set of properties specific to Alexa channel resource"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Channel"
        }
      ],
      "x-ms-discriminator-value": "AlexaChannel"
    },
    "AlexaChannelProperties": {
      "type": "object",
      "description": "The parameters to provide for the Alexa channel.",
      "properties": {
        "alexaSkillId": {
          "type": "string",
          "description": "The Alexa skill Id"
        },
        "urlFragment": {
          "type": "string",
          "description": "Url fragment used in part of the Uri configured in Alexa",
          "readOnly": true
        },
        "serviceEndpointUri": {
          "type": "string",
          "description": "Full Uri used to configured the skill in Alexa",
          "readOnly": true
        },
        "isEnabled": {
          "type": "boolean",
          "description": "Whether this channel is enabled for the bot"
        }
      },
      "required": [
        "alexaSkillId",
        "isEnabled"
      ]
    },
    "Azure.Core.Foundations.Error": {
      "type": "object",
      "description": "The error object.",
      "properties": {
        "code": {
          "type": "string",
          "description": "One of a server-defined set of error codes."
        },
        "message": {
          "type": "string",
          "description": "A human-readable representation of the error."
        },
        "target": {
          "type": "string",
          "description": "The target of the error."
        },
        "details": {
          "type": "array",
          "description": "An array of details about specific errors that led to this reported error.",
          "items": {
            "$ref": "#/definitions/Azure.Core.Foundations.Error"
          },
          "x-ms-identifiers": []
        },
        "innererror": {
          "$ref": "#/definitions/Azure.Core.Foundations.InnerError",
          "description": "An object containing more specific information than the current object about the error."
        }
      },
      "required": [
        "code",
        "message"
      ]
    },
    "Azure.Core.Foundations.ErrorResponse": {
      "type": "object",
      "description": "A response containing error details.",
      "properties": {
        "error": {
          "$ref": "#/definitions/Azure.Core.Foundations.Error",
          "description": "The error object."
        }
      },
      "required": [
        "error"
      ]
    },
    "Azure.Core.Foundations.InnerError": {
      "type": "object",
      "description": "An object containing more specific information about the error. As per Microsoft One API guidelines - https://github.com/Microsoft/api-guidelines/blob/vNext/Guidelines.md#7102-error-condition-responses.",
      "properties": {
        "code": {
          "type": "string",
          "description": "One of a server-defined set of error codes."
        },
        "innererror": {
          "$ref": "#/definitions/Azure.Core.Foundations.InnerError",
          "description": "Inner error."
        }
      }
    },
    "Azure.ResourceManager.PrivateEndpointConnection": {
      "type": "object",
      "description": "The private endpoint connection resource",
      "properties": {
        "properties": {
          "$ref": "../../../../../common-types/resource-management/v4/privatelinks.json#/definitions/PrivateEndpointConnectionProperties",
          "description": "The private endpoint connection properties"
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "AzureBotServicePrivateEndpointConnection": {
      "type": "object",
      "description": "The Private Endpoint Connection resource.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/PrivateEndpointConnectionProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "AzureBotServicePrivateEndpointConnectionListResult": {
      "type": "object",
      "description": "The response of a AzureBotServicePrivateEndpointConnection list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The AzureBotServicePrivateEndpointConnection items on this page",
          "items": {
            "$ref": "#/definitions/AzureBotServicePrivateEndpointConnection"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "Bot": {
      "type": "object",
      "description": "Bot resource definition",
      "properties": {
        "properties": {
          "$ref": "#/definitions/BotProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "BotChannel": {
      "type": "object",
      "description": "Bot channel resource definition",
      "properties": {
        "properties": {
          "$ref": "#/definitions/Channel",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "BotChannelListResult": {
      "type": "object",
      "description": "The response of a BotChannel list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The BotChannel items on this page",
          "items": {
            "$ref": "#/definitions/BotChannel"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "BotChannelUpdate": {
      "type": "object",
      "description": "The type used for update operations of the BotChannel.",
      "properties": {
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "$ref": "#/definitions/BotChannelUpdateProperties",
          "x-ms-client-flatten": true
        }
      }
    },
    "BotChannelUpdateProperties": {
      "type": "object",
      "description": "The updatable properties of the BotChannel.",
      "properties": {
        "location": {
          "type": "string",
          "description": "Specifies the location of the resource."
        }
      }
    },
    "BotListResult": {
      "type": "object",
      "description": "The response of a Bot list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The Bot items on this page",
          "items": {
            "$ref": "#/definitions/Bot"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "BotProperties": {
      "type": "object",
      "description": "The parameters to provide for the Bot.",
      "properties": {
        "displayName": {
          "type": "string",
          "description": "The Name of the bot"
        },
        "description": {
          "type": "string",
          "description": "The description of the bot"
        },
        "iconUrl": {
          "type": "string",
          "description": "The Icon Url of the bot"
        },
        "endpoint": {
          "type": "string",
          "description": "The bot's endpoint"
        },
        "endpointVersion": {
          "type": "string",
          "description": "The bot's endpoint version",
          "readOnly": true
        },
        "allSettings": {
          "type": "object",
          "description": "Contains resource all settings defined as key/value pairs.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "parameters": {
          "type": "object",
          "description": "Contains resource parameters defined as key/value pairs.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "manifestUrl": {
          "type": "string",
          "description": "The bot's manifest url"
        },
        "msaAppType": {
          "$ref": "#/definitions/MsaAppType",
          "description": "Microsoft App Type for the bot"
        },
        "msaAppId": {
          "type": "string",
          "description": "Microsoft App Id for the bot",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "msaAppTenantId": {
          "type": "string",
          "description": "Microsoft App Tenant Id for the bot",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "msaAppMSIResourceId": {
          "type": "string",
          "description": "Microsoft App Managed Identity Resource Id for the bot"
        },
        "configuredChannels": {
          "type": "array",
          "description": "Collection of channels for which the bot is configured",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "enabledChannels": {
          "type": "array",
          "description": "Collection of channels for which the bot is enabled",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "developerAppInsightKey": {
          "type": "string",
          "description": "The Application Insights key"
        },
        "developerAppInsightsApiKey": {
          "type": "string",
          "description": "The Application Insights Api Key"
        },
        "developerAppInsightsApplicationId": {
          "type": "string",
          "description": "The Application Insights App Id"
        },
        "luisAppIds": {
          "type": "array",
          "description": "Collection of LUIS App Ids",
          "items": {
            "type": "string"
          }
        },
        "luisKey": {
          "type": "string",
          "description": "The LUIS Key"
        },
        "isCmekEnabled": {
          "type": "boolean",
          "description": "Whether Cmek is enabled"
        },
        "cmekKeyVaultUrl": {
          "type": "string",
          "description": "The CMK Url"
        },
        "cmekEncryptionStatus": {
          "type": "string",
          "description": "The CMK encryption status",
          "readOnly": true
        },
        "tenantId": {
          "type": "string",
          "description": "The Tenant Id for the bot",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "publicNetworkAccess": {
          "$ref": "#/definitions/PublicNetworkAccess",
          "description": "Whether the bot is in an isolated network"
        },
        "isStreamingSupported": {
          "type": "boolean",
          "description": "Whether the bot is streaming supported"
        },
        "isDeveloperAppInsightsApiKeySet": {
          "type": "boolean",
          "description": "Whether the bot is developerAppInsightsApiKey set",
          "readOnly": true
        },
        "migrationToken": {
          "type": "string",
          "description": "Token used to migrate non Azure bot to azure subscription",
          "readOnly": true
        },
        "disableLocalAuth": {
          "type": "boolean",
          "description": "Opt-out of local authentication and ensure only MSI and AAD can be used exclusively for authentication."
        },
        "schemaTransformationVersion": {
          "type": "string",
          "description": "The channel schema transformation version for the bot"
        },
        "storageResourceId": {
          "type": "string",
          "description": "The storage resourceId for the bot"
        },
        "privateEndpointConnections": {
          "type": "array",
          "description": "List of Private Endpoint Connections configured for the bot",
          "items": {
            "$ref": "#/definitions/Azure.ResourceManager.PrivateEndpointConnection"
          },
          "readOnly": true
        },
        "networkSecurityPerimeterConfigurations": {
          "type": "array",
          "description": "List of Network Security Perimeter configurations for the bot",
          "items": {
            "$ref": "#/definitions/NetworkSecurityPerimeterConfiguration"
          },
          "readOnly": true
        },
        "openWithHint": {
          "type": "string",
          "description": "The hint to browser (e.g. protocol handler) on how to open the bot for authoring"
        },
        "appPasswordHint": {
          "type": "string",
          "description": "The hint (e.g. keyVault secret resourceId) on how to fetch the app secret"
        },
        "provisioningState": {
          "type": "string",
          "description": "Provisioning state of the resource",
          "readOnly": true
        },
        "publishingCredentials": {
          "type": "string",
          "description": "Publishing credentials of the resource"
        }
      },
      "required": [
        "displayName",
        "endpoint",
        "msaAppId"
      ]
    },
    "BotUpdate": {
      "type": "object",
      "description": "The type used for update operations of the Bot.",
      "properties": {
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "$ref": "#/definitions/BotUpdateProperties",
          "x-ms-client-flatten": true
        }
      }
    },
    "BotUpdateProperties": {
      "type": "object",
      "description": "The updatable properties of the Bot.",
      "properties": {
        "displayName": {
          "type": "string",
          "description": "The Name of the bot"
        },
        "description": {
          "type": "string",
          "description": "The description of the bot"
        },
        "iconUrl": {
          "type": "string",
          "description": "The Icon Url of the bot"
        },
        "endpoint": {
          "type": "string",
          "description": "The bot's endpoint"
        },
        "allSettings": {
          "type": "object",
          "description": "Contains resource all settings defined as key/value pairs.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "parameters": {
          "type": "object",
          "description": "Contains resource parameters defined as key/value pairs.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "manifestUrl": {
          "type": "string",
          "description": "The bot's manifest url"
        },
        "msaAppType": {
          "$ref": "#/definitions/MsaAppType",
          "description": "Microsoft App Type for the bot"
        },
        "msaAppMSIResourceId": {
          "type": "string",
          "description": "Microsoft App Managed Identity Resource Id for the bot"
        },
        "developerAppInsightKey": {
          "type": "string",
          "description": "The Application Insights key"
        },
        "developerAppInsightsApiKey": {
          "type": "string",
          "description": "The Application Insights Api Key"
        },
        "developerAppInsightsApplicationId": {
          "type": "string",
          "description": "The Application Insights App Id"
        },
        "luisAppIds": {
          "type": "array",
          "description": "Collection of LUIS App Ids",
          "items": {
            "type": "string"
          }
        },
        "luisKey": {
          "type": "string",
          "description": "The LUIS Key"
        },
        "isCmekEnabled": {
          "type": "boolean",
          "description": "Whether Cmek is enabled"
        },
        "cmekKeyVaultUrl": {
          "type": "string",
          "description": "The CMK Url"
        },
        "publicNetworkAccess": {
          "$ref": "#/definitions/PublicNetworkAccess",
          "description": "Whether the bot is in an isolated network"
        },
        "isStreamingSupported": {
          "type": "boolean",
          "description": "Whether the bot is streaming supported"
        },
        "disableLocalAuth": {
          "type": "boolean",
          "description": "Opt-out of local authentication and ensure only MSI and AAD can be used exclusively for authentication."
        },
        "schemaTransformationVersion": {
          "type": "string",
          "description": "The channel schema transformation version for the bot"
        },
        "storageResourceId": {
          "type": "string",
          "description": "The storage resourceId for the bot"
        },
        "openWithHint": {
          "type": "string",
          "description": "The hint to browser (e.g. protocol handler) on how to open the bot for authoring"
        },
        "appPasswordHint": {
          "type": "string",
          "description": "The hint (e.g. keyVault secret resourceId) on how to fetch the app secret"
        },
        "publishingCredentials": {
          "type": "string",
          "description": "Publishing credentials of the resource"
        }
      }
    },
    "Channel": {
      "type": "object",
      "description": "Channel definition",
      "properties": {
        "channelName": {
          "type": "string",
          "description": "Discriminator property for Channel."
        },
        "etag": {
          "type": "string",
          "description": "Entity Tag of the resource",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "provisioningState": {
          "type": "string",
          "description": "Provisioning state of the resource",
          "readOnly": true
        },
        "location": {
          "type": "string",
          "description": "Specifies the location of the resource."
        }
      },
      "discriminator": "channelName",
      "required": [
        "channelName"
      ]
    },
    "ChannelName": {
      "type": "string",
      "enum": [
        "AlexaChannel",
        "FacebookChannel",
        "EmailChannel",
        "KikChannel",
        "TelegramChannel",
        "SlackChannel",
        "MsTeamsChannel",
        "SkypeChannel",
        "WebChatChannel",
        "DirectLineChannel",
        "SmsChannel",
        "LineChannel",
        "DirectLineSpeechChannel",
        "OutlookChannel",
        "Omnichannel",
        "TelephonyChannel",
        "AcsChatChannel",
        "SearchAssistant",
        "M365Extensions"
      ],
      "x-ms-enum": {
        "name": "ChannelName",
        "modelAsString": false
      }
    },
    "ChannelSettings": {
      "type": "object",
      "description": "Channel settings definition",
      "properties": {
        "extensionKey1": {
          "type": "string",
          "description": "The extensionKey1"
        },
        "extensionKey2": {
          "type": "string",
          "description": "The extensionKey2"
        },
        "sites": {
          "type": "array",
          "description": "The list of sites",
          "items": {
            "$ref": "#/definitions/Site"
          },
          "x-ms-identifiers": []
        },
        "channelId": {
          "type": "string",
          "description": "The channel id"
        },
        "channelDisplayName": {
          "type": "string",
          "description": "The channel display name"
        },
        "botId": {
          "type": "string",
          "description": "The bot id"
        },
        "botIconUrl": {
          "type": "string",
          "description": "The bot icon url"
        },
        "isEnabled": {
          "type": "boolean",
          "description": "Whether this channel is enabled for the bot"
        },
        "disableLocalAuth": {
          "type": "boolean",
          "description": "Opt-out of local authentication and ensure only MSI and AAD can be used exclusively for authentication."
        },
        "requireTermsAgreement": {
          "type": "boolean",
          "description": "Whether customer needs to agree to new terms."
        }
      }
    },
    "CheckNameAvailabilityRequestBody": {
      "type": "object",
      "description": "The request body for a request to Bot Service Management to check availability of a bot name.",
      "properties": {
        "name": {
          "type": "string",
          "description": "the name of the bot for which availability needs to be checked."
        },
        "type": {
          "type": "string",
          "description": "the type of the bot for which availability needs to be checked"
        }
      }
    },
    "CheckNameAvailabilityResponseBody": {
      "type": "object",
      "description": "The response body returned for a request to Bot Service Management to check availability of a bot name.",
      "properties": {
        "valid": {
          "type": "boolean",
          "description": "indicates if the bot name is valid."
        },
        "message": {
          "type": "string",
          "description": "additional message from the bot management api showing why a bot name is not available"
        },
        "absCode": {
          "type": "string",
          "description": "response code from ABS"
        }
      }
    },
    "ConnectionItemName": {
      "type": "object",
      "description": "The display name of a connection Item Setting registered with the Bot",
      "properties": {
        "name": {
          "type": "string",
          "description": "Connection Item name that has been added in the API",
          "readOnly": true
        }
      }
    },
    "ConnectionSetting": {
      "type": "object",
      "description": "Bot channel resource definition",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ConnectionSettingProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "ConnectionSettingListResult": {
      "type": "object",
      "description": "The response of a ConnectionSetting list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The ConnectionSetting items on this page",
          "items": {
            "$ref": "#/definitions/ConnectionSetting"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "ConnectionSettingParameter": {
      "type": "object",
      "description": "Extra Parameter in a Connection Setting Properties to indicate service provider specific properties",
      "properties": {
        "key": {
          "type": "string",
          "description": "Key for the Connection Setting Parameter."
        },
        "value": {
          "type": "string",
          "description": "Value associated with the Connection Setting Parameter."
        }
      }
    },
    "ConnectionSettingProperties": {
      "type": "object",
      "description": "Properties for a Connection Setting Item",
      "properties": {
        "id": {
          "type": "string",
          "description": "Id of the Connection Setting."
        },
        "name": {
          "type": "string",
          "description": "Name of the Connection Setting."
        },
        "clientId": {
          "type": "string",
          "description": "Client Id associated with the Connection Setting."
        },
        "settingId": {
          "type": "string",
          "description": "Setting Id set by the service for the Connection Setting.",
          "readOnly": true
        },
        "clientSecret": {
          "type": "string",
          "description": "Client Secret associated with the Connection Setting"
        },
        "scopes": {
          "type": "string",
          "description": "Scopes associated with the Connection Setting"
        },
        "serviceProviderId": {
          "type": "string",
          "description": "Service Provider Id associated with the Connection Setting"
        },
        "serviceProviderDisplayName": {
          "type": "string",
          "description": "Service Provider Display Name associated with the Connection Setting"
        },
        "parameters": {
          "type": "array",
          "description": "Service Provider Parameters associated with the Connection Setting",
          "items": {
            "$ref": "#/definitions/ConnectionSettingParameter"
          },
          "x-ms-identifiers": []
        },
        "provisioningState": {
          "type": "string",
          "description": "Provisioning state of the resource"
        }
      }
    },
    "ConnectionSettingUpdate": {
      "type": "object",
      "description": "The type used for update operations of the ConnectionSetting.",
      "properties": {
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "$ref": "#/definitions/ConnectionSettingUpdateProperties",
          "x-ms-client-flatten": true
        }
      }
    },
    "ConnectionSettingUpdateProperties": {
      "type": "object",
      "description": "The updatable properties of the ConnectionSetting.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Id of the Connection Setting."
        },
        "name": {
          "type": "string",
          "description": "Name of the Connection Setting."
        },
        "clientId": {
          "type": "string",
          "description": "Client Id associated with the Connection Setting."
        },
        "clientSecret": {
          "type": "string",
          "description": "Client Secret associated with the Connection Setting"
        },
        "scopes": {
          "type": "string",
          "description": "Scopes associated with the Connection Setting"
        },
        "serviceProviderId": {
          "type": "string",
          "description": "Service Provider Id associated with the Connection Setting"
        },
        "serviceProviderDisplayName": {
          "type": "string",
          "description": "Service Provider Display Name associated with the Connection Setting"
        },
        "parameters": {
          "type": "array",
          "description": "Service Provider Parameters associated with the Connection Setting",
          "items": {
            "$ref": "#/definitions/ConnectionSettingParameter"
          },
          "x-ms-identifiers": []
        },
        "provisioningState": {
          "type": "string",
          "description": "Provisioning state of the resource"
        }
      }
    },
    "CreateEmailSignInUrlResponse": {
      "type": "object",
      "description": "The ARM create email sign in url operation response.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Specifies the resource ID.",
          "readOnly": true
        },
        "location": {
          "type": "string",
          "description": "Specifies the location of the resource."
        },
        "properties": {
          "$ref": "#/definitions/CreateEmailSignInUrlResponseProperties",
          "description": "The set of properties specific to sign in url"
        }
      }
    },
    "CreateEmailSignInUrlResponseProperties": {
      "type": "object",
      "description": "The set of properties specific to sign in url",
      "properties": {
        "url": {
          "type": "string",
          "description": "Sign in url."
        }
      }
    },
    "DirectLineChannel": {
      "type": "object",
      "description": "Direct Line channel definition",
      "properties": {
        "properties": {
          "$ref": "#/definitions/DirectLineChannelProperties",
          "description": "The set of properties specific to Direct Line channel resource"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Channel"
        }
      ],
      "x-ms-discriminator-value": "DirectLineChannel"
    },
    "DirectLineChannelProperties": {
      "type": "object",
      "description": "The parameters to provide for the Direct Line channel.",
      "properties": {
        "sites": {
          "type": "array",
          "description": "The list of Direct Line sites",
          "items": {
            "$ref": "#/definitions/DirectLineSite"
          },
          "x-ms-identifiers": []
        },
        "extensionKey1": {
          "type": "string",
          "description": "The extensionKey1"
        },
        "extensionKey2": {
          "type": "string",
          "description": "The extensionKey2"
        },
        "DirectLineEmbedCode": {
          "type": "string",
          "description": "Direct Line embed code of the resource",
          "x-ms-client-name": "directLineEmbedCode"
        }
      }
    },
    "DirectLineSite": {
      "type": "object",
      "description": "A site for the Direct Line channel",
      "properties": {
        "tenantId": {
          "type": "string",
          "description": "Tenant Id"
        },
        "siteId": {
          "type": "string",
          "description": "Site Id",
          "readOnly": true
        },
        "siteName": {
          "type": "string",
          "description": "Site name",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "key": {
          "type": "string",
          "description": "Primary key. Value only returned through POST to the action Channel List API, otherwise empty.",
          "readOnly": true
        },
        "key2": {
          "type": "string",
          "description": "Secondary key. Value only returned through POST to the action Channel List API, otherwise empty.",
          "readOnly": true
        },
        "isEnabled": {
          "type": "boolean",
          "description": "Whether this site is enabled for DirectLine channel"
        },
        "isTokenEnabled": {
          "type": "boolean",
          "description": "Whether this site is token enabled for channel",
          "readOnly": true
        },
        "isEndpointParametersEnabled": {
          "type": "boolean",
          "description": "Whether this site is EndpointParameters enabled for channel"
        },
        "isDetailedLoggingEnabled": {
          "type": "boolean",
          "description": "Whether this site is disabled detailed logging for"
        },
        "isBlockUserUploadEnabled": {
          "type": "boolean",
          "description": "Whether this site is enabled for block user upload."
        },
        "isNoStorageEnabled": {
          "type": "boolean",
          "description": "Whether this no-storage site is disabled detailed logging for"
        },
        "eTag": {
          "type": "string",
          "description": "Entity Tag"
        },
        "appId": {
          "type": "string",
          "description": "DirectLine application id"
        },
        "isV1Enabled": {
          "type": "boolean",
          "description": "Whether this site is enabled for Bot Framework V1 protocol.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "isV3Enabled": {
          "type": "boolean",
          "description": "Whether this site is enabled for Bot Framework V3 protocol."
        },
        "isSecureSiteEnabled": {
          "type": "boolean",
          "description": "Whether this site is enabled for authentication with Bot Framework."
        },
        "trustedOrigins": {
          "type": "array",
          "description": "List of Trusted Origin URLs for this site. This field is applicable only if isSecureSiteEnabled is True.",
          "items": {
            "type": "string"
          }
        },
        "isWebChatSpeechEnabled": {
          "type": "boolean",
          "description": "Whether this site is enabled for Webchat Speech"
        },
        "isWebchatPreviewEnabled": {
          "type": "boolean",
          "description": "Whether this site is enabled for preview versions of Webchat"
        }
      },
      "required": [
        "siteName",
        "isEnabled"
      ]
    },
    "DirectLineSpeechChannel": {
      "type": "object",
      "description": "DirectLine Speech channel definition",
      "properties": {
        "properties": {
          "$ref": "#/definitions/DirectLineSpeechChannelProperties",
          "description": "The set of properties specific to DirectLine Speech channel resource"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Channel"
        }
      ],
      "x-ms-discriminator-value": "DirectLineSpeechChannel"
    },
    "DirectLineSpeechChannelProperties": {
      "type": "object",
      "description": "The parameters to provide for the DirectLine Speech channel.",
      "properties": {
        "cognitiveServiceResourceId": {
          "type": "string",
          "description": "The cognitive service id with this channel registration."
        },
        "cognitiveServiceRegion": {
          "type": "string",
          "description": "The cognitive service region with this channel registration."
        },
        "cognitiveServiceSubscriptionKey": {
          "type": "string",
          "description": "The cognitive service subscription key to use with this channel registration."
        },
        "isEnabled": {
          "type": "boolean",
          "description": "Whether this channel is enabled or not."
        },
        "customVoiceDeploymentId": {
          "type": "string",
          "description": "Custom speech model id (optional)."
        },
        "customSpeechModelId": {
          "type": "string",
          "description": "Custom voice deployment id (optional)."
        },
        "isDefaultBotForCogSvcAccount": {
          "type": "boolean",
          "description": "Make this a default bot for chosen cognitive service account."
        }
      }
    },
    "EmailChannel": {
      "type": "object",
      "description": "Email channel definition",
      "properties": {
        "properties": {
          "$ref": "#/definitions/EmailChannelProperties",
          "description": "The set of properties specific to email channel resource"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Channel"
        }
      ],
      "x-ms-discriminator-value": "EmailChannel"
    },
    "EmailChannelAuthMethod": {
      "type": "number",
      "enum": [
        0,
        1
      ],
      "x-ms-enum": {
        "name": "EmailChannelAuthMethod",
        "modelAsString": false,
        "values": [
          {
            "name": "Password",
            "value": 0,
            "description": "Basic authentication."
          },
          {
            "name": "Graph",
            "value": 1,
            "description": "Modern authentication."
          }
        ]
      }
    },
    "EmailChannelProperties": {
      "type": "object",
      "description": "The parameters to provide for the Email channel.",
      "properties": {
        "emailAddress": {
          "type": "string",
          "description": "The email address"
        },
        "authMethod": {
          "$ref": "#/definitions/EmailChannelAuthMethod",
          "description": "Email channel auth method. 0 Password (Default); 1 Graph."
        },
        "password": {
          "type": "string",
          "description": "The password for the email address. Value only returned through POST to the action Channel List API, otherwise empty."
        },
        "magicCode": {
          "type": "string",
          "description": "The magic code for setting up the modern authentication."
        },
        "isEnabled": {
          "type": "boolean",
          "description": "Whether this channel is enabled for the bot"
        }
      },
      "required": [
        "emailAddress",
        "isEnabled"
      ]
    },
    "Error": {
      "type": "object",
      "description": "Bot Service error object.",
      "properties": {
        "error": {
          "$ref": "#/definitions/ErrorBody",
          "description": "The error body."
        }
      }
    },
    "ErrorBody": {
      "type": "object",
      "description": "Bot Service error body.",
      "properties": {
        "code": {
          "type": "string",
          "description": "error code"
        },
        "message": {
          "type": "string",
          "description": "error message"
        }
      },
      "required": [
        "code",
        "message"
      ]
    },
    "FacebookChannel": {
      "type": "object",
      "description": "Facebook channel definition",
      "properties": {
        "properties": {
          "$ref": "#/definitions/FacebookChannelProperties",
          "description": "The set of properties specific to bot facebook channel"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Channel"
        }
      ],
      "x-ms-discriminator-value": "FacebookChannel"
    },
    "FacebookChannelProperties": {
      "type": "object",
      "description": "The parameters to provide for the Facebook channel.",
      "properties": {
        "verifyToken": {
          "type": "string",
          "description": "Verify token. Value only returned through POST to the action Channel List API, otherwise empty.",
          "readOnly": true
        },
        "pages": {
          "type": "array",
          "description": "The list of Facebook pages",
          "items": {
            "$ref": "#/definitions/FacebookPage"
          }
        },
        "appId": {
          "type": "string",
          "description": "Facebook application id"
        },
        "appSecret": {
          "type": "string",
          "description": "Facebook application secret. Value only returned through POST to the action Channel List API, otherwise empty."
        },
        "callbackUrl": {
          "type": "string",
          "description": "Callback Url",
          "readOnly": true
        },
        "isEnabled": {
          "type": "boolean",
          "description": "Whether this channel is enabled for the bot"
        }
      },
      "required": [
        "appId",
        "isEnabled"
      ]
    },
    "FacebookPage": {
      "type": "object",
      "description": "A Facebook page for Facebook channel registration",
      "properties": {
        "id": {
          "type": "string",
          "description": "Page id"
        },
        "accessToken": {
          "type": "string",
          "description": "Facebook application access token. Value only returned through POST to the action Channel List API, otherwise empty."
        }
      },
      "required": [
        "id"
      ]
    },
    "HostSettingsResponse": {
      "type": "object",
      "description": "The response body returned for a request to Bot Service Management to check per subscription hostSettings",
      "properties": {
        "OAuthUrl": {
          "type": "string",
          "description": "For in-conversation bot user authentication",
          "x-ms-client-name": "oAuthUrl"
        },
        "ToBotFromChannelOpenIdMetadataUrl": {
          "type": "string",
          "description": "For verifying incoming tokens from the channels",
          "x-ms-client-name": "toBotFromChannelOpenIdMetadataUrl"
        },
        "ToBotFromChannelTokenIssuer": {
          "type": "string",
          "description": "For verifying incoming tokens from the channels",
          "x-ms-client-name": "toBotFromChannelTokenIssuer"
        },
        "ToBotFromEmulatorOpenIdMetadataUrl": {
          "type": "string",
          "description": "For verifying incoming tokens from bot emulator",
          "x-ms-client-name": "toBotFromEmulatorOpenIdMetadataUrl"
        },
        "ToChannelFromBotLoginUrl": {
          "type": "string",
          "description": "For getting access token to channels from bot host",
          "x-ms-client-name": "toChannelFromBotLoginUrl"
        },
        "ToChannelFromBotOAuthScope": {
          "type": "string",
          "description": "For getting access token to channels from bot host",
          "x-ms-client-name": "toChannelFromBotOAuthScope"
        },
        "ValidateAuthority": {
          "type": "boolean",
          "description": "Per cloud OAuth setting on whether authority is validated",
          "x-ms-client-name": "validateAuthority"
        },
        "BotOpenIdMetadata": {
          "type": "string",
          "description": "Same as toBotFromChannelOpenIdMetadataUrl, used by SDK < v4.12",
          "x-ms-client-name": "botOpenIdMetadata"
        }
      }
    },
    "Key": {
      "type": "string",
      "enum": [
        "key1",
        "key2"
      ],
      "x-ms-enum": {
        "name": "Key",
        "modelAsString": false
      }
    },
    "KikChannel": {
      "type": "object",
      "description": "Kik channel definition",
      "properties": {
        "properties": {
          "$ref": "#/definitions/KikChannelProperties",
          "description": "The set of properties specific to Kik channel resource"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Channel"
        }
      ],
      "x-ms-discriminator-value": "KikChannel"
    },
    "KikChannelProperties": {
      "type": "object",
      "description": "The parameters to provide for the Kik channel.",
      "properties": {
        "userName": {
          "type": "string",
          "description": "The Kik user name"
        },
        "apiKey": {
          "type": "string",
          "description": "Kik API key. Value only returned through POST to the action Channel List API, otherwise empty."
        },
        "isValidated": {
          "type": "boolean",
          "description": "Whether this channel is validated for the bot"
        },
        "isEnabled": {
          "type": "boolean",
          "description": "Whether this channel is enabled for the bot"
        }
      },
      "required": [
        "userName",
        "isEnabled"
      ]
    },
    "Kind": {
      "type": "string",
      "enum": [
        "sdk",
        "designer",
        "bot",
        "function",
        "azurebot"
      ],
      "x-ms-enum": {
        "name": "Kind",
        "modelAsString": true
      }
    },
    "LineChannel": {
      "type": "object",
      "description": "Line channel definition",
      "properties": {
        "properties": {
          "$ref": "#/definitions/LineChannelProperties",
          "description": "The set of properties specific to line channel resource"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Channel"
        }
      ],
      "x-ms-discriminator-value": "LineChannel"
    },
    "LineChannelProperties": {
      "type": "object",
      "description": "The parameters to provide for the Line channel.",
      "properties": {
        "lineRegistrations": {
          "type": "array",
          "description": "The list of line channel registrations",
          "items": {
            "$ref": "#/definitions/LineRegistration"
          },
          "x-ms-identifiers": []
        },
        "callbackUrl": {
          "type": "string",
          "description": "Callback Url to enter in line registration.",
          "readOnly": true
        },
        "isValidated": {
          "type": "boolean",
          "description": "Whether this channel is validated for the bot",
          "readOnly": true
        }
      },
      "required": [
        "lineRegistrations"
      ]
    },
    "LineRegistration": {
      "type": "object",
      "description": "The properties corresponding to a line channel registration",
      "properties": {
        "generatedId": {
          "type": "string",
          "description": "Id generated for the line channel registration",
          "readOnly": true
        },
        "channelSecret": {
          "type": "string",
          "description": "Secret for the line channel registration"
        },
        "channelAccessToken": {
          "type": "string",
          "description": "Access token for the line channel registration"
        }
      }
    },
    "ListChannelWithKeysResponse": {
      "type": "object",
      "description": "The ARM channel of list channel with keys operation response.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/Channel",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "name": {
          "type": "string",
          "description": "The name of the Bot resource.",
          "minLength": 2,
          "maxLength": 64,
          "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$"
        },
        "location": {
          "type": "string",
          "description": "The geo-location where the resource lives",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "id": {
          "type": "string",
          "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/systemData",
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true
        },
        "resource": {
          "$ref": "#/definitions/Channel",
          "description": "The set of properties specific to bot channel resource"
        },
        "setting": {
          "$ref": "#/definitions/ChannelSettings",
          "description": "Channel settings"
        },
        "provisioningState": {
          "type": "string",
          "description": "Provisioning state of the resource"
        },
        "entityTag": {
          "type": "string",
          "description": "Entity tag of the resource"
        },
        "changedTime": {
          "type": "string",
          "description": "Changed time of the resource"
        }
      },
      "required": [
        "name",
        "location",
        "id",
        "type"
      ]
    },
    "M365Extensions": {
      "type": "object",
      "description": "M365 Extensions definition",
      "allOf": [
        {
          "$ref": "#/definitions/Channel"
        }
      ],
      "x-ms-discriminator-value": "M365Extensions"
    },
    "MsTeamsChannel": {
      "type": "object",
      "description": "Microsoft Teams channel definition",
      "properties": {
        "properties": {
          "$ref": "#/definitions/MsTeamsChannelProperties",
          "description": "The set of properties specific to Microsoft Teams channel resource"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Channel"
        }
      ],
      "x-ms-discriminator-value": "MsTeamsChannel"
    },
    "MsTeamsChannelProperties": {
      "type": "object",
      "description": "The parameters to provide for the Microsoft Teams channel.",
      "properties": {
        "enableCalling": {
          "type": "boolean",
          "description": "Enable calling for Microsoft Teams channel"
        },
        "callingWebhook": {
          "type": "string",
          "description": "Webhook for Microsoft Teams channel calls"
        },
        "isEnabled": {
          "type": "boolean",
          "description": "Whether this channel is enabled for the bot"
        },
        "incomingCallRoute": {
          "type": "string",
          "description": "Webhook for Microsoft Teams channel calls"
        },
        "deploymentEnvironment": {
          "type": "string",
          "description": "Deployment environment for Microsoft Teams channel calls"
        },
        "acceptedTerms": {
          "type": "boolean",
          "description": "Whether this channel accepted terms"
        }
      },
      "required": [
        "isEnabled"
      ]
    },
    "MsaAppType": {
      "type": "string",
      "enum": [
        "UserAssignedMSI",
        "SingleTenant",
        "MultiTenant"
      ],
      "x-ms-enum": {
        "name": "MsaAppType",
        "modelAsString": true
      }
    },
    "NetworkSecurityPerimeter": {
      "type": "object",
      "description": "Information about Network Security Perimeter",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true,
          "x-ms-arm-id-details": {
            "allowedResources": []
          }
        },
        "perimeterGuid": {
          "type": "string",
          "description": "Guid of the Network Security Perimeter"
        },
        "location": {
          "type": "string",
          "description": "Location of the Network Security Perimeter"
        }
      }
    },
    "NetworkSecurityPerimeterConfiguration": {
      "type": "object",
      "description": "Network Security Perimeter configuration",
      "properties": {
        "properties": {
          "$ref": "#/definitions/NetworkSecurityPerimeterConfigurationProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "NetworkSecurityPerimeterConfigurationListResult": {
      "type": "object",
      "description": "The response of a NetworkSecurityPerimeterConfiguration list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The NetworkSecurityPerimeterConfiguration items on this page",
          "items": {
            "$ref": "#/definitions/NetworkSecurityPerimeterConfiguration"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "NetworkSecurityPerimeterConfigurationProperties": {
      "type": "object",
      "description": "Properties of Network Security Perimeter configuration",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState"
        },
        "provisioningIssues": {
          "type": "array",
          "description": "List of Provisioning Issues if any",
          "items": {
            "$ref": "#/definitions/ProvisioningIssue"
          },
          "x-ms-identifiers": []
        },
        "networkSecurityPerimeter": {
          "$ref": "#/definitions/NetworkSecurityPerimeter",
          "description": "Information about Network Security Perimeter",
          "readOnly": true
        },
        "resourceAssociation": {
          "$ref": "#/definitions/ResourceAssociation",
          "description": "Information about resource association",
          "readOnly": true
        },
        "profile": {
          "$ref": "#/definitions/Profile",
          "description": "Information about profile",
          "readOnly": true
        }
      }
    },
    "NspAccessRule": {
      "type": "object",
      "description": "Information of Access Rule in a profile",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the access rule"
        },
        "properties": {
          "$ref": "#/definitions/NspAccessRuleProperties",
          "description": "Properties of Access Rule",
          "readOnly": true
        }
      }
    },
    "NspAccessRuleDirection": {
      "type": "string",
      "enum": [
        "Inbound",
        "Outbound"
      ],
      "x-ms-enum": {
        "name": "NspAccessRuleDirection",
        "modelAsString": true
      }
    },
    "NspAccessRuleProperties": {
      "type": "object",
      "description": "Properties of Access Rule",
      "properties": {
        "direction": {
          "$ref": "#/definitions/NspAccessRuleDirection",
          "description": "Direction of Access Rule"
        },
        "addressPrefixes": {
          "type": "array",
          "description": "Address prefixes in the CIDR format for inbound rules",
          "items": {
            "type": "string"
          }
        },
        "subscriptions": {
          "type": "array",
          "description": "Subscriptions for inbound rules",
          "items": {
            "$ref": "#/definitions/NspAccessRulePropertiesSubscriptionsItem"
          }
        },
        "networkSecurityPerimeters": {
          "type": "array",
          "description": "NetworkSecurityPerimeters for inbound rules",
          "items": {
            "$ref": "#/definitions/NetworkSecurityPerimeter"
          },
          "readOnly": true
        },
        "fullyQualifiedDomainNames": {
          "type": "array",
          "description": "FQDN for outbound rules",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "emailAddresses": {
          "type": "array",
          "description": "Email addresses for outbound rules",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "phoneNumbers": {
          "type": "array",
          "description": "Phone numbers for outbound rules",
          "items": {
            "type": "string"
          },
          "readOnly": true
        }
      }
    },
    "NspAccessRulePropertiesSubscriptionsItem": {
      "type": "object",
      "description": "Subscription for inbound rule",
      "properties": {
        "id": {
          "type": "string",
          "description": "Fully qualified identifier of subscription"
        }
      }
    },
    "Omnichannel": {
      "type": "object",
      "description": "Omnichannel channel definition",
      "allOf": [
        {
          "$ref": "#/definitions/Channel"
        }
      ],
      "x-ms-discriminator-value": "Omnichannel"
    },
    "OperationDisplayInfo": {
      "type": "object",
      "description": "The operation supported by Bot Service Management.",
      "properties": {
        "description": {
          "type": "string",
          "description": "The description of the operation."
        },
        "operation": {
          "type": "string",
          "description": "The action that users can perform, based on their permission level."
        },
        "provider": {
          "type": "string",
          "description": "Service provider: Microsoft Bot Service."
        },
        "resource": {
          "type": "string",
          "description": "Resource on which the operation is performed."
        }
      }
    },
    "OperationEntity": {
      "type": "object",
      "description": "The operations supported by Bot Service Management.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Operation name: {provider}/{resource}/{operation}."
        },
        "display": {
          "$ref": "#/definitions/OperationDisplayInfo",
          "description": "The operation supported by Bot Service Management."
        },
        "origin": {
          "type": "string",
          "description": "The origin of the operation."
        },
        "properties": {
          "type": "object",
          "description": "Additional properties.",
          "additionalProperties": {}
        }
      }
    },
    "OperationResultStatus": {
      "type": "string",
      "enum": [
        "Canceled",
        "Succeeded",
        "Failed",
        "Requested",
        "Running"
      ],
      "x-ms-enum": {
        "name": "OperationResultStatus",
        "modelAsString": true
      }
    },
    "OperationResultsDescription": {
      "type": "object",
      "description": "The properties indicating the operation result of an operation on a service.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The ID of the operation returned.",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the operation result.",
          "readOnly": true
        },
        "status": {
          "$ref": "#/definitions/OperationResultStatus",
          "description": "The status of the operation being performed.",
          "readOnly": true
        },
        "startTime": {
          "type": "string",
          "format": "date-time",
          "description": "The time that the operation was started.",
          "readOnly": true
        }
      }
    },
    "OutlookChannel": {
      "type": "object",
      "description": "Outlook channel definition",
      "allOf": [
        {
          "$ref": "#/definitions/Channel"
        }
      ],
      "x-ms-discriminator-value": "OutlookChannel"
    },
    "PagedOperationEntity": {
      "type": "object",
      "description": "The list of bot service operation response.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The OperationEntity items on this page",
          "items": {
            "$ref": "#/definitions/OperationEntity"
          },
          "x-ms-identifiers": []
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "PrivateEndpoint": {
      "type": "object",
      "description": "The Private Endpoint resource.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The ARM identifier for Private Endpoint",
          "readOnly": true
        }
      }
    },
    "PrivateEndpointConnectionProperties": {
      "type": "object",
      "description": "Properties of the PrivateEndpointConnectProperties.",
      "properties": {
        "privateEndpoint": {
          "$ref": "#/definitions/PrivateEndpoint",
          "description": "The resource of private end point."
        },
        "privateLinkServiceConnectionState": {
          "$ref": "#/definitions/PrivateLinkServiceConnectionState",
          "description": "A collection of information about the state of the connection between service consumer and provider."
        },
        "provisioningState": {
          "$ref": "#/definitions/PrivateEndpointConnectionProvisioningState",
          "description": "The provisioning state of the private endpoint connection resource.",
          "readOnly": true
        },
        "groupIds": {
          "type": "array",
          "description": "Group ids",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "privateLinkServiceConnectionState"
      ]
    },
    "PrivateEndpointConnectionProvisioningState": {
      "type": "string",
      "enum": [
        "Succeeded",
        "Creating",
        "Deleting",
        "Failed"
      ],
      "x-ms-enum": {
        "name": "PrivateEndpointConnectionProvisioningState",
        "modelAsString": true
      }
    },
    "PrivateEndpointServiceConnectionStatus": {
      "type": "string",
      "enum": [
        "Pending",
        "Approved",
        "Rejected"
      ],
      "x-ms-enum": {
        "name": "PrivateEndpointServiceConnectionStatus",
        "modelAsString": true
      }
    },
    "PrivateLinkResource": {
      "type": "object",
      "description": "A private link resource",
      "properties": {
        "id": {
          "type": "string",
          "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "properties": {
          "$ref": "#/definitions/PrivateLinkResourceProperties",
          "description": "Resource properties."
        }
      }
    },
    "PrivateLinkResourceBase": {
      "type": "object",
      "description": "Common fields that are returned in the response for all BotService Private Link Resources",
      "properties": {
        "id": {
          "type": "string",
          "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        }
      }
    },
    "PrivateLinkResourceListResult": {
      "type": "object",
      "description": "A list of private link resources",
      "properties": {
        "value": {
          "type": "array",
          "description": "Array of private link resources",
          "items": {
            "$ref": "#/definitions/PrivateLinkResource"
          }
        }
      }
    },
    "PrivateLinkResourceProperties": {
      "type": "object",
      "description": "Properties of a private link resource.",
      "properties": {
        "groupId": {
          "type": "string",
          "description": "The private link resource group id.",
          "readOnly": true
        },
        "requiredMembers": {
          "type": "array",
          "description": "The private link resource required member names.",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "requiredZoneNames": {
          "type": "array",
          "description": "The private link resource Private link DNS zone name.",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "PrivateLinkServiceConnectionState": {
      "type": "object",
      "description": "A collection of information about the state of the connection between service consumer and provider.",
      "properties": {
        "status": {
          "$ref": "#/definitions/PrivateEndpointServiceConnectionStatus",
          "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service."
        },
        "description": {
          "type": "string",
          "description": "The reason for approval/rejection of the connection."
        },
        "actionsRequired": {
          "type": "string",
          "description": "A message indicating if changes on the service provider require any updates on the consumer."
        }
      }
    },
    "Profile": {
      "type": "object",
      "description": "Information about profile",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the profile"
        },
        "accessRulesVersion": {
          "type": "integer",
          "format": "int32",
          "description": "Current access rules version"
        },
        "accessRules": {
          "type": "array",
          "description": "List of Access Rules",
          "items": {
            "$ref": "#/definitions/NspAccessRule"
          },
          "x-ms-identifiers": []
        },
        "diagnosticSettingsVersion": {
          "type": "integer",
          "format": "int32",
          "description": "Current diagnostic settings version"
        },
        "enabledLogCategories": {
          "type": "array",
          "description": "List of log categories",
          "items": {
            "type": "string"
          },
          "readOnly": true
        }
      }
    },
    "ProvisioningIssue": {
      "type": "object",
      "description": "Describes Provisioning issue for given Network Security Perimeter configuration",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the issue"
        },
        "properties": {
          "$ref": "#/definitions/ProvisioningIssueProperties",
          "description": "Properties of Provisioning Issue",
          "readOnly": true
        }
      }
    },
    "ProvisioningIssueProperties": {
      "type": "object",
      "description": "Properties of Provisioning Issue",
      "properties": {
        "issueType": {
          "type": "string",
          "description": "Type of Issue"
        },
        "severity": {
          "$ref": "#/definitions/Severity",
          "description": "Provisioning state of Network Security Perimeter configuration propagation"
        },
        "description": {
          "type": "string",
          "description": "Description of the issue"
        },
        "suggestedResourceIds": {
          "type": "array",
          "description": "ARM IDs of resources that can be associated to the same perimeter to remediate the issue.",
          "items": {
            "type": "string",
            "format": "arm-id",
            "description": "A type definition that refers the id to an ARM resource.",
            "x-ms-arm-id-details": {
              "allowedResources": []
            }
          },
          "readOnly": true
        },
        "suggestedAccessRules": {
          "type": "array",
          "description": "Access rules that can be added to the same profile to remediate the issue.",
          "items": {
            "$ref": "#/definitions/NspAccessRule"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "ProvisioningState": {
      "type": "string",
      "enum": [
        "Creating",
        "Updating",
        "Accepted",
        "Succeeded",
        "Failed",
        "Deleting"
      ],
      "x-ms-enum": {
        "name": "ProvisioningState",
        "modelAsString": true
      }
    },
    "PublicNetworkAccess": {
      "type": "string",
      "enum": [
        "Enabled",
        "Disabled",
        "SecuredByPerimeter"
      ],
      "x-ms-enum": {
        "name": "PublicNetworkAccess",
        "modelAsString": true
      }
    },
    "QnAMakerEndpointKeysRequestBody": {
      "type": "object",
      "description": "The request body for a request to Bot Service Management to list QnA Maker endpoint keys.",
      "properties": {
        "hostname": {
          "type": "string",
          "description": "the host name of the QnA Maker endpoint"
        },
        "authkey": {
          "type": "string",
          "description": "Subscription key which provides access to this API."
        }
      }
    },
    "QnAMakerEndpointKeysResponse": {
      "type": "object",
      "description": "Schema for EndpointKeys generate/refresh operations.",
      "properties": {
        "primaryEndpointKey": {
          "type": "string",
          "description": "Primary Access Key."
        },
        "secondaryEndpointKey": {
          "type": "string",
          "description": "Secondary Access Key."
        },
        "installedVersion": {
          "type": "string",
          "description": "Current version of runtime."
        },
        "lastStableVersion": {
          "type": "string",
          "description": "Latest version of runtime."
        }
      }
    },
    "RegenerateKeysChannelName": {
      "type": "string",
      "enum": [
        "WebChatChannel",
        "DirectLineChannel"
      ],
      "x-ms-enum": {
        "name": "RegenerateKeysChannelName",
        "modelAsString": false
      }
    },
    "ResourceAssociation": {
      "type": "object",
      "description": "Information about resource association",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the resource association"
        },
        "accessMode": {
          "$ref": "#/definitions/AccessMode",
          "description": "Access Mode of the resource association"
        }
      }
    },
    "SearchAssistant": {
      "type": "object",
      "description": "SearchAssistant definition",
      "allOf": [
        {
          "$ref": "#/definitions/Channel"
        }
      ],
      "x-ms-discriminator-value": "SearchAssistant"
    },
    "ServiceProvider": {
      "type": "object",
      "description": "Service Provider Definition",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ServiceProviderProperties",
          "description": "The Properties of a Service Provider Object"
        }
      }
    },
    "ServiceProviderParameter": {
      "type": "object",
      "description": "Extra Parameters specific to each Service Provider",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the Service Provider",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "Type of the Service Provider",
          "readOnly": true
        },
        "displayName": {
          "type": "string",
          "description": "Display Name of the Service Provider",
          "readOnly": true
        },
        "description": {
          "type": "string",
          "description": "Description of the Service Provider",
          "readOnly": true
        },
        "helpUrl": {
          "type": "string",
          "description": "Help Url for the  Service Provider",
          "readOnly": true
        },
        "default": {
          "type": "string",
          "description": "Default Name for the Service Provider",
          "readOnly": true
        },
        "metadata": {
          "$ref": "#/definitions/ServiceProviderParameterMetadata",
          "description": "Meta data for the Service Provider",
          "readOnly": true
        }
      }
    },
    "ServiceProviderParameterMetadata": {
      "type": "object",
      "description": "Meta data for the Service Provider",
      "properties": {
        "constraints": {
          "$ref": "#/definitions/ServiceProviderParameterMetadataConstraints",
          "description": "the constraints of the bot meta data."
        }
      }
    },
    "ServiceProviderParameterMetadataConstraints": {
      "type": "object",
      "description": "the constraints of the bot meta data.",
      "properties": {
        "required": {
          "type": "boolean",
          "description": "Whether required the constraints of the bot meta data."
        }
      }
    },
    "ServiceProviderProperties": {
      "type": "object",
      "description": "The Object used to describe a Service Provider supported by Bot Service",
      "properties": {
        "id": {
          "type": "string",
          "description": "Id for Service Provider",
          "readOnly": true
        },
        "displayName": {
          "type": "string",
          "description": "Display Name of the Service Provider",
          "readOnly": true
        },
        "serviceProviderName": {
          "type": "string",
          "description": "Name of the Service Provider",
          "readOnly": true
        },
        "devPortalUrl": {
          "type": "string",
          "description": "URL of Dev Portal",
          "readOnly": true
        },
        "iconUrl": {
          "type": "string",
          "description": "The URL of icon"
        },
        "parameters": {
          "type": "array",
          "description": "The list of parameters for the Service Provider",
          "items": {
            "$ref": "#/definitions/ServiceProviderParameter"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "Severity": {
      "type": "string",
      "enum": [
        "Warning",
        "Error"
      ],
      "x-ms-enum": {
        "name": "Severity",
        "modelAsString": true
      }
    },
    "Site": {
      "type": "object",
      "description": "A site for the channel",
      "properties": {
        "tenantId": {
          "type": "string",
          "description": "Tenant Id"
        },
        "siteId": {
          "type": "string",
          "description": "Site Id",
          "readOnly": true
        },
        "siteName": {
          "type": "string",
          "description": "Site name",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "key": {
          "type": "string",
          "description": "Primary key. Value only returned through POST to the action Channel List API, otherwise empty.",
          "readOnly": true
        },
        "key2": {
          "type": "string",
          "description": "Secondary key. Value only returned through POST to the action Channel List API, otherwise empty.",
          "readOnly": true
        },
        "isEnabled": {
          "type": "boolean",
          "description": "Whether this site is enabled for DirectLine channel"
        },
        "isTokenEnabled": {
          "type": "boolean",
          "description": "Whether this site is token enabled for channel",
          "readOnly": true
        },
        "isEndpointParametersEnabled": {
          "type": "boolean",
          "description": "Whether this site is EndpointParameters enabled for channel"
        },
        "isDetailedLoggingEnabled": {
          "type": "boolean",
          "description": "Whether this site is disabled detailed logging for"
        },
        "isBlockUserUploadEnabled": {
          "type": "boolean",
          "description": "Whether this site is enabled for block user upload."
        },
        "isNoStorageEnabled": {
          "type": "boolean",
          "description": "Whether this no-storage site is disabled detailed logging for"
        },
        "eTag": {
          "type": "string",
          "description": "Entity Tag"
        },
        "appId": {
          "type": "string",
          "description": "DirectLine application id"
        },
        "isV1Enabled": {
          "type": "boolean",
          "description": "Whether this site is enabled for Bot Framework V1 protocol.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "isV3Enabled": {
          "type": "boolean",
          "description": "Whether this site is enabled for Bot Framework V3 protocol."
        },
        "isSecureSiteEnabled": {
          "type": "boolean",
          "description": "Whether this site is enabled for authentication with Bot Framework."
        },
        "trustedOrigins": {
          "type": "array",
          "description": "List of Trusted Origin URLs for this site. This field is applicable only if isSecureSiteEnabled is True.",
          "items": {
            "type": "string"
          }
        },
        "isWebChatSpeechEnabled": {
          "type": "boolean",
          "description": "Whether this site is enabled for Webchat Speech"
        },
        "isWebchatPreviewEnabled": {
          "type": "boolean",
          "description": "Whether this site is enabled for preview versions of Webchat"
        }
      },
      "required": [
        "siteName",
        "isEnabled"
      ]
    },
    "SiteInfo": {
      "type": "object",
      "description": "Site information for WebChat or DirectLine Channels to identify which site to regenerate keys for.",
      "properties": {
        "siteName": {
          "type": "string",
          "description": "The site name",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "key": {
          "$ref": "#/definitions/Key",
          "description": "Determines which key is to be regenerated"
        }
      },
      "required": [
        "siteName",
        "key"
      ]
    },
    "Sku": {
      "type": "object",
      "description": "The SKU of the cognitive services account.",
      "properties": {
        "name": {
          "$ref": "#/definitions/SkuName",
          "description": "The sku name"
        },
        "tier": {
          "$ref": "#/definitions/SkuTier",
          "description": "Gets the sku tier. This is based on the SKU name.",
          "readOnly": true
        }
      },
      "required": [
        "name"
      ]
    },
    "SkuName": {
      "type": "string",
      "enum": [
        "F0",
        "S1"
      ],
      "x-ms-enum": {
        "name": "SkuName",
        "modelAsString": true
      }
    },
    "SkuTier": {
      "type": "string",
      "enum": [
        "Free",
        "Standard"
      ],
      "x-ms-enum": {
        "name": "SkuTier",
        "modelAsString": true
      }
    },
    "SkypeChannel": {
      "type": "object",
      "description": "Skype channel definition",
      "properties": {
        "properties": {
          "$ref": "#/definitions/SkypeChannelProperties",
          "description": "The set of properties specific to Skype channel resource"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Channel"
        }
      ],
      "x-ms-discriminator-value": "SkypeChannel"
    },
    "SkypeChannelProperties": {
      "type": "object",
      "description": "The parameters to provide for the Microsoft Teams channel.",
      "properties": {
        "enableMessaging": {
          "type": "boolean",
          "description": "Enable messaging for Skype channel"
        },
        "enableMediaCards": {
          "type": "boolean",
          "description": "Enable media cards for Skype channel"
        },
        "enableVideo": {
          "type": "boolean",
          "description": "Enable video for Skype channel"
        },
        "enableCalling": {
          "type": "boolean",
          "description": "Enable calling for Skype channel"
        },
        "enableScreenSharing": {
          "type": "boolean",
          "description": "Enable screen sharing for Skype channel"
        },
        "enableGroups": {
          "type": "boolean",
          "description": "Enable groups for Skype channel"
        },
        "groupsMode": {
          "type": "string",
          "description": "Group mode for Skype channel"
        },
        "callingWebHook": {
          "type": "string",
          "description": "Calling web hook for Skype channel"
        },
        "incomingCallRoute": {
          "type": "string",
          "description": "Incoming call route for Skype channel"
        },
        "isEnabled": {
          "type": "boolean",
          "description": "Whether this channel is enabled for the bot"
        }
      },
      "required": [
        "isEnabled"
      ]
    },
    "SlackChannel": {
      "type": "object",
      "description": "Slack channel definition",
      "properties": {
        "properties": {
          "$ref": "#/definitions/SlackChannelProperties",
          "description": "The set of properties specific to Slack channel resource"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Channel"
        }
      ],
      "x-ms-discriminator-value": "SlackChannel"
    },
    "SlackChannelProperties": {
      "type": "object",
      "description": "The parameters to provide for the Slack channel.",
      "properties": {
        "clientId": {
          "type": "string",
          "description": "The Slack client id"
        },
        "clientSecret": {
          "type": "string",
          "description": "The Slack client secret. Value only returned through POST to the action Channel List API, otherwise empty."
        },
        "verificationToken": {
          "type": "string",
          "description": "The Slack verification token. Value only returned through POST to the action Channel List API, otherwise empty."
        },
        "scopes": {
          "type": "string",
          "description": "The Slack permission scopes."
        },
        "landingPageUrl": {
          "type": "string",
          "description": "The Slack landing page Url"
        },
        "redirectAction": {
          "type": "string",
          "description": "The Slack redirect action",
          "readOnly": true
        },
        "lastSubmissionId": {
          "type": "string",
          "description": "The Sms auth token",
          "readOnly": true
        },
        "registerBeforeOAuthFlow": {
          "type": "boolean",
          "description": "Whether to register the settings before OAuth validation is performed. Recommended to True."
        },
        "IsValidated": {
          "type": "boolean",
          "description": "Whether this channel is validated for the bot",
          "readOnly": true
        },
        "signingSecret": {
          "type": "string",
          "description": "The Slack signing secret."
        },
        "isEnabled": {
          "type": "boolean",
          "description": "Whether this channel is enabled for the bot"
        }
      },
      "required": [
        "isEnabled"
      ]
    },
    "SmsChannel": {
      "type": "object",
      "description": "Sms channel definition",
      "properties": {
        "properties": {
          "$ref": "#/definitions/SmsChannelProperties",
          "description": "The set of properties specific to Sms channel resource"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Channel"
        }
      ],
      "x-ms-discriminator-value": "SmsChannel"
    },
    "SmsChannelProperties": {
      "type": "object",
      "description": "The parameters to provide for the Sms channel.",
      "properties": {
        "phone": {
          "type": "string",
          "description": "The Sms phone"
        },
        "accountSID": {
          "type": "string",
          "description": "The Sms account SID. Value only returned through POST to the action Channel List API, otherwise empty."
        },
        "authToken": {
          "type": "string",
          "description": "The Sms auth token. Value only returned through POST to the action Channel List API, otherwise empty."
        },
        "isValidated": {
          "type": "boolean",
          "description": "Whether this channel is validated for the bot"
        },
        "isEnabled": {
          "type": "boolean",
          "description": "Whether this channel is enabled for the bot"
        }
      },
      "required": [
        "phone",
        "accountSID",
        "isEnabled"
      ]
    },
    "TelegramChannel": {
      "type": "object",
      "description": "Telegram channel definition",
      "properties": {
        "properties": {
          "$ref": "#/definitions/TelegramChannelProperties",
          "description": "The set of properties specific to Telegram channel resource"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Channel"
        }
      ],
      "x-ms-discriminator-value": "TelegramChannel"
    },
    "TelegramChannelProperties": {
      "type": "object",
      "description": "The parameters to provide for the Telegram channel.",
      "properties": {
        "accessToken": {
          "type": "string",
          "description": "The Telegram access token. Value only returned through POST to the action Channel List API, otherwise empty."
        },
        "isValidated": {
          "type": "boolean",
          "description": "Whether this channel is validated for the bot"
        },
        "isEnabled": {
          "type": "boolean",
          "description": "Whether this channel is enabled for the bot"
        }
      },
      "required": [
        "isEnabled"
      ]
    },
    "TelephonyChannel": {
      "type": "object",
      "description": "Telephony channel definition",
      "properties": {
        "properties": {
          "$ref": "#/definitions/TelephonyChannelProperties",
          "description": "The set of properties specific to Telephony channel resource"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Channel"
        }
      ],
      "x-ms-discriminator-value": "TelephonyChannel"
    },
    "TelephonyChannelProperties": {
      "type": "object",
      "description": "The parameters to provide for the Direct Line channel.",
      "properties": {
        "phoneNumbers": {
          "type": "array",
          "description": "The list of Telephony phone numbers",
          "items": {
            "$ref": "#/definitions/TelephonyPhoneNumbers"
          }
        },
        "apiConfigurations": {
          "type": "array",
          "description": "The list of Telephony api configuration",
          "items": {
            "$ref": "#/definitions/TelephonyChannelResourceApiConfiguration"
          }
        },
        "cognitiveServiceSubscriptionKey": {
          "type": "string",
          "description": "The extensionKey1"
        },
        "cognitiveServiceRegion": {
          "type": "string",
          "description": "The extensionKey2"
        },
        "defaultLocale": {
          "type": "string",
          "description": "The default locale of the channel"
        },
        "premiumSKU": {
          "type": "string",
          "description": "The premium SKU applied to the channel"
        },
        "isEnabled": {
          "type": "boolean",
          "description": "Whether the channel is enabled"
        }
      }
    },
    "TelephonyChannelResourceApiConfiguration": {
      "type": "object",
      "description": "A resource Api configuration for the Telephony channel",
      "properties": {
        "id": {
          "type": "string",
          "description": "The id of config."
        },
        "providerName": {
          "type": "string",
          "description": "The provider name."
        },
        "cognitiveServiceSubscriptionKey": {
          "type": "string",
          "description": "The cognitive service subscription key."
        },
        "cognitiveServiceRegion": {
          "type": "string",
          "description": "The cognitive service region."
        },
        "cognitiveServiceResourceId": {
          "type": "string",
          "description": "The cognitive service resourceId."
        },
        "defaultLocale": {
          "type": "string",
          "description": "The default locale."
        }
      }
    },
    "TelephonyPhoneNumbers": {
      "type": "object",
      "description": "A telephone number for the Telephony channel",
      "properties": {
        "id": {
          "type": "string",
          "description": "The element id."
        },
        "phoneNumber": {
          "type": "string",
          "description": "The phone number."
        },
        "acsEndpoint": {
          "type": "string",
          "description": "The endpoint of ACS."
        },
        "acsSecret": {
          "type": "string",
          "description": "The secret of ACS."
        },
        "acsResourceId": {
          "type": "string",
          "description": "The resource id of ACS."
        },
        "cognitiveServiceSubscriptionKey": {
          "type": "string",
          "description": "The subscription key of cognitive service."
        },
        "cognitiveServiceRegion": {
          "type": "string",
          "description": "The service region of cognitive service."
        },
        "cognitiveServiceResourceId": {
          "type": "string",
          "description": "The resource id of cognitive service."
        },
        "defaultLocale": {
          "type": "string",
          "description": "The default locale of the phone number."
        },
        "offerType": {
          "type": "string",
          "description": "Optional Property that will determine the offering type of the phone."
        }
      }
    },
    "Versions": {
      "type": "string",
      "description": "The available API versions.",
      "enum": [
        "2023-09-15-preview"
      ],
      "x-ms-enum": {
        "name": "Versions",
        "modelAsString": true,
        "values": [
          {
            "name": "v2023_09_15_preview",
            "value": "2023-09-15-preview"
          }
        ]
      }
    },
    "WebChatChannel": {
      "type": "object",
      "description": "Web Chat channel definition",
      "properties": {
        "properties": {
          "$ref": "#/definitions/WebChatChannelProperties",
          "description": "The set of properties specific to Web Chat channel resource"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Channel"
        }
      ],
      "x-ms-discriminator-value": "WebChatChannel"
    },
    "WebChatChannelProperties": {
      "type": "object",
      "description": "The parameters to provide for the Web Chat channel.",
      "properties": {
        "webChatEmbedCode": {
          "type": "string",
          "description": "Web chat control embed code",
          "readOnly": true
        },
        "sites": {
          "type": "array",
          "description": "The list of Web Chat sites",
          "items": {
            "$ref": "#/definitions/WebChatSite"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "WebChatSite": {
      "type": "object",
      "description": "A site for the Webchat channel",
      "properties": {
        "tenantId": {
          "type": "string",
          "description": "Tenant Id"
        },
        "siteId": {
          "type": "string",
          "description": "Site Id",
          "readOnly": true
        },
        "siteName": {
          "type": "string",
          "description": "Site name",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "key": {
          "type": "string",
          "description": "Primary key. Value only returned through POST to the action Channel List API, otherwise empty.",
          "readOnly": true
        },
        "key2": {
          "type": "string",
          "description": "Secondary key. Value only returned through POST to the action Channel List API, otherwise empty.",
          "readOnly": true
        },
        "isEnabled": {
          "type": "boolean",
          "description": "Whether this site is enabled for DirectLine channel"
        },
        "isTokenEnabled": {
          "type": "boolean",
          "description": "Whether this site is token enabled for channel",
          "readOnly": true
        },
        "isEndpointParametersEnabled": {
          "type": "boolean",
          "description": "Whether this site is EndpointParameters enabled for channel"
        },
        "isDetailedLoggingEnabled": {
          "type": "boolean",
          "description": "Whether this site is disabled detailed logging for"
        },
        "isBlockUserUploadEnabled": {
          "type": "boolean",
          "description": "Whether this site is enabled for block user upload."
        },
        "isNoStorageEnabled": {
          "type": "boolean",
          "description": "Whether this no-storage site is disabled detailed logging for"
        },
        "eTag": {
          "type": "string",
          "description": "Entity Tag"
        },
        "appId": {
          "type": "string",
          "description": "DirectLine application id"
        },
        "isV1Enabled": {
          "type": "boolean",
          "description": "Whether this site is enabled for Bot Framework V1 protocol.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "isV3Enabled": {
          "type": "boolean",
          "description": "Whether this site is enabled for Bot Framework V3 protocol."
        },
        "isSecureSiteEnabled": {
          "type": "boolean",
          "description": "Whether this site is enabled for authentication with Bot Framework."
        },
        "trustedOrigins": {
          "type": "array",
          "description": "List of Trusted Origin URLs for this site. This field is applicable only if isSecureSiteEnabled is True.",
          "items": {
            "type": "string"
          }
        },
        "isWebChatSpeechEnabled": {
          "type": "boolean",
          "description": "Whether this site is enabled for Webchat Speech"
        },
        "isWebchatPreviewEnabled": {
          "type": "boolean",
          "description": "Whether this site is enabled for preview versions of Webchat"
        }
      },
      "required": [
        "siteName",
        "isEnabled"
      ]
    }
  },
  "parameters": {
    "Azure.Core.Foundations.ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "description": "The API version to use for this operation.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "x-ms-parameter-location": "method",
      "x-ms-client-name": "apiVersion"
    }
  }
}
