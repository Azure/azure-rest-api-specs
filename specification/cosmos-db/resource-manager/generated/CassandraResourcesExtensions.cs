// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace CosmosDb
{
    using Models;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// Extension methods for CassandraResources.
    /// </summary>
    public static partial class CassandraResourcesExtensions
    {
            /// <summary>
            /// Lists the Cassandra keyspaces under an existing Azure Cosmos DB database
            /// account.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// Name of an Azure resource group.
            /// </param>
            /// <param name='accountName'>
            /// Cosmos DB database account name.
            /// </param>
            public static CassandraKeyspaceListResult ListCassandraKeyspaces(this ICassandraResources operations, string resourceGroupName, string accountName)
            {
                return operations.ListCassandraKeyspacesAsync(resourceGroupName, accountName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Lists the Cassandra keyspaces under an existing Azure Cosmos DB database
            /// account.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// Name of an Azure resource group.
            /// </param>
            /// <param name='accountName'>
            /// Cosmos DB database account name.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<CassandraKeyspaceListResult> ListCassandraKeyspacesAsync(this ICassandraResources operations, string resourceGroupName, string accountName, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ListCassandraKeyspacesWithHttpMessagesAsync(resourceGroupName, accountName, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Gets the Cassandra keyspaces under an existing Azure Cosmos DB database
            /// account with the provided name.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// Name of an Azure resource group.
            /// </param>
            /// <param name='accountName'>
            /// Cosmos DB database account name.
            /// </param>
            /// <param name='keyspaceName'>
            /// Cosmos DB keyspace name.
            /// </param>
            public static CassandraKeyspaceGetResults GetCassandraKeyspace(this ICassandraResources operations, string resourceGroupName, string accountName, string keyspaceName)
            {
                return operations.GetCassandraKeyspaceAsync(resourceGroupName, accountName, keyspaceName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Gets the Cassandra keyspaces under an existing Azure Cosmos DB database
            /// account with the provided name.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// Name of an Azure resource group.
            /// </param>
            /// <param name='accountName'>
            /// Cosmos DB database account name.
            /// </param>
            /// <param name='keyspaceName'>
            /// Cosmos DB keyspace name.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<CassandraKeyspaceGetResults> GetCassandraKeyspaceAsync(this ICassandraResources operations, string resourceGroupName, string accountName, string keyspaceName, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetCassandraKeyspaceWithHttpMessagesAsync(resourceGroupName, accountName, keyspaceName, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Create or update an Azure Cosmos DB Cassandra keyspace
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// Name of an Azure resource group.
            /// </param>
            /// <param name='accountName'>
            /// Cosmos DB database account name.
            /// </param>
            /// <param name='keyspaceName'>
            /// Cosmos DB keyspace name.
            /// </param>
            /// <param name='createUpdateCassandraKeyspaceParameters'>
            /// The parameters to provide for the current Cassandra keyspace.
            /// </param>
            public static CassandraKeyspaceGetResults CreateUpdateCassandraKeyspace(this ICassandraResources operations, string resourceGroupName, string accountName, string keyspaceName, CassandraKeyspaceCreateUpdateParameters createUpdateCassandraKeyspaceParameters)
            {
                return operations.CreateUpdateCassandraKeyspaceAsync(resourceGroupName, accountName, keyspaceName, createUpdateCassandraKeyspaceParameters).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Create or update an Azure Cosmos DB Cassandra keyspace
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// Name of an Azure resource group.
            /// </param>
            /// <param name='accountName'>
            /// Cosmos DB database account name.
            /// </param>
            /// <param name='keyspaceName'>
            /// Cosmos DB keyspace name.
            /// </param>
            /// <param name='createUpdateCassandraKeyspaceParameters'>
            /// The parameters to provide for the current Cassandra keyspace.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<CassandraKeyspaceGetResults> CreateUpdateCassandraKeyspaceAsync(this ICassandraResources operations, string resourceGroupName, string accountName, string keyspaceName, CassandraKeyspaceCreateUpdateParameters createUpdateCassandraKeyspaceParameters, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.CreateUpdateCassandraKeyspaceWithHttpMessagesAsync(resourceGroupName, accountName, keyspaceName, createUpdateCassandraKeyspaceParameters, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Deletes an existing Azure Cosmos DB Cassandra keyspace.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// Name of an Azure resource group.
            /// </param>
            /// <param name='accountName'>
            /// Cosmos DB database account name.
            /// </param>
            /// <param name='keyspaceName'>
            /// Cosmos DB keyspace name.
            /// </param>
            public static void DeleteCassandraKeyspace(this ICassandraResources operations, string resourceGroupName, string accountName, string keyspaceName)
            {
                operations.DeleteCassandraKeyspaceAsync(resourceGroupName, accountName, keyspaceName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Deletes an existing Azure Cosmos DB Cassandra keyspace.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// Name of an Azure resource group.
            /// </param>
            /// <param name='accountName'>
            /// Cosmos DB database account name.
            /// </param>
            /// <param name='keyspaceName'>
            /// Cosmos DB keyspace name.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task DeleteCassandraKeyspaceAsync(this ICassandraResources operations, string resourceGroupName, string accountName, string keyspaceName, CancellationToken cancellationToken = default(CancellationToken))
            {
                (await operations.DeleteCassandraKeyspaceWithHttpMessagesAsync(resourceGroupName, accountName, keyspaceName, null, cancellationToken).ConfigureAwait(false)).Dispose();
            }

            /// <summary>
            /// Gets the RUs per second of the Cassandra Keyspace under an existing Azure
            /// Cosmos DB database account with the provided name.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// Name of an Azure resource group.
            /// </param>
            /// <param name='accountName'>
            /// Cosmos DB database account name.
            /// </param>
            /// <param name='keyspaceName'>
            /// Cosmos DB keyspace name.
            /// </param>
            public static ThroughputSettingsGetResults GetCassandraKeyspaceThroughput(this ICassandraResources operations, string resourceGroupName, string accountName, string keyspaceName)
            {
                return operations.GetCassandraKeyspaceThroughputAsync(resourceGroupName, accountName, keyspaceName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Gets the RUs per second of the Cassandra Keyspace under an existing Azure
            /// Cosmos DB database account with the provided name.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// Name of an Azure resource group.
            /// </param>
            /// <param name='accountName'>
            /// Cosmos DB database account name.
            /// </param>
            /// <param name='keyspaceName'>
            /// Cosmos DB keyspace name.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<ThroughputSettingsGetResults> GetCassandraKeyspaceThroughputAsync(this ICassandraResources operations, string resourceGroupName, string accountName, string keyspaceName, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetCassandraKeyspaceThroughputWithHttpMessagesAsync(resourceGroupName, accountName, keyspaceName, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Update RUs per second of an Azure Cosmos DB Cassandra Keyspace
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// Name of an Azure resource group.
            /// </param>
            /// <param name='accountName'>
            /// Cosmos DB database account name.
            /// </param>
            /// <param name='keyspaceName'>
            /// Cosmos DB keyspace name.
            /// </param>
            /// <param name='updateThroughputParameters'>
            /// The RUs per second of the parameters to provide for the current Cassandra
            /// Keyspace.
            /// </param>
            public static ThroughputSettingsGetResults UpdateCassandraKeyspaceThroughput(this ICassandraResources operations, string resourceGroupName, string accountName, string keyspaceName, ThroughputSettingsUpdateParameters updateThroughputParameters)
            {
                return operations.UpdateCassandraKeyspaceThroughputAsync(resourceGroupName, accountName, keyspaceName, updateThroughputParameters).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Update RUs per second of an Azure Cosmos DB Cassandra Keyspace
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// Name of an Azure resource group.
            /// </param>
            /// <param name='accountName'>
            /// Cosmos DB database account name.
            /// </param>
            /// <param name='keyspaceName'>
            /// Cosmos DB keyspace name.
            /// </param>
            /// <param name='updateThroughputParameters'>
            /// The RUs per second of the parameters to provide for the current Cassandra
            /// Keyspace.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<ThroughputSettingsGetResults> UpdateCassandraKeyspaceThroughputAsync(this ICassandraResources operations, string resourceGroupName, string accountName, string keyspaceName, ThroughputSettingsUpdateParameters updateThroughputParameters, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.UpdateCassandraKeyspaceThroughputWithHttpMessagesAsync(resourceGroupName, accountName, keyspaceName, updateThroughputParameters, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Lists the Cassandra table under an existing Azure Cosmos DB database
            /// account.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// Name of an Azure resource group.
            /// </param>
            /// <param name='accountName'>
            /// Cosmos DB database account name.
            /// </param>
            /// <param name='keyspaceName'>
            /// Cosmos DB keyspace name.
            /// </param>
            public static CassandraTableListResult ListCassandraTables(this ICassandraResources operations, string resourceGroupName, string accountName, string keyspaceName)
            {
                return operations.ListCassandraTablesAsync(resourceGroupName, accountName, keyspaceName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Lists the Cassandra table under an existing Azure Cosmos DB database
            /// account.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// Name of an Azure resource group.
            /// </param>
            /// <param name='accountName'>
            /// Cosmos DB database account name.
            /// </param>
            /// <param name='keyspaceName'>
            /// Cosmos DB keyspace name.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<CassandraTableListResult> ListCassandraTablesAsync(this ICassandraResources operations, string resourceGroupName, string accountName, string keyspaceName, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ListCassandraTablesWithHttpMessagesAsync(resourceGroupName, accountName, keyspaceName, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Gets the Cassandra table under an existing Azure Cosmos DB database
            /// account.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// Name of an Azure resource group.
            /// </param>
            /// <param name='accountName'>
            /// Cosmos DB database account name.
            /// </param>
            /// <param name='keyspaceName'>
            /// Cosmos DB keyspace name.
            /// </param>
            /// <param name='tableName'>
            /// Cosmos DB table name.
            /// </param>
            public static CassandraTableGetResults GetCassandraTable(this ICassandraResources operations, string resourceGroupName, string accountName, string keyspaceName, string tableName)
            {
                return operations.GetCassandraTableAsync(resourceGroupName, accountName, keyspaceName, tableName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Gets the Cassandra table under an existing Azure Cosmos DB database
            /// account.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// Name of an Azure resource group.
            /// </param>
            /// <param name='accountName'>
            /// Cosmos DB database account name.
            /// </param>
            /// <param name='keyspaceName'>
            /// Cosmos DB keyspace name.
            /// </param>
            /// <param name='tableName'>
            /// Cosmos DB table name.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<CassandraTableGetResults> GetCassandraTableAsync(this ICassandraResources operations, string resourceGroupName, string accountName, string keyspaceName, string tableName, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetCassandraTableWithHttpMessagesAsync(resourceGroupName, accountName, keyspaceName, tableName, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Create or update an Azure Cosmos DB Cassandra Table
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// Name of an Azure resource group.
            /// </param>
            /// <param name='accountName'>
            /// Cosmos DB database account name.
            /// </param>
            /// <param name='keyspaceName'>
            /// Cosmos DB keyspace name.
            /// </param>
            /// <param name='tableName'>
            /// Cosmos DB table name.
            /// </param>
            /// <param name='createUpdateCassandraTableParameters'>
            /// The parameters to provide for the current Cassandra Table.
            /// </param>
            public static CassandraTableGetResults CreateUpdateCassandraTable(this ICassandraResources operations, string resourceGroupName, string accountName, string keyspaceName, string tableName, CassandraTableCreateUpdateParameters createUpdateCassandraTableParameters)
            {
                return operations.CreateUpdateCassandraTableAsync(resourceGroupName, accountName, keyspaceName, tableName, createUpdateCassandraTableParameters).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Create or update an Azure Cosmos DB Cassandra Table
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// Name of an Azure resource group.
            /// </param>
            /// <param name='accountName'>
            /// Cosmos DB database account name.
            /// </param>
            /// <param name='keyspaceName'>
            /// Cosmos DB keyspace name.
            /// </param>
            /// <param name='tableName'>
            /// Cosmos DB table name.
            /// </param>
            /// <param name='createUpdateCassandraTableParameters'>
            /// The parameters to provide for the current Cassandra Table.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<CassandraTableGetResults> CreateUpdateCassandraTableAsync(this ICassandraResources operations, string resourceGroupName, string accountName, string keyspaceName, string tableName, CassandraTableCreateUpdateParameters createUpdateCassandraTableParameters, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.CreateUpdateCassandraTableWithHttpMessagesAsync(resourceGroupName, accountName, keyspaceName, tableName, createUpdateCassandraTableParameters, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Deletes an existing Azure Cosmos DB Cassandra table.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// Name of an Azure resource group.
            /// </param>
            /// <param name='accountName'>
            /// Cosmos DB database account name.
            /// </param>
            /// <param name='keyspaceName'>
            /// Cosmos DB keyspace name.
            /// </param>
            /// <param name='tableName'>
            /// Cosmos DB table name.
            /// </param>
            public static void DeleteCassandraTable(this ICassandraResources operations, string resourceGroupName, string accountName, string keyspaceName, string tableName)
            {
                operations.DeleteCassandraTableAsync(resourceGroupName, accountName, keyspaceName, tableName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Deletes an existing Azure Cosmos DB Cassandra table.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// Name of an Azure resource group.
            /// </param>
            /// <param name='accountName'>
            /// Cosmos DB database account name.
            /// </param>
            /// <param name='keyspaceName'>
            /// Cosmos DB keyspace name.
            /// </param>
            /// <param name='tableName'>
            /// Cosmos DB table name.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task DeleteCassandraTableAsync(this ICassandraResources operations, string resourceGroupName, string accountName, string keyspaceName, string tableName, CancellationToken cancellationToken = default(CancellationToken))
            {
                (await operations.DeleteCassandraTableWithHttpMessagesAsync(resourceGroupName, accountName, keyspaceName, tableName, null, cancellationToken).ConfigureAwait(false)).Dispose();
            }

            /// <summary>
            /// Gets the RUs per second of the Cassandra table under an existing Azure
            /// Cosmos DB database account with the provided name.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// Name of an Azure resource group.
            /// </param>
            /// <param name='accountName'>
            /// Cosmos DB database account name.
            /// </param>
            /// <param name='keyspaceName'>
            /// Cosmos DB keyspace name.
            /// </param>
            /// <param name='tableName'>
            /// Cosmos DB table name.
            /// </param>
            public static ThroughputSettingsGetResults GetCassandraTableThroughput(this ICassandraResources operations, string resourceGroupName, string accountName, string keyspaceName, string tableName)
            {
                return operations.GetCassandraTableThroughputAsync(resourceGroupName, accountName, keyspaceName, tableName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Gets the RUs per second of the Cassandra table under an existing Azure
            /// Cosmos DB database account with the provided name.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// Name of an Azure resource group.
            /// </param>
            /// <param name='accountName'>
            /// Cosmos DB database account name.
            /// </param>
            /// <param name='keyspaceName'>
            /// Cosmos DB keyspace name.
            /// </param>
            /// <param name='tableName'>
            /// Cosmos DB table name.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<ThroughputSettingsGetResults> GetCassandraTableThroughputAsync(this ICassandraResources operations, string resourceGroupName, string accountName, string keyspaceName, string tableName, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetCassandraTableThroughputWithHttpMessagesAsync(resourceGroupName, accountName, keyspaceName, tableName, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Update RUs per second of an Azure Cosmos DB Cassandra table
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// Name of an Azure resource group.
            /// </param>
            /// <param name='accountName'>
            /// Cosmos DB database account name.
            /// </param>
            /// <param name='keyspaceName'>
            /// Cosmos DB keyspace name.
            /// </param>
            /// <param name='tableName'>
            /// Cosmos DB table name.
            /// </param>
            /// <param name='updateThroughputParameters'>
            /// The RUs per second of the parameters to provide for the current Cassandra
            /// table.
            /// </param>
            public static ThroughputSettingsGetResults UpdateCassandraTableThroughput(this ICassandraResources operations, string resourceGroupName, string accountName, string keyspaceName, string tableName, ThroughputSettingsUpdateParameters updateThroughputParameters)
            {
                return operations.UpdateCassandraTableThroughputAsync(resourceGroupName, accountName, keyspaceName, tableName, updateThroughputParameters).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Update RUs per second of an Azure Cosmos DB Cassandra table
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// Name of an Azure resource group.
            /// </param>
            /// <param name='accountName'>
            /// Cosmos DB database account name.
            /// </param>
            /// <param name='keyspaceName'>
            /// Cosmos DB keyspace name.
            /// </param>
            /// <param name='tableName'>
            /// Cosmos DB table name.
            /// </param>
            /// <param name='updateThroughputParameters'>
            /// The RUs per second of the parameters to provide for the current Cassandra
            /// table.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<ThroughputSettingsGetResults> UpdateCassandraTableThroughputAsync(this ICassandraResources operations, string resourceGroupName, string accountName, string keyspaceName, string tableName, ThroughputSettingsUpdateParameters updateThroughputParameters, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.UpdateCassandraTableThroughputWithHttpMessagesAsync(resourceGroupName, accountName, keyspaceName, tableName, updateThroughputParameters, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

    }
}
