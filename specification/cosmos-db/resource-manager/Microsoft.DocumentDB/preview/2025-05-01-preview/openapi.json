{
  "swagger": "2.0",
  "info": {
    "title": "Cosmos DB",
    "version": "2025-05-01-preview",
    "description": "Azure Cosmos DB Throughput Pool REST API",
    "x-typespec-generated": [
      {
        "emitter": "@azure-tools/typespec-autorest"
      }
    ]
  },
  "schemes": [
    "https"
  ],
  "host": "management.azure.com",
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "description": "Azure Active Directory OAuth2 Flow.",
      "flow": "implicit",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "tags": [
    {
      "name": "Operations"
    },
    {
      "name": "ChaosFaultResources"
    },
    {
      "name": "DatabaseAccounts"
    },
    {
      "name": "CopyJobs"
    },
    {
      "name": "GraphResources"
    },
    {
      "name": "SqlResources"
    },
    {
      "name": "ThroughputSettingsGetResultsOperationGroup"
    },
    {
      "name": "SqlResourcesThroughputSettingsGetResultsOperationGroup"
    },
    {
      "name": "MongoDBResources"
    },
    {
      "name": "MongoDBResourcesThroughputSettingsGetResultsOperationGroup"
    },
    {
      "name": "TableResources"
    },
    {
      "name": "CassandraResources"
    },
    {
      "name": "CassandraResourcesThroughputSettingsGetResultsOperationGroup"
    },
    {
      "name": "ViewCassandraResourcesThroughputSettingsGetResultsOperationGroup"
    },
    {
      "name": "GremlinResources"
    },
    {
      "name": "GremlinResourcesThroughputSettingsGetResultsOperationGroup"
    },
    {
      "name": "ClientEncryptionKeyGetResultsOperationGroup"
    },
    {
      "name": "SqlContainerGetResultsOperationGroup"
    },
    {
      "name": "SqlStoredProcedureGetResultsOperationGroup"
    },
    {
      "name": "SqlUserDefinedFunctionGetResultsOperationGroup"
    },
    {
      "name": "SqlTriggerGetResultsOperationGroup"
    },
    {
      "name": "SqlRoleDefinitionGetResultsOperationGroup"
    },
    {
      "name": "SqlRoleAssignmentGetResultsOperationGroup"
    },
    {
      "name": "MongoDBDatabaseGetResultsOperationGroup"
    },
    {
      "name": "MongoDBCollectionGetResultsOperationGroup"
    },
    {
      "name": "MongoRoleDefinitionGetResultsOperationGroup"
    },
    {
      "name": "MongoUserDefinitionGetResultsOperationGroup"
    },
    {
      "name": "TableGetResultsOperationGroup"
    },
    {
      "name": "TableRoleDefinitionResources"
    },
    {
      "name": "TableRoleAssignmentResources"
    },
    {
      "name": "CassandraKeyspaceGetResultsOperationGroup"
    },
    {
      "name": "CassandraTableGetResultsOperationGroup"
    },
    {
      "name": "CassandraViewGetResultsOperationGroup"
    },
    {
      "name": "CassandraRoleDefinitionResources"
    },
    {
      "name": "CassandraRoleAssignmentResources"
    },
    {
      "name": "GremlinDatabaseGetResultsOperationGroup"
    },
    {
      "name": "GremlinGraphGetResultsOperationGroup"
    },
    {
      "name": "GremlinRoleDefinitionResources"
    },
    {
      "name": "GremlinRoleAssignmentResources"
    },
    {
      "name": "LocationGetResults"
    },
    {
      "name": "DataTransferJobs"
    },
    {
      "name": "ClusterResources"
    },
    {
      "name": "DataCenterResources"
    },
    {
      "name": "NetworkSecurityPerimeterConfigurations"
    },
    {
      "name": "NotebookWorkspaces"
    },
    {
      "name": "PrivateEndpointConnections"
    },
    {
      "name": "PrivateLinkResources"
    },
    {
      "name": "RestorableDatabaseAccountGetResults"
    },
    {
      "name": "ServiceResources"
    },
    {
      "name": "ThroughputPoolResources"
    },
    {
      "name": "ThroughputPoolAccountResources"
    },
    {
      "name": "MongoMIRoleDefinitionResources"
    },
    {
      "name": "MongoMIRoleAssignmentResources"
    },
    {
      "name": "FleetResources"
    },
    {
      "name": "FleetAnalyticsResources"
    },
    {
      "name": "FleetspaceResources"
    },
    {
      "name": "FleetspaceAccountResources"
    }
  ],
  "paths": {
    "/providers/Microsoft.DocumentDB/databaseAccountNames/{accountName}": {
      "head": {
        "operationId": "DatabaseAccounts_CheckNameExists",
        "description": "Checks that the Azure Cosmos DB account name already exists. A valid account name may contain only lowercase letters, numbers, and the '-' character, and must be between 3 and 50 characters.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "Cosmos DB database account name.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBDatabaseAccountCheckNameExists": {
            "$ref": "./examples/CosmosDBDatabaseAccountCheckNameExists.json"
          }
        }
      }
    },
    "/providers/Microsoft.DocumentDB/operations": {
      "get": {
        "operationId": "Operations_List",
        "tags": [
          "Operations"
        ],
        "description": "List the operations for the provider",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/OperationListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBOperationsList": {
            "$ref": "./examples/CosmosDBOperationsList.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.DocumentDB/cassandraClusters": {
      "get": {
        "operationId": "CassandraClusters_ListBySubscription",
        "tags": [
          "ClusterResources"
        ],
        "description": "List all managed Cassandra clusters in this subscription.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ListClusters"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBManagedCassandraClusterListBySubscription": {
            "$ref": "./examples/CosmosDBManagedCassandraClusterListBySubscription.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.DocumentDB/databaseAccounts": {
      "get": {
        "operationId": "DatabaseAccounts_List",
        "tags": [
          "DatabaseAccounts"
        ],
        "description": "Lists all the Azure Cosmos DB database accounts available under the subscription.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DatabaseAccountsListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBDatabaseAccountList": {
            "$ref": "./examples/CosmosDBDatabaseAccountList.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.DocumentDB/fleets": {
      "get": {
        "operationId": "Fleet_List",
        "tags": [
          "FleetResources"
        ],
        "description": "Lists all the fleets under the subscription.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/FleetResourceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDB Fleet List by subscription": {
            "$ref": "./examples/fleet/CosmosDBFleetList.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.DocumentDB/locations": {
      "get": {
        "operationId": "Locations_List",
        "tags": [
          "LocationGetResults"
        ],
        "description": "List Cosmos DB locations and their properties",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/LocationListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBLocationList": {
            "$ref": "./examples/CosmosDBLocationList.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.DocumentDB/locations/{location}": {
      "get": {
        "operationId": "Locations_Get",
        "tags": [
          "LocationGetResults"
        ],
        "description": "Get the properties of an existing Cosmos DB location",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "location",
            "in": "path",
            "description": "Cosmos DB region, with spaces between words and each word capitalized.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/LocationGetResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBLocationGet": {
            "$ref": "./examples/CosmosDBLocationGet.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.DocumentDB/locations/{location}/restorableDatabaseAccounts": {
      "get": {
        "operationId": "RestorableDatabaseAccounts_ListByLocation",
        "tags": [
          "RestorableDatabaseAccountGetResults"
        ],
        "description": "Lists all the restorable Azure Cosmos DB database accounts available under the subscription and in a region.  This call requires 'Microsoft.DocumentDB/locations/restorableDatabaseAccounts/read' permission.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "location",
            "in": "path",
            "description": "Cosmos DB region, with spaces between words and each word capitalized.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/RestorableDatabaseAccountsListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBRestorableDatabaseAccountList": {
            "$ref": "./examples/CosmosDBRestorableDatabaseAccountList.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.DocumentDB/locations/{location}/restorableDatabaseAccounts/{instanceId}": {
      "get": {
        "operationId": "RestorableDatabaseAccounts_GetByLocation",
        "tags": [
          "RestorableDatabaseAccountGetResults"
        ],
        "description": "Retrieves the properties of an existing Azure Cosmos DB restorable database account.  This call requires 'Microsoft.DocumentDB/locations/restorableDatabaseAccounts/read/*' permission.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "location",
            "in": "path",
            "description": "Cosmos DB region, with spaces between words and each word capitalized.",
            "required": true,
            "type": "string"
          },
          {
            "name": "instanceId",
            "in": "path",
            "description": "The instanceId GUID of a restorable database account.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/RestorableDatabaseAccountGetResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBRestorableDatabaseAccountGet": {
            "$ref": "./examples/CosmosDBRestorableDatabaseAccountGet.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.DocumentDB/locations/{location}/restorableDatabaseAccounts/{instanceId}/restorableGraphs": {
      "get": {
        "operationId": "RestorableGremlinGraphs_List",
        "tags": [
          "RestorableDatabaseAccountGetResults"
        ],
        "description": "Show the event feed of all mutations done on all the Azure Cosmos DB Gremlin graphs under a specific database. This helps in scenario where container was accidentally deleted. This API requires 'Microsoft.DocumentDB/locations/restorableDatabaseAccounts/.../read' permission",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "location",
            "in": "path",
            "description": "Cosmos DB region, with spaces between words and each word capitalized.",
            "required": true,
            "type": "string"
          },
          {
            "name": "instanceId",
            "in": "path",
            "description": "The instanceId GUID of a restorable database account.",
            "required": true,
            "type": "string"
          },
          {
            "name": "restorableGremlinDatabaseRid",
            "in": "query",
            "description": "The resource ID of the Gremlin database.",
            "required": false,
            "type": "string"
          },
          {
            "name": "startTime",
            "in": "query",
            "description": "Restorable Gremlin graphs event feed start time.",
            "required": false,
            "type": "string"
          },
          {
            "name": "endTime",
            "in": "query",
            "description": "Restorable Gremlin graphs event feed end time.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/RestorableGremlinGraphsListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBRestorableGremlinGraphList": {
            "$ref": "./examples/CosmosDBRestorableGremlinGraphList.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.DocumentDB/locations/{location}/restorableDatabaseAccounts/{instanceId}/restorableGremlinDatabases": {
      "get": {
        "operationId": "RestorableGremlinDatabases_List",
        "tags": [
          "RestorableDatabaseAccountGetResults"
        ],
        "description": "Show the event feed of all mutations done on all the Azure Cosmos DB Gremlin databases under the restorable account. This helps in scenario where database was accidentally deleted to get the deletion time. This API requires 'Microsoft.DocumentDB/locations/restorableDatabaseAccounts/.../read' permission",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "location",
            "in": "path",
            "description": "Cosmos DB region, with spaces between words and each word capitalized.",
            "required": true,
            "type": "string"
          },
          {
            "name": "instanceId",
            "in": "path",
            "description": "The instanceId GUID of a restorable database account.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/RestorableGremlinDatabasesListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBRestorableGremlinDatabaseList": {
            "$ref": "./examples/CosmosDBRestorableGremlinDatabaseList.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.DocumentDB/locations/{location}/restorableDatabaseAccounts/{instanceId}/restorableGremlinResources": {
      "get": {
        "operationId": "RestorableGremlinResources_List",
        "tags": [
          "RestorableDatabaseAccountGetResults"
        ],
        "description": "Return a list of gremlin database and graphs combo that exist on the account at the given timestamp and location. This helps in scenarios to validate what resources exist at given timestamp and location. This API requires 'Microsoft.DocumentDB/locations/restorableDatabaseAccounts/.../read' permission.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "location",
            "in": "path",
            "description": "Cosmos DB region, with spaces between words and each word capitalized.",
            "required": true,
            "type": "string"
          },
          {
            "name": "instanceId",
            "in": "path",
            "description": "The instanceId GUID of a restorable database account.",
            "required": true,
            "type": "string"
          },
          {
            "name": "restoreLocation",
            "in": "query",
            "description": "The location where the restorable resources are located.",
            "required": false,
            "type": "string"
          },
          {
            "name": "restoreTimestampInUtc",
            "in": "query",
            "description": "The timestamp when the restorable resources existed.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/RestorableGremlinResourcesListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBRestorableGremlinResourceList": {
            "$ref": "./examples/CosmosDBRestorableGremlinResourceList.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.DocumentDB/locations/{location}/restorableDatabaseAccounts/{instanceId}/restorableMongodbCollections": {
      "get": {
        "operationId": "RestorableMongodbCollections_List",
        "tags": [
          "RestorableDatabaseAccountGetResults"
        ],
        "description": "Show the event feed of all mutations done on all the Azure Cosmos DB MongoDB collections under a specific database.  This helps in scenario where container was accidentally deleted.  This API requires 'Microsoft.DocumentDB/locations/restorableDatabaseAccounts/.../read' permission",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "location",
            "in": "path",
            "description": "Cosmos DB region, with spaces between words and each word capitalized.",
            "required": true,
            "type": "string"
          },
          {
            "name": "instanceId",
            "in": "path",
            "description": "The instanceId GUID of a restorable database account.",
            "required": true,
            "type": "string"
          },
          {
            "name": "restorableMongodbDatabaseRid",
            "in": "query",
            "description": "The resource ID of the MongoDB database.",
            "required": false,
            "type": "string"
          },
          {
            "name": "startTime",
            "in": "query",
            "description": "Restorable MongoDB collections event feed start time.",
            "required": false,
            "type": "string"
          },
          {
            "name": "endTime",
            "in": "query",
            "description": "Restorable MongoDB collections event feed end time.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/RestorableMongodbCollectionsListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBRestorableMongodbCollectionList": {
            "$ref": "./examples/CosmosDBRestorableMongodbCollectionList.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.DocumentDB/locations/{location}/restorableDatabaseAccounts/{instanceId}/restorableMongodbDatabases": {
      "get": {
        "operationId": "RestorableMongodbDatabases_List",
        "tags": [
          "RestorableDatabaseAccountGetResults"
        ],
        "description": "Show the event feed of all mutations done on all the Azure Cosmos DB MongoDB databases under the restorable account.  This helps in scenario where database was accidentally deleted to get the deletion time.  This API requires  'Microsoft.DocumentDB/locations/restorableDatabaseAccounts/.../read' permission",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "location",
            "in": "path",
            "description": "Cosmos DB region, with spaces between words and each word capitalized.",
            "required": true,
            "type": "string"
          },
          {
            "name": "instanceId",
            "in": "path",
            "description": "The instanceId GUID of a restorable database account.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/RestorableMongodbDatabasesListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBRestorableMongodbDatabaseList": {
            "$ref": "./examples/CosmosDBRestorableMongodbDatabaseList.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.DocumentDB/locations/{location}/restorableDatabaseAccounts/{instanceId}/restorableMongodbResources": {
      "get": {
        "operationId": "RestorableMongodbResources_List",
        "tags": [
          "RestorableDatabaseAccountGetResults"
        ],
        "description": "Return a list of database and collection combo that exist on the account at the given timestamp and location. This helps in scenarios to validate what resources exist at given timestamp and location. This API requires 'Microsoft.DocumentDB/locations/restorableDatabaseAccounts/.../read' permission.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "location",
            "in": "path",
            "description": "Cosmos DB region, with spaces between words and each word capitalized.",
            "required": true,
            "type": "string"
          },
          {
            "name": "instanceId",
            "in": "path",
            "description": "The instanceId GUID of a restorable database account.",
            "required": true,
            "type": "string"
          },
          {
            "name": "restoreLocation",
            "in": "query",
            "description": "The location where the restorable resources are located.",
            "required": false,
            "type": "string"
          },
          {
            "name": "restoreTimestampInUtc",
            "in": "query",
            "description": "The timestamp when the restorable resources existed.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/RestorableMongodbResourcesListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBRestorableMongodbResourceList": {
            "$ref": "./examples/CosmosDBRestorableMongodbResourceList.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.DocumentDB/locations/{location}/restorableDatabaseAccounts/{instanceId}/restorableSqlContainers": {
      "get": {
        "operationId": "RestorableSqlContainers_List",
        "tags": [
          "RestorableDatabaseAccountGetResults"
        ],
        "description": "Show the event feed of all mutations done on all the Azure Cosmos DB SQL containers under a specific database.  This helps in scenario where container was accidentally deleted.  This API requires 'Microsoft.DocumentDB/locations/restorableDatabaseAccounts/.../read' permission",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "location",
            "in": "path",
            "description": "Cosmos DB region, with spaces between words and each word capitalized.",
            "required": true,
            "type": "string"
          },
          {
            "name": "instanceId",
            "in": "path",
            "description": "The instanceId GUID of a restorable database account.",
            "required": true,
            "type": "string"
          },
          {
            "name": "restorableSqlDatabaseRid",
            "in": "query",
            "description": "The resource ID of the SQL database.",
            "required": false,
            "type": "string"
          },
          {
            "name": "startTime",
            "in": "query",
            "description": "Restorable Sql containers event feed start time.",
            "required": false,
            "type": "string"
          },
          {
            "name": "endTime",
            "in": "query",
            "description": "Restorable Sql containers event feed end time.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/RestorableSqlContainersListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBRestorableSqlContainerList": {
            "$ref": "./examples/CosmosDBRestorableSqlContainerList.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.DocumentDB/locations/{location}/restorableDatabaseAccounts/{instanceId}/restorableSqlDatabases": {
      "get": {
        "operationId": "RestorableSqlDatabases_List",
        "tags": [
          "RestorableDatabaseAccountGetResults"
        ],
        "description": "Show the event feed of all mutations done on all the Azure Cosmos DB SQL databases under the restorable account.  This helps in scenario where database was accidentally deleted to get the deletion time.  This API requires 'Microsoft.DocumentDB/locations/restorableDatabaseAccounts/.../read' permission",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "location",
            "in": "path",
            "description": "Cosmos DB region, with spaces between words and each word capitalized.",
            "required": true,
            "type": "string"
          },
          {
            "name": "instanceId",
            "in": "path",
            "description": "The instanceId GUID of a restorable database account.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/RestorableSqlDatabasesListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBRestorableSqlDatabaseList": {
            "$ref": "./examples/CosmosDBRestorableSqlDatabaseList.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.DocumentDB/locations/{location}/restorableDatabaseAccounts/{instanceId}/restorableSqlResources": {
      "get": {
        "operationId": "RestorableSqlResources_List",
        "tags": [
          "RestorableDatabaseAccountGetResults"
        ],
        "description": "Return a list of database and container combo that exist on the account at the given timestamp and location. This helps in scenarios to validate what resources exist at given timestamp and location. This API requires 'Microsoft.DocumentDB/locations/restorableDatabaseAccounts/.../read' permission.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "location",
            "in": "path",
            "description": "Cosmos DB region, with spaces between words and each word capitalized.",
            "required": true,
            "type": "string"
          },
          {
            "name": "instanceId",
            "in": "path",
            "description": "The instanceId GUID of a restorable database account.",
            "required": true,
            "type": "string"
          },
          {
            "name": "restoreLocation",
            "in": "query",
            "description": "The location where the restorable resources are located.",
            "required": false,
            "type": "string"
          },
          {
            "name": "restoreTimestampInUtc",
            "in": "query",
            "description": "The timestamp when the restorable resources existed.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/RestorableSqlResourcesListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBRestorableSqlResourceList": {
            "$ref": "./examples/CosmosDBRestorableSqlResourceList.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.DocumentDB/locations/{location}/restorableDatabaseAccounts/{instanceId}/restorableTableResources": {
      "get": {
        "operationId": "RestorableTableResources_List",
        "tags": [
          "RestorableDatabaseAccountGetResults"
        ],
        "description": "Return a list of tables that exist on the account at the given timestamp and location. This helps in scenarios to validate what resources exist at given timestamp and location. This API requires 'Microsoft.DocumentDB/locations/restorableDatabaseAccounts/.../read' permission.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "location",
            "in": "path",
            "description": "Cosmos DB region, with spaces between words and each word capitalized.",
            "required": true,
            "type": "string"
          },
          {
            "name": "instanceId",
            "in": "path",
            "description": "The instanceId GUID of a restorable database account.",
            "required": true,
            "type": "string"
          },
          {
            "name": "restoreLocation",
            "in": "query",
            "description": "The location where the restorable resources are located.",
            "required": false,
            "type": "string"
          },
          {
            "name": "restoreTimestampInUtc",
            "in": "query",
            "description": "The timestamp when the restorable resources existed.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/RestorableTableResourcesListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBRestorableTableResourceList": {
            "$ref": "./examples/CosmosDBRestorableTableResourceList.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.DocumentDB/locations/{location}/restorableDatabaseAccounts/{instanceId}/restorableTables": {
      "get": {
        "operationId": "RestorableTables_List",
        "tags": [
          "RestorableDatabaseAccountGetResults"
        ],
        "description": "Show the event feed of all mutations done on all the Azure Cosmos DB Tables. This helps in scenario where table was accidentally deleted. This API requires 'Microsoft.DocumentDB/locations/restorableDatabaseAccounts/.../read' permission",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "location",
            "in": "path",
            "description": "Cosmos DB region, with spaces between words and each word capitalized.",
            "required": true,
            "type": "string"
          },
          {
            "name": "instanceId",
            "in": "path",
            "description": "The instanceId GUID of a restorable database account.",
            "required": true,
            "type": "string"
          },
          {
            "name": "startTime",
            "in": "query",
            "description": "Restorable Tables event feed start time.",
            "required": false,
            "type": "string"
          },
          {
            "name": "endTime",
            "in": "query",
            "description": "Restorable Tables event feed end time.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/RestorableTablesListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBRestorableTableList": {
            "$ref": "./examples/CosmosDBRestorableTableList.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.DocumentDB/restorableDatabaseAccounts": {
      "get": {
        "operationId": "RestorableDatabaseAccounts_List",
        "description": "Lists all the restorable Azure Cosmos DB database accounts available under the subscription. This call requires 'Microsoft.DocumentDB/locations/restorableDatabaseAccounts/read' permission.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/RestorableDatabaseAccountsListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBRestorableDatabaseAccountNoLocationList": {
            "$ref": "./examples/CosmosDBRestorableDatabaseAccountNoLocationList.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.DocumentDB/throughputPools": {
      "get": {
        "operationId": "ThroughputPools_List",
        "tags": [
          "ThroughputPoolResources"
        ],
        "description": "Lists all the Azure Cosmos DB Throughput Pools available under the subscription.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ThroughputPoolsListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDB ThroughputPool List": {
            "$ref": "./examples/throughputPool/CosmosDBThroughputPoolList.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/cassandraClusters": {
      "get": {
        "operationId": "CassandraClusters_ListByResourceGroup",
        "tags": [
          "ClusterResources"
        ],
        "description": "List all managed Cassandra clusters in this resource group.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ListClusters"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBManagedCassandraClusterListByResourceGroup": {
            "$ref": "./examples/CosmosDBManagedCassandraClusterListByResourceGroup.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/cassandraClusters/{clusterName}": {
      "get": {
        "operationId": "CassandraClusters_Get",
        "tags": [
          "ClusterResources"
        ],
        "description": "Get the properties of a managed Cassandra cluster.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "Managed Cassandra cluster name.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 100,
            "pattern": "^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ClusterResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBManagedCassandraClusterGet": {
            "$ref": "./examples/CosmosDBManagedCassandraClusterGet.json"
          }
        }
      },
      "put": {
        "operationId": "CassandraClusters_CreateUpdate",
        "tags": [
          "ClusterResources"
        ],
        "description": "Create or update a managed Cassandra cluster. When updating, you must specify all writable properties. To update only some properties, use PATCH.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "Managed Cassandra cluster name.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 100,
            "pattern": "^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*$"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The properties specifying the desired state of the managed Cassandra cluster.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ClusterResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'ClusterResource' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/ClusterResource"
            }
          },
          "201": {
            "description": "Resource 'ClusterResource' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/ClusterResource"
            },
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBManagedCassandraClusterCreate": {
            "$ref": "./examples/CosmosDBManagedCassandraClusterCreate.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location",
          "final-state-schema": "#/definitions/ClusterResource"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "CassandraClusters_Update",
        "tags": [
          "ClusterResources"
        ],
        "description": "Updates some of the properties of a managed Cassandra cluster.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "Managed Cassandra cluster name.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 100,
            "pattern": "^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*$"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Parameters to provide for specifying the managed Cassandra cluster.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ClusterResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ClusterResource"
            }
          },
          "202": {
            "description": "The request has been accepted for processing, but processing has not yet completed.",
            "schema": {
              "$ref": "#/definitions/ClusterResource"
            },
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBManagedCassandraClusterPatch": {
            "$ref": "./examples/CosmosDBManagedCassandraClusterPatch.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location",
          "final-state-schema": "#/definitions/ClusterResource"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "CassandraClusters_Delete",
        "tags": [
          "ClusterResources"
        ],
        "description": "Deletes a managed Cassandra cluster.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "Managed Cassandra cluster name.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 100,
            "pattern": "^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*$"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBManagedCassandraClusterDelete": {
            "$ref": "./examples/CosmosDBManagedCassandraClusterDelete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/cassandraClusters/{clusterName}/backups": {
      "get": {
        "operationId": "CassandraClusters_ListBackups",
        "tags": [
          "ClusterResources"
        ],
        "description": "List the backups of this cluster that are available to restore.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "Managed Cassandra cluster name.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 100,
            "pattern": "^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ListBackups"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBManagedCassandraBackupsList": {
            "$ref": "./examples/CosmosDBManagedCassandraBackupsList.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/cassandraClusters/{clusterName}/backups/{backupId}": {
      "get": {
        "operationId": "CassandraClusters_GetBackup",
        "tags": [
          "ClusterResources"
        ],
        "description": "Get the properties of an individual backup of this cluster that is available to restore.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "Managed Cassandra cluster name.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 100,
            "pattern": "^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*$"
          },
          {
            "name": "backupId",
            "in": "path",
            "description": "Id of a restorable backup of a Cassandra cluster.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 15,
            "pattern": "^[0-9]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/BackupResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBManagedCassandraBackup": {
            "$ref": "./examples/CosmosDBManagedCassandraBackup.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/cassandraClusters/{clusterName}/commands": {
      "get": {
        "operationId": "CassandraClusters_ListCommand",
        "tags": [
          "ClusterResources"
        ],
        "description": "List all commands currently running on ring info",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "Managed Cassandra cluster name.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 100,
            "pattern": "^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ListCommands"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBManagedCassandraListCommand": {
            "$ref": "./examples/CosmosDBManagedCassandraListCommand.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/cassandraClusters/{clusterName}/commands/{commandId}": {
      "get": {
        "operationId": "CassandraClusters_GetCommandAsync",
        "tags": [
          "ClusterResources"
        ],
        "description": "Get details about a specified command that was run asynchronously.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "Managed Cassandra cluster name.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 100,
            "pattern": "^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*$"
          },
          {
            "name": "commandId",
            "in": "path",
            "description": "Managed Cassandra cluster command id.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 100,
            "pattern": "^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/CommandPublicResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBManagedCassandraCommandResult": {
            "$ref": "./examples/CosmosDBManagedCassandraCommandResult.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/cassandraClusters/{clusterName}/dataCenters": {
      "get": {
        "operationId": "CassandraDataCenters_List",
        "tags": [
          "DataCenterResources"
        ],
        "description": "List all data centers in a particular managed Cassandra cluster.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "Managed Cassandra cluster name.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 100,
            "pattern": "^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ListDataCenters"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBManagedCassandraDataCenterList": {
            "$ref": "./examples/CosmosDBManagedCassandraDataCenterList.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/cassandraClusters/{clusterName}/dataCenters/{dataCenterName}": {
      "get": {
        "operationId": "CassandraDataCenters_Get",
        "tags": [
          "DataCenterResources"
        ],
        "description": "Get the properties of a managed Cassandra data center.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "Managed Cassandra cluster name.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 100,
            "pattern": "^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*$"
          },
          {
            "name": "dataCenterName",
            "in": "path",
            "description": "Data center name in a managed Cassandra cluster.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 100,
            "pattern": "^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DataCenterResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBManagedCassandraDataCenterGet": {
            "$ref": "./examples/CosmosDBManagedCassandraDataCenterGet.json"
          }
        }
      },
      "put": {
        "operationId": "CassandraDataCenters_CreateUpdate",
        "tags": [
          "DataCenterResources"
        ],
        "description": "Create or update a managed Cassandra data center. When updating, overwrite all properties. To update only some properties, use PATCH.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "Managed Cassandra cluster name.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 100,
            "pattern": "^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*$"
          },
          {
            "name": "dataCenterName",
            "in": "path",
            "description": "Data center name in a managed Cassandra cluster.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 100,
            "pattern": "^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*$"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Parameters specifying the managed Cassandra data center.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DataCenterResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'DataCenterResource' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/DataCenterResource"
            }
          },
          "201": {
            "description": "Resource 'DataCenterResource' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/DataCenterResource"
            },
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBManagedCassandraDataCenterCreate": {
            "$ref": "./examples/CosmosDBManagedCassandraDataCenterCreate.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location",
          "final-state-schema": "#/definitions/DataCenterResource"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "CassandraDataCenters_Update",
        "tags": [
          "DataCenterResources"
        ],
        "description": "Update some of the properties of a managed Cassandra data center.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "Managed Cassandra cluster name.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 100,
            "pattern": "^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*$"
          },
          {
            "name": "dataCenterName",
            "in": "path",
            "description": "Data center name in a managed Cassandra cluster.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 100,
            "pattern": "^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*$"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Parameters to provide for specifying the managed Cassandra data center.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DataCenterResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DataCenterResource"
            }
          },
          "202": {
            "description": "The request has been accepted for processing, but processing has not yet completed.",
            "schema": {
              "$ref": "#/definitions/DataCenterResource"
            },
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBManagedCassandraDataCenterUpdate": {
            "$ref": "./examples/CosmosDBManagedCassandraDataCenterPatch.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location",
          "final-state-schema": "#/definitions/DataCenterResource"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "CassandraDataCenters_Delete",
        "tags": [
          "DataCenterResources"
        ],
        "description": "Delete a managed Cassandra data center.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "Managed Cassandra cluster name.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 100,
            "pattern": "^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*$"
          },
          {
            "name": "dataCenterName",
            "in": "path",
            "description": "Data center name in a managed Cassandra cluster.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 100,
            "pattern": "^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*$"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBManagedCassandraDataCenterDelete": {
            "$ref": "./examples/CosmosDBManagedCassandraDataCenterDelete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/cassandraClusters/{clusterName}/deallocate": {
      "post": {
        "operationId": "CassandraClusters_Deallocate",
        "tags": [
          "ClusterResources"
        ],
        "description": "Deallocate the Managed Cassandra Cluster and Associated Data Centers. Deallocation will deallocate the host virtual machine of this cluster, and reserved the data disk. This won't do anything on an already deallocated cluster. Use Start to restart the cluster.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "Managed Cassandra cluster name.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 100,
            "pattern": "^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*$"
          },
          {
            "name": "x-ms-force-deallocate",
            "in": "header",
            "description": "Force to deallocate a cluster of Cluster Type Production. Force to deallocate a cluster of Cluster Type Production might cause data loss",
            "required": false,
            "type": "string",
            "x-ms-client-name": "xMsForceDeallocate"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBManagedCassandraClusterDeallocate": {
            "$ref": "./examples/CosmosDBManagedCassandraClusterDeallocate.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/cassandraClusters/{clusterName}/invokeCommand": {
      "post": {
        "operationId": "CassandraClusters_InvokeCommand",
        "tags": [
          "ClusterResources"
        ],
        "description": "Invoke a command like nodetool for cassandra maintenance",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "Managed Cassandra cluster name.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 100,
            "pattern": "^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*$"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Specification which command to run where",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CommandPostBody"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "The request has been accepted for processing, but processing has not yet completed.",
            "schema": {
              "$ref": "#/definitions/CommandOutput"
            },
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBManagedCassandraCommand": {
            "$ref": "./examples/CosmosDBManagedCassandraCommand.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/cassandraClusters/{clusterName}/invokeCommandAsync": {
      "post": {
        "operationId": "CassandraClusters_InvokeCommandAsync",
        "tags": [
          "ClusterResources"
        ],
        "description": "Invoke a command like nodetool for cassandra maintenance asynchronously",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "Managed Cassandra cluster name.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 100,
            "pattern": "^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*$"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Specification which command to run where",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CommandAsyncPostBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/CommandPublicResource"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBManagedCassandraCommandAsync": {
            "$ref": "./examples/CosmosDBManagedCassandraCommandAsync.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location",
          "final-state-schema": "#/definitions/CommandPublicResource"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/cassandraClusters/{clusterName}/start": {
      "post": {
        "operationId": "CassandraClusters_Start",
        "tags": [
          "ClusterResources"
        ],
        "description": "Start the Managed Cassandra Cluster and Associated Data Centers. Start will start the host virtual machine of this cluster with reserved data disk. This won't do anything on an already running cluster. Use Deallocate to deallocate the cluster.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "Managed Cassandra cluster name.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 100,
            "pattern": "^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*$"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBManagedCassandraClusterStart": {
            "$ref": "./examples/CosmosDBManagedCassandraClusterStart.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/cassandraClusters/{clusterName}/status": {
      "get": {
        "operationId": "CassandraClusters_Status",
        "tags": [
          "ClusterResources"
        ],
        "description": "Gets the CPU, memory, and disk usage statistics for each Cassandra node in a cluster.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "Managed Cassandra cluster name.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 100,
            "pattern": "^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/CassandraClusterPublicStatus"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBManagedCassandraStatus": {
            "$ref": "./examples/CosmosDBManagedCassandraStatus.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts": {
      "get": {
        "operationId": "DatabaseAccounts_ListByResourceGroup",
        "tags": [
          "DatabaseAccounts"
        ],
        "description": "Lists all the Azure Cosmos DB database accounts available under the given resource group.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DatabaseAccountsListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBDatabaseAccountListByResourceGroup": {
            "$ref": "./examples/CosmosDBDatabaseAccountListByResourceGroup.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}": {
      "get": {
        "operationId": "DatabaseAccounts_Get",
        "tags": [
          "DatabaseAccounts"
        ],
        "description": "Retrieves the properties of an existing Azure Cosmos DB database account.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "Cosmos DB database account name.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DatabaseAccountGetResults"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBDatabaseAccountGet": {
            "$ref": "./examples/CosmosDBDatabaseAccountGet.json"
          }
        }
      },
      "put": {
        "operationId": "DatabaseAccounts_CreateOrUpdate",
        "tags": [
          "DatabaseAccounts"
        ],
        "description": "Creates or updates an Azure Cosmos DB database account. The \"Update\" method is preferred when performing updates on an account.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "Cosmos DB database account name.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "createUpdateParameters",
            "in": "body",
            "description": "The parameters to provide for the current database account.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DatabaseAccountCreateUpdateParameters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'DatabaseAccountGetResults' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/DatabaseAccountGetResults"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBDatabaseAccountCreateMax": {
            "$ref": "./examples/CosmosDBDatabaseAccountCreateMax.json"
          },
          "CosmosDBDatabaseAccountCreateMin": {
            "$ref": "./examples/CosmosDBDatabaseAccountCreateMin.json"
          },
          "CosmosDBRestoreDatabaseAccountCreateUpdate.json": {
            "$ref": "./examples/CosmosDBRestoreDatabaseAccountCreateUpdate.json"
          }
        }
      },
      "patch": {
        "operationId": "DatabaseAccounts_Update",
        "tags": [
          "DatabaseAccounts"
        ],
        "description": "Updates the properties of an existing Azure Cosmos DB database account.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "Cosmos DB database account name.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "updateParameters",
            "in": "body",
            "description": "The parameters to provide for the current database account.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DatabaseAccountUpdateParameters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DatabaseAccountGetResults"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBDatabaseAccountPatch": {
            "$ref": "./examples/CosmosDBDatabaseAccountPatch.json"
          }
        }
      },
      "delete": {
        "operationId": "DatabaseAccounts_Delete",
        "tags": [
          "DatabaseAccounts"
        ],
        "description": "Deletes an existing Azure Cosmos DB database account.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "Cosmos DB database account name.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBDatabaseAccountDelete": {
            "$ref": "./examples/CosmosDBDatabaseAccountDelete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/cassandraKeyspaces": {
      "get": {
        "operationId": "CassandraResources_ListCassandraKeyspaces",
        "tags": [
          "CassandraKeyspaceGetResultsOperationGroup"
        ],
        "description": "Lists the Cassandra keyspaces under an existing Azure Cosmos DB database account.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "Cosmos DB database account name.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/CassandraKeyspaceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBCassandraKeyspaceList": {
            "$ref": "./examples/CosmosDBCassandraKeyspaceList.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/cassandraKeyspaces/{keyspaceName}": {
      "get": {
        "operationId": "CassandraResources_GetCassandraKeyspace",
        "tags": [
          "CassandraKeyspaceGetResultsOperationGroup"
        ],
        "description": "Gets the Cassandra keyspaces under an existing Azure Cosmos DB database account with the provided name.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "Cosmos DB database account name.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "keyspaceName",
            "in": "path",
            "description": "Cosmos DB keyspace name.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/CassandraKeyspaceGetResults"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBCassandraKeyspaceGet": {
            "$ref": "./examples/CosmosDBCassandraKeyspaceGet.json"
          }
        }
      },
      "put": {
        "operationId": "CassandraResources_CreateUpdateCassandraKeyspace",
        "tags": [
          "CassandraKeyspaceGetResultsOperationGroup"
        ],
        "description": "Create or update an Azure Cosmos DB Cassandra keyspace",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "Cosmos DB database account name.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "keyspaceName",
            "in": "path",
            "description": "Cosmos DB keyspace name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "createUpdateCassandraKeyspaceParameters",
            "in": "body",
            "description": "The parameters to provide for the current Cassandra keyspace.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CassandraKeyspaceCreateUpdateParameters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'CassandraKeyspaceGetResults' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/CassandraKeyspaceGetResults"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBCassandraKeyspaceCreateUpdate": {
            "$ref": "./examples/CosmosDBCassandraKeyspaceCreateUpdate.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location",
          "final-state-schema": "#/definitions/CassandraKeyspaceGetResults"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "CassandraResources_DeleteCassandraKeyspace",
        "tags": [
          "CassandraKeyspaceGetResultsOperationGroup"
        ],
        "description": "Deletes an existing Azure Cosmos DB Cassandra keyspace.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "Cosmos DB database account name.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "keyspaceName",
            "in": "path",
            "description": "Cosmos DB keyspace name.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBCassandraKeyspaceDelete": {
            "$ref": "./examples/CosmosDBCassandraKeyspaceDelete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/cassandraKeyspaces/{keyspaceName}/tables": {
      "get": {
        "operationId": "CassandraResources_ListCassandraTables",
        "tags": [
          "CassandraTableGetResultsOperationGroup"
        ],
        "description": "Lists the Cassandra table under an existing Azure Cosmos DB database account.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "Cosmos DB database account name.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "keyspaceName",
            "in": "path",
            "description": "Cosmos DB keyspace name.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/CassandraTableListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBCassandraTableList": {
            "$ref": "./examples/CosmosDBCassandraTableList.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/cassandraKeyspaces/{keyspaceName}/tables/{tableName}": {
      "get": {
        "operationId": "CassandraResources_GetCassandraTable",
        "tags": [
          "CassandraTableGetResultsOperationGroup"
        ],
        "description": "Gets the Cassandra table under an existing Azure Cosmos DB database account.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "Cosmos DB database account name.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "keyspaceName",
            "in": "path",
            "description": "Cosmos DB keyspace name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "tableName",
            "in": "path",
            "description": "Cosmos DB table name.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/CassandraTableGetResults"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBCassandraTableGet": {
            "$ref": "./examples/CosmosDBCassandraTableGet.json"
          }
        }
      },
      "put": {
        "operationId": "CassandraResources_CreateUpdateCassandraTable",
        "tags": [
          "CassandraTableGetResultsOperationGroup"
        ],
        "description": "Create or update an Azure Cosmos DB Cassandra Table",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "Cosmos DB database account name.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "keyspaceName",
            "in": "path",
            "description": "Cosmos DB keyspace name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "tableName",
            "in": "path",
            "description": "Cosmos DB table name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "createUpdateCassandraTableParameters",
            "in": "body",
            "description": "The parameters to provide for the current Cassandra Table.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CassandraTableCreateUpdateParameters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'CassandraTableGetResults' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/CassandraTableGetResults"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBCassandraTableCreateUpdate": {
            "$ref": "./examples/CosmosDBCassandraTableCreateUpdate.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location",
          "final-state-schema": "#/definitions/CassandraTableGetResults"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "CassandraResources_DeleteCassandraTable",
        "tags": [
          "CassandraTableGetResultsOperationGroup"
        ],
        "description": "Deletes an existing Azure Cosmos DB Cassandra table.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "Cosmos DB database account name.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "keyspaceName",
            "in": "path",
            "description": "Cosmos DB keyspace name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "tableName",
            "in": "path",
            "description": "Cosmos DB table name.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBCassandraTableDelete": {
            "$ref": "./examples/CosmosDBCassandraTableDelete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/cassandraKeyspaces/{keyspaceName}/tables/{tableName}/throughputSettings/default": {
      "get": {
        "operationId": "CassandraResources_GetCassandraTableThroughput",
        "tags": [
          "CassandraResourcesThroughputSettingsGetResultsOperationGroup"
        ],
        "description": "Gets the RUs per second of the Cassandra table under an existing Azure Cosmos DB database account with the provided name.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "Cosmos DB database account name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "keyspaceName",
            "in": "path",
            "description": "Cosmos DB keyspace name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "tableName",
            "in": "path",
            "description": "Cosmos DB table name.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ThroughputSettingsGetResults"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBCassandraTableThroughputGet": {
            "$ref": "./examples/CosmosDBCassandraTableThroughputGet.json"
          }
        }
      },
      "put": {
        "operationId": "CassandraResources_UpdateCassandraTableThroughput",
        "tags": [
          "CassandraResourcesThroughputSettingsGetResultsOperationGroup"
        ],
        "description": "Update RUs per second of an Azure Cosmos DB Cassandra table",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "Cosmos DB database account name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "keyspaceName",
            "in": "path",
            "description": "Cosmos DB keyspace name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "tableName",
            "in": "path",
            "description": "Cosmos DB table name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "updateThroughputParameters",
            "in": "body",
            "description": "The RUs per second of the parameters to provide for the current Cassandra table.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ThroughputSettingsUpdateParameters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'ThroughputSettingsGetResults' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/ThroughputSettingsGetResults"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBCassandraTableThroughputUpdate": {
            "$ref": "./examples/CosmosDBCassandraTableThroughputUpdate.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location",
          "final-state-schema": "#/definitions/ThroughputSettingsGetResults"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/cassandraKeyspaces/{keyspaceName}/tables/{tableName}/throughputSettings/default/migrateToAutoscale": {
      "post": {
        "operationId": "CassandraResources_MigrateCassandraTableToAutoscale",
        "tags": [
          "CassandraResourcesThroughputSettingsGetResultsOperationGroup"
        ],
        "description": "Migrate an Azure Cosmos DB Cassandra table from manual throughput to autoscale",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "Cosmos DB database account name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "keyspaceName",
            "in": "path",
            "description": "Cosmos DB keyspace name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "tableName",
            "in": "path",
            "description": "Cosmos DB table name.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ThroughputSettingsGetResults"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBCassandraTableMigrateToAutoscale": {
            "$ref": "./examples/CosmosDBCassandraTableMigrateToAutoscale.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location",
          "final-state-schema": "#/definitions/ThroughputSettingsGetResults"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/cassandraKeyspaces/{keyspaceName}/tables/{tableName}/throughputSettings/default/migrateToManualThroughput": {
      "post": {
        "operationId": "CassandraResources_MigrateCassandraTableToManualThroughput",
        "tags": [
          "CassandraResourcesThroughputSettingsGetResultsOperationGroup"
        ],
        "description": "Migrate an Azure Cosmos DB Cassandra table from autoscale to manual throughput",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "Cosmos DB database account name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "keyspaceName",
            "in": "path",
            "description": "Cosmos DB keyspace name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "tableName",
            "in": "path",
            "description": "Cosmos DB table name.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ThroughputSettingsGetResults"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBCassandraTableMigrateToManualThroughput": {
            "$ref": "./examples/CosmosDBCassandraTableMigrateToManualThroughput.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location",
          "final-state-schema": "#/definitions/ThroughputSettingsGetResults"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/cassandraKeyspaces/{keyspaceName}/throughputSettings/default": {
      "get": {
        "operationId": "CassandraResources_GetCassandraKeyspaceThroughput",
        "tags": [
          "CassandraResources"
        ],
        "description": "Gets the RUs per second of the Cassandra Keyspace under an existing Azure Cosmos DB database account with the provided name.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "Cosmos DB database account name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "keyspaceName",
            "in": "path",
            "description": "Cosmos DB keyspace name.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ThroughputSettingsGetResults"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBCassandraKeyspaceThroughputGet": {
            "$ref": "./examples/CosmosDBCassandraKeyspaceThroughputGet.json"
          }
        }
      },
      "put": {
        "operationId": "CassandraResources_UpdateCassandraKeyspaceThroughput",
        "tags": [
          "CassandraResources"
        ],
        "description": "Update RUs per second of an Azure Cosmos DB Cassandra Keyspace",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "Cosmos DB database account name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "keyspaceName",
            "in": "path",
            "description": "Cosmos DB keyspace name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "updateThroughputParameters",
            "in": "body",
            "description": "The RUs per second of the parameters to provide for the current Cassandra Keyspace.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ThroughputSettingsUpdateParameters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'ThroughputSettingsGetResults' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/ThroughputSettingsGetResults"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBCassandraKeyspaceThroughputUpdate": {
            "$ref": "./examples/CosmosDBCassandraKeyspaceThroughputUpdate.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location",
          "final-state-schema": "#/definitions/ThroughputSettingsGetResults"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/cassandraKeyspaces/{keyspaceName}/throughputSettings/default/migrateToAutoscale": {
      "post": {
        "operationId": "CassandraResources_MigrateCassandraKeyspaceToAutoscale",
        "tags": [
          "CassandraResources"
        ],
        "description": "Migrate an Azure Cosmos DB Cassandra Keyspace from manual throughput to autoscale",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "Cosmos DB database account name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "keyspaceName",
            "in": "path",
            "description": "Cosmos DB keyspace name.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ThroughputSettingsGetResults"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBCassandraKeyspaceMigrateToAutoscale": {
            "$ref": "./examples/CosmosDBCassandraKeyspaceMigrateToAutoscale.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location",
          "final-state-schema": "#/definitions/ThroughputSettingsGetResults"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/cassandraKeyspaces/{keyspaceName}/throughputSettings/default/migrateToManualThroughput": {
      "post": {
        "operationId": "CassandraResources_MigrateCassandraKeyspaceToManualThroughput",
        "tags": [
          "CassandraResources"
        ],
        "description": "Migrate an Azure Cosmos DB Cassandra Keyspace from autoscale to manual throughput",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "Cosmos DB database account name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "keyspaceName",
            "in": "path",
            "description": "Cosmos DB keyspace name.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ThroughputSettingsGetResults"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBCassandraKeyspaceMigrateToManualThroughput": {
            "$ref": "./examples/CosmosDBCassandraKeyspaceMigrateToManualThroughput.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location",
          "final-state-schema": "#/definitions/ThroughputSettingsGetResults"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/cassandraKeyspaces/{keyspaceName}/views": {
      "get": {
        "operationId": "CassandraResources_ListCassandraViews",
        "tags": [
          "CassandraViewGetResultsOperationGroup"
        ],
        "description": "Lists the Cassandra materialized views under an existing Azure Cosmos DB database account.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "Cosmos DB database account name.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "keyspaceName",
            "in": "path",
            "description": "Cosmos DB keyspace name.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/CassandraViewListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBCassandraViewList": {
            "$ref": "./examples/CosmosDBCassandraViewList.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/cassandraKeyspaces/{keyspaceName}/views/{viewName}": {
      "get": {
        "operationId": "CassandraResources_GetCassandraView",
        "tags": [
          "CassandraViewGetResultsOperationGroup"
        ],
        "description": "Gets the Cassandra view under an existing Azure Cosmos DB database account.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "Cosmos DB database account name.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "keyspaceName",
            "in": "path",
            "description": "Cosmos DB keyspace name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "viewName",
            "in": "path",
            "description": "Cosmos DB view name.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/CassandraViewGetResults"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBCassandraViewGet": {
            "$ref": "./examples/CosmosDBCassandraViewGet.json"
          }
        }
      },
      "put": {
        "operationId": "CassandraResources_CreateUpdateCassandraView",
        "tags": [
          "CassandraViewGetResultsOperationGroup"
        ],
        "description": "Create or update an Azure Cosmos DB Cassandra View",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "Cosmos DB database account name.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "keyspaceName",
            "in": "path",
            "description": "Cosmos DB keyspace name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "viewName",
            "in": "path",
            "description": "Cosmos DB view name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "createUpdateCassandraViewParameters",
            "in": "body",
            "description": "The parameters to provide for the current Cassandra View.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CassandraViewCreateUpdateParameters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'CassandraViewGetResults' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/CassandraViewGetResults"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBCassandraViewCreateUpdate": {
            "$ref": "./examples/CosmosDBCassandraViewCreateUpdate.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location",
          "final-state-schema": "#/definitions/CassandraViewGetResults"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "CassandraResources_DeleteCassandraView",
        "tags": [
          "CassandraViewGetResultsOperationGroup"
        ],
        "description": "Deletes an existing Azure Cosmos DB Cassandra view.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "Cosmos DB database account name.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "keyspaceName",
            "in": "path",
            "description": "Cosmos DB keyspace name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "viewName",
            "in": "path",
            "description": "Cosmos DB view name.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBCassandraViewDelete": {
            "$ref": "./examples/CosmosDBCassandraViewDelete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location",
          "final-state-schema": "#/definitions/CassandraViewGetResults"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/cassandraKeyspaces/{keyspaceName}/views/{viewName}/throughputSettings/default": {
      "get": {
        "operationId": "CassandraResources_GetCassandraViewThroughput",
        "tags": [
          "ViewCassandraResourcesThroughputSettingsGetResultsOperationGroup"
        ],
        "description": "Gets the RUs per second of the Cassandra view under an existing Azure Cosmos DB database account with the provided name.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "Cosmos DB database account name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "keyspaceName",
            "in": "path",
            "description": "Cosmos DB keyspace name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "viewName",
            "in": "path",
            "description": "Cosmos DB view name.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ThroughputSettingsGetResults"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBCassandraViewThroughputGet": {
            "$ref": "./examples/CosmosDBCassandraViewThroughputGet.json"
          }
        }
      },
      "put": {
        "operationId": "CassandraResources_UpdateCassandraViewThroughput",
        "tags": [
          "ViewCassandraResourcesThroughputSettingsGetResultsOperationGroup"
        ],
        "description": "Update RUs per second of an Azure Cosmos DB Cassandra view",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "Cosmos DB database account name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "keyspaceName",
            "in": "path",
            "description": "Cosmos DB keyspace name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "viewName",
            "in": "path",
            "description": "Cosmos DB view name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "updateThroughputParameters",
            "in": "body",
            "description": "The RUs per second of the parameters to provide for the current Cassandra view.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ThroughputSettingsUpdateParameters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'ThroughputSettingsGetResults' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/ThroughputSettingsGetResults"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBCassandraViewThroughputUpdate": {
            "$ref": "./examples/CosmosDBCassandraViewThroughputUpdate.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location",
          "final-state-schema": "#/definitions/ThroughputSettingsGetResults"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/cassandraKeyspaces/{keyspaceName}/views/{viewName}/throughputSettings/default/migrateToAutoscale": {
      "post": {
        "operationId": "CassandraResources_MigrateCassandraViewToAutoscale",
        "tags": [
          "ViewCassandraResourcesThroughputSettingsGetResultsOperationGroup"
        ],
        "description": "Migrate an Azure Cosmos DB Cassandra view from manual throughput to autoscale",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "Cosmos DB database account name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "keyspaceName",
            "in": "path",
            "description": "Cosmos DB keyspace name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "viewName",
            "in": "path",
            "description": "Cosmos DB view name.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ThroughputSettingsGetResults"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBCassandraViewMigrateToAutoscale": {
            "$ref": "./examples/CosmosDBCassandraViewMigrateToAutoscale.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location",
          "final-state-schema": "#/definitions/ThroughputSettingsGetResults"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/cassandraKeyspaces/{keyspaceName}/views/{viewName}/throughputSettings/default/migrateToManualThroughput": {
      "post": {
        "operationId": "CassandraResources_MigrateCassandraViewToManualThroughput",
        "tags": [
          "ViewCassandraResourcesThroughputSettingsGetResultsOperationGroup"
        ],
        "description": "Migrate an Azure Cosmos DB Cassandra view from autoscale to manual throughput",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "Cosmos DB database account name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "keyspaceName",
            "in": "path",
            "description": "Cosmos DB keyspace name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "viewName",
            "in": "path",
            "description": "Cosmos DB view name.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ThroughputSettingsGetResults"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBCassandraViewMigrateToManualThroughput": {
            "$ref": "./examples/CosmosDBCassandraViewMigrateToManualThroughput.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location",
          "final-state-schema": "#/definitions/ThroughputSettingsGetResults"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/cassandraRoleAssignments": {
      "get": {
        "operationId": "CassandraResources_ListCassandraRoleAssignments",
        "tags": [
          "CassandraRoleAssignmentResources"
        ],
        "description": "Retrieves the list of all Azure Cosmos DB Cassandra Role Assignments.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "Cosmos DB database account name.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/CassandraRoleAssignmentResourceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBCassandraRoleAssignmentList": {
            "$ref": "./examples/cassandrarbac/CosmosDBCassandraRoleAssignmentList.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/cassandraRoleAssignments/{roleAssignmentId}": {
      "get": {
        "operationId": "CassandraResources_GetCassandraRoleAssignment",
        "tags": [
          "CassandraRoleAssignmentResources"
        ],
        "description": "Retrieves the properties of an existing Azure Cosmos DB Cassandra Role Assignment with the given Id.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "Cosmos DB database account name.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "roleAssignmentId",
            "in": "path",
            "description": "The GUID for the Role Assignment.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/CassandraRoleAssignmentResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBCassandraRoleAssignmentGet": {
            "$ref": "./examples/cassandrarbac/CosmosDBCassandraRoleAssignmentGet.json"
          }
        }
      },
      "put": {
        "operationId": "CassandraResources_CreateUpdateCassandraRoleAssignment",
        "tags": [
          "CassandraRoleAssignmentResources"
        ],
        "description": "Creates or updates an Azure Cosmos DB Cassandra Role Assignment.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "Cosmos DB database account name.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "roleAssignmentId",
            "in": "path",
            "description": "The GUID for the Role Assignment.",
            "required": true,
            "type": "string"
          },
          {
            "name": "createUpdateCassandraRoleAssignmentParameters",
            "in": "body",
            "description": "The properties required to create or update a Role Assignment.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CassandraRoleAssignmentResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'CassandraRoleAssignmentResource' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/CassandraRoleAssignmentResource"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBCassandraRoleAssignmentCreateUpdate": {
            "$ref": "./examples/cassandrarbac/CosmosDBCassandraRoleAssignmentCreateUpdate.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location",
          "final-state-schema": "#/definitions/CassandraRoleAssignmentResource"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "CassandraResources_DeleteCassandraRoleAssignment",
        "tags": [
          "CassandraRoleAssignmentResources"
        ],
        "description": "Deletes an existing Azure Cosmos DB Cassandra Role Assignment.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "Cosmos DB database account name.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "roleAssignmentId",
            "in": "path",
            "description": "The GUID for the Role Assignment.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBCassandraRoleAssignmentDelete": {
            "$ref": "./examples/cassandrarbac/CosmosDBCassandraRoleAssignmentDelete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/cassandraRoleDefinitions": {
      "get": {
        "operationId": "CassandraResources_ListCassandraRoleDefinitions",
        "tags": [
          "CassandraRoleDefinitionResources"
        ],
        "description": "Retrieves the list of all Azure Cosmos DB Cassandra Role Definitions.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "Cosmos DB database account name.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/CassandraRoleDefinitionResourceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBCassandraRoleDefinitionList": {
            "$ref": "./examples/cassandrarbac/CosmosDBCassandraRoleDefinitionList.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/cassandraRoleDefinitions/{roleDefinitionId}": {
      "get": {
        "operationId": "CassandraResources_GetCassandraRoleDefinition",
        "tags": [
          "CassandraRoleDefinitionResources"
        ],
        "description": "Retrieves the properties of an existing Azure Cosmos DB Cassandra Role Definition with the given Id.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "Cosmos DB database account name.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "roleDefinitionId",
            "in": "path",
            "description": "The GUID for the Role Definition.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/CassandraRoleDefinitionResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBCassandraRoleDefinitionGet": {
            "$ref": "./examples/cassandrarbac/CosmosDBCassandraRoleDefinitionGet.json"
          }
        }
      },
      "put": {
        "operationId": "CassandraResources_CreateUpdateCassandraRoleDefinition",
        "tags": [
          "CassandraRoleDefinitionResources"
        ],
        "description": "Creates or updates an Azure Cosmos DB Cassandra Role Definition.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "Cosmos DB database account name.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "roleDefinitionId",
            "in": "path",
            "description": "The GUID for the Role Definition.",
            "required": true,
            "type": "string"
          },
          {
            "name": "createUpdateCassandraRoleDefinitionParameters",
            "in": "body",
            "description": "The properties required to create or update a Role Definition.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CassandraRoleDefinitionResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'CassandraRoleDefinitionResource' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/CassandraRoleDefinitionResource"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBCassandraRoleDefinitionCreateUpdate": {
            "$ref": "./examples/cassandrarbac/CosmosDBCassandraRoleDefinitionCreateUpdate.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location",
          "final-state-schema": "#/definitions/CassandraRoleDefinitionResource"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "CassandraResources_DeleteCassandraRoleDefinition",
        "tags": [
          "CassandraRoleDefinitionResources"
        ],
        "description": "Deletes an existing Azure Cosmos DB Cassandra Role Definition.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "Cosmos DB database account name.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "roleDefinitionId",
            "in": "path",
            "description": "The GUID for the Role Definition.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBCassandraRoleDefinitionDelete": {
            "$ref": "./examples/cassandrarbac/CosmosDBCassandraRoleDefinitionDelete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/chaosFaults": {
      "get": {
        "operationId": "ChaosFault_List",
        "tags": [
          "ChaosFaultResources"
        ],
        "description": "List Chaos Faults for CosmosDB account.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "Cosmos DB database account name.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ChaosFaultListResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ChaosFaultList": {
            "$ref": "./examples/ChaosFaultList.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/chaosFaults/{chaosFault}": {
      "get": {
        "operationId": "ChaosFault_Get",
        "tags": [
          "ChaosFaultResources"
        ],
        "description": "Get Chaos Fault for a CosmosdB account for a particular Chaos Fault.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "Cosmos DB database account name.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "chaosFault",
            "in": "path",
            "description": "The name of the ChaosFault.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ChaosFaultResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ChaosFaultGet": {
            "$ref": "./examples/ChaosFaultGet.json"
          }
        }
      },
      "put": {
        "operationId": "ChaosFault_EnableDisable",
        "tags": [
          "ChaosFaultResources"
        ],
        "description": "Enable, disable Chaos Fault in a CosmosDB account.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "Cosmos DB database account name.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "chaosFault",
            "in": "path",
            "description": "The name of the ChaosFault.",
            "required": true,
            "type": "string"
          },
          {
            "name": "chaosFaultRequest",
            "in": "body",
            "description": "A request object to enable/disable the chaos fault.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ChaosFaultResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'ChaosFaultResource' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/ChaosFaultResource"
            }
          },
          "201": {
            "description": "Resource 'ChaosFaultResource' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/ChaosFaultResource"
            },
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ChaosFaultEnableDisable": {
            "$ref": "./examples/ChaosFaultEnableDisable.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location",
          "final-state-schema": "#/definitions/ChaosFaultResource"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/copyJobs": {
      "get": {
        "operationId": "CopyJobs_ListByDatabaseAccount",
        "tags": [
          "CopyJobs"
        ],
        "description": "Get a list of Copy jobs.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "Cosmos DB database account name.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/CopyJobFeedResults"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBCopyJobFeed": {
            "$ref": "./examples/copy-jobs/CosmosDBCopyJobFeed.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/copyJobs/{jobName}": {
      "get": {
        "operationId": "CopyJobs_Get",
        "tags": [
          "CopyJobs"
        ],
        "description": "Get a Copy Job.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "Cosmos DB database account name.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "jobName",
            "in": "path",
            "description": "Name of the Copy Job",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/CopyJobGetResults"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBCopyJobGet": {
            "$ref": "./examples/copy-jobs/CosmosDBCopyJobGet.json"
          }
        }
      },
      "put": {
        "operationId": "CopyJobs_Create",
        "tags": [
          "CopyJobs"
        ],
        "description": "Creates a Copy Job.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "Cosmos DB database account name.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "jobName",
            "in": "path",
            "description": "Name of the Copy Job",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*$"
          },
          {
            "name": "jobCreateParameters",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CopyJobGetResults"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'CopyJobGetResults' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/CopyJobGetResults"
            }
          },
          "201": {
            "description": "Resource 'CopyJobGetResults' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/CopyJobGetResults"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBCopyJobCreate": {
            "$ref": "./examples/copy-jobs/CosmosDBCopyJobCreate.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/copyJobs/{jobName}/cancel": {
      "post": {
        "operationId": "CopyJobs_Cancel",
        "tags": [
          "CopyJobs"
        ],
        "description": "Cancels a Copy Job.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "Cosmos DB database account name.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "jobName",
            "in": "path",
            "description": "Name of the Copy Job",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/CopyJobGetResults"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBCopyJobCancel": {
            "$ref": "./examples/copy-jobs/CosmosDBCopyJobCancel.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/copyJobs/{jobName}/complete": {
      "post": {
        "operationId": "CopyJobs_Complete",
        "tags": [
          "CopyJobs"
        ],
        "description": "Completes an Online Copy Job.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "Cosmos DB database account name.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "jobName",
            "in": "path",
            "description": "Name of the Copy Job",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/CopyJobGetResults"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBCopyJobComplete": {
            "$ref": "./examples/copy-jobs/CosmosDBCopyJobComplete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/copyJobs/{jobName}/pause": {
      "post": {
        "operationId": "CopyJobs_Pause",
        "tags": [
          "CopyJobs"
        ],
        "description": "Pause a Copy Job.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "Cosmos DB database account name.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "jobName",
            "in": "path",
            "description": "Name of the Copy Job",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/CopyJobGetResults"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBCopyJobPause": {
            "$ref": "./examples/copy-jobs/CosmosDBCopyJobPause.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/copyJobs/{jobName}/resume": {
      "post": {
        "operationId": "CopyJobs_Resume",
        "tags": [
          "CopyJobs"
        ],
        "description": "Resumes a Copy Job.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "Cosmos DB database account name.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "jobName",
            "in": "path",
            "description": "Name of the Copy Job",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/CopyJobGetResults"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBCopyJobResume": {
            "$ref": "./examples/copy-jobs/CosmosDBCopyJobResume.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/dataTransferJobs": {
      "get": {
        "operationId": "DataTransferJobs_ListByDatabaseAccount",
        "tags": [
          "DataTransferJobs"
        ],
        "description": "Get a list of Data Transfer jobs.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "Cosmos DB database account name.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DataTransferJobFeedResults"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBDataTransferJobFeed": {
            "$ref": "./examples/data-transfer-service/CosmosDBDataTransferJobFeed.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/dataTransferJobs/{jobName}": {
      "get": {
        "operationId": "DataTransferJobs_Get",
        "tags": [
          "DataTransferJobs"
        ],
        "description": "Get a Data Transfer Job.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "Cosmos DB database account name.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "jobName",
            "in": "path",
            "description": "Name of the Data Transfer Job",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DataTransferJobGetResults"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBDataTransferJobGet": {
            "$ref": "./examples/data-transfer-service/CosmosDBDataTransferJobGet.json"
          }
        }
      },
      "put": {
        "operationId": "DataTransferJobs_Create",
        "tags": [
          "DataTransferJobs"
        ],
        "description": "Creates a Data Transfer Job.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "Cosmos DB database account name.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "jobName",
            "in": "path",
            "description": "Name of the Data Transfer Job",
            "required": true,
            "type": "string"
          },
          {
            "name": "jobCreateParameters",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateJobRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'DataTransferJobGetResults' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/DataTransferJobGetResults"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBDataTransferJobCreate": {
            "$ref": "./examples/data-transfer-service/CosmosDBDataTransferJobCreate.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/dataTransferJobs/{jobName}/cancel": {
      "post": {
        "operationId": "DataTransferJobs_Cancel",
        "tags": [
          "DataTransferJobs"
        ],
        "description": "Cancels a Data Transfer Job.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "Cosmos DB database account name.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "jobName",
            "in": "path",
            "description": "Name of the Data Transfer Job",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DataTransferJobGetResults"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBDataTransferJobCancel": {
            "$ref": "./examples/data-transfer-service/CosmosDBDataTransferJobCancel.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/dataTransferJobs/{jobName}/complete": {
      "post": {
        "operationId": "DataTransferJobs_Complete",
        "tags": [
          "DataTransferJobs"
        ],
        "description": "Completes a Data Transfer Online Job.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "Cosmos DB database account name.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "jobName",
            "in": "path",
            "description": "Name of the Data Transfer Job",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DataTransferJobGetResults"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBDataTransferJobComplete": {
            "$ref": "./examples/data-transfer-service/CosmosDBDataTransferJobComplete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/dataTransferJobs/{jobName}/pause": {
      "post": {
        "operationId": "DataTransferJobs_Pause",
        "tags": [
          "DataTransferJobs"
        ],
        "description": "Pause a Data Transfer Job.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "Cosmos DB database account name.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "jobName",
            "in": "path",
            "description": "Name of the Data Transfer Job",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DataTransferJobGetResults"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBDataTransferJobPause": {
            "$ref": "./examples/data-transfer-service/CosmosDBDataTransferJobPause.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/dataTransferJobs/{jobName}/resume": {
      "post": {
        "operationId": "DataTransferJobs_Resume",
        "tags": [
          "DataTransferJobs"
        ],
        "description": "Resumes a Data Transfer Job.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "Cosmos DB database account name.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "jobName",
            "in": "path",
            "description": "Name of the Data Transfer Job",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DataTransferJobGetResults"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBDataTransferJobResume": {
            "$ref": "./examples/data-transfer-service/CosmosDBDataTransferJobResume.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/databases/{databaseRid}/collections/{collectionRid}/metricDefinitions": {
      "get": {
        "operationId": "Collection_ListMetricDefinitions",
        "tags": [
          "DatabaseAccounts"
        ],
        "description": "Retrieves metric definitions for the given collection.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "Cosmos DB database account name.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "databaseRid",
            "in": "path",
            "description": "Cosmos DB database rid.",
            "required": true,
            "type": "string"
          },
          {
            "name": "collectionRid",
            "in": "path",
            "description": "Cosmos DB collection rid.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/MetricDefinitionsListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBCollectionGetMetricDefinitions": {
            "$ref": "./examples/CosmosDBCollectionGetMetricDefinitions.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/databases/{databaseRid}/collections/{collectionRid}/metrics": {
      "get": {
        "operationId": "Collection_ListMetrics",
        "tags": [
          "DatabaseAccounts"
        ],
        "description": "Retrieves the metrics determined by the given filter for the given database account and collection.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "Cosmos DB database account name.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "databaseRid",
            "in": "path",
            "description": "Cosmos DB database rid.",
            "required": true,
            "type": "string"
          },
          {
            "name": "collectionRid",
            "in": "path",
            "description": "Cosmos DB collection rid.",
            "required": true,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "An OData filter expression that describes a subset of metrics to return. The parameters that can be filtered are name.value (name of the metric, can have an or of multiple names), startTime, endTime, and timeGrain. The supported operator is eq.",
            "required": true,
            "type": "string",
            "x-ms-client-name": "filter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/MetricListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBCollectionGetMetrics": {
            "$ref": "./examples/CosmosDBCollectionGetMetrics.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/databases/{databaseRid}/collections/{collectionRid}/partitionKeyRangeId/{partitionKeyRangeId}/metrics": {
      "get": {
        "operationId": "PartitionKeyRangeId_ListMetrics",
        "tags": [
          "DatabaseAccounts"
        ],
        "description": "Retrieves the metrics determined by the given filter for the given partition key range id.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "Cosmos DB database account name.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "databaseRid",
            "in": "path",
            "description": "Cosmos DB database rid.",
            "required": true,
            "type": "string"
          },
          {
            "name": "collectionRid",
            "in": "path",
            "description": "Cosmos DB collection rid.",
            "required": true,
            "type": "string"
          },
          {
            "name": "partitionKeyRangeId",
            "in": "path",
            "description": "Partition Key Range Id for which to get data.",
            "required": true,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "An OData filter expression that describes a subset of metrics to return. The parameters that can be filtered are name.value (name of the metric, can have an or of multiple names), startTime, endTime, and timeGrain. The supported operator is eq.",
            "required": true,
            "type": "string",
            "x-ms-client-name": "filter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/PartitionMetricListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBDatabaseAccountRegionGetMetrics": {
            "$ref": "./examples/CosmosDBPKeyRangeIdGetMetrics.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/databases/{databaseRid}/collections/{collectionRid}/partitions/metrics": {
      "get": {
        "operationId": "CollectionPartition_ListMetrics",
        "tags": [
          "DatabaseAccounts"
        ],
        "description": "Retrieves the metrics determined by the given filter for the given collection, split by partition.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "Cosmos DB database account name.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "databaseRid",
            "in": "path",
            "description": "Cosmos DB database rid.",
            "required": true,
            "type": "string"
          },
          {
            "name": "collectionRid",
            "in": "path",
            "description": "Cosmos DB collection rid.",
            "required": true,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "An OData filter expression that describes a subset of metrics to return. The parameters that can be filtered are name.value (name of the metric, can have an or of multiple names), startTime, endTime, and timeGrain. The supported operator is eq.",
            "required": true,
            "type": "string",
            "x-ms-client-name": "filter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/PartitionMetricListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBDatabaseAccountRegionGetMetrics": {
            "$ref": "./examples/CosmosDBCollectionPartitionGetMetrics.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/databases/{databaseRid}/collections/{collectionRid}/partitions/usages": {
      "get": {
        "operationId": "CollectionPartition_ListUsages",
        "tags": [
          "DatabaseAccounts"
        ],
        "description": "Retrieves the usages (most recent storage data) for the given collection, split by partition.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "Cosmos DB database account name.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "databaseRid",
            "in": "path",
            "description": "Cosmos DB database rid.",
            "required": true,
            "type": "string"
          },
          {
            "name": "collectionRid",
            "in": "path",
            "description": "Cosmos DB collection rid.",
            "required": true,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "An OData filter expression that describes a subset of usages to return. The supported parameter is name.value (name of the metric, can have an or of multiple names).",
            "required": false,
            "type": "string",
            "x-ms-client-name": "filter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/PartitionUsagesResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBCollectionGetUsages": {
            "$ref": "./examples/CosmosDBCollectionPartitionGetUsages.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/databases/{databaseRid}/collections/{collectionRid}/usages": {
      "get": {
        "operationId": "Collection_ListUsages",
        "tags": [
          "DatabaseAccounts"
        ],
        "description": "Retrieves the usages (most recent storage data) for the given collection.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "Cosmos DB database account name.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "databaseRid",
            "in": "path",
            "description": "Cosmos DB database rid.",
            "required": true,
            "type": "string"
          },
          {
            "name": "collectionRid",
            "in": "path",
            "description": "Cosmos DB collection rid.",
            "required": true,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "An OData filter expression that describes a subset of usages to return. The supported parameter is name.value (name of the metric, can have an or of multiple names).",
            "required": false,
            "type": "string",
            "x-ms-client-name": "filter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/UsagesResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBCollectionGetUsages": {
            "$ref": "./examples/CosmosDBCollectionGetUsages.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/databases/{databaseRid}/metricDefinitions": {
      "get": {
        "operationId": "Database_ListMetricDefinitions",
        "tags": [
          "DatabaseAccounts"
        ],
        "description": "Retrieves metric definitions for the given database.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "Cosmos DB database account name.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "databaseRid",
            "in": "path",
            "description": "Cosmos DB database rid.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/MetricDefinitionsListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBDatabaseGetMetricDefinitions": {
            "$ref": "./examples/CosmosDBDatabaseGetMetricDefinitions.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/databases/{databaseRid}/metrics": {
      "get": {
        "operationId": "Database_ListMetrics",
        "tags": [
          "DatabaseAccounts"
        ],
        "description": "Retrieves the metrics determined by the given filter for the given database account and database.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "Cosmos DB database account name.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "databaseRid",
            "in": "path",
            "description": "Cosmos DB database rid.",
            "required": true,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "An OData filter expression that describes a subset of metrics to return. The parameters that can be filtered are name.value (name of the metric, can have an or of multiple names), startTime, endTime, and timeGrain. The supported operator is eq.",
            "required": true,
            "type": "string",
            "x-ms-client-name": "filter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/MetricListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBDatabaseGetMetrics": {
            "$ref": "./examples/CosmosDBDatabaseGetMetrics.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/databases/{databaseRid}/usages": {
      "get": {
        "operationId": "Database_ListUsages",
        "tags": [
          "DatabaseAccounts"
        ],
        "description": "Retrieves the usages (most recent data) for the given database.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "Cosmos DB database account name.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "databaseRid",
            "in": "path",
            "description": "Cosmos DB database rid.",
            "required": true,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "An OData filter expression that describes a subset of usages to return. The supported parameter is name.value (name of the metric, can have an or of multiple names).",
            "required": false,
            "type": "string",
            "x-ms-client-name": "filter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/UsagesResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBDatabaseGetUsages": {
            "$ref": "./examples/CosmosDBDatabaseGetUsages.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/failoverPriorityChange": {
      "post": {
        "operationId": "DatabaseAccounts_FailoverPriorityChange",
        "tags": [
          "DatabaseAccounts"
        ],
        "description": "Changes the failover priority for the Azure Cosmos DB database account. A failover priority of 0 indicates a write region. The maximum value for a failover priority = (total number of regions - 1). Failover priority values must be unique for each of the regions in which the database account exists.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "Cosmos DB database account name.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "failoverParameters",
            "in": "body",
            "description": "The new failover policies for the database account.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FailoverPolicies"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBDatabaseAccountFailoverPriorityChange": {
            "$ref": "./examples/CosmosDBDatabaseAccountFailoverPriorityChange.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/graphs": {
      "get": {
        "operationId": "GraphResources_ListGraphs",
        "tags": [
          "GraphResources"
        ],
        "description": "Lists the graphs under an existing Azure Cosmos DB database account.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "Cosmos DB database account name.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/GraphResourcesListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBSqlDatabaseList": {
            "$ref": "./examples/CosmosDBGraphResourceList.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/graphs/{graphName}": {
      "get": {
        "operationId": "GraphResources_GetGraph",
        "tags": [
          "GraphResources"
        ],
        "description": "Gets the Graph resource under an existing Azure Cosmos DB database account with the provided name.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "Cosmos DB database account name.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "graphName",
            "in": "path",
            "description": "Cosmos DB graph resource name.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/GraphResourceGetResults"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBSqlDatabaseGet": {
            "$ref": "./examples/CosmosDBGraphResourceGet.json"
          }
        }
      },
      "put": {
        "operationId": "GraphResources_CreateUpdateGraph",
        "tags": [
          "GraphResources"
        ],
        "description": "Create or update an Azure Cosmos DB Graph.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "Cosmos DB database account name.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "graphName",
            "in": "path",
            "description": "Cosmos DB graph resource name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "createUpdateGraphParameters",
            "in": "body",
            "description": "The parameters to provide for the current graph.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GraphResourceCreateUpdateParameters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'GraphResourceGetResults' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/GraphResourceGetResults"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBGraphCreateUpdate": {
            "$ref": "./examples/CosmosDBGraphResourceCreateUpdate.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location",
          "final-state-schema": "#/definitions/GraphResourceGetResults"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "GraphResources_DeleteGraphResource",
        "tags": [
          "GraphResources"
        ],
        "description": "Deletes an existing Azure Cosmos DB Graph Resource.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "Cosmos DB database account name.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "graphName",
            "in": "path",
            "description": "Cosmos DB graph resource name.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBSqlDatabaseDelete": {
            "$ref": "./examples/CosmosDBGraphResourceDelete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/gremlinDatabases": {
      "get": {
        "operationId": "GremlinResources_ListGremlinDatabases",
        "tags": [
          "GremlinDatabaseGetResultsOperationGroup"
        ],
        "description": "Lists the Gremlin databases under an existing Azure Cosmos DB database account.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "Cosmos DB database account name.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/GremlinDatabaseListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBGremlinDatabaseList": {
            "$ref": "./examples/CosmosDBGremlinDatabaseList.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/gremlinDatabases/{databaseName}": {
      "get": {
        "operationId": "GremlinResources_GetGremlinDatabase",
        "tags": [
          "GremlinDatabaseGetResultsOperationGroup"
        ],
        "description": "Gets the Gremlin databases under an existing Azure Cosmos DB database account with the provided name.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "Cosmos DB database account name.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "databaseName",
            "in": "path",
            "description": "Cosmos DB database name.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/GremlinDatabaseGetResults"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBGremlinDatabaseGet": {
            "$ref": "./examples/CosmosDBGremlinDatabaseGet.json"
          }
        }
      },
      "put": {
        "operationId": "GremlinResources_CreateUpdateGremlinDatabase",
        "tags": [
          "GremlinDatabaseGetResultsOperationGroup"
        ],
        "description": "Create or update an Azure Cosmos DB Gremlin database",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "Cosmos DB database account name.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "databaseName",
            "in": "path",
            "description": "Cosmos DB database name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "createUpdateGremlinDatabaseParameters",
            "in": "body",
            "description": "The parameters to provide for the current Gremlin database.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GremlinDatabaseCreateUpdateParameters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'GremlinDatabaseGetResults' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/GremlinDatabaseGetResults"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBGremlinDatabaseCreateUpdate": {
            "$ref": "./examples/CosmosDBGremlinDatabaseCreateUpdate.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location",
          "final-state-schema": "#/definitions/GremlinDatabaseGetResults"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "GremlinResources_DeleteGremlinDatabase",
        "tags": [
          "GremlinDatabaseGetResultsOperationGroup"
        ],
        "description": "Deletes an existing Azure Cosmos DB Gremlin database.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "Cosmos DB database account name.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "databaseName",
            "in": "path",
            "description": "Cosmos DB database name.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBGremlinDatabaseDelete": {
            "$ref": "./examples/CosmosDBGremlinDatabaseDelete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/gremlinDatabases/{databaseName}/graphs": {
      "get": {
        "operationId": "GremlinResources_ListGremlinGraphs",
        "tags": [
          "GremlinGraphGetResultsOperationGroup"
        ],
        "description": "Lists the Gremlin graph under an existing Azure Cosmos DB database account.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "Cosmos DB database account name.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "databaseName",
            "in": "path",
            "description": "Cosmos DB database name.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/GremlinGraphListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBGremlinGraphList": {
            "$ref": "./examples/CosmosDBGremlinGraphList.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/gremlinDatabases/{databaseName}/graphs/{graphName}": {
      "get": {
        "operationId": "GremlinResources_GetGremlinGraph",
        "tags": [
          "GremlinGraphGetResultsOperationGroup"
        ],
        "description": "Gets the Gremlin graph under an existing Azure Cosmos DB database account.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "Cosmos DB database account name.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "databaseName",
            "in": "path",
            "description": "Cosmos DB database name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "graphName",
            "in": "path",
            "description": "Cosmos DB graph name.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/GremlinGraphGetResults"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBGremlinGraphGet": {
            "$ref": "./examples/CosmosDBGremlinGraphGet.json"
          }
        }
      },
      "put": {
        "operationId": "GremlinResources_CreateUpdateGremlinGraph",
        "tags": [
          "GremlinGraphGetResultsOperationGroup"
        ],
        "description": "Create or update an Azure Cosmos DB Gremlin graph",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "Cosmos DB database account name.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "databaseName",
            "in": "path",
            "description": "Cosmos DB database name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "graphName",
            "in": "path",
            "description": "Cosmos DB graph name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "createUpdateGremlinGraphParameters",
            "in": "body",
            "description": "The parameters to provide for the current Gremlin graph.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GremlinGraphCreateUpdateParameters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'GremlinGraphGetResults' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/GremlinGraphGetResults"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBGremlinGraphCreateUpdate": {
            "$ref": "./examples/CosmosDBGremlinGraphCreateUpdate.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location",
          "final-state-schema": "#/definitions/GremlinGraphGetResults"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "GremlinResources_DeleteGremlinGraph",
        "tags": [
          "GremlinGraphGetResultsOperationGroup"
        ],
        "description": "Deletes an existing Azure Cosmos DB Gremlin graph.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "Cosmos DB database account name.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "databaseName",
            "in": "path",
            "description": "Cosmos DB database name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "graphName",
            "in": "path",
            "description": "Cosmos DB graph name.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBGremlinGraphDelete": {
            "$ref": "./examples/CosmosDBGremlinGraphDelete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/gremlinDatabases/{databaseName}/graphs/{graphName}/retrieveContinuousBackupInformation": {
      "post": {
        "operationId": "GremlinResources_RetrieveContinuousBackupInformation",
        "tags": [
          "GremlinGraphGetResultsOperationGroup"
        ],
        "description": "Retrieves continuous backup information for a gremlin graph.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "Cosmos DB database account name.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "databaseName",
            "in": "path",
            "description": "Cosmos DB database name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "graphName",
            "in": "path",
            "description": "Cosmos DB graph name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "location",
            "in": "body",
            "description": "The name of the continuous backup restore location.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ContinuousBackupRestoreLocation"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/BackupInformation"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBGremlinGraphBackupInformation": {
            "$ref": "./examples/CosmosDBGremlinGraphBackupInformation.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location",
          "final-state-schema": "#/definitions/BackupInformation"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/gremlinDatabases/{databaseName}/graphs/{graphName}/throughputSettings/default": {
      "get": {
        "operationId": "GremlinResources_GetGremlinGraphThroughput",
        "tags": [
          "GremlinResourcesThroughputSettingsGetResultsOperationGroup"
        ],
        "description": "Gets the Gremlin graph throughput under an existing Azure Cosmos DB database account with the provided name.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "Cosmos DB database account name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "databaseName",
            "in": "path",
            "description": "Cosmos DB database name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "graphName",
            "in": "path",
            "description": "Cosmos DB graph name.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ThroughputSettingsGetResults"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBGremlinGraphThroughputGet": {
            "$ref": "./examples/CosmosDBGremlinGraphThroughputGet.json"
          }
        }
      },
      "put": {
        "operationId": "GremlinResources_UpdateGremlinGraphThroughput",
        "tags": [
          "GremlinResourcesThroughputSettingsGetResultsOperationGroup"
        ],
        "description": "Update RUs per second of an Azure Cosmos DB Gremlin graph",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "Cosmos DB database account name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "databaseName",
            "in": "path",
            "description": "Cosmos DB database name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "graphName",
            "in": "path",
            "description": "Cosmos DB graph name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "updateThroughputParameters",
            "in": "body",
            "description": "The RUs per second of the parameters to provide for the current Gremlin graph.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ThroughputSettingsUpdateParameters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'ThroughputSettingsGetResults' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/ThroughputSettingsGetResults"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBGremlinGraphThroughputUpdate": {
            "$ref": "./examples/CosmosDBGremlinGraphThroughputUpdate.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location",
          "final-state-schema": "#/definitions/ThroughputSettingsGetResults"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/gremlinDatabases/{databaseName}/graphs/{graphName}/throughputSettings/default/migrateToAutoscale": {
      "post": {
        "operationId": "GremlinResources_MigrateGremlinGraphToAutoscale",
        "tags": [
          "GremlinResourcesThroughputSettingsGetResultsOperationGroup"
        ],
        "description": "Migrate an Azure Cosmos DB Gremlin graph from manual throughput to autoscale",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "Cosmos DB database account name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "databaseName",
            "in": "path",
            "description": "Cosmos DB database name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "graphName",
            "in": "path",
            "description": "Cosmos DB graph name.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ThroughputSettingsGetResults"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBGremlinGraphMigrateToAutoscale": {
            "$ref": "./examples/CosmosDBGremlinGraphMigrateToAutoscale.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location",
          "final-state-schema": "#/definitions/ThroughputSettingsGetResults"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/gremlinDatabases/{databaseName}/graphs/{graphName}/throughputSettings/default/migrateToManualThroughput": {
      "post": {
        "operationId": "GremlinResources_MigrateGremlinGraphToManualThroughput",
        "tags": [
          "GremlinResourcesThroughputSettingsGetResultsOperationGroup"
        ],
        "description": "Migrate an Azure Cosmos DB Gremlin graph from autoscale to manual throughput",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "Cosmos DB database account name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "databaseName",
            "in": "path",
            "description": "Cosmos DB database name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "graphName",
            "in": "path",
            "description": "Cosmos DB graph name.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ThroughputSettingsGetResults"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBGremlinGraphMigrateToManualThroughput": {
            "$ref": "./examples/CosmosDBGremlinGraphMigrateToManualThroughput.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location",
          "final-state-schema": "#/definitions/ThroughputSettingsGetResults"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/gremlinDatabases/{databaseName}/throughputSettings/default": {
      "get": {
        "operationId": "GremlinResources_GetGremlinDatabaseThroughput",
        "tags": [
          "GremlinResources"
        ],
        "description": "Gets the RUs per second of the Gremlin database under an existing Azure Cosmos DB database account with the provided name.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "Cosmos DB database account name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "databaseName",
            "in": "path",
            "description": "Cosmos DB database name.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ThroughputSettingsGetResults"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBGremlinDatabaseThroughputGet": {
            "$ref": "./examples/CosmosDBGremlinDatabaseThroughputGet.json"
          }
        }
      },
      "put": {
        "operationId": "GremlinResources_UpdateGremlinDatabaseThroughput",
        "tags": [
          "GremlinResources"
        ],
        "description": "Update RUs per second of an Azure Cosmos DB Gremlin database",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "Cosmos DB database account name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "databaseName",
            "in": "path",
            "description": "Cosmos DB database name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "updateThroughputParameters",
            "in": "body",
            "description": "The RUs per second of the parameters to provide for the current Gremlin database.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ThroughputSettingsUpdateParameters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'ThroughputSettingsGetResults' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/ThroughputSettingsGetResults"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBGremlinDatabaseThroughputUpdate": {
            "$ref": "./examples/CosmosDBGremlinDatabaseThroughputUpdate.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location",
          "final-state-schema": "#/definitions/ThroughputSettingsGetResults"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/gremlinDatabases/{databaseName}/throughputSettings/default/migrateToAutoscale": {
      "post": {
        "operationId": "GremlinResources_MigrateGremlinDatabaseToAutoscale",
        "tags": [
          "GremlinResources"
        ],
        "description": "Migrate an Azure Cosmos DB Gremlin database from manual throughput to autoscale",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "Cosmos DB database account name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "databaseName",
            "in": "path",
            "description": "Cosmos DB database name.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ThroughputSettingsGetResults"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBGremlinDatabaseMigrateToAutoscale": {
            "$ref": "./examples/CosmosDBGremlinDatabaseMigrateToAutoscale.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location",
          "final-state-schema": "#/definitions/ThroughputSettingsGetResults"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/gremlinDatabases/{databaseName}/throughputSettings/default/migrateToManualThroughput": {
      "post": {
        "operationId": "GremlinResources_MigrateGremlinDatabaseToManualThroughput",
        "tags": [
          "GremlinResources"
        ],
        "description": "Migrate an Azure Cosmos DB Gremlin database from autoscale to manual throughput",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "Cosmos DB database account name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "databaseName",
            "in": "path",
            "description": "Cosmos DB database name.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ThroughputSettingsGetResults"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBGremlinDatabaseMigrateToManualThroughput": {
            "$ref": "./examples/CosmosDBGremlinDatabaseMigrateToManualThroughput.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location",
          "final-state-schema": "#/definitions/ThroughputSettingsGetResults"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/gremlinRoleAssignments": {
      "get": {
        "operationId": "GremlinResources_ListGremlinRoleAssignments",
        "tags": [
          "GremlinRoleAssignmentResources"
        ],
        "description": "Retrieves the list of all Azure Cosmos DB Gremlin Role Assignments.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "Cosmos DB database account name.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/GremlinRoleAssignmentResourceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBGremlinRoleAssignmentList": {
            "$ref": "./examples/gremlinrbac/CosmosDBGremlinRoleAssignmentList.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/gremlinRoleAssignments/{roleAssignmentId}": {
      "get": {
        "operationId": "GremlinResources_GetGremlinRoleAssignment",
        "tags": [
          "GremlinRoleAssignmentResources"
        ],
        "description": "Retrieves the properties of an existing Azure Cosmos DB Gremlin Role Assignment with the given Id.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "Cosmos DB database account name.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "roleAssignmentId",
            "in": "path",
            "description": "The GUID for the Role Assignment.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/GremlinRoleAssignmentResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBGremlinRoleAssignmentGet": {
            "$ref": "./examples/gremlinrbac/CosmosDBGremlinRoleAssignmentGet.json"
          }
        }
      },
      "put": {
        "operationId": "GremlinResources_CreateUpdateGremlinRoleAssignment",
        "tags": [
          "GremlinRoleAssignmentResources"
        ],
        "description": "Creates or updates an Azure Cosmos DB Gremlin Role Assignment.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "Cosmos DB database account name.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "roleAssignmentId",
            "in": "path",
            "description": "The GUID for the Role Assignment.",
            "required": true,
            "type": "string"
          },
          {
            "name": "createUpdateGremlinRoleAssignmentParameters",
            "in": "body",
            "description": "The properties required to create or update a Role Assignment.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GremlinRoleAssignmentResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'GremlinRoleAssignmentResource' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/GremlinRoleAssignmentResource"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBGremlinRoleAssignmentCreateUpdate": {
            "$ref": "./examples/gremlinrbac/CosmosDBGremlinRoleAssignmentCreateUpdate.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location",
          "final-state-schema": "#/definitions/GremlinRoleAssignmentResource"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "GremlinResources_DeleteGremlinRoleAssignment",
        "tags": [
          "GremlinRoleAssignmentResources"
        ],
        "description": "Deletes an existing Azure Cosmos DB Gremlin Role Assignment.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "Cosmos DB database account name.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "roleAssignmentId",
            "in": "path",
            "description": "The GUID for the Role Assignment.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBGremlinRoleAssignmentDelete": {
            "$ref": "./examples/gremlinrbac/CosmosDBGremlinRoleAssignmentDelete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/gremlinRoleDefinitions": {
      "get": {
        "operationId": "GremlinResources_ListGremlinRoleDefinitions",
        "tags": [
          "GremlinRoleDefinitionResources"
        ],
        "description": "Retrieves the list of all Azure Cosmos DB Gremlin Role Definitions.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "Cosmos DB database account name.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/GremlinRoleDefinitionResourceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBGremlinRoleDefinitionList": {
            "$ref": "./examples/gremlinrbac/CosmosDBGremlinRoleDefinitionList.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/gremlinRoleDefinitions/{roleDefinitionId}": {
      "get": {
        "operationId": "GremlinResources_GetGremlinRoleDefinition",
        "tags": [
          "GremlinRoleDefinitionResources"
        ],
        "description": "Retrieves the properties of an existing Azure Cosmos DB Gremlin Role Definition with the given Id.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "Cosmos DB database account name.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "roleDefinitionId",
            "in": "path",
            "description": "The GUID for the Role Definition.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/GremlinRoleDefinitionResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBGremlinRoleDefinitionGet": {
            "$ref": "./examples/gremlinrbac/CosmosDBGremlinRoleDefinitionGet.json"
          }
        }
      },
      "put": {
        "operationId": "GremlinResources_CreateUpdateGremlinRoleDefinition",
        "tags": [
          "GremlinRoleDefinitionResources"
        ],
        "description": "Creates or updates an Azure Cosmos DB Gremlin Role Definition.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "Cosmos DB database account name.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "roleDefinitionId",
            "in": "path",
            "description": "The GUID for the Role Definition.",
            "required": true,
            "type": "string"
          },
          {
            "name": "createUpdateGremlinRoleDefinitionParameters",
            "in": "body",
            "description": "The properties required to create or update a Role Definition.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GremlinRoleDefinitionResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'GremlinRoleDefinitionResource' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/GremlinRoleDefinitionResource"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBGremlinRoleDefinitionCreateUpdate": {
            "$ref": "./examples/gremlinrbac/CosmosDBGremlinRoleDefinitionCreateUpdate.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location",
          "final-state-schema": "#/definitions/GremlinRoleDefinitionResource"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "GremlinResources_DeleteGremlinRoleDefinition",
        "tags": [
          "GremlinRoleDefinitionResources"
        ],
        "description": "Deletes an existing Azure Cosmos DB Gremlin Role Definition.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "Cosmos DB database account name.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "roleDefinitionId",
            "in": "path",
            "description": "The GUID for the Role Definition.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBGremlinRoleDefinitionDelete": {
            "$ref": "./examples/gremlinrbac/CosmosDBGremlinRoleDefinitionDelete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/listConnectionStrings": {
      "post": {
        "operationId": "DatabaseAccounts_ListConnectionStrings",
        "tags": [
          "DatabaseAccounts"
        ],
        "description": "Lists the connection strings for the specified Azure Cosmos DB database account.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "Cosmos DB database account name.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DatabaseAccountListConnectionStringsResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBDatabaseAccountListConnectionStrings": {
            "$ref": "./examples/CosmosDBDatabaseAccountListConnectionStrings.json"
          },
          "CosmosDBDatabaseAccountListConnectionStringsMongo": {
            "$ref": "./examples/CosmosDBDatabaseAccountListConnectionStringsMongo.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/listKeys": {
      "post": {
        "operationId": "DatabaseAccounts_ListKeys",
        "tags": [
          "DatabaseAccounts"
        ],
        "description": "Lists the access keys for the specified Azure Cosmos DB database account.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "Cosmos DB database account name.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DatabaseAccountListKeysResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBDatabaseAccountListKeys": {
            "$ref": "./examples/CosmosDBDatabaseAccountListKeys.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/metricDefinitions": {
      "get": {
        "operationId": "DatabaseAccounts_ListMetricDefinitions",
        "tags": [
          "DatabaseAccounts"
        ],
        "description": "Retrieves metric definitions for the given database account.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "Cosmos DB database account name.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/MetricDefinitionsListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBDatabaseAccountGetMetricDefinitions": {
            "$ref": "./examples/CosmosDBDatabaseAccountGetMetricDefinitions.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/metrics": {
      "get": {
        "operationId": "DatabaseAccounts_ListMetrics",
        "tags": [
          "DatabaseAccounts"
        ],
        "description": "Retrieves the metrics determined by the given filter for the given database account.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "Cosmos DB database account name.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "An OData filter expression that describes a subset of metrics to return. The parameters that can be filtered are name.value (name of the metric, can have an or of multiple names), startTime, endTime, and timeGrain. The supported operator is eq.",
            "required": true,
            "type": "string",
            "x-ms-client-name": "filter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/MetricListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBDatabaseAccountGetMetrics": {
            "$ref": "./examples/CosmosDBDatabaseAccountGetMetrics.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/mongoMIRoleAssignments": {
      "get": {
        "operationId": "MongoMIResources_ListMongoMIRoleAssignments",
        "tags": [
          "MongoMIRoleAssignmentResources"
        ],
        "description": "Retrieves the list of all Azure Cosmos DB MongoMI Role Assignments.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "Cosmos DB database account name.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/MongoMIRoleAssignmentResourceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBMongoMIRoleAssignmentList": {
            "$ref": "./examples/mongoMIrbac/CosmosDBMongoMIRoleAssignmentList.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/mongoMIRoleAssignments/{roleAssignmentId}": {
      "get": {
        "operationId": "MongoMIResources_GetMongoMIRoleAssignment",
        "tags": [
          "MongoMIRoleAssignmentResources"
        ],
        "description": "Retrieves the properties of an existing Azure Cosmos DB MongoMI Role Assignment with the given Id.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "Cosmos DB database account name.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "roleAssignmentId",
            "in": "path",
            "description": "The GUID for the Role Assignment.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/MongoMIRoleAssignmentResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBMongoMIRoleAssignmentGet": {
            "$ref": "./examples/mongoMIrbac/CosmosDBMongoMIRoleAssignmentGet.json"
          }
        }
      },
      "put": {
        "operationId": "MongoMIResources_CreateUpdateMongoMIRoleAssignment",
        "tags": [
          "MongoMIRoleAssignmentResources"
        ],
        "description": "Creates or updates an Azure Cosmos DB MongoMI Role Assignment.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "Cosmos DB database account name.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "roleAssignmentId",
            "in": "path",
            "description": "The GUID for the Role Assignment.",
            "required": true,
            "type": "string"
          },
          {
            "name": "createUpdateMongoMIRoleAssignmentParameters",
            "in": "body",
            "description": "The properties required to create or update a Role Assignment.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MongoMIRoleAssignmentResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'MongoMIRoleAssignmentResource' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/MongoMIRoleAssignmentResource"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBMongoMIRoleAssignmentCreateUpdate": {
            "$ref": "./examples/mongoMIrbac/CosmosDBMongoMIRoleAssignmentCreateUpdate.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location",
          "final-state-schema": "#/definitions/MongoMIRoleAssignmentResource"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "MongoMIResources_DeleteMongoMIRoleAssignment",
        "tags": [
          "MongoMIRoleAssignmentResources"
        ],
        "description": "Deletes an existing Azure Cosmos DB MongoMI Role Assignment.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "Cosmos DB database account name.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "roleAssignmentId",
            "in": "path",
            "description": "The GUID for the Role Assignment.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBMongoMIRoleAssignmentDelete": {
            "$ref": "./examples/mongoMIrbac/CosmosDBMongoMIRoleAssignmentDelete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/mongoMIRoleDefinitions": {
      "get": {
        "operationId": "MongoMIResources_ListMongoMIRoleDefinitions",
        "tags": [
          "MongoMIRoleDefinitionResources"
        ],
        "description": "Retrieves the list of all Azure Cosmos DB MongoMI Role Definitions.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "Cosmos DB database account name.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/MongoMIRoleDefinitionResourceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBMongoMIRoleDefinitionList": {
            "$ref": "./examples/mongoMIrbac/CosmosDBMongoMIRoleDefinitionList.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/mongoMIRoleDefinitions/{roleDefinitionId}": {
      "get": {
        "operationId": "MongoMIResources_GetMongoMIRoleDefinition",
        "tags": [
          "MongoMIRoleDefinitionResources"
        ],
        "description": "Retrieves the properties of an existing Azure Cosmos DB MongoMI Role Definition with the given Id.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "Cosmos DB database account name.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "roleDefinitionId",
            "in": "path",
            "description": "The GUID for the Role Definition.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/MongoMIRoleDefinitionResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBMongoMIRoleDefinitionGet": {
            "$ref": "./examples/mongoMIrbac/CosmosDBMongoMIRoleDefinitionGet.json"
          }
        }
      },
      "put": {
        "operationId": "MongoMIResources_CreateUpdateMongoMIRoleDefinition",
        "tags": [
          "MongoMIRoleDefinitionResources"
        ],
        "description": "Creates or updates an Azure Cosmos DB MongoMI Role Definition.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "Cosmos DB database account name.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "roleDefinitionId",
            "in": "path",
            "description": "The GUID for the Role Definition.",
            "required": true,
            "type": "string"
          },
          {
            "name": "createUpdateMongoMIRoleDefinitionParameters",
            "in": "body",
            "description": "The properties required to create or update a Role Definition.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MongoMIRoleDefinitionResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'MongoMIRoleDefinitionResource' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/MongoMIRoleDefinitionResource"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBMongoMIRoleDefinitionCreateUpdate": {
            "$ref": "./examples/mongoMIrbac/CosmosDBMongoMIRoleDefinitionCreateUpdate.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location",
          "final-state-schema": "#/definitions/MongoMIRoleDefinitionResource"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "MongoMIResources_DeleteMongoMIRoleDefinition",
        "tags": [
          "MongoMIRoleDefinitionResources"
        ],
        "description": "Deletes an existing Azure Cosmos DB MongoMI Role Definition.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "Cosmos DB database account name.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "roleDefinitionId",
            "in": "path",
            "description": "The GUID for the Role Definition.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBMongoMIRoleDefinitionDelete": {
            "$ref": "./examples/mongoMIrbac/CosmosDBMongoMIRoleDefinitionDelete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/mongodbDatabases": {
      "get": {
        "operationId": "MongoDBResources_ListMongoDBDatabases",
        "tags": [
          "MongoDBDatabaseGetResultsOperationGroup"
        ],
        "description": "Lists the MongoDB databases under an existing Azure Cosmos DB database account.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "Cosmos DB database account name.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/MongoDBDatabaseListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBMongoDBDatabaseList": {
            "$ref": "./examples/CosmosDBMongoDBDatabaseList.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/mongodbDatabases/{databaseName}": {
      "get": {
        "operationId": "MongoDBResources_GetMongoDBDatabase",
        "tags": [
          "MongoDBDatabaseGetResultsOperationGroup"
        ],
        "description": "Gets the MongoDB databases under an existing Azure Cosmos DB database account with the provided name.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "Cosmos DB database account name.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "databaseName",
            "in": "path",
            "description": "Cosmos DB database name.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/MongoDBDatabaseGetResults"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBMongoDBDatabaseGet": {
            "$ref": "./examples/CosmosDBMongoDBDatabaseGet.json"
          }
        }
      },
      "put": {
        "operationId": "MongoDBResources_CreateUpdateMongoDBDatabase",
        "tags": [
          "MongoDBDatabaseGetResultsOperationGroup"
        ],
        "description": "Create or updates Azure Cosmos DB MongoDB database",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "Cosmos DB database account name.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "databaseName",
            "in": "path",
            "description": "Cosmos DB database name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "createUpdateMongoDBDatabaseParameters",
            "in": "body",
            "description": "The parameters to provide for the current MongoDB database.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MongoDBDatabaseCreateUpdateParameters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'MongoDBDatabaseGetResults' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/MongoDBDatabaseGetResults"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBMongoDBDatabaseCreateUpdate": {
            "$ref": "./examples/CosmosDBMongoDBDatabaseCreateUpdate.json"
          },
          "CosmosDBMongoDBDatabaseRestore": {
            "$ref": "./examples/CosmosDBMongoDBDatabaseRestore.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location",
          "final-state-schema": "#/definitions/MongoDBDatabaseGetResults"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "MongoDBResources_DeleteMongoDBDatabase",
        "tags": [
          "MongoDBDatabaseGetResultsOperationGroup"
        ],
        "description": "Deletes an existing Azure Cosmos DB MongoDB database.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "Cosmos DB database account name.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "databaseName",
            "in": "path",
            "description": "Cosmos DB database name.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBMongoDBDatabaseDelete": {
            "$ref": "./examples/CosmosDBMongoDBDatabaseDelete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/mongodbDatabases/{databaseName}/collections": {
      "get": {
        "operationId": "MongoDBResources_ListMongoDBCollections",
        "tags": [
          "MongoDBCollectionGetResultsOperationGroup"
        ],
        "description": "Lists the MongoDB collection under an existing Azure Cosmos DB database account.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "Cosmos DB database account name.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "databaseName",
            "in": "path",
            "description": "Cosmos DB database name.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/MongoDBCollectionListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBMongoDBCollectionList": {
            "$ref": "./examples/CosmosDBMongoDBCollectionList.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/mongodbDatabases/{databaseName}/collections/{collectionName}": {
      "get": {
        "operationId": "MongoDBResources_GetMongoDBCollection",
        "tags": [
          "MongoDBCollectionGetResultsOperationGroup"
        ],
        "description": "Gets the MongoDB collection under an existing Azure Cosmos DB database account.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "Cosmos DB database account name.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "databaseName",
            "in": "path",
            "description": "Cosmos DB database name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "collectionName",
            "in": "path",
            "description": "Cosmos DB collection name.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/MongoDBCollectionGetResults"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBMongoDBCollectionGet": {
            "$ref": "./examples/CosmosDBMongoDBCollectionGet.json"
          }
        }
      },
      "put": {
        "operationId": "MongoDBResources_CreateUpdateMongoDBCollection",
        "tags": [
          "MongoDBCollectionGetResultsOperationGroup"
        ],
        "description": "Create or update an Azure Cosmos DB MongoDB Collection",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "Cosmos DB database account name.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "databaseName",
            "in": "path",
            "description": "Cosmos DB database name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "collectionName",
            "in": "path",
            "description": "Cosmos DB collection name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "createUpdateMongoDBCollectionParameters",
            "in": "body",
            "description": "The parameters to provide for the current MongoDB Collection.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MongoDBCollectionCreateUpdateParameters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'MongoDBCollectionGetResults' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/MongoDBCollectionGetResults"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBMongoDBCollectionCreateUpdate": {
            "$ref": "./examples/CosmosDBMongoDBCollectionCreateUpdate.json"
          },
          "CosmosDBMongoDBCollectionRestore": {
            "$ref": "./examples/CosmosDBMongoDBCollectionRestore.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location",
          "final-state-schema": "#/definitions/MongoDBCollectionGetResults"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "MongoDBResources_DeleteMongoDBCollection",
        "tags": [
          "MongoDBCollectionGetResultsOperationGroup"
        ],
        "description": "Deletes an existing Azure Cosmos DB MongoDB Collection.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "Cosmos DB database account name.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "databaseName",
            "in": "path",
            "description": "Cosmos DB database name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "collectionName",
            "in": "path",
            "description": "Cosmos DB collection name.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBMongoDBCollectionDelete": {
            "$ref": "./examples/CosmosDBMongoDBCollectionDelete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/mongodbDatabases/{databaseName}/collections/{collectionName}/partitionMerge": {
      "post": {
        "operationId": "MongoDBResources_ListMongoDBCollectionPartitionMerge",
        "tags": [
          "MongoDBCollectionGetResultsOperationGroup"
        ],
        "description": "Merges the partitions of a MongoDB Collection",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "Cosmos DB database account name.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "databaseName",
            "in": "path",
            "description": "Cosmos DB database name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "collectionName",
            "in": "path",
            "description": "Cosmos DB collection name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "mergeParameters",
            "in": "body",
            "description": "The parameters for the merge operation.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MergeParameters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/PhysicalPartitionStorageInfoCollection"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBMongoDBCollectionPartitionMerge": {
            "$ref": "./examples/CosmosDBMongoDBCollectionPartitionMerge.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location",
          "final-state-schema": "#/definitions/PhysicalPartitionStorageInfoCollection"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/mongodbDatabases/{databaseName}/collections/{collectionName}/retrieveContinuousBackupInformation": {
      "post": {
        "operationId": "MongoDBResources_RetrieveContinuousBackupInformation",
        "tags": [
          "MongoDBCollectionGetResultsOperationGroup"
        ],
        "description": "Retrieves continuous backup information for a Mongodb collection.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "Cosmos DB database account name.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "databaseName",
            "in": "path",
            "description": "Cosmos DB database name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "collectionName",
            "in": "path",
            "description": "Cosmos DB collection name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "location",
            "in": "body",
            "description": "The name of the continuous backup restore location.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ContinuousBackupRestoreLocation"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/BackupInformation"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBMongoDBCollectionBackupInformation": {
            "$ref": "./examples/CosmosDBMongoDBCollectionBackupInformation.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location",
          "final-state-schema": "#/definitions/BackupInformation"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/mongodbDatabases/{databaseName}/collections/{collectionName}/throughputSettings/default": {
      "get": {
        "operationId": "MongoDBResources_GetMongoDBCollectionThroughput",
        "tags": [
          "MongoDBResourcesThroughputSettingsGetResultsOperationGroup"
        ],
        "description": "Gets the RUs per second of the MongoDB collection under an existing Azure Cosmos DB database account with the provided name.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "Cosmos DB database account name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "databaseName",
            "in": "path",
            "description": "Cosmos DB database name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "collectionName",
            "in": "path",
            "description": "Cosmos DB collection name.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ThroughputSettingsGetResults"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBMongoDBCollectionThroughputGet": {
            "$ref": "./examples/CosmosDBMongoDBCollectionThroughputGet.json"
          }
        }
      },
      "put": {
        "operationId": "MongoDBResources_UpdateMongoDBCollectionThroughput",
        "tags": [
          "MongoDBResourcesThroughputSettingsGetResultsOperationGroup"
        ],
        "description": "Update the RUs per second of an Azure Cosmos DB MongoDB collection",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "Cosmos DB database account name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "databaseName",
            "in": "path",
            "description": "Cosmos DB database name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "collectionName",
            "in": "path",
            "description": "Cosmos DB collection name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "updateThroughputParameters",
            "in": "body",
            "description": "The RUs per second of the parameters to provide for the current MongoDB collection.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ThroughputSettingsUpdateParameters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'ThroughputSettingsGetResults' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/ThroughputSettingsGetResults"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBMongoDBCollectionThroughputUpdate": {
            "$ref": "./examples/CosmosDBMongoDBCollectionThroughputUpdate.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location",
          "final-state-schema": "#/definitions/ThroughputSettingsGetResults"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/mongodbDatabases/{databaseName}/collections/{collectionName}/throughputSettings/default/migrateToAutoscale": {
      "post": {
        "operationId": "MongoDBResources_MigrateMongoDBCollectionToAutoscale",
        "tags": [
          "MongoDBResourcesThroughputSettingsGetResultsOperationGroup"
        ],
        "description": "Migrate an Azure Cosmos DB MongoDB collection from manual throughput to autoscale",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "Cosmos DB database account name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "databaseName",
            "in": "path",
            "description": "Cosmos DB database name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "collectionName",
            "in": "path",
            "description": "Cosmos DB collection name.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ThroughputSettingsGetResults"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBMongoDBCollectionMigrateToAutoscale": {
            "$ref": "./examples/CosmosDBMongoDBCollectionMigrateToAutoscale.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location",
          "final-state-schema": "#/definitions/ThroughputSettingsGetResults"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/mongodbDatabases/{databaseName}/collections/{collectionName}/throughputSettings/default/migrateToManualThroughput": {
      "post": {
        "operationId": "MongoDBResources_MigrateMongoDBCollectionToManualThroughput",
        "tags": [
          "MongoDBResourcesThroughputSettingsGetResultsOperationGroup"
        ],
        "description": "Migrate an Azure Cosmos DB MongoDB collection from autoscale to manual throughput",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "Cosmos DB database account name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "databaseName",
            "in": "path",
            "description": "Cosmos DB database name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "collectionName",
            "in": "path",
            "description": "Cosmos DB collection name.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ThroughputSettingsGetResults"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBMongoDBCollectionMigrateToManualThroughput": {
            "$ref": "./examples/CosmosDBMongoDBCollectionMigrateToManualThroughput.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location",
          "final-state-schema": "#/definitions/ThroughputSettingsGetResults"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/mongodbDatabases/{databaseName}/collections/{collectionName}/throughputSettings/default/redistributeThroughput": {
      "post": {
        "operationId": "MongoDBResources_MongoDBContainerRedistributeThroughput",
        "tags": [
          "MongoDBResourcesThroughputSettingsGetResultsOperationGroup"
        ],
        "description": "Redistribute throughput for an Azure Cosmos DB MongoDB container",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "Cosmos DB database account name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "databaseName",
            "in": "path",
            "description": "Cosmos DB database name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "collectionName",
            "in": "path",
            "description": "Cosmos DB collection name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "redistributeThroughputParameters",
            "in": "body",
            "description": "The parameters to provide for redistributing throughput for the current MongoDB container.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RedistributeThroughputParameters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/PhysicalPartitionThroughputInfoResult"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBMongoDBCollectionRedistributeThroughput": {
            "$ref": "./examples/CosmosDBMongoDBCollectionRedistributeThroughput.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location",
          "final-state-schema": "#/definitions/PhysicalPartitionThroughputInfoResult"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/mongodbDatabases/{databaseName}/collections/{collectionName}/throughputSettings/default/retrieveThroughputDistribution": {
      "post": {
        "operationId": "MongoDBResources_MongoDBContainerRetrieveThroughputDistribution",
        "tags": [
          "MongoDBResourcesThroughputSettingsGetResultsOperationGroup"
        ],
        "description": "Retrieve throughput distribution for an Azure Cosmos DB MongoDB container",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "Cosmos DB database account name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "databaseName",
            "in": "path",
            "description": "Cosmos DB database name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "collectionName",
            "in": "path",
            "description": "Cosmos DB collection name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "retrieveThroughputParameters",
            "in": "body",
            "description": "The parameters to provide for retrieving throughput distribution for the current MongoDB container.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RetrieveThroughputParameters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/PhysicalPartitionThroughputInfoResult"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBMongoDBCollectionRetrieveThroughputDistribution": {
            "$ref": "./examples/CosmosDBMongoDBCollectionRetrieveThroughputDistribution.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location",
          "final-state-schema": "#/definitions/PhysicalPartitionThroughputInfoResult"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/mongodbDatabases/{databaseName}/partitionMerge": {
      "post": {
        "operationId": "MongoDBResources_MongoDBDatabasePartitionMerge",
        "tags": [
          "MongoDBDatabaseGetResultsOperationGroup"
        ],
        "description": "Merges the partitions of a MongoDB database",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "Cosmos DB database account name.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "databaseName",
            "in": "path",
            "description": "Cosmos DB database name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "mergeParameters",
            "in": "body",
            "description": "The parameters for the merge operation.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MergeParameters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/PhysicalPartitionStorageInfoCollection"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBMongoDBDatabasePartitionMerge": {
            "$ref": "./examples/CosmosDBMongoDBDatabasePartitionMerge.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location",
          "final-state-schema": "#/definitions/PhysicalPartitionStorageInfoCollection"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/mongodbDatabases/{databaseName}/throughputSettings/default": {
      "get": {
        "operationId": "MongoDBResources_GetMongoDBDatabaseThroughput",
        "tags": [
          "MongoDBResources"
        ],
        "description": "Gets the RUs per second of the MongoDB database under an existing Azure Cosmos DB database account with the provided name.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "Cosmos DB database account name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "databaseName",
            "in": "path",
            "description": "Cosmos DB database name.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ThroughputSettingsGetResults"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBMongoDBDatabaseThroughputGet": {
            "$ref": "./examples/CosmosDBMongoDBDatabaseThroughputGet.json"
          }
        }
      },
      "put": {
        "operationId": "MongoDBResources_UpdateMongoDBDatabaseThroughput",
        "tags": [
          "MongoDBResources"
        ],
        "description": "Update RUs per second of the an Azure Cosmos DB MongoDB database",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "Cosmos DB database account name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "databaseName",
            "in": "path",
            "description": "Cosmos DB database name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "updateThroughputParameters",
            "in": "body",
            "description": "The RUs per second of the parameters to provide for the current MongoDB database.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ThroughputSettingsUpdateParameters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'ThroughputSettingsGetResults' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/ThroughputSettingsGetResults"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBMongoDBDatabaseThroughputUpdate": {
            "$ref": "./examples/CosmosDBMongoDBDatabaseThroughputUpdate.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location",
          "final-state-schema": "#/definitions/ThroughputSettingsGetResults"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/mongodbDatabases/{databaseName}/throughputSettings/default/migrateToAutoscale": {
      "post": {
        "operationId": "MongoDBResources_MigrateMongoDBDatabaseToAutoscale",
        "tags": [
          "MongoDBResources"
        ],
        "description": "Migrate an Azure Cosmos DB MongoDB database from manual throughput to autoscale",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "Cosmos DB database account name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "databaseName",
            "in": "path",
            "description": "Cosmos DB database name.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ThroughputSettingsGetResults"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBMongoDBDatabaseMigrateToAutoscale": {
            "$ref": "./examples/CosmosDBMongoDBDatabaseMigrateToAutoscale.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location",
          "final-state-schema": "#/definitions/ThroughputSettingsGetResults"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/mongodbDatabases/{databaseName}/throughputSettings/default/migrateToManualThroughput": {
      "post": {
        "operationId": "MongoDBResources_MigrateMongoDBDatabaseToManualThroughput",
        "tags": [
          "MongoDBResources"
        ],
        "description": "Migrate an Azure Cosmos DB MongoDB database from autoscale to manual throughput",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "Cosmos DB database account name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "databaseName",
            "in": "path",
            "description": "Cosmos DB database name.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ThroughputSettingsGetResults"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBMongoDBDatabaseMigrateToManualThroughput": {
            "$ref": "./examples/CosmosDBMongoDBDatabaseMigrateToManualThroughput.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location",
          "final-state-schema": "#/definitions/ThroughputSettingsGetResults"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/mongodbDatabases/{databaseName}/throughputSettings/default/redistributeThroughput": {
      "post": {
        "operationId": "MongoDBResources_MongoDBDatabaseRedistributeThroughput",
        "tags": [
          "MongoDBResources"
        ],
        "description": "Redistribute throughput for an Azure Cosmos DB MongoDB database",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "Cosmos DB database account name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "databaseName",
            "in": "path",
            "description": "Cosmos DB database name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "redistributeThroughputParameters",
            "in": "body",
            "description": "The parameters to provide for redistributing throughput for the current MongoDB database.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RedistributeThroughputParameters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/PhysicalPartitionThroughputInfoResult"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBMongoDBDatabaseRedistributeThroughput": {
            "$ref": "./examples/CosmosDBMongoDBDatabaseRedistributeThroughput.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location",
          "final-state-schema": "#/definitions/PhysicalPartitionThroughputInfoResult"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/mongodbDatabases/{databaseName}/throughputSettings/default/retrieveThroughputDistribution": {
      "post": {
        "operationId": "MongoDBResources_MongoDBDatabaseRetrieveThroughputDistribution",
        "tags": [
          "MongoDBResources"
        ],
        "description": "Retrieve throughput distribution for an Azure Cosmos DB MongoDB database",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "Cosmos DB database account name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "databaseName",
            "in": "path",
            "description": "Cosmos DB database name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "retrieveThroughputParameters",
            "in": "body",
            "description": "The parameters to provide for retrieving throughput distribution for the current MongoDB database.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RetrieveThroughputParameters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/PhysicalPartitionThroughputInfoResult"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBMongoDBDatabaseRetrieveThroughputDistribution": {
            "$ref": "./examples/CosmosDBMongoDBDatabaseRetrieveThroughputDistribution.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location",
          "final-state-schema": "#/definitions/PhysicalPartitionThroughputInfoResult"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/mongodbRoleDefinitions": {
      "get": {
        "operationId": "MongoDBResources_ListMongoRoleDefinitions",
        "tags": [
          "MongoRoleDefinitionGetResultsOperationGroup"
        ],
        "description": "Retrieves the list of all Azure Cosmos DB Mongo Role Definitions.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "Cosmos DB database account name.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/MongoRoleDefinitionListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBMongoDBRoleDefinitionList": {
            "$ref": "./examples/CosmosDBMongoDBRoleDefinitionList.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/mongodbRoleDefinitions/{mongoRoleDefinitionId}": {
      "get": {
        "operationId": "MongoDBResources_GetMongoRoleDefinition",
        "tags": [
          "MongoRoleDefinitionGetResultsOperationGroup"
        ],
        "description": "Retrieves the properties of an existing Azure Cosmos DB Mongo Role Definition with the given Id.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "Cosmos DB database account name.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "mongoRoleDefinitionId",
            "in": "path",
            "description": "The ID for the Role Definition {dbName.roleName}.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/MongoRoleDefinitionGetResults"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBMongoRoleDefinitionGet": {
            "$ref": "./examples/CosmosDBMongoDBRoleDefinitionGet.json"
          }
        }
      },
      "put": {
        "operationId": "MongoDBResources_CreateUpdateMongoRoleDefinition",
        "tags": [
          "MongoRoleDefinitionGetResultsOperationGroup"
        ],
        "description": "Creates or updates an Azure Cosmos DB Mongo Role Definition.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "Cosmos DB database account name.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "mongoRoleDefinitionId",
            "in": "path",
            "description": "The ID for the Role Definition {dbName.roleName}.",
            "required": true,
            "type": "string"
          },
          {
            "name": "createUpdateMongoRoleDefinitionParameters",
            "in": "body",
            "description": "The properties required to create or update a Role Definition.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MongoRoleDefinitionCreateUpdateParameters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'MongoRoleDefinitionGetResults' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/MongoRoleDefinitionGetResults"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBMongoDBRoleDefinitionCreateUpdate": {
            "$ref": "./examples/CosmosDBMongoDBRoleDefinitionCreateUpdate.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location",
          "final-state-schema": "#/definitions/MongoRoleDefinitionGetResults"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "MongoDBResources_DeleteMongoRoleDefinition",
        "tags": [
          "MongoRoleDefinitionGetResultsOperationGroup"
        ],
        "description": "Deletes an existing Azure Cosmos DB Mongo Role Definition.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "Cosmos DB database account name.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "mongoRoleDefinitionId",
            "in": "path",
            "description": "The ID for the Role Definition {dbName.roleName}.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBMongoDBRoleDefinitionDelete": {
            "$ref": "./examples/CosmosDBMongoDBRoleDefinitionDelete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/mongodbUserDefinitions": {
      "get": {
        "operationId": "MongoDBResources_ListMongoUserDefinitions",
        "tags": [
          "MongoUserDefinitionGetResultsOperationGroup"
        ],
        "description": "Retrieves the list of all Azure Cosmos DB Mongo User Definition.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "Cosmos DB database account name.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/MongoUserDefinitionListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBMongoDBUserDefinitionList": {
            "$ref": "./examples/CosmosDBMongoDBUserDefinitionList.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/mongodbUserDefinitions/{mongoUserDefinitionId}": {
      "get": {
        "operationId": "MongoDBResources_GetMongoUserDefinition",
        "tags": [
          "MongoUserDefinitionGetResultsOperationGroup"
        ],
        "description": "Retrieves the properties of an existing Azure Cosmos DB Mongo User Definition with the given Id.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "Cosmos DB database account name.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "mongoUserDefinitionId",
            "in": "path",
            "description": "The ID for the User Definition {dbName.userName}.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/MongoUserDefinitionGetResults"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBMongoDBUserDefinitionGet": {
            "$ref": "./examples/CosmosDBMongoDBUserDefinitionGet.json"
          }
        }
      },
      "put": {
        "operationId": "MongoDBResources_CreateUpdateMongoUserDefinition",
        "tags": [
          "MongoUserDefinitionGetResultsOperationGroup"
        ],
        "description": "Creates or updates an Azure Cosmos DB Mongo User Definition.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "Cosmos DB database account name.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "mongoUserDefinitionId",
            "in": "path",
            "description": "The ID for the User Definition {dbName.userName}.",
            "required": true,
            "type": "string"
          },
          {
            "name": "createUpdateMongoUserDefinitionParameters",
            "in": "body",
            "description": "The properties required to create or update a User Definition.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MongoUserDefinitionCreateUpdateParameters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'MongoUserDefinitionGetResults' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/MongoUserDefinitionGetResults"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBMongoDBUserDefinitionCreateUpdate": {
            "$ref": "./examples/CosmosDBMongoDBUserDefinitionCreateUpdate.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location",
          "final-state-schema": "#/definitions/MongoUserDefinitionGetResults"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "MongoDBResources_DeleteMongoUserDefinition",
        "tags": [
          "MongoUserDefinitionGetResultsOperationGroup"
        ],
        "description": "Deletes an existing Azure Cosmos DB Mongo User Definition.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "Cosmos DB database account name.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "mongoUserDefinitionId",
            "in": "path",
            "description": "The ID for the User Definition {dbName.userName}.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBMongoDBUserDefinitionDelete": {
            "$ref": "./examples/CosmosDBMongoDBUserDefinitionDelete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/networkSecurityPerimeterConfigurations": {
      "get": {
        "operationId": "NetworkSecurityPerimeterConfigurations_List",
        "tags": [
          "NetworkSecurityPerimeterConfigurations"
        ],
        "description": "Gets list of effective Network Security Perimeter Configuration for cosmos db account",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "Cosmos DB database account name.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/NetworkSecurityPerimeterConfigurationListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NamspaceNetworkSecurityPerimeterConfigurationList": {
            "$ref": "./examples/NetworkSecurityPerimeterConfigurationList.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/networkSecurityPerimeterConfigurations/{networkSecurityPerimeterConfigurationName}": {
      "get": {
        "operationId": "NetworkSecurityPerimeterConfigurations_Get",
        "tags": [
          "NetworkSecurityPerimeterConfigurations"
        ],
        "description": "Gets effective Network Security Perimeter Configuration for association",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "Cosmos DB database account name.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "networkSecurityPerimeterConfigurationName",
            "in": "path",
            "description": "The name for Network Security Perimeter configuration",
            "required": true,
            "type": "string",
            "pattern": "^.*$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/NetworkSecurityPerimeterConfiguration"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NamspaceNetworkSecurityPerimeterConfigurationList": {
            "$ref": "./examples/NetworkSecurityPerimeterConfigurationGet.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/networkSecurityPerimeterConfigurations/{networkSecurityPerimeterConfigurationName}/reconcile": {
      "post": {
        "operationId": "NetworkSecurityPerimeterConfigurations_Reconcile",
        "tags": [
          "NetworkSecurityPerimeterConfigurations"
        ],
        "description": "Refreshes any information about the association.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "Cosmos DB database account name.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "networkSecurityPerimeterConfigurationName",
            "in": "path",
            "description": "The name for Network Security Perimeter configuration",
            "required": true,
            "type": "string",
            "pattern": "^.*$"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NetworkSecurityPerimeterConfigurationList": {
            "$ref": "./examples/NetworkSecurityPerimeterConfigurationReconcile.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/notebookWorkspaces": {
      "get": {
        "operationId": "NotebookWorkspaces_ListByDatabaseAccount",
        "tags": [
          "NotebookWorkspaces"
        ],
        "description": "Gets the notebook workspace resources of an existing Cosmos DB account.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "Cosmos DB database account name.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/NotebookWorkspaceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBNotebookWorkspaceList": {
            "$ref": "./examples/CosmosDBNotebookWorkspaceList.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/notebookWorkspaces/{notebookWorkspaceName}": {
      "get": {
        "operationId": "NotebookWorkspaces_Get",
        "tags": [
          "NotebookWorkspaces"
        ],
        "description": "Gets the notebook workspace for a Cosmos DB account.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "Cosmos DB database account name.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "notebookWorkspaceName",
            "in": "path",
            "description": "The name of the notebook workspace resource.",
            "required": true,
            "type": "string",
            "enum": [
              "default"
            ],
            "x-ms-enum": {
              "name": "NotebookWorkspaceName",
              "modelAsString": true,
              "values": [
                {
                  "name": "Default",
                  "value": "default"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/NotebookWorkspace"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBNotebookWorkspaceGet": {
            "$ref": "./examples/CosmosDBNotebookWorkspaceGet.json"
          }
        }
      },
      "put": {
        "operationId": "NotebookWorkspaces_CreateOrUpdate",
        "tags": [
          "NotebookWorkspaces"
        ],
        "description": "Creates the notebook workspace for a Cosmos DB account.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "Cosmos DB database account name.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "notebookWorkspaceName",
            "in": "path",
            "description": "The name of the notebook workspace resource.",
            "required": true,
            "type": "string",
            "enum": [
              "default"
            ],
            "x-ms-enum": {
              "name": "NotebookWorkspaceName",
              "modelAsString": true,
              "values": [
                {
                  "name": "Default",
                  "value": "default"
                }
              ]
            }
          },
          {
            "name": "notebookCreateUpdateParameters",
            "in": "body",
            "description": "The notebook workspace to create for the current database account.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NotebookWorkspaceCreateUpdateParameters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'NotebookWorkspace' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/NotebookWorkspace"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBNotebookWorkspaceCreate": {
            "$ref": "./examples/CosmosDBNotebookWorkspaceCreate.json"
          }
        }
      },
      "delete": {
        "operationId": "NotebookWorkspaces_Delete",
        "tags": [
          "NotebookWorkspaces"
        ],
        "description": "Deletes the notebook workspace for a Cosmos DB account.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "Cosmos DB database account name.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "notebookWorkspaceName",
            "in": "path",
            "description": "The name of the notebook workspace resource.",
            "required": true,
            "type": "string",
            "enum": [
              "default"
            ],
            "x-ms-enum": {
              "name": "NotebookWorkspaceName",
              "modelAsString": true,
              "values": [
                {
                  "name": "Default",
                  "value": "default"
                }
              ]
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBNotebookWorkspaceDelete": {
            "$ref": "./examples/CosmosDBNotebookWorkspaceDelete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/notebookWorkspaces/{notebookWorkspaceName}/listConnectionInfo": {
      "post": {
        "operationId": "NotebookWorkspaces_ListConnectionInfo",
        "tags": [
          "NotebookWorkspaces"
        ],
        "description": "Retrieves the connection info for the notebook workspace",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "Cosmos DB database account name.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "notebookWorkspaceName",
            "in": "path",
            "description": "The name of the notebook workspace resource.",
            "required": true,
            "type": "string",
            "enum": [
              "default"
            ],
            "x-ms-enum": {
              "name": "NotebookWorkspaceName",
              "modelAsString": true,
              "values": [
                {
                  "name": "Default",
                  "value": "default"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/NotebookWorkspaceConnectionInfoResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBNotebookWorkspaceListConnectionInfo": {
            "$ref": "./examples/CosmosDBNotebookWorkspaceListConnectionInfo.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/notebookWorkspaces/{notebookWorkspaceName}/regenerateAuthToken": {
      "post": {
        "operationId": "NotebookWorkspaces_RegenerateAuthToken",
        "tags": [
          "NotebookWorkspaces"
        ],
        "description": "Regenerates the auth token for the notebook workspace",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "Cosmos DB database account name.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "notebookWorkspaceName",
            "in": "path",
            "description": "The name of the notebook workspace resource.",
            "required": true,
            "type": "string",
            "enum": [
              "default"
            ],
            "x-ms-enum": {
              "name": "NotebookWorkspaceName",
              "modelAsString": true,
              "values": [
                {
                  "name": "Default",
                  "value": "default"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully."
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBNotebookWorkspaceRegenerateAuthToken": {
            "$ref": "./examples/CosmosDBNotebookWorkspaceRegenerateAuthToken.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/notebookWorkspaces/{notebookWorkspaceName}/start": {
      "post": {
        "operationId": "NotebookWorkspaces_Start",
        "tags": [
          "NotebookWorkspaces"
        ],
        "description": "Starts the notebook workspace",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "Cosmos DB database account name.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "notebookWorkspaceName",
            "in": "path",
            "description": "The name of the notebook workspace resource.",
            "required": true,
            "type": "string",
            "enum": [
              "default"
            ],
            "x-ms-enum": {
              "name": "NotebookWorkspaceName",
              "modelAsString": true,
              "values": [
                {
                  "name": "Default",
                  "value": "default"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully."
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBNotebookWorkspaceStart": {
            "$ref": "./examples/CosmosDBNotebookWorkspaceStart.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/offlineRegion": {
      "post": {
        "operationId": "DatabaseAccounts_OfflineRegion",
        "tags": [
          "DatabaseAccounts"
        ],
        "description": "Offline the specified region for the specified Azure Cosmos DB database account.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "Cosmos DB database account name.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "regionParameterForOffline",
            "in": "body",
            "description": "Cosmos DB region to offline for the database account.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RegionForOnlineOffline"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully."
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBDatabaseAccountOfflineRegion": {
            "$ref": "./examples/CosmosDBDatabaseAccountOfflineRegion.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/onlineRegion": {
      "post": {
        "operationId": "DatabaseAccounts_OnlineRegion",
        "tags": [
          "DatabaseAccounts"
        ],
        "description": "Online the specified region for the specified Azure Cosmos DB database account.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "Cosmos DB database account name.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "regionParameterForOnline",
            "in": "body",
            "description": "Cosmos DB region to online for the database account.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RegionForOnlineOffline"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully."
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBDatabaseAccountOnlineRegion": {
            "$ref": "./examples/CosmosDBDatabaseAccountOnlineRegion.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/percentile/metrics": {
      "get": {
        "operationId": "Percentile_ListMetrics",
        "tags": [
          "DatabaseAccounts"
        ],
        "description": "Retrieves the metrics determined by the given filter for the given database account. This url is only for PBS and Replication Latency data",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "Cosmos DB database account name.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "An OData filter expression that describes a subset of metrics to return. The parameters that can be filtered are name.value (name of the metric, can have an or of multiple names), startTime, endTime, and timeGrain. The supported operator is eq.",
            "required": true,
            "type": "string",
            "x-ms-client-name": "filter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/PercentileMetricListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBDatabaseAccountRegionGetMetrics": {
            "$ref": "./examples/CosmosDBPercentileGetMetrics.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/privateEndpointConnections": {
      "get": {
        "operationId": "PrivateEndpointConnections_ListByDatabaseAccount",
        "tags": [
          "PrivateEndpointConnections"
        ],
        "description": "List all private endpoint connections on a Cosmos DB account.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "Cosmos DB database account name.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnectionListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Gets private endpoint connection.": {
            "$ref": "./examples/CosmosDBPrivateEndpointConnectionListGet.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/privateEndpointConnections/{privateEndpointConnectionName}": {
      "get": {
        "operationId": "PrivateEndpointConnections_Get",
        "tags": [
          "PrivateEndpointConnections"
        ],
        "description": "Gets a private endpoint connection.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "Cosmos DB database account name.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "privateEndpointConnectionName",
            "in": "path",
            "description": "The name of the private endpoint connection.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnection"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Gets private endpoint connection.": {
            "$ref": "./examples/CosmosDBPrivateEndpointConnectionGet.json"
          }
        }
      },
      "put": {
        "operationId": "PrivateEndpointConnections_CreateOrUpdate",
        "tags": [
          "PrivateEndpointConnections"
        ],
        "description": "Approve or reject a private endpoint connection with a given name.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "Cosmos DB database account name.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "privateEndpointConnectionName",
            "in": "path",
            "description": "The name of the private endpoint connection.",
            "required": true,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnection"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'PrivateEndpointConnection' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnection"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Approve or reject a private endpoint connection with a given name.": {
            "$ref": "./examples/CosmosDBPrivateEndpointConnectionUpdate.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location",
          "final-state-schema": "#/definitions/PrivateEndpointConnection"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "PrivateEndpointConnections_Delete",
        "tags": [
          "PrivateEndpointConnections"
        ],
        "description": "Deletes a private endpoint connection with a given name.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "Cosmos DB database account name.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "privateEndpointConnectionName",
            "in": "path",
            "description": "The name of the private endpoint connection.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Deletes a private endpoint connection with a given name.": {
            "$ref": "./examples/CosmosDBPrivateEndpointConnectionDelete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/privateLinkResources": {
      "get": {
        "operationId": "PrivateLinkResources_ListByDatabaseAccount",
        "tags": [
          "PrivateLinkResources"
        ],
        "description": "Gets the private link resources that need to be created for a Cosmos DB account.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "Cosmos DB database account name.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/PrivateLinkResourceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Gets private endpoint connection.": {
            "$ref": "./examples/CosmosDBPrivateLinkResourceListGet.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/privateLinkResources/{groupName}": {
      "get": {
        "operationId": "PrivateLinkResources_Get",
        "tags": [
          "PrivateLinkResources"
        ],
        "description": "Gets the private link resources that need to be created for a Cosmos DB account.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "Cosmos DB database account name.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "groupName",
            "in": "path",
            "description": "The name of the private link resource.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/PrivateLinkResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Gets private endpoint connection.": {
            "$ref": "./examples/CosmosDBPrivateLinkResourceGet.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/readonlykeys": {
      "get": {
        "operationId": "DatabaseAccounts_GetReadOnlyKeys",
        "tags": [
          "DatabaseAccounts"
        ],
        "description": "Lists the read-only access keys for the specified Azure Cosmos DB database account.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "Cosmos DB database account name.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DatabaseAccountListReadOnlyKeysResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "post": {
        "operationId": "DatabaseAccounts_ListReadOnlyKeys",
        "tags": [
          "DatabaseAccounts"
        ],
        "description": "Lists the read-only access keys for the specified Azure Cosmos DB database account.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "Cosmos DB database account name.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DatabaseAccountListReadOnlyKeysResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBDatabaseAccountListReadOnlyKeys": {
            "$ref": "./examples/CosmosDBDatabaseAccountListReadOnlyKeys.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/regenerateKey": {
      "post": {
        "operationId": "DatabaseAccounts_RegenerateKey",
        "tags": [
          "DatabaseAccounts"
        ],
        "description": "Regenerates an access key for the specified Azure Cosmos DB database account.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "Cosmos DB database account name.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "keyToRegenerate",
            "in": "body",
            "description": "The name of the key to regenerate.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DatabaseAccountRegenerateKeyParameters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully."
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBDatabaseAccountRegenerateKey": {
            "$ref": "./examples/CosmosDBDatabaseAccountRegenerateKey.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/region/{region}/databases/{databaseRid}/collections/{collectionRid}/metrics": {
      "get": {
        "operationId": "CollectionRegion_ListMetrics",
        "tags": [
          "DatabaseAccounts"
        ],
        "description": "Retrieves the metrics determined by the given filter for the given database account, collection and region.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "Cosmos DB database account name.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "region",
            "in": "path",
            "description": "Cosmos DB region, with spaces between words and each word capitalized.",
            "required": true,
            "type": "string"
          },
          {
            "name": "databaseRid",
            "in": "path",
            "description": "Cosmos DB database rid.",
            "required": true,
            "type": "string"
          },
          {
            "name": "collectionRid",
            "in": "path",
            "description": "Cosmos DB collection rid.",
            "required": true,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "An OData filter expression that describes a subset of metrics to return. The parameters that can be filtered are name.value (name of the metric, can have an or of multiple names), startTime, endTime, and timeGrain. The supported operator is eq.",
            "required": true,
            "type": "string",
            "x-ms-client-name": "filter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/MetricListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBRegionCollectionGetMetrics": {
            "$ref": "./examples/CosmosDBRegionCollectionGetMetrics.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/region/{region}/databases/{databaseRid}/collections/{collectionRid}/partitionKeyRangeId/{partitionKeyRangeId}/metrics": {
      "get": {
        "operationId": "PartitionKeyRangeIdRegion_ListMetrics",
        "tags": [
          "DatabaseAccounts"
        ],
        "description": "Retrieves the metrics determined by the given filter for the given partition key range id and region.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "Cosmos DB database account name.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "region",
            "in": "path",
            "description": "Cosmos DB region, with spaces between words and each word capitalized.",
            "required": true,
            "type": "string"
          },
          {
            "name": "databaseRid",
            "in": "path",
            "description": "Cosmos DB database rid.",
            "required": true,
            "type": "string"
          },
          {
            "name": "collectionRid",
            "in": "path",
            "description": "Cosmos DB collection rid.",
            "required": true,
            "type": "string"
          },
          {
            "name": "partitionKeyRangeId",
            "in": "path",
            "description": "Partition Key Range Id for which to get data.",
            "required": true,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "An OData filter expression that describes a subset of metrics to return. The parameters that can be filtered are name.value (name of the metric, can have an or of multiple names), startTime, endTime, and timeGrain. The supported operator is eq.",
            "required": true,
            "type": "string",
            "x-ms-client-name": "filter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/PartitionMetricListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBDatabaseAccountRegionGetMetrics": {
            "$ref": "./examples/CosmosDBPKeyRangeIdRegionGetMetrics.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/region/{region}/databases/{databaseRid}/collections/{collectionRid}/partitions/metrics": {
      "get": {
        "operationId": "CollectionPartitionRegion_ListMetrics",
        "tags": [
          "DatabaseAccounts"
        ],
        "description": "Retrieves the metrics determined by the given filter for the given collection and region, split by partition.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "Cosmos DB database account name.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "region",
            "in": "path",
            "description": "Cosmos DB region, with spaces between words and each word capitalized.",
            "required": true,
            "type": "string"
          },
          {
            "name": "databaseRid",
            "in": "path",
            "description": "Cosmos DB database rid.",
            "required": true,
            "type": "string"
          },
          {
            "name": "collectionRid",
            "in": "path",
            "description": "Cosmos DB collection rid.",
            "required": true,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "An OData filter expression that describes a subset of metrics to return. The parameters that can be filtered are name.value (name of the metric, can have an or of multiple names), startTime, endTime, and timeGrain. The supported operator is eq.",
            "required": true,
            "type": "string",
            "x-ms-client-name": "filter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/PartitionMetricListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBDatabaseAccountRegionGetMetrics": {
            "$ref": "./examples/CosmosDBCollectionPartitionRegionGetMetrics.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/region/{region}/metrics": {
      "get": {
        "operationId": "DatabaseAccountRegion_ListMetrics",
        "tags": [
          "DatabaseAccounts"
        ],
        "description": "Retrieves the metrics determined by the given filter for the given database account and region.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "Cosmos DB database account name.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "region",
            "in": "path",
            "description": "Cosmos DB region, with spaces between words and each word capitalized.",
            "required": true,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "An OData filter expression that describes a subset of metrics to return. The parameters that can be filtered are name.value (name of the metric, can have an or of multiple names), startTime, endTime, and timeGrain. The supported operator is eq.",
            "required": true,
            "type": "string",
            "x-ms-client-name": "filter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/MetricListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBDatabaseAccountRegionGetMetrics": {
            "$ref": "./examples/CosmosDBDatabaseAccountRegionGetMetrics.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/services": {
      "get": {
        "operationId": "Service_List",
        "tags": [
          "ServiceResources"
        ],
        "description": "Gets the status of service.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "Cosmos DB database account name.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ServiceResourceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBServicesList": {
            "$ref": "./examples/CosmosDBServicesList.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/services/{serviceName}": {
      "get": {
        "operationId": "Service_Get",
        "tags": [
          "ServiceResources"
        ],
        "description": "Gets the status of service.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "Cosmos DB database account name.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "Cosmos DB service name.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ServiceResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "DataTransferServiceGet": {
            "$ref": "./examples/CosmosDBDataTransferServiceGet.json"
          },
          "GraphAPIComputeServiceGet": {
            "$ref": "./examples/CosmosDBGraphAPIComputeServiceGet.json"
          },
          "MaterializedViewsBuilderServiceGet": {
            "$ref": "./examples/CosmosDBMaterializedViewsBuilderServiceGet.json"
          },
          "SqlDedicatedGatewayServiceGet": {
            "$ref": "./examples/services/sqldedicatedgateway/CosmosDBSqlDedicatedGatewayServiceGet.json"
          }
        }
      },
      "put": {
        "operationId": "Service_Create",
        "tags": [
          "ServiceResources"
        ],
        "description": "Creates a service.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "Cosmos DB database account name.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "Cosmos DB service name.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50
          },
          {
            "name": "createUpdateParameters",
            "in": "body",
            "description": "The Service resource parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ServiceResourceCreateUpdateParameters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'ServiceResource' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/ServiceResource"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "DataTransferServiceCreate": {
            "$ref": "./examples/CosmosDBDataTransferServiceCreate.json"
          },
          "GraphAPIComputeServiceCreate": {
            "$ref": "./examples/CosmosDBGraphAPIComputeServiceCreate.json"
          },
          "MaterializedViewsBuilderServiceCreate": {
            "$ref": "./examples/CosmosDBMaterializedViewsBuilderServiceCreate.json"
          },
          "SqlDedicatedGatewayServiceCreate": {
            "$ref": "./examples/services/sqldedicatedgateway/CosmosDBSqlDedicatedGatewayServiceCreate.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location",
          "final-state-schema": "#/definitions/ServiceResource"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "Service_Delete",
        "tags": [
          "ServiceResources"
        ],
        "description": "Deletes service with the given serviceName.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "Cosmos DB database account name.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "serviceName",
            "in": "path",
            "description": "Cosmos DB service name.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "format": "uri",
                "description": "A link to the status monitor"
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "DataTransferServiceDelete": {
            "$ref": "./examples/CosmosDBDataTransferServiceDelete.json"
          },
          "GraphAPIComputeServiceDelete": {
            "$ref": "./examples/CosmosDBGraphAPIComputeServiceDelete.json"
          },
          "MaterializedViewsBuilderServiceDelete": {
            "$ref": "./examples/CosmosDBMaterializedViewsBuilderServiceDelete.json"
          },
          "SqlDedicatedGatewayServiceDelete": {
            "$ref": "./examples/services/sqldedicatedgateway/CosmosDBSqlDedicatedGatewayServiceDelete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/sourceRegion/{sourceRegion}/targetRegion/{targetRegion}/percentile/metrics": {
      "get": {
        "operationId": "PercentileSourceTarget_ListMetrics",
        "tags": [
          "DatabaseAccounts"
        ],
        "description": "Retrieves the metrics determined by the given filter for the given account, source and target region. This url is only for PBS and Replication Latency data",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "Cosmos DB database account name.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "sourceRegion",
            "in": "path",
            "description": "Source region from which data is written. Cosmos DB region, with spaces between words and each word capitalized.",
            "required": true,
            "type": "string"
          },
          {
            "name": "targetRegion",
            "in": "path",
            "description": "Target region to which data is written. Cosmos DB region, with spaces between words and each word capitalized.",
            "required": true,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "An OData filter expression that describes a subset of metrics to return. The parameters that can be filtered are name.value (name of the metric, can have an or of multiple names), startTime, endTime, and timeGrain. The supported operator is eq.",
            "required": true,
            "type": "string",
            "x-ms-client-name": "filter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/PercentileMetricListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBDatabaseAccountRegionGetMetrics": {
            "$ref": "./examples/CosmosDBPercentileSourceTargetGetMetrics.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/sqlDatabases": {
      "get": {
        "operationId": "SqlResources_ListSqlDatabases",
        "tags": [
          "SqlResources"
        ],
        "description": "Lists the SQL databases under an existing Azure Cosmos DB database account.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "Cosmos DB database account name.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/SqlDatabaseListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBSqlDatabaseList": {
            "$ref": "./examples/CosmosDBSqlDatabaseList.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/sqlDatabases/{databaseName}": {
      "get": {
        "operationId": "SqlResources_GetSqlDatabase",
        "tags": [
          "SqlResources"
        ],
        "description": "Gets the SQL database under an existing Azure Cosmos DB database account with the provided name.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "Cosmos DB database account name.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "databaseName",
            "in": "path",
            "description": "Cosmos DB database name.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/SqlDatabaseGetResults"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBSqlDatabaseGet": {
            "$ref": "./examples/CosmosDBSqlDatabaseGet.json"
          }
        }
      },
      "put": {
        "operationId": "SqlResources_CreateUpdateSqlDatabase",
        "tags": [
          "SqlResources"
        ],
        "description": "Create or update an Azure Cosmos DB SQL database",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "Cosmos DB database account name.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "databaseName",
            "in": "path",
            "description": "Cosmos DB database name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "createUpdateSqlDatabaseParameters",
            "in": "body",
            "description": "The parameters to provide for the current SQL database.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SqlDatabaseCreateUpdateParameters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'SqlDatabaseGetResults' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/SqlDatabaseGetResults"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBSqlDatabaseCreateUpdate": {
            "$ref": "./examples/CosmosDBSqlDatabaseCreateUpdate.json"
          },
          "CosmosDBSqlDatabaseRestore": {
            "$ref": "./examples/CosmosDBSqlDatabaseRestore.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location",
          "final-state-schema": "#/definitions/SqlDatabaseGetResults"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "SqlResources_DeleteSqlDatabase",
        "tags": [
          "SqlResources"
        ],
        "description": "Deletes an existing Azure Cosmos DB SQL database.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "Cosmos DB database account name.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "databaseName",
            "in": "path",
            "description": "Cosmos DB database name.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBSqlDatabaseDelete": {
            "$ref": "./examples/CosmosDBSqlDatabaseDelete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/sqlDatabases/{databaseName}/clientEncryptionKeys": {
      "get": {
        "operationId": "SqlResources_ListClientEncryptionKeys",
        "tags": [
          "ClientEncryptionKeyGetResultsOperationGroup"
        ],
        "description": "Lists the ClientEncryptionKeys under an existing Azure Cosmos DB SQL database.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "Cosmos DB database account name.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "databaseName",
            "in": "path",
            "description": "Cosmos DB database name.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ClientEncryptionKeysListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBClientEncryptionKeysList": {
            "$ref": "./examples/CosmosDBSqlClientEncryptionKeysList.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/sqlDatabases/{databaseName}/clientEncryptionKeys/{clientEncryptionKeyName}": {
      "get": {
        "operationId": "SqlResources_GetClientEncryptionKey",
        "tags": [
          "ClientEncryptionKeyGetResultsOperationGroup"
        ],
        "description": "Gets the ClientEncryptionKey under an existing Azure Cosmos DB SQL database.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "Cosmos DB database account name.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "databaseName",
            "in": "path",
            "description": "Cosmos DB database name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "clientEncryptionKeyName",
            "in": "path",
            "description": "Cosmos DB ClientEncryptionKey name.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ClientEncryptionKeyGetResults"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBClientEncryptionKeyGet": {
            "$ref": "./examples/CosmosDBSqlClientEncryptionKeyGet.json"
          }
        }
      },
      "put": {
        "operationId": "SqlResources_CreateUpdateClientEncryptionKey",
        "tags": [
          "ClientEncryptionKeyGetResultsOperationGroup"
        ],
        "description": "Create or update a ClientEncryptionKey. This API is meant to be invoked via tools such as the Azure Powershell (instead of directly).",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "Cosmos DB database account name.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "databaseName",
            "in": "path",
            "description": "Cosmos DB database name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "clientEncryptionKeyName",
            "in": "path",
            "description": "Cosmos DB ClientEncryptionKey name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "createUpdateClientEncryptionKeyParameters",
            "in": "body",
            "description": "The parameters to provide for the client encryption key.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ClientEncryptionKeyCreateUpdateParameters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'ClientEncryptionKeyGetResults' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/ClientEncryptionKeyGetResults"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBClientEncryptionKeyCreateUpdate": {
            "$ref": "./examples/CosmosDBSqlClientEncryptionKeyCreateUpdate.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location",
          "final-state-schema": "#/definitions/ClientEncryptionKeyGetResults"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/sqlDatabases/{databaseName}/containers": {
      "get": {
        "operationId": "SqlResources_ListSqlContainers",
        "tags": [
          "SqlContainerGetResultsOperationGroup"
        ],
        "description": "Lists the SQL container under an existing Azure Cosmos DB database account.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "Cosmos DB database account name.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "databaseName",
            "in": "path",
            "description": "Cosmos DB database name.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/SqlContainerListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBSqlContainerList": {
            "$ref": "./examples/CosmosDBSqlContainerList.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/sqlDatabases/{databaseName}/containers/{containerName}": {
      "get": {
        "operationId": "SqlResources_GetSqlContainer",
        "tags": [
          "SqlContainerGetResultsOperationGroup"
        ],
        "description": "Gets the SQL container under an existing Azure Cosmos DB database account.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "Cosmos DB database account name.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "databaseName",
            "in": "path",
            "description": "Cosmos DB database name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "containerName",
            "in": "path",
            "description": "Cosmos DB container name.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/SqlContainerGetResults"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBSqlContainerGet": {
            "$ref": "./examples/CosmosDBSqlContainerGet.json"
          }
        }
      },
      "put": {
        "operationId": "SqlResources_CreateUpdateSqlContainer",
        "tags": [
          "SqlContainerGetResultsOperationGroup"
        ],
        "description": "Create or update an Azure Cosmos DB SQL container",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "Cosmos DB database account name.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "databaseName",
            "in": "path",
            "description": "Cosmos DB database name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "containerName",
            "in": "path",
            "description": "Cosmos DB container name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "createUpdateSqlContainerParameters",
            "in": "body",
            "description": "The parameters to provide for the current SQL container.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SqlContainerCreateUpdateParameters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'SqlContainerGetResults' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/SqlContainerGetResults"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBSqlContainerCreateUpdate": {
            "$ref": "./examples/CosmosDBSqlContainerCreateUpdate.json"
          },
          "CosmosDBSqlContainerRestore": {
            "$ref": "./examples/CosmosDBSqlContainerRestore.json"
          },
          "CosmosDBSqlMaterializedViewCreateUpdate": {
            "$ref": "./examples/CosmosDBSqlMaterializedViewCreateUpdate.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location",
          "final-state-schema": "#/definitions/SqlContainerGetResults"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "SqlResources_DeleteSqlContainer",
        "tags": [
          "SqlContainerGetResultsOperationGroup"
        ],
        "description": "Deletes an existing Azure Cosmos DB SQL container.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "Cosmos DB database account name.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "databaseName",
            "in": "path",
            "description": "Cosmos DB database name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "containerName",
            "in": "path",
            "description": "Cosmos DB container name.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBSqlContainerDelete": {
            "$ref": "./examples/CosmosDBSqlContainerDelete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/sqlDatabases/{databaseName}/containers/{containerName}/partitionMerge": {
      "post": {
        "operationId": "SqlResources_ListSqlContainerPartitionMerge",
        "tags": [
          "SqlContainerGetResultsOperationGroup"
        ],
        "description": "Merges the partitions of a SQL Container",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "Cosmos DB database account name.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "databaseName",
            "in": "path",
            "description": "Cosmos DB database name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "containerName",
            "in": "path",
            "description": "Cosmos DB container name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "mergeParameters",
            "in": "body",
            "description": "The parameters for the merge operation.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MergeParameters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/PhysicalPartitionStorageInfoCollection"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBSqlContainerPartitionMerge": {
            "$ref": "./examples/CosmosDBSqlContainerPartitionMerge.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location",
          "final-state-schema": "#/definitions/PhysicalPartitionStorageInfoCollection"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/sqlDatabases/{databaseName}/containers/{containerName}/retrieveContinuousBackupInformation": {
      "post": {
        "operationId": "SqlResources_RetrieveContinuousBackupInformation",
        "tags": [
          "SqlContainerGetResultsOperationGroup"
        ],
        "description": "Retrieves continuous backup information for a container resource.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "Cosmos DB database account name.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "databaseName",
            "in": "path",
            "description": "Cosmos DB database name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "containerName",
            "in": "path",
            "description": "Cosmos DB container name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "location",
            "in": "body",
            "description": "The name of the continuous backup restore location.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ContinuousBackupRestoreLocation"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/BackupInformation"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBSqlContainerBackupInformation": {
            "$ref": "./examples/CosmosDBSqlContainerBackupInformation.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location",
          "final-state-schema": "#/definitions/BackupInformation"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/sqlDatabases/{databaseName}/containers/{containerName}/storedProcedures": {
      "get": {
        "operationId": "SqlResources_ListSqlStoredProcedures",
        "tags": [
          "SqlStoredProcedureGetResultsOperationGroup"
        ],
        "description": "Lists the SQL storedProcedure under an existing Azure Cosmos DB database account.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "Cosmos DB database account name.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "databaseName",
            "in": "path",
            "description": "Cosmos DB database name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "containerName",
            "in": "path",
            "description": "Cosmos DB container name.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/SqlStoredProcedureListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBSqlStoredProcedureList": {
            "$ref": "./examples/CosmosDBSqlStoredProcedureList.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/sqlDatabases/{databaseName}/containers/{containerName}/storedProcedures/{storedProcedureName}": {
      "get": {
        "operationId": "SqlResources_GetSqlStoredProcedure",
        "tags": [
          "SqlStoredProcedureGetResultsOperationGroup"
        ],
        "description": "Gets the SQL storedProcedure under an existing Azure Cosmos DB database account.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "Cosmos DB database account name.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "databaseName",
            "in": "path",
            "description": "Cosmos DB database name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "containerName",
            "in": "path",
            "description": "Cosmos DB container name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "storedProcedureName",
            "in": "path",
            "description": "Cosmos DB storedProcedure name.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/SqlStoredProcedureGetResults"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBSqlStoredProcedureGet": {
            "$ref": "./examples/CosmosDBSqlStoredProcedureGet.json"
          }
        }
      },
      "put": {
        "operationId": "SqlResources_CreateUpdateSqlStoredProcedure",
        "tags": [
          "SqlStoredProcedureGetResultsOperationGroup"
        ],
        "description": "Create or update an Azure Cosmos DB SQL storedProcedure",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "Cosmos DB database account name.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "databaseName",
            "in": "path",
            "description": "Cosmos DB database name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "containerName",
            "in": "path",
            "description": "Cosmos DB container name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "storedProcedureName",
            "in": "path",
            "description": "Cosmos DB storedProcedure name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "createUpdateSqlStoredProcedureParameters",
            "in": "body",
            "description": "The parameters to provide for the current SQL storedProcedure.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SqlStoredProcedureCreateUpdateParameters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'SqlStoredProcedureGetResults' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/SqlStoredProcedureGetResults"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBSqlStoredProcedureCreateUpdate": {
            "$ref": "./examples/CosmosDBSqlStoredProcedureCreateUpdate.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location",
          "final-state-schema": "#/definitions/SqlStoredProcedureGetResults"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "SqlResources_DeleteSqlStoredProcedure",
        "tags": [
          "SqlStoredProcedureGetResultsOperationGroup"
        ],
        "description": "Deletes an existing Azure Cosmos DB SQL storedProcedure.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "Cosmos DB database account name.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "databaseName",
            "in": "path",
            "description": "Cosmos DB database name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "containerName",
            "in": "path",
            "description": "Cosmos DB container name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "storedProcedureName",
            "in": "path",
            "description": "Cosmos DB storedProcedure name.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBSqlStoredProcedureDelete": {
            "$ref": "./examples/CosmosDBSqlStoredProcedureDelete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/sqlDatabases/{databaseName}/containers/{containerName}/throughputSettings/default": {
      "get": {
        "operationId": "SqlResources_GetSqlContainerThroughput",
        "tags": [
          "SqlResourcesThroughputSettingsGetResultsOperationGroup"
        ],
        "description": "Gets the RUs per second of the SQL container under an existing Azure Cosmos DB database account.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "Cosmos DB database account name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "databaseName",
            "in": "path",
            "description": "Cosmos DB database name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "containerName",
            "in": "path",
            "description": "Cosmos DB container name.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ThroughputSettingsGetResults"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBSqlContainerThroughputGet": {
            "$ref": "./examples/CosmosDBSqlContainerThroughputGet.json"
          }
        }
      },
      "put": {
        "operationId": "SqlResources_UpdateSqlContainerThroughput",
        "tags": [
          "SqlResourcesThroughputSettingsGetResultsOperationGroup"
        ],
        "description": "Update RUs per second of an Azure Cosmos DB SQL container",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "Cosmos DB database account name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "databaseName",
            "in": "path",
            "description": "Cosmos DB database name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "containerName",
            "in": "path",
            "description": "Cosmos DB container name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "updateThroughputParameters",
            "in": "body",
            "description": "The parameters to provide for the RUs per second of the current SQL container.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ThroughputSettingsUpdateParameters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'ThroughputSettingsGetResults' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/ThroughputSettingsGetResults"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBSqlContainerThroughputUpdate": {
            "$ref": "./examples/CosmosDBSqlContainerThroughputUpdate.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location",
          "final-state-schema": "#/definitions/ThroughputSettingsGetResults"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/sqlDatabases/{databaseName}/containers/{containerName}/throughputSettings/default/migrateToAutoscale": {
      "post": {
        "operationId": "SqlResources_MigrateSqlContainerToAutoscale",
        "tags": [
          "SqlResourcesThroughputSettingsGetResultsOperationGroup"
        ],
        "description": "Migrate an Azure Cosmos DB SQL container from manual throughput to autoscale",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "Cosmos DB database account name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "databaseName",
            "in": "path",
            "description": "Cosmos DB database name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "containerName",
            "in": "path",
            "description": "Cosmos DB container name.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ThroughputSettingsGetResults"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBSqlContainerMigrateToAutoscale": {
            "$ref": "./examples/CosmosDBSqlContainerMigrateToAutoscale.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location",
          "final-state-schema": "#/definitions/ThroughputSettingsGetResults"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/sqlDatabases/{databaseName}/containers/{containerName}/throughputSettings/default/migrateToManualThroughput": {
      "post": {
        "operationId": "SqlResources_MigrateSqlContainerToManualThroughput",
        "tags": [
          "SqlResourcesThroughputSettingsGetResultsOperationGroup"
        ],
        "description": "Migrate an Azure Cosmos DB SQL container from autoscale to manual throughput",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "Cosmos DB database account name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "databaseName",
            "in": "path",
            "description": "Cosmos DB database name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "containerName",
            "in": "path",
            "description": "Cosmos DB container name.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ThroughputSettingsGetResults"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBSqlContainerMigrateToManualThroughput": {
            "$ref": "./examples/CosmosDBSqlContainerMigrateToManualThroughput.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location",
          "final-state-schema": "#/definitions/ThroughputSettingsGetResults"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/sqlDatabases/{databaseName}/containers/{containerName}/throughputSettings/default/redistributeThroughput": {
      "post": {
        "operationId": "SqlResources_SqlContainerRedistributeThroughput",
        "tags": [
          "SqlResourcesThroughputSettingsGetResultsOperationGroup"
        ],
        "description": "Redistribute throughput for an Azure Cosmos DB SQL container",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "Cosmos DB database account name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "databaseName",
            "in": "path",
            "description": "Cosmos DB database name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "containerName",
            "in": "path",
            "description": "Cosmos DB container name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "redistributeThroughputParameters",
            "in": "body",
            "description": "The parameters to provide for redistributing throughput for the current SQL container.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RedistributeThroughputParameters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/PhysicalPartitionThroughputInfoResult"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBSqlContainerRedistributeThroughput": {
            "$ref": "./examples/CosmosDBSqlContainerRedistributeThroughput.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location",
          "final-state-schema": "#/definitions/PhysicalPartitionThroughputInfoResult"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/sqlDatabases/{databaseName}/containers/{containerName}/throughputSettings/default/retrieveThroughputDistribution": {
      "post": {
        "operationId": "SqlResources_SqlContainerRetrieveThroughputDistribution",
        "tags": [
          "SqlResourcesThroughputSettingsGetResultsOperationGroup"
        ],
        "description": "Retrieve throughput distribution for an Azure Cosmos DB SQL container",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "Cosmos DB database account name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "databaseName",
            "in": "path",
            "description": "Cosmos DB database name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "containerName",
            "in": "path",
            "description": "Cosmos DB container name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "retrieveThroughputParameters",
            "in": "body",
            "description": "The parameters to provide for retrieving throughput distribution for the current SQL container.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RetrieveThroughputParameters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/PhysicalPartitionThroughputInfoResult"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBSqlContainerRetrieveThroughputDistribution": {
            "$ref": "./examples/CosmosDBSqlContainerRetrieveThroughputDistribution.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location",
          "final-state-schema": "#/definitions/PhysicalPartitionThroughputInfoResult"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/sqlDatabases/{databaseName}/containers/{containerName}/triggers": {
      "get": {
        "operationId": "SqlResources_ListSqlTriggers",
        "tags": [
          "SqlTriggerGetResultsOperationGroup"
        ],
        "description": "Lists the SQL trigger under an existing Azure Cosmos DB database account.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "Cosmos DB database account name.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "databaseName",
            "in": "path",
            "description": "Cosmos DB database name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "containerName",
            "in": "path",
            "description": "Cosmos DB container name.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/SqlTriggerListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBSqlTriggerList": {
            "$ref": "./examples/CosmosDBSqlTriggerList.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/sqlDatabases/{databaseName}/containers/{containerName}/triggers/{triggerName}": {
      "get": {
        "operationId": "SqlResources_GetSqlTrigger",
        "tags": [
          "SqlTriggerGetResultsOperationGroup"
        ],
        "description": "Gets the SQL trigger under an existing Azure Cosmos DB database account.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "Cosmos DB database account name.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "databaseName",
            "in": "path",
            "description": "Cosmos DB database name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "containerName",
            "in": "path",
            "description": "Cosmos DB container name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "triggerName",
            "in": "path",
            "description": "Cosmos DB trigger name.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/SqlTriggerGetResults"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBSqlTriggerGet": {
            "$ref": "./examples/CosmosDBSqlTriggerGet.json"
          }
        }
      },
      "put": {
        "operationId": "SqlResources_CreateUpdateSqlTrigger",
        "tags": [
          "SqlTriggerGetResultsOperationGroup"
        ],
        "description": "Create or update an Azure Cosmos DB SQL trigger",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "Cosmos DB database account name.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "databaseName",
            "in": "path",
            "description": "Cosmos DB database name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "containerName",
            "in": "path",
            "description": "Cosmos DB container name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "triggerName",
            "in": "path",
            "description": "Cosmos DB trigger name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "createUpdateSqlTriggerParameters",
            "in": "body",
            "description": "The parameters to provide for the current SQL trigger.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SqlTriggerCreateUpdateParameters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'SqlTriggerGetResults' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/SqlTriggerGetResults"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBSqlTriggerCreateUpdate": {
            "$ref": "./examples/CosmosDBSqlTriggerCreateUpdate.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location",
          "final-state-schema": "#/definitions/SqlTriggerGetResults"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "SqlResources_DeleteSqlTrigger",
        "tags": [
          "SqlTriggerGetResultsOperationGroup"
        ],
        "description": "Deletes an existing Azure Cosmos DB SQL trigger.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "Cosmos DB database account name.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "databaseName",
            "in": "path",
            "description": "Cosmos DB database name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "containerName",
            "in": "path",
            "description": "Cosmos DB container name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "triggerName",
            "in": "path",
            "description": "Cosmos DB trigger name.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBSqlTriggerDelete": {
            "$ref": "./examples/CosmosDBSqlTriggerDelete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/sqlDatabases/{databaseName}/containers/{containerName}/userDefinedFunctions": {
      "get": {
        "operationId": "SqlResources_ListSqlUserDefinedFunctions",
        "tags": [
          "SqlUserDefinedFunctionGetResultsOperationGroup"
        ],
        "description": "Lists the SQL userDefinedFunction under an existing Azure Cosmos DB database account.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "Cosmos DB database account name.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "databaseName",
            "in": "path",
            "description": "Cosmos DB database name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "containerName",
            "in": "path",
            "description": "Cosmos DB container name.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/SqlUserDefinedFunctionListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBSqlUserDefinedFunctionList": {
            "$ref": "./examples/CosmosDBSqlUserDefinedFunctionList.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/sqlDatabases/{databaseName}/containers/{containerName}/userDefinedFunctions/{userDefinedFunctionName}": {
      "get": {
        "operationId": "SqlResources_GetSqlUserDefinedFunction",
        "tags": [
          "SqlUserDefinedFunctionGetResultsOperationGroup"
        ],
        "description": "Gets the SQL userDefinedFunction under an existing Azure Cosmos DB database account.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "Cosmos DB database account name.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "databaseName",
            "in": "path",
            "description": "Cosmos DB database name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "containerName",
            "in": "path",
            "description": "Cosmos DB container name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "userDefinedFunctionName",
            "in": "path",
            "description": "Cosmos DB userDefinedFunction name.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/SqlUserDefinedFunctionGetResults"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBSqlUserDefinedFunctionGet": {
            "$ref": "./examples/CosmosDBSqlUserDefinedFunctionGet.json"
          }
        }
      },
      "put": {
        "operationId": "SqlResources_CreateUpdateSqlUserDefinedFunction",
        "tags": [
          "SqlUserDefinedFunctionGetResultsOperationGroup"
        ],
        "description": "Create or update an Azure Cosmos DB SQL userDefinedFunction",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "Cosmos DB database account name.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "databaseName",
            "in": "path",
            "description": "Cosmos DB database name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "containerName",
            "in": "path",
            "description": "Cosmos DB container name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "userDefinedFunctionName",
            "in": "path",
            "description": "Cosmos DB userDefinedFunction name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "createUpdateSqlUserDefinedFunctionParameters",
            "in": "body",
            "description": "The parameters to provide for the current SQL userDefinedFunction.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SqlUserDefinedFunctionCreateUpdateParameters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'SqlUserDefinedFunctionGetResults' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/SqlUserDefinedFunctionGetResults"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBSqlUserDefinedFunctionCreateUpdate": {
            "$ref": "./examples/CosmosDBSqlUserDefinedFunctionCreateUpdate.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location",
          "final-state-schema": "#/definitions/SqlUserDefinedFunctionGetResults"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "SqlResources_DeleteSqlUserDefinedFunction",
        "tags": [
          "SqlUserDefinedFunctionGetResultsOperationGroup"
        ],
        "description": "Deletes an existing Azure Cosmos DB SQL userDefinedFunction.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "Cosmos DB database account name.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "databaseName",
            "in": "path",
            "description": "Cosmos DB database name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "containerName",
            "in": "path",
            "description": "Cosmos DB container name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "userDefinedFunctionName",
            "in": "path",
            "description": "Cosmos DB userDefinedFunction name.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBSqlUserDefinedFunctionDelete": {
            "$ref": "./examples/CosmosDBSqlUserDefinedFunctionDelete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/sqlDatabases/{databaseName}/partitionMerge": {
      "post": {
        "operationId": "SqlResources_SqlDatabasePartitionMerge",
        "tags": [
          "SqlResources"
        ],
        "description": "Merges the partitions of a SQL database",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "Cosmos DB database account name.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "databaseName",
            "in": "path",
            "description": "Cosmos DB database name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "mergeParameters",
            "in": "body",
            "description": "The parameters for the merge operation.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MergeParameters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/PhysicalPartitionStorageInfoCollection"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBSqlDatabasePartitionMerge": {
            "$ref": "./examples/CosmosDBSqlDatabasePartitionMerge.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location",
          "final-state-schema": "#/definitions/PhysicalPartitionStorageInfoCollection"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/sqlDatabases/{databaseName}/throughputSettings/default": {
      "get": {
        "operationId": "SqlResources_GetSqlDatabaseThroughput",
        "tags": [
          "ThroughputSettingsGetResultsOperationGroup"
        ],
        "description": "Gets the RUs per second of the SQL database under an existing Azure Cosmos DB database account with the provided name.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "Cosmos DB database account name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "databaseName",
            "in": "path",
            "description": "Cosmos DB database name.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ThroughputSettingsGetResults"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBSqlDatabaseThroughputGet": {
            "$ref": "./examples/CosmosDBSqlDatabaseThroughputGet.json"
          }
        }
      },
      "put": {
        "operationId": "SqlResources_UpdateSqlDatabaseThroughput",
        "tags": [
          "ThroughputSettingsGetResultsOperationGroup"
        ],
        "description": "Update RUs per second of an Azure Cosmos DB SQL database",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "Cosmos DB database account name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "databaseName",
            "in": "path",
            "description": "Cosmos DB database name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "updateThroughputParameters",
            "in": "body",
            "description": "The parameters to provide for the RUs per second of the current SQL database.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ThroughputSettingsUpdateParameters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'ThroughputSettingsGetResults' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/ThroughputSettingsGetResults"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBSqlDatabaseThroughputUpdate": {
            "$ref": "./examples/CosmosDBSqlDatabaseThroughputUpdate.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location",
          "final-state-schema": "#/definitions/ThroughputSettingsGetResults"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/sqlDatabases/{databaseName}/throughputSettings/default/migrateToAutoscale": {
      "post": {
        "operationId": "SqlResources_MigrateSqlDatabaseToAutoscale",
        "tags": [
          "ThroughputSettingsGetResultsOperationGroup"
        ],
        "description": "Migrate an Azure Cosmos DB SQL database from manual throughput to autoscale",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "Cosmos DB database account name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "databaseName",
            "in": "path",
            "description": "Cosmos DB database name.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ThroughputSettingsGetResults"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBSqlDatabaseMigrateToAutoscale": {
            "$ref": "./examples/CosmosDBSqlDatabaseMigrateToAutoscale.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location",
          "final-state-schema": "#/definitions/ThroughputSettingsGetResults"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/sqlDatabases/{databaseName}/throughputSettings/default/migrateToManualThroughput": {
      "post": {
        "operationId": "SqlResources_MigrateSqlDatabaseToManualThroughput",
        "tags": [
          "ThroughputSettingsGetResultsOperationGroup"
        ],
        "description": "Migrate an Azure Cosmos DB SQL database from autoscale to manual throughput",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "Cosmos DB database account name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "databaseName",
            "in": "path",
            "description": "Cosmos DB database name.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ThroughputSettingsGetResults"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBSqlDatabaseMigrateToManualThroughput": {
            "$ref": "./examples/CosmosDBSqlDatabaseMigrateToManualThroughput.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location",
          "final-state-schema": "#/definitions/ThroughputSettingsGetResults"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/sqlDatabases/{databaseName}/throughputSettings/default/redistributeThroughput": {
      "post": {
        "operationId": "SqlResources_SqlDatabaseRedistributeThroughput",
        "tags": [
          "ThroughputSettingsGetResultsOperationGroup"
        ],
        "description": "Redistribute throughput for an Azure Cosmos DB SQL database",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "Cosmos DB database account name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "databaseName",
            "in": "path",
            "description": "Cosmos DB database name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "redistributeThroughputParameters",
            "in": "body",
            "description": "The parameters to provide for redistributing throughput for the current SQL database.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RedistributeThroughputParameters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/PhysicalPartitionThroughputInfoResult"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBSqlDatabaseRedistributeThroughput": {
            "$ref": "./examples/CosmosDBSqlDatabaseRedistributeThroughput.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location",
          "final-state-schema": "#/definitions/PhysicalPartitionThroughputInfoResult"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/sqlDatabases/{databaseName}/throughputSettings/default/retrieveThroughputDistribution": {
      "post": {
        "operationId": "SqlResources_SqlDatabaseRetrieveThroughputDistribution",
        "tags": [
          "ThroughputSettingsGetResultsOperationGroup"
        ],
        "description": "Retrieve throughput distribution for an Azure Cosmos DB SQL database",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "Cosmos DB database account name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "databaseName",
            "in": "path",
            "description": "Cosmos DB database name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "retrieveThroughputParameters",
            "in": "body",
            "description": "The parameters to provide for retrieving throughput distribution for the current SQL database.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RetrieveThroughputParameters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/PhysicalPartitionThroughputInfoResult"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBSqlDatabaseRetrieveThroughputDistribution": {
            "$ref": "./examples/CosmosDBSqlDatabaseRetrieveThroughputDistribution.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location",
          "final-state-schema": "#/definitions/PhysicalPartitionThroughputInfoResult"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/sqlRoleAssignments": {
      "get": {
        "operationId": "SqlResources_ListSqlRoleAssignments",
        "tags": [
          "SqlRoleAssignmentGetResultsOperationGroup"
        ],
        "description": "Retrieves the list of all Azure Cosmos DB SQL Role Assignments.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "Cosmos DB database account name.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/SqlRoleAssignmentListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBSqlRoleAssignmentList": {
            "$ref": "./examples/CosmosDBSqlRoleAssignmentList.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/sqlRoleAssignments/{roleAssignmentId}": {
      "get": {
        "operationId": "SqlResources_GetSqlRoleAssignment",
        "tags": [
          "SqlRoleAssignmentGetResultsOperationGroup"
        ],
        "description": "Retrieves the properties of an existing Azure Cosmos DB SQL Role Assignment with the given Id.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "Cosmos DB database account name.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "roleAssignmentId",
            "in": "path",
            "description": "The GUID for the Role Assignment.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/SqlRoleAssignmentGetResults"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBSqlRoleAssignmentGet": {
            "$ref": "./examples/CosmosDBSqlRoleAssignmentGet.json"
          }
        }
      },
      "put": {
        "operationId": "SqlResources_CreateUpdateSqlRoleAssignment",
        "tags": [
          "SqlRoleAssignmentGetResultsOperationGroup"
        ],
        "description": "Creates or updates an Azure Cosmos DB SQL Role Assignment.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "Cosmos DB database account name.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "roleAssignmentId",
            "in": "path",
            "description": "The GUID for the Role Assignment.",
            "required": true,
            "type": "string"
          },
          {
            "name": "createUpdateSqlRoleAssignmentParameters",
            "in": "body",
            "description": "The properties required to create or update a Role Assignment.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SqlRoleAssignmentCreateUpdateParameters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'SqlRoleAssignmentGetResults' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/SqlRoleAssignmentGetResults"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBSqlRoleAssignmentCreateUpdate": {
            "$ref": "./examples/CosmosDBSqlRoleAssignmentCreateUpdate.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location",
          "final-state-schema": "#/definitions/SqlRoleAssignmentGetResults"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "SqlResources_DeleteSqlRoleAssignment",
        "tags": [
          "SqlRoleAssignmentGetResultsOperationGroup"
        ],
        "description": "Deletes an existing Azure Cosmos DB SQL Role Assignment.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "Cosmos DB database account name.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "roleAssignmentId",
            "in": "path",
            "description": "The GUID for the Role Assignment.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBSqlRoleAssignmentDelete": {
            "$ref": "./examples/CosmosDBSqlRoleAssignmentDelete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/sqlRoleDefinitions": {
      "get": {
        "operationId": "SqlResources_ListSqlRoleDefinitions",
        "tags": [
          "SqlRoleDefinitionGetResultsOperationGroup"
        ],
        "description": "Retrieves the list of all Azure Cosmos DB SQL Role Definitions.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "Cosmos DB database account name.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/SqlRoleDefinitionListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBSqlRoleDefinitionList": {
            "$ref": "./examples/CosmosDBSqlRoleDefinitionList.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/sqlRoleDefinitions/{roleDefinitionId}": {
      "get": {
        "operationId": "SqlResources_GetSqlRoleDefinition",
        "tags": [
          "SqlRoleDefinitionGetResultsOperationGroup"
        ],
        "description": "Retrieves the properties of an existing Azure Cosmos DB SQL Role Definition with the given Id.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "Cosmos DB database account name.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "roleDefinitionId",
            "in": "path",
            "description": "The GUID for the Role Definition.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/SqlRoleDefinitionGetResults"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBSqlRoleDefinitionGet": {
            "$ref": "./examples/CosmosDBSqlRoleDefinitionGet.json"
          }
        }
      },
      "put": {
        "operationId": "SqlResources_CreateUpdateSqlRoleDefinition",
        "tags": [
          "SqlRoleDefinitionGetResultsOperationGroup"
        ],
        "description": "Creates or updates an Azure Cosmos DB SQL Role Definition.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "Cosmos DB database account name.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "roleDefinitionId",
            "in": "path",
            "description": "The GUID for the Role Definition.",
            "required": true,
            "type": "string"
          },
          {
            "name": "createUpdateSqlRoleDefinitionParameters",
            "in": "body",
            "description": "The properties required to create or update a Role Definition.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SqlRoleDefinitionCreateUpdateParameters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'SqlRoleDefinitionGetResults' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/SqlRoleDefinitionGetResults"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBSqlRoleDefinitionCreateUpdate": {
            "$ref": "./examples/CosmosDBSqlRoleDefinitionCreateUpdate.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location",
          "final-state-schema": "#/definitions/SqlRoleDefinitionGetResults"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "SqlResources_DeleteSqlRoleDefinition",
        "tags": [
          "SqlRoleDefinitionGetResultsOperationGroup"
        ],
        "description": "Deletes an existing Azure Cosmos DB SQL Role Definition.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "Cosmos DB database account name.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "roleDefinitionId",
            "in": "path",
            "description": "The GUID for the Role Definition.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBSqlRoleDefinitionDelete": {
            "$ref": "./examples/CosmosDBSqlRoleDefinitionDelete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/tableRoleAssignments": {
      "get": {
        "operationId": "TableResources_ListTableRoleAssignments",
        "tags": [
          "TableRoleAssignmentResources"
        ],
        "description": "Retrieves the list of all Azure Cosmos DB Table Role Assignments.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "Cosmos DB database account name.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/TableRoleAssignmentResourceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBTableRoleAssignmentList": {
            "$ref": "./examples/tablerbac/CosmosDBTableRoleAssignmentList.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/tableRoleAssignments/{roleAssignmentId}": {
      "get": {
        "operationId": "TableResources_GetTableRoleAssignment",
        "tags": [
          "TableRoleAssignmentResources"
        ],
        "description": "Retrieves the properties of an existing Azure Cosmos DB Table Role Assignment with the given Id.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "Cosmos DB database account name.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "roleAssignmentId",
            "in": "path",
            "description": "The GUID for the Role Assignment.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/TableRoleAssignmentResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBTableRoleAssignmentGet": {
            "$ref": "./examples/tablerbac/CosmosDBTableRoleAssignmentGet.json"
          }
        }
      },
      "put": {
        "operationId": "TableResources_CreateUpdateTableRoleAssignment",
        "tags": [
          "TableRoleAssignmentResources"
        ],
        "description": "Creates or updates an Azure Cosmos DB Table Role Assignment.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "Cosmos DB database account name.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "roleAssignmentId",
            "in": "path",
            "description": "The GUID for the Role Assignment.",
            "required": true,
            "type": "string"
          },
          {
            "name": "createUpdateTableRoleAssignmentParameters",
            "in": "body",
            "description": "The properties required to create or update a Role Assignment.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TableRoleAssignmentResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'TableRoleAssignmentResource' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/TableRoleAssignmentResource"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "format": "uri",
                "description": "A link to the status monitor"
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBTableRoleAssignmentCreateUpdate": {
            "$ref": "./examples/tablerbac/CosmosDBTableRoleAssignmentCreateUpdate.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location",
          "final-state-schema": "#/definitions/TableRoleAssignmentResource"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "TableResources_DeleteTableRoleAssignment",
        "tags": [
          "TableRoleAssignmentResources"
        ],
        "description": "Deletes an existing Azure Cosmos DB Table Role Assignment.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "Cosmos DB database account name.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "roleAssignmentId",
            "in": "path",
            "description": "The GUID for the Role Assignment.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "format": "uri",
                "description": "A link to the status monitor"
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBTableRoleAssignmentDelete": {
            "$ref": "./examples/tablerbac/CosmosDBTableRoleAssignmentDelete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/tableRoleDefinitions": {
      "get": {
        "operationId": "TableResources_ListTableRoleDefinitions",
        "tags": [
          "TableRoleDefinitionResources"
        ],
        "description": "Retrieves the list of all Azure Cosmos DB Table Role Definitions.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "Cosmos DB database account name.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/TableRoleDefinitionResourceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBTableRoleDefinitionList": {
            "$ref": "./examples/tablerbac/CosmosDBTableRoleDefinitionList.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/tableRoleDefinitions/{roleDefinitionId}": {
      "get": {
        "operationId": "TableResources_GetTableRoleDefinition",
        "tags": [
          "TableRoleDefinitionResources"
        ],
        "description": "Retrieves the properties of an existing Azure Cosmos DB Table Role Definition with the given Id.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "Cosmos DB database account name.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "roleDefinitionId",
            "in": "path",
            "description": "The GUID for the Role Definition.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/TableRoleDefinitionResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBTableRoleDefinitionGet": {
            "$ref": "./examples/tablerbac/CosmosDBTableRoleDefinitionGet.json"
          }
        }
      },
      "put": {
        "operationId": "TableResources_CreateUpdateTableRoleDefinition",
        "tags": [
          "TableRoleDefinitionResources"
        ],
        "description": "Creates or updates an Azure Cosmos DB Table Role Definition.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "Cosmos DB database account name.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "roleDefinitionId",
            "in": "path",
            "description": "The GUID for the Role Definition.",
            "required": true,
            "type": "string"
          },
          {
            "name": "createUpdateTableRoleDefinitionParameters",
            "in": "body",
            "description": "The properties required to create or update a Role Definition.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TableRoleDefinitionResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'TableRoleDefinitionResource' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/TableRoleDefinitionResource"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "format": "uri",
                "description": "A link to the status monitor"
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBTableRoleDefinitionCreateUpdate": {
            "$ref": "./examples/tablerbac/CosmosDBTableRoleDefinitionCreateUpdate.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location",
          "final-state-schema": "#/definitions/TableRoleDefinitionResource"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "TableResources_DeleteTableRoleDefinition",
        "tags": [
          "TableRoleDefinitionResources"
        ],
        "description": "Deletes an existing Azure Cosmos DB Table Role Definition.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "Cosmos DB database account name.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "roleDefinitionId",
            "in": "path",
            "description": "The GUID for the Role Definition.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "format": "uri",
                "description": "A link to the status monitor"
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBTableRoleDefinitionDelete": {
            "$ref": "./examples/tablerbac/CosmosDBTableRoleDefinitionDelete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/tables": {
      "get": {
        "operationId": "TableResources_ListTables",
        "tags": [
          "TableGetResultsOperationGroup"
        ],
        "description": "Lists the Tables under an existing Azure Cosmos DB database account.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "Cosmos DB database account name.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/TableListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBTableList": {
            "$ref": "./examples/CosmosDBTableList.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/tables/{tableName}": {
      "get": {
        "operationId": "TableResources_GetTable",
        "tags": [
          "TableGetResultsOperationGroup"
        ],
        "description": "Gets the Tables under an existing Azure Cosmos DB database account with the provided name.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "Cosmos DB database account name.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "tableName",
            "in": "path",
            "description": "Cosmos DB table name.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/TableGetResults"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBTableGet": {
            "$ref": "./examples/CosmosDBTableGet.json"
          }
        }
      },
      "put": {
        "operationId": "TableResources_CreateUpdateTable",
        "tags": [
          "TableGetResultsOperationGroup"
        ],
        "description": "Create or update an Azure Cosmos DB Table",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "Cosmos DB database account name.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "tableName",
            "in": "path",
            "description": "Cosmos DB table name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "createUpdateTableParameters",
            "in": "body",
            "description": "The parameters to provide for the current Table.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TableCreateUpdateParameters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'TableGetResults' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/TableGetResults"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBTableReplace": {
            "$ref": "./examples/CosmosDBTableCreateUpdate.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location",
          "final-state-schema": "#/definitions/TableGetResults"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "TableResources_DeleteTable",
        "tags": [
          "TableGetResultsOperationGroup"
        ],
        "description": "Deletes an existing Azure Cosmos DB Table.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "Cosmos DB database account name.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "tableName",
            "in": "path",
            "description": "Cosmos DB table name.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBTableDelete": {
            "$ref": "./examples/CosmosDBTableDelete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/tables/{tableName}/retrieveContinuousBackupInformation": {
      "post": {
        "operationId": "TableResources_RetrieveContinuousBackupInformation",
        "tags": [
          "TableGetResultsOperationGroup"
        ],
        "description": "Retrieves continuous backup information for a table.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "Cosmos DB database account name.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "tableName",
            "in": "path",
            "description": "Cosmos DB table name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "location",
            "in": "body",
            "description": "The name of the continuous backup restore location.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ContinuousBackupRestoreLocation"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/BackupInformation"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBTableCollectionBackupInformation": {
            "$ref": "./examples/CosmosDBTableBackupInformation.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location",
          "final-state-schema": "#/definitions/BackupInformation"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/tables/{tableName}/throughputSettings/default": {
      "get": {
        "operationId": "TableResources_GetTableThroughput",
        "tags": [
          "TableResources"
        ],
        "description": "Gets the RUs per second of the Table under an existing Azure Cosmos DB database account with the provided name.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "Cosmos DB database account name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "tableName",
            "in": "path",
            "description": "Cosmos DB table name.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ThroughputSettingsGetResults"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBTableThroughputGet": {
            "$ref": "./examples/CosmosDBTableThroughputGet.json"
          }
        }
      },
      "put": {
        "operationId": "TableResources_UpdateTableThroughput",
        "tags": [
          "TableResources"
        ],
        "description": "Update RUs per second of an Azure Cosmos DB Table",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "Cosmos DB database account name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "tableName",
            "in": "path",
            "description": "Cosmos DB table name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "updateThroughputParameters",
            "in": "body",
            "description": "The parameters to provide for the RUs per second of the current Table.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ThroughputSettingsUpdateParameters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'ThroughputSettingsGetResults' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/ThroughputSettingsGetResults"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBTableThroughputUpdate": {
            "$ref": "./examples/CosmosDBTableThroughputUpdate.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location",
          "final-state-schema": "#/definitions/ThroughputSettingsGetResults"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/tables/{tableName}/throughputSettings/default/migrateToAutoscale": {
      "post": {
        "operationId": "TableResources_MigrateTableToAutoscale",
        "tags": [
          "TableResources"
        ],
        "description": "Migrate an Azure Cosmos DB Table from manual throughput to autoscale",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "Cosmos DB database account name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "tableName",
            "in": "path",
            "description": "Cosmos DB table name.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ThroughputSettingsGetResults"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBTableMigrateToAutoscale": {
            "$ref": "./examples/CosmosDBTableMigrateToAutoscale.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location",
          "final-state-schema": "#/definitions/ThroughputSettingsGetResults"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/tables/{tableName}/throughputSettings/default/migrateToManualThroughput": {
      "post": {
        "operationId": "TableResources_MigrateTableToManualThroughput",
        "tags": [
          "TableResources"
        ],
        "description": "Migrate an Azure Cosmos DB Table from autoscale to manual throughput",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "Cosmos DB database account name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "tableName",
            "in": "path",
            "description": "Cosmos DB table name.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ThroughputSettingsGetResults"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBTableMigrateToManualThroughput": {
            "$ref": "./examples/CosmosDBTableMigrateToManualThroughput.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location",
          "final-state-schema": "#/definitions/ThroughputSettingsGetResults"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/targetRegion/{targetRegion}/percentile/metrics": {
      "get": {
        "operationId": "PercentileTarget_ListMetrics",
        "tags": [
          "DatabaseAccounts"
        ],
        "description": "Retrieves the metrics determined by the given filter for the given account target region. This url is only for PBS and Replication Latency data",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "Cosmos DB database account name.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "targetRegion",
            "in": "path",
            "description": "Target region to which data is written. Cosmos DB region, with spaces between words and each word capitalized.",
            "required": true,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "An OData filter expression that describes a subset of metrics to return. The parameters that can be filtered are name.value (name of the metric, can have an or of multiple names), startTime, endTime, and timeGrain. The supported operator is eq.",
            "required": true,
            "type": "string",
            "x-ms-client-name": "filter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/PercentileMetricListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBDatabaseAccountRegionGetMetrics": {
            "$ref": "./examples/CosmosDBPercentileTargetGetMetrics.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/usages": {
      "get": {
        "operationId": "DatabaseAccounts_ListUsages",
        "tags": [
          "DatabaseAccounts"
        ],
        "description": "Retrieves the usages (most recent data) for the given database account.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "Cosmos DB database account name.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "An OData filter expression that describes a subset of usages to return. The supported parameter is name.value (name of the metric, can have an or of multiple names).",
            "required": false,
            "type": "string",
            "x-ms-client-name": "filter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/UsagesResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDBDatabaseAccountGetUsages": {
            "$ref": "./examples/CosmosDBDatabaseAccountGetUsages.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/fleets": {
      "get": {
        "operationId": "Fleet_ListByResourceGroup",
        "tags": [
          "FleetResources"
        ],
        "description": "Lists all the fleets under the specified subscription and resource group.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/FleetResourceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/fleets/{fleetName}": {
      "get": {
        "operationId": "Fleet_Get",
        "tags": [
          "FleetResources"
        ],
        "description": "Retrieves the properties of an existing Azure Cosmos DB fleet under a subscription",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "fleetName",
            "in": "path",
            "description": "Cosmos DB fleet name. Needs to be unique under a subscription.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/FleetResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDB Fleet Get": {
            "$ref": "./examples/fleet/CosmosDBFleetGet.json"
          }
        }
      },
      "put": {
        "operationId": "Fleet_Create",
        "tags": [
          "FleetResources"
        ],
        "description": "Creates an Azure Cosmos DB fleet under a subscription.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "fleetName",
            "in": "path",
            "description": "Cosmos DB fleet name. Needs to be unique under a subscription.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The parameters to provide for the current fleet.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FleetResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'FleetResource' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/FleetResource"
            }
          },
          "201": {
            "description": "Resource 'FleetResource' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/FleetResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDB Fleet Create": {
            "$ref": "./examples/fleet/CosmosDBFleetCreate.json"
          }
        }
      },
      "patch": {
        "operationId": "Fleet_Update",
        "tags": [
          "FleetResources"
        ],
        "description": "Updates the properties of an existing Azure Cosmos DB Fleet.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "fleetName",
            "in": "path",
            "description": "Cosmos DB fleet name. Needs to be unique under a subscription.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The parameters to provide for the current fleet.",
            "required": false,
            "schema": {
              "$ref": "#/definitions/FleetResourceUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/FleetResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDB Fleet Update": {
            "$ref": "./examples/fleet/CosmosDBFleetUpdate.json"
          }
        }
      },
      "delete": {
        "operationId": "Fleet_Delete",
        "tags": [
          "FleetResources"
        ],
        "description": "Deletes an existing Azure Cosmos DB Fleet.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "fleetName",
            "in": "path",
            "description": "Cosmos DB fleet name. Needs to be unique under a subscription.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDB Fleet Delete": {
            "$ref": "./examples/fleet/CosmosDBFleetDelete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/fleets/{fleetName}/fleetAnalytics": {
      "get": {
        "operationId": "FleetAnalytics_List",
        "tags": [
          "FleetAnalyticsResources"
        ],
        "description": "Lists all the FleetAnalytics under a fleet.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "fleetName",
            "in": "path",
            "description": "Cosmos DB fleet name. Needs to be unique under a subscription.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/FleetAnalyticsResourceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDB FleetAnalytics List": {
            "$ref": "./examples/fleet/CosmosDBFleetAnalyticsList.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/fleets/{fleetName}/fleetAnalytics/{fleetAnalyticsName}": {
      "get": {
        "operationId": "FleetAnalytics_Get",
        "tags": [
          "FleetAnalyticsResources"
        ],
        "description": "Retrieves the properties of an existing Azure Cosmos DB FleetAnalytics under a fleet",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "fleetName",
            "in": "path",
            "description": "Cosmos DB fleet name. Needs to be unique under a subscription.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "fleetAnalyticsName",
            "in": "path",
            "description": "Cosmos DB fleetAnalytics name.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/FleetAnalyticsResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDB FleetAnalytics Get": {
            "$ref": "./examples/fleet/CosmosDBFleetAnalyticsGet.json"
          }
        }
      },
      "put": {
        "operationId": "FleetAnalytics_Create",
        "tags": [
          "FleetAnalyticsResources"
        ],
        "description": "Creates an Azure Cosmos DB FleetAnalytics under a fleet.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "fleetName",
            "in": "path",
            "description": "Cosmos DB fleet name. Needs to be unique under a subscription.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "fleetAnalyticsName",
            "in": "path",
            "description": "Cosmos DB fleetAnalytics name.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The parameters to provide for the current FleetAnalytics.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FleetAnalyticsResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'FleetAnalyticsResource' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/FleetAnalyticsResource"
            }
          },
          "201": {
            "description": "Resource 'FleetAnalyticsResource' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/FleetAnalyticsResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDB FleetAnalytics Create": {
            "$ref": "./examples/fleet/CosmosDBFleetAnalyticsCreate.json"
          }
        }
      },
      "delete": {
        "operationId": "FleetAnalytics_Delete",
        "tags": [
          "FleetAnalyticsResources"
        ],
        "description": "Deletes an existing Azure Cosmos DB FleetAnalytics.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "fleetName",
            "in": "path",
            "description": "Cosmos DB fleet name. Needs to be unique under a subscription.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "fleetAnalyticsName",
            "in": "path",
            "description": "Cosmos DB fleetAnalytics name.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDB FleetAnalytics Delete": {
            "$ref": "./examples/fleet/CosmosDBFleetAnalyticsDelete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/fleets/{fleetName}/fleetspaces": {
      "get": {
        "operationId": "Fleetspace_List",
        "tags": [
          "FleetspaceResources"
        ],
        "description": "Lists all the fleetspaces under a fleet.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "fleetName",
            "in": "path",
            "description": "Cosmos DB fleet name. Needs to be unique under a subscription.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/FleetspaceResourceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDB Fleetspace List": {
            "$ref": "./examples/fleet/CosmosDBFleetspaceList.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/fleets/{fleetName}/fleetspaces/{fleetspaceName}": {
      "get": {
        "operationId": "Fleetspace_Get",
        "tags": [
          "FleetspaceResources"
        ],
        "description": "Retrieves the properties of an existing Azure Cosmos DB fleetspace under a fleet",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "fleetName",
            "in": "path",
            "description": "Cosmos DB fleet name. Needs to be unique under a subscription.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "fleetspaceName",
            "in": "path",
            "description": "Cosmos DB fleetspace name. Needs to be unique under a fleet.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/FleetspaceResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDB Fleetspace Get": {
            "$ref": "./examples/fleet/CosmosDBFleetspaceGet.json"
          }
        }
      },
      "put": {
        "operationId": "Fleetspace_Create",
        "tags": [
          "FleetspaceResources"
        ],
        "description": "Creates an Azure Cosmos DB fleetspace under a fleet.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "fleetName",
            "in": "path",
            "description": "Cosmos DB fleet name. Needs to be unique under a subscription.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "fleetspaceName",
            "in": "path",
            "description": "Cosmos DB fleetspace name. Needs to be unique under a fleet.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The parameters to provide for the current fleetspace.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FleetspaceResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'FleetspaceResource' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/FleetspaceResource"
            }
          },
          "201": {
            "description": "Resource 'FleetspaceResource' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/FleetspaceResource"
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDB Fleetspace Create": {
            "$ref": "./examples/fleet/CosmosDBFleetspaceCreate.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation",
          "final-state-schema": "#/definitions/FleetspaceResource"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "Fleetspace_Update",
        "tags": [
          "FleetspaceResources"
        ],
        "description": "Update the properties of an existing Azure Cosmos DB fleetspace under a fleet.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "fleetName",
            "in": "path",
            "description": "Cosmos DB fleet name. Needs to be unique under a subscription.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "fleetspaceName",
            "in": "path",
            "description": "Cosmos DB fleetspace name. Needs to be unique under a fleet.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The parameters to provide for the current fleetspace.",
            "required": false,
            "schema": {
              "$ref": "#/definitions/FleetspaceUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/FleetspaceResource"
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDB Fleetspace Update": {
            "$ref": "./examples/fleet/CosmosDBFleetspaceUpdate.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation",
          "final-state-schema": "#/definitions/FleetspaceResource"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "Fleetspace_Delete",
        "tags": [
          "FleetspaceResources"
        ],
        "description": "Deletes an existing Azure Cosmos DB Fleetspace.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "fleetName",
            "in": "path",
            "description": "Cosmos DB fleet name. Needs to be unique under a subscription.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "fleetspaceName",
            "in": "path",
            "description": "Cosmos DB fleetspace name. Needs to be unique under a fleet.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDB Fleetspace Delete": {
            "$ref": "./examples/fleet/CosmosDBFleetspaceDelete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/fleets/{fleetName}/fleetspaces/{fleetspaceName}/fleetspaceAccounts": {
      "get": {
        "operationId": "FleetspaceAccount_List",
        "tags": [
          "FleetspaceAccountResources"
        ],
        "description": "Lists all the fleetspaces accounts  under a fleetspace.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "fleetName",
            "in": "path",
            "description": "Cosmos DB fleet name. Needs to be unique under a subscription.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "fleetspaceName",
            "in": "path",
            "description": "Cosmos DB fleetspace name. Needs to be unique under a fleet.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/FleetspaceAccountResourceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDB FleetspaceAccount List": {
            "$ref": "./examples/fleet/CosmosDBFleetspaceAccountList.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/fleets/{fleetName}/fleetspaces/{fleetspaceName}/fleetspaceAccounts/{fleetspaceAccountName}": {
      "get": {
        "operationId": "FleetspaceAccount_Get",
        "tags": [
          "FleetspaceAccountResources"
        ],
        "description": "Retrieves the properties of an existing Azure Cosmos DB fleetspace account under a fleetspace",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "fleetName",
            "in": "path",
            "description": "Cosmos DB fleet name. Needs to be unique under a subscription.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "fleetspaceName",
            "in": "path",
            "description": "Cosmos DB fleetspace name. Needs to be unique under a fleet.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "fleetspaceAccountName",
            "in": "path",
            "description": "Cosmos DB fleetspace account name.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/FleetspaceAccountResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDB FleetspaceAccount Get": {
            "$ref": "./examples/fleet/CosmosDBFleetspaceAccountGet.json"
          }
        }
      },
      "put": {
        "operationId": "FleetspaceAccount_Create",
        "tags": [
          "FleetspaceAccountResources"
        ],
        "description": "Creates an Azure Cosmos DB fleetspace account under a fleetspace.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "fleetName",
            "in": "path",
            "description": "Cosmos DB fleet name. Needs to be unique under a subscription.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "fleetspaceName",
            "in": "path",
            "description": "Cosmos DB fleetspace name. Needs to be unique under a fleet.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "fleetspaceAccountName",
            "in": "path",
            "description": "Cosmos DB fleetspace account name.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The parameters to provide for the current fleetspace account.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FleetspaceAccountResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'FleetspaceAccountResource' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/FleetspaceAccountResource"
            }
          },
          "201": {
            "description": "Resource 'FleetspaceAccountResource' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/FleetspaceAccountResource"
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDB FleetspaceAccount Create": {
            "$ref": "./examples/fleet/CosmosDBFleetspaceAccountCreate.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation",
          "final-state-schema": "#/definitions/FleetspaceAccountResource"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "FleetspaceAccount_Delete",
        "tags": [
          "FleetspaceAccountResources"
        ],
        "description": "Removes an existing Azure Cosmos DB fleetspace account from a fleetspace.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "fleetName",
            "in": "path",
            "description": "Cosmos DB fleet name. Needs to be unique under a subscription.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "fleetspaceName",
            "in": "path",
            "description": "Cosmos DB fleetspace name. Needs to be unique under a fleet.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "fleetspaceAccountName",
            "in": "path",
            "description": "Cosmos DB fleetspace account name.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDB FleetspaceAccount Delete": {
            "$ref": "./examples/fleet/CosmosDBFleetspaceAccountDelete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/throughputPools": {
      "get": {
        "operationId": "ThroughputPools_ListByResourceGroup",
        "tags": [
          "ThroughputPoolResources"
        ],
        "description": "List all the ThroughputPools in a given resource group.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ThroughputPoolsListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDB ThroughputPool List by Resource Group": {
            "$ref": "./examples/throughputPool/CosmosDBThroughputPoolList_ListByResourceGroup.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/throughputPools/{throughputPoolName}": {
      "get": {
        "operationId": "ThroughputPool_Get",
        "tags": [
          "ThroughputPoolResources"
        ],
        "description": "Retrieves the properties of an existing Azure Cosmos DB Throughput Pool",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "throughputPoolName",
            "in": "path",
            "description": "Cosmos DB Throughput Pool name.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ThroughputPoolResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDB ThroughputPool Get": {
            "$ref": "./examples/throughputPool/CosmosDBThroughputPoolGet.json"
          }
        }
      },
      "put": {
        "operationId": "ThroughputPool_CreateOrUpdate",
        "tags": [
          "ThroughputPoolResources"
        ],
        "description": "Creates or updates an Azure Cosmos DB ThroughputPool account. The \"Update\" method is preferred when performing updates on an account.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "throughputPoolName",
            "in": "path",
            "description": "Cosmos DB Throughput Pool name.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The parameters to provide for the current ThroughputPool.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ThroughputPoolResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'ThroughputPoolResource' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/ThroughputPoolResource"
            }
          },
          "201": {
            "description": "Resource 'ThroughputPoolResource' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/ThroughputPoolResource"
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDB ThroughputPool Create": {
            "$ref": "./examples/throughputPool/CosmosDBThroughputPoolCreate.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation",
          "final-state-schema": "#/definitions/ThroughputPoolResource"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "ThroughputPool_Update",
        "tags": [
          "ThroughputPoolResources"
        ],
        "description": "Updates the properties of an existing Azure Cosmos DB Throughput Pool.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "throughputPoolName",
            "in": "path",
            "description": "Cosmos DB Throughput Pool name.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The parameters to provide for the current Throughput Pool.",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ThroughputPoolUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ThroughputPoolResource"
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "format": "uri",
                "description": "A link to the status monitor"
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDB ThroughputPool Update": {
            "$ref": "./examples/throughputPool/CosmosDBThroughputPoolUpdate.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation",
          "final-state-schema": "#/definitions/ThroughputPoolResource"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "ThroughputPool_Delete",
        "tags": [
          "ThroughputPoolResources"
        ],
        "description": "Deletes an existing Azure Cosmos DB Throughput Pool.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "throughputPoolName",
            "in": "path",
            "description": "Cosmos DB Throughput Pool name.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "format": "uri",
                "description": "A link to the status monitor"
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDB ThroughputPool Delete": {
            "$ref": "./examples/throughputPool/CosmosDBThroughputPoolDelete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/throughputPools/{throughputPoolName}/throughputPoolAccounts": {
      "get": {
        "operationId": "ThroughputPoolAccounts_List",
        "tags": [
          "ThroughputPoolAccountResources"
        ],
        "description": "Lists all the Azure Cosmos DB accounts available under the subscription.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "throughputPoolName",
            "in": "path",
            "description": "Cosmos DB Throughput Pool name.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ThroughputPoolAccountResourceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDB ThroughputPool Account List": {
            "$ref": "./examples/throughputPool/CosmosDBThroughputPoolAccountsList.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/throughputPools/{throughputPoolName}/throughputPoolAccounts/{throughputPoolAccountName}": {
      "get": {
        "operationId": "ThroughputPoolAccount_Get",
        "tags": [
          "ThroughputPoolAccountResources"
        ],
        "description": "Retrieves the properties of an existing Azure Cosmos DB Throughput Pool",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "throughputPoolName",
            "in": "path",
            "description": "Cosmos DB Throughput Pool name.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "throughputPoolAccountName",
            "in": "path",
            "description": "Cosmos DB global database account in a Throughput Pool",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ThroughputPoolAccountResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDB ThroughputPool Account Get": {
            "$ref": "./examples/throughputPool/CosmosDBThroughputPoolAccountGet.json"
          }
        }
      },
      "put": {
        "operationId": "ThroughputPoolAccount_Create",
        "tags": [
          "ThroughputPoolAccountResources"
        ],
        "description": "Creates or updates an Azure Cosmos DB ThroughputPool account. The \"Update\" method is preferred when performing updates on an account.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "throughputPoolName",
            "in": "path",
            "description": "Cosmos DB Throughput Pool name.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "throughputPoolAccountName",
            "in": "path",
            "description": "Cosmos DB global database account in a Throughput Pool",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The parameters to provide for the current ThroughputPoolAccount.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ThroughputPoolAccountResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'ThroughputPoolAccountResource' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/ThroughputPoolAccountResource"
            }
          },
          "201": {
            "description": "Resource 'ThroughputPoolAccountResource' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/ThroughputPoolAccountResource"
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDB ThroughputPool Account Create": {
            "$ref": "./examples/throughputPool/CosmosDBThroughputPoolAccountCreate.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation",
          "final-state-schema": "#/definitions/ThroughputPoolAccountResource"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "ThroughputPoolAccount_Delete",
        "tags": [
          "ThroughputPoolAccountResources"
        ],
        "description": "Removes an existing Azure Cosmos DB database account from a throughput pool.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "throughputPoolName",
            "in": "path",
            "description": "Cosmos DB Throughput Pool name.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "throughputPoolAccountName",
            "in": "path",
            "description": "Cosmos DB global database account in a Throughput Pool",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "format": "uri",
                "description": "A link to the status monitor"
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CosmosDB ThroughputPool Account Delete": {
            "$ref": "./examples/throughputPool/CosmosDBThroughputPoolAccountDelete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    }
  },
  "definitions": {
    "ARMProxyResource": {
      "type": "object",
      "description": "The resource model definition for a ARM proxy resource. It will have everything other than required location and tags",
      "properties": {
        "id": {
          "type": "string",
          "description": "The unique resource identifier of the database account.",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the database account.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of Azure resource.",
          "readOnly": true
        }
      }
    },
    "ARMResourceProperties": {
      "type": "object",
      "description": "The core properties of ARM resources.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The unique resource identifier of the ARM resource.",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the ARM resource.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of Azure resource.",
          "readOnly": true
        },
        "location": {
          "type": "string",
          "description": "The location of the resource group to which the resource belongs."
        },
        "tags": {
          "type": "object",
          "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\".",
          "additionalProperties": {
            "type": "string"
          }
        },
        "identity": {
          "$ref": "#/definitions/ManagedServiceIdentity",
          "description": "Identity for the resource."
        }
      }
    },
    "AccountKeyMetadata": {
      "type": "object",
      "description": "The metadata related to an access key for a given database account.",
      "properties": {
        "generationTime": {
          "type": "string",
          "format": "date-time",
          "description": "Generation time in UTC of the key in ISO-8601 format. If the value is missing from the object, it means that the last key regeneration was triggered before 2022-06-18.",
          "readOnly": true
        }
      }
    },
    "AnalyticalStorageConfiguration": {
      "type": "object",
      "description": "Analytical storage specific properties.",
      "properties": {
        "schemaType": {
          "$ref": "#/definitions/AnalyticalStorageSchemaType",
          "description": "Describes the types of schema for analytical storage."
        }
      }
    },
    "AnalyticalStorageSchemaType": {
      "type": "string",
      "description": "Describes the types of schema for analytical storage.",
      "enum": [
        "WellDefined",
        "FullFidelity"
      ],
      "x-ms-enum": {
        "name": "AnalyticalStorageSchemaType",
        "modelAsString": true,
        "values": [
          {
            "name": "WellDefined",
            "value": "WellDefined"
          },
          {
            "name": "FullFidelity",
            "value": "FullFidelity"
          }
        ]
      }
    },
    "ApiProperties": {
      "type": "object",
      "properties": {
        "serverVersion": {
          "$ref": "#/definitions/ServerVersion",
          "description": "Describes the version of the MongoDB account."
        }
      }
    },
    "ApiType": {
      "type": "string",
      "description": "Enum to indicate the API type of the restorable database account.",
      "enum": [
        "MongoDB",
        "Gremlin",
        "Cassandra",
        "Table",
        "Sql",
        "GremlinV2"
      ],
      "x-ms-enum": {
        "name": "ApiType",
        "modelAsString": true,
        "values": [
          {
            "name": "MongoDB",
            "value": "MongoDB"
          },
          {
            "name": "Gremlin",
            "value": "Gremlin"
          },
          {
            "name": "Cassandra",
            "value": "Cassandra"
          },
          {
            "name": "Table",
            "value": "Table"
          },
          {
            "name": "Sql",
            "value": "Sql"
          },
          {
            "name": "GremlinV2",
            "value": "GremlinV2"
          }
        ]
      }
    },
    "AuthenticationMethod": {
      "type": "string",
      "description": "Which authentication method Cassandra should use to authenticate clients. 'None' turns off authentication, so should not be used except in emergencies. 'Cassandra' is the default password based authentication. The default is 'Cassandra'.",
      "enum": [
        "None",
        "Cassandra",
        "Ldap"
      ],
      "x-ms-enum": {
        "name": "AuthenticationMethod",
        "modelAsString": true,
        "values": [
          {
            "name": "None",
            "value": "None"
          },
          {
            "name": "Cassandra",
            "value": "Cassandra"
          },
          {
            "name": "Ldap",
            "value": "Ldap"
          }
        ]
      }
    },
    "AuthenticationMethodLdapProperties": {
      "type": "object",
      "description": "Ldap authentication method properties. This feature is in preview.",
      "properties": {
        "serverHostname": {
          "type": "string",
          "description": "Hostname of the LDAP server."
        },
        "serverPort": {
          "type": "integer",
          "format": "int32",
          "description": "Port of the LDAP server."
        },
        "serviceUserDistinguishedName": {
          "type": "string",
          "description": "Distinguished name of the look up user account, who can look up user details on authentication."
        },
        "serviceUserPassword": {
          "type": "string",
          "description": "Password of the look up user."
        },
        "searchBaseDistinguishedName": {
          "type": "string",
          "description": "Distinguished name of the object to start the recursive search of users from."
        },
        "searchFilterTemplate": {
          "type": "string",
          "description": "Template to use for searching. Defaults to (cn=%s) where %s will be replaced by the username used to login."
        },
        "serverCertificates": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Certificate"
          },
          "x-ms-identifiers": []
        },
        "connectionTimeoutInMs": {
          "type": "integer",
          "format": "int32",
          "description": "Timeout for connecting to the LDAP server in miliseconds. The default is 5000 ms."
        }
      }
    },
    "AutoReplicate": {
      "type": "string",
      "description": "The form of AutoReplicate that is being used by this cluster.",
      "enum": [
        "None",
        "SystemKeyspaces",
        "AllKeyspaces"
      ],
      "x-ms-enum": {
        "name": "AutoReplicate",
        "modelAsString": true,
        "values": [
          {
            "name": "None",
            "value": "None"
          },
          {
            "name": "SystemKeyspaces",
            "value": "SystemKeyspaces"
          },
          {
            "name": "AllKeyspaces",
            "value": "AllKeyspaces"
          }
        ]
      }
    },
    "AutoUpgradePolicyResource": {
      "type": "object",
      "description": "Cosmos DB resource auto-upgrade policy",
      "properties": {
        "throughputPolicy": {
          "$ref": "#/definitions/ThroughputPolicyResource",
          "description": "Represents throughput policy which service must adhere to for auto-upgrade"
        }
      }
    },
    "AutoscaleSettings": {
      "type": "object",
      "properties": {
        "maxThroughput": {
          "type": "integer",
          "format": "int32",
          "description": "Represents maximum throughput, the resource can scale up to."
        }
      }
    },
    "AutoscaleSettingsResource": {
      "type": "object",
      "description": "Cosmos DB provisioned throughput settings object",
      "properties": {
        "maxThroughput": {
          "type": "integer",
          "format": "int32",
          "description": "Represents maximum throughput container can scale up to."
        },
        "autoUpgradePolicy": {
          "$ref": "#/definitions/AutoUpgradePolicyResource",
          "description": "Cosmos DB resource auto-upgrade policy"
        },
        "targetMaxThroughput": {
          "type": "integer",
          "format": "int32",
          "description": "Represents target maximum throughput container can scale up to once offer is no longer in pending state.",
          "readOnly": true
        }
      },
      "required": [
        "maxThroughput"
      ]
    },
    "AzureBlobContainer": {
      "type": "object",
      "description": "An Azure Blob container",
      "properties": {
        "containerName": {
          "type": "string",
          "description": "Azure Blob container."
        }
      },
      "required": [
        "containerName"
      ]
    },
    "AzureBlobDataTransferDataSourceSink": {
      "type": "object",
      "description": "An Azure Blob Storage data source/sink",
      "properties": {
        "containerName": {
          "type": "string"
        },
        "endpointUrl": {
          "type": "string"
        }
      },
      "required": [
        "containerName"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/DataTransferDataSourceSink"
        }
      ],
      "x-ms-discriminator-value": "AzureBlobStorage"
    },
    "AzureBlobSourceSinkDetails": {
      "type": "object",
      "description": "An Azure Blob Storage data source/sink",
      "properties": {
        "endpointUrl": {
          "type": "string",
          "description": "Azure Blob container endpoint.",
          "pattern": "^https?://[^/$.?# ]+.[^ ]*$"
        }
      },
      "required": [
        "endpointUrl"
      ]
    },
    "AzureConnectionType": {
      "type": "string",
      "description": "How to connect to the azure services needed for running the cluster",
      "enum": [
        "None",
        "VPN"
      ],
      "x-ms-enum": {
        "name": "AzureConnectionType",
        "modelAsString": true,
        "values": [
          {
            "name": "None",
            "value": "None"
          },
          {
            "name": "VPN",
            "value": "VPN"
          }
        ]
      }
    },
    "BackupInformation": {
      "type": "object",
      "description": "Backup information of a resource.",
      "properties": {
        "continuousBackupInformation": {
          "$ref": "#/definitions/ContinuousBackupInformation",
          "description": "Information about the status of continuous backups.",
          "readOnly": true
        }
      }
    },
    "BackupPolicy": {
      "type": "object",
      "description": "The object representing the policy for taking backups on an account.",
      "properties": {
        "type": {
          "$ref": "#/definitions/BackupPolicyType",
          "description": "Describes the mode of backups."
        },
        "migrationState": {
          "$ref": "#/definitions/BackupPolicyMigrationState",
          "description": "The object representing the state of the migration between the backup policies."
        }
      },
      "discriminator": "type",
      "required": [
        "type"
      ]
    },
    "BackupPolicyMigrationState": {
      "type": "object",
      "description": "The object representing the state of the migration between the backup policies.",
      "properties": {
        "status": {
          "$ref": "#/definitions/BackupPolicyMigrationStatus",
          "description": "Describes the status of migration between backup policy types."
        },
        "targetType": {
          "$ref": "#/definitions/BackupPolicyType",
          "description": "Describes the target backup policy type of the backup policy migration."
        },
        "startTime": {
          "type": "string",
          "format": "date-time",
          "description": "Time at which the backup policy migration started (ISO-8601 format)."
        }
      }
    },
    "BackupPolicyMigrationStatus": {
      "type": "string",
      "description": "Describes the status of migration between backup policy types.",
      "enum": [
        "Invalid",
        "InProgress",
        "Completed",
        "Failed"
      ],
      "x-ms-enum": {
        "name": "BackupPolicyMigrationStatus",
        "modelAsString": true,
        "values": [
          {
            "name": "Invalid",
            "value": "Invalid"
          },
          {
            "name": "InProgress",
            "value": "InProgress"
          },
          {
            "name": "Completed",
            "value": "Completed"
          },
          {
            "name": "Failed",
            "value": "Failed"
          }
        ]
      }
    },
    "BackupPolicyType": {
      "type": "string",
      "description": "Describes the mode of backups.",
      "enum": [
        "Periodic",
        "Continuous"
      ],
      "x-ms-enum": {
        "name": "BackupPolicyType",
        "modelAsString": true,
        "values": [
          {
            "name": "Periodic",
            "value": "Periodic"
          },
          {
            "name": "Continuous",
            "value": "Continuous"
          }
        ]
      }
    },
    "BackupResource": {
      "type": "object",
      "description": "A restorable backup of a Cassandra cluster.",
      "properties": {
        "backupId": {
          "type": "string",
          "description": "The unique identifier of backup."
        },
        "backupState": {
          "$ref": "#/definitions/BackupState",
          "description": "The current state of the backup."
        },
        "backupStartTimestamp": {
          "type": "string",
          "format": "date-time",
          "description": "The time at which the backup process begins."
        },
        "backupStopTimestamp": {
          "type": "string",
          "format": "date-time",
          "description": "The time at which the backup process ends."
        },
        "backupExpiryTimestamp": {
          "type": "string",
          "format": "date-time",
          "description": "The time at which the backup will expire."
        }
      }
    },
    "BackupSchedule": {
      "type": "object",
      "properties": {
        "scheduleName": {
          "type": "string",
          "description": "The unique identifier of backup schedule."
        },
        "cronExpression": {
          "type": "string",
          "description": "The cron expression that defines when you want to back up your data."
        },
        "retentionInHours": {
          "type": "integer",
          "format": "int32",
          "description": "The retention period (hours) of the backups. If you want to retain data forever, set retention to 0."
        }
      }
    },
    "BackupState": {
      "type": "string",
      "description": "The current state of the backup.",
      "enum": [
        "Initiated",
        "InProgress",
        "Succeeded",
        "Failed"
      ],
      "x-ms-enum": {
        "name": "BackupState",
        "modelAsString": true,
        "values": [
          {
            "name": "Initiated",
            "value": "Initiated"
          },
          {
            "name": "InProgress",
            "value": "InProgress"
          },
          {
            "name": "Succeeded",
            "value": "Succeeded"
          },
          {
            "name": "Failed",
            "value": "Failed"
          }
        ]
      }
    },
    "BackupStorageRedundancy": {
      "type": "string",
      "description": "Enum to indicate type of backup storage redundancy.",
      "enum": [
        "Geo",
        "Local",
        "Zone"
      ],
      "x-ms-enum": {
        "name": "BackupStorageRedundancy",
        "modelAsString": true,
        "values": [
          {
            "name": "Geo",
            "value": "Geo"
          },
          {
            "name": "Local",
            "value": "Local"
          },
          {
            "name": "Zone",
            "value": "Zone"
          }
        ]
      }
    },
    "BaseCopyJobProperties": {
      "type": "object",
      "description": "Base copy job properties",
      "properties": {
        "jobType": {
          "type": "string",
          "description": "Copy Job Type",
          "default": "NoSqlRUToNoSqlRU",
          "enum": [
            "CassandraRUToCassandraRU",
            "CassandraRUToAzureBlobStorage",
            "AzureBlobStorageToCassandraRU",
            "MongoRUToMongoRU",
            "MongoRUToMongoVCore",
            "NoSqlRUToNoSqlRU"
          ],
          "x-ms-enum": {
            "name": "CopyJobType",
            "modelAsString": true,
            "values": [
              {
                "name": "CassandraRUToCassandraRU",
                "value": "CassandraRUToCassandraRU"
              },
              {
                "name": "CassandraRUToAzureBlobStorage",
                "value": "CassandraRUToAzureBlobStorage"
              },
              {
                "name": "AzureBlobStorageToCassandraRU",
                "value": "AzureBlobStorageToCassandraRU"
              },
              {
                "name": "MongoRUToMongoRU",
                "value": "MongoRUToMongoRU"
              },
              {
                "name": "MongoRUToMongoVCore",
                "value": "MongoRUToMongoVCore"
              },
              {
                "name": "NoSqlRUToNoSqlRU",
                "value": "NoSqlRUToNoSqlRU"
              }
            ]
          }
        }
      },
      "discriminator": "jobType",
      "required": [
        "jobType"
      ]
    },
    "BaseCopyJobTask": {
      "type": "object",
      "description": "The properties of a Copy Job Task",
      "properties": {
        "totalCount": {
          "type": "integer",
          "format": "int64",
          "description": "Task level Total Count.",
          "readOnly": true
        },
        "processedCount": {
          "type": "integer",
          "format": "int64",
          "description": "Task level Processed Count.",
          "readOnly": true
        }
      }
    },
    "BlobToCassandraRUCopyJobProperties": {
      "type": "object",
      "description": "Source Azure Blob Storage to Destination Cassandra copy job properties",
      "properties": {
        "sourceDetails": {
          "$ref": "#/definitions/AzureBlobSourceSinkDetails",
          "description": "Azure Storage container DataStore details"
        },
        "destinationDetails": {
          "$ref": "#/definitions/CosmosDBSourceSinkDetails",
          "description": "Destination Cassandra DataStore details"
        },
        "tasks": {
          "type": "array",
          "description": "Copy Job tasks.",
          "items": {
            "$ref": "#/definitions/BlobToCassandraRUCopyJobTask"
          },
          "x-ms-identifiers": []
        }
      },
      "required": [
        "sourceDetails",
        "tasks"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/BaseCopyJobProperties"
        }
      ],
      "x-ms-discriminator-value": "AzureBlobStorageToCassandraRU"
    },
    "BlobToCassandraRUCopyJobTask": {
      "type": "object",
      "properties": {
        "source": {
          "$ref": "#/definitions/AzureBlobContainer",
          "description": "Source Azure Blob container"
        },
        "destination": {
          "$ref": "#/definitions/CosmosDBCassandraTable",
          "description": "Destination Cassandra table"
        }
      },
      "required": [
        "source",
        "destination"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/BaseCopyJobTask"
        }
      ]
    },
    "Capability": {
      "type": "object",
      "description": "Cosmos DB capability object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the Cosmos DB capability. For example, \"name\": \"EnableCassandra\". Current values also include \"EnableTable\" and \"EnableGremlin\"."
        }
      }
    },
    "Capacity": {
      "type": "object",
      "description": "The object that represents all properties related to capacity enforcement on an account.",
      "properties": {
        "totalThroughputLimit": {
          "type": "integer",
          "format": "int32",
          "description": "The total throughput limit imposed on the account. A totalThroughputLimit of 2000 imposes a strict limit of max throughput that can be provisioned on that account to be 2000. A totalThroughputLimit of -1 indicates no limits on provisioning of throughput.",
          "minimum": -1
        }
      }
    },
    "CapacityMode": {
      "type": "string",
      "description": "Indicates the capacity mode of the account.",
      "enum": [
        "None",
        "Provisioned",
        "Serverless"
      ],
      "x-ms-enum": {
        "name": "CapacityMode",
        "modelAsString": true,
        "values": [
          {
            "name": "None",
            "value": "None"
          },
          {
            "name": "Provisioned",
            "value": "Provisioned"
          },
          {
            "name": "Serverless",
            "value": "Serverless"
          }
        ]
      }
    },
    "CapacityModeChangeTransitionState": {
      "type": "object",
      "description": "The transition state information related capacity mode change with update request.",
      "properties": {
        "capacityModeTransitionStatus": {
          "$ref": "#/definitions/CapacityModeTransitionStatus",
          "description": "The transition status of capacity mode."
        },
        "currentCapacityMode": {
          "$ref": "#/definitions/CapacityMode",
          "description": "Indicates the current capacity mode of the account."
        },
        "previousCapacityMode": {
          "$ref": "#/definitions/CapacityMode",
          "description": "Indicates the previous capacity mode of the account before successful transition."
        },
        "capacityModeTransitionBeginTimestamp": {
          "type": "string",
          "format": "date-time",
          "description": "Begin time in UTC of the capacity mode change.",
          "readOnly": true
        },
        "capacityModeTransitionEndTimestamp": {
          "type": "string",
          "format": "date-time",
          "description": "End time in UTC of the capacity mode change.",
          "readOnly": true
        },
        "capacityModeLastSuccessfulTransitionEndTimestamp": {
          "type": "string",
          "format": "date-time",
          "description": "End time in UTC of the last successful capacity mode change.",
          "readOnly": true
        }
      }
    },
    "CapacityModeTransitionStatus": {
      "type": "string",
      "description": "The transition status of capacity mode.",
      "enum": [
        "Invalid",
        "Initialized",
        "InProgress",
        "Completed",
        "Failed"
      ],
      "x-ms-enum": {
        "name": "CapacityModeTransitionStatus",
        "modelAsString": true,
        "values": [
          {
            "name": "Invalid",
            "value": "Invalid"
          },
          {
            "name": "Initialized",
            "value": "Initialized"
          },
          {
            "name": "InProgress",
            "value": "InProgress"
          },
          {
            "name": "Completed",
            "value": "Completed"
          },
          {
            "name": "Failed",
            "value": "Failed"
          }
        ]
      }
    },
    "CassandraClusterPublicStatus": {
      "type": "object",
      "description": "Properties of a managed Cassandra cluster public status.",
      "properties": {
        "eTag": {
          "type": "string"
        },
        "reaperStatus": {
          "$ref": "#/definitions/ManagedCassandraReaperStatus"
        },
        "connectionErrors": {
          "type": "array",
          "description": "List relevant information about any connection errors to the Datacenters.",
          "items": {
            "$ref": "#/definitions/ConnectionError"
          },
          "x-ms-identifiers": []
        },
        "errors": {
          "type": "array",
          "description": "List relevant information about any errors about cluster, data center and connection error.",
          "items": {
            "$ref": "#/definitions/CassandraError"
          },
          "x-ms-identifiers": []
        },
        "dataCenters": {
          "type": "array",
          "description": "List of the status of each datacenter in this cluster.",
          "items": {
            "$ref": "#/definitions/CassandraClusterPublicStatusDataCentersItem"
          }
        }
      }
    },
    "CassandraClusterPublicStatusDataCentersItem": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of this Datacenter."
        },
        "seedNodes": {
          "type": "array",
          "description": "A list of all seed nodes in the cluster, managed and unmanaged.",
          "items": {
            "type": "string"
          },
          "x-ms-identifiers": []
        },
        "nodes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ComponentsM9L909SchemasCassandraclusterpublicstatusPropertiesDatacentersItemsPropertiesNodesItems"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "CassandraError": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "description": "The code of error that occurred."
        },
        "message": {
          "type": "string",
          "description": "The message of the error."
        },
        "target": {
          "type": "string",
          "description": "The target resource of the error."
        },
        "additionalErrorInfo": {
          "type": "string",
          "description": "Additional information about the error."
        }
      }
    },
    "CassandraKeyspaceCreateUpdateParameters": {
      "type": "object",
      "description": "Parameters to create and update Cosmos DB Cassandra keyspace.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/CassandraKeyspaceCreateUpdateProperties",
          "description": "Properties to create and update Azure Cosmos DB Cassandra keyspace.",
          "x-ms-client-flatten": true
        }
      },
      "required": [
        "properties"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/ARMResourceProperties"
        }
      ]
    },
    "CassandraKeyspaceCreateUpdateProperties": {
      "type": "object",
      "description": "Properties to create and update Azure Cosmos DB Cassandra keyspace.",
      "properties": {
        "resource": {
          "$ref": "#/definitions/CassandraKeyspaceResource",
          "description": "The standard JSON format of a Cassandra keyspace"
        },
        "options": {
          "$ref": "#/definitions/CreateUpdateOptions",
          "description": "A key-value pair of options to be applied for the request. This corresponds to the headers sent with the request."
        }
      },
      "required": [
        "resource"
      ]
    },
    "CassandraKeyspaceGetProperties": {
      "type": "object",
      "description": "The properties of an Azure Cosmos DB Cassandra keyspace",
      "properties": {
        "resource": {
          "$ref": "#/definitions/CassandraKeyspaceGetPropertiesResource"
        },
        "options": {
          "$ref": "#/definitions/CassandraKeyspaceGetPropertiesOptions"
        }
      }
    },
    "CassandraKeyspaceGetPropertiesOptions": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/OptionsResource"
        }
      ]
    },
    "CassandraKeyspaceGetPropertiesResource": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Name of the Cosmos DB Cassandra keyspace"
        },
        "_rid": {
          "type": "string",
          "description": "A system generated property. A unique identifier.",
          "readOnly": true,
          "x-ms-client-name": "rid"
        },
        "_ts": {
          "type": "number",
          "format": "float",
          "description": "A system generated property that denotes the last updated timestamp of the resource.",
          "readOnly": true,
          "x-ms-client-name": "ts"
        },
        "_etag": {
          "type": "string",
          "description": "A system generated property representing the resource etag required for optimistic concurrency control.",
          "readOnly": true,
          "x-ms-client-name": "etag"
        }
      },
      "required": [
        "id"
      ]
    },
    "CassandraKeyspaceGetResults": {
      "type": "object",
      "description": "An Azure Cosmos DB Cassandra keyspace.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/CassandraKeyspaceGetProperties",
          "description": "The properties of an Azure Cosmos DB Cassandra keyspace",
          "x-ms-client-flatten": true
        },
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "location": {
          "type": "string",
          "description": "The geo-location where the resource lives",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "identity": {
          "$ref": "#/definitions/ManagedServiceIdentity",
          "description": "Identity for the resource."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/Resource"
        }
      ]
    },
    "CassandraKeyspaceListResult": {
      "type": "object",
      "description": "The List operation response, that contains the Cassandra keyspaces and their properties.",
      "properties": {
        "value": {
          "type": "array",
          "description": "List of Cassandra keyspaces and their properties.",
          "items": {
            "$ref": "#/definitions/CassandraKeyspaceGetResults"
          },
          "readOnly": true
        }
      }
    },
    "CassandraKeyspaceResource": {
      "type": "object",
      "description": "Cosmos DB Cassandra keyspace resource object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Name of the Cosmos DB Cassandra keyspace"
        }
      },
      "required": [
        "id"
      ]
    },
    "CassandraPartitionKey": {
      "type": "object",
      "description": "Cosmos DB Cassandra table partition key",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the Cosmos DB Cassandra table partition key"
        }
      }
    },
    "CassandraRUToBlobCopyJobProperties": {
      "type": "object",
      "description": "Source Cassandra to Destination Azure Blob Storage copy job properties",
      "properties": {
        "sourceDetails": {
          "$ref": "#/definitions/CosmosDBSourceSinkDetails",
          "description": "Source Cassandra DataStore details"
        },
        "destinationDetails": {
          "$ref": "#/definitions/AzureBlobSourceSinkDetails",
          "description": "Destination Cassandra DataStore details"
        },
        "tasks": {
          "type": "array",
          "description": "Copy Job tasks.",
          "items": {
            "$ref": "#/definitions/CassandraRUToBlobCopyJobTask"
          },
          "x-ms-identifiers": []
        }
      },
      "required": [
        "destinationDetails",
        "tasks"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/BaseCopyJobProperties"
        }
      ],
      "x-ms-discriminator-value": "CassandraRUToAzureBlobStorage"
    },
    "CassandraRUToBlobCopyJobTask": {
      "type": "object",
      "properties": {
        "source": {
          "$ref": "#/definitions/CosmosDBCassandraTable",
          "description": "Source Cassandra table"
        },
        "destination": {
          "$ref": "#/definitions/AzureBlobContainer",
          "description": "Destination Azure Blob container"
        }
      },
      "required": [
        "source",
        "destination"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/BaseCopyJobTask"
        }
      ]
    },
    "CassandraRUToCassandraRUCopyJobProperties": {
      "type": "object",
      "description": "Source Cassandra to Destination Cassandra copy job properties",
      "properties": {
        "sourceDetails": {
          "$ref": "#/definitions/CosmosDBSourceSinkDetails",
          "description": "Source Cassandra DataStore details"
        },
        "destinationDetails": {
          "$ref": "#/definitions/CosmosDBSourceSinkDetails",
          "description": "Destination Cassandra DataStore details"
        },
        "tasks": {
          "type": "array",
          "description": "Copy Job tasks.",
          "items": {
            "$ref": "#/definitions/CassandraRUToCassandraRUCopyJobTask"
          },
          "x-ms-identifiers": []
        }
      },
      "required": [
        "tasks"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/BaseCopyJobProperties"
        }
      ],
      "x-ms-discriminator-value": "CassandraRUToCassandraRU"
    },
    "CassandraRUToCassandraRUCopyJobTask": {
      "type": "object",
      "properties": {
        "source": {
          "$ref": "#/definitions/CosmosDBCassandraTable",
          "description": "Source Cassandra table"
        },
        "destination": {
          "$ref": "#/definitions/CosmosDBCassandraTable",
          "description": "Destination Cassandra table"
        }
      },
      "required": [
        "source",
        "destination"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/BaseCopyJobTask"
        }
      ]
    },
    "CassandraRoleAssignmentResource": {
      "type": "object",
      "description": "Parameters to create and update an Azure Cosmos DB Cassandra Role Assignment.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/CassandraRoleAssignmentResourceProperties",
          "description": "Properties to create and update an Azure Cosmos DB Cassandra Role Assignment.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "CassandraRoleAssignmentResourceListResult": {
      "type": "object",
      "description": "The response of a CassandraRoleAssignmentResource list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The CassandraRoleAssignmentResource items on this page",
          "items": {
            "$ref": "#/definitions/CassandraRoleAssignmentResource"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "CassandraRoleAssignmentResourceProperties": {
      "type": "object",
      "description": "Azure Cosmos DB Cassandra Role Assignment resource object.",
      "properties": {
        "roleDefinitionId": {
          "type": "string",
          "description": "The unique identifier for the associated Role Definition."
        },
        "scope": {
          "type": "string",
          "description": "The data plane resource path for which access is being granted through this Cassandra Role Assignment."
        },
        "principalId": {
          "type": "string",
          "description": "The unique identifier for the associated AAD principal in the AAD graph to which access is being granted through this Cassandra Role Assignment. Tenant ID for the principal is inferred using the tenant associated with the subscription."
        },
        "provisioningState": {
          "type": "string",
          "description": "Provisioning state of the resource.",
          "readOnly": true
        }
      }
    },
    "CassandraRoleDefinitionResource": {
      "type": "object",
      "description": "Parameters to create and update an Azure Cosmos DB Cassandra Role Definition.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/CassandraRoleDefinitionResourceProperties",
          "description": "Properties to create and update an Azure Cosmos DB Cassandra Role Definition.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "CassandraRoleDefinitionResourceListResult": {
      "type": "object",
      "description": "The response of a CassandraRoleDefinitionResource list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The CassandraRoleDefinitionResource items on this page",
          "items": {
            "$ref": "#/definitions/CassandraRoleDefinitionResource"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "CassandraRoleDefinitionResourceProperties": {
      "type": "object",
      "description": "Azure Cosmos DB Cassandra Role Definition resource object.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The path id for the Role Definition."
        },
        "roleName": {
          "type": "string",
          "description": "A user-friendly name for the Role Definition. Must be unique for the database account."
        },
        "type": {
          "$ref": "#/definitions/RoleDefinitionType",
          "description": "Indicates whether the Role Definition was built-in or user created."
        },
        "assignableScopes": {
          "type": "array",
          "description": "A set of fully qualified Scopes at or below which Cassandra Role Assignments may be created using this Role Definition. This will allow application of this Role Definition on the entire database account or any underlying Database / Collection. Must have at least one element. Scopes higher than Database account are not enforceable as assignable Scopes. Note that resources referenced in assignable Scopes need not exist.",
          "items": {
            "type": "string"
          }
        },
        "permissions": {
          "type": "array",
          "description": "The set of operations allowed through this Role Definition.",
          "items": {
            "$ref": "#/definitions/PermissionAutoGenerated2"
          }
        }
      }
    },
    "CassandraSchema": {
      "type": "object",
      "description": "Cosmos DB Cassandra table schema",
      "properties": {
        "columns": {
          "type": "array",
          "description": "List of Cassandra table columns.",
          "items": {
            "$ref": "#/definitions/Column"
          }
        },
        "partitionKeys": {
          "type": "array",
          "description": "List of partition key.",
          "items": {
            "$ref": "#/definitions/CassandraPartitionKey"
          }
        },
        "clusterKeys": {
          "type": "array",
          "description": "List of cluster key.",
          "items": {
            "$ref": "#/definitions/ClusterKey"
          }
        }
      }
    },
    "CassandraTableCreateUpdateParameters": {
      "type": "object",
      "description": "Parameters to create and update Cosmos DB Cassandra table.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/CassandraTableCreateUpdateProperties",
          "description": "Properties to create and update Azure Cosmos DB Cassandra table.",
          "x-ms-client-flatten": true
        }
      },
      "required": [
        "properties"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/ARMResourceProperties"
        }
      ]
    },
    "CassandraTableCreateUpdateProperties": {
      "type": "object",
      "description": "Properties to create and update Azure Cosmos DB Cassandra table.",
      "properties": {
        "resource": {
          "$ref": "#/definitions/CassandraTableResource",
          "description": "The standard JSON format of a Cassandra table"
        },
        "options": {
          "$ref": "#/definitions/CreateUpdateOptions",
          "description": "A key-value pair of options to be applied for the request. This corresponds to the headers sent with the request."
        }
      },
      "required": [
        "resource"
      ]
    },
    "CassandraTableGetProperties": {
      "type": "object",
      "description": "The properties of an Azure Cosmos DB Cassandra table",
      "properties": {
        "resource": {
          "$ref": "#/definitions/CassandraTableGetPropertiesResource"
        },
        "options": {
          "$ref": "#/definitions/CassandraTableGetPropertiesOptions"
        }
      }
    },
    "CassandraTableGetPropertiesOptions": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/OptionsResource"
        }
      ]
    },
    "CassandraTableGetPropertiesResource": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Name of the Cosmos DB Cassandra table"
        },
        "defaultTtl": {
          "type": "integer",
          "format": "int32",
          "description": "Time to live of the Cosmos DB Cassandra table"
        },
        "schema": {
          "$ref": "#/definitions/CassandraSchema",
          "description": "Schema of the Cosmos DB Cassandra table"
        },
        "analyticalStorageTtl": {
          "type": "integer",
          "format": "int32",
          "description": "Analytical TTL."
        },
        "_rid": {
          "type": "string",
          "description": "A system generated property. A unique identifier.",
          "readOnly": true,
          "x-ms-client-name": "rid"
        },
        "_ts": {
          "type": "number",
          "format": "float",
          "description": "A system generated property that denotes the last updated timestamp of the resource.",
          "readOnly": true,
          "x-ms-client-name": "ts"
        },
        "_etag": {
          "type": "string",
          "description": "A system generated property representing the resource etag required for optimistic concurrency control.",
          "readOnly": true,
          "x-ms-client-name": "etag"
        }
      },
      "required": [
        "id"
      ]
    },
    "CassandraTableGetResults": {
      "type": "object",
      "description": "An Azure Cosmos DB Cassandra table.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/CassandraTableGetProperties",
          "description": "The properties of an Azure Cosmos DB Cassandra table",
          "x-ms-client-flatten": true
        },
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "location": {
          "type": "string",
          "description": "The geo-location where the resource lives",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "identity": {
          "$ref": "#/definitions/ManagedServiceIdentity",
          "description": "Identity for the resource."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/Resource"
        }
      ]
    },
    "CassandraTableListResult": {
      "type": "object",
      "description": "The List operation response, that contains the Cassandra tables and their properties.",
      "properties": {
        "value": {
          "type": "array",
          "description": "List of Cassandra tables and their properties.",
          "items": {
            "$ref": "#/definitions/CassandraTableGetResults"
          },
          "readOnly": true
        }
      }
    },
    "CassandraTableResource": {
      "type": "object",
      "description": "Cosmos DB Cassandra table resource object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Name of the Cosmos DB Cassandra table"
        },
        "defaultTtl": {
          "type": "integer",
          "format": "int32",
          "description": "Time to live of the Cosmos DB Cassandra table"
        },
        "schema": {
          "$ref": "#/definitions/CassandraSchema",
          "description": "Schema of the Cosmos DB Cassandra table"
        },
        "analyticalStorageTtl": {
          "type": "integer",
          "format": "int32",
          "description": "Analytical TTL."
        }
      },
      "required": [
        "id"
      ]
    },
    "CassandraViewCreateUpdateParameters": {
      "type": "object",
      "description": "Parameters to create and update Cosmos DB Cassandra view.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/CassandraViewCreateUpdateProperties",
          "description": "Properties to create and update Azure Cosmos DB Cassandra view.",
          "x-ms-client-flatten": true
        }
      },
      "required": [
        "properties"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/ARMResourceProperties"
        }
      ]
    },
    "CassandraViewCreateUpdateProperties": {
      "type": "object",
      "description": "Properties to create and update Azure Cosmos DB Cassandra view.",
      "properties": {
        "resource": {
          "$ref": "#/definitions/CassandraViewResource",
          "description": "The standard JSON format of a Cassandra view"
        },
        "options": {
          "$ref": "#/definitions/CreateUpdateOptions",
          "description": "A key-value pair of options to be applied for the request. This corresponds to the headers sent with the request."
        }
      },
      "required": [
        "resource"
      ]
    },
    "CassandraViewGetProperties": {
      "type": "object",
      "description": "The properties of an Azure Cosmos DB Cassandra view",
      "properties": {
        "resource": {
          "$ref": "#/definitions/CassandraViewGetPropertiesResource"
        },
        "options": {
          "$ref": "#/definitions/CassandraViewGetPropertiesOptions"
        }
      }
    },
    "CassandraViewGetPropertiesOptions": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/OptionsResource"
        }
      ]
    },
    "CassandraViewGetPropertiesResource": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Name of the Cosmos DB Cassandra view"
        },
        "viewDefinition": {
          "type": "string",
          "description": "View Definition of the Cosmos DB Cassandra view"
        },
        "_rid": {
          "type": "string",
          "description": "A system generated property. A unique identifier.",
          "readOnly": true,
          "x-ms-client-name": "rid"
        },
        "_ts": {
          "type": "number",
          "format": "float",
          "description": "A system generated property that denotes the last updated timestamp of the resource.",
          "readOnly": true,
          "x-ms-client-name": "ts"
        },
        "_etag": {
          "type": "string",
          "description": "A system generated property representing the resource etag required for optimistic concurrency control.",
          "readOnly": true,
          "x-ms-client-name": "etag"
        }
      },
      "required": [
        "id",
        "viewDefinition"
      ]
    },
    "CassandraViewGetResults": {
      "type": "object",
      "description": "An Azure Cosmos DB Cassandra view.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/CassandraViewGetProperties",
          "description": "The properties of an Azure Cosmos DB Cassandra view",
          "x-ms-client-flatten": true
        },
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "location": {
          "type": "string",
          "description": "The geo-location where the resource lives",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "identity": {
          "$ref": "#/definitions/ManagedServiceIdentity",
          "description": "Identity for the resource."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/Resource"
        }
      ]
    },
    "CassandraViewListResult": {
      "type": "object",
      "description": "The List operation response, that contains the Cassandra views and their properties.",
      "properties": {
        "value": {
          "type": "array",
          "description": "List of Cassandra views and their properties.",
          "items": {
            "$ref": "#/definitions/CassandraViewGetResults"
          },
          "readOnly": true
        }
      }
    },
    "CassandraViewResource": {
      "type": "object",
      "description": "Cosmos DB Cassandra view resource object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Name of the Cosmos DB Cassandra view"
        },
        "viewDefinition": {
          "type": "string",
          "description": "View Definition of the Cosmos DB Cassandra view"
        }
      },
      "required": [
        "id",
        "viewDefinition"
      ]
    },
    "Certificate": {
      "type": "object",
      "properties": {
        "pem": {
          "type": "string",
          "description": "PEM formatted public key."
        }
      }
    },
    "ChaosFaultListResponse": {
      "type": "object",
      "description": "Chaos Fault List Response.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The ChaosFaultResource items on this page",
          "items": {
            "$ref": "#/definitions/ChaosFaultResource"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "ChaosFaultProperties": {
      "type": "object",
      "description": "A request object to enable/disable the chaos fault.",
      "properties": {
        "action": {
          "$ref": "#/definitions/SupportedActions",
          "description": "Indicates whether what action to take for the Chaos Fault."
        },
        "region": {
          "type": "string",
          "description": "Region of the account where the Chaos Fault is to be enabled/disabled."
        },
        "databaseName": {
          "type": "string",
          "description": "Database name."
        },
        "containerName": {
          "type": "string",
          "description": "Container name."
        },
        "provisioningState": {
          "type": "string",
          "description": "A provisioning state of the Chaos Fault.",
          "readOnly": true
        }
      }
    },
    "ChaosFaultResource": {
      "type": "object",
      "description": "A request object to enable/disable the chaos fault",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ChaosFaultProperties",
          "description": "A request object to enable/disable the chaos fault.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "ClientEncryptionIncludedPath": {
      "type": "object",
      "description": ".",
      "properties": {
        "path": {
          "type": "string",
          "description": "Path that needs to be encrypted."
        },
        "clientEncryptionKeyId": {
          "type": "string",
          "description": "The identifier of the Client Encryption Key to be used to encrypt the path."
        },
        "encryptionType": {
          "type": "string",
          "description": "The type of encryption to be performed. Eg - Deterministic, Randomized."
        },
        "encryptionAlgorithm": {
          "type": "string",
          "description": "The encryption algorithm which will be used. Eg - AEAD_AES_256_CBC_HMAC_SHA256."
        }
      },
      "required": [
        "path",
        "clientEncryptionKeyId",
        "encryptionType",
        "encryptionAlgorithm"
      ]
    },
    "ClientEncryptionKeyCreateUpdateParameters": {
      "type": "object",
      "description": "Parameters to create and update ClientEncryptionKey.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ClientEncryptionKeyCreateUpdateProperties",
          "description": "Properties to create and update ClientEncryptionKey.",
          "x-ms-client-flatten": true
        }
      },
      "required": [
        "properties"
      ]
    },
    "ClientEncryptionKeyCreateUpdateProperties": {
      "type": "object",
      "description": "Properties to create and update ClientEncryptionKey.",
      "properties": {
        "resource": {
          "$ref": "#/definitions/ClientEncryptionKeyResource",
          "description": "The standard JSON format of a ClientEncryptionKey"
        }
      },
      "required": [
        "resource"
      ]
    },
    "ClientEncryptionKeyGetProperties": {
      "type": "object",
      "description": "The properties of a ClientEncryptionKey resource",
      "properties": {
        "resource": {
          "$ref": "#/definitions/ClientEncryptionKeyGetPropertiesResource"
        }
      }
    },
    "ClientEncryptionKeyGetPropertiesResource": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Name of the ClientEncryptionKey"
        },
        "encryptionAlgorithm": {
          "type": "string",
          "description": "Encryption algorithm that will be used along with this client encryption key to encrypt/decrypt data."
        },
        "wrappedDataEncryptionKey": {
          "type": "string",
          "format": "byte",
          "description": "Wrapped (encrypted) form of the key represented as a byte array."
        },
        "keyWrapMetadata": {
          "$ref": "#/definitions/KeyWrapMetadata",
          "description": "Metadata for the wrapping provider that can be used to unwrap the wrapped client encryption key."
        },
        "_rid": {
          "type": "string",
          "description": "A system generated property. A unique identifier.",
          "readOnly": true,
          "x-ms-client-name": "rid"
        },
        "_ts": {
          "type": "number",
          "format": "float",
          "description": "A system generated property that denotes the last updated timestamp of the resource.",
          "readOnly": true,
          "x-ms-client-name": "ts"
        },
        "_etag": {
          "type": "string",
          "description": "A system generated property representing the resource etag required for optimistic concurrency control.",
          "readOnly": true,
          "x-ms-client-name": "etag"
        }
      }
    },
    "ClientEncryptionKeyGetResults": {
      "type": "object",
      "description": "Client Encryption Key.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ClientEncryptionKeyGetProperties",
          "description": "The properties of a ClientEncryptionKey",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "ClientEncryptionKeyResource": {
      "type": "object",
      "description": "Cosmos DB client encryption key resource object.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Name of the ClientEncryptionKey"
        },
        "encryptionAlgorithm": {
          "type": "string",
          "description": "Encryption algorithm that will be used along with this client encryption key to encrypt/decrypt data."
        },
        "wrappedDataEncryptionKey": {
          "type": "string",
          "format": "byte",
          "description": "Wrapped (encrypted) form of the key represented as a byte array."
        },
        "keyWrapMetadata": {
          "$ref": "#/definitions/KeyWrapMetadata",
          "description": "Metadata for the wrapping provider that can be used to unwrap the wrapped client encryption key."
        }
      }
    },
    "ClientEncryptionKeysListResult": {
      "type": "object",
      "description": "The List operation response, that contains the client encryption keys and their properties.",
      "properties": {
        "value": {
          "type": "array",
          "description": "List of client encryption keys and their properties.",
          "items": {
            "$ref": "#/definitions/ClientEncryptionKeyGetResults"
          },
          "readOnly": true
        }
      }
    },
    "ClientEncryptionPolicy": {
      "type": "object",
      "description": "Cosmos DB client encryption policy.",
      "properties": {
        "includedPaths": {
          "type": "array",
          "description": "Paths of the item that need encryption along with path-specific settings.",
          "items": {
            "$ref": "#/definitions/ClientEncryptionIncludedPath"
          },
          "x-ms-identifiers": []
        },
        "policyFormatVersion": {
          "type": "integer",
          "format": "int32",
          "description": "Version of the client encryption policy definition. Supported versions are 1 and 2. Version 2 supports id and partition key path encryption.",
          "minimum": 1,
          "maximum": 2
        }
      },
      "required": [
        "includedPaths",
        "policyFormatVersion"
      ]
    },
    "CloudError": {
      "type": "object",
      "description": "An error response from the service.",
      "properties": {
        "error": {
          "$ref": "#/definitions/ErrorResponseAutoGenerated",
          "description": "Error Response."
        }
      },
      "x-ms-external": true
    },
    "ClusterKey": {
      "type": "object",
      "description": "Cosmos DB Cassandra table cluster key",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the Cosmos DB Cassandra table cluster key"
        },
        "orderBy": {
          "type": "string",
          "description": "Order of the Cosmos DB Cassandra table cluster key, only support \"Asc\" and \"Desc\""
        }
      }
    },
    "ClusterResource": {
      "type": "object",
      "description": "Representation of a managed Cassandra cluster.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ClusterResourceProperties",
          "description": "Properties of a managed Cassandra cluster."
        },
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "location": {
          "type": "string",
          "description": "The geo-location where the resource lives",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "identity": {
          "$ref": "#/definitions/ManagedCassandraManagedServiceIdentity",
          "description": "Identity for the resource."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/Resource"
        }
      ]
    },
    "ClusterResourceProperties": {
      "type": "object",
      "description": "Properties of a managed Cassandra cluster.",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/ManagedCassandraProvisioningState",
          "description": "The status of the resource at the time the operation was called."
        },
        "restoreFromBackupId": {
          "type": "string",
          "description": "To create an empty cluster, omit this field or set it to null. To restore a backup into a new cluster, set this field to the resource id of the backup.",
          "x-ms-mutability": [
            "create"
          ]
        },
        "delegatedManagementSubnetId": {
          "type": "string",
          "description": "Resource id of a subnet that this cluster's management service should have its network interface attached to. The subnet must be routable to all subnets that will be delegated to data centers. The resource id must be of the form '/subscriptions/<subscription id>/resourceGroups/<resource group>/providers/Microsoft.Network/virtualNetworks/<virtual network>/subnets/<subnet>'",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "cassandraVersion": {
          "type": "string",
          "description": "Which version of Cassandra should this cluster converge to running (e.g., 3.11). When updated, the cluster may take some time to migrate to the new version."
        },
        "clusterNameOverride": {
          "type": "string",
          "description": "If you need to set the clusterName property in cassandra.yaml to something besides the resource name of the cluster, set the value to use on this property.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "authenticationMethod": {
          "$ref": "#/definitions/AuthenticationMethod",
          "description": "Which authentication method Cassandra should use to authenticate clients. 'None' turns off authentication, so should not be used except in emergencies. 'Cassandra' is the default password based authentication. The default is 'Cassandra'."
        },
        "initialCassandraAdminPassword": {
          "type": "string",
          "description": "Initial password for clients connecting as admin to the cluster. Should be changed after cluster creation. Returns null on GET. This field only applies when the authenticationMethod field is 'Cassandra'.",
          "x-ms-mutability": [
            "create"
          ]
        },
        "prometheusEndpoint": {
          "$ref": "#/definitions/SeedNode",
          "description": "Hostname or IP address where the Prometheus endpoint containing data about the managed Cassandra nodes can be reached."
        },
        "repairEnabled": {
          "type": "boolean",
          "description": "Should automatic repairs run on this cluster? If omitted, this is true, and should stay true unless you are running a hybrid cluster where you are already doing your own repairs."
        },
        "autoReplicate": {
          "$ref": "#/definitions/AutoReplicate",
          "description": "The form of AutoReplicate that is being used by this cluster."
        },
        "clientCertificates": {
          "type": "array",
          "description": "List of TLS certificates used to authorize clients connecting to the cluster. All connections are TLS encrypted whether clientCertificates is set or not, but if clientCertificates is set, the managed Cassandra cluster will reject all connections not bearing a TLS client certificate that can be validated from one or more of the public certificates in this property.",
          "items": {
            "$ref": "#/definitions/Certificate"
          },
          "x-ms-identifiers": []
        },
        "externalGossipCertificates": {
          "type": "array",
          "description": "List of TLS certificates used to authorize gossip from unmanaged data centers. The TLS certificates of all nodes in unmanaged data centers must be verifiable using one of the certificates provided in this property.",
          "items": {
            "$ref": "#/definitions/Certificate"
          },
          "x-ms-identifiers": []
        },
        "gossipCertificates": {
          "type": "array",
          "description": "List of TLS certificates that unmanaged nodes must trust for gossip with managed nodes. All managed nodes will present TLS client certificates that are verifiable using one of the certificates provided in this property.",
          "items": {
            "$ref": "#/definitions/Certificate"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        },
        "externalSeedNodes": {
          "type": "array",
          "description": "List of IP addresses of seed nodes in unmanaged data centers. These will be added to the seed node lists of all managed nodes.",
          "items": {
            "$ref": "#/definitions/SeedNode"
          },
          "x-ms-identifiers": []
        },
        "seedNodes": {
          "type": "array",
          "description": "List of IP addresses of seed nodes in the managed data centers. These should be added to the seed node lists of all unmanaged nodes.",
          "items": {
            "$ref": "#/definitions/SeedNode"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        },
        "externalDataCenters": {
          "type": "array",
          "description": "List of the data center names for unmanaged data centers in this cluster to be included in auto-replication.",
          "items": {
            "type": "string"
          }
        },
        "hoursBetweenBackups": {
          "type": "integer",
          "format": "int32",
          "description": "(Deprecated) Number of hours to wait between taking a backup of the cluster."
        },
        "deallocated": {
          "type": "boolean",
          "description": "Whether the cluster and associated data centers has been deallocated."
        },
        "cassandraAuditLoggingEnabled": {
          "type": "boolean",
          "description": "Whether Cassandra audit logging is enabled"
        },
        "clusterType": {
          "$ref": "#/definitions/ClusterType",
          "description": "Type of the cluster. If set to Production, some operations might not be permitted on cluster."
        },
        "provisionError": {
          "$ref": "#/definitions/CassandraError",
          "description": "Error related to resource provisioning."
        },
        "extensions": {
          "type": "array",
          "description": "Extensions to be added or updated on cluster.",
          "items": {
            "type": "string"
          },
          "x-ms-identifiers": []
        },
        "backupSchedules": {
          "type": "array",
          "description": "List of backup schedules that define when you want to back up your data.",
          "items": {
            "$ref": "#/definitions/BackupSchedule"
          },
          "x-ms-identifiers": []
        },
        "scheduledEventStrategy": {
          "$ref": "#/definitions/ScheduledEventStrategy",
          "description": "How the nodes in the cluster react to scheduled events"
        },
        "azureConnectionMethod": {
          "$ref": "#/definitions/AzureConnectionType",
          "description": "How to connect to the azure services needed for running the cluster"
        },
        "privateLinkResourceId": {
          "type": "string",
          "format": "arm-id",
          "description": "If the Connection Method is Vpn, this is the Id of the private link resource that the datacenters need to connect to.",
          "readOnly": true,
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.Network/privateLinkServices"
              }
            ]
          }
        }
      }
    },
    "ClusterType": {
      "type": "string",
      "description": "Type of the cluster. If set to Production, some operations might not be permitted on cluster.",
      "enum": [
        "Production",
        "NonProduction"
      ],
      "x-ms-enum": {
        "name": "ClusterType",
        "modelAsString": true,
        "values": [
          {
            "name": "Production",
            "value": "Production"
          },
          {
            "name": "NonProduction",
            "value": "NonProduction"
          }
        ]
      }
    },
    "Column": {
      "type": "object",
      "description": "Cosmos DB Cassandra table column",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the Cosmos DB Cassandra table column"
        },
        "type": {
          "type": "string",
          "description": "Type of the Cosmos DB Cassandra table column"
        }
      }
    },
    "CommandAsyncPostBody": {
      "type": "object",
      "description": "Specification of which command to run where",
      "properties": {
        "command": {
          "type": "string",
          "description": "The command which should be run"
        },
        "arguments": {
          "description": "The arguments for the command to be run"
        },
        "host": {
          "type": "string",
          "description": "IP address of the cassandra host to run the command on"
        },
        "cassandra-stop-start": {
          "type": "boolean",
          "description": "If true, stops cassandra before executing the command and then start it again"
        },
        "readWrite": {
          "type": "boolean",
          "description": "If true, allows the command to *write* to the cassandra directory, otherwise read-only."
        }
      },
      "required": [
        "command",
        "host"
      ]
    },
    "CommandOutput": {
      "type": "object",
      "description": "Response of /command api",
      "properties": {
        "commandOutput": {
          "type": "string",
          "description": "Output of the command."
        }
      }
    },
    "CommandPostBody": {
      "type": "object",
      "description": "Specification of which command to run where",
      "properties": {
        "command": {
          "type": "string",
          "description": "The command which should be run"
        },
        "arguments": {
          "type": "object",
          "description": "The arguments for the command to be run",
          "additionalProperties": {
            "type": "string"
          }
        },
        "host": {
          "type": "string",
          "description": "IP address of the cassandra host to run the command on"
        },
        "cassandra-stop-start": {
          "type": "boolean",
          "description": "If true, stops cassandra before executing the command and then start it again"
        },
        "readwrite": {
          "type": "boolean",
          "description": "If true, allows the command to *write* to the cassandra directory, otherwise read-only."
        }
      },
      "required": [
        "command",
        "host"
      ]
    },
    "CommandPublicResource": {
      "type": "object",
      "description": "resource representing a command",
      "properties": {
        "command": {
          "type": "string",
          "description": "The command which should be run"
        },
        "commandId": {
          "type": "string",
          "description": "The unique id of command"
        },
        "arguments": {
          "description": "The arguments for the command to be run"
        },
        "host": {
          "type": "string",
          "description": "IP address of the cassandra host to run the command on"
        },
        "isAdmin": {
          "type": "boolean",
          "description": "Whether command has admin privileges"
        },
        "cassandraStopStart": {
          "type": "boolean",
          "description": "If true, stops cassandra before executing the command and then start it again"
        },
        "readWrite": {
          "type": "boolean",
          "description": "If true, allows the command to *write* to the cassandra directory, otherwise read-only."
        },
        "result": {
          "type": "string",
          "description": "Result output of the command."
        },
        "status": {
          "$ref": "#/definitions/CommandStatus",
          "description": "Status of the command."
        },
        "outputFile": {
          "type": "string",
          "description": "The name of the file where the result is written."
        }
      }
    },
    "CommandStatus": {
      "type": "string",
      "description": "Status of the command.",
      "enum": [
        "Done",
        "Running",
        "Enqueue",
        "Processing",
        "Finished",
        "Failed"
      ],
      "x-ms-enum": {
        "name": "CommandStatus",
        "modelAsString": true,
        "values": [
          {
            "name": "Done",
            "value": "Done"
          },
          {
            "name": "Running",
            "value": "Running"
          },
          {
            "name": "Enqueue",
            "value": "Enqueue"
          },
          {
            "name": "Processing",
            "value": "Processing"
          },
          {
            "name": "Finished",
            "value": "Finished"
          },
          {
            "name": "Failed",
            "value": "Failed"
          }
        ]
      }
    },
    "Components1Jq1T4ISchemasManagedserviceidentityPropertiesUserassignedidentitiesAdditionalproperties": {
      "type": "object",
      "properties": {
        "principalId": {
          "type": "string",
          "description": "The principal id of user assigned identity.",
          "readOnly": true
        },
        "clientId": {
          "type": "string",
          "description": "The client id of user assigned identity.",
          "readOnly": true
        }
      }
    },
    "ComponentsM9L909SchemasCassandraclusterpublicstatusPropertiesDatacentersItemsPropertiesNodesItems": {
      "type": "object",
      "properties": {
        "address": {
          "type": "string",
          "description": "The node's IP address."
        },
        "state": {
          "$ref": "#/definitions/NodeState",
          "description": "The state of the node in Cassandra ring."
        },
        "status": {
          "type": "string"
        },
        "cassandraProcessStatus": {
          "type": "string",
          "description": "Cassandra service status on this node"
        },
        "load": {
          "type": "string",
          "description": "The amount of file system data in the data directory (e.g., 47.66 kB), excluding all content in the snapshots subdirectories. Because all SSTable data files are included, any data that is not cleaned up (such as TTL-expired cells or tombstones) is counted."
        },
        "tokens": {
          "type": "array",
          "description": "List of tokens this node covers.",
          "items": {
            "type": "string"
          }
        },
        "size": {
          "type": "integer",
          "format": "int32"
        },
        "hostID": {
          "type": "string",
          "description": "The network ID of the node."
        },
        "rack": {
          "type": "string",
          "description": "The rack this node is part of."
        },
        "timestamp": {
          "type": "string",
          "description": "The timestamp when these statistics were captured."
        },
        "diskUsedKB": {
          "type": "integer",
          "format": "int64",
          "description": "The amount of disk used, in kB, of the directory /var/lib/cassandra."
        },
        "diskFreeKB": {
          "type": "integer",
          "format": "int64",
          "description": "The amount of disk free, in kB, of the directory /var/lib/cassandra."
        },
        "memoryUsedKB": {
          "type": "integer",
          "format": "int64",
          "description": "Used memory (calculated as total - free - buffers - cache), in kB."
        },
        "memoryBuffersAndCachedKB": {
          "type": "integer",
          "format": "int64",
          "description": "Memory used by kernel buffers (Buffers in /proc/meminfo) and page cache and slabs (Cached and SReclaimable in /proc/meminfo), in kB."
        },
        "memoryFreeKB": {
          "type": "integer",
          "format": "int64",
          "description": "Unused memory (MemFree and SwapFree in /proc/meminfo), in kB."
        },
        "memoryTotalKB": {
          "type": "integer",
          "format": "int64",
          "description": "Total installed memory (MemTotal and SwapTotal in /proc/meminfo), in kB."
        },
        "cpuUsage": {
          "type": "number",
          "format": "double",
          "description": "A float representing the current system-wide CPU utilization as a percentage."
        },
        "isLatestModel": {
          "type": "boolean",
          "description": "If node has been updated to latest model"
        }
      }
    },
    "CompositePath": {
      "type": "object",
      "properties": {
        "path": {
          "type": "string",
          "description": "The path for which the indexing behavior applies to. Index paths typically start with root and end with wildcard (/path/*)"
        },
        "order": {
          "$ref": "#/definitions/CompositePathSortOrder",
          "description": "Sort order for composite paths."
        }
      }
    },
    "CompositePathSortOrder": {
      "type": "string",
      "description": "Sort order for composite paths.",
      "enum": [
        "ascending",
        "descending"
      ],
      "x-ms-enum": {
        "name": "CompositePathSortOrder",
        "modelAsString": true,
        "values": [
          {
            "name": "Ascending",
            "value": "ascending"
          },
          {
            "name": "Descending",
            "value": "descending"
          }
        ]
      }
    },
    "ComputedProperty": {
      "type": "object",
      "description": "The definition of a computed property",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of a computed property, for example - \"cp_lowerName\""
        },
        "query": {
          "type": "string",
          "description": "The query that evaluates the value for computed property, for example - \"SELECT VALUE LOWER(c.name) FROM c\""
        }
      }
    },
    "ConflictResolutionPolicy": {
      "type": "object",
      "description": "The conflict resolution policy for the container.",
      "properties": {
        "mode": {
          "type": "string",
          "description": "Indicates the conflict resolution mode.",
          "default": "LastWriterWins",
          "enum": [
            "LastWriterWins",
            "Custom"
          ],
          "x-ms-enum": {
            "name": "ConflictResolutionMode",
            "modelAsString": true,
            "values": [
              {
                "name": "LastWriterWins",
                "value": "LastWriterWins"
              },
              {
                "name": "Custom",
                "value": "Custom"
              }
            ]
          }
        },
        "conflictResolutionPath": {
          "type": "string",
          "description": "The conflict resolution path in the case of LastWriterWins mode."
        },
        "conflictResolutionProcedure": {
          "type": "string",
          "description": "The procedure to resolve conflicts in the case of custom mode."
        }
      }
    },
    "ConnectionError": {
      "type": "object",
      "properties": {
        "connectionState": {
          "$ref": "#/definitions/ConnectionState",
          "description": "The kind of connection error that occurred."
        },
        "iPFrom": {
          "type": "string",
          "description": "The IP of host that originated the failed connection."
        },
        "iPTo": {
          "type": "string",
          "description": "The IP that the connection attempted to reach."
        },
        "port": {
          "type": "integer",
          "format": "int32",
          "description": "The TCP port the connection was attempted on."
        },
        "exception": {
          "type": "string",
          "description": "Detailed error message about the failed connection."
        }
      }
    },
    "ConnectionState": {
      "type": "string",
      "description": "The kind of connection error that occurred.",
      "enum": [
        "Unknown",
        "OK",
        "OperatorToDataCenterNetworkError",
        "DatacenterToDatacenterNetworkError",
        "InternalOperatorToDataCenterCertificateError",
        "InternalError"
      ],
      "x-ms-enum": {
        "name": "ConnectionState",
        "modelAsString": true,
        "values": [
          {
            "name": "Unknown",
            "value": "Unknown"
          },
          {
            "name": "OK",
            "value": "OK"
          },
          {
            "name": "OperatorToDataCenterNetworkError",
            "value": "OperatorToDataCenterNetworkError"
          },
          {
            "name": "DatacenterToDatacenterNetworkError",
            "value": "DatacenterToDatacenterNetworkError"
          },
          {
            "name": "InternalOperatorToDataCenterCertificateError",
            "value": "InternalOperatorToDataCenterCertificateError"
          },
          {
            "name": "InternalError",
            "value": "InternalError"
          }
        ]
      }
    },
    "ConnectorOffer": {
      "type": "string",
      "description": "The cassandra connector offer type for the Cosmos DB C* database account.",
      "enum": [
        "Small"
      ],
      "x-ms-enum": {
        "name": "ConnectorOffer",
        "modelAsString": true,
        "values": [
          {
            "name": "Small",
            "value": "Small"
          }
        ]
      }
    },
    "ConsistencyPolicy": {
      "type": "object",
      "description": "The consistency policy for the Cosmos DB database account.",
      "properties": {
        "defaultConsistencyLevel": {
          "$ref": "#/definitions/DefaultConsistencyLevel",
          "description": "The default consistency level and configuration settings of the Cosmos DB account."
        },
        "maxStalenessPrefix": {
          "type": "integer",
          "format": "int64",
          "description": "When used with the Bounded Staleness consistency level, this value represents the number of stale requests tolerated. Accepted range for this value is 1 – 2,147,483,647. Required when defaultConsistencyPolicy is set to 'BoundedStaleness'.",
          "minimum": 1,
          "maximum": 2147483647
        },
        "maxIntervalInSeconds": {
          "type": "integer",
          "format": "int32",
          "description": "When used with the Bounded Staleness consistency level, this value represents the time amount of staleness (in seconds) tolerated. Accepted range for this value is 5 - 86400. Required when defaultConsistencyPolicy is set to 'BoundedStaleness'.",
          "minimum": 5,
          "maximum": 86400
        }
      },
      "required": [
        "defaultConsistencyLevel"
      ]
    },
    "ContainerPartitionKey": {
      "type": "object",
      "description": "The configuration of the partition key to be used for partitioning data into multiple partitions",
      "properties": {
        "paths": {
          "type": "array",
          "description": "List of paths using which data within the container can be partitioned",
          "items": {
            "type": "string"
          }
        },
        "kind": {
          "type": "string",
          "description": "Indicates the kind of algorithm used for partitioning. For MultiHash, multiple partition keys (upto three maximum) are supported for container create",
          "default": "Hash",
          "enum": [
            "Hash",
            "Range",
            "MultiHash"
          ],
          "x-ms-enum": {
            "name": "PartitionKind",
            "modelAsString": true,
            "values": [
              {
                "name": "Hash",
                "value": "Hash"
              },
              {
                "name": "Range",
                "value": "Range"
              },
              {
                "name": "MultiHash",
                "value": "MultiHash"
              }
            ]
          }
        },
        "version": {
          "type": "integer",
          "format": "int32",
          "description": "Indicates the version of the partition key definition",
          "minimum": 1,
          "maximum": 2
        },
        "systemKey": {
          "type": "boolean",
          "description": "Indicates if the container is using a system generated partition key",
          "readOnly": true
        }
      }
    },
    "ContinuousBackupInformation": {
      "type": "object",
      "description": "Information about the status of continuous backups.",
      "properties": {
        "latestRestorableTimestamp": {
          "type": "string",
          "description": "The latest restorable timestamp for a resource."
        }
      }
    },
    "ContinuousBackupRestoreLocation": {
      "type": "object",
      "description": "Properties of the regional restorable account.",
      "properties": {
        "location": {
          "type": "string",
          "description": "The name of the continuous backup restore location."
        }
      }
    },
    "ContinuousModeBackupPolicy": {
      "type": "object",
      "description": "The object representing continuous mode backup policy.",
      "properties": {
        "continuousModeProperties": {
          "$ref": "#/definitions/ContinuousModeProperties",
          "description": "Configuration values for continuous mode backup"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/BackupPolicy"
        }
      ],
      "x-ms-discriminator-value": "Continuous"
    },
    "ContinuousModeProperties": {
      "type": "object",
      "description": "Configuration values for periodic mode backup",
      "properties": {
        "tier": {
          "$ref": "#/definitions/ContinuousTier",
          "description": "Enum to indicate type of Continuos backup mode"
        }
      }
    },
    "ContinuousTier": {
      "type": "string",
      "description": "Enum to indicate type of Continuous backup tier.",
      "enum": [
        "Continuous7Days",
        "Continuous30Days"
      ],
      "x-ms-enum": {
        "name": "ContinuousTier",
        "modelAsString": true,
        "values": [
          {
            "name": "Continuous7Days",
            "value": "Continuous7Days"
          },
          {
            "name": "Continuous30Days",
            "value": "Continuous30Days"
          }
        ]
      }
    },
    "CopyJobFeedResults": {
      "type": "object",
      "description": "The List operation response, that contains the Copy Jobs and their properties.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The CopyJobGetResults items on this page",
          "items": {
            "$ref": "#/definitions/CopyJobGetResults"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "CopyJobGetResults": {
      "type": "object",
      "description": "A Cosmos DB Copy Job",
      "properties": {
        "properties": {
          "$ref": "#/definitions/CopyJobProperties",
          "description": "The properties of a Copy Job"
        }
      },
      "required": [
        "properties"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "CopyJobMode": {
      "type": "string",
      "description": "Mode of job execution",
      "enum": [
        "Offline",
        "Online"
      ],
      "x-ms-enum": {
        "name": "CopyJobMode",
        "modelAsString": true,
        "values": [
          {
            "name": "Offline",
            "value": "Offline"
          },
          {
            "name": "Online",
            "value": "Online"
          }
        ]
      }
    },
    "CopyJobProperties": {
      "type": "object",
      "description": "The properties of a Copy Job",
      "properties": {
        "jobProperties": {
          "$ref": "#/definitions/BaseCopyJobProperties",
          "description": "Job Properties"
        },
        "status": {
          "$ref": "#/definitions/CopyJobStatus",
          "description": "Job Status",
          "readOnly": true
        },
        "processedCount": {
          "type": "integer",
          "format": "int64",
          "description": "Processed Count",
          "readOnly": true
        },
        "totalCount": {
          "type": "integer",
          "format": "int64",
          "description": "Total Count",
          "readOnly": true
        },
        "lastUpdatedUtcTime": {
          "type": "string",
          "format": "date-time",
          "description": "Last Updated Time (ISO-8601 format)",
          "readOnly": true
        },
        "workerCount": {
          "type": "integer",
          "format": "int32",
          "description": "Worker count",
          "minimum": 0
        },
        "error": {
          "$ref": "#/definitions/ErrorResponseAutoGenerated",
          "description": "Error response for Faulted job",
          "readOnly": true
        },
        "duration": {
          "type": "string",
          "description": "Total Duration of Job",
          "readOnly": true
        },
        "mode": {
          "$ref": "#/definitions/CopyJobMode",
          "description": "Mode of job execution"
        }
      },
      "required": [
        "jobProperties"
      ]
    },
    "CopyJobStatus": {
      "type": "string",
      "description": "Job Status",
      "enum": [
        "Pending",
        "Partitioning",
        "Running",
        "Paused",
        "Completed",
        "Faulted",
        "Cancelled"
      ],
      "x-ms-enum": {
        "name": "CopyJobStatus",
        "modelAsString": true,
        "values": [
          {
            "name": "Pending",
            "value": "Pending"
          },
          {
            "name": "Partitioning",
            "value": "Partitioning"
          },
          {
            "name": "Running",
            "value": "Running"
          },
          {
            "name": "Paused",
            "value": "Paused"
          },
          {
            "name": "Completed",
            "value": "Completed"
          },
          {
            "name": "Faulted",
            "value": "Faulted"
          },
          {
            "name": "Cancelled",
            "value": "Cancelled"
          }
        ]
      }
    },
    "CorsPolicy": {
      "type": "object",
      "description": "The CORS policy for the Cosmos DB database account.",
      "properties": {
        "allowedOrigins": {
          "type": "string",
          "description": "The origin domains that are permitted to make a request against the service via CORS."
        },
        "allowedMethods": {
          "type": "string",
          "description": "The methods (HTTP request verbs) that the origin domain may use for a CORS request."
        },
        "allowedHeaders": {
          "type": "string",
          "description": "The request headers that the origin domain may specify on the CORS request."
        },
        "exposedHeaders": {
          "type": "string",
          "description": "The response headers that may be sent in the response to the CORS request and exposed by the browser to the request issuer."
        },
        "maxAgeInSeconds": {
          "type": "integer",
          "format": "int64",
          "description": "The maximum amount time that a browser should cache the preflight OPTIONS request.",
          "minimum": 1,
          "maximum": 2147483647
        }
      },
      "required": [
        "allowedOrigins"
      ]
    },
    "CosmosDBCassandraTable": {
      "type": "object",
      "description": "A CosmosDB Cassandra table",
      "properties": {
        "keyspaceName": {
          "type": "string",
          "description": "Azure Cosmos DB for Apache Cassandra keyspace."
        },
        "tableName": {
          "type": "string",
          "description": "Azure Cosmos DB for Apache Cassandra table."
        }
      },
      "required": [
        "keyspaceName",
        "tableName"
      ]
    },
    "CosmosDBMongoCollection": {
      "type": "object",
      "description": "A CosmosDB Mongo collection",
      "properties": {
        "databaseName": {
          "type": "string",
          "description": "Azure Cosmos DB for MongoDB (RU) database."
        },
        "collectionName": {
          "type": "string",
          "description": "Azure Cosmos DB for MongoDB (RU) collection."
        }
      },
      "required": [
        "databaseName",
        "collectionName"
      ]
    },
    "CosmosDBMongoVCoreCollection": {
      "type": "object",
      "description": "A CosmosDB Mongo vCore collection",
      "properties": {
        "databaseName": {
          "type": "string",
          "description": "Azure Cosmos DB for MongoDB (vCore) database."
        },
        "collectionName": {
          "type": "string",
          "description": "Azure Cosmos DB for MongoDB (vCore) collection."
        }
      },
      "required": [
        "databaseName",
        "collectionName"
      ]
    },
    "CosmosDBNoSqlContainer": {
      "type": "object",
      "description": "A CosmosDB NoSQL container",
      "properties": {
        "databaseName": {
          "type": "string",
          "description": "Azure Cosmos DB for NoSQL database."
        },
        "containerName": {
          "type": "string",
          "description": "Azure Cosmos DB for NoSQL container."
        }
      },
      "required": [
        "databaseName",
        "containerName"
      ]
    },
    "CosmosDBSourceSinkDetails": {
      "type": "object",
      "description": "A CosmosDB data source/sink details",
      "properties": {
        "remoteAccountName": {
          "type": "string",
          "description": "Name of remote account in case of cross-account data transfer."
        }
      }
    },
    "CosmosMongoVCoreDataTransferDataSourceSink": {
      "type": "object",
      "description": "A CosmosDB Mongo vCore API data source/sink",
      "properties": {
        "databaseName": {
          "type": "string"
        },
        "collectionName": {
          "type": "string"
        },
        "hostName": {
          "type": "string"
        },
        "connectionStringKeyVaultUri": {
          "type": "string"
        }
      },
      "required": [
        "databaseName",
        "collectionName"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/DataTransferDataSourceSink"
        }
      ],
      "x-ms-discriminator-value": "CosmosDBMongoVCore"
    },
    "CreateJobRequest": {
      "type": "object",
      "description": "Parameters to create Data Transfer Job",
      "properties": {
        "properties": {
          "$ref": "#/definitions/DataTransferJobProperties",
          "description": "Data Transfer Create Job Properties"
        }
      },
      "required": [
        "properties"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/ARMProxyResource"
        }
      ]
    },
    "CreateUpdateOptions": {
      "type": "object",
      "description": "CreateUpdateOptions are a list of key-value pairs that describe the resource. Supported keys are \"If-Match\", \"If-None-Match\", \"Session-Token\" and \"Throughput\"",
      "properties": {
        "throughput": {
          "type": "integer",
          "format": "int32",
          "description": "Request Units per second. For example, \"throughput\": 10000."
        },
        "autoscaleSettings": {
          "$ref": "#/definitions/AutoscaleSettings",
          "description": "Specifies the Autoscale settings. Note: Either throughput or autoscaleSettings is required, but not both."
        }
      }
    },
    "DataCenterResource": {
      "type": "object",
      "description": "A managed Cassandra data center.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/DataCenterResourceProperties",
          "description": "Properties of a managed Cassandra data center."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "DataCenterResourceProperties": {
      "type": "object",
      "description": "Properties of a managed Cassandra data center.",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/ManagedCassandraProvisioningState",
          "description": "The status of the resource at the time the operation was called."
        },
        "dataCenterLocation": {
          "type": "string",
          "description": "The region this data center should be created in.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "delegatedSubnetId": {
          "type": "string",
          "description": "Resource id of a subnet the nodes in this data center should have their network interfaces connected to. The subnet must be in the same region specified in 'dataCenterLocation' and must be able to route to the subnet specified in the cluster's 'delegatedManagementSubnetId' property. This resource id will be of the form '/subscriptions/<subscription id>/resourceGroups/<resource group>/providers/Microsoft.Network/virtualNetworks/<virtual network>/subnets/<subnet>'.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "nodeCount": {
          "type": "integer",
          "format": "int32",
          "description": "The number of nodes the data center should have. This is the desired number. After it is set, it may take some time for the data center to be scaled to match. To monitor the number of nodes and their status, use the fetchNodeStatus method on the cluster."
        },
        "seedNodes": {
          "type": "array",
          "description": "IP addresses for seed nodes in this data center. This is for reference. Generally you will want to use the seedNodes property on the cluster, which aggregates the seed nodes from all data centers in the cluster.",
          "items": {
            "$ref": "#/definitions/SeedNode"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        },
        "base64EncodedCassandraYamlFragment": {
          "type": "string",
          "description": "A fragment of a cassandra.yaml configuration file to be included in the cassandra.yaml for all nodes in this data center. The fragment should be Base64 encoded, and only a subset of keys are allowed."
        },
        "managedDiskCustomerKeyUri": {
          "type": "string",
          "description": "Key uri to use for encryption of managed disks. Ensure the system assigned identity of the cluster has been assigned appropriate permissions(key get/wrap/unwrap permissions) on the key."
        },
        "backupStorageCustomerKeyUri": {
          "type": "string",
          "description": "Indicates the Key Uri of the customer key to use for encryption of the backup storage account."
        },
        "sku": {
          "type": "string",
          "description": "Virtual Machine SKU used for data centers. Default value is Standard_DS14_v2"
        },
        "diskSku": {
          "type": "string",
          "description": "Disk SKU used for data centers. Default value is P30."
        },
        "diskCapacity": {
          "type": "integer",
          "format": "int32",
          "description": "Number of disks attached to each node. Default is 4."
        },
        "availabilityZone": {
          "type": "boolean",
          "description": "If the data center has Availability Zone support, apply it to the Virtual Machine ScaleSet that host the cassandra data center virtual machines."
        },
        "authenticationMethodLdapProperties": {
          "$ref": "#/definitions/AuthenticationMethodLdapProperties",
          "description": "Ldap authentication method properties. This feature is in preview."
        },
        "deallocated": {
          "type": "boolean",
          "description": "Whether the data center has been deallocated."
        },
        "provisionError": {
          "$ref": "#/definitions/CassandraError",
          "description": "Error related to resource provisioning."
        },
        "privateEndpointIpAddress": {
          "type": "string",
          "description": "Ip of the VPN Endpoint for this data center."
        }
      }
    },
    "DataTransferDataSourceSink": {
      "type": "object",
      "description": "Base class for all DataTransfer source/sink",
      "properties": {
        "component": {
          "type": "string",
          "default": "CosmosDBCassandra",
          "enum": [
            "CosmosDBCassandra",
            "CosmosDBMongo",
            "CosmosDBMongoVCore",
            "CosmosDBSql",
            "AzureBlobStorage"
          ],
          "x-ms-enum": {
            "name": "DataTransferComponent",
            "modelAsString": true,
            "values": [
              {
                "name": "CosmosDBCassandra",
                "value": "CosmosDBCassandra"
              },
              {
                "name": "CosmosDBMongo",
                "value": "CosmosDBMongo"
              },
              {
                "name": "CosmosDBMongoVCore",
                "value": "CosmosDBMongoVCore"
              },
              {
                "name": "CosmosDBSql",
                "value": "CosmosDBSql"
              },
              {
                "name": "AzureBlobStorage",
                "value": "AzureBlobStorage"
              }
            ]
          }
        }
      },
      "discriminator": "component",
      "required": [
        "component"
      ]
    },
    "DataTransferJobFeedResults": {
      "type": "object",
      "description": "The List operation response, that contains the Data Transfer jobs and their properties.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The DataTransferJobGetResults items on this page",
          "items": {
            "$ref": "#/definitions/DataTransferJobGetResults"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "DataTransferJobGetResults": {
      "type": "object",
      "description": "A Cosmos DB Data Transfer Job",
      "properties": {
        "properties": {
          "$ref": "#/definitions/DataTransferJobProperties",
          "description": "The properties of a DataTransfer Job",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "DataTransferJobMode": {
      "type": "string",
      "description": "Mode of job execution",
      "enum": [
        "Offline",
        "Online"
      ],
      "x-ms-enum": {
        "name": "DataTransferJobMode",
        "modelAsString": true,
        "values": [
          {
            "name": "Offline",
            "value": "Offline"
          },
          {
            "name": "Online",
            "value": "Online"
          }
        ]
      }
    },
    "DataTransferJobProperties": {
      "type": "object",
      "description": "The properties of a DataTransfer Job",
      "properties": {
        "jobName": {
          "type": "string",
          "description": "Job Name",
          "readOnly": true
        },
        "source": {
          "$ref": "#/definitions/DataTransferDataSourceSink",
          "description": "Source DataStore details"
        },
        "destination": {
          "$ref": "#/definitions/DataTransferDataSourceSink",
          "description": "Destination DataStore details"
        },
        "status": {
          "type": "string",
          "description": "Job Status",
          "readOnly": true
        },
        "processedCount": {
          "type": "integer",
          "format": "int64",
          "description": "Processed Count.",
          "readOnly": true
        },
        "totalCount": {
          "type": "integer",
          "format": "int64",
          "description": "Total Count.",
          "readOnly": true
        },
        "lastUpdatedUtcTime": {
          "type": "string",
          "format": "date-time",
          "description": "Last Updated Time (ISO-8601 format).",
          "readOnly": true
        },
        "workerCount": {
          "type": "integer",
          "format": "int32",
          "description": "Worker count",
          "minimum": 0
        },
        "error": {
          "$ref": "#/definitions/ErrorResponseAutoGenerated",
          "description": "Error response for Faulted job",
          "readOnly": true
        },
        "duration": {
          "type": "string",
          "description": "Total Duration of Job",
          "readOnly": true
        },
        "mode": {
          "$ref": "#/definitions/DataTransferJobMode",
          "description": "Mode of job execution"
        }
      },
      "required": [
        "source",
        "destination"
      ]
    },
    "DataTransferRegionalServiceResource": {
      "type": "object",
      "description": "Resource for a regional service location.",
      "allOf": [
        {
          "$ref": "#/definitions/RegionalServiceResource"
        }
      ]
    },
    "DataTransferServiceResourceCreateUpdateProperties": {
      "type": "object",
      "description": "Properties for Create or Update request for DataTransferServiceResource",
      "allOf": [
        {
          "$ref": "#/definitions/ServiceResourceCreateUpdateProperties"
        }
      ],
      "x-ms-discriminator-value": "DataTransfer"
    },
    "DataTransferServiceResourceProperties": {
      "type": "object",
      "description": "Properties for DataTransferServiceResource.",
      "properties": {
        "locations": {
          "type": "array",
          "description": "An array that contains all of the locations for the service.",
          "items": {
            "$ref": "#/definitions/DataTransferRegionalServiceResource"
          },
          "readOnly": true
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ServiceResourceProperties"
        }
      ],
      "x-ms-discriminator-value": "DataTransfer"
    },
    "DatabaseAccountConnectionString": {
      "type": "object",
      "description": "Connection string for the Cosmos DB account",
      "properties": {
        "connectionString": {
          "type": "string",
          "description": "Value of the connection string",
          "readOnly": true
        },
        "description": {
          "type": "string",
          "description": "Description of the connection string",
          "readOnly": true
        },
        "keyKind": {
          "$ref": "#/definitions/Kind",
          "description": "Kind of the connection string key",
          "readOnly": true
        },
        "type": {
          "$ref": "#/definitions/Type",
          "description": "Type of the connection string",
          "readOnly": true
        }
      }
    },
    "DatabaseAccountCreateUpdateParameters": {
      "type": "object",
      "description": "Parameters to create and update Cosmos DB database accounts.",
      "properties": {
        "kind": {
          "type": "string",
          "description": "Indicates the type of database account. This can only be set at database account creation.",
          "default": "GlobalDocumentDB",
          "enum": [
            "GlobalDocumentDB",
            "MongoDB",
            "Parse"
          ],
          "x-ms-enum": {
            "name": "DatabaseAccountKind",
            "modelAsString": true,
            "values": [
              {
                "name": "GlobalDocumentDB",
                "value": "GlobalDocumentDB"
              },
              {
                "name": "MongoDB",
                "value": "MongoDB"
              },
              {
                "name": "Parse",
                "value": "Parse"
              }
            ]
          }
        },
        "identity": {
          "$ref": "#/definitions/ManagedServiceIdentity"
        },
        "properties": {
          "$ref": "#/definitions/DatabaseAccountCreateUpdateProperties",
          "description": "Properties to create and update Azure Cosmos DB database accounts.",
          "x-ms-client-flatten": true
        }
      },
      "required": [
        "properties"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/ARMResourceProperties"
        }
      ]
    },
    "DatabaseAccountCreateUpdateProperties": {
      "type": "object",
      "description": "Properties to create and update Azure Cosmos DB database accounts.",
      "properties": {
        "consistencyPolicy": {
          "$ref": "#/definitions/ConsistencyPolicy",
          "description": "The consistency policy for the Cosmos DB account."
        },
        "locations": {
          "type": "array",
          "description": "An array that contains the georeplication locations enabled for the Cosmos DB account.",
          "items": {
            "$ref": "#/definitions/Location"
          }
        },
        "databaseAccountOfferType": {
          "type": "string",
          "description": "The offer type for the Cosmos DB database account.",
          "enum": [
            "Standard"
          ],
          "x-ms-enum": {
            "modelAsString": false
          }
        },
        "ipRules": {
          "type": "array",
          "description": "List of IpRules.",
          "items": {
            "$ref": "#/definitions/IpAddressOrRange"
          },
          "x-ms-identifiers": []
        },
        "isVirtualNetworkFilterEnabled": {
          "type": "boolean",
          "description": "Flag to indicate whether to enable/disable Virtual Network ACL rules."
        },
        "enableAutomaticFailover": {
          "type": "boolean",
          "description": "Enables automatic failover of the write region in the rare event that the region is unavailable due to an outage. Automatic failover will result in a new write region for the account and is chosen based on the failover priorities configured for the account."
        },
        "capabilities": {
          "type": "array",
          "description": "List of Cosmos DB capabilities for the account",
          "items": {
            "$ref": "#/definitions/Capability"
          }
        },
        "virtualNetworkRules": {
          "type": "array",
          "description": "List of Virtual Network ACL rules configured for the Cosmos DB account.",
          "items": {
            "$ref": "#/definitions/VirtualNetworkRule"
          }
        },
        "enableMultipleWriteLocations": {
          "type": "boolean",
          "description": "Enables the account to write in multiple locations"
        },
        "enableCassandraConnector": {
          "type": "boolean",
          "description": "Enables the cassandra connector on the Cosmos DB C* account"
        },
        "connectorOffer": {
          "$ref": "#/definitions/ConnectorOffer",
          "description": "The cassandra connector offer type for the Cosmos DB database C* account."
        },
        "disableKeyBasedMetadataWriteAccess": {
          "type": "boolean",
          "description": "Disable write operations on metadata resources (databases, containers, throughput) via account keys"
        },
        "keyVaultKeyUri": {
          "type": "string",
          "description": "The URI of the key vault"
        },
        "defaultIdentity": {
          "type": "string",
          "description": "The default identity for accessing key vault used in features like customer managed keys. The default identity needs to be explicitly set by the users. It can be \"FirstPartyIdentity\", \"SystemAssignedIdentity\" and more."
        },
        "publicNetworkAccess": {
          "$ref": "#/definitions/PublicNetworkAccess",
          "description": "Whether requests from Public Network are allowed"
        },
        "enableFreeTier": {
          "type": "boolean",
          "description": "Flag to indicate whether Free Tier is enabled."
        },
        "apiProperties": {
          "$ref": "#/definitions/ApiProperties",
          "description": "API specific properties. Currently, supported only for MongoDB API."
        },
        "enableAnalyticalStorage": {
          "type": "boolean",
          "description": "Flag to indicate whether to enable storage analytics."
        },
        "analyticalStorageConfiguration": {
          "$ref": "#/definitions/AnalyticalStorageConfiguration",
          "description": "Analytical storage specific properties."
        },
        "createMode": {
          "type": "string",
          "description": "Enum to indicate the mode of account creation.",
          "default": "Default",
          "enum": [
            "Default",
            "Restore"
          ],
          "x-ms-enum": {
            "name": "CreateMode",
            "modelAsString": true,
            "values": [
              {
                "name": "Default",
                "value": "Default"
              },
              {
                "name": "Restore",
                "value": "Restore"
              }
            ]
          }
        },
        "backupPolicy": {
          "$ref": "#/definitions/BackupPolicy",
          "description": "The object representing the policy for taking backups on an account."
        },
        "cors": {
          "type": "array",
          "description": "The CORS policy for the Cosmos DB database account.",
          "items": {
            "$ref": "#/definitions/CorsPolicy"
          },
          "x-ms-identifiers": []
        },
        "networkAclBypass": {
          "$ref": "#/definitions/NetworkAclBypass",
          "description": "Indicates what services are allowed to bypass firewall checks."
        },
        "networkAclBypassResourceIds": {
          "type": "array",
          "description": "An array that contains the Resource Ids for Network Acl Bypass for the Cosmos DB account.",
          "items": {
            "type": "string"
          }
        },
        "diagnosticLogSettings": {
          "$ref": "#/definitions/DiagnosticLogSettings",
          "description": "The Object representing the different Diagnostic log settings for the Cosmos DB Account."
        },
        "disableLocalAuth": {
          "type": "boolean",
          "description": "Opt-out of local authentication and ensure only MSI and AAD can be used exclusively for authentication."
        },
        "restoreParameters": {
          "$ref": "#/definitions/RestoreParameters",
          "description": "Parameters to indicate the information about the restore."
        },
        "capacity": {
          "$ref": "#/definitions/Capacity",
          "description": "The object that represents all properties related to capacity enforcement on an account."
        },
        "capacityMode": {
          "$ref": "#/definitions/CapacityMode",
          "description": "Indicates the capacityMode of the Cosmos DB account."
        },
        "enableMaterializedViews": {
          "type": "boolean",
          "description": "Flag to indicate whether to enable MaterializedViews on the Cosmos DB account"
        },
        "keysMetadata": {
          "$ref": "#/definitions/DatabaseAccountKeysMetadata",
          "description": "This property is ignored during the update/create operation, as the metadata is read-only. The object represents the metadata for the Account Keys of the Cosmos DB account.",
          "readOnly": true
        },
        "enablePartitionMerge": {
          "type": "boolean",
          "description": "Flag to indicate enabling/disabling of Partition Merge feature on the account"
        },
        "enableBurstCapacity": {
          "type": "boolean",
          "description": "Flag to indicate enabling/disabling of Burst Capacity Preview feature on the account"
        },
        "minimalTlsVersion": {
          "$ref": "#/definitions/MinimalTlsVersion",
          "description": "Indicates the minimum allowed Tls version. The default is Tls 1.0, except for Cassandra and Mongo API's, which only work with Tls 1.2."
        },
        "customerManagedKeyStatus": {
          "type": "string",
          "description": "Indicates the status of the Customer Managed Key feature on the account. In case there are errors, the property provides troubleshooting guidance."
        },
        "enablePriorityBasedExecution": {
          "type": "boolean",
          "description": "Flag to indicate enabling/disabling of Priority Based Execution Preview feature on the account"
        },
        "defaultPriorityLevel": {
          "$ref": "#/definitions/DefaultPriorityLevel",
          "description": "Enum to indicate default Priority Level of request for Priority Based Execution."
        },
        "enablePerRegionPerPartitionAutoscale": {
          "type": "boolean",
          "description": "Flag to indicate enabling/disabling of Per-Region Per-partition autoscale Preview feature on the account"
        },
        "enableAllVersionsAndDeletesChangeFeed": {
          "type": "boolean",
          "description": "Flag to indicate if All Versions and Deletes Change feed feature is enabled on the account"
        }
      },
      "required": [
        "locations",
        "databaseAccountOfferType"
      ]
    },
    "DatabaseAccountGetProperties": {
      "type": "object",
      "description": "Properties for the database account.",
      "properties": {
        "provisioningState": {
          "type": "string",
          "description": "The provisioning state of the resource.",
          "readOnly": true
        },
        "documentEndpoint": {
          "type": "string",
          "description": "The connection endpoint for the Cosmos DB database account.",
          "readOnly": true
        },
        "databaseAccountOfferType": {
          "type": "string",
          "description": "The offer type for the Cosmos DB database account. Default value: Standard.",
          "enum": [
            "Standard"
          ],
          "x-ms-enum": {
            "modelAsString": false
          },
          "readOnly": true
        },
        "ipRules": {
          "type": "array",
          "description": "List of IpRules.",
          "items": {
            "$ref": "#/definitions/IpAddressOrRange"
          },
          "x-ms-identifiers": []
        },
        "isVirtualNetworkFilterEnabled": {
          "type": "boolean",
          "description": "Flag to indicate whether to enable/disable Virtual Network ACL rules."
        },
        "enableAutomaticFailover": {
          "type": "boolean",
          "description": "Enables automatic failover of the write region in the rare event that the region is unavailable due to an outage. Automatic failover will result in a new write region for the account and is chosen based on the failover priorities configured for the account."
        },
        "consistencyPolicy": {
          "$ref": "#/definitions/ConsistencyPolicy",
          "description": "The consistency policy for the Cosmos DB database account."
        },
        "capabilities": {
          "type": "array",
          "description": "List of Cosmos DB capabilities for the account",
          "items": {
            "$ref": "#/definitions/Capability"
          }
        },
        "writeLocations": {
          "type": "array",
          "description": "An array that contains the write location for the Cosmos DB account.",
          "items": {
            "$ref": "#/definitions/Location"
          },
          "readOnly": true
        },
        "readLocations": {
          "type": "array",
          "description": "An array that contains of the read locations enabled for the Cosmos DB account.",
          "items": {
            "$ref": "#/definitions/Location"
          },
          "readOnly": true
        },
        "locations": {
          "type": "array",
          "description": "An array that contains all of the locations enabled for the Cosmos DB account.",
          "items": {
            "$ref": "#/definitions/Location"
          },
          "readOnly": true
        },
        "failoverPolicies": {
          "type": "array",
          "description": "An array that contains the regions ordered by their failover priorities.",
          "items": {
            "$ref": "#/definitions/FailoverPolicy"
          },
          "readOnly": true
        },
        "virtualNetworkRules": {
          "type": "array",
          "description": "List of Virtual Network ACL rules configured for the Cosmos DB account.",
          "items": {
            "$ref": "#/definitions/VirtualNetworkRule"
          }
        },
        "privateEndpointConnections": {
          "type": "array",
          "description": "List of Private Endpoint Connections configured for the Cosmos DB account.",
          "items": {
            "$ref": "#/definitions/PrivateEndpointConnection"
          },
          "readOnly": true
        },
        "enableMultipleWriteLocations": {
          "type": "boolean",
          "description": "Enables the account to write in multiple locations"
        },
        "enableCassandraConnector": {
          "type": "boolean",
          "description": "Enables the cassandra connector on the Cosmos DB C* account"
        },
        "connectorOffer": {
          "$ref": "#/definitions/ConnectorOffer",
          "description": "The cassandra connector offer type for the Cosmos DB database C* account."
        },
        "disableKeyBasedMetadataWriteAccess": {
          "type": "boolean",
          "description": "Disable write operations on metadata resources (databases, containers, throughput) via account keys"
        },
        "keyVaultKeyUri": {
          "type": "string",
          "description": "The URI of the key vault"
        },
        "defaultIdentity": {
          "type": "string",
          "description": "The default identity for accessing key vault used in features like customer managed keys. The default identity needs to be explicitly set by the users. It can be \"FirstPartyIdentity\", \"SystemAssignedIdentity\" and more."
        },
        "publicNetworkAccess": {
          "$ref": "#/definitions/PublicNetworkAccess",
          "description": "Whether requests from Public Network are allowed"
        },
        "enableFreeTier": {
          "type": "boolean",
          "description": "Flag to indicate whether Free Tier is enabled."
        },
        "apiProperties": {
          "$ref": "#/definitions/ApiProperties",
          "description": "API specific properties."
        },
        "enableAnalyticalStorage": {
          "type": "boolean",
          "description": "Flag to indicate whether to enable storage analytics."
        },
        "analyticalStorageConfiguration": {
          "$ref": "#/definitions/AnalyticalStorageConfiguration",
          "description": "Analytical storage specific properties."
        },
        "instanceId": {
          "type": "string",
          "description": "A unique identifier assigned to the database account",
          "readOnly": true
        },
        "createMode": {
          "type": "string",
          "description": "Enum to indicate the mode of account creation.",
          "default": "Default",
          "enum": [
            "Default",
            "Restore"
          ],
          "x-ms-enum": {
            "name": "CreateMode",
            "modelAsString": true,
            "values": [
              {
                "name": "Default",
                "value": "Default"
              },
              {
                "name": "Restore",
                "value": "Restore"
              }
            ]
          }
        },
        "restoreParameters": {
          "$ref": "#/definitions/RestoreParameters",
          "description": "Parameters to indicate the information about the restore."
        },
        "backupPolicy": {
          "$ref": "#/definitions/BackupPolicy",
          "description": "The object representing the policy for taking backups on an account."
        },
        "cors": {
          "type": "array",
          "description": "The CORS policy for the Cosmos DB database account.",
          "items": {
            "$ref": "#/definitions/CorsPolicy"
          },
          "x-ms-identifiers": []
        },
        "networkAclBypass": {
          "$ref": "#/definitions/NetworkAclBypass",
          "description": "Indicates what services are allowed to bypass firewall checks."
        },
        "networkAclBypassResourceIds": {
          "type": "array",
          "description": "An array that contains the Resource Ids for Network Acl Bypass for the Cosmos DB account.",
          "items": {
            "type": "string",
            "format": "arm-id",
            "description": "A type definition that refers the id to an Azure Resource Manager resource."
          }
        },
        "diagnosticLogSettings": {
          "$ref": "#/definitions/DiagnosticLogSettings",
          "description": "The Object representing the different Diagnostic log settings for the Cosmos DB Account."
        },
        "disableLocalAuth": {
          "type": "boolean",
          "description": "Opt-out of local authentication and ensure only MSI and AAD can be used exclusively for authentication."
        },
        "capacity": {
          "$ref": "#/definitions/Capacity",
          "description": "The object that represents all properties related to capacity enforcement on an account."
        },
        "capacityMode": {
          "$ref": "#/definitions/CapacityMode",
          "description": "Indicates the capacityMode of the Cosmos DB account."
        },
        "capacityModeChangeTransitionState": {
          "$ref": "#/definitions/CapacityModeChangeTransitionState",
          "description": "The object that represents the migration state for the CapacityMode of the Cosmos DB account."
        },
        "enableMaterializedViews": {
          "type": "boolean",
          "description": "Flag to indicate whether to enable MaterializedViews on the Cosmos DB account"
        },
        "keysMetadata": {
          "$ref": "#/definitions/DatabaseAccountKeysMetadata",
          "description": "The object that represents the metadata for the Account Keys of the Cosmos DB account.",
          "readOnly": true
        },
        "enablePartitionMerge": {
          "type": "boolean",
          "description": "Flag to indicate enabling/disabling of Partition Merge feature on the account"
        },
        "enableBurstCapacity": {
          "type": "boolean",
          "description": "Flag to indicate enabling/disabling of Burst Capacity Preview feature on the account"
        },
        "minimalTlsVersion": {
          "$ref": "#/definitions/MinimalTlsVersion",
          "description": "Indicates the minimum allowed Tls version. The default is Tls 1.0, except for Cassandra and Mongo API's, which only work with Tls 1.2."
        },
        "customerManagedKeyStatus": {
          "type": "string",
          "description": "Indicates the status of the Customer Managed Key feature on the account. In case there are errors, the property provides troubleshooting guidance."
        },
        "enablePriorityBasedExecution": {
          "type": "boolean",
          "description": "Flag to indicate enabling/disabling of Priority Based Execution Preview feature on the account"
        },
        "defaultPriorityLevel": {
          "$ref": "#/definitions/DefaultPriorityLevel",
          "description": "Enum to indicate default Priority Level of request for Priority Based Execution."
        },
        "enablePerRegionPerPartitionAutoscale": {
          "type": "boolean",
          "description": "Flag to indicate enabling/disabling of Per-Region Per-partition autoscale Preview feature on the account"
        },
        "enableAllVersionsAndDeletesChangeFeed": {
          "type": "boolean",
          "description": "Flag to indicate if All Versions and Deletes Change feed feature is enabled on the account"
        }
      }
    },
    "DatabaseAccountGetResults": {
      "type": "object",
      "description": "An Azure Cosmos DB database account.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/DatabaseAccountGetProperties",
          "description": "Properties for the database account.",
          "x-ms-client-flatten": true
        },
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "location": {
          "type": "string",
          "description": "The geo-location where the resource lives",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "identity": {
          "$ref": "#/definitions/ManagedServiceIdentity",
          "description": "Identity for the resource."
        },
        "kind": {
          "type": "string",
          "description": "Indicates the type of database account. This can only be set at database account creation.",
          "default": "GlobalDocumentDB",
          "enum": [
            "GlobalDocumentDB",
            "MongoDB",
            "Parse"
          ],
          "x-ms-enum": {
            "name": "DatabaseAccountKind",
            "modelAsString": true,
            "values": [
              {
                "name": "GlobalDocumentDB",
                "value": "GlobalDocumentDB"
              },
              {
                "name": "MongoDB",
                "value": "MongoDB"
              },
              {
                "name": "Parse",
                "value": "Parse"
              }
            ]
          }
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/Resource"
        }
      ]
    },
    "DatabaseAccountKeysMetadata": {
      "type": "object",
      "description": "The metadata related to each access key for the given Cosmos DB database account.",
      "properties": {
        "primaryMasterKey": {
          "$ref": "#/definitions/AccountKeyMetadata",
          "description": "The metadata related to the Primary Read-Write Key for the given Cosmos DB database account.",
          "readOnly": true
        },
        "secondaryMasterKey": {
          "$ref": "#/definitions/AccountKeyMetadata",
          "description": "The metadata related to the Secondary Read-Write Key for the given Cosmos DB database account.",
          "readOnly": true
        },
        "primaryReadonlyMasterKey": {
          "$ref": "#/definitions/AccountKeyMetadata",
          "description": "The metadata related to the Primary Read-Only Key for the given Cosmos DB database account.",
          "readOnly": true
        },
        "secondaryReadonlyMasterKey": {
          "$ref": "#/definitions/AccountKeyMetadata",
          "description": "The metadata related to the Secondary Read-Only Key for the given Cosmos DB database account.",
          "readOnly": true
        }
      }
    },
    "DatabaseAccountListConnectionStringsResult": {
      "type": "object",
      "description": "The connection strings for the given database account.",
      "properties": {
        "connectionStrings": {
          "type": "array",
          "description": "An array that contains the connection strings for the Cosmos DB account.",
          "items": {
            "$ref": "#/definitions/DatabaseAccountConnectionString"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "DatabaseAccountListKeysResult": {
      "type": "object",
      "description": "The access keys for the given database account.",
      "properties": {
        "primaryMasterKey": {
          "type": "string",
          "description": "Base 64 encoded value of the primary read-write key.",
          "readOnly": true
        },
        "secondaryMasterKey": {
          "type": "string",
          "description": "Base 64 encoded value of the secondary read-write key.",
          "readOnly": true
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/DatabaseAccountListReadOnlyKeysResult"
        }
      ]
    },
    "DatabaseAccountListReadOnlyKeysResult": {
      "type": "object",
      "description": "The read-only access keys for the given database account.",
      "properties": {
        "primaryReadonlyMasterKey": {
          "type": "string",
          "description": "Base 64 encoded value of the primary read-only key.",
          "readOnly": true
        },
        "secondaryReadonlyMasterKey": {
          "type": "string",
          "description": "Base 64 encoded value of the secondary read-only key.",
          "readOnly": true
        }
      }
    },
    "DatabaseAccountRegenerateKeyParameters": {
      "type": "object",
      "description": "Parameters to regenerate the keys within the database account.",
      "properties": {
        "keyKind": {
          "$ref": "#/definitions/KeyKind",
          "description": "The access key to regenerate."
        }
      },
      "required": [
        "keyKind"
      ]
    },
    "DatabaseAccountUpdateParameters": {
      "type": "object",
      "description": "Parameters for patching Azure Cosmos DB database account properties.",
      "properties": {
        "tags": {
          "type": "object",
          "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\".",
          "additionalProperties": {
            "type": "string"
          }
        },
        "location": {
          "type": "string",
          "description": "The location of the resource group to which the resource belongs."
        },
        "identity": {
          "$ref": "#/definitions/ManagedServiceIdentity",
          "description": "Identity for the resource."
        },
        "properties": {
          "$ref": "#/definitions/DatabaseAccountUpdateProperties",
          "description": "Properties to update Azure Cosmos DB database accounts.",
          "x-ms-client-flatten": true
        }
      }
    },
    "DatabaseAccountUpdateProperties": {
      "type": "object",
      "description": "Properties to update Azure Cosmos DB database accounts.",
      "properties": {
        "consistencyPolicy": {
          "$ref": "#/definitions/ConsistencyPolicy",
          "description": "The consistency policy for the Cosmos DB account."
        },
        "locations": {
          "type": "array",
          "description": "An array that contains the georeplication locations enabled for the Cosmos DB account.",
          "items": {
            "$ref": "#/definitions/Location"
          }
        },
        "ipRules": {
          "type": "array",
          "description": "List of IpRules.",
          "items": {
            "$ref": "#/definitions/IpAddressOrRange"
          },
          "x-ms-identifiers": []
        },
        "isVirtualNetworkFilterEnabled": {
          "type": "boolean",
          "description": "Flag to indicate whether to enable/disable Virtual Network ACL rules."
        },
        "enableAutomaticFailover": {
          "type": "boolean",
          "description": "Enables automatic failover of the write region in the rare event that the region is unavailable due to an outage. Automatic failover will result in a new write region for the account and is chosen based on the failover priorities configured for the account."
        },
        "capabilities": {
          "type": "array",
          "description": "List of Cosmos DB capabilities for the account",
          "items": {
            "$ref": "#/definitions/Capability"
          }
        },
        "virtualNetworkRules": {
          "type": "array",
          "description": "List of Virtual Network ACL rules configured for the Cosmos DB account.",
          "items": {
            "$ref": "#/definitions/VirtualNetworkRule"
          }
        },
        "enableMultipleWriteLocations": {
          "type": "boolean",
          "description": "Enables the account to write in multiple locations"
        },
        "enableCassandraConnector": {
          "type": "boolean",
          "description": "Enables the cassandra connector on the Cosmos DB C* account"
        },
        "connectorOffer": {
          "$ref": "#/definitions/ConnectorOffer",
          "description": "The cassandra connector offer type for the Cosmos DB database C* account."
        },
        "disableKeyBasedMetadataWriteAccess": {
          "type": "boolean",
          "description": "Disable write operations on metadata resources (databases, containers, throughput) via account keys"
        },
        "keyVaultKeyUri": {
          "type": "string",
          "description": "The URI of the key vault"
        },
        "defaultIdentity": {
          "type": "string",
          "description": "The default identity for accessing key vault used in features like customer managed keys. The default identity needs to be explicitly set by the users. It can be \"FirstPartyIdentity\", \"SystemAssignedIdentity\" and more."
        },
        "publicNetworkAccess": {
          "$ref": "#/definitions/PublicNetworkAccess",
          "description": "Whether requests from Public Network are allowed"
        },
        "enableFreeTier": {
          "type": "boolean",
          "description": "Flag to indicate whether Free Tier is enabled."
        },
        "apiProperties": {
          "$ref": "#/definitions/ApiProperties",
          "description": "API specific properties. Currently, supported only for MongoDB API."
        },
        "enableAnalyticalStorage": {
          "type": "boolean",
          "description": "Flag to indicate whether to enable storage analytics."
        },
        "analyticalStorageConfiguration": {
          "$ref": "#/definitions/AnalyticalStorageConfiguration",
          "description": "Analytical storage specific properties."
        },
        "backupPolicy": {
          "$ref": "#/definitions/BackupPolicy",
          "description": "The object representing the policy for taking backups on an account."
        },
        "cors": {
          "type": "array",
          "description": "The CORS policy for the Cosmos DB database account.",
          "items": {
            "$ref": "#/definitions/CorsPolicy"
          },
          "x-ms-identifiers": []
        },
        "networkAclBypass": {
          "$ref": "#/definitions/NetworkAclBypass",
          "description": "Indicates what services are allowed to bypass firewall checks."
        },
        "networkAclBypassResourceIds": {
          "type": "array",
          "description": "An array that contains the Resource Ids for Network Acl Bypass for the Cosmos DB account.",
          "items": {
            "type": "string"
          }
        },
        "diagnosticLogSettings": {
          "$ref": "#/definitions/DiagnosticLogSettings",
          "description": "The Object representing the different Diagnostic log settings for the Cosmos DB Account."
        },
        "disableLocalAuth": {
          "type": "boolean",
          "description": "Opt-out of local authentication and ensure only MSI and AAD can be used exclusively for authentication."
        },
        "capacity": {
          "$ref": "#/definitions/Capacity",
          "description": "The object that represents all properties related to capacity enforcement on an account."
        },
        "capacityMode": {
          "$ref": "#/definitions/CapacityMode",
          "description": "Indicates the capacityMode of the Cosmos DB account."
        },
        "enableMaterializedViews": {
          "type": "boolean",
          "description": "Flag to indicate whether to enable MaterializedViews on the Cosmos DB account"
        },
        "keysMetadata": {
          "$ref": "#/definitions/DatabaseAccountKeysMetadata",
          "description": "This property is ignored during the update operation, as the metadata is read-only. The object represents the metadata for the Account Keys of the Cosmos DB account.",
          "readOnly": true
        },
        "enablePartitionMerge": {
          "type": "boolean",
          "description": "Flag to indicate enabling/disabling of Partition Merge feature on the account"
        },
        "enableBurstCapacity": {
          "type": "boolean",
          "description": "Flag to indicate enabling/disabling of Burst Capacity Preview feature on the account"
        },
        "minimalTlsVersion": {
          "$ref": "#/definitions/MinimalTlsVersion",
          "description": "Indicates the minimum allowed Tls version. The default is Tls 1.0, except for Cassandra and Mongo API's, which only work with Tls 1.2."
        },
        "customerManagedKeyStatus": {
          "type": "string",
          "description": "Indicates the status of the Customer Managed Key feature on the account. In case there are errors, the property provides troubleshooting guidance."
        },
        "enablePriorityBasedExecution": {
          "type": "boolean",
          "description": "Flag to indicate enabling/disabling of Priority Based Execution Preview feature on the account"
        },
        "defaultPriorityLevel": {
          "$ref": "#/definitions/DefaultPriorityLevel",
          "description": "Enum to indicate default Priority Level of request for Priority Based Execution."
        },
        "enablePerRegionPerPartitionAutoscale": {
          "type": "boolean",
          "description": "Flag to indicate enabling/disabling of Per-Region Per-partition autoscale Preview feature on the account"
        },
        "enableAllVersionsAndDeletesChangeFeed": {
          "type": "boolean",
          "description": "Flag to indicate if All Versions and Deletes Change feed feature is enabled on the account"
        }
      }
    },
    "DatabaseAccountsListResult": {
      "type": "object",
      "description": "The List operation response, that contains the database accounts and their properties.",
      "properties": {
        "value": {
          "type": "array",
          "description": "List of database account and their properties.",
          "items": {
            "$ref": "#/definitions/DatabaseAccountGetResults"
          },
          "readOnly": true
        }
      }
    },
    "DatabaseRestoreResource": {
      "type": "object",
      "description": "Specific Databases to restore.",
      "properties": {
        "databaseName": {
          "type": "string",
          "description": "The name of the database available for restore."
        },
        "collectionNames": {
          "type": "array",
          "description": "The names of the collections available for restore.",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "DedicatedGatewayType": {
      "type": "string",
      "description": "DedicatedGatewayType for the service.",
      "enum": [
        "IntegratedCache",
        "DistributedQuery"
      ],
      "x-ms-enum": {
        "name": "DedicatedGatewayType",
        "modelAsString": true,
        "values": [
          {
            "name": "IntegratedCache",
            "value": "IntegratedCache"
          },
          {
            "name": "DistributedQuery",
            "value": "DistributedQuery"
          }
        ]
      }
    },
    "DefaultConsistencyLevel": {
      "type": "string",
      "description": "The default consistency level and configuration settings of the Cosmos DB account.",
      "enum": [
        "Eventual",
        "Session",
        "BoundedStaleness",
        "Strong",
        "ConsistentPrefix"
      ],
      "x-ms-enum": {
        "name": "DefaultConsistencyLevel",
        "modelAsString": false
      }
    },
    "DefaultPriorityLevel": {
      "type": "string",
      "description": "Enum to indicate default priorityLevel of requests",
      "enum": [
        "High",
        "Low"
      ],
      "x-ms-enum": {
        "name": "DefaultPriorityLevel",
        "modelAsString": true,
        "values": [
          {
            "name": "High",
            "value": "High"
          },
          {
            "name": "Low",
            "value": "Low"
          }
        ]
      }
    },
    "DiagnosticLogSettings": {
      "type": "object",
      "description": "Indicates what diagnostic log settings are to be enabled.",
      "properties": {
        "enableFullTextQuery": {
          "$ref": "#/definitions/EnableFullTextQuery",
          "description": "Describe the level of detail with which queries are to be logged."
        }
      }
    },
    "DistanceFunction": {
      "type": "string",
      "description": "The distance function to use for distance calculation in between vectors.",
      "enum": [
        "euclidean",
        "cosine",
        "dotproduct"
      ],
      "x-ms-enum": {
        "name": "DistanceFunction",
        "modelAsString": true,
        "values": [
          {
            "name": "Euclidean",
            "value": "euclidean"
          },
          {
            "name": "Cosine",
            "value": "cosine"
          },
          {
            "name": "Dotproduct",
            "value": "dotproduct"
          }
        ]
      }
    },
    "EnableFullTextQuery": {
      "type": "string",
      "description": "Describe the level of detail with which queries are to be logged.",
      "enum": [
        "None",
        "True",
        "False"
      ],
      "x-ms-enum": {
        "name": "EnableFullTextQuery",
        "modelAsString": false
      }
    },
    "ErrorResponseAutoGenerated": {
      "type": "object",
      "description": "Error Response.",
      "properties": {
        "code": {
          "type": "string",
          "description": "Error code."
        },
        "message": {
          "type": "string",
          "description": "Error message indicating why the operation failed."
        }
      }
    },
    "ExcludedPath": {
      "type": "object",
      "properties": {
        "path": {
          "type": "string",
          "description": "The path for which the indexing behavior applies to. Index paths typically start with root and end with wildcard (/path/*)"
        }
      }
    },
    "FailoverPolicies": {
      "type": "object",
      "description": "The list of new failover policies for the failover priority change.",
      "properties": {
        "failoverPolicies": {
          "type": "array",
          "description": "List of failover policies.",
          "items": {
            "$ref": "#/definitions/FailoverPolicy"
          },
          "x-ms-identifiers": []
        }
      },
      "required": [
        "failoverPolicies"
      ]
    },
    "FailoverPolicy": {
      "type": "object",
      "description": "The failover policy for a given region of a database account.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The unique identifier of the region in which the database account replicates to. Example: &lt;accountName&gt;-&lt;locationName&gt;.",
          "readOnly": true
        },
        "locationName": {
          "type": "string",
          "description": "The name of the region in which the database account exists."
        },
        "failoverPriority": {
          "type": "integer",
          "format": "int32",
          "description": "The failover priority of the region. A failover priority of 0 indicates a write region. The maximum value for a failover priority = (total number of regions - 1). Failover priority values must be unique for each of the regions in which the database account exists.",
          "minimum": 0
        }
      }
    },
    "FleetAnalyticsProperties": {
      "type": "object",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/Status",
          "description": "A provisioning state of the FleetAnalytics.",
          "readOnly": true
        },
        "storageLocationType": {
          "$ref": "#/definitions/FleetAnalyticsPropertiesStorageLocationType",
          "description": "The type of the fleet analytics resource."
        },
        "storageLocationUri": {
          "type": "string",
          "description": "The unique identifier of the fleet analytics resource."
        }
      }
    },
    "FleetAnalyticsPropertiesStorageLocationType": {
      "type": "string",
      "description": "The type of the fleet analytics resource.",
      "enum": [
        "StorageAccount",
        "FabricLakehouse"
      ],
      "x-ms-enum": {
        "name": "FleetAnalyticsPropertiesStorageLocationType",
        "modelAsString": true,
        "values": [
          {
            "name": "StorageAccount",
            "value": "StorageAccount"
          },
          {
            "name": "FabricLakehouse",
            "value": "FabricLakehouse"
          }
        ]
      }
    },
    "FleetAnalyticsResource": {
      "type": "object",
      "description": "An Azure Cosmos DB FleetAnalytics.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/FleetAnalyticsProperties",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "FleetAnalyticsResourceListResult": {
      "type": "object",
      "description": "The response of a FleetAnalyticsResource list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The FleetAnalyticsResource items on this page",
          "items": {
            "$ref": "#/definitions/FleetAnalyticsResource"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "FleetResource": {
      "type": "object",
      "description": "An Azure Cosmos DB FleetResource.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/FleetResourceProperties",
          "description": "Properties to update Azure Cosmos DB fleet resource.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "FleetResourceListResult": {
      "type": "object",
      "description": "The response of a FleetResource list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The FleetResource items on this page",
          "items": {
            "$ref": "#/definitions/FleetResource"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "FleetResourceProperties": {
      "type": "object",
      "description": "Properties to update Azure Cosmos DB fleet resource.",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/Status",
          "description": "A provisioning state of the Fleet.",
          "readOnly": true
        }
      }
    },
    "FleetResourceUpdate": {
      "type": "object",
      "description": "Represents a fleet resource for updates.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/FleetResourceProperties",
          "description": "Properties to update Azure Cosmos DB fleet resource.",
          "x-ms-client-flatten": true
        }
      }
    },
    "FleetspaceAccountProperties": {
      "type": "object",
      "description": "An Azure Cosmos DB Global Database Account which is part of a Fleetspace Account.",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/Status",
          "description": "A provisioning state of the Fleetspace Account.",
          "readOnly": true
        },
        "globalDatabaseAccountProperties": {
          "$ref": "#/definitions/FleetspaceAccountPropertiesGlobalDatabaseAccountProperties",
          "description": "Configuration for fleetspace Account in the fleetspace."
        }
      }
    },
    "FleetspaceAccountPropertiesGlobalDatabaseAccountProperties": {
      "type": "object",
      "description": "Configuration for fleetspace Account in the fleetspace.",
      "properties": {
        "resourceId": {
          "type": "string",
          "description": "The resource identifier of global database account in the Fleetspace Account."
        },
        "armLocation": {
          "type": "string",
          "description": "The location of  global database account in the Fleetspace Account."
        }
      }
    },
    "FleetspaceAccountResource": {
      "type": "object",
      "description": "An Azure Cosmos DB Fleetspace Account",
      "properties": {
        "properties": {
          "$ref": "#/definitions/FleetspaceAccountProperties",
          "description": "An Azure Cosmos DB Global Database Account which is part of a Fleetspace Account.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "FleetspaceAccountResourceListResult": {
      "type": "object",
      "description": "The response of a FleetspaceAccountResource list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The FleetspaceAccountResource items on this page",
          "items": {
            "$ref": "#/definitions/FleetspaceAccountResource"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "FleetspaceProperties": {
      "type": "object",
      "description": "Properties to update Azure Cosmos DB Fleetspace.",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/Status",
          "description": "A provisioning state of the Fleetspace.",
          "readOnly": true
        },
        "fleetspaceApiKind": {
          "$ref": "#/definitions/FleetspacePropertiesFleetspaceApiKind",
          "description": "The kind of API this fleetspace belongs to. Acceptable values: 'NoSQL'"
        },
        "throughputPoolConfiguration": {
          "$ref": "#/definitions/FleetspacePropertiesThroughputPoolConfiguration",
          "description": "Configuration for throughput pool in the fleetspace."
        }
      }
    },
    "FleetspacePropertiesFleetspaceApiKind": {
      "type": "string",
      "description": "The kind of API this fleetspace belongs to. Acceptable values: 'NoSQL'",
      "enum": [
        "NoSQL"
      ],
      "x-ms-enum": {
        "name": "FleetspacePropertiesFleetspaceApiKind",
        "modelAsString": true,
        "values": [
          {
            "name": "NoSQL",
            "value": "NoSQL"
          }
        ]
      }
    },
    "FleetspacePropertiesThroughputPoolConfiguration": {
      "type": "object",
      "description": "Configuration for throughput pool in the fleetspace.",
      "properties": {
        "minThroughput": {
          "type": "integer",
          "format": "int32",
          "description": "Minimum throughput for the pool."
        },
        "maxThroughput": {
          "type": "integer",
          "format": "int32",
          "description": "Maximum throughput for the pool."
        },
        "serviceTier": {
          "$ref": "#/definitions/FleetspacePropertiesThroughputPoolConfigurationServiceTier",
          "description": "Service Tier for the fleetspace. GeneralPurpose types refers to single write region accounts that can be added to this fleetspace, whereas BusinessCritical refers to multi write region."
        },
        "dataRegions": {
          "type": "array",
          "description": "List of data regions assigned to the fleetspace. Eg [westus2]",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "FleetspacePropertiesThroughputPoolConfigurationServiceTier": {
      "type": "string",
      "description": "Service Tier for the fleetspace. GeneralPurpose types refers to single write region accounts that can be added to this fleetspace, whereas BusinessCritical refers to multi write region.",
      "enum": [
        "GeneralPurpose",
        "BusinessCritical"
      ],
      "x-ms-enum": {
        "name": "FleetspacePropertiesThroughputPoolConfigurationServiceTier",
        "modelAsString": true,
        "values": [
          {
            "name": "GeneralPurpose",
            "value": "GeneralPurpose"
          },
          {
            "name": "BusinessCritical",
            "value": "BusinessCritical"
          }
        ]
      }
    },
    "FleetspaceResource": {
      "type": "object",
      "description": "An Azure Cosmos DB Fleetspace.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/FleetspaceProperties",
          "description": "Properties to update Azure Cosmos DB Fleetspace.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "FleetspaceResourceListResult": {
      "type": "object",
      "description": "The response of a FleetspaceResource list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The FleetspaceResource items on this page",
          "items": {
            "$ref": "#/definitions/FleetspaceResource"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "FleetspaceUpdate": {
      "type": "object",
      "description": "Represents a fleetspace resource for updates.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/FleetspaceProperties",
          "description": "Properties of the fleetspace.",
          "x-ms-client-flatten": true
        }
      }
    },
    "FullTextPath": {
      "type": "object",
      "description": "Represents the full text path specification.",
      "properties": {
        "path": {
          "type": "string",
          "description": "The path to the full text field in the document."
        },
        "language": {
          "type": "string",
          "description": "The language of the full text field in the document."
        }
      },
      "required": [
        "path"
      ]
    },
    "FullTextPolicy": {
      "type": "object",
      "description": "Cosmos DB FullText Policy",
      "properties": {
        "defaultLanguage": {
          "type": "string",
          "description": "The default language for a full text paths."
        },
        "fullTextPaths": {
          "type": "array",
          "description": "List of FullText Paths",
          "items": {
            "$ref": "#/definitions/FullTextPath"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "GraphAPIComputeRegionalServiceResource": {
      "type": "object",
      "description": "Resource for a regional service location.",
      "properties": {
        "graphApiComputeEndpoint": {
          "type": "string",
          "description": "The regional endpoint for GraphAPICompute.",
          "readOnly": true
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/RegionalServiceResource"
        }
      ]
    },
    "GraphAPIComputeServiceResourceCreateUpdateProperties": {
      "type": "object",
      "description": "Properties for Create or Update request for GraphAPIComputeServiceResource",
      "allOf": [
        {
          "$ref": "#/definitions/ServiceResourceCreateUpdateProperties"
        }
      ],
      "x-ms-discriminator-value": "GraphAPICompute"
    },
    "GraphAPIComputeServiceResourceProperties": {
      "type": "object",
      "description": "Properties for GraphAPIComputeServiceResource.",
      "properties": {
        "graphApiComputeEndpoint": {
          "type": "string",
          "description": "GraphAPICompute endpoint for the service."
        },
        "locations": {
          "type": "array",
          "description": "An array that contains all of the locations for the service.",
          "items": {
            "$ref": "#/definitions/GraphAPIComputeRegionalServiceResource"
          },
          "readOnly": true
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ServiceResourceProperties"
        }
      ],
      "x-ms-discriminator-value": "GraphAPICompute"
    },
    "GraphResource": {
      "type": "object",
      "description": "Cosmos DB Graph resource object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Name of the Cosmos DB Graph"
        }
      },
      "required": [
        "id"
      ]
    },
    "GraphResourceCreateUpdateParameters": {
      "type": "object",
      "description": "Parameters to create and update Cosmos DB Graph resource.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/GraphResourceCreateUpdateProperties",
          "description": "Properties to create and update Azure Cosmos DB Graph resource.",
          "x-ms-client-flatten": true
        }
      },
      "required": [
        "properties"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/ARMResourceProperties"
        }
      ]
    },
    "GraphResourceCreateUpdateProperties": {
      "type": "object",
      "description": "Properties to create and update Azure Cosmos DB Graph resource.",
      "properties": {
        "resource": {
          "$ref": "#/definitions/GraphResource",
          "description": "The standard JSON format of a Graph resource"
        },
        "options": {
          "$ref": "#/definitions/CreateUpdateOptions",
          "description": "A key-value pair of options to be applied for the request. This corresponds to the headers sent with the request."
        }
      },
      "required": [
        "resource"
      ]
    },
    "GraphResourceGetProperties": {
      "type": "object",
      "description": "The properties of an Azure Cosmos DB SQL database",
      "properties": {
        "resource": {
          "$ref": "#/definitions/GraphResourceGetPropertiesResource"
        },
        "options": {
          "$ref": "#/definitions/GraphResourceGetPropertiesOptions"
        }
      }
    },
    "GraphResourceGetPropertiesOptions": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/OptionsResource"
        }
      ]
    },
    "GraphResourceGetPropertiesResource": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/GraphResource"
        }
      ]
    },
    "GraphResourceGetResults": {
      "type": "object",
      "description": "An Azure Cosmos DB Graph resource.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/GraphResourceGetProperties",
          "description": "The properties of an Azure Cosmos DB Graph resource.",
          "x-ms-client-flatten": true
        },
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "location": {
          "type": "string",
          "description": "The geo-location where the resource lives",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "identity": {
          "$ref": "#/definitions/ManagedServiceIdentity",
          "description": "Identity for the resource."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/Resource"
        }
      ]
    },
    "GraphResourcesListResult": {
      "type": "object",
      "description": "The List operation response, that contains the Graph resource and their properties.",
      "properties": {
        "value": {
          "type": "array",
          "description": "List of Graph resource and their properties.",
          "items": {
            "$ref": "#/definitions/GraphResourceGetResults"
          },
          "readOnly": true
        }
      }
    },
    "GremlinDatabaseCreateUpdateParameters": {
      "type": "object",
      "description": "Parameters to create and update Cosmos DB Gremlin database.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/GremlinDatabaseCreateUpdateProperties",
          "description": "Properties to create and update Azure Cosmos DB Gremlin database.",
          "x-ms-client-flatten": true
        }
      },
      "required": [
        "properties"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/ARMResourceProperties"
        }
      ]
    },
    "GremlinDatabaseCreateUpdateProperties": {
      "type": "object",
      "description": "Properties to create and update Azure Cosmos DB Gremlin database.",
      "properties": {
        "resource": {
          "$ref": "#/definitions/GremlinDatabaseResource",
          "description": "The standard JSON format of a Gremlin database"
        },
        "options": {
          "$ref": "#/definitions/CreateUpdateOptions",
          "description": "A key-value pair of options to be applied for the request. This corresponds to the headers sent with the request."
        }
      },
      "required": [
        "resource"
      ]
    },
    "GremlinDatabaseGetProperties": {
      "type": "object",
      "description": "The properties of an Azure Cosmos DB SQL database",
      "properties": {
        "resource": {
          "$ref": "#/definitions/GremlinDatabaseGetPropertiesResource"
        },
        "options": {
          "$ref": "#/definitions/GremlinDatabaseGetPropertiesOptions"
        }
      }
    },
    "GremlinDatabaseGetPropertiesOptions": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/OptionsResource"
        }
      ]
    },
    "GremlinDatabaseGetPropertiesResource": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Name of the Cosmos DB Gremlin database"
        },
        "restoreParameters": {
          "$ref": "#/definitions/ResourceRestoreParameters",
          "description": "Parameters to indicate the information about the restore"
        },
        "createMode": {
          "type": "string",
          "description": "Enum to indicate the mode of resource creation.",
          "default": "Default",
          "enum": [
            "Default",
            "Restore"
          ],
          "x-ms-enum": {
            "name": "CreateMode",
            "modelAsString": true,
            "values": [
              {
                "name": "Default",
                "value": "Default"
              },
              {
                "name": "Restore",
                "value": "Restore"
              }
            ]
          }
        },
        "_rid": {
          "type": "string",
          "description": "A system generated property. A unique identifier.",
          "readOnly": true,
          "x-ms-client-name": "rid"
        },
        "_ts": {
          "type": "number",
          "format": "float",
          "description": "A system generated property that denotes the last updated timestamp of the resource.",
          "readOnly": true,
          "x-ms-client-name": "ts"
        },
        "_etag": {
          "type": "string",
          "description": "A system generated property representing the resource etag required for optimistic concurrency control.",
          "readOnly": true,
          "x-ms-client-name": "etag"
        }
      },
      "required": [
        "id"
      ]
    },
    "GremlinDatabaseGetResults": {
      "type": "object",
      "description": "An Azure Cosmos DB Gremlin database.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/GremlinDatabaseGetProperties",
          "description": "The properties of an Azure Cosmos DB SQL database",
          "x-ms-client-flatten": true
        },
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "location": {
          "type": "string",
          "description": "The geo-location where the resource lives",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "identity": {
          "$ref": "#/definitions/ManagedServiceIdentity",
          "description": "Identity for the resource."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/Resource"
        }
      ]
    },
    "GremlinDatabaseListResult": {
      "type": "object",
      "description": "The List operation response, that contains the Gremlin databases and their properties.",
      "properties": {
        "value": {
          "type": "array",
          "description": "List of Gremlin databases and their properties.",
          "items": {
            "$ref": "#/definitions/GremlinDatabaseGetResults"
          },
          "readOnly": true
        }
      }
    },
    "GremlinDatabaseResource": {
      "type": "object",
      "description": "Cosmos DB Gremlin database resource object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Name of the Cosmos DB Gremlin database"
        },
        "restoreParameters": {
          "$ref": "#/definitions/ResourceRestoreParameters",
          "description": "Parameters to indicate the information about the restore"
        },
        "createMode": {
          "type": "string",
          "description": "Enum to indicate the mode of resource creation.",
          "default": "Default",
          "enum": [
            "Default",
            "Restore"
          ],
          "x-ms-enum": {
            "name": "CreateMode",
            "modelAsString": true,
            "values": [
              {
                "name": "Default",
                "value": "Default"
              },
              {
                "name": "Restore",
                "value": "Restore"
              }
            ]
          }
        }
      },
      "required": [
        "id"
      ]
    },
    "GremlinDatabaseRestoreResource": {
      "type": "object",
      "description": "Specific Gremlin Databases to restore.",
      "properties": {
        "databaseName": {
          "type": "string",
          "description": "The name of the gremlin database available for restore."
        },
        "graphNames": {
          "type": "array",
          "description": "The names of the graphs available for restore.",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "GremlinGraphCreateUpdateParameters": {
      "type": "object",
      "description": "Parameters to create and update Cosmos DB Gremlin graph.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/GremlinGraphCreateUpdateProperties",
          "description": "Properties to create and update Azure Cosmos DB Gremlin graph.",
          "x-ms-client-flatten": true
        }
      },
      "required": [
        "properties"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/ARMResourceProperties"
        }
      ]
    },
    "GremlinGraphCreateUpdateProperties": {
      "type": "object",
      "description": "Properties to create and update Azure Cosmos DB Gremlin graph.",
      "properties": {
        "resource": {
          "$ref": "#/definitions/GremlinGraphResource",
          "description": "The standard JSON format of a Gremlin graph"
        },
        "options": {
          "$ref": "#/definitions/CreateUpdateOptions",
          "description": "A key-value pair of options to be applied for the request. This corresponds to the headers sent with the request."
        }
      },
      "required": [
        "resource"
      ]
    },
    "GremlinGraphGetProperties": {
      "type": "object",
      "description": "The properties of an Azure Cosmos DB Gremlin graph",
      "properties": {
        "resource": {
          "$ref": "#/definitions/GremlinGraphGetPropertiesResource"
        },
        "options": {
          "$ref": "#/definitions/GremlinGraphGetPropertiesOptions"
        }
      }
    },
    "GremlinGraphGetPropertiesOptions": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/OptionsResource"
        }
      ]
    },
    "GremlinGraphGetPropertiesResource": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Name of the Cosmos DB Gremlin graph"
        },
        "indexingPolicy": {
          "$ref": "#/definitions/IndexingPolicy",
          "description": "The configuration of the indexing policy. By default, the indexing is automatic for all document paths within the graph"
        },
        "partitionKey": {
          "$ref": "#/definitions/ContainerPartitionKey",
          "description": "The configuration of the partition key to be used for partitioning data into multiple partitions"
        },
        "defaultTtl": {
          "type": "integer",
          "format": "int32",
          "description": "Default time to live"
        },
        "uniqueKeyPolicy": {
          "$ref": "#/definitions/UniqueKeyPolicy",
          "description": "The unique key policy configuration for specifying uniqueness constraints on documents in the collection in the Azure Cosmos DB service."
        },
        "conflictResolutionPolicy": {
          "$ref": "#/definitions/ConflictResolutionPolicy",
          "description": "The conflict resolution policy for the graph."
        },
        "analyticalStorageTtl": {
          "type": "integer",
          "format": "int64",
          "description": "Analytical TTL."
        },
        "restoreParameters": {
          "$ref": "#/definitions/ResourceRestoreParameters",
          "description": "Parameters to indicate the information about the restore"
        },
        "createMode": {
          "type": "string",
          "description": "Enum to indicate the mode of resource creation.",
          "default": "Default",
          "enum": [
            "Default",
            "Restore"
          ],
          "x-ms-enum": {
            "name": "CreateMode",
            "modelAsString": true,
            "values": [
              {
                "name": "Default",
                "value": "Default"
              },
              {
                "name": "Restore",
                "value": "Restore"
              }
            ]
          }
        },
        "_rid": {
          "type": "string",
          "description": "A system generated property. A unique identifier.",
          "readOnly": true,
          "x-ms-client-name": "rid"
        },
        "_ts": {
          "type": "number",
          "format": "float",
          "description": "A system generated property that denotes the last updated timestamp of the resource.",
          "readOnly": true,
          "x-ms-client-name": "ts"
        },
        "_etag": {
          "type": "string",
          "description": "A system generated property representing the resource etag required for optimistic concurrency control.",
          "readOnly": true,
          "x-ms-client-name": "etag"
        }
      },
      "required": [
        "id"
      ]
    },
    "GremlinGraphGetResults": {
      "type": "object",
      "description": "An Azure Cosmos DB Gremlin graph.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/GremlinGraphGetProperties",
          "description": "The properties of an Azure Cosmos DB Gremlin graph",
          "x-ms-client-flatten": true
        },
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "location": {
          "type": "string",
          "description": "The geo-location where the resource lives",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "identity": {
          "$ref": "#/definitions/ManagedServiceIdentity",
          "description": "Identity for the resource."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/Resource"
        }
      ]
    },
    "GremlinGraphListResult": {
      "type": "object",
      "description": "The List operation response, that contains the graphs and their properties.",
      "properties": {
        "value": {
          "type": "array",
          "description": "List of graphs and their properties.",
          "items": {
            "$ref": "#/definitions/GremlinGraphGetResults"
          },
          "readOnly": true
        }
      }
    },
    "GremlinGraphResource": {
      "type": "object",
      "description": "Cosmos DB Gremlin graph resource object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Name of the Cosmos DB Gremlin graph"
        },
        "indexingPolicy": {
          "$ref": "#/definitions/IndexingPolicy",
          "description": "The configuration of the indexing policy. By default, the indexing is automatic for all document paths within the graph"
        },
        "partitionKey": {
          "$ref": "#/definitions/ContainerPartitionKey",
          "description": "The configuration of the partition key to be used for partitioning data into multiple partitions"
        },
        "defaultTtl": {
          "type": "integer",
          "format": "int32",
          "description": "Default time to live"
        },
        "uniqueKeyPolicy": {
          "$ref": "#/definitions/UniqueKeyPolicy",
          "description": "The unique key policy configuration for specifying uniqueness constraints on documents in the collection in the Azure Cosmos DB service."
        },
        "conflictResolutionPolicy": {
          "$ref": "#/definitions/ConflictResolutionPolicy",
          "description": "The conflict resolution policy for the graph."
        },
        "analyticalStorageTtl": {
          "type": "integer",
          "format": "int64",
          "description": "Analytical TTL."
        },
        "restoreParameters": {
          "$ref": "#/definitions/ResourceRestoreParameters",
          "description": "Parameters to indicate the information about the restore"
        },
        "createMode": {
          "type": "string",
          "description": "Enum to indicate the mode of resource creation.",
          "default": "Default",
          "enum": [
            "Default",
            "Restore"
          ],
          "x-ms-enum": {
            "name": "CreateMode",
            "modelAsString": true,
            "values": [
              {
                "name": "Default",
                "value": "Default"
              },
              {
                "name": "Restore",
                "value": "Restore"
              }
            ]
          }
        }
      },
      "required": [
        "id"
      ]
    },
    "GremlinRoleAssignmentResource": {
      "type": "object",
      "description": "Parameters to create and update an Azure Cosmos DB Gremlin Role Assignment.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/GremlinRoleAssignmentResourceProperties",
          "description": "Properties to create and update an Azure Cosmos DB Gremlin Role Assignment.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "GremlinRoleAssignmentResourceListResult": {
      "type": "object",
      "description": "The response of a GremlinRoleAssignmentResource list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The GremlinRoleAssignmentResource items on this page",
          "items": {
            "$ref": "#/definitions/GremlinRoleAssignmentResource"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "GremlinRoleAssignmentResourceProperties": {
      "type": "object",
      "description": "Azure Cosmos DB Gremlin Role Assignment resource object.",
      "properties": {
        "roleDefinitionId": {
          "type": "string",
          "description": "The unique identifier for the associated Role Definition."
        },
        "scope": {
          "type": "string",
          "description": "The data plane resource path for which access is being granted through this Gremlin Role Assignment."
        },
        "principalId": {
          "type": "string",
          "description": "The unique identifier for the associated AAD principal in the AAD graph to which access is being granted through this Gremlin Role Assignment. Tenant ID for the principal is inferred using the tenant associated with the subscription."
        },
        "provisioningState": {
          "type": "string",
          "description": "Provisioning state of the resource.",
          "readOnly": true
        }
      }
    },
    "GremlinRoleDefinitionResource": {
      "type": "object",
      "description": "Parameters to create and update an Azure Cosmos DB Gremlin Role Definition.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/GremlinRoleDefinitionResourceProperties",
          "description": "Properties to create and update an Azure Cosmos DB Gremlin Role Definition.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "GremlinRoleDefinitionResourceListResult": {
      "type": "object",
      "description": "The response of a GremlinRoleDefinitionResource list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The GremlinRoleDefinitionResource items on this page",
          "items": {
            "$ref": "#/definitions/GremlinRoleDefinitionResource"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "GremlinRoleDefinitionResourceProperties": {
      "type": "object",
      "description": "Azure Cosmos DB Gremlin Role Definition resource object.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The path id for the Role Definition."
        },
        "roleName": {
          "type": "string",
          "description": "A user-friendly name for the Role Definition. Must be unique for the database account."
        },
        "type": {
          "$ref": "#/definitions/RoleDefinitionType",
          "description": "Indicates whether the Role Definition was built-in or user created."
        },
        "assignableScopes": {
          "type": "array",
          "description": "A set of fully qualified Scopes at or below which Gremlin Role Assignments may be created using this Role Definition. This will allow application of this Role Definition on the entire database account or any underlying Database / Collection. Must have at least one element. Scopes higher than Database account are not enforceable as assignable Scopes. Note that resources referenced in assignable Scopes need not exist.",
          "items": {
            "type": "string"
          }
        },
        "permissions": {
          "type": "array",
          "description": "The set of operations allowed through this Role Definition.",
          "items": {
            "$ref": "#/definitions/PermissionAutoGenerated4"
          }
        }
      }
    },
    "IncludedPath": {
      "type": "object",
      "description": "The paths that are included in indexing",
      "properties": {
        "path": {
          "type": "string",
          "description": "The path for which the indexing behavior applies to. Index paths typically start with root and end with wildcard (/path/*)"
        },
        "indexes": {
          "type": "array",
          "description": "List of indexes for this path",
          "items": {
            "$ref": "#/definitions/Indexes"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "Indexes": {
      "type": "object",
      "description": "The indexes for the path.",
      "properties": {
        "dataType": {
          "type": "string",
          "description": "The datatype for which the indexing behavior is applied to.",
          "default": "String",
          "enum": [
            "String",
            "Number",
            "Point",
            "Polygon",
            "LineString",
            "MultiPolygon"
          ],
          "x-ms-enum": {
            "name": "DataType",
            "modelAsString": true,
            "values": [
              {
                "name": "String",
                "value": "String"
              },
              {
                "name": "Number",
                "value": "Number"
              },
              {
                "name": "Point",
                "value": "Point"
              },
              {
                "name": "Polygon",
                "value": "Polygon"
              },
              {
                "name": "LineString",
                "value": "LineString"
              },
              {
                "name": "MultiPolygon",
                "value": "MultiPolygon"
              }
            ]
          }
        },
        "precision": {
          "type": "integer",
          "format": "int32",
          "description": "The precision of the index. -1 is maximum precision."
        },
        "kind": {
          "type": "string",
          "description": "Indicates the type of index.",
          "default": "Hash",
          "enum": [
            "Hash",
            "Range",
            "Spatial"
          ],
          "x-ms-enum": {
            "name": "IndexKind",
            "modelAsString": true,
            "values": [
              {
                "name": "Hash",
                "value": "Hash"
              },
              {
                "name": "Range",
                "value": "Range"
              },
              {
                "name": "Spatial",
                "value": "Spatial"
              }
            ]
          }
        }
      }
    },
    "IndexingPolicy": {
      "type": "object",
      "description": "Cosmos DB indexing policy",
      "properties": {
        "automatic": {
          "type": "boolean",
          "description": "Indicates if the indexing policy is automatic"
        },
        "indexingMode": {
          "type": "string",
          "description": "Indicates the indexing mode.",
          "default": "consistent",
          "enum": [
            "consistent",
            "lazy",
            "none"
          ],
          "x-ms-enum": {
            "name": "IndexingMode",
            "modelAsString": true,
            "values": [
              {
                "name": "Consistent",
                "value": "consistent"
              },
              {
                "name": "Lazy",
                "value": "lazy"
              },
              {
                "name": "None",
                "value": "none"
              }
            ]
          }
        },
        "includedPaths": {
          "type": "array",
          "description": "List of paths to include in the indexing",
          "items": {
            "$ref": "#/definitions/IncludedPath"
          },
          "x-ms-identifiers": []
        },
        "excludedPaths": {
          "type": "array",
          "description": "List of paths to exclude from indexing",
          "items": {
            "$ref": "#/definitions/ExcludedPath"
          },
          "x-ms-identifiers": []
        },
        "compositeIndexes": {
          "type": "array",
          "description": "List of composite path list",
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/CompositePath"
            }
          },
          "x-ms-identifiers": []
        },
        "spatialIndexes": {
          "type": "array",
          "description": "List of spatial specifics",
          "items": {
            "$ref": "#/definitions/SpatialSpec"
          },
          "x-ms-identifiers": []
        },
        "vectorIndexes": {
          "type": "array",
          "description": "List of paths to include in the vector indexing",
          "items": {
            "$ref": "#/definitions/VectorIndex"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "IpAddressOrRange": {
      "type": "object",
      "description": "IpAddressOrRange object",
      "properties": {
        "ipAddressOrRange": {
          "type": "string",
          "description": "A single IPv4 address or a single IPv4 address range in CIDR format. Provided IPs must be well-formatted and cannot be contained in one of the following ranges: 10.0.0.0/8, 100.64.0.0/10, 172.16.0.0/12, 192.168.0.0/16, since these are not enforceable by the IP address filter. Example of valid inputs: “23.40.210.245” or “23.40.210.0/8”."
        }
      }
    },
    "KeyKind": {
      "type": "string",
      "description": "The access key to regenerate.",
      "enum": [
        "primary",
        "secondary",
        "primaryReadonly",
        "secondaryReadonly"
      ],
      "x-ms-enum": {
        "name": "KeyKind",
        "modelAsString": true,
        "values": [
          {
            "name": "Primary",
            "value": "primary"
          },
          {
            "name": "Secondary",
            "value": "secondary"
          },
          {
            "name": "PrimaryReadonly",
            "value": "primaryReadonly"
          },
          {
            "name": "SecondaryReadonly",
            "value": "secondaryReadonly"
          }
        ]
      }
    },
    "KeyWrapMetadata": {
      "type": "object",
      "description": "Represents key wrap metadata that a key wrapping provider can use to wrap/unwrap a client encryption key.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of associated KeyEncryptionKey (aka CustomerManagedKey)."
        },
        "type": {
          "type": "string",
          "description": "ProviderName of KeyStoreProvider."
        },
        "value": {
          "type": "string",
          "description": "Reference / link to the KeyEncryptionKey."
        },
        "algorithm": {
          "type": "string",
          "description": "Algorithm used in wrapping and unwrapping of the data encryption key."
        }
      }
    },
    "Kind": {
      "type": "string",
      "description": "Kind of the connection string key",
      "enum": [
        "Primary",
        "Secondary",
        "PrimaryReadonly",
        "SecondaryReadonly"
      ],
      "x-ms-enum": {
        "name": "Kind",
        "modelAsString": true,
        "values": [
          {
            "name": "Primary",
            "value": "Primary"
          },
          {
            "name": "Secondary",
            "value": "Secondary"
          },
          {
            "name": "PrimaryReadonly",
            "value": "PrimaryReadonly"
          },
          {
            "name": "SecondaryReadonly",
            "value": "SecondaryReadonly"
          }
        ]
      }
    },
    "ListBackups": {
      "type": "object",
      "description": "List of restorable backups for a Cassandra cluster.",
      "properties": {
        "value": {
          "type": "array",
          "description": "Container for array of backups.",
          "items": {
            "$ref": "#/definitions/BackupResource"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        }
      }
    },
    "ListClusters": {
      "type": "object",
      "description": "List of managed Cassandra clusters.",
      "properties": {
        "value": {
          "type": "array",
          "description": "Container for the array of clusters.",
          "items": {
            "$ref": "#/definitions/ClusterResource"
          }
        }
      }
    },
    "ListCommands": {
      "type": "object",
      "description": "List of commands for cluster.",
      "properties": {
        "value": {
          "type": "array",
          "description": "Container for array of commands.",
          "items": {
            "$ref": "#/definitions/CommandPublicResource"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        }
      }
    },
    "ListDataCenters": {
      "type": "object",
      "description": "List of managed Cassandra data centers and their properties.",
      "properties": {
        "value": {
          "type": "array",
          "description": "Container for array of data centers.",
          "items": {
            "$ref": "#/definitions/DataCenterResource"
          },
          "readOnly": true
        }
      }
    },
    "Location": {
      "type": "object",
      "description": "A region in which the Azure Cosmos DB database account is deployed.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The unique identifier of the region within the database account. Example: &lt;accountName&gt;-&lt;locationName&gt;.",
          "readOnly": true
        },
        "locationName": {
          "type": "string",
          "description": "The name of the region."
        },
        "documentEndpoint": {
          "type": "string",
          "description": "The connection endpoint for the specific region. Example: https://&lt;accountName&gt;-&lt;locationName&gt;.documents.azure.com:443/",
          "readOnly": true
        },
        "provisioningState": {
          "type": "string",
          "description": "The provisioning state of the resource.",
          "readOnly": true
        },
        "failoverPriority": {
          "type": "integer",
          "format": "int32",
          "description": "The failover priority of the region. A failover priority of 0 indicates a write region. The maximum value for a failover priority = (total number of regions - 1). Failover priority values must be unique for each of the regions in which the database account exists.",
          "minimum": 0
        },
        "isZoneRedundant": {
          "type": "boolean",
          "description": "Flag to indicate whether or not this region is an AvailabilityZone region"
        }
      }
    },
    "LocationGetResult": {
      "type": "object",
      "description": "Cosmos DB location get result",
      "properties": {
        "properties": {
          "$ref": "#/definitions/LocationProperties",
          "description": "Cosmos DB location metadata"
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "LocationListResult": {
      "type": "object",
      "description": "The List operation response, that contains Cosmos DB locations and their properties.",
      "properties": {
        "value": {
          "type": "array",
          "description": "List of Cosmos DB locations and their properties.",
          "items": {
            "$ref": "#/definitions/LocationGetResult"
          },
          "readOnly": true
        }
      }
    },
    "LocationProperties": {
      "type": "object",
      "description": "Cosmos DB location metadata",
      "properties": {
        "supportsAvailabilityZone": {
          "type": "boolean",
          "description": "Flag indicating whether the location supports availability zones or not.",
          "readOnly": true
        },
        "isResidencyRestricted": {
          "type": "boolean",
          "description": "Flag indicating whether the location is residency sensitive.",
          "readOnly": true
        },
        "backupStorageRedundancies": {
          "type": "array",
          "description": "The properties of available backup storage redundancies.",
          "items": {
            "$ref": "#/definitions/BackupStorageRedundancy"
          },
          "readOnly": true
        },
        "isSubscriptionRegionAccessAllowedForRegular": {
          "type": "boolean",
          "description": "Flag indicating whether the subscription have access in region for Non-Availability Zones.",
          "readOnly": true
        },
        "isSubscriptionRegionAccessAllowedForAz": {
          "type": "boolean",
          "description": "Flag indicating whether the subscription have access in region for Availability Zones(Az).",
          "readOnly": true
        },
        "status": {
          "$ref": "#/definitions/Status",
          "description": "Enum to indicate current buildout status of the region.",
          "readOnly": true
        }
      }
    },
    "ManagedCassandraManagedServiceIdentity": {
      "type": "object",
      "description": "Identity for the resource.",
      "properties": {
        "principalId": {
          "type": "string",
          "description": "The object id of the identity resource.",
          "readOnly": true
        },
        "tenantId": {
          "type": "string",
          "description": "The tenant id of the resource.",
          "readOnly": true
        },
        "type": {
          "$ref": "#/definitions/ManagedCassandraResourceIdentityType",
          "description": "The type of the resource."
        }
      }
    },
    "ManagedCassandraProvisioningState": {
      "type": "string",
      "description": "The status of the resource at the time the operation was called.",
      "enum": [
        "Creating",
        "Updating",
        "Deleting",
        "Succeeded",
        "Failed",
        "Canceled"
      ],
      "x-ms-enum": {
        "name": "ManagedCassandraProvisioningState",
        "modelAsString": true,
        "values": [
          {
            "name": "Creating",
            "value": "Creating"
          },
          {
            "name": "Updating",
            "value": "Updating"
          },
          {
            "name": "Deleting",
            "value": "Deleting"
          },
          {
            "name": "Succeeded",
            "value": "Succeeded"
          },
          {
            "name": "Failed",
            "value": "Failed"
          },
          {
            "name": "Canceled",
            "value": "Canceled"
          }
        ]
      }
    },
    "ManagedCassandraReaperStatus": {
      "type": "object",
      "properties": {
        "healthy": {
          "type": "boolean"
        },
        "repairRunIds": {
          "type": "object",
          "description": "Dictionary of <string>",
          "additionalProperties": {
            "type": "string"
          }
        },
        "repairSchedules": {
          "type": "object",
          "description": "Dictionary of <string>",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "ManagedCassandraResourceIdentityType": {
      "type": "string",
      "description": "The type of the resource.",
      "enum": [
        "SystemAssigned",
        "None"
      ],
      "x-ms-enum": {
        "name": "ManagedCassandraResourceIdentityType",
        "modelAsString": true,
        "values": [
          {
            "name": "SystemAssigned",
            "value": "SystemAssigned"
          },
          {
            "name": "None",
            "value": "None"
          }
        ]
      }
    },
    "ManagedServiceIdentity": {
      "type": "object",
      "description": "Identity for the resource.",
      "properties": {
        "principalId": {
          "type": "string",
          "description": "The principal id of the system assigned identity. This property will only be provided for a system assigned identity.",
          "readOnly": true
        },
        "tenantId": {
          "type": "string",
          "description": "The tenant id of the system assigned identity. This property will only be provided for a system assigned identity.",
          "readOnly": true
        },
        "type": {
          "$ref": "#/definitions/ResourceIdentityType",
          "description": "The type of identity used for the resource. The type 'SystemAssigned,UserAssigned' includes both an implicitly created identity and a set of user assigned identities. The type 'None' will remove any identities from the service."
        },
        "userAssignedIdentities": {
          "type": "object",
          "description": "The list of user identities associated with resource. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.",
          "additionalProperties": {
            "$ref": "#/definitions/Components1Jq1T4ISchemasManagedserviceidentityPropertiesUserassignedidentitiesAdditionalproperties"
          }
        }
      }
    },
    "MaterializedViewDefinition": {
      "type": "object",
      "description": "Materialized View definition for the container.",
      "properties": {
        "sourceCollectionRid": {
          "type": "string",
          "description": "An unique identifier for the source collection. This is a system generated property.",
          "readOnly": true
        },
        "sourceCollectionId": {
          "type": "string",
          "description": "The name of the source container on which the Materialized View will be created."
        },
        "definition": {
          "type": "string",
          "description": "The definition should be an SQL query which would be used to fetch data from the source container to populate into the Materialized View container."
        }
      },
      "required": [
        "sourceCollectionId",
        "definition"
      ]
    },
    "MaterializedViewDetails": {
      "type": "object",
      "description": "MaterializedViewDetails, contains Id & _rid fields of materialized view.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Id field of Materialized container."
        },
        "_rid": {
          "type": "string",
          "description": "_rid field of Materialized container.",
          "x-ms-client-name": "rid"
        }
      }
    },
    "MaterializedViewsBuilderRegionalServiceResource": {
      "type": "object",
      "description": "Resource for a regional service location.",
      "allOf": [
        {
          "$ref": "#/definitions/RegionalServiceResource"
        }
      ]
    },
    "MaterializedViewsBuilderServiceResourceCreateUpdateProperties": {
      "type": "object",
      "description": "Properties for Create or Update request for MaterializedViewsBuilderServiceResource",
      "allOf": [
        {
          "$ref": "#/definitions/ServiceResourceCreateUpdateProperties"
        }
      ],
      "x-ms-discriminator-value": "MaterializedViewsBuilder"
    },
    "MaterializedViewsBuilderServiceResourceProperties": {
      "type": "object",
      "description": "Properties for MaterializedViewsBuilderServiceResource.",
      "properties": {
        "locations": {
          "type": "array",
          "description": "An array that contains all of the locations for the service.",
          "items": {
            "$ref": "#/definitions/MaterializedViewsBuilderRegionalServiceResource"
          },
          "readOnly": true
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ServiceResourceProperties"
        }
      ],
      "x-ms-discriminator-value": "MaterializedViewsBuilder"
    },
    "MergeParameters": {
      "type": "object",
      "description": "The properties of an Azure Cosmos DB merge operations",
      "properties": {
        "isDryRun": {
          "type": "boolean",
          "description": "Specifies whether the operation is a real merge operation or a simulation."
        }
      }
    },
    "Metric": {
      "type": "object",
      "description": "Metric data",
      "properties": {
        "startTime": {
          "type": "string",
          "format": "date-time",
          "description": "The start time for the metric (ISO-8601 format).",
          "readOnly": true
        },
        "endTime": {
          "type": "string",
          "format": "date-time",
          "description": "The end time for the metric (ISO-8601 format).",
          "readOnly": true
        },
        "timeGrain": {
          "type": "string",
          "description": "The time grain to be used to summarize the metric values.",
          "readOnly": true
        },
        "unit": {
          "$ref": "#/definitions/UnitType",
          "description": "The unit of the metric.",
          "readOnly": true
        },
        "name": {
          "$ref": "#/definitions/MetricName",
          "description": "The name information for the metric.",
          "readOnly": true
        },
        "metricValues": {
          "type": "array",
          "description": "The metric values for the specified time window and timestep.",
          "items": {
            "$ref": "#/definitions/MetricValue"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        }
      }
    },
    "MetricAvailability": {
      "type": "object",
      "description": "The availability of the metric.",
      "properties": {
        "timeGrain": {
          "type": "string",
          "description": "The time grain to be used to summarize the metric values.",
          "readOnly": true
        },
        "retention": {
          "type": "string",
          "description": "The retention for the metric values.",
          "readOnly": true
        }
      }
    },
    "MetricDefinition": {
      "type": "object",
      "description": "The definition of a metric.",
      "properties": {
        "metricAvailabilities": {
          "type": "array",
          "description": "The list of metric availabilities for the account.",
          "items": {
            "$ref": "#/definitions/MetricAvailability"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        },
        "primaryAggregationType": {
          "$ref": "#/definitions/PrimaryAggregationType",
          "description": "The primary aggregation type of the metric.",
          "readOnly": true
        },
        "unit": {
          "$ref": "#/definitions/UnitType",
          "description": "The unit of the metric.",
          "readOnly": true
        },
        "resourceUri": {
          "type": "string",
          "description": "The resource uri of the database.",
          "readOnly": true
        },
        "name": {
          "$ref": "#/definitions/MetricName",
          "description": "The name information for the metric.",
          "readOnly": true
        }
      }
    },
    "MetricDefinitionsListResult": {
      "type": "object",
      "description": "The response to a list metric definitions request.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The list of metric definitions for the account.",
          "items": {
            "$ref": "#/definitions/MetricDefinition"
          },
          "readOnly": true
        }
      }
    },
    "MetricListResult": {
      "type": "object",
      "description": "The response to a list metrics request.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The list of metrics for the account.",
          "items": {
            "$ref": "#/definitions/Metric"
          },
          "readOnly": true
        }
      }
    },
    "MetricName": {
      "type": "object",
      "description": "A metric name.",
      "properties": {
        "value": {
          "type": "string",
          "description": "The name of the metric.",
          "readOnly": true
        },
        "localizedValue": {
          "type": "string",
          "description": "The friendly name of the metric.",
          "readOnly": true
        }
      }
    },
    "MetricValue": {
      "type": "object",
      "description": "Represents metrics values.",
      "properties": {
        "_count": {
          "type": "integer",
          "format": "int32",
          "description": "The number of values for the metric.",
          "readOnly": true,
          "x-ms-client-name": "count"
        },
        "average": {
          "type": "number",
          "format": "double",
          "description": "The average value of the metric.",
          "readOnly": true
        },
        "maximum": {
          "type": "number",
          "format": "double",
          "description": "The max value of the metric.",
          "readOnly": true
        },
        "minimum": {
          "type": "number",
          "format": "double",
          "description": "The min value of the metric.",
          "readOnly": true
        },
        "timestamp": {
          "type": "string",
          "format": "date-time",
          "description": "The metric timestamp (ISO-8601 format).",
          "readOnly": true
        },
        "total": {
          "type": "number",
          "format": "double",
          "description": "The total value of the metric.",
          "readOnly": true
        }
      }
    },
    "MinimalTlsVersion": {
      "type": "string",
      "description": "Indicates the minimum allowed Tls version. The default is Tls 1.0, except for Cassandra and Mongo API's, which only work with Tls 1.2.",
      "enum": [
        "Tls",
        "Tls11",
        "Tls12"
      ],
      "x-ms-enum": {
        "name": "MinimalTlsVersion",
        "modelAsString": true,
        "values": [
          {
            "name": "Tls",
            "value": "Tls"
          },
          {
            "name": "Tls11",
            "value": "Tls11"
          },
          {
            "name": "Tls12",
            "value": "Tls12"
          }
        ]
      }
    },
    "MongoDBCollectionCreateUpdateParameters": {
      "type": "object",
      "description": "Parameters to create and update Cosmos DB MongoDB collection.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/MongoDBCollectionCreateUpdateProperties",
          "description": "Properties to create and update Azure Cosmos DB MongoDB collection.",
          "x-ms-client-flatten": true
        }
      },
      "required": [
        "properties"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/ARMResourceProperties"
        }
      ]
    },
    "MongoDBCollectionCreateUpdateProperties": {
      "type": "object",
      "description": "Properties to create and update Azure Cosmos DB MongoDB collection.",
      "properties": {
        "resource": {
          "$ref": "#/definitions/MongoDBCollectionResource",
          "description": "The standard JSON format of a MongoDB collection"
        },
        "options": {
          "$ref": "#/definitions/CreateUpdateOptions",
          "description": "A key-value pair of options to be applied for the request. This corresponds to the headers sent with the request."
        }
      },
      "required": [
        "resource"
      ]
    },
    "MongoDBCollectionGetProperties": {
      "type": "object",
      "description": "The properties of an Azure Cosmos DB MongoDB collection",
      "properties": {
        "resource": {
          "$ref": "#/definitions/MongoDBCollectionGetPropertiesResource"
        },
        "options": {
          "$ref": "#/definitions/MongoDBCollectionGetPropertiesOptions"
        }
      }
    },
    "MongoDBCollectionGetPropertiesOptions": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/OptionsResource"
        }
      ]
    },
    "MongoDBCollectionGetPropertiesResource": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Name of the Cosmos DB MongoDB collection"
        },
        "shardKey": {
          "type": "object",
          "description": "A key-value pair of shard keys to be applied for the request.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "indexes": {
          "type": "array",
          "description": "List of index keys",
          "items": {
            "$ref": "#/definitions/MongoIndex"
          },
          "x-ms-identifiers": []
        },
        "analyticalStorageTtl": {
          "type": "integer",
          "format": "int32",
          "description": "Analytical TTL."
        },
        "restoreParameters": {
          "$ref": "#/definitions/ResourceRestoreParameters",
          "description": "Parameters to indicate the information about the restore"
        },
        "createMode": {
          "type": "string",
          "description": "Enum to indicate the mode of resource creation.",
          "default": "Default",
          "enum": [
            "Default",
            "Restore"
          ],
          "x-ms-enum": {
            "name": "CreateMode",
            "modelAsString": true,
            "values": [
              {
                "name": "Default",
                "value": "Default"
              },
              {
                "name": "Restore",
                "value": "Restore"
              }
            ]
          }
        },
        "_rid": {
          "type": "string",
          "description": "A system generated property. A unique identifier.",
          "readOnly": true,
          "x-ms-client-name": "rid"
        },
        "_ts": {
          "type": "number",
          "format": "float",
          "description": "A system generated property that denotes the last updated timestamp of the resource.",
          "readOnly": true,
          "x-ms-client-name": "ts"
        },
        "_etag": {
          "type": "string",
          "description": "A system generated property representing the resource etag required for optimistic concurrency control.",
          "readOnly": true,
          "x-ms-client-name": "etag"
        }
      },
      "required": [
        "id"
      ]
    },
    "MongoDBCollectionGetResults": {
      "type": "object",
      "description": "An Azure Cosmos DB MongoDB collection.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/MongoDBCollectionGetProperties",
          "description": "The properties of an Azure Cosmos DB MongoDB collection",
          "x-ms-client-flatten": true
        },
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "location": {
          "type": "string",
          "description": "The geo-location where the resource lives",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "identity": {
          "$ref": "#/definitions/ManagedServiceIdentity",
          "description": "Identity for the resource."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/Resource"
        }
      ]
    },
    "MongoDBCollectionListResult": {
      "type": "object",
      "description": "The List operation response, that contains the MongoDB collections and their properties.",
      "properties": {
        "value": {
          "type": "array",
          "description": "List of MongoDB collections and their properties.",
          "items": {
            "$ref": "#/definitions/MongoDBCollectionGetResults"
          },
          "readOnly": true
        }
      }
    },
    "MongoDBCollectionResource": {
      "type": "object",
      "description": "Cosmos DB MongoDB collection resource object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Name of the Cosmos DB MongoDB collection"
        },
        "shardKey": {
          "type": "object",
          "description": "A key-value pair of shard keys to be applied for the request.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "indexes": {
          "type": "array",
          "description": "List of index keys",
          "items": {
            "$ref": "#/definitions/MongoIndex"
          },
          "x-ms-identifiers": []
        },
        "analyticalStorageTtl": {
          "type": "integer",
          "format": "int32",
          "description": "Analytical TTL."
        },
        "restoreParameters": {
          "$ref": "#/definitions/ResourceRestoreParameters",
          "description": "Parameters to indicate the information about the restore"
        },
        "createMode": {
          "type": "string",
          "description": "Enum to indicate the mode of resource creation.",
          "default": "Default",
          "enum": [
            "Default",
            "Restore"
          ],
          "x-ms-enum": {
            "name": "CreateMode",
            "modelAsString": true,
            "values": [
              {
                "name": "Default",
                "value": "Default"
              },
              {
                "name": "Restore",
                "value": "Restore"
              }
            ]
          }
        }
      },
      "required": [
        "id"
      ]
    },
    "MongoDBDatabaseCreateUpdateParameters": {
      "type": "object",
      "description": "Parameters to create and update Cosmos DB MongoDB database.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/MongoDBDatabaseCreateUpdateProperties",
          "description": "Properties to create and update Azure Cosmos DB MongoDB database.",
          "x-ms-client-flatten": true
        }
      },
      "required": [
        "properties"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/ARMResourceProperties"
        }
      ]
    },
    "MongoDBDatabaseCreateUpdateProperties": {
      "type": "object",
      "description": "Properties to create and update Azure Cosmos DB MongoDB database.",
      "properties": {
        "resource": {
          "$ref": "#/definitions/MongoDBDatabaseResource",
          "description": "The standard JSON format of a MongoDB database"
        },
        "options": {
          "$ref": "#/definitions/CreateUpdateOptions",
          "description": "A key-value pair of options to be applied for the request. This corresponds to the headers sent with the request."
        }
      },
      "required": [
        "resource"
      ]
    },
    "MongoDBDatabaseGetProperties": {
      "type": "object",
      "description": "The properties of an Azure Cosmos DB MongoDB database",
      "properties": {
        "resource": {
          "$ref": "#/definitions/MongoDBDatabaseGetPropertiesResource"
        },
        "options": {
          "$ref": "#/definitions/MongoDBDatabaseGetPropertiesOptions"
        }
      }
    },
    "MongoDBDatabaseGetPropertiesOptions": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/OptionsResource"
        }
      ]
    },
    "MongoDBDatabaseGetPropertiesResource": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Name of the Cosmos DB MongoDB database"
        },
        "restoreParameters": {
          "$ref": "#/definitions/ResourceRestoreParameters",
          "description": "Parameters to indicate the information about the restore"
        },
        "createMode": {
          "type": "string",
          "description": "Enum to indicate the mode of resource creation.",
          "default": "Default",
          "enum": [
            "Default",
            "Restore"
          ],
          "x-ms-enum": {
            "name": "CreateMode",
            "modelAsString": true,
            "values": [
              {
                "name": "Default",
                "value": "Default"
              },
              {
                "name": "Restore",
                "value": "Restore"
              }
            ]
          }
        },
        "_rid": {
          "type": "string",
          "description": "A system generated property. A unique identifier.",
          "readOnly": true,
          "x-ms-client-name": "rid"
        },
        "_ts": {
          "type": "number",
          "format": "float",
          "description": "A system generated property that denotes the last updated timestamp of the resource.",
          "readOnly": true,
          "x-ms-client-name": "ts"
        },
        "_etag": {
          "type": "string",
          "description": "A system generated property representing the resource etag required for optimistic concurrency control.",
          "readOnly": true,
          "x-ms-client-name": "etag"
        }
      },
      "required": [
        "id"
      ]
    },
    "MongoDBDatabaseGetResults": {
      "type": "object",
      "description": "An Azure Cosmos DB MongoDB database.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/MongoDBDatabaseGetProperties",
          "description": "The properties of an Azure Cosmos DB MongoDB database",
          "x-ms-client-flatten": true
        },
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "location": {
          "type": "string",
          "description": "The geo-location where the resource lives",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "identity": {
          "$ref": "#/definitions/ManagedServiceIdentity",
          "description": "Identity for the resource."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/Resource"
        }
      ]
    },
    "MongoDBDatabaseListResult": {
      "type": "object",
      "description": "The List operation response, that contains the MongoDB databases and their properties.",
      "properties": {
        "value": {
          "type": "array",
          "description": "List of MongoDB databases and their properties.",
          "items": {
            "$ref": "#/definitions/MongoDBDatabaseGetResults"
          },
          "readOnly": true
        }
      }
    },
    "MongoDBDatabaseResource": {
      "type": "object",
      "description": "Cosmos DB MongoDB database resource object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Name of the Cosmos DB MongoDB database"
        },
        "restoreParameters": {
          "$ref": "#/definitions/ResourceRestoreParameters",
          "description": "Parameters to indicate the information about the restore"
        },
        "createMode": {
          "type": "string",
          "description": "Enum to indicate the mode of resource creation.",
          "default": "Default",
          "enum": [
            "Default",
            "Restore"
          ],
          "x-ms-enum": {
            "name": "CreateMode",
            "modelAsString": true,
            "values": [
              {
                "name": "Default",
                "value": "Default"
              },
              {
                "name": "Restore",
                "value": "Restore"
              }
            ]
          }
        }
      },
      "required": [
        "id"
      ]
    },
    "MongoIndex": {
      "type": "object",
      "description": "Cosmos DB MongoDB collection index key",
      "properties": {
        "key": {
          "$ref": "#/definitions/MongoIndexKeys",
          "description": "Cosmos DB MongoDB collection index keys"
        },
        "options": {
          "$ref": "#/definitions/MongoIndexOptions",
          "description": "Cosmos DB MongoDB collection index key options"
        }
      }
    },
    "MongoIndexKeys": {
      "type": "object",
      "description": "Cosmos DB MongoDB collection resource object",
      "properties": {
        "keys": {
          "type": "array",
          "description": "List of keys for each MongoDB collection in the Azure Cosmos DB service",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "MongoIndexOptions": {
      "type": "object",
      "description": "Cosmos DB MongoDB collection index options",
      "properties": {
        "expireAfterSeconds": {
          "type": "integer",
          "format": "int32",
          "description": "Expire after seconds"
        },
        "unique": {
          "type": "boolean",
          "description": "Is unique or not"
        }
      }
    },
    "MongoMIRoleAssignmentResource": {
      "type": "object",
      "description": "Parameters to create and update an Azure Cosmos DB MongoMI Role Assignment.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/MongoMIRoleAssignmentResourceProperties",
          "description": "Properties to create and update an Azure Cosmos DB MongoMI Role Assignment.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "MongoMIRoleAssignmentResourceListResult": {
      "type": "object",
      "description": "The response of a MongoMIRoleAssignmentResource list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The MongoMIRoleAssignmentResource items on this page",
          "items": {
            "$ref": "#/definitions/MongoMIRoleAssignmentResource"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "MongoMIRoleAssignmentResourceProperties": {
      "type": "object",
      "description": "Azure Cosmos DB MongoMI Role Assignment resource object.",
      "properties": {
        "roleDefinitionId": {
          "type": "string",
          "description": "The unique identifier for the associated Role Definition."
        },
        "scope": {
          "type": "string",
          "description": "The data plane resource path for which access is being granted through this MongoMI Role Assignment."
        },
        "principalId": {
          "type": "string",
          "description": "The unique identifier for the associated AAD principal in the AAD graph to which access is being granted through this MongoMI Role Assignment. Tenant ID for the principal is inferred using the tenant associated with the subscription."
        },
        "provisioningState": {
          "type": "string",
          "description": "Provisioning state of the resource.",
          "readOnly": true
        }
      }
    },
    "MongoMIRoleDefinitionResource": {
      "type": "object",
      "description": "Parameters to create and update an Azure Cosmos DB MongoMI Role Definition.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/MongoMIRoleDefinitionResourceProperties",
          "description": "Properties to create and update an Azure Cosmos DB MongoMI Role Definition.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "MongoMIRoleDefinitionResourceListResult": {
      "type": "object",
      "description": "The response of a MongoMIRoleDefinitionResource list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The MongoMIRoleDefinitionResource items on this page",
          "items": {
            "$ref": "#/definitions/MongoMIRoleDefinitionResource"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "MongoMIRoleDefinitionResourceProperties": {
      "type": "object",
      "description": "Azure Cosmos DB MongoMI Role Definition resource object.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The path id for the Role Definition."
        },
        "roleName": {
          "type": "string",
          "description": "A user-friendly name for the Role Definition. Must be unique for the database account."
        },
        "type": {
          "$ref": "#/definitions/RoleDefinitionType",
          "description": "Indicates whether the Role Definition was built-in or user created."
        },
        "assignableScopes": {
          "type": "array",
          "description": "A set of fully qualified Scopes at or below which MongoMI Role Assignments may be created using this Role Definition. This will allow application of this Role Definition on the entire database account or any underlying Database / Collection. Must have at least one element. Scopes higher than Database account are not enforceable as assignable Scopes. Note that resources referenced in assignable Scopes need not exist.",
          "items": {
            "type": "string"
          }
        },
        "permissions": {
          "type": "array",
          "description": "The set of operations allowed through this Role Definition.",
          "items": {
            "$ref": "#/definitions/PermissionAutoGenerated3"
          }
        }
      }
    },
    "MongoRUToMongoRUCopyJobProperties": {
      "type": "object",
      "description": "Source Mongo to Destination Mongo copy job properties",
      "properties": {
        "sourceDetails": {
          "$ref": "#/definitions/CosmosDBSourceSinkDetails",
          "description": "Source Mongo DataStore details"
        },
        "destinationDetails": {
          "$ref": "#/definitions/CosmosDBSourceSinkDetails",
          "description": "Destination Mongo DataStore details"
        },
        "tasks": {
          "type": "array",
          "description": "Copy Job tasks.",
          "items": {
            "$ref": "#/definitions/MongoRUToMongoRUCopyJobTask"
          },
          "x-ms-identifiers": []
        }
      },
      "required": [
        "tasks"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/BaseCopyJobProperties"
        }
      ],
      "x-ms-discriminator-value": "MongoRUToMongoRU"
    },
    "MongoRUToMongoRUCopyJobTask": {
      "type": "object",
      "properties": {
        "source": {
          "$ref": "#/definitions/CosmosDBMongoCollection",
          "description": "Source Mongo (RU) collection"
        },
        "destination": {
          "$ref": "#/definitions/CosmosDBMongoCollection",
          "description": "Destination Mongo (RU) collection"
        }
      },
      "required": [
        "source",
        "destination"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/BaseCopyJobTask"
        }
      ]
    },
    "MongoRUToMongoVCoreCopyJobProperties": {
      "type": "object",
      "description": "Source Mongo to Destination Mongo vCore copy job properties",
      "properties": {
        "sourceDetails": {
          "$ref": "#/definitions/CosmosDBSourceSinkDetails",
          "description": "Source Mongo (RU) DataStore details"
        },
        "destinationDetails": {
          "$ref": "#/definitions/MongoVCoreSourceSinkDetails",
          "description": "Destination Mongo (vCore) DataStore details"
        },
        "tasks": {
          "type": "array",
          "description": "Copy Job tasks.",
          "items": {
            "$ref": "#/definitions/MongoRUToMongoVCoreCopyJobTask"
          },
          "x-ms-identifiers": []
        }
      },
      "required": [
        "destinationDetails",
        "tasks"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/BaseCopyJobProperties"
        }
      ],
      "x-ms-discriminator-value": "MongoRUToMongoVCore"
    },
    "MongoRUToMongoVCoreCopyJobTask": {
      "type": "object",
      "properties": {
        "source": {
          "$ref": "#/definitions/CosmosDBMongoCollection",
          "description": "Source Mongo (RU) collection"
        },
        "destination": {
          "$ref": "#/definitions/CosmosDBMongoVCoreCollection",
          "description": "Destination Mongo (vCore) collection"
        }
      },
      "required": [
        "source",
        "destination"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/BaseCopyJobTask"
        }
      ]
    },
    "MongoRoleDefinitionCreateUpdateParameters": {
      "type": "object",
      "description": "Parameters to create and update an Azure Cosmos DB Mongo Role Definition.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/MongoRoleDefinitionResource",
          "description": "Properties to create and update an Azure Cosmos DB Mongo Role Definition.",
          "x-ms-client-flatten": true
        }
      }
    },
    "MongoRoleDefinitionGetResults": {
      "type": "object",
      "description": "An Azure Cosmos DB Mongo Role Definition.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/MongoRoleDefinitionResource",
          "description": "Properties related to the Mongo Role Definition.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "MongoRoleDefinitionListResult": {
      "type": "object",
      "description": "The relevant Mongo Role Definitions.",
      "properties": {
        "value": {
          "type": "array",
          "description": "List of Mongo Role Definitions and their properties.",
          "items": {
            "$ref": "#/definitions/MongoRoleDefinitionGetResults"
          },
          "readOnly": true
        }
      }
    },
    "MongoRoleDefinitionResource": {
      "type": "object",
      "description": "Azure Cosmos DB Mongo Role Definition resource object.",
      "properties": {
        "roleName": {
          "type": "string",
          "description": "A user-friendly name for the Role Definition. Must be unique for the database account."
        },
        "type": {
          "$ref": "#/definitions/MongoRoleDefinitionType",
          "description": "Indicates whether the Role Definition was built-in or user created."
        },
        "databaseName": {
          "type": "string",
          "description": "The database name for which access is being granted for this Role Definition."
        },
        "privileges": {
          "type": "array",
          "description": "A set of privileges contained by the Role Definition. This will allow application of this Role Definition on the entire database account or any underlying Database / Collection. Scopes higher than Database are not enforceable as privilege.",
          "items": {
            "$ref": "#/definitions/Privilege"
          },
          "x-ms-identifiers": []
        },
        "roles": {
          "type": "array",
          "description": "The set of roles inherited by this Role Definition.",
          "items": {
            "$ref": "#/definitions/Role"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "MongoRoleDefinitionType": {
      "type": "string",
      "description": "Indicates whether the Role Definition was built-in or user created.",
      "enum": [
        "BuiltInRole",
        "CustomRole"
      ],
      "x-ms-enum": {
        "name": "MongoRoleDefinitionType",
        "modelAsString": false
      }
    },
    "MongoUserDefinitionCreateUpdateParameters": {
      "type": "object",
      "description": "Parameters to create and update an Azure Cosmos DB Mongo User Definition.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/MongoUserDefinitionResource",
          "description": "Properties to create and update an Azure Cosmos DB Mongo User Definition.",
          "x-ms-client-flatten": true
        }
      }
    },
    "MongoUserDefinitionGetResults": {
      "type": "object",
      "description": "An Azure Cosmos DB User Definition",
      "properties": {
        "properties": {
          "$ref": "#/definitions/MongoUserDefinitionResource",
          "description": "Properties related to the User Definition.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "MongoUserDefinitionListResult": {
      "type": "object",
      "description": "The relevant User Definition.",
      "properties": {
        "value": {
          "type": "array",
          "description": "List of User Definition and their properties",
          "items": {
            "$ref": "#/definitions/MongoUserDefinitionGetResults"
          },
          "readOnly": true
        }
      }
    },
    "MongoUserDefinitionResource": {
      "type": "object",
      "description": "Azure Cosmos DB Mongo User Definition resource object.",
      "properties": {
        "userName": {
          "type": "string",
          "description": "The user name for User Definition."
        },
        "password": {
          "type": "string",
          "description": "The password for User Definition. Response does not contain user password."
        },
        "databaseName": {
          "type": "string",
          "description": "The database name for which access is being granted for this User Definition."
        },
        "customData": {
          "type": "string",
          "description": "A custom definition for the USer Definition.",
          "x-ms-identifiers": []
        },
        "roles": {
          "type": "array",
          "description": "The set of roles inherited by the User Definition.",
          "items": {
            "$ref": "#/definitions/Role"
          },
          "x-ms-identifiers": []
        },
        "mechanisms": {
          "type": "string",
          "description": "The Mongo Auth mechanism. For now, we only support auth mechanism SCRAM-SHA-256."
        }
      }
    },
    "MongoVCoreSourceSinkDetails": {
      "type": "object",
      "description": "A CosmosDB Mongo vCore data source/sink details",
      "properties": {
        "hostName": {
          "type": "string"
        },
        "connectionStringKeyVaultUri": {
          "type": "string",
          "description": "URI of Azure KeyVault secret containing connection string.",
          "pattern": "^https?://[^/$.?# ]+.[^ ]*$"
        }
      }
    },
    "NetworkAclBypass": {
      "type": "string",
      "description": "Indicates what services are allowed to bypass firewall checks.",
      "enum": [
        "None",
        "AzureServices"
      ],
      "x-ms-enum": {
        "name": "NetworkAclBypass",
        "modelAsString": false
      }
    },
    "NetworkSecurityPerimeterConfiguration": {
      "type": "object",
      "description": "Network security perimeter (NSP) configuration resource",
      "properties": {
        "properties": {
          "$ref": "../../../../../common-types/resource-management/v6/networksecurityperimeter.json#/definitions/NetworkSecurityPerimeterConfigurationProperties",
          "description": "Network security configuration properties."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "NetworkSecurityPerimeterConfigurationListResult": {
      "type": "object",
      "description": "The response of a NetworkSecurityPerimeterConfiguration list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The NetworkSecurityPerimeterConfiguration items on this page",
          "items": {
            "$ref": "#/definitions/NetworkSecurityPerimeterConfiguration"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "NoSqlRUToNoSqlRUCopyJobProperties": {
      "type": "object",
      "description": "Source SQL to Destination SQL copy job properties",
      "properties": {
        "sourceDetails": {
          "$ref": "#/definitions/CosmosDBSourceSinkDetails",
          "description": "Source SQL DataStore details"
        },
        "destinationDetails": {
          "$ref": "#/definitions/CosmosDBSourceSinkDetails",
          "description": "Destination SQL DataStore details"
        },
        "tasks": {
          "type": "array",
          "description": "Copy Job tasks.",
          "items": {
            "$ref": "#/definitions/NoSqlRUToNoSqlRUCopyJobTask"
          },
          "x-ms-identifiers": []
        }
      },
      "required": [
        "tasks"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/BaseCopyJobProperties"
        }
      ],
      "x-ms-discriminator-value": "NoSqlRUToNoSqlRU"
    },
    "NoSqlRUToNoSqlRUCopyJobTask": {
      "type": "object",
      "properties": {
        "source": {
          "$ref": "#/definitions/CosmosDBNoSqlContainer",
          "description": "Source SQL container"
        },
        "destination": {
          "$ref": "#/definitions/CosmosDBNoSqlContainer",
          "description": "Destination SQL container"
        }
      },
      "required": [
        "source",
        "destination"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/BaseCopyJobTask"
        }
      ]
    },
    "NodeState": {
      "type": "string",
      "description": "The state of the node in Cassandra ring.",
      "enum": [
        "Normal",
        "Leaving",
        "Joining",
        "Moving",
        "Stopped"
      ],
      "x-ms-enum": {
        "name": "NodeState",
        "modelAsString": true,
        "values": [
          {
            "name": "Normal",
            "value": "Normal"
          },
          {
            "name": "Leaving",
            "value": "Leaving"
          },
          {
            "name": "Joining",
            "value": "Joining"
          },
          {
            "name": "Moving",
            "value": "Moving"
          },
          {
            "name": "Stopped",
            "value": "Stopped"
          }
        ]
      }
    },
    "NotebookWorkspace": {
      "type": "object",
      "description": "A notebook workspace resource",
      "properties": {
        "properties": {
          "$ref": "#/definitions/NotebookWorkspaceProperties",
          "description": "Resource properties.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "NotebookWorkspaceConnectionInfoResult": {
      "type": "object",
      "description": "The connection info for the given notebook workspace",
      "properties": {
        "authToken": {
          "type": "string",
          "description": "Specifies auth token used for connecting to Notebook server (uses token-based auth).",
          "readOnly": true
        },
        "notebookServerEndpoint": {
          "type": "string",
          "description": "Specifies the endpoint of Notebook server.",
          "readOnly": true
        }
      }
    },
    "NotebookWorkspaceCreateUpdateParameters": {
      "type": "object",
      "description": "Parameters to create a notebook workspace resource",
      "allOf": [
        {
          "$ref": "#/definitions/ARMProxyResource"
        }
      ]
    },
    "NotebookWorkspaceListResult": {
      "type": "object",
      "description": "A list of notebook workspace resources",
      "properties": {
        "value": {
          "type": "array",
          "description": "Array of notebook workspace resources",
          "items": {
            "$ref": "#/definitions/NotebookWorkspace"
          }
        }
      }
    },
    "NotebookWorkspaceProperties": {
      "type": "object",
      "description": "Properties of a notebook workspace resource.",
      "properties": {
        "notebookServerEndpoint": {
          "type": "string",
          "description": "Specifies the endpoint of Notebook server.",
          "readOnly": true
        },
        "status": {
          "type": "string",
          "description": "Status of the notebook workspace. Possible values are: Creating, Online, Deleting, Failed, Updating.",
          "readOnly": true
        }
      }
    },
    "OperationType": {
      "type": "string",
      "description": "Enum to indicate the operation type of the event.",
      "enum": [
        "Create",
        "Replace",
        "Delete",
        "Recreate",
        "SystemOperation"
      ],
      "x-ms-enum": {
        "name": "OperationType",
        "modelAsString": true,
        "values": [
          {
            "name": "Create",
            "value": "Create"
          },
          {
            "name": "Replace",
            "value": "Replace"
          },
          {
            "name": "Delete",
            "value": "Delete"
          },
          {
            "name": "Recreate",
            "value": "Recreate"
          },
          {
            "name": "SystemOperation",
            "value": "SystemOperation"
          }
        ]
      }
    },
    "OptionsResource": {
      "type": "object",
      "description": "Cosmos DB options resource object",
      "properties": {
        "throughput": {
          "type": "integer",
          "format": "int32",
          "description": "Value of the Cosmos DB resource throughput or autoscaleSettings. Use the ThroughputSetting resource when retrieving offer details."
        },
        "autoscaleSettings": {
          "$ref": "#/definitions/AutoscaleSettings",
          "description": "Specifies the Autoscale settings."
        }
      }
    },
    "PartitionMetric": {
      "type": "object",
      "description": "The metric values for a single partition.",
      "properties": {
        "partitionId": {
          "type": "string",
          "description": "The partition id (GUID identifier) of the metric values.",
          "readOnly": true
        },
        "partitionKeyRangeId": {
          "type": "string",
          "description": "The partition key range id (integer identifier) of the metric values.",
          "readOnly": true
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Metric"
        }
      ]
    },
    "PartitionMetricListResult": {
      "type": "object",
      "description": "The response to a list partition metrics request.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The list of partition-level metrics for the account.",
          "items": {
            "$ref": "#/definitions/PartitionMetric"
          },
          "readOnly": true
        }
      }
    },
    "PartitionUsage": {
      "type": "object",
      "description": "The partition level usage data for a usage request.",
      "properties": {
        "partitionId": {
          "type": "string",
          "description": "The partition id (GUID identifier) of the usages.",
          "readOnly": true
        },
        "partitionKeyRangeId": {
          "type": "string",
          "description": "The partition key range id (integer identifier) of the usages.",
          "readOnly": true
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Usage"
        }
      ]
    },
    "PartitionUsagesResult": {
      "type": "object",
      "description": "The response to a list partition level usage request.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The list of partition-level usages for the database. A usage is a point in time metric",
          "items": {
            "$ref": "#/definitions/PartitionUsage"
          },
          "readOnly": true
        }
      }
    },
    "PercentileMetric": {
      "type": "object",
      "description": "Percentile Metric data",
      "properties": {
        "startTime": {
          "type": "string",
          "format": "date-time",
          "description": "The start time for the metric (ISO-8601 format).",
          "readOnly": true
        },
        "endTime": {
          "type": "string",
          "format": "date-time",
          "description": "The end time for the metric (ISO-8601 format).",
          "readOnly": true
        },
        "timeGrain": {
          "type": "string",
          "description": "The time grain to be used to summarize the metric values.",
          "readOnly": true
        },
        "unit": {
          "$ref": "#/definitions/UnitType",
          "description": "The unit of the metric.",
          "readOnly": true
        },
        "name": {
          "$ref": "#/definitions/MetricName",
          "description": "The name information for the metric.",
          "readOnly": true
        },
        "metricValues": {
          "type": "array",
          "description": "The percentile metric values for the specified time window and timestep.",
          "items": {
            "$ref": "#/definitions/PercentileMetricValue"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        }
      }
    },
    "PercentileMetricListResult": {
      "type": "object",
      "description": "The response to a list percentile metrics request.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The list of percentile metrics for the account.",
          "items": {
            "$ref": "#/definitions/PercentileMetric"
          },
          "readOnly": true
        }
      }
    },
    "PercentileMetricValue": {
      "type": "object",
      "description": "Represents percentile metrics values.",
      "properties": {
        "P10": {
          "type": "number",
          "format": "double",
          "description": "The 10th percentile value for the metric.",
          "readOnly": true,
          "x-ms-client-name": "p10"
        },
        "P25": {
          "type": "number",
          "format": "double",
          "description": "The 25th percentile value for the metric.",
          "readOnly": true,
          "x-ms-client-name": "p25"
        },
        "P50": {
          "type": "number",
          "format": "double",
          "description": "The 50th percentile value for the metric.",
          "readOnly": true,
          "x-ms-client-name": "p50"
        },
        "P75": {
          "type": "number",
          "format": "double",
          "description": "The 75th percentile value for the metric.",
          "readOnly": true,
          "x-ms-client-name": "p75"
        },
        "P90": {
          "type": "number",
          "format": "double",
          "description": "The 90th percentile value for the metric.",
          "readOnly": true,
          "x-ms-client-name": "p90"
        },
        "P95": {
          "type": "number",
          "format": "double",
          "description": "The 95th percentile value for the metric.",
          "readOnly": true,
          "x-ms-client-name": "p95"
        },
        "P99": {
          "type": "number",
          "format": "double",
          "description": "The 99th percentile value for the metric.",
          "readOnly": true,
          "x-ms-client-name": "p99"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/MetricValue"
        }
      ]
    },
    "PeriodicModeBackupPolicy": {
      "type": "object",
      "description": "The object representing periodic mode backup policy.",
      "properties": {
        "periodicModeProperties": {
          "$ref": "#/definitions/PeriodicModeProperties",
          "description": "Configuration values for periodic mode backup"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/BackupPolicy"
        }
      ],
      "x-ms-discriminator-value": "Periodic"
    },
    "PeriodicModeProperties": {
      "type": "object",
      "description": "Configuration values for periodic mode backup",
      "properties": {
        "backupIntervalInMinutes": {
          "type": "integer",
          "format": "int32",
          "description": "An integer representing the interval in minutes between two backups",
          "minimum": 0
        },
        "backupRetentionIntervalInHours": {
          "type": "integer",
          "format": "int32",
          "description": "An integer representing the time (in hours) that each backup is retained",
          "minimum": 0
        },
        "backupStorageRedundancy": {
          "$ref": "#/definitions/BackupStorageRedundancy",
          "description": "Enum to indicate type of backup residency"
        }
      }
    },
    "Permission": {
      "type": "object",
      "description": "The set of data plane operations permitted through this Role Definition.",
      "properties": {
        "dataActions": {
          "type": "array",
          "description": "An array of data actions that are allowed.",
          "items": {
            "type": "string"
          }
        },
        "notDataActions": {
          "type": "array",
          "description": "An array of data actions that are denied.",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "PermissionAutoGenerated": {
      "type": "object",
      "description": "The set of data plane operations permitted through this Role Definition.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The id for the permission."
        },
        "dataActions": {
          "type": "array",
          "description": "An array of data actions that are allowed.",
          "items": {
            "type": "string"
          }
        },
        "notDataActions": {
          "type": "array",
          "description": "An array of data actions that are denied.",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "PermissionAutoGenerated2": {
      "type": "object",
      "description": "The set of data plane operations permitted through this Role Definition.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The id for the permission."
        },
        "dataActions": {
          "type": "array",
          "description": "An array of data actions that are allowed.",
          "items": {
            "type": "string"
          }
        },
        "notDataActions": {
          "type": "array",
          "description": "An array of data actions that are denied.",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "PermissionAutoGenerated3": {
      "type": "object",
      "description": "The set of data plane operations permitted through this Role Definition.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The id for the permission."
        },
        "dataActions": {
          "type": "array",
          "description": "An array of data actions that are allowed.",
          "items": {
            "type": "string"
          }
        },
        "notDataActions": {
          "type": "array",
          "description": "An array of data actions that are denied.",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "PermissionAutoGenerated4": {
      "type": "object",
      "description": "The set of data plane operations permitted through this Role Definition.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The id for the permission."
        },
        "dataActions": {
          "type": "array",
          "description": "An array of data actions that are allowed.",
          "items": {
            "type": "string"
          }
        },
        "notDataActions": {
          "type": "array",
          "description": "An array of data actions that are denied.",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "PhysicalPartitionId": {
      "type": "object",
      "description": "PhysicalPartitionId object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Id of a physical partition"
        }
      },
      "required": [
        "id"
      ]
    },
    "PhysicalPartitionStorageInfo": {
      "type": "object",
      "description": "The storage of a physical partition",
      "properties": {
        "id": {
          "type": "string",
          "description": "The unique identifier of the partition.",
          "readOnly": true
        },
        "storageInKB": {
          "type": "number",
          "format": "double",
          "description": "The storage in KB for the physical partition.",
          "readOnly": true
        }
      }
    },
    "PhysicalPartitionStorageInfoCollection": {
      "type": "object",
      "description": "List of physical partitions and their properties returned by a merge operation.",
      "properties": {
        "physicalPartitionStorageInfoCollection": {
          "type": "array",
          "description": "List of physical partitions and their properties.",
          "items": {
            "$ref": "#/definitions/PhysicalPartitionStorageInfo"
          },
          "readOnly": true
        }
      }
    },
    "PhysicalPartitionThroughputInfoProperties": {
      "type": "object",
      "description": "The properties of an Azure Cosmos DB PhysicalPartitionThroughputInfoProperties object",
      "properties": {
        "physicalPartitionThroughputInfo": {
          "type": "array",
          "description": "Array of physical partition throughput info objects",
          "items": {
            "$ref": "#/definitions/PhysicalPartitionThroughputInfoResource"
          }
        }
      }
    },
    "PhysicalPartitionThroughputInfoResource": {
      "type": "object",
      "description": "PhysicalPartitionThroughputInfo object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Id of a physical partition"
        },
        "throughput": {
          "type": "number",
          "format": "double",
          "description": "Throughput of a physical partition"
        },
        "targetThroughput": {
          "type": "number",
          "format": "double",
          "description": "Target throughput of a physical partition"
        }
      },
      "required": [
        "id"
      ]
    },
    "PhysicalPartitionThroughputInfoResult": {
      "type": "object",
      "description": "An Azure Cosmos DB PhysicalPartitionThroughputInfoResult object.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/PhysicalPartitionThroughputInfoResultProperties",
          "description": "The properties of an Azure Cosmos DB PhysicalPartitionThroughputInfoResult object",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ARMResourceProperties"
        }
      ]
    },
    "PhysicalPartitionThroughputInfoResultProperties": {
      "type": "object",
      "description": "The properties of an Azure Cosmos DB PhysicalPartitionThroughputInfoResult object",
      "properties": {
        "resource": {
          "$ref": "#/definitions/PhysicalPartitionThroughputInfoResultPropertiesResource",
          "description": "properties of physical partition throughput info"
        }
      }
    },
    "PhysicalPartitionThroughputInfoResultPropertiesResource": {
      "type": "object",
      "description": "properties of physical partition throughput info",
      "allOf": [
        {
          "$ref": "#/definitions/PhysicalPartitionThroughputInfoProperties"
        }
      ]
    },
    "PrimaryAggregationType": {
      "type": "string",
      "description": "The primary aggregation type of the metric.",
      "enum": [
        "None",
        "Average",
        "Total",
        "Minimum",
        "Maximum",
        "Last"
      ],
      "x-ms-enum": {
        "name": "PrimaryAggregationType",
        "modelAsString": true,
        "values": [
          {
            "name": "None",
            "value": "None"
          },
          {
            "name": "Average",
            "value": "Average"
          },
          {
            "name": "Total",
            "value": "Total"
          },
          {
            "name": "Minimum",
            "value": "Minimum"
          },
          {
            "name": "Maximum",
            "value": "Maximum"
          },
          {
            "name": "Last",
            "value": "Last"
          }
        ]
      }
    },
    "PrivateEndpointConnection": {
      "type": "object",
      "description": "A private endpoint connection",
      "properties": {
        "properties": {
          "$ref": "#/definitions/PrivateEndpointConnectionProperties",
          "description": "Resource properties.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "PrivateEndpointConnectionListResult": {
      "type": "object",
      "description": "A list of private endpoint connections",
      "properties": {
        "value": {
          "type": "array",
          "description": "Array of private endpoint connections",
          "items": {
            "$ref": "#/definitions/PrivateEndpointConnection"
          }
        }
      }
    },
    "PrivateEndpointConnectionProperties": {
      "type": "object",
      "description": "Properties of a private endpoint connection.",
      "properties": {
        "privateEndpoint": {
          "$ref": "#/definitions/PrivateEndpointProperty",
          "description": "Private endpoint which the connection belongs to."
        },
        "privateLinkServiceConnectionState": {
          "$ref": "#/definitions/PrivateLinkServiceConnectionStateProperty",
          "description": "Connection State of the Private Endpoint Connection."
        },
        "groupId": {
          "type": "string",
          "description": "Group id of the private endpoint."
        },
        "provisioningState": {
          "type": "string",
          "description": "Provisioning state of the private endpoint."
        }
      }
    },
    "PrivateEndpointProperty": {
      "type": "object",
      "description": "Private endpoint which the connection belongs to.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Resource id of the private endpoint."
        }
      }
    },
    "PrivateLinkResource": {
      "type": "object",
      "description": "A private link resource",
      "properties": {
        "properties": {
          "$ref": "#/definitions/PrivateLinkResourceProperties",
          "description": "Resource properties.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "PrivateLinkResourceListResult": {
      "type": "object",
      "description": "A list of private link resources",
      "properties": {
        "value": {
          "type": "array",
          "description": "Array of private link resources",
          "items": {
            "$ref": "#/definitions/PrivateLinkResource"
          }
        }
      }
    },
    "PrivateLinkResourceProperties": {
      "type": "object",
      "description": "Properties of a private link resource.",
      "properties": {
        "groupId": {
          "type": "string",
          "description": "The private link resource group id.",
          "readOnly": true
        },
        "requiredMembers": {
          "type": "array",
          "description": "The private link resource required member names.",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "requiredZoneNames": {
          "type": "array",
          "description": "The private link resource required zone names.",
          "items": {
            "type": "string"
          },
          "readOnly": true
        }
      }
    },
    "PrivateLinkServiceConnectionStateProperty": {
      "type": "object",
      "description": "Connection State of the Private Endpoint Connection.",
      "properties": {
        "status": {
          "type": "string",
          "description": "The private link service connection status."
        },
        "description": {
          "type": "string",
          "description": "The private link service connection description."
        },
        "actionsRequired": {
          "type": "string",
          "description": "Any action that is required beyond basic workflow (approve/ reject/ disconnect)",
          "readOnly": true
        }
      }
    },
    "Privilege": {
      "type": "object",
      "description": "The set of data plane operations permitted through this Role Definition.",
      "properties": {
        "resource": {
          "$ref": "#/definitions/PrivilegeResource",
          "description": "An Azure Cosmos DB Mongo DB Resource."
        },
        "actions": {
          "type": "array",
          "description": "An array of actions that are allowed.",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "PrivilegeResource": {
      "type": "object",
      "description": "An Azure Cosmos DB Mongo DB Resource.",
      "properties": {
        "db": {
          "type": "string",
          "description": "The database name the role is applied."
        },
        "collection": {
          "type": "string",
          "description": "The collection name the role is applied."
        }
      }
    },
    "PublicNetworkAccess": {
      "type": "string",
      "description": "Whether requests from Public Network are allowed",
      "enum": [
        "Enabled",
        "Disabled",
        "SecuredByPerimeter"
      ],
      "x-ms-enum": {
        "name": "PublicNetworkAccess",
        "modelAsString": true,
        "values": [
          {
            "name": "Enabled",
            "value": "Enabled"
          },
          {
            "name": "Disabled",
            "value": "Disabled"
          },
          {
            "name": "SecuredByPerimeter",
            "value": "SecuredByPerimeter"
          }
        ]
      }
    },
    "RedistributeThroughputParameters": {
      "type": "object",
      "description": "Cosmos DB redistribute throughput parameters object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/RedistributeThroughputProperties",
          "description": "Properties to redistribute throughput parameters object",
          "x-ms-client-flatten": true
        }
      },
      "required": [
        "properties"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/ARMResourceProperties"
        }
      ]
    },
    "RedistributeThroughputProperties": {
      "type": "object",
      "description": "Properties to redistribute throughput for Azure Cosmos DB resource.",
      "properties": {
        "resource": {
          "$ref": "#/definitions/RedistributeThroughputPropertiesResource",
          "description": "The standard JSON format of a resource throughput"
        }
      },
      "required": [
        "resource"
      ]
    },
    "RedistributeThroughputPropertiesResource": {
      "type": "object",
      "description": "Resource to redistribute throughput for Azure Cosmos DB resource",
      "properties": {
        "throughputPolicy": {
          "$ref": "#/definitions/ThroughputPolicyType",
          "description": "ThroughputPolicy to apply for throughput redistribution"
        },
        "targetPhysicalPartitionThroughputInfo": {
          "type": "array",
          "description": "Array of PhysicalPartitionThroughputInfoResource objects.",
          "items": {
            "$ref": "#/definitions/PhysicalPartitionThroughputInfoResource"
          }
        },
        "sourcePhysicalPartitionThroughputInfo": {
          "type": "array",
          "description": "Array of PhysicalPartitionThroughputInfoResource objects.",
          "items": {
            "$ref": "#/definitions/PhysicalPartitionThroughputInfoResource"
          }
        }
      },
      "required": [
        "throughputPolicy",
        "targetPhysicalPartitionThroughputInfo",
        "sourcePhysicalPartitionThroughputInfo"
      ]
    },
    "RegionForOnlineOffline": {
      "type": "object",
      "description": "Cosmos DB region to online or offline.",
      "properties": {
        "region": {
          "type": "string",
          "description": "Cosmos DB region, with spaces between words and each word capitalized."
        }
      },
      "required": [
        "region"
      ]
    },
    "RegionalServiceResource": {
      "type": "object",
      "description": "Resource for a regional service location.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The regional service name.",
          "readOnly": true
        },
        "location": {
          "type": "string",
          "description": "The location name.",
          "readOnly": true
        },
        "status": {
          "$ref": "#/definitions/ServiceStatus",
          "description": "Describes the status of a service.",
          "readOnly": true
        }
      }
    },
    "ResourceIdentityType": {
      "type": "string",
      "description": "The type of identity used for the resource. The type 'SystemAssigned,UserAssigned' includes both an implicitly created identity and a set of user assigned identities. The type 'None' will remove any identities from the service.",
      "enum": [
        "SystemAssigned",
        "UserAssigned",
        "SystemAssigned,UserAssigned",
        "None"
      ],
      "x-ms-enum": {
        "name": "ResourceIdentityType",
        "modelAsString": false,
        "values": [
          {
            "name": "SystemAssigned",
            "value": "SystemAssigned"
          },
          {
            "name": "UserAssigned",
            "value": "UserAssigned"
          },
          {
            "name": "SystemAssignedUserAssigned",
            "value": "SystemAssigned,UserAssigned"
          },
          {
            "name": "None",
            "value": "None"
          }
        ]
      }
    },
    "ResourceRestoreParameters": {
      "type": "object",
      "description": "Parameters to indicate the information about the restore.",
      "allOf": [
        {
          "$ref": "#/definitions/RestoreParametersBase"
        }
      ]
    },
    "RestorableDatabaseAccountGetResult": {
      "type": "object",
      "description": "A Azure Cosmos DB restorable database account.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/RestorableDatabaseAccountProperties",
          "description": "The properties of a restorable database account.",
          "x-ms-client-flatten": true
        },
        "location": {
          "type": "string",
          "description": "The location of the resource group to which the resource belongs."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "RestorableDatabaseAccountProperties": {
      "type": "object",
      "description": "The properties of a restorable database account.",
      "properties": {
        "accountName": {
          "type": "string",
          "description": "The name of the global database account"
        },
        "creationTime": {
          "type": "string",
          "format": "date-time",
          "description": "The creation time of the restorable database account (ISO-8601 format)."
        },
        "oldestRestorableTime": {
          "type": "string",
          "format": "date-time",
          "description": "The least recent time at which the database account can be restored to (ISO-8601 format)."
        },
        "deletionTime": {
          "type": "string",
          "format": "date-time",
          "description": "The time at which the restorable database account has been deleted (ISO-8601 format)."
        },
        "apiType": {
          "$ref": "#/definitions/ApiType",
          "description": "The API type of the restorable database account.",
          "readOnly": true
        },
        "restorableLocations": {
          "type": "array",
          "description": "List of regions where the of the database account can be restored from.",
          "items": {
            "$ref": "#/definitions/RestorableLocationResource"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        }
      }
    },
    "RestorableDatabaseAccountsListResult": {
      "type": "object",
      "description": "The List operation response, that contains the restorable database accounts and their properties.",
      "properties": {
        "value": {
          "type": "array",
          "description": "List of restorable database accounts and their properties.",
          "items": {
            "$ref": "#/definitions/RestorableDatabaseAccountGetResult"
          },
          "readOnly": true
        }
      }
    },
    "RestorableGremlinDatabaseGetResult": {
      "type": "object",
      "description": "An Azure Cosmos DB Gremlin database event",
      "properties": {
        "properties": {
          "$ref": "#/definitions/RestorableGremlinDatabaseProperties",
          "description": "The properties of a Gremlin database event.",
          "x-ms-client-flatten": true
        },
        "id": {
          "type": "string",
          "description": "The unique resource Identifier of the ARM resource.",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the ARM resource.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of Azure resource.",
          "readOnly": true
        }
      }
    },
    "RestorableGremlinDatabaseProperties": {
      "type": "object",
      "description": "The properties of an Azure Cosmos DB Gremlin database event",
      "properties": {
        "resource": {
          "$ref": "#/definitions/RestorableGremlinDatabasePropertiesResource",
          "description": "The resource of an Azure Cosmos DB Gremlin database event"
        }
      }
    },
    "RestorableGremlinDatabasePropertiesResource": {
      "type": "object",
      "description": "The resource of an Azure Cosmos DB Gremlin database event",
      "properties": {
        "_rid": {
          "type": "string",
          "description": "A system generated property. A unique identifier.",
          "readOnly": true,
          "x-ms-client-name": "rid"
        },
        "operationType": {
          "$ref": "#/definitions/OperationType",
          "description": "The operation type of this database event.",
          "readOnly": true
        },
        "canUndelete": {
          "type": "string",
          "description": "A state of this database to identify if this database is restorable in same account.",
          "readOnly": true
        },
        "canUndeleteReason": {
          "type": "string",
          "description": "The reason why this database can not be restored in same account.",
          "readOnly": true
        },
        "eventTimestamp": {
          "type": "string",
          "description": "The time when this database event happened.",
          "readOnly": true
        },
        "ownerId": {
          "type": "string",
          "description": "The name of this Gremlin database.",
          "readOnly": true
        },
        "ownerResourceId": {
          "type": "string",
          "description": "The resource ID of this Gremlin database.",
          "readOnly": true
        }
      }
    },
    "RestorableGremlinDatabasesListResult": {
      "type": "object",
      "description": "The List operation response, that contains the Gremlin database events and their properties.",
      "properties": {
        "value": {
          "type": "array",
          "description": "List of Gremlin database events and their properties.",
          "items": {
            "$ref": "#/definitions/RestorableGremlinDatabaseGetResult"
          },
          "readOnly": true
        }
      }
    },
    "RestorableGremlinGraphGetResult": {
      "type": "object",
      "description": "An Azure Cosmos DB Gremlin graph event",
      "properties": {
        "properties": {
          "$ref": "#/definitions/RestorableGremlinGraphProperties",
          "description": "The properties of a Gremlin graph event.",
          "x-ms-client-flatten": true
        },
        "id": {
          "type": "string",
          "description": "The unique resource Identifier of the ARM resource.",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the ARM resource.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of Azure resource.",
          "readOnly": true
        }
      }
    },
    "RestorableGremlinGraphProperties": {
      "type": "object",
      "description": "The properties of an Azure Cosmos DB Gremlin graph event",
      "properties": {
        "resource": {
          "$ref": "#/definitions/RestorableGremlinGraphPropertiesResource",
          "description": "The resource of an Azure Cosmos DB Gremlin graph event"
        }
      }
    },
    "RestorableGremlinGraphPropertiesResource": {
      "type": "object",
      "description": "The resource of an Azure Cosmos DB Gremlin graph event",
      "properties": {
        "_rid": {
          "type": "string",
          "description": "A system generated property. A unique identifier.",
          "readOnly": true,
          "x-ms-client-name": "rid"
        },
        "operationType": {
          "$ref": "#/definitions/OperationType",
          "description": "The operation type of this graph event.",
          "readOnly": true
        },
        "canUndelete": {
          "type": "string",
          "description": "A state of this graph to identify if this graph is restorable in same account.",
          "readOnly": true
        },
        "canUndeleteReason": {
          "type": "string",
          "description": "The reason why this graph can not be restored in same account.",
          "readOnly": true
        },
        "eventTimestamp": {
          "type": "string",
          "description": "The time when this graph event happened.",
          "readOnly": true
        },
        "ownerId": {
          "type": "string",
          "description": "The name of this Gremlin graph.",
          "readOnly": true
        },
        "ownerResourceId": {
          "type": "string",
          "description": "The resource ID of this Gremlin graph.",
          "readOnly": true
        }
      }
    },
    "RestorableGremlinGraphsListResult": {
      "type": "object",
      "description": "The List operation response, that contains the Gremlin graph events and their properties.",
      "properties": {
        "value": {
          "type": "array",
          "description": "List of Gremlin graph events and their properties.",
          "items": {
            "$ref": "#/definitions/RestorableGremlinGraphGetResult"
          },
          "readOnly": true
        }
      }
    },
    "RestorableGremlinResourcesGetResult": {
      "type": "object",
      "description": "Specific Databases to restore.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The unique resource identifier of the ARM resource.",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the ARM resource.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of Azure resource.",
          "readOnly": true
        },
        "databaseName": {
          "type": "string",
          "description": "The name of the gremlin database available for restore."
        },
        "graphNames": {
          "type": "array",
          "description": "The names of the graphs available for restore.",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "RestorableGremlinResourcesListResult": {
      "type": "object",
      "description": "The List operation response, that contains the restorable Gremlin resources.",
      "properties": {
        "value": {
          "type": "array",
          "description": "List of restorable Gremlin resources, including the gremlin database and graph names.",
          "items": {
            "$ref": "#/definitions/RestorableGremlinResourcesGetResult"
          },
          "readOnly": true
        }
      }
    },
    "RestorableLocationResource": {
      "type": "object",
      "description": "Properties of the regional restorable account.",
      "properties": {
        "locationName": {
          "type": "string",
          "description": "The location of the regional restorable account.",
          "readOnly": true
        },
        "regionalDatabaseAccountInstanceId": {
          "type": "string",
          "description": "The instance id of the regional restorable account.",
          "readOnly": true
        },
        "creationTime": {
          "type": "string",
          "format": "date-time",
          "description": "The creation time of the regional restorable database account (ISO-8601 format).",
          "readOnly": true
        },
        "deletionTime": {
          "type": "string",
          "format": "date-time",
          "description": "The time at which the regional restorable database account has been deleted (ISO-8601 format).",
          "readOnly": true
        }
      }
    },
    "RestorableMongodbCollectionGetResult": {
      "type": "object",
      "description": "An Azure Cosmos DB MongoDB collection event",
      "properties": {
        "properties": {
          "$ref": "#/definitions/RestorableMongodbCollectionProperties",
          "description": "The properties of a MongoDB collection event.",
          "x-ms-client-flatten": true
        },
        "id": {
          "type": "string",
          "description": "The unique resource Identifier of the ARM resource.",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the ARM resource.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of Azure resource.",
          "readOnly": true
        }
      }
    },
    "RestorableMongodbCollectionProperties": {
      "type": "object",
      "description": "The properties of an Azure Cosmos DB MongoDB collection event",
      "properties": {
        "resource": {
          "$ref": "#/definitions/RestorableMongodbCollectionPropertiesResource",
          "description": "The resource of an Azure Cosmos DB MongoDB collection event"
        }
      }
    },
    "RestorableMongodbCollectionPropertiesResource": {
      "type": "object",
      "description": "The resource of an Azure Cosmos DB MongoDB collection event",
      "properties": {
        "_rid": {
          "type": "string",
          "description": "A system generated property. A unique identifier.",
          "readOnly": true,
          "x-ms-client-name": "rid"
        },
        "operationType": {
          "$ref": "#/definitions/OperationType",
          "description": "The operation type of this collection event.",
          "readOnly": true
        },
        "canUndelete": {
          "type": "string",
          "description": "A state of this collection to identify if this container is restorable in same account.",
          "readOnly": true
        },
        "canUndeleteReason": {
          "type": "string",
          "description": "The reason why this collection can not be restored in same account.",
          "readOnly": true
        },
        "eventTimestamp": {
          "type": "string",
          "description": "The time when this collection event happened.",
          "readOnly": true
        },
        "ownerId": {
          "type": "string",
          "description": "The name of this MongoDB collection.",
          "readOnly": true
        },
        "ownerResourceId": {
          "type": "string",
          "description": "The resource ID of this MongoDB collection.",
          "readOnly": true
        }
      }
    },
    "RestorableMongodbCollectionsListResult": {
      "type": "object",
      "description": "The List operation response, that contains the MongoDB collection events and their properties.",
      "properties": {
        "value": {
          "type": "array",
          "description": "List of MongoDB collection events and their properties.",
          "items": {
            "$ref": "#/definitions/RestorableMongodbCollectionGetResult"
          },
          "readOnly": true
        }
      }
    },
    "RestorableMongodbDatabaseGetResult": {
      "type": "object",
      "description": "An Azure Cosmos DB MongoDB database event",
      "properties": {
        "properties": {
          "$ref": "#/definitions/RestorableMongodbDatabaseProperties",
          "description": "The properties of a MongoDB database event.",
          "x-ms-client-flatten": true
        },
        "id": {
          "type": "string",
          "description": "The unique resource Identifier of the ARM resource.",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the ARM resource.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of Azure resource.",
          "readOnly": true
        }
      }
    },
    "RestorableMongodbDatabaseProperties": {
      "type": "object",
      "description": "The properties of an Azure Cosmos DB MongoDB database event",
      "properties": {
        "resource": {
          "$ref": "#/definitions/RestorableMongodbDatabasePropertiesResource",
          "description": "The resource of an Azure Cosmos DB MongoDB database event"
        }
      }
    },
    "RestorableMongodbDatabasePropertiesResource": {
      "type": "object",
      "description": "The resource of an Azure Cosmos DB MongoDB database event",
      "properties": {
        "_rid": {
          "type": "string",
          "description": "A system generated property. A unique identifier.",
          "readOnly": true,
          "x-ms-client-name": "rid"
        },
        "operationType": {
          "$ref": "#/definitions/OperationType",
          "description": "The operation type of this database event.",
          "readOnly": true
        },
        "canUndelete": {
          "type": "string",
          "description": "A state of this database to identify if this database is restorable in same account.",
          "readOnly": true
        },
        "canUndeleteReason": {
          "type": "string",
          "description": "The reason why this database can not be restored in same account.",
          "readOnly": true
        },
        "eventTimestamp": {
          "type": "string",
          "description": "The time when this database event happened.",
          "readOnly": true
        },
        "ownerId": {
          "type": "string",
          "description": "The name of this MongoDB database.",
          "readOnly": true
        },
        "ownerResourceId": {
          "type": "string",
          "description": "The resource ID of this MongoDB database.",
          "readOnly": true
        }
      }
    },
    "RestorableMongodbDatabasesListResult": {
      "type": "object",
      "description": "The List operation response, that contains the MongoDB database events and their properties.",
      "properties": {
        "value": {
          "type": "array",
          "description": "List of MongoDB database events and their properties.",
          "items": {
            "$ref": "#/definitions/RestorableMongodbDatabaseGetResult"
          },
          "readOnly": true
        }
      }
    },
    "RestorableMongodbResourcesGetResult": {
      "type": "object",
      "description": "Specific Databases to restore.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The unique resource identifier of the ARM resource.",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the ARM resource.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of Azure resource.",
          "readOnly": true
        },
        "databaseName": {
          "type": "string",
          "description": "The name of the database available for restore."
        },
        "collectionNames": {
          "type": "array",
          "description": "The names of the collections available for restore.",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "RestorableMongodbResourcesListResult": {
      "type": "object",
      "description": "The List operation response, that contains the restorable MongoDB resources.",
      "properties": {
        "value": {
          "type": "array",
          "description": "List of restorable MongoDB resources, including the database and collection names.",
          "items": {
            "$ref": "#/definitions/RestorableMongodbResourcesGetResult"
          },
          "readOnly": true
        }
      }
    },
    "RestorableSqlContainerGetResult": {
      "type": "object",
      "description": "An Azure Cosmos DB SQL container event",
      "properties": {
        "properties": {
          "$ref": "#/definitions/RestorableSqlContainerProperties",
          "description": "The properties of a SQL container event.",
          "x-ms-client-flatten": true
        },
        "id": {
          "type": "string",
          "description": "The unique resource Identifier of the ARM resource.",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the ARM resource.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of Azure resource.",
          "readOnly": true
        }
      }
    },
    "RestorableSqlContainerProperties": {
      "type": "object",
      "description": "The properties of an Azure Cosmos DB SQL container event",
      "properties": {
        "resource": {
          "$ref": "#/definitions/RestorableSqlContainerPropertiesResource",
          "description": "The resource of an Azure Cosmos DB SQL container event"
        }
      }
    },
    "RestorableSqlContainerPropertiesResource": {
      "type": "object",
      "description": "The resource of an Azure Cosmos DB SQL container event",
      "properties": {
        "_rid": {
          "type": "string",
          "description": "A system generated property. A unique identifier.",
          "readOnly": true,
          "x-ms-client-name": "rid"
        },
        "operationType": {
          "$ref": "#/definitions/OperationType",
          "description": "The operation type of this container event.",
          "readOnly": true
        },
        "canUndelete": {
          "type": "string",
          "description": "A state of this container to identify if this container is restorable in same account.",
          "readOnly": true
        },
        "canUndeleteReason": {
          "type": "string",
          "description": "The reason why this container can not be restored in same account.",
          "readOnly": true
        },
        "eventTimestamp": {
          "type": "string",
          "description": "The when this container event happened.",
          "readOnly": true
        },
        "ownerId": {
          "type": "string",
          "description": "The name of this SQL container.",
          "readOnly": true
        },
        "ownerResourceId": {
          "type": "string",
          "description": "The resource ID of this SQL container.",
          "readOnly": true
        },
        "container": {
          "$ref": "#/definitions/RestorableSqlContainerPropertiesResourceContainer",
          "description": "Cosmos DB SQL container resource object"
        }
      }
    },
    "RestorableSqlContainerPropertiesResourceContainer": {
      "type": "object",
      "description": "Cosmos DB SQL container resource object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Name of the Cosmos DB SQL container"
        },
        "indexingPolicy": {
          "$ref": "#/definitions/IndexingPolicy",
          "description": "The configuration of the indexing policy. By default, the indexing is automatic for all document paths within the container"
        },
        "partitionKey": {
          "$ref": "#/definitions/ContainerPartitionKey",
          "description": "The configuration of the partition key to be used for partitioning data into multiple partitions"
        },
        "defaultTtl": {
          "type": "integer",
          "format": "int32",
          "description": "Default time to live"
        },
        "uniqueKeyPolicy": {
          "$ref": "#/definitions/UniqueKeyPolicy",
          "description": "The unique key policy configuration for specifying uniqueness constraints on documents in the collection in the Azure Cosmos DB service."
        },
        "conflictResolutionPolicy": {
          "$ref": "#/definitions/ConflictResolutionPolicy",
          "description": "The conflict resolution policy for the container."
        },
        "clientEncryptionPolicy": {
          "$ref": "#/definitions/ClientEncryptionPolicy",
          "description": "The client encryption policy for the container."
        },
        "analyticalStorageTtl": {
          "type": "integer",
          "format": "int64",
          "description": "Analytical TTL."
        },
        "restoreParameters": {
          "$ref": "#/definitions/ResourceRestoreParameters",
          "description": "Parameters to indicate the information about the restore"
        },
        "createMode": {
          "type": "string",
          "description": "Enum to indicate the mode of resource creation.",
          "default": "Default",
          "enum": [
            "Default",
            "Restore"
          ],
          "x-ms-enum": {
            "name": "CreateMode",
            "modelAsString": true,
            "values": [
              {
                "name": "Default",
                "value": "Default"
              },
              {
                "name": "Restore",
                "value": "Restore"
              }
            ]
          }
        },
        "materializedViewDefinition": {
          "$ref": "#/definitions/MaterializedViewDefinition",
          "description": "The configuration for defining Materialized Views. This must be specified only for creating a Materialized View container."
        },
        "materializedViews": {
          "type": "array",
          "description": "Materialized Views defined on the container.",
          "items": {
            "$ref": "#/definitions/MaterializedViewDetails"
          }
        },
        "computedProperties": {
          "type": "array",
          "description": "List of computed properties",
          "items": {
            "$ref": "#/definitions/ComputedProperty"
          }
        },
        "vectorEmbeddingPolicy": {
          "$ref": "#/definitions/VectorEmbeddingPolicy",
          "description": "The vector embedding policy for the container."
        },
        "fullTextPolicy": {
          "$ref": "#/definitions/FullTextPolicy",
          "description": "The FullText policy for the container."
        },
        "_rid": {
          "type": "string",
          "description": "A system generated property. A unique identifier.",
          "readOnly": true,
          "x-ms-client-name": "rid"
        },
        "_ts": {
          "type": "number",
          "format": "float",
          "description": "A system generated property that denotes the last updated timestamp of the resource.",
          "readOnly": true,
          "x-ms-client-name": "ts"
        },
        "_etag": {
          "type": "string",
          "description": "A system generated property representing the resource etag required for optimistic concurrency control.",
          "readOnly": true,
          "x-ms-client-name": "etag"
        },
        "_self": {
          "type": "string",
          "description": "A system generated property that specifies the addressable path of the container resource.",
          "readOnly": true,
          "x-ms-client-name": "self"
        }
      },
      "required": [
        "id"
      ]
    },
    "RestorableSqlContainersListResult": {
      "type": "object",
      "description": "The List operation response, that contains the SQL container events and their properties.",
      "properties": {
        "value": {
          "type": "array",
          "description": "List of SQL container events and their properties.",
          "items": {
            "$ref": "#/definitions/RestorableSqlContainerGetResult"
          },
          "readOnly": true
        }
      }
    },
    "RestorableSqlDatabaseGetResult": {
      "type": "object",
      "description": "An Azure Cosmos DB SQL database event",
      "properties": {
        "properties": {
          "$ref": "#/definitions/RestorableSqlDatabaseProperties",
          "description": "The properties of a SQL database event.",
          "x-ms-client-flatten": true
        },
        "id": {
          "type": "string",
          "description": "The unique resource Identifier of the ARM resource.",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the ARM resource.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of Azure resource.",
          "readOnly": true
        }
      }
    },
    "RestorableSqlDatabaseProperties": {
      "type": "object",
      "description": "The properties of an Azure Cosmos DB SQL database event",
      "properties": {
        "resource": {
          "$ref": "#/definitions/RestorableSqlDatabasePropertiesResource",
          "description": "The resource of an Azure Cosmos DB SQL database event"
        }
      }
    },
    "RestorableSqlDatabasePropertiesResource": {
      "type": "object",
      "description": "The resource of an Azure Cosmos DB SQL database event",
      "properties": {
        "_rid": {
          "type": "string",
          "description": "A system generated property. A unique identifier.",
          "readOnly": true,
          "x-ms-client-name": "rid"
        },
        "operationType": {
          "$ref": "#/definitions/OperationType",
          "description": "The operation type of this database event.",
          "readOnly": true
        },
        "canUndelete": {
          "type": "string",
          "description": "A state of this database to identify if this database is restorable in same account.",
          "readOnly": true
        },
        "canUndeleteReason": {
          "type": "string",
          "description": "The reason why this database can not be restored in same account.",
          "readOnly": true
        },
        "eventTimestamp": {
          "type": "string",
          "description": "The time when this database event happened.",
          "readOnly": true
        },
        "ownerId": {
          "type": "string",
          "description": "The name of the SQL database.",
          "readOnly": true
        },
        "ownerResourceId": {
          "type": "string",
          "description": "The resource ID of the SQL database.",
          "readOnly": true
        },
        "database": {
          "$ref": "#/definitions/RestorableSqlDatabasePropertiesResourceDatabase",
          "description": "Cosmos DB SQL database resource object"
        }
      }
    },
    "RestorableSqlDatabasePropertiesResourceDatabase": {
      "type": "object",
      "description": "Cosmos DB SQL database resource object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Name of the Cosmos DB SQL database"
        },
        "restoreParameters": {
          "$ref": "#/definitions/ResourceRestoreParameters",
          "description": "Parameters to indicate the information about the restore"
        },
        "createMode": {
          "type": "string",
          "description": "Enum to indicate the mode of resource creation.",
          "default": "Default",
          "enum": [
            "Default",
            "Restore"
          ],
          "x-ms-enum": {
            "name": "CreateMode",
            "modelAsString": true,
            "values": [
              {
                "name": "Default",
                "value": "Default"
              },
              {
                "name": "Restore",
                "value": "Restore"
              }
            ]
          }
        },
        "_rid": {
          "type": "string",
          "description": "A system generated property. A unique identifier.",
          "readOnly": true,
          "x-ms-client-name": "rid"
        },
        "_ts": {
          "type": "number",
          "format": "float",
          "description": "A system generated property that denotes the last updated timestamp of the resource.",
          "readOnly": true,
          "x-ms-client-name": "ts"
        },
        "_etag": {
          "type": "string",
          "description": "A system generated property representing the resource etag required for optimistic concurrency control.",
          "readOnly": true,
          "x-ms-client-name": "etag"
        },
        "_colls": {
          "type": "string",
          "description": "A system generated property that specified the addressable path of the collections resource.",
          "readOnly": true,
          "x-ms-client-name": "colls"
        },
        "_users": {
          "type": "string",
          "description": "A system generated property that specifies the addressable path of the users resource.",
          "readOnly": true,
          "x-ms-client-name": "users"
        },
        "_self": {
          "type": "string",
          "description": "A system generated property that specifies the addressable path of the database resource.",
          "readOnly": true,
          "x-ms-client-name": "self"
        }
      },
      "required": [
        "id"
      ]
    },
    "RestorableSqlDatabasesListResult": {
      "type": "object",
      "description": "The List operation response, that contains the SQL database events and their properties.",
      "properties": {
        "value": {
          "type": "array",
          "description": "List of SQL database events and their properties.",
          "items": {
            "$ref": "#/definitions/RestorableSqlDatabaseGetResult"
          },
          "readOnly": true
        }
      }
    },
    "RestorableSqlResourcesGetResult": {
      "type": "object",
      "description": "Specific Databases to restore.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The unique resource identifier of the ARM resource.",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the ARM resource.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of Azure resource.",
          "readOnly": true
        },
        "databaseName": {
          "type": "string",
          "description": "The name of the database available for restore."
        },
        "collectionNames": {
          "type": "array",
          "description": "The names of the collections available for restore.",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "RestorableSqlResourcesListResult": {
      "type": "object",
      "description": "The List operation response, that contains the restorable SQL resources.",
      "properties": {
        "value": {
          "type": "array",
          "description": "List of restorable SQL resources, including the database and collection names.",
          "items": {
            "$ref": "#/definitions/RestorableSqlResourcesGetResult"
          },
          "readOnly": true
        }
      }
    },
    "RestorableTableGetResult": {
      "type": "object",
      "description": "An Azure Cosmos DB Table event",
      "properties": {
        "properties": {
          "$ref": "#/definitions/RestorableTableProperties",
          "description": "The properties of a Table event.",
          "x-ms-client-flatten": true
        },
        "id": {
          "type": "string",
          "description": "The unique resource Identifier of the ARM resource.",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the ARM resource.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of Azure resource.",
          "readOnly": true
        }
      }
    },
    "RestorableTableProperties": {
      "type": "object",
      "description": "The properties of an Azure Cosmos DB Table event",
      "properties": {
        "resource": {
          "$ref": "#/definitions/RestorableTablePropertiesResource",
          "description": "The resource of an Azure Cosmos DB Table event"
        }
      }
    },
    "RestorableTablePropertiesResource": {
      "type": "object",
      "description": "The resource of an Azure Cosmos DB Table event",
      "properties": {
        "_rid": {
          "type": "string",
          "description": "A system generated property. A unique identifier.",
          "readOnly": true,
          "x-ms-client-name": "rid"
        },
        "operationType": {
          "$ref": "#/definitions/OperationType",
          "description": "The operation type of this table event.",
          "readOnly": true
        },
        "canUndelete": {
          "type": "string",
          "description": "A state of this table to identify if this table is restorable in same account.",
          "readOnly": true
        },
        "canUndeleteReason": {
          "type": "string",
          "description": "The reason why this table can not be restored in same account.",
          "readOnly": true
        },
        "eventTimestamp": {
          "type": "string",
          "description": "The time when this table event happened.",
          "readOnly": true
        },
        "ownerId": {
          "type": "string",
          "description": "The name of this Table.",
          "readOnly": true
        },
        "ownerResourceId": {
          "type": "string",
          "description": "The resource ID of this Table.",
          "readOnly": true
        }
      }
    },
    "RestorableTableResourcesGetResult": {
      "type": "object",
      "description": "Specific Databases to restore.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The unique resource identifier of the ARM resource.",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the Table.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of Azure resource.",
          "readOnly": true
        }
      }
    },
    "RestorableTableResourcesListResult": {
      "type": "object",
      "description": "List of restorable table names.",
      "properties": {
        "value": {
          "type": "array",
          "description": "List of restorable table names.",
          "items": {
            "$ref": "#/definitions/RestorableTableResourcesGetResult"
          },
          "readOnly": true
        }
      }
    },
    "RestorableTablesListResult": {
      "type": "object",
      "description": "The List operation response, that contains the Table events and their properties.",
      "properties": {
        "value": {
          "type": "array",
          "description": "List of Table events and their properties.",
          "items": {
            "$ref": "#/definitions/RestorableTableGetResult"
          },
          "readOnly": true
        }
      }
    },
    "RestoreMode": {
      "type": "string",
      "description": "Describes the mode of the restore.",
      "enum": [
        "PointInTime"
      ],
      "x-ms-enum": {
        "name": "RestoreMode",
        "modelAsString": true,
        "values": [
          {
            "name": "PointInTime",
            "value": "PointInTime"
          }
        ]
      }
    },
    "RestoreParameters": {
      "type": "object",
      "description": "Parameters to indicate the information about the restore.",
      "properties": {
        "restoreMode": {
          "$ref": "#/definitions/RestoreMode",
          "description": "Describes the mode of the restore."
        },
        "databasesToRestore": {
          "type": "array",
          "description": "List of specific databases available for restore.",
          "items": {
            "$ref": "#/definitions/DatabaseRestoreResource"
          },
          "x-ms-identifiers": []
        },
        "gremlinDatabasesToRestore": {
          "type": "array",
          "description": "List of specific gremlin databases available for restore.",
          "items": {
            "$ref": "#/definitions/GremlinDatabaseRestoreResource"
          },
          "x-ms-identifiers": []
        },
        "tablesToRestore": {
          "type": "array",
          "description": "List of specific tables available for restore.",
          "items": {
            "type": "string"
          }
        },
        "sourceBackupLocation": {
          "type": "string",
          "description": "The source backup location for restore."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/RestoreParametersBase"
        }
      ]
    },
    "RestoreParametersBase": {
      "type": "object",
      "description": "Parameters to indicate the information about the restore.",
      "properties": {
        "restoreSource": {
          "type": "string",
          "description": "The id of the restorable database account from which the restore has to be initiated. For example: /subscriptions/{subscriptionId}/providers/Microsoft.DocumentDB/locations/{location}/restorableDatabaseAccounts/{restorableDatabaseAccountName}"
        },
        "restoreTimestampInUtc": {
          "type": "string",
          "format": "date-time",
          "description": "Time to which the account has to be restored (ISO-8601 format)."
        },
        "restoreWithTtlDisabled": {
          "type": "boolean",
          "description": "Specifies whether the restored account will have Time-To-Live disabled upon the successful restore."
        }
      }
    },
    "RetrieveThroughputParameters": {
      "type": "object",
      "description": "Cosmos DB retrieve throughput parameters object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/RetrieveThroughputProperties",
          "description": "Properties to retrieve throughput parameters object",
          "x-ms-client-flatten": true
        }
      },
      "required": [
        "properties"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/ARMResourceProperties"
        }
      ]
    },
    "RetrieveThroughputProperties": {
      "type": "object",
      "description": "Properties to retrieve throughput for Azure Cosmos DB resource.",
      "properties": {
        "resource": {
          "$ref": "#/definitions/RetrieveThroughputPropertiesResource",
          "description": "The standard JSON format of a resource throughput"
        }
      },
      "required": [
        "resource"
      ]
    },
    "RetrieveThroughputPropertiesResource": {
      "type": "object",
      "description": "Resource to retrieve throughput information for Cosmos DB resource",
      "properties": {
        "physicalPartitionIds": {
          "type": "array",
          "description": "Array of PhysicalPartitionId objects.",
          "items": {
            "$ref": "#/definitions/PhysicalPartitionId"
          }
        }
      },
      "required": [
        "physicalPartitionIds"
      ]
    },
    "Role": {
      "type": "object",
      "description": "The set of roles permitted through this Role Definition.",
      "properties": {
        "db": {
          "type": "string",
          "description": "The database name the role is applied."
        },
        "role": {
          "type": "string",
          "description": "The role name."
        }
      }
    },
    "RoleDefinitionType": {
      "type": "string",
      "description": "Indicates whether the Role Definition was built-in or user created.",
      "enum": [
        "BuiltInRole",
        "CustomRole"
      ],
      "x-ms-enum": {
        "name": "RoleDefinitionType",
        "modelAsString": false
      }
    },
    "ScheduledEventStrategy": {
      "type": "string",
      "description": "How the nodes in the cluster react to scheduled events",
      "enum": [
        "Ignore",
        "StopAny",
        "StopByRack"
      ],
      "x-ms-enum": {
        "name": "ScheduledEventStrategy",
        "modelAsString": true,
        "values": [
          {
            "name": "Ignore",
            "value": "Ignore"
          },
          {
            "name": "StopAny",
            "value": "StopAny"
          },
          {
            "name": "StopByRack",
            "value": "StopByRack"
          }
        ]
      }
    },
    "SeedNode": {
      "type": "object",
      "properties": {
        "ipAddress": {
          "type": "string",
          "description": "IP address of this seed node."
        }
      }
    },
    "ServerVersion": {
      "type": "string",
      "description": "Describes the version of the MongoDB account.",
      "enum": [
        "3.2",
        "3.6",
        "4.0",
        "4.2",
        "5.0",
        "6.0",
        "7.0"
      ],
      "x-ms-enum": {
        "name": "ServerVersion",
        "modelAsString": true,
        "values": [
          {
            "name": "Three2",
            "value": "3.2"
          },
          {
            "name": "Three6",
            "value": "3.6"
          },
          {
            "name": "Four0",
            "value": "4.0"
          },
          {
            "name": "Four2",
            "value": "4.2"
          },
          {
            "name": "Five0",
            "value": "5.0"
          },
          {
            "name": "Six0",
            "value": "6.0"
          },
          {
            "name": "Seven0",
            "value": "7.0"
          }
        ]
      }
    },
    "ServiceResource": {
      "type": "object",
      "description": "Properties for the database account.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ServiceResourceProperties",
          "description": "Services response resource."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "ServiceResourceCreateUpdateParameters": {
      "type": "object",
      "description": "Parameters for Create or Update request for ServiceResource",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ServiceResourceCreateUpdateProperties",
          "description": "Properties in ServiceResourceCreateUpdateParameters."
        }
      }
    },
    "ServiceResourceCreateUpdateProperties": {
      "type": "object",
      "description": "Properties in ServiceResourceCreateUpdateParameters.",
      "properties": {
        "instanceSize": {
          "$ref": "#/definitions/ServiceSize",
          "description": "Instance type for the service."
        },
        "instanceCount": {
          "type": "integer",
          "format": "int32",
          "description": "Instance count for the service."
        },
        "serviceType": {
          "$ref": "#/definitions/ServiceType",
          "description": "ServiceType for the service."
        }
      },
      "discriminator": "serviceType",
      "required": [
        "serviceType"
      ]
    },
    "ServiceResourceListResult": {
      "type": "object",
      "description": "The List operation response, that contains the Service Resource and their properties.",
      "properties": {
        "value": {
          "type": "array",
          "description": "List of Service Resource and their properties.",
          "items": {
            "$ref": "#/definitions/ServiceResource"
          },
          "readOnly": true
        }
      }
    },
    "ServiceResourceProperties": {
      "type": "object",
      "description": "Services response resource.",
      "properties": {
        "creationTime": {
          "type": "string",
          "format": "date-time",
          "description": "Time of the last state change (ISO-8601 format).",
          "readOnly": true
        },
        "instanceSize": {
          "$ref": "#/definitions/ServiceSize",
          "description": "Instance type for the service."
        },
        "instanceCount": {
          "type": "integer",
          "format": "int32",
          "description": "Instance count for the service."
        },
        "serviceType": {
          "$ref": "#/definitions/ServiceType",
          "description": "ServiceType for the service."
        },
        "status": {
          "$ref": "#/definitions/ServiceStatus",
          "description": "Describes the status of a service.",
          "readOnly": true
        }
      },
      "discriminator": "serviceType",
      "required": [
        "serviceType"
      ],
      "additionalProperties": {}
    },
    "ServiceSize": {
      "type": "string",
      "description": "Instance type for the service.",
      "enum": [
        "Cosmos.D4s",
        "Cosmos.D8s",
        "Cosmos.D16s"
      ],
      "x-ms-enum": {
        "name": "ServiceSize",
        "modelAsString": true,
        "values": [
          {
            "name": "CosmosD4S",
            "value": "Cosmos.D4s"
          },
          {
            "name": "CosmosD8S",
            "value": "Cosmos.D8s"
          },
          {
            "name": "CosmosD16S",
            "value": "Cosmos.D16s"
          }
        ]
      }
    },
    "ServiceStatus": {
      "type": "string",
      "description": "Describes the status of a service.",
      "enum": [
        "Creating",
        "Running",
        "Updating",
        "Deleting",
        "Error",
        "Stopped"
      ],
      "x-ms-enum": {
        "name": "ServiceStatus",
        "modelAsString": true,
        "values": [
          {
            "name": "Creating",
            "value": "Creating"
          },
          {
            "name": "Running",
            "value": "Running"
          },
          {
            "name": "Updating",
            "value": "Updating"
          },
          {
            "name": "Deleting",
            "value": "Deleting"
          },
          {
            "name": "Error",
            "value": "Error"
          },
          {
            "name": "Stopped",
            "value": "Stopped"
          }
        ]
      }
    },
    "ServiceType": {
      "type": "string",
      "description": "ServiceType for the service.",
      "enum": [
        "SqlDedicatedGateway",
        "DataTransfer",
        "GraphAPICompute",
        "MaterializedViewsBuilder"
      ],
      "x-ms-enum": {
        "name": "ServiceType",
        "modelAsString": true,
        "values": [
          {
            "name": "SqlDedicatedGateway",
            "value": "SqlDedicatedGateway"
          },
          {
            "name": "DataTransfer",
            "value": "DataTransfer"
          },
          {
            "name": "GraphAPICompute",
            "value": "GraphAPICompute"
          },
          {
            "name": "MaterializedViewsBuilder",
            "value": "MaterializedViewsBuilder"
          }
        ]
      }
    },
    "SpatialSpec": {
      "type": "object",
      "properties": {
        "path": {
          "type": "string",
          "description": "The path for which the indexing behavior applies to. Index paths typically start with root and end with wildcard (/path/*)"
        },
        "types": {
          "type": "array",
          "description": "List of path's spatial type",
          "items": {
            "$ref": "#/definitions/SpatialType"
          }
        }
      }
    },
    "SpatialType": {
      "type": "string",
      "description": "Indicates the spatial type of index.",
      "enum": [
        "Point",
        "LineString",
        "Polygon",
        "MultiPolygon"
      ],
      "x-ms-enum": {
        "name": "SpatialType",
        "modelAsString": true,
        "values": [
          {
            "name": "Point",
            "value": "Point"
          },
          {
            "name": "LineString",
            "value": "LineString"
          },
          {
            "name": "Polygon",
            "value": "Polygon"
          },
          {
            "name": "MultiPolygon",
            "value": "MultiPolygon"
          }
        ]
      }
    },
    "SqlContainerCreateUpdateParameters": {
      "type": "object",
      "description": "Parameters to create and update Cosmos DB container.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/SqlContainerCreateUpdateProperties",
          "description": "Properties to create and update Azure Cosmos DB container.",
          "x-ms-client-flatten": true
        }
      },
      "required": [
        "properties"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/ARMResourceProperties"
        }
      ]
    },
    "SqlContainerCreateUpdateProperties": {
      "type": "object",
      "description": "Properties to create and update Azure Cosmos DB container.",
      "properties": {
        "resource": {
          "$ref": "#/definitions/SqlContainerResource",
          "description": "The standard JSON format of a container"
        },
        "options": {
          "$ref": "#/definitions/CreateUpdateOptions",
          "description": "A key-value pair of options to be applied for the request. This corresponds to the headers sent with the request."
        }
      },
      "required": [
        "resource"
      ]
    },
    "SqlContainerGetProperties": {
      "type": "object",
      "description": "The properties of an Azure Cosmos DB container",
      "properties": {
        "resource": {
          "$ref": "#/definitions/SqlContainerGetPropertiesResource"
        },
        "options": {
          "$ref": "#/definitions/SqlContainerGetPropertiesOptions"
        }
      }
    },
    "SqlContainerGetPropertiesOptions": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/OptionsResource"
        }
      ]
    },
    "SqlContainerGetPropertiesResource": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Name of the Cosmos DB SQL container"
        },
        "indexingPolicy": {
          "$ref": "#/definitions/IndexingPolicy",
          "description": "The configuration of the indexing policy. By default, the indexing is automatic for all document paths within the container"
        },
        "partitionKey": {
          "$ref": "#/definitions/ContainerPartitionKey",
          "description": "The configuration of the partition key to be used for partitioning data into multiple partitions"
        },
        "defaultTtl": {
          "type": "integer",
          "format": "int32",
          "description": "Default time to live"
        },
        "uniqueKeyPolicy": {
          "$ref": "#/definitions/UniqueKeyPolicy",
          "description": "The unique key policy configuration for specifying uniqueness constraints on documents in the collection in the Azure Cosmos DB service."
        },
        "conflictResolutionPolicy": {
          "$ref": "#/definitions/ConflictResolutionPolicy",
          "description": "The conflict resolution policy for the container."
        },
        "clientEncryptionPolicy": {
          "$ref": "#/definitions/ClientEncryptionPolicy",
          "description": "The client encryption policy for the container."
        },
        "analyticalStorageTtl": {
          "type": "integer",
          "format": "int64",
          "description": "Analytical TTL."
        },
        "restoreParameters": {
          "$ref": "#/definitions/ResourceRestoreParameters",
          "description": "Parameters to indicate the information about the restore"
        },
        "createMode": {
          "type": "string",
          "description": "Enum to indicate the mode of resource creation.",
          "default": "Default",
          "enum": [
            "Default",
            "Restore"
          ],
          "x-ms-enum": {
            "name": "CreateMode",
            "modelAsString": true,
            "values": [
              {
                "name": "Default",
                "value": "Default"
              },
              {
                "name": "Restore",
                "value": "Restore"
              }
            ]
          }
        },
        "materializedViewDefinition": {
          "$ref": "#/definitions/MaterializedViewDefinition",
          "description": "The configuration for defining Materialized Views. This must be specified only for creating a Materialized View container."
        },
        "materializedViews": {
          "type": "array",
          "description": "Materialized Views defined on the container.",
          "items": {
            "$ref": "#/definitions/MaterializedViewDetails"
          }
        },
        "computedProperties": {
          "type": "array",
          "description": "List of computed properties",
          "items": {
            "$ref": "#/definitions/ComputedProperty"
          }
        },
        "vectorEmbeddingPolicy": {
          "$ref": "#/definitions/VectorEmbeddingPolicy",
          "description": "The vector embedding policy for the container."
        },
        "fullTextPolicy": {
          "$ref": "#/definitions/FullTextPolicy",
          "description": "The FullText policy for the container."
        },
        "_rid": {
          "type": "string",
          "description": "A system generated property. A unique identifier.",
          "readOnly": true,
          "x-ms-client-name": "rid"
        },
        "_ts": {
          "type": "number",
          "format": "float",
          "description": "A system generated property that denotes the last updated timestamp of the resource.",
          "readOnly": true,
          "x-ms-client-name": "ts"
        },
        "_etag": {
          "type": "string",
          "description": "A system generated property representing the resource etag required for optimistic concurrency control.",
          "readOnly": true,
          "x-ms-client-name": "etag"
        }
      },
      "required": [
        "id"
      ]
    },
    "SqlContainerGetResults": {
      "type": "object",
      "description": "An Azure Cosmos DB container.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/SqlContainerGetProperties",
          "description": "The properties of an Azure Cosmos DB container",
          "x-ms-client-flatten": true
        },
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "location": {
          "type": "string",
          "description": "The geo-location where the resource lives",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "identity": {
          "$ref": "#/definitions/ManagedServiceIdentity",
          "description": "Identity for the resource."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/Resource"
        }
      ]
    },
    "SqlContainerListResult": {
      "type": "object",
      "description": "The List operation response, that contains the containers and their properties.",
      "properties": {
        "value": {
          "type": "array",
          "description": "List of containers and their properties.",
          "items": {
            "$ref": "#/definitions/SqlContainerGetResults"
          },
          "readOnly": true
        }
      }
    },
    "SqlContainerResource": {
      "type": "object",
      "description": "Cosmos DB SQL container resource object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Name of the Cosmos DB SQL container"
        },
        "indexingPolicy": {
          "$ref": "#/definitions/IndexingPolicy",
          "description": "The configuration of the indexing policy. By default, the indexing is automatic for all document paths within the container"
        },
        "partitionKey": {
          "$ref": "#/definitions/ContainerPartitionKey",
          "description": "The configuration of the partition key to be used for partitioning data into multiple partitions"
        },
        "defaultTtl": {
          "type": "integer",
          "format": "int32",
          "description": "Default time to live"
        },
        "uniqueKeyPolicy": {
          "$ref": "#/definitions/UniqueKeyPolicy",
          "description": "The unique key policy configuration for specifying uniqueness constraints on documents in the collection in the Azure Cosmos DB service."
        },
        "conflictResolutionPolicy": {
          "$ref": "#/definitions/ConflictResolutionPolicy",
          "description": "The conflict resolution policy for the container."
        },
        "clientEncryptionPolicy": {
          "$ref": "#/definitions/ClientEncryptionPolicy",
          "description": "The client encryption policy for the container."
        },
        "analyticalStorageTtl": {
          "type": "integer",
          "format": "int64",
          "description": "Analytical TTL."
        },
        "restoreParameters": {
          "$ref": "#/definitions/ResourceRestoreParameters",
          "description": "Parameters to indicate the information about the restore"
        },
        "createMode": {
          "type": "string",
          "description": "Enum to indicate the mode of resource creation.",
          "default": "Default",
          "enum": [
            "Default",
            "Restore"
          ],
          "x-ms-enum": {
            "name": "CreateMode",
            "modelAsString": true,
            "values": [
              {
                "name": "Default",
                "value": "Default"
              },
              {
                "name": "Restore",
                "value": "Restore"
              }
            ]
          }
        },
        "materializedViewDefinition": {
          "$ref": "#/definitions/MaterializedViewDefinition",
          "description": "The configuration for defining Materialized Views. This must be specified only for creating a Materialized View container."
        },
        "materializedViews": {
          "type": "array",
          "description": "Materialized Views defined on the container.",
          "items": {
            "$ref": "#/definitions/MaterializedViewDetails"
          }
        },
        "computedProperties": {
          "type": "array",
          "description": "List of computed properties",
          "items": {
            "$ref": "#/definitions/ComputedProperty"
          }
        },
        "vectorEmbeddingPolicy": {
          "$ref": "#/definitions/VectorEmbeddingPolicy",
          "description": "The vector embedding policy for the container."
        },
        "fullTextPolicy": {
          "$ref": "#/definitions/FullTextPolicy",
          "description": "The FullText policy for the container."
        }
      },
      "required": [
        "id"
      ]
    },
    "SqlDatabaseCreateUpdateParameters": {
      "type": "object",
      "description": "Parameters to create and update Cosmos DB SQL database.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/SqlDatabaseCreateUpdateProperties",
          "description": "Properties to create and update Azure Cosmos DB SQL database.",
          "x-ms-client-flatten": true
        }
      },
      "required": [
        "properties"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/ARMResourceProperties"
        }
      ]
    },
    "SqlDatabaseCreateUpdateProperties": {
      "type": "object",
      "description": "Properties to create and update Azure Cosmos DB SQL database.",
      "properties": {
        "resource": {
          "$ref": "#/definitions/SqlDatabaseResource",
          "description": "The standard JSON format of a SQL database"
        },
        "options": {
          "$ref": "#/definitions/CreateUpdateOptions",
          "description": "A key-value pair of options to be applied for the request. This corresponds to the headers sent with the request."
        }
      },
      "required": [
        "resource"
      ]
    },
    "SqlDatabaseGetProperties": {
      "type": "object",
      "description": "The properties of an Azure Cosmos DB SQL database",
      "properties": {
        "resource": {
          "$ref": "#/definitions/SqlDatabaseGetPropertiesResource"
        },
        "options": {
          "$ref": "#/definitions/SqlDatabaseGetPropertiesOptions"
        }
      }
    },
    "SqlDatabaseGetPropertiesOptions": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/OptionsResource"
        }
      ]
    },
    "SqlDatabaseGetPropertiesResource": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Name of the Cosmos DB SQL database"
        },
        "restoreParameters": {
          "$ref": "#/definitions/ResourceRestoreParameters",
          "description": "Parameters to indicate the information about the restore"
        },
        "createMode": {
          "type": "string",
          "description": "Enum to indicate the mode of resource creation.",
          "default": "Default",
          "enum": [
            "Default",
            "Restore"
          ],
          "x-ms-enum": {
            "name": "CreateMode",
            "modelAsString": true,
            "values": [
              {
                "name": "Default",
                "value": "Default"
              },
              {
                "name": "Restore",
                "value": "Restore"
              }
            ]
          }
        },
        "_rid": {
          "type": "string",
          "description": "A system generated property. A unique identifier.",
          "readOnly": true,
          "x-ms-client-name": "rid"
        },
        "_ts": {
          "type": "number",
          "format": "float",
          "description": "A system generated property that denotes the last updated timestamp of the resource.",
          "readOnly": true,
          "x-ms-client-name": "ts"
        },
        "_etag": {
          "type": "string",
          "description": "A system generated property representing the resource etag required for optimistic concurrency control.",
          "readOnly": true,
          "x-ms-client-name": "etag"
        },
        "_colls": {
          "type": "string",
          "description": "A system generated property that specified the addressable path of the collections resource.",
          "x-ms-client-name": "colls"
        },
        "_users": {
          "type": "string",
          "description": "A system generated property that specifies the addressable path of the users resource.",
          "x-ms-client-name": "users"
        }
      },
      "required": [
        "id"
      ]
    },
    "SqlDatabaseGetResults": {
      "type": "object",
      "description": "An Azure Cosmos DB SQL database.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/SqlDatabaseGetProperties",
          "description": "The properties of an Azure Cosmos DB SQL database",
          "x-ms-client-flatten": true
        },
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "location": {
          "type": "string",
          "description": "The geo-location where the resource lives",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "identity": {
          "$ref": "#/definitions/ManagedServiceIdentity",
          "description": "Identity for the resource."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/Resource"
        }
      ]
    },
    "SqlDatabaseListResult": {
      "type": "object",
      "description": "The List operation response, that contains the SQL databases and their properties.",
      "properties": {
        "value": {
          "type": "array",
          "description": "List of SQL databases and their properties.",
          "items": {
            "$ref": "#/definitions/SqlDatabaseGetResults"
          },
          "readOnly": true
        }
      }
    },
    "SqlDatabaseResource": {
      "type": "object",
      "description": "Cosmos DB SQL database resource object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Name of the Cosmos DB SQL database"
        },
        "restoreParameters": {
          "$ref": "#/definitions/ResourceRestoreParameters",
          "description": "Parameters to indicate the information about the restore"
        },
        "createMode": {
          "type": "string",
          "description": "Enum to indicate the mode of resource creation.",
          "default": "Default",
          "enum": [
            "Default",
            "Restore"
          ],
          "x-ms-enum": {
            "name": "CreateMode",
            "modelAsString": true,
            "values": [
              {
                "name": "Default",
                "value": "Default"
              },
              {
                "name": "Restore",
                "value": "Restore"
              }
            ]
          }
        }
      },
      "required": [
        "id"
      ]
    },
    "SqlDedicatedGatewayRegionalServiceResource": {
      "type": "object",
      "description": "Resource for a regional service location.",
      "properties": {
        "sqlDedicatedGatewayEndpoint": {
          "type": "string",
          "description": "The regional endpoint for SqlDedicatedGateway.",
          "readOnly": true
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/RegionalServiceResource"
        }
      ]
    },
    "SqlDedicatedGatewayServiceResourceCreateUpdateProperties": {
      "type": "object",
      "description": "Properties for Create or Update request for SqlDedicatedGatewayServiceResource",
      "properties": {
        "dedicatedGatewayType": {
          "$ref": "#/definitions/DedicatedGatewayType",
          "description": "DedicatedGatewayType for the service."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ServiceResourceCreateUpdateProperties"
        }
      ],
      "x-ms-discriminator-value": "SqlDedicatedGateway"
    },
    "SqlDedicatedGatewayServiceResourceProperties": {
      "type": "object",
      "description": "Properties for SqlDedicatedGatewayServiceResource.",
      "properties": {
        "sqlDedicatedGatewayEndpoint": {
          "type": "string",
          "description": "SqlDedicatedGateway endpoint for the service."
        },
        "dedicatedGatewayType": {
          "$ref": "#/definitions/DedicatedGatewayType",
          "description": "DedicatedGatewayType for the service."
        },
        "locations": {
          "type": "array",
          "description": "An array that contains all of the locations for the service.",
          "items": {
            "$ref": "#/definitions/SqlDedicatedGatewayRegionalServiceResource"
          },
          "readOnly": true
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ServiceResourceProperties"
        }
      ],
      "x-ms-discriminator-value": "SqlDedicatedGateway"
    },
    "SqlRoleAssignmentCreateUpdateParameters": {
      "type": "object",
      "description": "Parameters to create and update an Azure Cosmos DB SQL Role Assignment.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/SqlRoleAssignmentResource",
          "description": "Properties to create and update an Azure Cosmos DB SQL Role Assignment.",
          "x-ms-client-flatten": true
        }
      }
    },
    "SqlRoleAssignmentGetResults": {
      "type": "object",
      "description": "An Azure Cosmos DB Role Assignment",
      "properties": {
        "properties": {
          "$ref": "#/definitions/SqlRoleAssignmentResource",
          "description": "Properties related to the Role Assignment.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "SqlRoleAssignmentListResult": {
      "type": "object",
      "description": "The relevant Role Assignments.",
      "properties": {
        "value": {
          "type": "array",
          "description": "List of Role Assignments and their properties",
          "items": {
            "$ref": "#/definitions/SqlRoleAssignmentGetResults"
          },
          "readOnly": true
        }
      }
    },
    "SqlRoleAssignmentResource": {
      "type": "object",
      "description": "Azure Cosmos DB SQL Role Assignment resource object.",
      "properties": {
        "roleDefinitionId": {
          "type": "string",
          "description": "The unique identifier for the associated Role Definition."
        },
        "scope": {
          "type": "string",
          "description": "The data plane resource path for which access is being granted through this Role Assignment."
        },
        "principalId": {
          "type": "string",
          "description": "The unique identifier for the associated AAD principal in the AAD graph to which access is being granted through this Role Assignment. Tenant ID for the principal is inferred using the tenant associated with the subscription."
        }
      }
    },
    "SqlRoleDefinitionCreateUpdateParameters": {
      "type": "object",
      "description": "Parameters to create and update an Azure Cosmos DB SQL Role Definition.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/SqlRoleDefinitionResource",
          "description": "Properties to create and update an Azure Cosmos DB SQL Role Definition.",
          "x-ms-client-flatten": true
        }
      }
    },
    "SqlRoleDefinitionGetResults": {
      "type": "object",
      "description": "An Azure Cosmos DB SQL Role Definition.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/SqlRoleDefinitionResource",
          "description": "Properties related to the Role Definition.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "SqlRoleDefinitionListResult": {
      "type": "object",
      "description": "The relevant Role Definitions.",
      "properties": {
        "value": {
          "type": "array",
          "description": "List of Role Definitions and their properties.",
          "items": {
            "$ref": "#/definitions/SqlRoleDefinitionGetResults"
          },
          "readOnly": true
        }
      }
    },
    "SqlRoleDefinitionResource": {
      "type": "object",
      "description": "Azure Cosmos DB SQL Role Definition resource object.",
      "properties": {
        "roleName": {
          "type": "string",
          "description": "A user-friendly name for the Role Definition. Must be unique for the database account."
        },
        "type": {
          "$ref": "#/definitions/RoleDefinitionType",
          "description": "Indicates whether the Role Definition was built-in or user created."
        },
        "assignableScopes": {
          "type": "array",
          "description": "A set of fully qualified Scopes at or below which Role Assignments may be created using this Role Definition. This will allow application of this Role Definition on the entire database account or any underlying Database / Collection. Must have at least one element. Scopes higher than Database account are not enforceable as assignable Scopes. Note that resources referenced in assignable Scopes need not exist.",
          "items": {
            "type": "string"
          },
          "x-ms-identifiers": []
        },
        "permissions": {
          "type": "array",
          "description": "The set of operations allowed through this Role Definition.",
          "items": {
            "$ref": "#/definitions/Permission"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "SqlStoredProcedureCreateUpdateParameters": {
      "type": "object",
      "description": "Parameters to create and update Cosmos DB storedProcedure.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/SqlStoredProcedureCreateUpdateProperties",
          "description": "Properties to create and update Azure Cosmos DB storedProcedure.",
          "x-ms-client-flatten": true
        }
      },
      "required": [
        "properties"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/ARMResourceProperties"
        }
      ]
    },
    "SqlStoredProcedureCreateUpdateProperties": {
      "type": "object",
      "description": "Properties to create and update Azure Cosmos DB storedProcedure.",
      "properties": {
        "resource": {
          "$ref": "#/definitions/SqlStoredProcedureResource",
          "description": "The standard JSON format of a storedProcedure"
        },
        "options": {
          "$ref": "#/definitions/CreateUpdateOptions",
          "description": "A key-value pair of options to be applied for the request. This corresponds to the headers sent with the request."
        }
      },
      "required": [
        "resource"
      ]
    },
    "SqlStoredProcedureGetProperties": {
      "type": "object",
      "description": "The properties of an Azure Cosmos DB StoredProcedure",
      "properties": {
        "resource": {
          "$ref": "#/definitions/SqlStoredProcedureGetPropertiesResource"
        }
      }
    },
    "SqlStoredProcedureGetPropertiesResource": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Name of the Cosmos DB SQL storedProcedure"
        },
        "body": {
          "type": "string",
          "description": "Body of the Stored Procedure"
        },
        "_rid": {
          "type": "string",
          "description": "A system generated property. A unique identifier.",
          "readOnly": true,
          "x-ms-client-name": "rid"
        },
        "_ts": {
          "type": "number",
          "format": "float",
          "description": "A system generated property that denotes the last updated timestamp of the resource.",
          "readOnly": true,
          "x-ms-client-name": "ts"
        },
        "_etag": {
          "type": "string",
          "description": "A system generated property representing the resource etag required for optimistic concurrency control.",
          "readOnly": true,
          "x-ms-client-name": "etag"
        }
      },
      "required": [
        "id"
      ]
    },
    "SqlStoredProcedureGetResults": {
      "type": "object",
      "description": "An Azure Cosmos DB storedProcedure.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/SqlStoredProcedureGetProperties",
          "description": "The properties of an Azure Cosmos DB storedProcedure",
          "x-ms-client-flatten": true
        },
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "location": {
          "type": "string",
          "description": "The geo-location where the resource lives",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "identity": {
          "$ref": "#/definitions/ManagedServiceIdentity",
          "description": "Identity for the resource."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/Resource"
        }
      ]
    },
    "SqlStoredProcedureListResult": {
      "type": "object",
      "description": "The List operation response, that contains the storedProcedures and their properties.",
      "properties": {
        "value": {
          "type": "array",
          "description": "List of storedProcedures and their properties.",
          "items": {
            "$ref": "#/definitions/SqlStoredProcedureGetResults"
          },
          "readOnly": true
        }
      }
    },
    "SqlStoredProcedureResource": {
      "type": "object",
      "description": "Cosmos DB SQL storedProcedure resource object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Name of the Cosmos DB SQL storedProcedure"
        },
        "body": {
          "type": "string",
          "description": "Body of the Stored Procedure"
        }
      },
      "required": [
        "id"
      ]
    },
    "SqlTriggerCreateUpdateParameters": {
      "type": "object",
      "description": "Parameters to create and update Cosmos DB trigger.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/SqlTriggerCreateUpdateProperties",
          "description": "Properties to create and update Azure Cosmos DB trigger.",
          "x-ms-client-flatten": true
        }
      },
      "required": [
        "properties"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/ARMResourceProperties"
        }
      ]
    },
    "SqlTriggerCreateUpdateProperties": {
      "type": "object",
      "description": "Properties to create and update Azure Cosmos DB trigger.",
      "properties": {
        "resource": {
          "$ref": "#/definitions/SqlTriggerResource",
          "description": "The standard JSON format of a trigger"
        },
        "options": {
          "$ref": "#/definitions/CreateUpdateOptions",
          "description": "A key-value pair of options to be applied for the request. This corresponds to the headers sent with the request."
        }
      },
      "required": [
        "resource"
      ]
    },
    "SqlTriggerGetProperties": {
      "type": "object",
      "description": "The properties of an Azure Cosmos DB trigger",
      "properties": {
        "resource": {
          "$ref": "#/definitions/SqlTriggerGetPropertiesResource"
        }
      }
    },
    "SqlTriggerGetPropertiesResource": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Name of the Cosmos DB SQL trigger"
        },
        "body": {
          "type": "string",
          "description": "Body of the Trigger"
        },
        "triggerType": {
          "$ref": "#/definitions/TriggerType",
          "description": "Type of the Trigger"
        },
        "triggerOperation": {
          "$ref": "#/definitions/TriggerOperation",
          "description": "The operation the trigger is associated with"
        },
        "_rid": {
          "type": "string",
          "description": "A system generated property. A unique identifier.",
          "readOnly": true,
          "x-ms-client-name": "rid"
        },
        "_ts": {
          "type": "number",
          "format": "float",
          "description": "A system generated property that denotes the last updated timestamp of the resource.",
          "readOnly": true,
          "x-ms-client-name": "ts"
        },
        "_etag": {
          "type": "string",
          "description": "A system generated property representing the resource etag required for optimistic concurrency control.",
          "readOnly": true,
          "x-ms-client-name": "etag"
        }
      },
      "required": [
        "id"
      ]
    },
    "SqlTriggerGetResults": {
      "type": "object",
      "description": "An Azure Cosmos DB trigger.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/SqlTriggerGetProperties",
          "description": "The properties of an Azure Cosmos DB trigger",
          "x-ms-client-flatten": true
        },
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "location": {
          "type": "string",
          "description": "The geo-location where the resource lives",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "identity": {
          "$ref": "#/definitions/ManagedServiceIdentity",
          "description": "Identity for the resource."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/Resource"
        }
      ]
    },
    "SqlTriggerListResult": {
      "type": "object",
      "description": "The List operation response, that contains the triggers and their properties.",
      "properties": {
        "value": {
          "type": "array",
          "description": "List of triggers and their properties.",
          "items": {
            "$ref": "#/definitions/SqlTriggerGetResults"
          },
          "readOnly": true
        }
      }
    },
    "SqlTriggerResource": {
      "type": "object",
      "description": "Cosmos DB SQL trigger resource object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Name of the Cosmos DB SQL trigger"
        },
        "body": {
          "type": "string",
          "description": "Body of the Trigger"
        },
        "triggerType": {
          "$ref": "#/definitions/TriggerType",
          "description": "Type of the Trigger"
        },
        "triggerOperation": {
          "$ref": "#/definitions/TriggerOperation",
          "description": "The operation the trigger is associated with"
        }
      },
      "required": [
        "id"
      ]
    },
    "SqlUserDefinedFunctionCreateUpdateParameters": {
      "type": "object",
      "description": "Parameters to create and update Cosmos DB userDefinedFunction.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/SqlUserDefinedFunctionCreateUpdateProperties",
          "description": "Properties to create and update Azure Cosmos DB userDefinedFunction.",
          "x-ms-client-flatten": true
        }
      },
      "required": [
        "properties"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/ARMResourceProperties"
        }
      ]
    },
    "SqlUserDefinedFunctionCreateUpdateProperties": {
      "type": "object",
      "description": "Properties to create and update Azure Cosmos DB userDefinedFunction.",
      "properties": {
        "resource": {
          "$ref": "#/definitions/SqlUserDefinedFunctionResource",
          "description": "The standard JSON format of a userDefinedFunction"
        },
        "options": {
          "$ref": "#/definitions/CreateUpdateOptions",
          "description": "A key-value pair of options to be applied for the request. This corresponds to the headers sent with the request."
        }
      },
      "required": [
        "resource"
      ]
    },
    "SqlUserDefinedFunctionGetProperties": {
      "type": "object",
      "description": "The properties of an Azure Cosmos DB userDefinedFunction",
      "properties": {
        "resource": {
          "$ref": "#/definitions/SqlUserDefinedFunctionGetPropertiesResource"
        }
      }
    },
    "SqlUserDefinedFunctionGetPropertiesResource": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Name of the Cosmos DB SQL userDefinedFunction"
        },
        "body": {
          "type": "string",
          "description": "Body of the User Defined Function"
        },
        "_rid": {
          "type": "string",
          "description": "A system generated property. A unique identifier.",
          "readOnly": true,
          "x-ms-client-name": "rid"
        },
        "_ts": {
          "type": "number",
          "format": "float",
          "description": "A system generated property that denotes the last updated timestamp of the resource.",
          "readOnly": true,
          "x-ms-client-name": "ts"
        },
        "_etag": {
          "type": "string",
          "description": "A system generated property representing the resource etag required for optimistic concurrency control.",
          "readOnly": true,
          "x-ms-client-name": "etag"
        }
      },
      "required": [
        "id"
      ]
    },
    "SqlUserDefinedFunctionGetResults": {
      "type": "object",
      "description": "An Azure Cosmos DB userDefinedFunction.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/SqlUserDefinedFunctionGetProperties",
          "description": "The properties of an Azure Cosmos DB userDefinedFunction",
          "x-ms-client-flatten": true
        },
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "location": {
          "type": "string",
          "description": "The geo-location where the resource lives",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "identity": {
          "$ref": "#/definitions/ManagedServiceIdentity",
          "description": "Identity for the resource."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/Resource"
        }
      ]
    },
    "SqlUserDefinedFunctionListResult": {
      "type": "object",
      "description": "The List operation response, that contains the userDefinedFunctions and their properties.",
      "properties": {
        "value": {
          "type": "array",
          "description": "List of userDefinedFunctions and their properties.",
          "items": {
            "$ref": "#/definitions/SqlUserDefinedFunctionGetResults"
          },
          "readOnly": true
        }
      }
    },
    "SqlUserDefinedFunctionResource": {
      "type": "object",
      "description": "Cosmos DB SQL userDefinedFunction resource object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Name of the Cosmos DB SQL userDefinedFunction"
        },
        "body": {
          "type": "string",
          "description": "Body of the User Defined Function"
        }
      },
      "required": [
        "id"
      ]
    },
    "Status": {
      "type": "string",
      "description": "Enum to indicate current buildout status of the region.",
      "enum": [
        "Uninitialized",
        "Initializing",
        "InternallyReady",
        "Online",
        "Deleting",
        "Succeeded",
        "Failed",
        "Canceled",
        "Updating",
        "Creating"
      ],
      "x-ms-enum": {
        "name": "Status",
        "modelAsString": true,
        "values": [
          {
            "name": "Uninitialized",
            "value": "Uninitialized"
          },
          {
            "name": "Initializing",
            "value": "Initializing"
          },
          {
            "name": "InternallyReady",
            "value": "InternallyReady"
          },
          {
            "name": "Online",
            "value": "Online"
          },
          {
            "name": "Deleting",
            "value": "Deleting"
          },
          {
            "name": "Succeeded",
            "value": "Succeeded"
          },
          {
            "name": "Failed",
            "value": "Failed"
          },
          {
            "name": "Canceled",
            "value": "Canceled"
          },
          {
            "name": "Updating",
            "value": "Updating"
          },
          {
            "name": "Creating",
            "value": "Creating"
          }
        ]
      }
    },
    "SupportedActions": {
      "type": "string",
      "description": "Indicates whether what action to take for the Chaos Fault.",
      "enum": [
        "Enable",
        "Disable"
      ],
      "x-ms-enum": {
        "name": "SupportedActions",
        "modelAsString": false
      }
    },
    "TableCreateUpdateParameters": {
      "type": "object",
      "description": "Parameters to create and update Cosmos DB Table.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/TableCreateUpdateProperties",
          "description": "Properties to create and update Azure Cosmos DB Table.",
          "x-ms-client-flatten": true
        }
      },
      "required": [
        "properties"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/ARMResourceProperties"
        }
      ]
    },
    "TableCreateUpdateProperties": {
      "type": "object",
      "description": "Properties to create and update Azure Cosmos DB Table.",
      "properties": {
        "resource": {
          "$ref": "#/definitions/TableResource",
          "description": "The standard JSON format of a Table"
        },
        "options": {
          "$ref": "#/definitions/CreateUpdateOptions",
          "description": "A key-value pair of options to be applied for the request. This corresponds to the headers sent with the request."
        }
      },
      "required": [
        "resource"
      ]
    },
    "TableGetProperties": {
      "type": "object",
      "description": "The properties of an Azure Cosmos Table",
      "properties": {
        "resource": {
          "$ref": "#/definitions/TableGetPropertiesResource"
        },
        "options": {
          "$ref": "#/definitions/TableGetPropertiesOptions"
        }
      }
    },
    "TableGetPropertiesOptions": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/OptionsResource"
        }
      ]
    },
    "TableGetPropertiesResource": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Name of the Cosmos DB table"
        },
        "restoreParameters": {
          "$ref": "#/definitions/ResourceRestoreParameters",
          "description": "Parameters to indicate the information about the restore"
        },
        "createMode": {
          "type": "string",
          "description": "Enum to indicate the mode of resource creation.",
          "default": "Default",
          "enum": [
            "Default",
            "Restore"
          ],
          "x-ms-enum": {
            "name": "CreateMode",
            "modelAsString": true,
            "values": [
              {
                "name": "Default",
                "value": "Default"
              },
              {
                "name": "Restore",
                "value": "Restore"
              }
            ]
          }
        },
        "_rid": {
          "type": "string",
          "description": "A system generated property. A unique identifier.",
          "readOnly": true,
          "x-ms-client-name": "rid"
        },
        "_ts": {
          "type": "number",
          "format": "float",
          "description": "A system generated property that denotes the last updated timestamp of the resource.",
          "readOnly": true,
          "x-ms-client-name": "ts"
        },
        "_etag": {
          "type": "string",
          "description": "A system generated property representing the resource etag required for optimistic concurrency control.",
          "readOnly": true,
          "x-ms-client-name": "etag"
        }
      },
      "required": [
        "id"
      ]
    },
    "TableGetResults": {
      "type": "object",
      "description": "An Azure Cosmos DB Table.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/TableGetProperties",
          "description": "The properties of an Azure Cosmos DB Table",
          "x-ms-client-flatten": true
        },
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "location": {
          "type": "string",
          "description": "The geo-location where the resource lives",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "identity": {
          "$ref": "#/definitions/ManagedServiceIdentity",
          "description": "Identity for the resource."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/Resource"
        }
      ]
    },
    "TableListResult": {
      "type": "object",
      "description": "The List operation response, that contains the Table and their properties.",
      "properties": {
        "value": {
          "type": "array",
          "description": "List of Table and their properties.",
          "items": {
            "$ref": "#/definitions/TableGetResults"
          },
          "readOnly": true
        }
      }
    },
    "TableResource": {
      "type": "object",
      "description": "Cosmos DB table resource object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Name of the Cosmos DB table"
        },
        "restoreParameters": {
          "$ref": "#/definitions/ResourceRestoreParameters",
          "description": "Parameters to indicate the information about the restore"
        },
        "createMode": {
          "type": "string",
          "description": "Enum to indicate the mode of resource creation.",
          "default": "Default",
          "enum": [
            "Default",
            "Restore"
          ],
          "x-ms-enum": {
            "name": "CreateMode",
            "modelAsString": true,
            "values": [
              {
                "name": "Default",
                "value": "Default"
              },
              {
                "name": "Restore",
                "value": "Restore"
              }
            ]
          }
        }
      },
      "required": [
        "id"
      ]
    },
    "TableRoleAssignmentResource": {
      "type": "object",
      "description": "Parameters to create and update an Azure Cosmos DB Table Role Assignment.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/TableRoleAssignmentResourceProperties",
          "description": "Properties to create and update an Azure Cosmos DB Table Role Assignment.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "TableRoleAssignmentResourceListResult": {
      "type": "object",
      "description": "The response of a TableRoleAssignmentResource list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The TableRoleAssignmentResource items on this page",
          "items": {
            "$ref": "#/definitions/TableRoleAssignmentResource"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "TableRoleAssignmentResourceProperties": {
      "type": "object",
      "description": "Azure Cosmos DB Table Role Assignment resource object.",
      "properties": {
        "roleDefinitionId": {
          "type": "string",
          "description": "The unique identifier for the associated Role Definition."
        },
        "scope": {
          "type": "string",
          "description": "The data plane resource path for which access is being granted through this Table Role Assignment."
        },
        "principalId": {
          "type": "string",
          "description": "The unique identifier for the associated AAD principal in the AAD graph to which access is being granted through this Table Role Assignment. Tenant ID for the principal is inferred using the tenant associated with the subscription."
        },
        "provisioningState": {
          "type": "string",
          "description": "Provisioning state of the resource.",
          "readOnly": true
        }
      }
    },
    "TableRoleDefinitionResource": {
      "type": "object",
      "description": "Parameters to create and update an Azure Cosmos DB Table Role Definition.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/TableRoleDefinitionResourceProperties",
          "description": "Properties to create and update an Azure Cosmos DB Table Role Definition.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "TableRoleDefinitionResourceListResult": {
      "type": "object",
      "description": "The response of a TableRoleDefinitionResource list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The TableRoleDefinitionResource items on this page",
          "items": {
            "$ref": "#/definitions/TableRoleDefinitionResource"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "TableRoleDefinitionResourceProperties": {
      "type": "object",
      "description": "Azure Cosmos DB Table Role Definition resource object.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The path id for the Role Definition."
        },
        "roleName": {
          "type": "string",
          "description": "A user-friendly name for the Role Definition. Must be unique for the database account."
        },
        "type": {
          "$ref": "#/definitions/RoleDefinitionType",
          "description": "Indicates whether the Role Definition was built-in or user created."
        },
        "assignableScopes": {
          "type": "array",
          "description": "A set of fully qualified Scopes at or below which Table Role Assignments may be created using this Role Definition. This will allow application of this Role Definition on the entire database account or any underlying Database / Collection. Must have at least one element. Scopes higher than Database account are not enforceable as assignable Scopes. Note that resources referenced in assignable Scopes need not exist.",
          "items": {
            "type": "string"
          }
        },
        "permissions": {
          "type": "array",
          "description": "The set of operations allowed through this Role Definition.",
          "items": {
            "$ref": "#/definitions/PermissionAutoGenerated"
          }
        }
      }
    },
    "ThroughputBucketResource": {
      "type": "object",
      "description": "Cosmos DB throughput bucket object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32",
          "description": "Represents the throughput bucket id"
        },
        "maxThroughputPercentage": {
          "type": "integer",
          "format": "int32",
          "description": "Represents maximum percentage throughput that can be used by the bucket"
        }
      },
      "required": [
        "id",
        "maxThroughputPercentage"
      ]
    },
    "ThroughputPolicyResource": {
      "type": "object",
      "description": "Cosmos DB resource throughput policy",
      "properties": {
        "isEnabled": {
          "type": "boolean",
          "description": "Determines whether the ThroughputPolicy is active or not"
        },
        "incrementPercent": {
          "type": "integer",
          "format": "int32",
          "description": "Represents the percentage by which throughput can increase every time throughput policy kicks in."
        }
      }
    },
    "ThroughputPolicyType": {
      "type": "string",
      "description": "ThroughputPolicy to apply for throughput redistribution",
      "enum": [
        "none",
        "equal",
        "custom"
      ],
      "x-ms-enum": {
        "name": "ThroughputPolicyType",
        "modelAsString": true,
        "values": [
          {
            "name": "None",
            "value": "none"
          },
          {
            "name": "Equal",
            "value": "equal"
          },
          {
            "name": "Custom",
            "value": "custom"
          }
        ]
      }
    },
    "ThroughputPoolAccountProperties": {
      "type": "object",
      "description": "An Azure Cosmos DB Global Database Account which is part of a Throughputpool.",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/Status",
          "description": "A provisioning state of the ThroughputPool Account.",
          "readOnly": true
        },
        "accountResourceIdentifier": {
          "type": "string",
          "description": "The resource identifier of global database account in the throughputPool."
        },
        "accountLocation": {
          "type": "string",
          "description": "The location of  global database account in the throughputPool."
        },
        "accountInstanceId": {
          "type": "string",
          "description": "The instance id of global database account in the throughputPool.",
          "readOnly": true
        }
      }
    },
    "ThroughputPoolAccountResource": {
      "type": "object",
      "description": "An Azure Cosmos DB Throughputpool Account",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ThroughputPoolAccountProperties",
          "description": "An Azure Cosmos DB Global Database Account which is part of a Throughputpool.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "ThroughputPoolAccountResourceListResult": {
      "type": "object",
      "description": "The response of a ThroughputPoolAccountResource list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The ThroughputPoolAccountResource items on this page",
          "items": {
            "$ref": "#/definitions/ThroughputPoolAccountResource"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "ThroughputPoolProperties": {
      "type": "object",
      "description": "Properties to update Azure Cosmos DB throughput pool.",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/Status",
          "description": "A provisioning state of the ThroughputPool."
        },
        "maxThroughput": {
          "type": "integer",
          "format": "int32",
          "description": "Value for throughput to be shared among CosmosDB resources in the pool."
        }
      }
    },
    "ThroughputPoolResource": {
      "type": "object",
      "description": "An Azure Cosmos DB Throughputpool.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ThroughputPoolProperties",
          "description": "Properties to update Azure Cosmos DB throughput pool.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "ThroughputPoolUpdate": {
      "type": "object",
      "description": "Represents a throughput pool resource for updates.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ThroughputPoolProperties",
          "description": "Properties of the throughput pool.",
          "x-ms-client-flatten": true
        }
      }
    },
    "ThroughputPoolsListResult": {
      "type": "object",
      "description": "The response of a ThroughputPoolResource list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The ThroughputPoolResource items on this page",
          "items": {
            "$ref": "#/definitions/ThroughputPoolResource"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "ThroughputSettingsGetProperties": {
      "type": "object",
      "description": "The properties of an Azure Cosmos DB resource throughput",
      "properties": {
        "resource": {
          "$ref": "#/definitions/ThroughputSettingsGetPropertiesResource"
        }
      }
    },
    "ThroughputSettingsGetPropertiesResource": {
      "type": "object",
      "properties": {
        "throughput": {
          "type": "integer",
          "format": "int32",
          "description": "Value of the Cosmos DB resource throughput. Either throughput is required or autoscaleSettings is required, but not both."
        },
        "autoscaleSettings": {
          "$ref": "#/definitions/AutoscaleSettingsResource",
          "description": "Cosmos DB resource for autoscale settings. Either throughput is required or autoscaleSettings is required, but not both."
        },
        "minimumThroughput": {
          "type": "string",
          "description": "The minimum throughput of the resource",
          "readOnly": true
        },
        "offerReplacePending": {
          "type": "string",
          "description": "The throughput replace is pending",
          "readOnly": true
        },
        "instantMaximumThroughput": {
          "type": "string",
          "description": "The offer throughput value to instantly scale up without triggering splits",
          "readOnly": true
        },
        "softAllowedMaximumThroughput": {
          "type": "string",
          "description": "The maximum throughput value or the maximum maxThroughput value (for autoscale) that can be specified",
          "readOnly": true
        },
        "throughputBuckets": {
          "type": "array",
          "description": "Array of Throughput Bucket limits to be applied to the Cosmos DB container",
          "items": {
            "$ref": "#/definitions/ThroughputBucketResource"
          }
        },
        "_rid": {
          "type": "string",
          "description": "A system generated property. A unique identifier.",
          "readOnly": true,
          "x-ms-client-name": "rid"
        },
        "_ts": {
          "type": "number",
          "format": "float",
          "description": "A system generated property that denotes the last updated timestamp of the resource.",
          "readOnly": true,
          "x-ms-client-name": "ts"
        },
        "_etag": {
          "type": "string",
          "description": "A system generated property representing the resource etag required for optimistic concurrency control.",
          "readOnly": true,
          "x-ms-client-name": "etag"
        }
      }
    },
    "ThroughputSettingsGetResults": {
      "type": "object",
      "description": "An Azure Cosmos DB resource throughput.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ThroughputSettingsGetProperties",
          "description": "The properties of an Azure Cosmos DB resource throughput",
          "x-ms-client-flatten": true
        },
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "location": {
          "type": "string",
          "description": "The geo-location where the resource lives",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "identity": {
          "$ref": "#/definitions/ManagedServiceIdentity",
          "description": "Identity for the resource."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/Resource"
        }
      ]
    },
    "ThroughputSettingsResource": {
      "type": "object",
      "description": "Cosmos DB resource throughput object. Either throughput is required or autoscaleSettings is required, but not both.",
      "properties": {
        "throughput": {
          "type": "integer",
          "format": "int32",
          "description": "Value of the Cosmos DB resource throughput. Either throughput is required or autoscaleSettings is required, but not both."
        },
        "autoscaleSettings": {
          "$ref": "#/definitions/AutoscaleSettingsResource",
          "description": "Cosmos DB resource for autoscale settings. Either throughput is required or autoscaleSettings is required, but not both."
        },
        "minimumThroughput": {
          "type": "string",
          "description": "The minimum throughput of the resource",
          "readOnly": true
        },
        "offerReplacePending": {
          "type": "string",
          "description": "The throughput replace is pending",
          "readOnly": true
        },
        "instantMaximumThroughput": {
          "type": "string",
          "description": "The offer throughput value to instantly scale up without triggering splits",
          "readOnly": true
        },
        "softAllowedMaximumThroughput": {
          "type": "string",
          "description": "The maximum throughput value or the maximum maxThroughput value (for autoscale) that can be specified",
          "readOnly": true
        },
        "throughputBuckets": {
          "type": "array",
          "description": "Array of Throughput Bucket limits to be applied to the Cosmos DB container",
          "items": {
            "$ref": "#/definitions/ThroughputBucketResource"
          }
        }
      }
    },
    "ThroughputSettingsUpdateParameters": {
      "type": "object",
      "description": "Parameters to update Cosmos DB resource throughput.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ThroughputSettingsUpdateProperties",
          "description": "Properties to update Azure Cosmos DB resource throughput.",
          "x-ms-client-flatten": true
        }
      },
      "required": [
        "properties"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/ARMResourceProperties"
        }
      ]
    },
    "ThroughputSettingsUpdateProperties": {
      "type": "object",
      "description": "Properties to update Azure Cosmos DB resource throughput.",
      "properties": {
        "resource": {
          "$ref": "#/definitions/ThroughputSettingsResource",
          "description": "The standard JSON format of a resource throughput"
        }
      },
      "required": [
        "resource"
      ]
    },
    "TriggerOperation": {
      "type": "string",
      "description": "The operation the trigger is associated with",
      "enum": [
        "All",
        "Create",
        "Update",
        "Delete",
        "Replace"
      ],
      "x-ms-enum": {
        "name": "TriggerOperation",
        "modelAsString": true,
        "values": [
          {
            "name": "All",
            "value": "All"
          },
          {
            "name": "Create",
            "value": "Create"
          },
          {
            "name": "Update",
            "value": "Update"
          },
          {
            "name": "Delete",
            "value": "Delete"
          },
          {
            "name": "Replace",
            "value": "Replace"
          }
        ]
      }
    },
    "TriggerType": {
      "type": "string",
      "description": "Type of the Trigger",
      "enum": [
        "Pre",
        "Post"
      ],
      "x-ms-enum": {
        "name": "TriggerType",
        "modelAsString": true,
        "values": [
          {
            "name": "Pre",
            "value": "Pre"
          },
          {
            "name": "Post",
            "value": "Post"
          }
        ]
      }
    },
    "Type": {
      "type": "string",
      "description": "Type of the connection string",
      "enum": [
        "Sql",
        "Table",
        "MongoDB",
        "Cassandra",
        "CassandraConnectorMetadata",
        "Gremlin",
        "SqlDedicatedGateway",
        "GremlinV2",
        "Undefined"
      ],
      "x-ms-enum": {
        "name": "Type",
        "modelAsString": true,
        "values": [
          {
            "name": "Sql",
            "value": "Sql"
          },
          {
            "name": "Table",
            "value": "Table"
          },
          {
            "name": "MongoDB",
            "value": "MongoDB"
          },
          {
            "name": "Cassandra",
            "value": "Cassandra"
          },
          {
            "name": "CassandraConnectorMetadata",
            "value": "CassandraConnectorMetadata"
          },
          {
            "name": "Gremlin",
            "value": "Gremlin"
          },
          {
            "name": "SqlDedicatedGateway",
            "value": "SqlDedicatedGateway"
          },
          {
            "name": "GremlinV2",
            "value": "GremlinV2"
          },
          {
            "name": "Undefined",
            "value": "Undefined"
          }
        ]
      }
    },
    "UniqueKey": {
      "type": "object",
      "description": "The unique key on that enforces uniqueness constraint on documents in the collection in the Azure Cosmos DB service.",
      "properties": {
        "paths": {
          "type": "array",
          "description": "List of paths must be unique for each document in the Azure Cosmos DB service",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "UniqueKeyPolicy": {
      "type": "object",
      "description": "The unique key policy configuration for specifying uniqueness constraints on documents in the collection in the Azure Cosmos DB service.",
      "properties": {
        "uniqueKeys": {
          "type": "array",
          "description": "List of unique keys on that enforces uniqueness constraint on documents in the collection in the Azure Cosmos DB service.",
          "items": {
            "$ref": "#/definitions/UniqueKey"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "UnitType": {
      "type": "string",
      "description": "The unit of the metric.",
      "enum": [
        "Count",
        "Bytes",
        "Seconds",
        "Percent",
        "CountPerSecond",
        "BytesPerSecond",
        "Milliseconds"
      ],
      "x-ms-enum": {
        "name": "UnitType",
        "modelAsString": true,
        "values": [
          {
            "name": "Count",
            "value": "Count"
          },
          {
            "name": "Bytes",
            "value": "Bytes"
          },
          {
            "name": "Seconds",
            "value": "Seconds"
          },
          {
            "name": "Percent",
            "value": "Percent"
          },
          {
            "name": "CountPerSecond",
            "value": "CountPerSecond"
          },
          {
            "name": "BytesPerSecond",
            "value": "BytesPerSecond"
          },
          {
            "name": "Milliseconds",
            "value": "Milliseconds"
          }
        ]
      }
    },
    "Usage": {
      "type": "object",
      "description": "The usage data for a usage request.",
      "properties": {
        "unit": {
          "$ref": "#/definitions/UnitType",
          "description": "The unit of the metric.",
          "readOnly": true
        },
        "name": {
          "$ref": "#/definitions/MetricName",
          "description": "The name information for the metric.",
          "readOnly": true
        },
        "quotaPeriod": {
          "type": "string",
          "description": "The quota period used to summarize the usage values.",
          "readOnly": true
        },
        "limit": {
          "type": "integer",
          "format": "int64",
          "description": "Maximum value for this metric",
          "readOnly": true
        },
        "currentValue": {
          "type": "integer",
          "format": "int64",
          "description": "Current value for this metric",
          "readOnly": true
        }
      }
    },
    "UsagesResult": {
      "type": "object",
      "description": "The response to a list usage request.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The list of usages for the database. A usage is a point in time metric",
          "items": {
            "$ref": "#/definitions/Usage"
          },
          "readOnly": true
        }
      }
    },
    "VectorDataType": {
      "type": "string",
      "description": "Indicates the data type of vector.",
      "enum": [
        "float32",
        "uint8",
        "int8"
      ],
      "x-ms-enum": {
        "name": "VectorDataType",
        "modelAsString": true,
        "values": [
          {
            "name": "Float32",
            "value": "float32"
          },
          {
            "name": "Uint8",
            "value": "uint8"
          },
          {
            "name": "Int8",
            "value": "int8"
          }
        ]
      }
    },
    "VectorEmbedding": {
      "type": "object",
      "description": "Represents a vector embedding. A vector embedding is used to define a vector field in the documents.",
      "properties": {
        "path": {
          "type": "string",
          "description": "The path to the vector field in the document."
        },
        "dataType": {
          "$ref": "#/definitions/VectorDataType",
          "description": "Indicates the data type of vector."
        },
        "distanceFunction": {
          "$ref": "#/definitions/DistanceFunction",
          "description": "The distance function to use for distance calculation in between vectors."
        },
        "dimensions": {
          "type": "integer",
          "format": "int32",
          "description": "The number of dimensions in the vector."
        }
      },
      "required": [
        "path",
        "dataType",
        "distanceFunction",
        "dimensions"
      ]
    },
    "VectorEmbeddingPolicy": {
      "type": "object",
      "description": "Cosmos DB Vector Embedding Policy",
      "properties": {
        "vectorEmbeddings": {
          "type": "array",
          "description": "List of vector embeddings",
          "items": {
            "$ref": "#/definitions/VectorEmbedding"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "VectorIndex": {
      "type": "object",
      "properties": {
        "path": {
          "type": "string",
          "description": "The path to the vector field in the document."
        },
        "type": {
          "$ref": "#/definitions/VectorIndexType",
          "description": "The index type of the vector. Currently, flat, diskANN, and quantizedFlat are supported."
        }
      },
      "required": [
        "path",
        "type"
      ]
    },
    "VectorIndexType": {
      "type": "string",
      "description": "The index type of the vector. Currently, flat, diskANN, and quantizedFlat are supported.",
      "enum": [
        "flat",
        "diskANN",
        "quantizedFlat"
      ],
      "x-ms-enum": {
        "name": "VectorIndexType",
        "modelAsString": true,
        "values": [
          {
            "name": "Flat",
            "value": "flat"
          },
          {
            "name": "DiskANN",
            "value": "diskANN"
          },
          {
            "name": "QuantizedFlat",
            "value": "quantizedFlat"
          }
        ]
      }
    },
    "VirtualNetworkRule": {
      "type": "object",
      "description": "Virtual Network ACL Rule object",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Resource ID of a subnet, for example: /subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/subnets/{subnetName}.",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.Network/virtualNetworks/subnets"
              }
            ]
          }
        },
        "ignoreMissingVNetServiceEndpoint": {
          "type": "boolean",
          "description": "Create firewall rule before the virtual network has vnet service endpoint enabled."
        }
      }
    }
  },
  "parameters": {}
}
