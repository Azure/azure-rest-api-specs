{
  "swagger": "2.0",
  "info": {
    "title": "Cosmos DB",
    "description": "Azure Cosmos DB Database Service Resource Provider REST API",
    "version": "2020-06-01-preview"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Azure Active Directory OAuth2 Flow",
      "scopes": {
        "user_impersonation": "Impersonate your user account"
      }
    }
  },
  "paths": {
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{databaseAccountName}/cosmosRoleDefinitions/{roleDefinitionId}?api-version={api-version}": {
      "get": {
        "operationId": "SqlRoleDefinition_Get",
        "x-ms-examples": {
          "CosmosDBSqlRoleDefinitionGet": {
            "$ref": "./examples/CosmosDBSqlRoleDefinitionGet.json"
          }
        },
        "description": "Retrieves the properties of an existing Azure Cosmos DB Role Definition.",
        "parameters": [
          {
            "$ref": "#/parameters/roleDefinitionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/databaseAccountNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The Role Definition was found.",
            "schema": {
              "$ref": "#/definitions/SqlRoleDefinitionResponse"
            }
          },
          "default": {
            "description": "*** Error Responses: ***\n\n * 400 InvalidRoleAssignmentId - The Role Definition ID '{0}' is not valid. Role Definition ID must be a GUID.\n\n * 404 RoleAssignmentNotFound - The Role Definition '{0}' was not found."
          }
        }
      },
      "put": {
        "operationId": "SqlRoleDefinition_CreateOrUpdate",
        "x-ms-examples": {
          "CosmosDBSqlRoleDefinitionCreateUpdate": {
            "$ref": "./examples/CosmosDBSqlRoleDefinitionCreateUpdate.json"
          }
        },
        "description": "Creates or Updates Azure Cosmos DB Role Definitions.",
        "parameters": [
          {
            "$ref": "#/parameters/roleDefinitionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/databaseAccountNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "requestBody",
            "in": "body",
            "required": true,
            "description": "The properties required to create a new role definition.",
            "schema": {
              "$ref": "#/definitions/SqlRoleDefinitionProperties"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted. The Role Definition create request was accepted and will complete asynchronously.",
            "schema": {
              "$ref": "#/definitions/SqlRoleDefinitionResponse"
            }
          },
          "default": {
            "description": "*** Error Responses: ***\n\n * 400 InvalidRoleDefinitionId - The Role Definition ID '{0}' is not valid. Role Definition ID must be a GUID.\n\n * 400 RoleDefinitionNameNullOrEmpty - A Role Definition must have a non-empty, unique name.\n\n * 400 InvalidRoleDefinitionType - The Role definition type value '{0}' is not supported. The supported values are 'CustomRole'.\n\n * 400 MissingAssignableScopes - A Role Definition must have at least one assignable scope and all assignable scopes must be neither null nor empty.\n\n * 400 InvalidAssignableScopePrefix - The Assignable Scope prefix '{0}' must correspond to the current database account '{1}'.\n\n * 409 RoleDefinitionWithSameNameExists - A Role Definition cannot be updated with a name that already exists.\n\n * 400 InvalidDataAction - '{0}' does not match any of the data actions supported by the providers."
          }
        }
      },
      "delete": {
        "operationId": "RoleDefinition_Delete",
        "x-ms-examples": {
          "CosmosDBSqlRoleDefinitionDelete": {
            "$ref": "./examples/CosmosDBSqlRoleDefinitionDelete.json"
          }
        },
        "description": "Deletes Azure Cosmos DB Role Definition.",
        "parameters": [
          {
            "$ref": "#/parameters/roleDefinitionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/databaseAccountNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The Role Definition was deleted.",
            "schema": {
              "$ref": "#/definitions/SqlRoleDefinitionResponse"
            }
          },
          "default": {
            "description": "*** Error Responses: ***\n\n * 400 InvalidRoleAssignmentId - d The Role Definition ID '{0}' is not valid. Role Assignment ID must be a GUID.\n\n * 400 RoleDefinitionHasAssignments - There are existing Role Assignments referencing Role Definition '{0}'. The Role Assignments must be deleted before the role can be deleted."
          },
          "204": {
            "description": "Role Definition does not exist"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{databaseAccountName}/cosmosRoleDefinitions?api-version={api-version}&$filter={$filter}": {
      "get": {
        "operationId": "RoleDefinition_List",
        "x-ms-examples": {
          "CosmosDBSqlRoleDefinitionList": {
            "$ref": "./examples/CosmosDBSqlRoleDefinitionList.json"
          }
        },
        "description": "Retrieves the list of role definitions based on the filter.",
        "parameters": [
          {
            "$ref": "#/parameters/filterRoleDefinitionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/databaseAccountNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The Role Definition was found.",
            "schema": {
              "$ref": "#/definitions/SqlRoleDefinitionListResult"
            }
          },
          "default": {
            "description": "*** Error Responses: ***\n\n * 400 InvalidRoleAssignmentId - The Role Definition ID '{0}' is not valid. Role Definition ID must be a GUID.\n\n * 404 RoleAssignmentNotFound - The Role Definition '{0}' was not found."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{databaseAccountName}/cosmosRoleAssignments/{roleAssignmentId}?api-version={api-version}": {
      "get": {
        "operationId": "SqlRoleAssignment_Get",
        "x-ms-examples": {
          "CosmosDBSqlRoleAssignmentGet": {
            "$ref": "./examples/CosmosDBSqlRoleAssignmentGet.json"
          }
        },
        "description": "Retrieves the properties of an existing Azure Cosmos DB Role Definition.",
        "parameters": [
          {
            "$ref": "#/parameters/roleAssignmentIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/databaseAccountNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "OK. The Role Assignment was found.",
            "schema": {
              "$ref": "#/definitions/SqlRoleAssignmentResponse"
            }
          },
          "default": {
            "description": "*** Error Responses: ***\n\n * 400 InvalidRoleAssignmentId - The Role Assignment ID '{0}' is not valid. Role Assignment ID must be a GUID.\n\n * 404 RoleAssignmentNotFound - The Role Assignment '{0}' was not found."
          }
        }
      },
      "put": {
        "operationId": "SqlRoleAssignment_CreateOrUpdate",
        "x-ms-examples": {
          "CosmosDBSqlRoleAssignmentCreateUpdate": {
            "$ref": "./examples/CosmosDBSqlRoleAssignmentCreateUpdate.json"
          }
        },
        "description": "Create or Update Azure Cosmos DB Role Assignment.",
        "parameters": [
          {
            "$ref": "#/parameters/roleAssignmentIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/databaseAccountNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "requestBody",
            "in": "body",
            "required": true,
            "description": "The properties required to create a new role definition.",
            "schema": {
              "$ref": "#/definitions/SqlRoleAssignmentProperties"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted. The Role Assignment create or update request was accepted and will complete asyncronously.",
            "schema": {
              "$ref": "#/definitions/SqlRoleAssignmentResponse"
            }
          },
          "default": {
            "desciption": "*** Error Responses: ***\n\n * 400 InvalidRoleAssignmentId - The Role Assignment ID '{0}' is not valid. Role Assignment ID must be a GUID.\n\n * 400 InvalidRoleDefinitionId - The Role Definition ID '{0}' is not valid. Role Definition ID must be a GUID.\n\n * 400 InvalidPrincipalId - The Principal ID '{0}' is not valid. Principal ID must be a GUID.\n\n * 400 RoleDefinitionDoesNotExist - The specified role definition with ID '{0}' does not exist.\n\n * 404 DatabaseNotFound - Database '{0}' could not be found.\n\n * 404 CollectionNotFound - Collection '{0}' could not be found.\n\n * 400 PrincipalNotFound -Principal '{0}' does not exist in the directory '{1}'.\n\n * 400 RoleAssignmentUpdateNotPermitted - Principal ID and Scope are not allowed to be updated.\n\n * 400 RoleAssignmentScopeNotAssignableToRoleDefinition The role {0} is not available for assignment at the requested scope.\n\n * 400 BadScopeFormat - The Scope was incorrectly formatted.\n\n * 400 BadRoleDefinitionIdFormat - The Role Definition ID was incorrectly formatted.\n\n * 400 InvalidScopePrefix The Scope prefix '{0}' must correspond to the current database account '{1}'.\n\n * 400 InvalidRoleDefinitionIdPrefix - The Role Definition ID prefix '{0}' must correspond to the current database account '{1}'."
          }
        }
      },
      "delete": {
        "operationId": "SqlRoleAssignment_Delete",
        "x-ms-examples": {
          "CosmosDBSqlRoleAssignmentDelete": {
            "$ref": "./examples/CosmosDBSqlRoleAssignmentDelete.json"
          }
        },
        "description": "Retrieves the properties of an existing Azure Cosmos DB Role Definition.",
        "parameters": [
          {
            "$ref": "#/parameters/roleAssignmentIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/databaseAccountNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted.  The delete request was accepted and will complete asynchronously.",
            "schema": {
              "$ref": "#/definitions/SqlRoleAssignmentResponse"
            }
          },
          "default": {
            "desciption": "400 InvalidRoleAssignmentId - The Role Assignment ID '{0}' is not valid. Role Assignment ID must be a GUID."
          },
          "204": {
            "description": "Role Assignment does not exist."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{databaseAccountName}/cosmosRoleAssignments?api-version={api-version}&$filter={$filter}": {
      "get": {
        "operationId": "SqlRoleAssignment_List",
        "x-ms-examples": {
          "CosmosDBSqlRoleAssignmentList": {
            "$ref": "./examples/CosmosDBSqlRoleAssignmentList.json"
          }
        },
        "description": "Retrieves the list of role assignments based on the filter.",
        "parameters": [
          {
            "$ref": "#/parameters/filterRoleAssignmentParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/databaseAccountNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The relevant Role Assignments",
            "schema": {
              "$ref": "#/definitions/SqlRoleAssignmentListResult"
            }
          },
          "default": {
            "description": "*** Error Responses: ***\n\n * 400 InvalidRoleAssignmentId - The Role Assignment ID '{0}' is not valid. Role Assignment ID must be a GUID.\n\n * 404 RoleAssignmentNotFound - The Role Assignment '{0}' was not found."
          }
        }
      }
    }
  },
  "definitions": {
    "SqlRoleDefinitionProperties": {
      "description": "Role definition.",
      "properties": {
        "roleName": {
          "type": "string",
          "description": "A user-friendly name for the Role Definition. Must be unique for the database account."
        },
        "type": {
          "type": "string",
          "description": "Indicates whether the Role Definition was built-in or user created. Must always be CustomRole or empty."
        },
        "assignableScopes": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A set of fully qualified scopes at or below which Role Assignments may be created using this Role Definition. This will allow application of this Role Defintion on the entire database account or any underlying database / collection. Must have atleast one element. Scopes higher than database account are not enforceable as assignable scopes. Note that resources referenced in assignable scopes need not exist."
        },
        "permissions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Permission"
          },
          "description": "The set of operations allowed through this Role Definition."
        }
      }
    },
    "SqlRoleDefinitionResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The fully qualified GUID of the Role Definition containing the resource path and the ID supplied for this Role Definition during create."
        },
        "name": {
          "type": "string",
          "description": "The ID supplied for this Role Definition during create."
        },
        "type": {
          "type": "string",
          "description": "Microsoft.DocumentDB/databaseAccounts/roleDefinitions."
        },
        "properties": {
          "$ref": "#/definitions/SqlRoleDefinitionProperties"
        }
      },
      "description": "The response from an accepted create request."
    },
    "Permission": {
      "type": "object",
      "properties": {
        "dataActions": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The set of data plane operations permitted through this Role Definition."
        }
      }
    },
    "SqlRoleDefinitionListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SqlRoleDefinitionResponse"
          },
          "description": "List of role definitions and their properties."
        }
      }
    },
    "SqlRoleAssignmentProperties": {
      "x-ms-azure-resource": true,
      "type": "object",
      "description": "Role Assignment Properties.",
      "properties": {
        "roleDefinitionId": {
          "type": "string",
          "description": "The unique identifier for the associated Role Definition."
        },
        "scope": {
          "type": "string",
          "description": "The data plane resource path for which access is being granted through this Role Assignment."
        },
        "principalId": {
          "type": "string",
          "description": "The unique identifier for the associated AAD principal in the AAD graph to which access is being granted through this Role Assignment. Tenant ID for the principal is inferred using the tenant associated with the subscription."
        }
      }
    },
    "SqlRoleAssignmentResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The fully qualified GUID of the Role Assignment containing the resource path and the ID supplied for this Role Assignment during create."
        },
        "name": {
          "type": "string",
          "description": "The ID supplied for this Role Assignment during create."
        },
        "type": {
          "type": "string",
          "description": "Microsoft.DocumentDB/databaseAccounts/roleAssignments."
        },
        "properties": {
          "$ref": "#/definitions/SqlRoleAssignmentProperties"
        }
      },
      "description": "The response from an accepted create request."
    },
    "SqlRoleAssignmentListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SqlRoleAssignmentResponse"
          },
          "description": "List of role assignments and their properties."
        }
      }
    }
  },
  "parameters": {
    "roleDefinitionIdParameter": {
      "name": "roleDefinitionId",
      "in": "path",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method",
      "description": "The GUID for the Role Definition."
    },
    "databaseAccountNameParameter": {
      "name": "databaseAccountName",
      "in": "path",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method",
      "description": "Name of Cosmos DB database account."
    },
    "roleAssignmentIdParameter": {
      "name": "roleAssignmentId",
      "in": "path",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method",
      "description": "The GUID for the Role Assignment."
    },
    "filterRoleDefinitionParameter": {
      "name": "$filter",
      "in": "query",
      "required": false,
      "type": "string",
      "x-ms-parameter-location": "method",
      "description": "The filter to be applied on the request. Use $filter=type eq 'BuiltInRole|CustomRole' to filter by type. Use $filter=roleName eq {name} to retrieve Role Definition with the given name."
    },
    "filterRoleAssignmentParameter": {
      "name": "$filter",
      "in": "query",
      "required": false,
      "type": "string",
      "x-ms-parameter-location": "method",
      "description": "The filter to be applied on the request. Use $filter=principalId eq 'edcf5256-366c-4cf0-9007-d450b8e48737' to retrieve all Role Assignments granted to the given AAD principal. Use $filter=assignedTo('edcf5256-366c-4cf0-9007-d450b8e48737') to retrieve all Role Assignments granted to the given AAD principal. Use $filter=atScope('/dbs/contoso-sales') to retrieve all Role Assignments granted for the database 'contoso-sales' or higher up."
    }
  }
}
