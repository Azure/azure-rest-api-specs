{
  "swagger": "2.0",
  "info": {
    "title": "Cosmos DB",
    "description": "Azure Cosmos DB Database Data Transfer Service Resource Provider REST API",
    "version": "2024-12-01-preview"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Azure Active Directory OAuth2 Flow",
      "scopes": {
        "user_impersonation": "Impersonate your user account"
      }
    }
  },
  "paths": {
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/dataTransferJobs/{jobName}": {
      "put": {
        "operationId": "DataTransferJobs_Create",
        "description": "Creates a Data Transfer Job.",
        "x-ms-examples": {
          "CosmosDBDataTransferJobCreate": {
            "$ref": "./examples/data-transfer-service/CosmosDBDataTransferJobCreate.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./cosmos-db.json#/parameters/accountNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/JobNameParameter"
          },
          {
            "name": "jobCreateParameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateJobRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful CreateJob response",
            "schema": {
              "$ref": "#/definitions/DataTransferJobGetResults"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "cosmos-db.json#/definitions/CloudError"
            }
          }
        }
      },
      "get": {
        "operationId": "DataTransferJobs_Get",
        "description": "Get a Data Transfer Job.",
        "x-ms-examples": {
          "CosmosDBDataTransferJobGet": {
            "$ref": "./examples/data-transfer-service/CosmosDBDataTransferJobGet.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./cosmos-db.json#/parameters/accountNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/JobNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The Data Transfer Job Properties retrieved successfully",
            "schema": {
              "$ref": "#/definitions/DataTransferJobGetResults"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "cosmos-db.json#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/dataTransferJobs/{jobName}/pause": {
      "post": {
        "operationId": "DataTransferJobs_Pause",
        "description": "Pause a Data Transfer Job.",
        "x-ms-examples": {
          "CosmosDBDataTransferJobPause": {
            "$ref": "./examples/data-transfer-service/CosmosDBDataTransferJobPause.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./cosmos-db.json#/parameters/accountNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/JobNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Pause Job response",
            "schema": {
              "$ref": "#/definitions/DataTransferJobGetResults"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "cosmos-db.json#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/dataTransferJobs/{jobName}/resume": {
      "post": {
        "operationId": "DataTransferJobs_Resume",
        "description": "Resumes a Data Transfer Job.",
        "x-ms-examples": {
          "CosmosDBDataTransferJobResume": {
            "$ref": "./examples/data-transfer-service/CosmosDBDataTransferJobResume.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./cosmos-db.json#/parameters/accountNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/JobNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Resume Job response",
            "schema": {
              "$ref": "#/definitions/DataTransferJobGetResults"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "cosmos-db.json#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/dataTransferJobs/{jobName}/cancel": {
      "post": {
        "operationId": "DataTransferJobs_Cancel",
        "description": "Cancels a Data Transfer Job.",
        "x-ms-examples": {
          "CosmosDBDataTransferJobCancel": {
            "$ref": "./examples/data-transfer-service/CosmosDBDataTransferJobCancel.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./cosmos-db.json#/parameters/accountNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/JobNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Cancel Job response",
            "schema": {
              "$ref": "#/definitions/DataTransferJobGetResults"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "cosmos-db.json#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/dataTransferJobs/{jobName}/complete": {
      "post": {
        "operationId": "DataTransferJobs_Complete",
        "description": "Completes a Data Transfer Online Job.",
        "x-ms-examples": {
          "CosmosDBDataTransferJobComplete": {
            "$ref": "./examples/data-transfer-service/CosmosDBDataTransferJobComplete.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./cosmos-db.json#/parameters/accountNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/JobNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Complete Job response",
            "schema": {
              "$ref": "#/definitions/DataTransferJobGetResults"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "cosmos-db.json#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/dataTransferJobs": {
      "get": {
        "operationId": "DataTransferJobs_ListByDatabaseAccount",
        "description": "Get a list of Data Transfer jobs.",
        "x-ms-examples": {
          "CosmosDBDataTransferJobFeed": {
            "$ref": "./examples/data-transfer-service/CosmosDBDataTransferJobFeed.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./cosmos-db.json#/parameters/accountNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "All Data Transfer Jobs retrieved successfully",
            "schema": {
              "$ref": "#/definitions/DataTransferJobFeedResults"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "cosmos-db.json#/definitions/CloudError"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "CosmosDataTransferDataSourceSinkDetails": {
      "type": "object",
      "description": "A base CosmosDB data source/sink details",
      "properties": {
        "remoteAccountName": {
          "type": "string"
        }
      }
    },
    "MongoVCoreDataTransferDataSourceSinkDetails": {
      "type": "object",
      "description": "A CosmosDB Mongo vCore API data source/sink",
      "properties": {
        "hostName": {
          "type": "string"
        },
        "connectionStringKeyVaultUri": {
          "type": "string"
        }
      }
    },
    "AzureBlobDataTransferDataSourceSinkDetails": {
      "type": "object",
      "description": "An Azure Blob Storage data source/sink",
      "properties": {
        "endpointUrl": {
          "type": "string"
        }
      }
    },
    "CosmosCassandraContainerEntity": {
      "type": "object",
      "description": "A CosmosDB Cassandra container entity",
      "properties": {
        "keySpaceName": {
          "type": "string"
        },
        "tableName": {
          "type": "string"
        }
      },
      "required": [
        "keySpaceName",
        "tableName"
      ]
    },
    "CosmosSqlContainerEntity": {
      "type": "object",
      "description": "A CosmosDB noSql container entity",
      "properties": {
        "databaseName": {
          "type": "string"
        },
        "containerName": {
          "type": "string"
        }
      },
      "required": [
        "databaseName",
        "containerName"
      ]
    },
    "CosmosMongoContainerEntity": {
      "type": "object",
      "description": "A CosmosDB Mongo container entity",
      "properties": {
        "databaseName": {
          "type": "string"
        },
        "collectionName": {
          "type": "string"
        }
      },
      "required": [
        "databaseName",
        "collectionName"
      ]
    },
    "CosmosMongoVCoreContainerEntity": {
      "type": "object",
      "description": "A CosmosDB Mongo vCore container entity",

      "properties": {
        "databaseName": {
          "type": "string"
        },
        "collectionName": {
          "type": "string"
        }
      },
      "required": [
        "databaseName",
        "collectionName"
      ]
    },
    "AzureBlobStorageContainerEntity": {
      "type": "object",
      "description": "An Azure Blob container entity",
      "properties": {
        "containerName": {
          "type": "string"
        }
      },
      "required": [
        "containerName"
      ]
    },
    "BaseDataTransferTask": {
      "type": "object",
      "description": "The properties of a DataTransfer Task",
      "properties": {
        "totalCount": {
          "readOnly": true,
          "type": "integer",
          "description": "Task level Total Count.",
          "format": "int64"
        },
        "processedCount": {
          "readOnly": true,
          "type": "integer",
          "description": "Task level Processed Count.",
          "format": "int64"
        }
      }
    },
    "SourceBlobDestinationCassandraDataTransferProperties": {
      "description": "The properties of DataTransfer Job with Azure Blob Storage as source and CosmosDB Cassandra as destination",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DataTransferJobProperties"
        }
      ],
      "properties": {
        "sourceDetails": {
          "$ref": "#/definitions/AzureBlobDataTransferDataSourceSinkDetails",
          "description": "Azure Storage container DataStore details"
        },
        "destinationDetails": {
          "$ref": "#/definitions/CosmosDataTransferDataSourceSinkDetails",
          "description": "Destination Cassandra DataStore details"
        },
        "tasks": {
          "type": "array",
          "items": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/definitions/BaseDataTransferTask"
              }
            ],
            "properties": {
              "source": {
                "$ref": "#/definitions/AzureBlobStorageContainerEntity",
                "description": "Source Azure Blob container entity"
              },
              "destination": {
                "$ref": "#/definitions/CosmosCassandraContainerEntity",
                "description": "Destination Cassandra container entity"
              }
            },
            "required": [
              "source",
              "destination"
            ]
          }
        }
      },
      "required": [
        "sourceDetails",
        "tasks"
      ],
      "x-ms-discriminator-value": "AzureBlobStorageToCosmosDBCassandra"
    },
    "SourceCassandraDestinationCassandraDataTransferProperties": {
      "description": "The properties of DataTransfer Job with CosmosDB Cassandra as source and CosmosDB Cassandra as destination",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DataTransferJobProperties"
        }
      ],
      "properties": {
        "sourceDetails": {
          "$ref": "#/definitions/CosmosDataTransferDataSourceSinkDetails",
          "description": "Source Cassandra DataStore details"
        },
        "destinationDetails": {
          "$ref": "#/definitions/CosmosDataTransferDataSourceSinkDetails",
          "description": "Destination Cassandra DataStore details"
        },
        "tasks": {
          "type": "array",
          "items": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/definitions/BaseDataTransferTask"
              }
            ],
            "properties": {
              "source": {
                "$ref": "#/definitions/CosmosCassandraContainerEntity",
                "description": "Source Cassandra container entity"
              },
              "destination": {
                "$ref": "#/definitions/CosmosCassandraContainerEntity",
                "description": "Destination Cassandra container entity"
              }
            },
            "required": [
              "source",
              "destination"
            ]
          }
        }
      },
      "required": [
        "tasks"
      ],
      "x-ms-discriminator-value": "CosmosDBCassandraToCosmosDBCassandra"
    },
    "SourceCassandraDestinationBlobDataTransferProperties": {
      "description": "The properties of DataTransfer Job with CosmosDB Cassandra as source and Azure Blob container as destination",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DataTransferJobProperties"
        }
      ],
      "properties": {
        "sourceDetails": {
          "$ref": "#/definitions/CosmosDataTransferDataSourceSinkDetails",
          "description": "Source Cassandra DataStore details"
        },
        "destinationDetails": {
          "$ref": "#/definitions/AzureBlobDataTransferDataSourceSinkDetails",
          "description": "Destination Cassandra DataStore details"
        },
        "tasks": {
          "type": "array",
          "items": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/definitions/BaseDataTransferTask"
              }
            ],
            "properties": {
              "source": {
                "$ref": "#/definitions/CosmosCassandraContainerEntity",
                "description": "Source Cassandra container entity"
              },
              "destination": {
                "$ref": "#/definitions/AzureBlobStorageContainerEntity",
                "description": "Destination Blob container entity"
              }
            },
            "required": [
              "source",
              "destination"
            ]
          }
        }
      },
      "required": [
        "destinationDetails",
        "tasks"
      ],
      "x-ms-discriminator-value": "CosmosDBCassandraToAzureBlobStorage"
    },
    "SourceMongoDestinationMongoDataTransferProperties": {
      "description": "The properties of DataTransfer Job with CosmosDB Mongo (RU) as source and CosmosDB Mongo (RU) as destination",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DataTransferJobProperties"
        }
      ],
      "properties": {
        "sourceDetails": {
          "$ref": "#/definitions/CosmosDataTransferDataSourceSinkDetails",
          "description": "Source Mongo DataStore details"
        },
        "destinationDetails": {
          "$ref": "#/definitions/CosmosDataTransferDataSourceSinkDetails",
          "description": "Destination Mongo DataStore details"
        },
        "tasks": {
          "type": "array",
          "items": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/definitions/BaseDataTransferTask"
              }
            ],
            "properties": {
              "source": {
                "$ref": "#/definitions/CosmosMongoContainerEntity",
                "description": "Source Mongo container entity"
              },
              "destination": {
                "$ref": "#/definitions/CosmosMongoContainerEntity",
                "description": "Destination Mongo container entity"
              }
            },
            "required": [
              "source",
              "destination"
            ]
          }
        }
      },
      "required": [
        "tasks"
      ],
      "x-ms-discriminator-value": "CosmosDBMongoToCosmosDBMongo"
    },
    "SourceMongoDestinationMongoVCoreDataTransferProperties": {
      "description": "The properties of DataTransfer Job with CosmosDB Mongo (RU) as source and CosmosDB Mongo (vCore) as destination",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DataTransferJobProperties"
        }
      ],
      "properties": {
        "sourceDetails": {
          "$ref": "#/definitions/CosmosDataTransferDataSourceSinkDetails",
          "description": "Source Mongo (RU) DataStore details"
        },
        "destinationDetails": {
          "$ref": "#/definitions/MongoVCoreDataTransferDataSourceSinkDetails",
          "description": "Destination Mongo (vCore) DataStore details"
        },
        "tasks": {
          "type": "array",
          "items": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/definitions/BaseDataTransferTask"
              }
            ],
            "properties": {
              "source": {
                "$ref": "#/definitions/CosmosMongoContainerEntity",
                "description": "Source Mongo container entity"
              },
              "destination": {
                "$ref": "#/definitions/CosmosMongoVCoreContainerEntity",
                "description": "Destination Mongo vCore container entity"
              }
            },
            "required": [
              "source",
              "destination"
            ]
          }
        }
      },
      "required": [
        "destinationDetails",
        "tasks"
      ],
      "x-ms-discriminator-value": "CosmosDBMongoToCosmosDBMongoVCore"
    },
    "SourceSqlDestinationSqlDataTransferProperties": {
      "description": "The properties of DataTransfer Job with CosmosDB noSQL as source and CosmosDB noSQL as destination",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DataTransferJobProperties"
        }
      ],
      "properties": {
        "sourceDetails": {
          "$ref": "#/definitions/CosmosDataTransferDataSourceSinkDetails",
          "description": "Source noSQL DataStore details"
        },
        "destinationDetails": {
          "$ref": "#/definitions/CosmosDataTransferDataSourceSinkDetails",
          "description": "Destination noSQL DataStore details"
        },
        "tasks": {
          "type": "array",
          "items": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/definitions/BaseDataTransferTask"
              }
            ],
            "properties": {
              "source": {
                "$ref": "#/definitions/CosmosSqlContainerEntity",
                "description": "Source noSQL container entity"
              },
              "destination": {
                "$ref": "#/definitions/CosmosSqlContainerEntity",
                "description": "Destination noSQL container entity"
              }
            },
            "required": [
              "source",
              "destination"
            ]
          }
        }
      },
      "required": [
        "tasks"
      ],
      "x-ms-discriminator-value": "CosmosDBSqlToCosmosDBSql"
    },
    "DataTransferJobProperties": {
      "description": "The properties of a DataTransfer Job",
      "type": "object",
      "properties": {
        "dataTransferType": {
          "type": "string",
          "enum": [
            "CosmosDBCassandraToCosmosDBCassandra",
            "CosmosDBCassandraToAzureBlobStorage",
            "AzureBlobStorageToCosmosDBCassandra",
            "CosmosDBMongoToCosmosDBMongo",
            "CosmosDBMongoToCosmosDBMongoVCore",
            "CosmosDBNoSqlToCosmosDBNoSql"
          ],
          "description": "Date Transfer Type"
        },
        "jobName": {
          "readOnly": true,
          "type": "string",
          "description": "Job Name"
        },
        "status": {
          "readOnly": true,
          "type": "string",
          "description": "Job Status"
        },
        "processedCount": {
          "readOnly": true,
          "type": "integer",
          "description": "Processed Count.",
          "format": "int64"
        },
        "totalCount": {
          "readOnly": true,
          "type": "integer",
          "description": "Total Count.",
          "format": "int64"
        },
        "lastUpdatedUtcTime": {
          "readOnly": true,
          "type": "string",
          "format": "date-time",
          "description": "Last Updated Time (ISO-8601 format)."
        },
        "workerCount": {
          "description": "Worker count",
          "type": "integer",
          "minimum": 0,
          "format": "int32"
        },
        "error": {
          "readOnly": true,
          "$ref": "./cosmos-db.json#/definitions/ErrorResponse",
          "description": "Error response for Faulted job"
        },
        "duration": {
          "x-ms-format": "duration-constant",
          "description": "Total Duration of Job",
          "type": "string",
          "readOnly": true
        },
        "mode": {
          "description": "Mode of job execution",
          "type": "string",
          "enum": [
            "Offline",
            "Online"
          ],
          "x-ms-enum": {
            "name": "DataTransferJobMode",
            "modelAsString": true
          }
        }
      },
      "required": [
        "dataTransferType"
      ],
      "discriminator": "dataTransferType"
    },
    "CreateJobRequest": {
      "description": "Parameters to create Data Transfer Job",
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/DataTransferJobProperties",
          "description": "Data Transfer Create Job Properties"
        }
      },
      "required": [
        "properties"
      ],
      "allOf": [
        {
          "$ref": "./cosmos-db.json#/definitions/ARMProxyResource"
        }
      ]
    },
    "DataTransferJobGetResults": {
      "description": "A Cosmos DB Data Transfer Job",
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "type": "object",
          "$ref": "#/definitions/DataTransferJobProperties"
        }
      },
      "allOf": [
        {
          "$ref": "./cosmos-db.json#/definitions/ARMProxyResource"
        }
      ]
    },
    "DataTransferJobFeedResults": {
      "description": "The List operation response, that contains the Data Transfer jobs and their properties.",
      "type": "object",
      "properties": {
        "value": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/DataTransferJobGetResults"
          },
          "description": "List of Data Transfer jobs and their properties."
        },
        "nextLink": {
          "readOnly": true,
          "type": "string",
          "description": "URL to get the next set of Data Transfer job list results if there are any."
        }
      }
    }
  },
  "parameters": {
    "JobNameParameter": {
      "name": "jobName",
      "in": "path",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method",
      "description": "Name of the Data Transfer Job"
    }
  }
}
