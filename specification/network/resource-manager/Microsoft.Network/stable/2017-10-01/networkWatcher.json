{
  "swagger": "2.0",
  "info": {
    "title": "NetworkManagementClient",
    "description": "The Microsoft Azure Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Microsoft Azure Networks service.",
    "version": "2017-10-01"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json",
    "text/json"
  ],
  "produces": [
    "application/json",
    "text/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Azure Active Directory OAuth2 Flow",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "paths": {
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}": {
      "put": {
        "tags": [
          "NetworkWatchers"
        ],
        "operationId": "NetworkWatchers_CreateOrUpdate",
        "description": "Creates or updates a network watcher in the specified resource group.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "networkWatcherName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the network watcher."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NetworkWatcher"
            },
            "description": "Parameters that define the network watcher resource."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Update successful. The operation returns the resulting network watcher resource.",
            "schema": {
              "$ref": "#/definitions/NetworkWatcher"
            }
          },
          "201": {
            "description": "Create successful. The operation returns the resulting network watcher resource.",
            "schema": {
              "$ref": "#/definitions/NetworkWatcher"
            }
          }
        }
      },
      "get": {
        "tags": [
          "NetworkWatchers"
        ],
        "operationId": "NetworkWatchers_Get",
        "description": "Gets the specified network watcher by resource group.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "networkWatcherName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the network watcher."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns a network watcher resource.",
            "schema": {
              "$ref": "#/definitions/NetworkWatcher"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "NetworkWatchers"
        ],
        "operationId": "NetworkWatchers_Delete",
        "x-ms-long-running-operation": true,
        "description": "Deletes the specified network watcher resource.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "networkWatcherName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the network watcher."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted and the operation will complete asynchronously."
          },
          "204": {
            "description": "Delete successful."
          }
        }
      },
      "patch": {
        "tags": [
          "NetworkWatchers"
        ],
        "operationId": "NetworkWatchers_UpdateTags",
        "description": "Updates a network watcher tags.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "networkWatcherName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the network watcher."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./network.json#/definitions/TagsObject"
            },
            "description": "Parameters supplied to update network watcher tags."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Update successful. The operation returns the resulting network watcher resource.",
            "schema": {
              "$ref": "#/definitions/NetworkWatcher"
            }
          }
        },
        "x-ms-examples": {
          "Update network watcher tags": { "$ref": "./examples/NetworkWatcherUpdateTags.json" }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers": {
      "get": {
        "tags": [
          "NetworkWatchers"
        ],
        "operationId": "NetworkWatchers_List",
        "description": "Gets all network watchers by resource group.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns a list of network watcher resources.",
            "schema": {
              "$ref": "#/definitions/NetworkWatcherListResult"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": null
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Network/networkWatchers": {
      "get": {
        "tags": [
          "NetworkWatchers"
        ],
        "operationId": "NetworkWatchers_ListAll",
        "description": "Gets all network watchers by subscription.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns a list of network watcher resources.",
            "schema": {
              "$ref": "#/definitions/NetworkWatcherListResult"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": null
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/topology": {
      "post": {
        "tags": [
          "NetworkWatchers"
        ],
        "operationId": "NetworkWatchers_GetTopology",
        "description": "Gets the current network topology by resource group.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "networkWatcherName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the network watcher."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TopologyParameters"
            },
            "description": "Parameters that define the representation of topology."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns the topology of resource group.",
            "schema": {
              "$ref": "#/definitions/Topology"
            }
          }
        },
        "x-ms-examples": {
          "Get Topology": {
            "$ref": "./examples/NetworkWatcherTopologyGet.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/ipFlowVerify": {
      "post": {
        "tags": [
          "NetworkWatchers"
        ],
        "operationId": "NetworkWatchers_VerifyIPFlow",
        "x-ms-long-running-operation": true,
        "description": "Verify IP flow from the specified VM to a location given the currently configured NSG rules.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "networkWatcherName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the network watcher."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VerificationIPFlowParameters"
            },
            "description": "Parameters that define the IP flow to be verified."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns the result of IP flow verification.",
            "schema": {
              "$ref": "#/definitions/VerificationIPFlowResult"
            }
          },
          "202": {
            "description": "Accepted and the operation will complete asynchronously.",
            "schema": {
              "$ref": "#/definitions/VerificationIPFlowResult"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/nextHop": {
      "post": {
        "tags": [
          "NetworkWatchers"
        ],
        "operationId": "NetworkWatchers_GetNextHop",
        "x-ms-long-running-operation": true,
        "description": "Gets the next hop from the specified VM.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "networkWatcherName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the network watcher."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NextHopParameters"
            },
            "description": "Parameters that define the source and destination endpoint."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns the next hop from the VM.",
            "schema": {
              "$ref": "#/definitions/NextHopResult"
            }
          },
          "202": {
            "description": "Accepted and the operation will complete asynchronously.",
            "schema": {
              "$ref": "#/definitions/NextHopResult"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/securityGroupView": {
      "post": {
        "tags": [
          "NetworkWatchers"
        ],
        "operationId": "NetworkWatchers_GetVMSecurityRules",
        "x-ms-long-running-operation": true,
        "description": "Gets the configured and effective security group rules on the specified VM.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "networkWatcherName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the network watcher."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SecurityGroupViewParameters"
            },
            "description": "Parameters that define the VM to check security groups for."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns security group rules on the VM.",
            "schema": {
              "$ref": "#/definitions/SecurityGroupViewResult"
            }
          },
          "202": {
            "description": "Accepted and the operation will complete asynchronously.",
            "schema": {
              "$ref": "#/definitions/SecurityGroupViewResult"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/packetCaptures/{packetCaptureName}": {
      "put": {
        "tags": [
          "PacketCaptures"
        ],
        "operationId": "PacketCaptures_Create",
        "x-ms-long-running-operation": true,
        "description": "Create and start a packet capture on the specified VM.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "networkWatcherName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the network watcher."
          },
          {
            "name": "packetCaptureName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the packet capture session."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PacketCapture"
            },
            "description": "Parameters that define the create packet capture operation."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "201": {
            "description": "Request successful. The operation returns the resulting packet capture session.",
            "schema": {
              "$ref": "#/definitions/PacketCaptureResult"
            }
          }
        }
      },
      "get": {
        "tags": [
          "PacketCaptures"
        ],
        "operationId": "PacketCaptures_Get",
        "description": "Gets a packet capture session by name.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "networkWatcherName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the network watcher."
          },
          {
            "name": "packetCaptureName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the packet capture session."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns a packet capture session.",
            "schema": {
              "$ref": "#/definitions/PacketCaptureResult"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "PacketCaptures"
        ],
        "operationId": "PacketCaptures_Delete",
        "x-ms-long-running-operation": true,
        "description": "Deletes the specified packet capture session.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "networkWatcherName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the network watcher."
          },
          {
            "name": "packetCaptureName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the packet capture session."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "204": {
            "description": "Delete successful."
          },
          "202": {
            "description": "Accepted and the operation will complete asynchronously."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/packetCaptures/{packetCaptureName}/stop": {
      "post": {
        "tags": [
          "PacketCaptures"
        ],
        "operationId": "PacketCaptures_Stop",
        "x-ms-long-running-operation": true,
        "description": "Stops a specified packet capture session.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "networkWatcherName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the network watcher."
          },
          {
            "name": "packetCaptureName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the packet capture session."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation stops the packet capture session."
          },
          "202": {
            "description": "Accepted and the operation will complete asynchronously."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/packetCaptures/{packetCaptureName}/queryStatus": {
      "post": {
        "tags": [
          "PacketCaptures"
        ],
        "operationId": "PacketCaptures_GetStatus",
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "description": "Query the status of a running packet capture session.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "networkWatcherName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Network Watcher resource."
          },
          {
            "name": "packetCaptureName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name given to the packet capture session."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful query of packet capture status.",
            "schema": {
              "$ref": "#/definitions/PacketCaptureQueryStatusResult"
            }
          },
          "202": {
            "description": "Accepted query status of packet capture.",
            "schema": {
              "$ref": "#/definitions/PacketCaptureQueryStatusResult"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/packetCaptures": {
      "get": {
        "tags": [
          "PacketCaptures"
        ],
        "operationId": "PacketCaptures_List",
        "description": "Lists all packet capture sessions within the specified resource group.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "networkWatcherName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Network Watcher resource."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful packet capture enumeration request.",
            "schema": {
              "$ref": "#/definitions/PacketCaptureListResult"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": null
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/troubleshoot": {
      "post": {
        "tags": [
          "NetworkWatchers"
        ],
        "operationId": "NetworkWatchers_GetTroubleshooting",
        "x-ms-long-running-operation": true,
        "description": "Initiate troubleshooting on a specified resource",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "networkWatcherName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the network watcher resource."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TroubleshootingParameters"
            },
            "description": "Parameters that define the resource to troubleshoot."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful troubleshooting request",
            "schema": {
              "$ref": "#/definitions/TroubleshootingResult"
            }
          },
          "202": {
            "description": "Accepted get troubleshooting request.",
            "schema": {
              "$ref": "#/definitions/TroubleshootingResult"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/queryTroubleshootResult": {
      "post": {
        "tags": [
          "NetworkWatchers"
        ],
        "operationId": "NetworkWatchers_GetTroubleshootingResult",
        "x-ms-long-running-operation": true,
        "description": "Get the last completed troubleshooting result on a specified resource",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "networkWatcherName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the network watcher resource."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/QueryTroubleshootingParameters"
            },
            "description": "Parameters that define the resource to query the troubleshooting result."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful get troubleshooting result request",
            "schema": {
              "$ref": "#/definitions/TroubleshootingResult"
            }
          },
          "202": {
            "description": "Accepted get troubleshooting result request.",
            "schema": {
              "$ref": "#/definitions/TroubleshootingResult"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/configureFlowLog": {
      "post": {
        "tags": [
          "NetworkWatchers"
        ],
        "operationId": "NetworkWatchers_SetFlowLogConfiguration",
        "x-ms-long-running-operation": true,
        "description": "Configures flow log on a specified resource.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the network watcher resource group."
          },
          {
            "name": "networkWatcherName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the network watcher resource."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FlowLogInformation"
            },
            "description": "Parameters that define the configuration of flow log."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request for setting flow log configuration.",
            "schema": {
              "$ref": "#/definitions/FlowLogInformation"
            }
          },
          "202": {
            "description": "Accepted and the operation will complete asynchronously.",
            "schema": {
              "$ref": "#/definitions/FlowLogInformation"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/queryFlowLogStatus": {
      "post": {
        "tags": [
          "NetworkWatchers"
        ],
        "operationId": "NetworkWatchers_GetFlowLogStatus",
        "x-ms-long-running-operation": true,
        "description": "Queries status of flow log on a specified resource.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the network watcher resource group."
          },
          {
            "name": "networkWatcherName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the network watcher resource."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FlowLogStatusParameters"
            },
            "description": "Parameters that define a resource to query flow log status."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request for query flow log status.",
            "schema": {
              "$ref": "#/definitions/FlowLogInformation"
            }
          },
          "202": {
            "description": "Accepted and the operation will complete asynchronously.",
            "schema": {
              "$ref": "#/definitions/FlowLogInformation"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/connectivityCheck": {
      "post": {
        "tags": [
          "NetworkWatchers"
        ],
        "operationId": "NetworkWatchers_CheckConnectivity",
        "x-ms-long-running-operation": true,
        "description": "Verifies the possibility of establishing a direct TCP connection from a virtual machine to a given endpoint including another VM or an arbitrary remote server.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the network watcher resource group."
          },
          {
            "name": "networkWatcherName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the network watcher resource."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ConnectivityParameters"
            },
            "description": "Parameters that determine how the connectivity check will be performed."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request for checking connectivity.",
            "schema": {
              "$ref": "#/definitions/ConnectivityInformation"
            }
          },
          "202": {
            "description": "Accepted and the operation will complete asynchronously.",
            "schema": {
              "$ref": "#/definitions/ConnectivityInformation"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/azureReachabilityReport": {
      "post": {
        "tags": [
          "NetworkWatchers"
        ],
        "operationId": "NetworkWatchers_GetAzureReachabilityReport",
        "x-ms-long-running-operation": true,
        "description": "Gets the relative latency score for internet service providers from a specified location to Azure regions.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the network watcher resource group."
          },
          {
            "name": "networkWatcherName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the network watcher resource."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AzureReachabilityReportParameters"
            },
            "description": "Parameters that determine Azure reachability report configuration."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request for Azure reachability report.",
            "schema": {
              "$ref": "#/definitions/AzureReachabilityReport"
            }
          },
          "202": {
            "description": "Accepted and the operation will complete asynchronously.",
            "schema": {
              "$ref": "#/definitions/AzureReachabilityReport"
            }
          }
        },
        "x-ms-examples": {
          "Get Azure Reachability Report": {
            "$ref": "./examples/NetworkWatcherAzureReachabilityReportGet.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/availableProvidersList": {
      "post": {
        "tags": [
          "NetworkWatchers"
        ],
        "operationId": "NetworkWatchers_ListAvailableProviders",
        "x-ms-long-running-operation": true,
        "description": "Lists all available internet service providers for a specified Azure region.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the network watcher resource group."
          },
          {
            "name": "networkWatcherName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the network watcher resource."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AvailableProvidersListParameters"
            },
            "description": "Parameters that scope the list of available providers."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request for list of available providers.",
            "schema": {
              "$ref": "#/definitions/AvailableProvidersList"
            }
          },
          "202": {
            "description": "Accepted and the operation will complete asynchronously.",
            "schema": {
              "$ref": "#/definitions/AvailableProvidersList"
            }
          }
        },
        "x-ms-examples": {
          "Get Azure Reachability Report": {
            "$ref": "./examples/NetworkWatcherAvailableProvidersListGet.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/connectionMonitors/{connectionMonitorName}": {
      "put": {
        "tags": [
          "ConnectionMonitors"
        ],
        "operationId": "ConnectionMonitors_CreateOrUpdate",
        "x-ms-long-running-operation": true,
        "description": "Create or update a connection monitor.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group containing Network Watcher."
          },
          {
            "name": "networkWatcherName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Network Watcher resource."
          },
          {
            "name": "connectionMonitorName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the connection monitor."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ConnectionMonitor"
            },
            "description": "Parameters that define the operation to create a connection monitor."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Update successful. The operation returns the resulting network watcher resource.",
            "schema": {
              "$ref": "#/definitions/ConnectionMonitorResult"
            }
          },
          "201": {
            "description": "Create successful. The operation returns the resulting network watcher resource.",
            "schema": {
              "$ref": "#/definitions/ConnectionMonitorResult"
            }
          }
        }
      },
      "get": {
        "tags": [
          "ConnectionMonitors"
        ],
        "operationId": "ConnectionMonitors_Get",
        "description": "Gets a connection monitor by name.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group containing Network Watcher."
          },
          {
            "name": "networkWatcherName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Network Watcher resource."
          },
          {
            "name": "connectionMonitorName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the connection monitor."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns a connection monitor.",
            "schema": {
              "$ref": "#/definitions/ConnectionMonitorResult"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ConnectionMonitors"
        ],
        "operationId": "ConnectionMonitors_Delete",
        "x-ms-long-running-operation": true,
        "description": "Deletes the specified connection monitor.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group containing Network Watcher."
          },
          {
            "name": "networkWatcherName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Network Watcher resource."
          },
          {
            "name": "connectionMonitorName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the connection monitor."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "204": {
            "description": "Delete successful."
          },
          "202": {
            "description": "Accepted. The operation will complete asynchronously."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/connectionMonitors/{connectionMonitorName}/stop": {
      "post": {
        "tags": [
          "ConnectionMonitors"
        ],
        "operationId": "ConnectionMonitors_Stop",
        "x-ms-long-running-operation": true,
        "description": "Stops the specified connection monitor.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group containing Network Watcher."
          },
          {
            "name": "networkWatcherName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Network Watcher resource."
          },
          {
            "name": "connectionMonitorName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the connection monitor."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation stops the connection monitor."
          },
          "202": {
            "description": "Accepted. The operation will complete asynchronously."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/connectionMonitors/{connectionMonitorName}/start": {
      "post": {
        "tags": [
          "ConnectionMonitors"
        ],
        "operationId": "ConnectionMonitors_Start",
        "x-ms-long-running-operation": true,
        "description": "Starts the specified connection monitor.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group containing Network Watcher."
          },
          {
            "name": "networkWatcherName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Network Watcher resource."
          },
          {
            "name": "connectionMonitorName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the connection monitor."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation starts the connection monitor."
          },
          "202": {
            "description": "Accepted. The operation will complete asynchronously."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/connectionMonitors/{connectionMonitorName}/query": {
      "post": {
        "tags": [
          "ConnectionMonitors"
        ],
        "operationId": "ConnectionMonitors_Query",
        "x-ms-long-running-operation": true,
        "description": "Query a snapshot of the most recent connection states.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group containing Network Watcher."
          },
          {
            "name": "networkWatcherName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Network Watcher resource."
          },
          {
            "name": "connectionMonitorName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name given to the connection monitor."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful query of connection states.",
            "schema": {
              "$ref": "#/definitions/ConnectionMonitorQueryResult"
            }
          },
          "202": {
            "description": "Accepted query of connection states.",
            "schema": {
              "$ref": "#/definitions/ConnectionMonitorQueryResult"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/connectionMonitors": {
      "get": {
        "tags": [
          "ConnectionMonitors"
        ],
        "operationId": "ConnectionMonitors_List",
        "description": "Lists all connection monitors for the specified Network Watcher.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group containing Network Watcher."
          },
          {
            "name": "networkWatcherName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Network Watcher resource."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful connection monitor enumeration request.",
            "schema": {
              "$ref": "#/definitions/ConnectionMonitorListResult"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": null
        }
      }
    }
  },
  "definitions": {
    "NetworkWatcher": {
      "properties": {
        "etag": {
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated."
        },
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/NetworkWatcherPropertiesFormat"
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/Resource"
        }
      ],
      "description": "Network watcher in a resource group."
    },
    "NetworkWatcherPropertiesFormat": {
      "properties": {
        "provisioningState": {
          "readOnly": true,
          "type": "string",
          "enum": [
            "Succeeded",
            "Updating",
            "Deleting",
            "Failed"
          ],
          "x-ms-enum": {
            "name": "ProvisioningState",
            "modelAsString": true
          },
          "description": "The provisioning state of the resource."
        }
      },
      "description": "The network watcher properties."
    },
    "NetworkWatcherListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NetworkWatcher"
          }
        }
      },
      "description": "List of network watcher resources."
    },
    "TopologyParameters": {
      "properties": {
        "targetResourceGroupName": {
          "type": "string",
          "description": "The name of the target resource group to perform topology on."
        },
        "targetVirtualNetwork": {
          "$ref": "./network.json#/definitions/SubResource",
          "description": "The reference of the Virtual Network resource."
        },
        "targetSubnet": {
          "$ref": "./network.json#/definitions/SubResource",
          "description": "The reference of the Subnet resource."
        }
      },
      "description": "Parameters that define the representation of topology."
    },
    "Topology": {
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "GUID representing the operation id."
        },
        "createdDateTime": {
          "readOnly": true,
          "type": "string",
          "format": "date-time",
          "description": "The datetime when the topology was initially created for the resource group."
        },
        "lastModified": {
          "readOnly": true,
          "type": "string",
          "format": "date-time",
          "description": "The datetime when the topology was last modified."
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TopologyResource"
          }
        }
      },
      "description": "Topology of the specified resource group."
    },
    "TopologyResource": {
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the resource."
        },
        "id": {
          "type": "string",
          "description": "ID of the resource."
        },
        "location": {
          "type": "string",
          "description": "Resource location."
        },
        "associations": {
          "type": "array",
          "description": "Holds the associations the resource has with other resources in the resource group.",
          "items": {
            "$ref": "#/definitions/TopologyAssociation"
          }
        }
      },
      "description": "The network resource topology information for the given resource group."
    },
    "TopologyAssociation": {
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the resource that is associated with the parent resource."
        },
        "resourceId": {
          "type": "string",
          "description": "The ID of the resource that is associated with the parent resource."
        },
        "associationType": {
          "type": "string",
          "enum": [
            "Associated",
            "Contains"
          ],
          "x-ms-enum": {
            "name": "AssociationType",
            "modelAsString": true
          },
          "description": "The association type of the child resource to the parent resource."
        }
      },
      "description": "Resources that have an association with the parent resource."
    },
    "VerificationIPFlowParameters": {
      "description": "Parameters that define the IP flow to be verified.",
      "required": [
        "targetResourceId",
        "direction",
        "protocol",
        "localPort",
        "remotePort",
        "localIPAddress",
        "remoteIPAddress"
      ],
      "properties": {
        "targetResourceId": {
          "type": "string",
          "description": "The ID of the target resource to perform next-hop on."
        },
        "direction": {
          "type": "string",
          "enum": [
            "Inbound",
            "Outbound"
          ],
          "x-ms-enum": {
            "name": "Direction",
            "modelAsString": true
          },
          "description": "The direction of the packet represented as a 5-tuple."
        },
        "protocol": {
          "type": "string",
          "enum": [
            "TCP",
            "UDP"
          ],
          "x-ms-enum": {
            "name": "Protocol",
            "modelAsString": true
          },
          "description": "Protocol to be verified on."
        },
        "localPort": {
          "type": "string",
          "description": "The local port. Acceptable values are a single integer in the range (0-65535). Support for * for the source port, which depends on the direction."
        },
        "remotePort": {
          "type": "string",
          "description": "The remote port. Acceptable values are a single integer in the range (0-65535). Support for * for the source port, which depends on the direction."
        },
        "localIPAddress": {
          "type": "string",
          "description": "The local IP address. Acceptable values are valid IPv4 addresses."
        },
        "remoteIPAddress": {
          "type": "string",
          "description": "The remote IP address. Acceptable values are valid IPv4 addresses."
        },
        "targetNicResourceId": {
          "type": "string",
          "description": "The NIC ID. (If VM has multiple NICs and IP forwarding is enabled on any of them, then this parameter must be specified. Otherwise optional)."
        }
      }
    },
    "VerificationIPFlowResult": {
      "description": "Results of IP flow verification on the target resource.",
      "properties": {
        "access": {
          "type": "string",
          "enum": [
            "Allow",
            "Deny"
          ],
          "x-ms-enum": {
            "name": "Access",
            "modelAsString": true
          },
          "description": "Indicates whether the traffic is allowed or denied."
        },
        "ruleName": {
          "type": "string",
          "description": "Name of the rule. If input is not matched against any security rule, it is not displayed."
        }
      }
    },
    "NextHopParameters": {
      "description": "Parameters that define the source and destination endpoint.",
      "required": [
        "targetResourceId",
        "sourceIPAddress",
        "destinationIPAddress"
      ],
      "properties": {
        "targetResourceId": {
          "type": "string",
          "description": "The resource identifier of the target resource against which the action is to be performed."
        },
        "sourceIPAddress": {
          "type": "string",
          "description": "The source IP address."
        },
        "destinationIPAddress": {
          "type": "string",
          "description": "The destination IP address."
        },
        "targetNicResourceId": {
          "type": "string",
          "description": "The NIC ID. (If VM has multiple NICs and IP forwarding is enabled on any of the nics, then this parameter must be specified. Otherwise optional)."
        }
      }
    },
    "NextHopResult": {
      "description": "The information about next hop from the specified VM.",
      "properties": {
        "nextHopType": {
          "type": "string",
          "enum": [
            "Internet",
            "VirtualAppliance",
            "VirtualNetworkGateway",
            "VnetLocal",
            "HyperNetGateway",
            "None"
          ],
          "x-ms-enum": {
            "name": "NextHopType",
            "modelAsString": true
          },
          "description": "Next hop type."
        },
        "nextHopIpAddress": {
          "type": "string",
          "description": "Next hop IP Address"
        },
        "routeTableId": {
          "type": "string",
          "description": "The resource identifier for the route table associated with the route being returned. If the route being returned does not correspond to any user created routes then this field will be the string 'System Route'."
        }
      }
    },
    "SecurityGroupViewParameters": {
      "description": "Parameters that define the VM to check security groups for.",
      "required": [
        "targetResourceId"
      ],
      "properties": {
        "targetResourceId": {
          "type": "string",
          "description": "ID of the target VM."
        }
      }
    },
    "SecurityGroupViewResult": {
      "description": "The information about security rules applied to the specified VM.",
      "properties": {
        "networkInterfaces": {
          "type": "array",
          "description": "List of network interfaces on the specified VM.",
          "items": {
            "$ref": "#/definitions/SecurityGroupNetworkInterface"
          }
        }
      }
    },
    "SecurityGroupNetworkInterface": {
      "description": "Network interface and all its associated security rules.",
      "properties": {
        "id": {
          "type": "string",
          "description": "ID of the network interface."
        },
        "securityRuleAssociations": {
          "$ref": "#/definitions/SecurityRuleAssociations"
        }
      }
    },
    "SecurityRuleAssociations": {
      "description": "All security rules associated with the network interface.",
      "properties": {
        "networkInterfaceAssociation": {
          "$ref": "#/definitions/NetworkInterfaceAssociation"
        },
        "subnetAssociation": {
          "$ref": "#/definitions/SubnetAssociation"
        },
        "defaultSecurityRules": {
          "type": "array",
          "items": {
            "$ref": "./networkSecurityGroup.json#/definitions/SecurityRule"
          },
          "description": "Collection of default security rules of the network security group."
        },
        "effectiveSecurityRules": {
          "type": "array",
          "items": {
            "$ref": "./networkInterface.json#/definitions/EffectiveNetworkSecurityRule"
          },
          "description": "Collection of effective security rules."
        }
      }
    },
    "NetworkInterfaceAssociation": {
      "description": "Network interface and its custom security rules.",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Network interface ID."
        },
        "securityRules": {
          "type": "array",
          "description": "Collection of custom security rules.",
          "items": {
            "$ref": "./networkSecurityGroup.json#/definitions/SecurityRule"
          }
        }
      }
    },
    "SubnetAssociation": {
      "description": "Network interface and its custom security rules.",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Subnet ID."
        },
        "securityRules": {
          "type": "array",
          "description": "Collection of custom security rules.",
          "items": {
            "$ref": "./networkSecurityGroup.json#/definitions/SecurityRule"
          }
        }
      }
    },
    "PacketCapture": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/PacketCaptureParameters"
        }
      },
      "required": [
        "properties"
      ],
      "description": "Parameters that define the create packet capture operation."
    },
    "PacketCaptureParameters": {
      "properties": {
        "target": {
          "type": "string",
          "description": "The ID of the targeted resource, only VM is currently supported."
        },
        "bytesToCapturePerPacket": {
          "type": "integer",
          "default": 0,
          "description": "Number of bytes captured per packet, the remaining bytes are truncated."
        },
        "totalBytesPerSession": {
          "type": "integer",
          "default": 1073741824,
          "description": "Maximum size of the capture output."
        },
        "timeLimitInSeconds": {
          "type": "integer",
          "default": 18000,
          "description": "Maximum duration of the capture session in seconds."
        },
        "storageLocation": {
          "$ref": "#/definitions/PacketCaptureStorageLocation"
        },
        "filters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PacketCaptureFilter"
          }
        }
      },
      "required": [
        "target",
        "storageLocation"
      ],
      "description": "Parameters that define the create packet capture operation."
    },
    "PacketCaptureStorageLocation": {
      "properties": {
        "storageId": {
          "type": "string",
          "description": "The ID of the storage account to save the packet capture session. Required if no local file path is provided."
        },
        "storagePath": {
          "type": "string",
          "description": "The URI of the storage path to save the packet capture. Must be a well-formed URI describing the location to save the packet capture."
        },
        "filePath": {
          "type": "string",
          "description": "A valid local path on the targeting VM. Must include the name of the capture file (*.cap). For linux virtual machine it must start with /var/captures. Required if no storage ID is provided, otherwise optional."
        }
      },
      "description": "Describes the storage location for a packet capture session."
    },
    "PacketCaptureFilter": {
      "properties": {
        "protocol": {
          "type": "string",
          "enum": [
            "TCP",
            "UDP",
            "Any"
          ],
          "x-ms-enum": {
            "name": "PcProtocol",
            "modelAsString": true
          },
          "default": "Any",
          "description": "Protocol to be filtered on."
        },
        "localIPAddress": {
          "type": "string",
          "description": "Local IP Address to be filtered on. Notation: \"127.0.0.1\" for single address entry. \"127.0.0.1-127.0.0.255\" for range. \"127.0.0.1;127.0.0.5\"? for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Default = null."
        },
        "remoteIPAddress": {
          "type": "string",
          "description": "Local IP Address to be filtered on. Notation: \"127.0.0.1\" for single address entry. \"127.0.0.1-127.0.0.255\" for range. \"127.0.0.1;127.0.0.5;\" for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Default = null."
        },
        "localPort": {
          "type": "string",
          "description": "Local port to be filtered on. Notation: \"80\" for single port entry.\"80-85\" for range. \"80;443;\" for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Default = null."
        },
        "remotePort": {
          "type": "string",
          "description": "Remote port to be filtered on. Notation: \"80\" for single port entry.\"80-85\" for range. \"80;443;\" for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Default = null."
        }
      },
      "description": "Filter that is applied to packet capture request. Multiple filters can be applied."
    },
    "PacketCaptureListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PacketCaptureResult"
          },
          "description": "Information about packet capture sessions."
        }
      },
      "description": "List of packet capture sessions."
    },
    "PacketCaptureResult": {
      "properties": {
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Name of the packet capture session."
        },
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "ID of the packet capture operation."
        },
        "etag": {
          "type": "string",
          "default": "A unique read-only string that changes whenever the resource is updated."
        },
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/PacketCaptureResultProperties"
        }
      },
      "description": "Information about packet capture session."
    },
    "PacketCaptureResultProperties": {
      "properties": {
        "provisioningState": {
          "type": "string",
          "enum": [
            "Succeeded",
            "Updating",
            "Deleting",
            "Failed"
          ],
          "x-ms-enum": {
            "name": "ProvisioningState",
            "modelAsString": true
          },
          "description": "The provisioning state of the packet capture session."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/PacketCaptureParameters"
        }
      ],
      "description": "Describes the properties of a packet capture session."
    },
    "PacketCaptureQueryStatusResult": {
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the packet capture resource."
        },
        "id": {
          "type": "string",
          "description": "The ID of the packet capture resource."
        },
        "captureStartTime": {
          "type": "string",
          "format": "date-time",
          "description": "The start time of the packet capture session."
        },
        "packetCaptureStatus": {
          "type": "string",
          "enum": [
            "NotStarted",
            "Running",
            "Stopped",
            "Error",
            "Unknown"
          ],
          "x-ms-enum": {
            "name": "PcStatus",
            "modelAsString": true
          },
          "description": "The status of the packet capture session."
        },
        "stopReason": {
          "type": "string",
          "description": "The reason the current packet capture session was stopped."
        },
        "packetCaptureError": {
          "type": "array",
          "description": "List of errors of packet capture session.",
          "items": {
            "type": "string",
            "enum": [
              "InternalError",
              "AgentStopped",
              "CaptureFailed",
              "LocalFileFailed",
              "StorageFailed"
            ],
            "x-ms-enum": {
              "name": "PcError",
              "modelAsString": true
            }
          }
        }
      },
      "description": "Status of packet capture session."
    },
    "TroubleshootingParameters": {
      "description": "Parameters that define the resource to troubleshoot.",
      "required": [
        "targetResourceId",
        "properties"
      ],
      "properties": {
        "targetResourceId": {
          "description": "The target resource to troubleshoot.",
          "type": "string"
        },
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/TroubleshootingProperties"
        }
      }
    },
    "QueryTroubleshootingParameters": {
      "description": "Parameters that define the resource to query the troubleshooting result.",
      "required": [
        "targetResourceId"
      ],
      "properties": {
        "targetResourceId": {
          "description": "The target resource ID to query the troubleshooting result.",
          "type": "string"
        }
      }
    },
    "TroubleshootingProperties": {
      "description": "Storage location provided for troubleshoot.",
      "required": [
        "storageId",
        "storagePath"
      ],
      "properties": {
        "storageId": {
          "description": "The ID for the storage account to save the troubleshoot result.",
          "type": "string"
        },
        "storagePath": {
          "description": "The path to the blob to save the troubleshoot result in.",
          "type": "string"
        }
      }
    },
    "TroubleshootingResult": {
      "description": "Troubleshooting information gained from specified resource.",
      "properties": {
        "startTime": {
          "type": "string",
          "format": "date-time",
          "description": "The start time of the troubleshooting."
        },
        "endTime": {
          "type": "string",
          "format": "date-time",
          "description": "The end time of the troubleshooting."
        },
        "code": {
          "type": "string",
          "description": "The result code of the troubleshooting."
        },
        "results": {
          "type": "array",
          "description": "Information from troubleshooting.",
          "items": {
            "$ref": "#/definitions/TroubleshootingDetails"
          }
        }
      }
    },
    "TroubleshootingDetails": {
      "description": "Information gained from troubleshooting of specified resource.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The id of the get troubleshoot operation."
        },
        "reasonType": {
          "type": "string",
          "description": "Reason type of failure."
        },
        "summary": {
          "type": "string",
          "description": "A summary of troubleshooting."
        },
        "detail": {
          "type": "string",
          "description": "Details on troubleshooting results."
        },
        "recommendedActions": {
          "type": "array",
          "description": "List of recommended actions.",
          "items": {
            "$ref": "#/definitions/TroubleshootingRecommendedActions"
          }
        }
      }
    },
    "TroubleshootingRecommendedActions": {
      "description": "Recommended actions based on discovered issues.",
      "properties": {
        "actionId": {
          "description": "ID of the recommended action.",
          "type": "string"
        },
        "actionText": {
          "description": "Description of recommended actions.",
          "type": "string"
        },
        "actionUri": {
          "description": "The uri linking to a documentation for the recommended troubleshooting actions.",
          "type": "string"
        },
        "actionUriText": {
          "description": "The information from the URI for the recommended troubleshooting actions.",
          "type": "string"
        }
      }
    },
    "FlowLogProperties": {
      "description": "Parameters that define the configuration of flow log.",
      "required": [
        "storageId",
        "enabled"
      ],
      "properties": {
        "storageId": {
          "description": "ID of the storage account which is used to store the flow log.",
          "type": "string"
        },
        "enabled": {
          "description": "Flag to enable/disable flow logging.",
          "type": "boolean"
        },
        "retentionPolicy": {
          "$ref": "#/definitions/RetentionPolicyParameters"
        }
      }
    },
    "FlowLogStatusParameters": {
      "description": "Parameters that define a resource to query flow log status.",
      "required": [
        "targetResourceId"
      ],
      "properties": {
        "targetResourceId": {
          "description": "The target resource where getting the flow logging status.",
          "type": "string"
        }
      }
    },
    "RetentionPolicyParameters": {
      "description": "Parameters that define the retention policy for flow log.",
      "properties": {
        "days": {
          "description": "Number of days to retain flow log records.",
          "type": "integer",
          "default": 0
        },
        "enabled": {
          "description": "Flag to enable/disable retention.",
          "type": "boolean",
          "default": false
        }
      }
    },
    "FlowLogInformation": {
      "description": "Information on the configuration of flow log.",
      "required": [
        "targetResourceId",
        "properties"
      ],
      "properties": {
        "targetResourceId": {
          "description": "The ID of the resource to configure for flow logging.",
          "type": "string"
        },
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/FlowLogProperties"
        }
      }
    },
    "ConnectivityParameters": {
      "description": "Parameters that determine how the connectivity check will be performed.",
      "required": [
        "source",
        "destination"
      ],
      "properties": {
        "source": {
          "$ref": "#/definitions/ConnectivitySource"
        },
        "destination": {
          "$ref": "#/definitions/ConnectivityDestination"
        }
      }
    },
    "ConnectivitySource": {
      "description": "Parameters that define the source of the connection.",
      "required": [
        "resourceId"
      ],
      "properties": {
        "resourceId": {
          "description": "The ID of the resource from which a connectivity check will be initiated.",
          "type": "string"
        },
        "port": {
          "description": "The source port from which a connectivity check will be performed.",
          "type": "integer"
        }
      }
    },
    "ConnectivityDestination": {
      "description": "Parameters that define destination of connection.",
      "properties": {
        "resourceId": {
          "description": "The ID of the resource to which a connection attempt will be made.",
          "type": "string"
        },
        "address": {
          "description": "The IP address or URI the resource to which a connection attempt will be made.",
          "type": "string"
        },
        "port": {
          "description": "Port on which check connectivity will be performed.",
          "type": "integer"
        }
      }
    },
    "ConnectivityInformation": {
      "description": "Information on the connectivity status.",
      "properties": {
        "hops": {
          "readOnly": true,
          "type": "array",
          "description": "List of hops between the source and the destination.",
          "items": {
            "$ref": "#/definitions/ConnectivityHop"
          }
        },
        "connectionStatus": {
          "readOnly": true,
          "type": "string",
          "enum": [
            "Unknown",
            "Connected",
            "Disconnected",
            "Degraded"
          ],
          "x-ms-enum": {
            "name": "ConnectionStatus",
            "modelAsString": true
          },
          "description": "The connection status."
        },
        "avgLatencyInMs": {
          "description": "Average latency in milliseconds.",
          "readOnly": true,
          "type": "integer"
        },
        "minLatencyInMs": {
          "description": "Minimum latency in milliseconds.",
          "readOnly": true,
          "type": "integer"
        },
        "maxLatencyInMs": {
          "description": "Maximum latency in milliseconds.",
          "readOnly": true,
          "type": "integer"
        },
        "probesSent": {
          "description": "Total number of probes sent.",
          "readOnly": true,
          "type": "integer"
        },
        "probesFailed": {
          "description": "Number of failed probes.",
          "readOnly": true,
          "type": "integer"
        }
      }
    },
    "ConnectivityHop": {
      "description": "Information about a hop between the source and the destination.",
      "properties": {
        "type": {
          "description": "The type of the hop.",
          "readOnly": true,
          "type": "string"
        },
        "id": {
          "description": "The ID of the hop.",
          "readOnly": true,
          "type": "string"
        },
        "address": {
          "description": "The IP address of the hop.",
          "readOnly": true,
          "type": "string"
        },
        "resourceId": {
          "description": "The ID of the resource corresponding to this hop.",
          "readOnly": true,
          "type": "string"
        },
        "nextHopIds": {
          "readOnly": true,
          "type": "array",
          "description": "List of next hop identifiers.",
          "items": {
            "type": "string"
          }
        },
        "issues": {
          "readOnly": true,
          "type": "array",
          "description": "List of issues.",
          "items": {
            "$ref": "#/definitions/ConnectivityIssue"
          }
        }
      }
    },
    "ConnectivityIssue": {
      "description": "Information about an issue encountered in the process of checking for connectivity.",
      "properties": {
        "origin": {
          "readOnly": true,
          "type": "string",
          "enum": [
            "Local",
            "Inbound",
            "Outbound"
          ],
          "x-ms-enum": {
            "name": "Origin",
            "modelAsString": true
          },
          "description": "The origin of the issue."
        },
        "severity": {
          "readOnly": true,
          "type": "string",
          "enum": [
            "Error",
            "Warning"
          ],
          "x-ms-enum": {
            "name": "Severity",
            "modelAsString": true
          },
          "description": "The severity of the issue."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "enum": [
            "Unknown",
            "AgentStopped",
            "GuestFirewall",
            "DnsResolution",
            "SocketBind",
            "NetworkSecurityRule",
            "UserDefinedRoute",
            "PortThrottled",
            "Platform"
          ],
          "x-ms-enum": {
            "name": "IssueType",
            "modelAsString": true
          },
          "description": "The type of issue."
        },
        "context": {
          "readOnly": true,
          "type": "array",
          "description": "Provides additional context on the issue.",
          "items": {
            "$ref": "#/definitions/IssueContext"
          }
        }
      }
    },
    "IssueContext": {
      "description": "A key-value pair that provides additional context on the issue.",
      "type": "object",
      "additionalProperties": {
        "type": "string"
      }
    },
    "AzureReachabilityReportParameters": {
      "properties": {
        "providerLocation": {
          "$ref": "#/definitions/AzureReachabilityReportLocation"
        },
        "providers": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of Internet service providers."
        },
        "azureLocations": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Optional Azure regions to scope the query to."
        },
        "startTime": {
          "type": "string",
          "format": "date-time",
          "description": "The start time for the Azure reachability report."
        },
        "endTime": {
          "type": "string",
          "format": "date-time",
          "description": "The end time for the Azure reachability report."
        }
      },
      "required": [
        "providerLocation",
        "startTime",
        "endTime"
      ],
      "description": "Geographic and time constraints for Azure reachability report."
    },
    "AzureReachabilityReportLocation": {
      "properties": {
        "country": {
          "type": "string",
          "description": "The name of the country."
        },
        "state": {
          "type": "string",
          "description": "The name of the state."
        },
        "city": {
          "type": "string",
          "description": "The name of the city or town."
        }
      },
      "required": [
        "country"
      ],
      "description": "Parameters that define a geographic location."
    },
    "AzureReachabilityReport": {
      "properties": {
        "aggregationLevel": {
          "type": "string",
          "description": "The aggregation level of Azure reachability report. Can be Country, State or City."
        },
        "providerLocation": {
          "$ref": "#/definitions/AzureReachabilityReportLocation"
        },
        "reachabilityReport": {
          "type": "array",
          "description": "List of Azure reachability report items.",
          "items": {
            "$ref": "#/definitions/AzureReachabilityReportItem"
          }
        }
      },
      "required": [
        "aggregationLevel",
        "providerLocation",
        "reachabilityReport"
      ],
      "description": "Azure reachability report details."
    },
    "AzureReachabilityReportItem": {
      "properties": {
        "provider": {
          "type": "string",
          "description": "The Internet service provider."
        },
        "azureLocation": {
          "type": "string",
          "description": "The Azure region."
        },
        "latencies": {
          "type": "array",
          "description": "List of latency details for each of the time series.",
          "items": {
            "$ref": "#/definitions/AzureReachabilityReportLatencyInfo"
          }
        }
      },
      "description": "Azure reachability report details for a given provider location."
    },
    "AzureReachabilityReportLatencyInfo": {
      "properties": {
        "timeStamp": {
          "type": "string",
          "format": "date-time",
          "description": "The time stamp."
        },
        "score": {
          "type": "integer",
          "description": "The relative latency score between 1 and 100, higher values indicating a faster connection.",
          "minimum": 1,
          "maximum": 100
        }
      },
      "description": "Details on latency for a time series."
    },
    "AvailableProvidersListParameters": {
      "properties": {
        "azureLocations": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A list of Azure regions."
        },
        "country": {
          "type": "string",
          "description": "The country for available providers list."
        },
        "state": {
          "type": "string",
          "description": "The state for available providers list."
        },
        "city": {
          "type": "string",
          "description": "The city or town for available providers list."
        }
      },
      "description": "Constraints that determine the list of available Internet service providers."
    },
    "AvailableProvidersList": {
      "properties": {
        "countries": {
          "type": "array",
          "description": "List of available countries.",
          "items": {
            "$ref": "#/definitions/AvailableProvidersListCountry"
          }
        }
      },
      "required": [
        "countries"
      ],
      "description": "List of available countries with details."
    },
    "AvailableProvidersListCountry": {
      "properties": {
        "countryName": {
          "type": "string",
          "description": "The country name."
        },
        "providers": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A list of Internet service providers."
        },
        "states": {
          "type": "array",
          "description": "List of available states in the country.",
          "items": {
            "$ref": "#/definitions/AvailableProvidersListState"
          }
        }
      },
      "description": "Country details."
    },
    "AvailableProvidersListState": {
      "properties": {
        "stateName": {
          "type": "string",
          "description": "The state name."
        },
        "providers": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A list of Internet service providers."
        },
        "cities": {
          "type": "array",
          "description": "List of available cities or towns in the state.",
          "items": {
            "$ref": "#/definitions/AvailableProvidersListCity"
          }
        }
      },
      "description": "State details."
    },
    "AvailableProvidersListCity": {
      "properties": {
        "cityName": {
          "type": "string",
          "description": "The city or town name."
        },
        "providers": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A list of Internet service providers."
        }
      },
      "description": "City or town details."
    },
    "ConnectionMonitor": {
      "properties": {
        "location": {
          "type": "string",
          "description": "Connection monitor location."         
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Connection monitor tags."
        },
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ConnectionMonitorParameters"
        }
      },
      "required": [
        "properties"
      ],
      "description": "Parameters that define the operation to create a connection monitor."
    },
    "ConnectionMonitorParameters": {
      "properties": {
        "source": {
      "$ref": "#/definitions/ConnectionMonitorSource"
        },
        "destination": {
      "$ref": "#/definitions/ConnectionMonitorDestination"
        },
        "autoStart": {
          "type": "boolean",
          "default": true,
          "description": "Determines if the connection monitor will start automatically once created."
        },
        "monitoringIntervalInSeconds": {
          "type": "integer",
          "default": 60,
          "description": "Monitoring interval in seconds."
        }
      },
      "required": [
        "source",
        "destination"
      ],
      "description": "Parameters that define the operation to create a connection monitor."
    },
    "ConnectionMonitorSource": {
      "properties": {
        "resourceId": {
          "type": "string",
          "description": "The ID of the resource used as the source by connection monitor."
        },
        "port": {
          "type": "integer",
          "description": "The source port used by connection monitor."
        }
      },
      "required": [
        "resourceId"
      ],
      "description": "Describes the source of connection monitor."
    },
    "ConnectionMonitorDestination": {
      "properties": {
        "resourceId": {
          "type": "string",
          "description": "The ID of the resource used as the destination by connection monitor."
        },
        "address": {
          "type": "string",
          "description": "Address of the connection monitor destination (IP or domain name)."
        },
        "port": {
          "type": "integer",
          "description": "The destination port used by connection monitor."
        }
      },
      "description": "Describes the destination of connection monitor."
    },
    "ConnectionMonitorListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ConnectionMonitorResult"
          },
          "description": "Information about connection monitors."
        }
      },
      "description": "List of connection monitors."
    },
    "ConnectionMonitorResult": {
      "x-ms-azure-resource": true,
      "properties": {
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Name of the connection monitor."
        },
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "ID of the connection monitor."
        },
        "etag": {
          "type": "string",
          "default": "A unique read-only string that changes whenever the resource is updated."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "Connection monitor type."
        },
        "location": {
          "type": "string",
          "description": "Connection monitor location."
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Connection monitor tags."
        },
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ConnectionMonitorResultProperties"
        }
      },
      "description": "Information about the connection monitor."
    },
    "ConnectionMonitorResultProperties": {
      "properties": {
        "provisioningState": {
          "type": "string",
          "enum": [
            "Succeeded",
            "Updating",
            "Deleting",
            "Failed"
          ],
          "x-ms-enum": {
            "name": "ProvisioningState",
            "modelAsString": true
          },
          "description": "The provisioning state of the connection monitor."
        },
        "startTime": {
          "type": "string",
          "format": "date-time",
          "description": "The date and time when the connection monitor was started."
        },
        "monitoringStatus": {
          "type": "string",
          "description": "The monitoring status of the connection monitor."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ConnectionMonitorParameters"
        }
      ],
      "description": "Describes the properties of a connection monitor."
    },
    "ConnectionMonitorQueryResult": {
      "properties": {
        "states": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ConnectionStateSnapshot"
          },
          "description": "Information about connection states."
        }
      },
      "description": "List of connection states snaphots."
    },
    "ConnectionStateSnapshot": {
      "properties": {
        "connectionState": {
          "type": "string",
          "enum": [
            "Reachable",
            "Unreachable",
            "Unknown"
          ],
          "x-ms-enum": {
            "name": "ConnectionState",
            "modelAsString": true
          },
          "description": "The connection state."
        },
        "startTime": {
          "type": "string",
         "format": "date-time",
          "description": "The start time of the connection snapshot."
        },
        "endTime": {
          "type": "string",
          "format": "date-time",
          "description": "The end time of the connection snapshot."
        },
        "evaluationState": {
          "type": "string",
          "enum": [
            "NotStarted",
            "InProgress",
            "Completed"
          ],
          "x-ms-enum": {
            "name": "EvaluationState",
            "modelAsString": true
          },
          "description": "Connectivity analysis evaluation state."
        },
        "hops": {
          "readOnly": true,
          "type": "array",
          "description": "List of hops between the source and the destination.",
          "items": {
            "$ref": "#/definitions/ConnectivityHop"
          }
        }
      },
      "description": "Connection state snapshot."
    }
  },
  "parameters": {
    "SubscriptionIdParameter": {
      "name": "subscriptionId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
    },
    "ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "required": true,
      "type": "string",
      "description": "Client API version."
    }
  }
}