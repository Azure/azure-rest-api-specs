{
  "swagger": "2.0",
  "info": {
    "title": "VirtualWANAsAServiceManagementClient",
    "description": "REST API for Azure VirtualWAN As a Service.",
    "version": "2020-05-01"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Azure Active Directory OAuth2 Flow.",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "paths": {
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualWans/{VirtualWANName}": {
      "get": {
        "operationId": "VirtualWans_Get",
        "x-ms-examples": {
          "VirtualWANGet": {
            "$ref": "./examples/VirtualWANGet.json"
          }
        },
        "description": "Retrieves the details of a VirtualWAN.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The resource group name of the VirtualWan."
          },
          {
            "name": "VirtualWANName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the VirtualWAN being retrieved."
          },
          {
            "$ref": "./network.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./network.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. Returns the details of the VirtualWAN retrieved.",
            "schema": {
              "$ref": "#/definitions/VirtualWAN"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        }
      },
      "put": {
        "operationId": "VirtualWans_CreateOrUpdate",
        "x-ms-examples": {
          "VirtualWANCreate": {
            "$ref": "./examples/VirtualWANPut.json"
          }
        },
        "description": "Creates a VirtualWAN resource if it doesn't exist else updates the existing VirtualWAN.",
        "parameters": [
          {
            "$ref": "./network.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The resource group name of the VirtualWan."
          },
          {
            "name": "VirtualWANName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the VirtualWAN being created or updated."
          },
          {
            "$ref": "./network.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "WANParameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VirtualWAN"
            },
            "description": "Parameters supplied to create or update VirtualWAN."
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. Returns the details of the VirtualWAN created or updated.",
            "schema": {
              "$ref": "#/definitions/VirtualWAN"
            }
          },
          "201": {
            "description": "Create successful. The operation returns the resulting VirtualWAN resource.",
            "schema": {
              "$ref": "#/definitions/VirtualWAN"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      },
      "patch": {
        "tags": [
          "VirtualWANs"
        ],
        "operationId": "VirtualWans_UpdateTags",
        "x-ms-examples": {
          "VirtualWANUpdate": {
            "$ref": "./examples/VirtualWANUpdateTags.json"
          }
        },
        "description": "Updates a VirtualWAN tags.",
        "parameters": [
          {
            "$ref": "./network.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The resource group name of the VirtualWan."
          },
          {
            "name": "VirtualWANName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the VirtualWAN being updated."
          },
          {
            "$ref": "./network.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "WANParameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./network.json#/definitions/TagsObject"
            },
            "description": "Parameters supplied to Update VirtualWAN tags."
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. Returns the details of the VirtualWAN updated.",
            "schema": {
              "$ref": "#/definitions/VirtualWAN"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        }
      },
      "delete": {
        "operationId": "VirtualWans_Delete",
        "x-ms-examples": {
          "VirtualWANDelete": {
            "$ref": "./examples/VirtualWANDelete.json"
          }
        },
        "description": "Deletes a VirtualWAN.",
        "parameters": [
          {
            "$ref": "./network.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The resource group name of the VirtualWan."
          },
          {
            "name": "VirtualWANName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the VirtualWAN being deleted."
          },
          {
            "$ref": "./network.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. VirtualWAN deleted."
          },
          "202": {
            "description": "Request received successfully. VirtualWAN deletion is in progress; follow the Location header to poll for final outcome."
          },
          "204": {
            "description": "No VirtualWANs exist by the name provided."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualWans": {
      "get": {
        "operationId": "VirtualWans_ListByResourceGroup",
        "x-ms-examples": {
          "VirtualWANListByResourceGroup": {
            "$ref": "./examples/VirtualWANListByResourceGroup.json"
          }
        },
        "description": "Lists all the VirtualWANs in a resource group.",
        "parameters": [
          {
            "$ref": "./network.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The resource group name of the VirtualWan."
          },
          {
            "$ref": "./network.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. Returns the details of all the VirtualWANs in the resource group.",
            "schema": {
              "$ref": "#/definitions/ListVirtualWANsResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Network/virtualWans": {
      "get": {
        "operationId": "VirtualWans_List",
        "x-ms-examples": {
          "VirtualWANList": {
            "$ref": "./examples/VirtualWANList.json"
          }
        },
        "description": "Lists all the VirtualWANs in a subscription.",
        "parameters": [
          {
            "$ref": "./network.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "./network.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. Returns the details of all the VirtualWANs in the subscription.",
            "schema": {
              "$ref": "#/definitions/ListVirtualWANsResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/vpnSites/{vpnSiteName}": {
      "get": {
        "operationId": "VpnSites_Get",
        "x-ms-examples": {
          "VpnSiteGet": {
            "$ref": "./examples/VpnSiteGet.json"
          }
        },
        "description": "Retrieves the details of a VPN site.",
        "parameters": [
          {
            "$ref": "./network.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The resource group name of the VpnSite."
          },
          {
            "name": "vpnSiteName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the VpnSite being retrieved."
          },
          {
            "$ref": "./network.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. Returns the details of the VpnSite retrieved.",
            "schema": {
              "$ref": "#/definitions/VpnSite"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        }
      },
      "put": {
        "operationId": "VpnSites_CreateOrUpdate",
        "x-ms-examples": {
          "VpnSiteCreate": {
            "$ref": "./examples/VpnSitePut.json"
          }
        },
        "description": "Creates a VpnSite resource if it doesn't exist else updates the existing VpnSite.",
        "parameters": [
          {
            "$ref": "./network.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The resource group name of the VpnSite."
          },
          {
            "name": "vpnSiteName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the VpnSite being created or updated."
          },
          {
            "$ref": "./network.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "VpnSiteParameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VpnSite"
            },
            "description": "Parameters supplied to create or update VpnSite."
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. Returns the details of the VpnSite created or updated.",
            "schema": {
              "$ref": "#/definitions/VpnSite"
            }
          },
          "201": {
            "description": "Request received successfully. Returns the details of the VpnSite created or updated.",
            "schema": {
              "$ref": "#/definitions/VpnSite"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      },
      "patch": {
        "tags": [
          "VpnSites"
        ],
        "operationId": "VpnSites_UpdateTags",
        "x-ms-examples": {
          "VpnSiteUpdate": {
            "$ref": "./examples/VpnSiteUpdateTags.json"
          }
        },
        "description": "Updates VpnSite tags.",
        "parameters": [
          {
            "$ref": "./network.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The resource group name of the VpnSite."
          },
          {
            "name": "vpnSiteName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the VpnSite being updated."
          },
          {
            "$ref": "./network.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "VpnSiteParameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./network.json#/definitions/TagsObject"
            },
            "description": "Parameters supplied to update VpnSite tags."
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. Returns the details of the VpnSite updated.",
            "schema": {
              "$ref": "#/definitions/VpnSite"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        }
      },
      "delete": {
        "operationId": "VpnSites_Delete",
        "x-ms-examples": {
          "VpnSiteDelete": {
            "$ref": "./examples/VpnSiteDelete.json"
          }
        },
        "description": "Deletes a VpnSite.",
        "parameters": [
          {
            "$ref": "./network.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The resource group name of the VpnSite."
          },
          {
            "name": "vpnSiteName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the VpnSite being deleted."
          },
          {
            "$ref": "./network.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. VpnSite deleted."
          },
          "202": {
            "description": "Request received successfully. VpnSite deletion is in progress."
          },
          "204": {
            "description": "No VpnSites exist by the name provided."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/vpnSites": {
      "get": {
        "operationId": "VpnSites_ListByResourceGroup",
        "x-ms-examples": {
          "VpnSiteListByResourceGroup": {
            "$ref": "./examples/VpnSiteListByResourceGroup.json"
          }
        },
        "description": "Lists all the vpnSites in a resource group.",
        "parameters": [
          {
            "$ref": "./network.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The resource group name of the VpnSite."
          },
          {
            "$ref": "./network.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. Returns the details of all the vpnSites in the resource group.",
            "schema": {
              "$ref": "#/definitions/ListVpnSitesResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/vpnSites/{vpnSiteName}/vpnSiteLinks/{vpnSiteLinkName}": {
      "get": {
        "operationId": "VpnSiteLinks_Get",
        "x-ms-examples": {
          "VpnSiteGet": {
            "$ref": "./examples/VpnSiteLinkGet.json"
          }
        },
        "description": "Retrieves the details of a VPN site link.",
        "parameters": [
          {
            "$ref": "./network.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The resource group name of the VpnSite."
          },
          {
            "name": "vpnSiteName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the VpnSite."
          },
          {
            "name": "vpnSiteLinkName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the VpnSiteLink being retrieved."
          },
          {
            "$ref": "./network.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. Returns the details of the VpnSiteLink retrieved.",
            "schema": {
              "$ref": "#/definitions/VpnSiteLink"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/vpnSites/{vpnSiteName}/vpnSiteLinks": {
      "get": {
        "operationId": "VpnSiteLinks_ListByVpnSite",
        "x-ms-examples": {
          "VpnSiteLinkListByVpnSite": {
            "$ref": "./examples/VpnSiteLinkListByVpnSite.json"
          }
        },
        "description": "Lists all the vpnSiteLinks in a resource group for a vpn site.",
        "parameters": [
          {
            "$ref": "./network.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The resource group name of the VpnSite."
          },
          {
            "name": "vpnSiteName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the VpnSite."
          },
          {
            "$ref": "./network.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. Returns the details of all the vpnSites in the resource group.",
            "schema": {
              "$ref": "#/definitions/ListVpnSiteLinksResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Network/vpnSites": {
      "get": {
        "operationId": "VpnSites_List",
        "x-ms-examples": {
          "VpnSiteList": {
            "$ref": "./examples/VpnSiteList.json"
          }
        },
        "description": "Lists all the VpnSites in a subscription.",
        "parameters": [
          {
            "$ref": "./network.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "./network.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. Returns the details of all the VpnSites in the subscription.",
            "schema": {
              "$ref": "#/definitions/ListVpnSitesResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualWans/{virtualWANName}/vpnConfiguration": {
      "post": {
        "operationId": "VpnSitesConfiguration_Download",
        "x-ms-examples": {
          "VpnSitesConfigurationDownload": {
            "$ref": "./examples/VpnSitesConfigurationDownload.json"
          }
        },
        "description": "Gives the sas-url to download the configurations for vpn-sites in a resource group.",
        "parameters": [
          {
            "$ref": "./network.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The resource group name."
          },
          {
            "name": "virtualWANName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the VirtualWAN for which configuration of all vpn-sites is needed."
          },
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetVpnSitesConfigurationRequest"
            },
            "description": "Parameters supplied to download vpn-sites configuration."
          },
          {
            "$ref": "./network.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. Follow the location header for sas-url to output blob."
          },
          "202": {
            "description": "Accepted and the operation will complete asynchronously. Follow the location header for sas-url to output blob."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualWans/{virtualWANName}/supportedSecurityProviders": {
      "get": {
        "operationId": "SupportedSecurityProviders",
        "x-ms-examples": {
          "supportedSecurityProviders": {
            "$ref": "./examples/VirtualWanSupportedSecurityProviders.json"
          }
        },
        "description": "Gives the supported security providers for the virtual wan.",
        "parameters": [
          {
            "$ref": "./network.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The resource group name."
          },
          {
            "name": "virtualWANName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the VirtualWAN for which supported security providers are needed."
          },
          {
            "$ref": "./network.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. Returns the object containing supported security providers.",
            "schema": {
              "$ref": "#/definitions/VirtualWanSecurityProviders"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/vpnServerConfigurations/{vpnServerConfigurationName}": {
      "get": {
        "operationId": "VpnServerConfigurations_Get",
        "x-ms-examples": {
          "VpnServerConfigurationGet": {
            "$ref": "./examples/VpnServerConfigurationGet.json"
          }
        },
        "description": "Retrieves the details of a VpnServerConfiguration.",
        "parameters": [
          {
            "$ref": "./network.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The resource group name of the VpnServerConfiguration."
          },
          {
            "name": "vpnServerConfigurationName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the VpnServerConfiguration being retrieved."
          },
          {
            "$ref": "./network.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. Returns the details of the VpnServerConfiguration retrieved.",
            "schema": {
              "$ref": "#/definitions/VpnServerConfiguration"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        }
      },
      "put": {
        "operationId": "VpnServerConfigurations_CreateOrUpdate",
        "x-ms-examples": {
          "VpnServerConfigurationCreate": {
            "$ref": "./examples/VpnServerConfigurationPut.json"
          }
        },
        "description": "Creates a VpnServerConfiguration resource if it doesn't exist else updates the existing VpnServerConfiguration.",
        "parameters": [
          {
            "$ref": "./network.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The resource group name of the VpnServerConfiguration."
          },
          {
            "name": "vpnServerConfigurationName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the VpnServerConfiguration being created or updated."
          },
          {
            "$ref": "./network.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "VpnServerConfigurationParameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VpnServerConfiguration"
            },
            "description": "Parameters supplied to create or update VpnServerConfiguration."
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. Returns the details of the VpnServerConfiguration created or updated.",
            "schema": {
              "$ref": "#/definitions/VpnServerConfiguration"
            }
          },
          "201": {
            "description": "Request received successfully. Returns the details of the VpnServerConfiguration created or updated.",
            "schema": {
              "$ref": "#/definitions/VpnServerConfiguration"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      },
      "patch": {
        "tags": [
          "VpnServerConfigurations"
        ],
        "operationId": "VpnServerConfigurations_UpdateTags",
        "x-ms-examples": {
          "VpnServerConfigurationUpdate": {
            "$ref": "./examples/VpnServerConfigurationUpdateTags.json"
          }
        },
        "description": "Updates VpnServerConfiguration tags.",
        "parameters": [
          {
            "$ref": "./network.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The resource group name of the VpnServerConfiguration."
          },
          {
            "name": "vpnServerConfigurationName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the VpnServerConfiguration being updated."
          },
          {
            "$ref": "./network.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "VpnServerConfigurationParameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./network.json#/definitions/TagsObject"
            },
            "description": "Parameters supplied to update VpnServerConfiguration tags."
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. Returns the details of the VpnServerConfiguration updated.",
            "schema": {
              "$ref": "#/definitions/VpnServerConfiguration"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        }
      },
      "delete": {
        "operationId": "VpnServerConfigurations_Delete",
        "x-ms-examples": {
          "VpnServerConfigurationDelete": {
            "$ref": "./examples/VpnServerConfigurationDelete.json"
          }
        },
        "description": "Deletes a VpnServerConfiguration.",
        "parameters": [
          {
            "$ref": "./network.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The resource group name of the VpnServerConfiguration."
          },
          {
            "name": "vpnServerConfigurationName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the VpnServerConfiguration being deleted."
          },
          {
            "$ref": "./network.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. VpnServerConfiguration deleted."
          },
          "202": {
            "description": "Request received successfully. VpnServerConfiguration deletion is in progress."
          },
          "204": {
            "description": "No VpnServerConfigurations exist by the name provided."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/vpnServerConfigurations": {
      "get": {
        "operationId": "VpnServerConfigurations_ListByResourceGroup",
        "x-ms-examples": {
          "VpnServerConfigurationListByResourceGroup": {
            "$ref": "./examples/VpnServerConfigurationListByResourceGroup.json"
          }
        },
        "description": "Lists all the vpnServerConfigurations in a resource group.",
        "parameters": [
          {
            "$ref": "./network.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The resource group name of the VpnServerConfiguration."
          },
          {
            "$ref": "./network.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. Returns the details of all the vpnServerConfigurations in the resource group.",
            "schema": {
              "$ref": "#/definitions/ListVpnServerConfigurationsResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Network/vpnServerConfigurations": {
      "get": {
        "operationId": "VpnServerConfigurations_List",
        "x-ms-examples": {
          "VpnServerConfigurationList": {
            "$ref": "./examples/VpnServerConfigurationList.json"
          }
        },
        "description": "Lists all the VpnServerConfigurations in a subscription.",
        "parameters": [
          {
            "$ref": "./network.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "./network.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. Returns the details of all the VpnServerConfigurations in the subscription.",
            "schema": {
              "$ref": "#/definitions/ListVpnServerConfigurationsResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualHubs/{virtualHubName}": {
      "get": {
        "operationId": "VirtualHubs_Get",
        "x-ms-examples": {
          "VirtualHubGet": {
            "$ref": "./examples/VirtualHubGet.json"
          }
        },
        "description": "Retrieves the details of a VirtualHub.",
        "parameters": [
          {
            "$ref": "./network.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The resource group name of the VirtualHub."
          },
          {
            "name": "virtualHubName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the VirtualHub."
          },
          {
            "$ref": "./network.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. Returns the details of the VirtualHub retrieved.",
            "schema": {
              "$ref": "#/definitions/VirtualHub"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        }
      },
      "put": {
        "operationId": "VirtualHubs_CreateOrUpdate",
        "x-ms-examples": {
          "VirtualHubPut": {
            "$ref": "./examples/VirtualHubPut.json"
          }
        },
        "description": "Creates a VirtualHub resource if it doesn't exist else updates the existing VirtualHub.",
        "parameters": [
          {
            "$ref": "./network.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The resource group name of the VirtualHub."
          },
          {
            "name": "virtualHubName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the VirtualHub."
          },
          {
            "$ref": "./network.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "virtualHubParameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VirtualHub"
            },
            "description": "Parameters supplied to create or update VirtualHub."
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. Returns the details of the VirtualHub created or updated.",
            "schema": {
              "$ref": "#/definitions/VirtualHub"
            }
          },
          "201": {
            "description": "Request received successfully. Returns the details of the VirtualHub created or updated.",
            "schema": {
              "$ref": "#/definitions/VirtualHub"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      },
      "patch": {
        "tags": [
          "VirtualWANs"
        ],
        "operationId": "VirtualHubs_UpdateTags",
        "x-ms-examples": {
          "VirtualHubUpdate": {
            "$ref": "./examples/VirtualHubUpdateTags.json"
          }
        },
        "description": "Updates VirtualHub tags.",
        "parameters": [
          {
            "$ref": "./network.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The resource group name of the VirtualHub."
          },
          {
            "name": "virtualHubName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the VirtualHub."
          },
          {
            "$ref": "./network.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "virtualHubParameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./network.json#/definitions/TagsObject"
            },
            "description": "Parameters supplied to update VirtualHub tags."
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. Returns the details of the VirtualHub updated.",
            "schema": {
              "$ref": "#/definitions/VirtualHub"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        }
      },
      "delete": {
        "operationId": "VirtualHubs_Delete",
        "x-ms-examples": {
          "VirtualHubDelete": {
            "$ref": "./examples/VirtualHubDelete.json"
          }
        },
        "description": "Deletes a VirtualHub.",
        "parameters": [
          {
            "$ref": "./network.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The resource group name of the VirtualHub."
          },
          {
            "name": "virtualHubName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the VirtualHub."
          },
          {
            "$ref": "./network.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. VirtualHub deleted."
          },
          "202": {
            "description": "Request received successfully. VirtualHub deletion is in progress; follow the Location header to poll for final outcome."
          },
          "204": {
            "description": "No VirtualHubs exist by the name provided."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualHubs": {
      "get": {
        "operationId": "VirtualHubs_ListByResourceGroup",
        "x-ms-examples": {
          "VirtualHubListByResourceGroup": {
            "$ref": "./examples/VirtualHubListByResourceGroup.json"
          }
        },
        "description": "Lists all the VirtualHubs in a resource group.",
        "parameters": [
          {
            "$ref": "./network.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The resource group name of the VirtualHub."
          },
          {
            "$ref": "./network.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. Returns the details of all the VirtualHubs in the resource group.",
            "schema": {
              "$ref": "#/definitions/ListVirtualHubsResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Network/virtualHubs": {
      "get": {
        "operationId": "VirtualHubs_List",
        "x-ms-examples": {
          "VirtualHubList": {
            "$ref": "./examples/VirtualHubList.json"
          }
        },
        "description": "Lists all the VirtualHubs in a subscription.",
        "parameters": [
          {
            "$ref": "./network.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "./network.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. Returns the details of all the VirtualHubs in the subscription.",
            "schema": {
              "$ref": "#/definitions/ListVirtualHubsResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualHubs/{virtualHubName}/hubVirtualNetworkConnections/{connectionName}": {
      "get": {
        "operationId": "HubVirtualNetworkConnections_Get",
        "x-ms-examples": {
          "HubVirtualNetworkConnectionGet": {
            "$ref": "./examples/HubVirtualNetworkConnectionGet.json"
          }
        },
        "description": "Retrieves the details of a HubVirtualNetworkConnection.",
        "parameters": [
          {
            "$ref": "./network.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The resource group name of the VirtualHub."
          },
          {
            "name": "virtualHubName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the VirtualHub."
          },
          {
            "name": "connectionName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the vpn connection."
          },
          {
            "$ref": "./network.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. Returns the details of the HubVirtualNetworkConnection retrieved.",
            "schema": {
              "$ref": "#/definitions/HubVirtualNetworkConnection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualHubs/{virtualHubName}/hubVirtualNetworkConnections": {
      "get": {
        "operationId": "HubVirtualNetworkConnections_List",
        "x-ms-examples": {
          "HubVirtualNetworkConnectionList": {
            "$ref": "./examples/HubVirtualNetworkConnectionList.json"
          }
        },
        "description": "Retrieves the details of all HubVirtualNetworkConnections.",
        "parameters": [
          {
            "$ref": "./network.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The resource group name of the VirtualHub."
          },
          {
            "name": "virtualHubName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the VirtualHub."
          },
          {
            "$ref": "./network.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. Returns the details of all the HubVirtualNetworkConnections for the VirtualHub.",
            "schema": {
              "$ref": "#/definitions/ListHubVirtualNetworkConnectionsResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/vpnGateways/{gatewayName}": {
      "get": {
        "operationId": "VpnGateways_Get",
        "x-ms-examples": {
          "VpnGatewayGet": {
            "$ref": "./examples/VpnGatewayGet.json"
          }
        },
        "description": "Retrieves the details of a virtual wan vpn gateway.",
        "parameters": [
          {
            "$ref": "./network.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The resource group name of the VpnGateway."
          },
          {
            "name": "gatewayName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the gateway."
          },
          {
            "$ref": "./network.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. Returns the details of the virtual wan vpn gateway retrieved.",
            "schema": {
              "$ref": "#/definitions/VpnGateway"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        }
      },
      "put": {
        "operationId": "VpnGateways_CreateOrUpdate",
        "x-ms-examples": {
          "VpnGatewayPut": {
            "$ref": "./examples/VpnGatewayPut.json"
          }
        },
        "description": "Creates a virtual wan vpn gateway if it doesn't exist else updates the existing gateway.",
        "parameters": [
          {
            "$ref": "./network.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The resource group name of the VpnGateway."
          },
          {
            "name": "gatewayName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the gateway."
          },
          {
            "$ref": "./network.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "vpnGatewayParameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VpnGateway"
            },
            "description": "Parameters supplied to create or Update a virtual wan vpn gateway."
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. Returns the details of the virtual wan vpn Gateway created or updated.",
            "schema": {
              "$ref": "#/definitions/VpnGateway"
            }
          },
          "201": {
            "description": "Request successful. Returns the details of the virtual wan vpn gateway retrieved.",
            "schema": {
              "$ref": "#/definitions/VpnGateway"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      },
      "patch": {
        "tags": [
          "VpnGateways"
        ],
        "operationId": "VpnGateways_UpdateTags",
        "x-ms-examples": {
          "VpnGatewayUpdate": {
            "$ref": "./examples/VpnGatewayUpdateTags.json"
          }
        },
        "description": "Updates virtual wan vpn gateway tags.",
        "parameters": [
          {
            "$ref": "./network.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The resource group name of the VpnGateway."
          },
          {
            "name": "gatewayName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the gateway."
          },
          {
            "$ref": "./network.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "vpnGatewayParameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./network.json#/definitions/TagsObject"
            },
            "description": "Parameters supplied to update a virtual wan vpn gateway tags."
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. Returns the details of the updated gateway.",
            "schema": {
              "$ref": "#/definitions/VpnGateway"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        }
      },
      "delete": {
        "operationId": "VpnGateways_Delete",
        "x-ms-examples": {
          "VpnGatewayDelete": {
            "$ref": "./examples/VpnGatewayDelete.json"
          }
        },
        "description": "Deletes a virtual wan vpn gateway.",
        "parameters": [
          {
            "$ref": "./network.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The resource group name of the VpnGateway."
          },
          {
            "name": "gatewayName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the gateway."
          },
          {
            "$ref": "./network.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. Vpn Gateway deleted."
          },
          "202": {
            "description": "Request received successfully. Vpn Gateway deletion is in progress; follow the Location header to poll for final outcome."
          },
          "204": {
            "description": "No vpn gateways exist by the name provided."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/vpnGateways/{gatewayName}/reset": {
      "post": {
        "tags": [
          "VpnGateways"
        ],
        "operationId": "VpnGateways_Reset",
        "description": "Resets the primary of the vpn gateway in the specified resource group.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The resource group name of the VpnGateway."
          },
          {
            "name": "gatewayName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the gateway."
          },
          {
            "$ref": "./network.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./network.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation reset the primary of the VpnGateway.",
            "schema": {
              "$ref": "#/definitions/VpnGateway"
            }
          },
          "202": {
            "description": "Accepted and the operation will complete asynchronously."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "ResetVpnGateway": {
            "$ref": "./examples/VpnGatewayReset.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/vpnGateways": {
      "get": {
        "operationId": "VpnGateways_ListByResourceGroup",
        "x-ms-examples": {
          "VpnGatewayListByResourceGroup": {
            "$ref": "./examples/VpnGatewayListByResourceGroup.json"
          }
        },
        "description": "Lists all the VpnGateways in a resource group.",
        "parameters": [
          {
            "$ref": "./network.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The resource group name of the VpnGateway."
          },
          {
            "$ref": "./network.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. Returns the details of all the VpnGateways in the resource group.",
            "schema": {
              "$ref": "#/definitions/ListVpnGatewaysResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Network/vpnGateways": {
      "get": {
        "operationId": "VpnGateways_List",
        "x-ms-examples": {
          "VpnGatewayListBySubscription": {
            "$ref": "./examples/VpnGatewayList.json"
          }
        },
        "description": "Lists all the VpnGateways in a subscription.",
        "parameters": [
          {
            "$ref": "./network.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "./network.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. Returns the details of all the VpnGateways in the subscription.",
            "schema": {
              "$ref": "#/definitions/ListVpnGatewaysResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/vpnGateways/{gatewayName}/vpnConnections/{connectionName}": {
      "get": {
        "operationId": "VpnConnections_Get",
        "x-ms-examples": {
          "VpnConnectionGet": {
            "$ref": "./examples/VpnConnectionGet.json"
          }
        },
        "description": "Retrieves the details of a vpn connection.",
        "parameters": [
          {
            "$ref": "./network.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The resource group name of the VpnGateway."
          },
          {
            "name": "gatewayName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the gateway."
          },
          {
            "name": "connectionName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the vpn connection."
          },
          {
            "$ref": "./network.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. Returns the details of the vpn connection.",
            "schema": {
              "$ref": "#/definitions/VpnConnection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        }
      },
      "put": {
        "operationId": "VpnConnections_CreateOrUpdate",
        "x-ms-examples": {
          "VpnConnectionPut": {
            "$ref": "./examples/VpnConnectionPut.json"
          }
        },
        "description": "Creates a vpn connection to a scalable vpn gateway if it doesn't exist else updates the existing connection.",
        "parameters": [
          {
            "$ref": "./network.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The resource group name of the VpnGateway."
          },
          {
            "name": "gatewayName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the gateway."
          },
          {
            "name": "connectionName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the connection."
          },
          {
            "$ref": "./network.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "VpnConnectionParameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VpnConnection"
            },
            "description": "Parameters supplied to create or Update a VPN Connection."
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. Returns the details of the vpn connection created or updated.",
            "schema": {
              "$ref": "#/definitions/VpnConnection"
            }
          },
          "201": {
            "description": "Request successful. Returns the details of the vpn connection created or updated.",
            "schema": {
              "$ref": "#/definitions/VpnConnection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      },
      "delete": {
        "operationId": "VpnConnections_Delete",
        "x-ms-examples": {
          "VpnConnectionDelete": {
            "$ref": "./examples/VpnConnectionDelete.json"
          }
        },
        "description": "Deletes a vpn connection.",
        "parameters": [
          {
            "$ref": "./network.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The resource group name of the VpnGateway."
          },
          {
            "name": "gatewayName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the gateway."
          },
          {
            "name": "connectionName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the connection."
          },
          {
            "$ref": "./network.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. Vpn Connection deleted."
          },
          "202": {
            "description": "Request received successfully. Vpn Connection deletion is in progress; follow the Location header to poll for final outcome."
          },
          "204": {
            "description": "No vpn connections exist by the name provided."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/vpnGateways/{gatewayName}/vpnConnections/{connectionName}/vpnLinkConnections/{linkConnectionName}": {
      "get": {
        "operationId": "VpnSiteLinkConnections_Get",
        "x-ms-examples": {
          "VpnSiteLinkConnectionGet": {
            "$ref": "./examples/VpnSiteLinkConnectionGet.json"
          }
        },
        "description": "Retrieves the details of a vpn site link connection.",
        "parameters": [
          {
            "$ref": "./network.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The resource group name of the VpnGateway."
          },
          {
            "name": "gatewayName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the gateway."
          },
          {
            "name": "connectionName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the vpn connection."
          },
          {
            "name": "linkConnectionName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the vpn connection."
          },
          {
            "$ref": "./network.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. Returns the details of the vpn connection.",
            "schema": {
              "$ref": "#/definitions/VpnSiteLinkConnection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/vpnGateways/{gatewayName}/vpnConnections": {
      "get": {
        "operationId": "VpnConnections_ListByVpnGateway",
        "x-ms-examples": {
          "VpnConnectionList": {
            "$ref": "./examples/VpnConnectionList.json"
          }
        },
        "description": "Retrieves all vpn connections for a particular virtual wan vpn gateway.",
        "parameters": [
          {
            "$ref": "./network.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The resource group name of the VpnGateway."
          },
          {
            "name": "gatewayName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the gateway."
          },
          {
            "$ref": "./network.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. Returns all Vpn connections for a virtual wan vpn gateway.",
            "schema": {
              "$ref": "#/definitions/ListVpnConnectionsResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/vpnGateways/{gatewayName}/vpnConnections/{connectionName}/vpnLinkConnections": {
      "get": {
        "operationId": "VpnLinkConnections_ListByVpnConnection",
        "x-ms-examples": {
          "VpnSiteLinkConnectionList": {
            "$ref": "./examples/VpnSiteLinkConnectionList.json"
          }
        },
        "description": "Retrieves all vpn site link connections for a particular virtual wan vpn gateway vpn connection.",
        "parameters": [
          {
            "$ref": "./network.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The resource group name of the VpnGateway."
          },
          {
            "name": "gatewayName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the gateway."
          },
          {
            "name": "connectionName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the vpn connection."
          },
          {
            "$ref": "./network.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. Returns all Vpn connections for a virtual wan vpn gateway.",
            "schema": {
              "$ref": "#/definitions/ListVpnSiteLinkConnectionsResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/p2svpnGateways/{gatewayName}": {
      "get": {
        "operationId": "P2sVpnGateways_Get",
        "x-ms-examples": {
          "P2SVpnGatewayGet": {
            "$ref": "./examples/P2SVpnGatewayGet.json"
          }
        },
        "description": "Retrieves the details of a virtual wan p2s vpn gateway.",
        "parameters": [
          {
            "$ref": "./network.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The resource group name of the P2SVpnGateway."
          },
          {
            "name": "gatewayName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the gateway."
          },
          {
            "$ref": "./network.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. Returns the details of the virtual wan p2s vpn gateway retrieved.",
            "schema": {
              "$ref": "#/definitions/P2SVpnGateway"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        }
      },
      "put": {
        "operationId": "P2sVpnGateways_CreateOrUpdate",
        "x-ms-examples": {
          "P2SVpnGatewayPut": {
            "$ref": "./examples/P2SVpnGatewayPut.json"
          }
        },
        "description": "Creates a virtual wan p2s vpn gateway if it doesn't exist else updates the existing gateway.",
        "parameters": [
          {
            "$ref": "./network.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The resource group name of the P2SVpnGateway."
          },
          {
            "name": "gatewayName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the gateway."
          },
          {
            "$ref": "./network.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "p2SVpnGatewayParameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/P2SVpnGateway"
            },
            "description": "Parameters supplied to create or Update a virtual wan p2s vpn gateway."
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. Returns the details of the virtual wan p2s vpn Gateway created or updated.",
            "schema": {
              "$ref": "#/definitions/P2SVpnGateway"
            }
          },
          "201": {
            "description": "Request successful. Returns the details of the virtual wan p2s vpn gateway retrieved.",
            "schema": {
              "$ref": "#/definitions/P2SVpnGateway"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      },
      "patch": {
        "tags": [
          "P2SVpnGateways"
        ],
        "operationId": "P2sVpnGateways_UpdateTags",
        "x-ms-examples": {
          "P2SVpnGatewayUpdate": {
            "$ref": "./examples/P2SVpnGatewayUpdateTags.json"
          }
        },
        "description": "Updates virtual wan p2s vpn gateway tags.",
        "parameters": [
          {
            "$ref": "./network.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The resource group name of the P2SVpnGateway."
          },
          {
            "name": "gatewayName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the gateway."
          },
          {
            "$ref": "./network.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "p2SVpnGatewayParameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./network.json#/definitions/TagsObject"
            },
            "description": "Parameters supplied to update a virtual wan p2s vpn gateway tags."
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. Returns the details of the updated gateway.",
            "schema": {
              "$ref": "#/definitions/P2SVpnGateway"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        }
      },
      "delete": {
        "operationId": "P2sVpnGateways_Delete",
        "x-ms-examples": {
          "P2SVpnGatewayDelete": {
            "$ref": "./examples/P2SVpnGatewayDelete.json"
          }
        },
        "description": "Deletes a virtual wan p2s vpn gateway.",
        "parameters": [
          {
            "$ref": "./network.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The resource group name of the P2SVpnGateway."
          },
          {
            "name": "gatewayName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the gateway."
          },
          {
            "$ref": "./network.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. P2SVpnGateway deleted."
          },
          "202": {
            "description": "Request received successfully. P2SVpnGateway deletion is in progress; follow the Location header to poll for final outcome."
          },
          "204": {
            "description": "No p2s vpn gateways exist by the name provided."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/p2svpnGateways": {
      "get": {
        "operationId": "P2sVpnGateways_ListByResourceGroup",
        "x-ms-examples": {
          "P2SVpnGatewayListByResourceGroup": {
            "$ref": "./examples/P2SVpnGatewayListByResourceGroup.json"
          }
        },
        "description": "Lists all the P2SVpnGateways in a resource group.",
        "parameters": [
          {
            "$ref": "./network.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The resource group name of the P2SVpnGateway."
          },
          {
            "$ref": "./network.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. Returns the details of all the P2SVpnGateways in the resource group.",
            "schema": {
              "$ref": "#/definitions/ListP2SVpnGatewaysResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Network/p2svpnGateways": {
      "get": {
        "operationId": "P2sVpnGateways_List",
        "x-ms-examples": {
          "P2SVpnGatewayListBySubscription": {
            "$ref": "./examples/P2SVpnGatewayList.json"
          }
        },
        "description": "Lists all the P2SVpnGateways in a subscription.",
        "parameters": [
          {
            "$ref": "./network.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "./network.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. Returns the details of all the P2SVpnGateways in the subscription.",
            "schema": {
              "$ref": "#/definitions/ListP2SVpnGatewaysResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/p2svpnGateways/{gatewayName}/generatevpnprofile": {
      "post": {
        "tags": [
          "P2SVpnGateways"
        ],
        "operationId": "P2sVpnGateways_GenerateVpnProfile",
        "description": "Generates VPN profile for P2S client of the P2SVpnGateway in the specified resource group.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "gatewayName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the P2SVpnGateway."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/P2SVpnProfileParameters"
            },
            "description": "Parameters supplied to the generate P2SVpnGateway VPN client package operation."
          },
          {
            "$ref": "./network.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./network.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "VPN profile package URL.",
            "schema": {
              "$ref": "#/definitions/VpnProfileResponse"
            }
          },
          "202": {
            "description": "Accepted and the operation will complete asynchronously."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "GenerateP2SVpnGatewayVPNProfile": {
            "$ref": "./examples/P2SVpnGatewayGenerateVpnProfile.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/p2svpnGateways/{gatewayName}/getP2sVpnConnectionHealth": {
      "post": {
        "tags": [
          "P2SVpnGateways"
        ],
        "operationId": "P2sVpnGateways_GetP2sVpnConnectionHealth",
        "description": "Gets the connection health of P2S clients of the virtual wan P2SVpnGateway in the specified resource group.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "gatewayName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the P2SVpnGateway."
          },
          {
            "$ref": "./network.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./network.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "P2S Vpn Gateway with P2S connection health details.",
            "schema": {
              "$ref": "#/definitions/P2SVpnGateway"
            }
          },
          "202": {
            "description": "Accepted and the operation will complete asynchronously."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "P2SVpnGatewayGetConnectionHealth": {
            "$ref": "./examples/P2SVpnGatewayGetConnectionHealth.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/p2svpnGateways/{gatewayName}/getP2sVpnConnectionHealthDetailed": {
      "post": {
        "tags": [
          "P2SVpnGateways"
        ],
        "operationId": "P2sVpnGateways_GetP2sVpnConnectionHealthDetailed",
        "description": "Gets the sas url to get the connection health detail of P2S clients of the virtual wan P2SVpnGateway in the specified resource group.",
        "parameters": [
          {
            "$ref": "./network.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "gatewayName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the P2SVpnGateway."
          },
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/P2SVpnConnectionHealthRequest"
            },
            "description": "Request parameters supplied to get p2s vpn connections detailed health."
          },
          {
            "$ref": "./network.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "P2S connections detailed health report.",
            "schema": {
              "$ref": "#/definitions/P2SVpnConnectionHealth"
            }
          },
          "202": {
            "description": "Accepted and the operation will complete asynchronously."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "P2SVpnGatewayGetConnectionHealthDetailed": {
            "$ref": "./examples/P2SVpnGatewayGetConnectionHealthDetailed.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualWans/{virtualWANName}/vpnServerConfigurations": {
      "post": {
        "operationId": "VpnServerConfigurationsAssociatedWithVirtualWan_List",
        "x-ms-examples": {
          "GetVirtualWanVpnServerConfigurations": {
            "$ref": "./examples/GetVirtualWanVpnServerConfigurations.json"
          }
        },
        "description": "Gives the list of VpnServerConfigurations associated with Virtual Wan in a resource group.",
        "parameters": [
          {
            "$ref": "./network.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The resource group name."
          },
          {
            "name": "virtualWANName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the VirtualWAN whose associated VpnServerConfigurations is needed."
          },
          {
            "$ref": "./network.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "List of associated VpnServerConfigurations list.",
            "schema": {
              "$ref": "#/definitions/VpnServerConfigurationsResponse"
            }
          },
          "202": {
            "description": "Accepted and the operation will complete asynchronously. Follow the location header for list of associated VpnServerConfigurations list."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualWans/{virtualWANName}/GenerateVpnProfile": {
      "post": {
        "operationId": "generatevirtualwanvpnserverconfigurationvpnprofile",
        "x-ms-examples": {
          "GenerateVirtualWanVpnServerConfigurationVpnProfile": {
            "$ref": "./examples/GenerateVirtualWanVpnServerConfigurationVpnProfile.json"
          }
        },
        "description": "Generates a unique VPN profile for P2S clients for VirtualWan and associated VpnServerConfiguration combination in the specified resource group.",
        "parameters": [
          {
            "$ref": "./network.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The resource group name."
          },
          {
            "name": "virtualWANName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the VirtualWAN whose associated VpnServerConfigurations is needed."
          },
          {
            "name": "vpnClientParams",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VirtualWanVpnProfileParameters"
            },
            "description": "Parameters supplied to the generate VirtualWan VPN profile generation operation."
          },
          {
            "$ref": "./network.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "VPN profile package URL.",
            "schema": {
              "$ref": "#/definitions/VpnProfileResponse"
            }
          },
          "202": {
            "description": "Accepted and the operation will complete asynchronously."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualHubs/{virtualHubName}/routeTables/{routeTableName}": {
      "get": {
        "operationId": "VirtualHubRouteTableV2s_Get",
        "x-ms-examples": {
          "VirtualHubVirtualHubRouteTableV2Get": {
            "$ref": "./examples/VirtualHubRouteTableV2Get.json"
          }
        },
        "description": "Retrieves the details of a VirtualHubRouteTableV2.",
        "parameters": [
          {
            "$ref": "./network.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The resource group name of the VirtualHubRouteTableV2."
          },
          {
            "name": "virtualHubName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the VirtualHub."
          },
          {
            "name": "routeTableName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the VirtualHubRouteTableV2."
          },
          {
            "$ref": "./network.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. Returns the details of the VirtualHubRouteTableV2 retrieved.",
            "schema": {
              "$ref": "#/definitions/VirtualHubRouteTableV2"
            }
          },
          "default": {
            "description": "Error.",
            "schema": {
              "$ref": "./network.json#/definitions/Error"
            }
          }
        }
      },
      "put": {
        "operationId": "VirtualHubRouteTableV2s_CreateOrUpdate",
        "x-ms-examples": {
          "VirtualHubRouteTableV2Put": {
            "$ref": "./examples/VirtualHubRouteTableV2Put.json"
          }
        },
        "description": "Creates a VirtualHubRouteTableV2 resource if it doesn't exist else updates the existing VirtualHubRouteTableV2.",
        "parameters": [
          {
            "$ref": "./network.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The resource group name of the VirtualHub."
          },
          {
            "name": "virtualHubName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the VirtualHub."
          },
          {
            "name": "routeTableName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the VirtualHubRouteTableV2."
          },
          {
            "$ref": "./network.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "virtualHubRouteTableV2Parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VirtualHubRouteTableV2"
            },
            "description": "Parameters supplied to create or update VirtualHubRouteTableV2."
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. Returns the details of the VirtualHubRouteTableV2 created or updated.",
            "schema": {
              "$ref": "#/definitions/VirtualHubRouteTableV2"
            }
          },
          "201": {
            "description": "Request received successfully. Returns the details of the VirtualHubRouteTableV2 created or updated.",
            "schema": {
              "$ref": "#/definitions/VirtualHubRouteTableV2"
            }
          },
          "default": {
            "description": "Error.",
            "schema": {
              "$ref": "./network.json#/definitions/Error"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      },
      "delete": {
        "operationId": "VirtualHubRouteTableV2s_Delete",
        "x-ms-examples": {
          "VirtualHubRouteTableV2Delete": {
            "$ref": "./examples/VirtualHubRouteTableV2Delete.json"
          }
        },
        "description": "Deletes a VirtualHubRouteTableV2.",
        "parameters": [
          {
            "$ref": "./network.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The resource group name of the VirtualHubRouteTableV2."
          },
          {
            "name": "virtualHubName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the VirtualHub."
          },
          {
            "name": "routeTableName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the VirtualHubRouteTableV2."
          },
          {
            "$ref": "./network.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. VirtualHubRouteTableV2 deleted."
          },
          "202": {
            "description": "Request received successfully. VirtualHubRouteTableV2 deletion is in progress; follow the Location header to poll for final outcome."
          },
          "204": {
            "description": "No VirtualHubRouteTableV2s exist by the name provided."
          },
          "default": {
            "description": "Error.",
            "schema": {
              "$ref": "./network.json#/definitions/Error"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualHubs/{virtualHubName}/routeTables": {
      "get": {
        "operationId": "VirtualHubRouteTableV2s_List",
        "x-ms-examples": {
          "VirtualHubRouteTableV2List": {
            "$ref": "./examples/VirtualHubRouteTableV2List.json"
          }
        },
        "description": "Retrieves the details of all VirtualHubRouteTableV2s.",
        "parameters": [
          {
            "$ref": "./network.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The resource group name of the VirtualHub."
          },
          {
            "name": "virtualHubName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the VirtualHub."
          },
          {
            "$ref": "./network.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. Returns the details of all the VirtualHubRouteTableV2s for the VirtualHub.",
            "schema": {
              "$ref": "#/definitions/ListVirtualHubRouteTableV2sResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/p2svpnGateways/{p2sVpnGatewayName}/disconnectP2sVpnConnections": {
      "post": {
        "tags": [
          "P2SVpnGateways"
        ],
        "operationId": "P2sVpnGateways_DisconnectP2sVpnConnections",
        "description": "Disconnect P2S vpn connections of the virtual wan P2SVpnGateway in the specified resource group.",
        "parameters": [
          {
            "$ref": "./network.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "p2sVpnGatewayName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the P2S Vpn Gateway."
          },
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/P2SVpnConnectionRequest"
            },
            "description": "The parameters are supplied to disconnect p2s vpn connections."
          },
          {
            "$ref": "./network.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation disconnects the requested vpn connections."
          },
          "202": {
            "description": "Accepted and the operation will complete asynchronously."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Disconnect VpnConnections from P2sVpn Gateway": {
            "$ref": "./examples/P2sVpnGatewaysDisconnectP2sVpnConnections.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Network/expressRouteGateways": {
      "get": {
        "tags": [
          "ExpressRouteGateways"
        ],
        "operationId": "ExpressRouteGateways_ListBySubscription",
        "x-ms-examples": {
          "ExpressRouteGatewayListBySubscription": {
            "$ref": "./examples/ExpressRouteGatewayListBySubscription.json"
          }
        },
        "description": "Lists ExpressRoute gateways under a given subscription.",
        "parameters": [
          {
            "$ref": "./network.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./network.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful.",
            "schema": {
              "$ref": "#/definitions/ExpressRouteGatewayList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteGateways": {
      "get": {
        "tags": [
          "ExpressRouteGateways"
        ],
        "operationId": "ExpressRouteGateways_ListByResourceGroup",
        "x-ms-examples": {
          "ExpressRouteGatewayListByResourceGroup": {
            "$ref": "./examples/ExpressRouteGatewayListByResourceGroup.json"
          }
        },
        "description": "Lists ExpressRoute gateways in a given resource group.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "$ref": "./network.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./network.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Operation successful.",
            "schema": {
              "$ref": "#/definitions/ExpressRouteGatewayList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteGateways/{expressRouteGatewayName}": {
      "put": {
        "tags": [
          "ExpressRouteGateways"
        ],
        "operationId": "ExpressRouteGateways_CreateOrUpdate",
        "x-ms-examples": {
          "ExpressRouteGatewayCreate": {
            "$ref": "./examples/ExpressRouteGatewayCreate.json"
          }
        },
        "description": "Creates or updates a ExpressRoute gateway in a specified resource group.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "expressRouteGatewayName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the ExpressRoute gateway."
          },
          {
            "name": "putExpressRouteGatewayParameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ExpressRouteGateway"
            },
            "description": "Parameters required in an ExpressRoute gateway PUT operation."
          },
          {
            "$ref": "./network.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./network.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Update successful. The operation returns the resulting ExpressRoute gateway resource.",
            "schema": {
              "$ref": "#/definitions/ExpressRouteGateway"
            }
          },
          "201": {
            "description": "Create successful. The operation returns the resulting ExpressRoute gateway resource.",
            "schema": {
              "$ref": "#/definitions/ExpressRouteGateway"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      },
      "get": {
        "tags": [
          "ExpressRouteGateways"
        ],
        "operationId": "ExpressRouteGateways_Get",
        "x-ms-examples": {
          "ExpressRouteGatewayGet": {
            "$ref": "./examples/ExpressRouteGatewayGet.json"
          }
        },
        "description": "Fetches the details of a ExpressRoute gateway in a resource group.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "expressRouteGatewayName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the ExpressRoute gateway."
          },
          {
            "$ref": "./network.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./network.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Operation succeeded. The operation returns the ExpressRoute gateway.",
            "schema": {
              "$ref": "#/definitions/ExpressRouteGateway"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ExpressRouteGateways"
        ],
        "operationId": "ExpressRouteGateways_Delete",
        "x-ms-examples": {
          "ExpressRouteGatewayDelete": {
            "$ref": "./examples/ExpressRouteGatewayDelete.json"
          }
        },
        "description": "Deletes the specified ExpressRoute gateway in a resource group. An ExpressRoute gateway resource can only be deleted when there are no connection subresources.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "expressRouteGatewayName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the ExpressRoute gateway."
          },
          {
            "$ref": "./network.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./network.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete successful."
          },
          "202": {
            "description": "Accepted and the operation will complete asynchronously."
          },
          "204": {
            "description": "Delete successful."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteGateways/{expressRouteGatewayName}/expressRouteConnections/{connectionName}": {
      "put": {
        "tags": [
          "ExpressRouteConnections"
        ],
        "operationId": "ExpressRouteConnections_CreateOrUpdate",
        "x-ms-examples": {
          "ExpressRouteConnectionCreate": {
            "$ref": "./examples/ExpressRouteConnectionCreate.json"
          }
        },
        "description": "Creates a connection between an ExpressRoute gateway and an ExpressRoute circuit.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "expressRouteGatewayName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the ExpressRoute gateway."
          },
          {
            "name": "connectionName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the connection subresource."
          },
          {
            "name": "putExpressRouteConnectionParameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ExpressRouteConnection"
            },
            "description": "Parameters required in an ExpressRouteConnection PUT operation."
          },
          {
            "$ref": "./network.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./network.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Update successful. The operation returns the ExpressRouteConnection.",
            "schema": {
              "$ref": "#/definitions/ExpressRouteConnection"
            }
          },
          "201": {
            "description": "Create successful. The operation returns the ExpressRouteConnection.",
            "schema": {
              "$ref": "#/definitions/ExpressRouteConnection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      },
      "get": {
        "tags": [
          "ExpressRouteConnections"
        ],
        "operationId": "ExpressRouteConnections_Get",
        "x-ms-examples": {
          "ExpressRouteConnectionGet": {
            "$ref": "./examples/ExpressRouteConnectionGet.json"
          }
        },
        "description": "Gets the specified ExpressRouteConnection.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "expressRouteGatewayName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the ExpressRoute gateway."
          },
          {
            "name": "connectionName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the ExpressRoute connection."
          },
          {
            "$ref": "./network.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./network.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns the ExpressRouteConnection.",
            "schema": {
              "$ref": "#/definitions/ExpressRouteConnection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ExpressRouteConnections"
        ],
        "operationId": "ExpressRouteConnections_Delete",
        "x-ms-examples": {
          "ExpressRouteConnectionDelete": {
            "$ref": "./examples/ExpressRouteConnectionDelete.json"
          }
        },
        "description": "Deletes a connection to a ExpressRoute circuit.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "expressRouteGatewayName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the ExpressRoute gateway."
          },
          {
            "name": "connectionName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the connection subresource."
          },
          {
            "$ref": "./network.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./network.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete successful."
          },
          "202": {
            "description": "Accepted, and the operation will continue asynchronously."
          },
          "204": {
            "description": "Delete successful."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteGateways/{expressRouteGatewayName}/expressRouteConnections": {
      "get": {
        "tags": [
          "ExpressRouteConnections"
        ],
        "operationId": "ExpressRouteConnections_List",
        "x-ms-examples": {
          "ExpressRouteConnectionList": {
            "$ref": "./examples/ExpressRouteConnectionList.json"
          }
        },
        "description": "Lists ExpressRouteConnections.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "expressRouteGatewayName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the ExpressRoute gateway."
          },
          {
            "$ref": "./network.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./network.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful.",
            "schema": {
              "$ref": "#/definitions/ExpressRouteConnectionList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualHubs/{virtualHubName}/bgpConnections/{connectionName}": {
      "get": {
        "operationId": "VirtualHubBgpConnection_Get",
        "x-ms-examples": {
          "VirtualHubVirtualHubRouteTableV2Get": {
            "$ref": "./examples/VirtualHubBgpConnectionGet.json"
          }
        },
        "description": "Retrieves the details of a Virtual Hub Bgp Connection.",
        "parameters": [
          {
            "$ref": "./network.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The resource group name of the VirtualHub."
          },
          {
            "name": "virtualHubName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the VirtualHub."
          },
          {
            "name": "connectionName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the connection."
          },
          {
            "$ref": "./network.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. Returns the details of the Bgp Connection retrieved.",
            "schema": {
              "$ref": "#/definitions/BgpConnection"
            }
          },
          "default": {
            "description": "Error.",
            "schema": {
              "$ref": "./network.json#/definitions/Error"
            }
          }
        }
      },
      "put": {
        "operationId": "VirtualHubBgpConnection_CreateOrUpdate",
        "x-ms-examples": {
          "VirtualHubRouteTableV2Put": {
            "$ref": "./examples/VirtualHubBgpConnectionPut.json"
          }
        },
        "description": "Creates a VirtualHubBgpConnection resource if it doesn't exist else updates the existing VirtualHubBgpConnection.",
        "parameters": [
          {
            "$ref": "./network.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The resource group name of the VirtualHub."
          },
          {
            "name": "virtualHubName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the VirtualHub."
          },
          {
            "name": "connectionName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the connection."
          },
          {
            "$ref": "./network.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BgpConnection"
            },
            "description": "Parameters of Bgp connection."
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. Returns the details of the BgpConnection created or updated.",
            "schema": {
              "$ref": "#/definitions/BgpConnection"
            }
          },
          "201": {
            "description": "Request received successfully. Returns the details of the BgpConnection created or updated.",
            "schema": {
              "$ref": "#/definitions/BgpConnection"
            }
          },
          "default": {
            "description": "Error.",
            "schema": {
              "$ref": "./network.json#/definitions/Error"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      },
      "delete": {
        "operationId": "VirtualHubBgpConnection_Delete",
        "x-ms-examples": {
          "VirtualHubRouteTableV2Delete": {
            "$ref": "./examples/VirtualHubBgpConnectionDelete.json"
          }
        },
        "description": "Deletes a VirtualHubBgpConnection.",
        "parameters": [
          {
            "$ref": "./network.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The resource group name of the VirtualHubBgpConnection."
          },
          {
            "name": "virtualHubName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the VirtualHub."
          },
          {
            "name": "connectionName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the connection."
          },
          {
            "$ref": "./network.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. VirtualHubBgpConnection deleted."
          },
          "202": {
            "description": "Request received successfully. VirtualHubBgpConnection deletion is in progress; follow the Location header to poll for final outcome."
          },
          "204": {
            "description": "No VirtualHubBgpConnection exist by the name provided."
          },
          "default": {
            "description": "Error.",
            "schema": {
              "$ref": "./network.json#/definitions/Error"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualHubs/{virtualHubName}/bgpConnections": {
      "get": {
        "operationId": "VirtualHubBgpConnections_List",
        "x-ms-examples": {
          "VirtualHubRouteTableV2List": {
            "$ref": "./examples/VirtualHubBgpConnectionList.json"
          }
        },
        "description": "Retrieves the details of all VirtualHubBgpConnections.",
        "parameters": [
          {
            "$ref": "./network.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The resource group name of the VirtualHub."
          },
          {
            "name": "virtualHubName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the VirtualHub."
          },
          {
            "$ref": "./network.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. Returns the details of all the VirtualHubBgpConnections for the VirtualHub.",
            "schema": {
              "$ref": "#/definitions/ListVirtualHubBgpConnectionResults"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualHubs/{virtualHubName}/ipConfigurations/{ipConfigName}": {
      "get": {
        "operationId": "VirtualHubIpConfiguration_Get",
        "x-ms-examples": {
          "VirtualHubVirtualHubRouteTableV2Get": {
            "$ref": "./examples/VirtualHubIpConfigurationGet.json"
          }
        },
        "description": "Retrieves the details of a Virtual Hub Ip configuration.",
        "parameters": [
          {
            "$ref": "./network.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The resource group name of the VirtualHub."
          },
          {
            "name": "virtualHubName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the VirtualHub."
          },
          {
            "name": "ipConfigName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the ipconfig."
          },
          {
            "$ref": "./network.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. Returns the details of the Bgp Connection retrieved.",
            "schema": {
              "$ref": "#/definitions/HubIpConfiguration"
            }
          },
          "default": {
            "description": "Error.",
            "schema": {
              "$ref": "./network.json#/definitions/Error"
            }
          }
        }
      },
      "put": {
        "operationId": "VirtualHubIpConfiguration_CreateOrUpdate",
        "x-ms-examples": {
          "VirtualHubIpConfigurationPut": {
            "$ref": "./examples/VirtualHubIpConfigurationPut.json"
          }
        },
        "description": "Creates a VirtualHubIpConfiguration resource if it doesn't exist else updates the existing VirtualHubIpConfiguration.",
        "parameters": [
          {
            "$ref": "./network.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The resource group name of the VirtualHub."
          },
          {
            "name": "virtualHubName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the VirtualHub."
          },
          {
            "name": "ipConfigName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the ipconfig."
          },
          {
            "$ref": "./network.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/HubIpConfiguration"
            },
            "description": "Hub Ip Configuration parameters."
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. Returns the details of the IpConfiguration created or updated.",
            "schema": {
              "$ref": "#/definitions/HubIpConfiguration"
            }
          },
          "201": {
            "description": "Request received successfully. Returns the details of the IpConfiguration created or updated.",
            "schema": {
              "$ref": "#/definitions/HubIpConfiguration"
            }
          },
          "default": {
            "description": "Error.",
            "schema": {
              "$ref": "./network.json#/definitions/Error"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      },
      "delete": {
        "operationId": "VirtualHubIpConfiguration_Delete",
        "x-ms-examples": {
          "VirtualHubIpConfigurationDelete": {
            "$ref": "./examples/VirtualHubIpConfigurationDelete.json"
          }
        },
        "description": "Deletes a VirtualHubIpConfiguration.",
        "parameters": [
          {
            "$ref": "./network.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The resource group name of the VirtualHubBgpConnection."
          },
          {
            "name": "virtualHubName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the VirtualHub."
          },
          {
            "name": "ipConfigName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the ipconfig."
          },
          {
            "$ref": "./network.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. VirtualHubIpConfiguration deleted."
          },
          "202": {
            "description": "Request received successfully. VirtualHubIpConfiguration deletion is in progress; follow the Location header to poll for final outcome."
          },
          "204": {
            "description": "No VirtualHubIpConfiguration exist by the name provided."
          },
          "default": {
            "description": "Error.",
            "schema": {
              "$ref": "./network.json#/definitions/Error"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualHubs/{virtualHubName}/ipConfigurations": {
      "get": {
        "operationId": "VirtualHubIpConfiguration_List",
        "x-ms-examples": {
          "VirtualHubRouteTableV2List": {
            "$ref": "./examples/VirtualHubIpConfigurationList.json"
          }
        },
        "description": "Retrieves the details of all VirtualHubIpConfigurations.",
        "parameters": [
          {
            "$ref": "./network.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The resource group name of the VirtualHub."
          },
          {
            "name": "virtualHubName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the VirtualHub."
          },
          {
            "$ref": "./network.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. Returns the details of all the VirtualHubIpConfigurations for the VirtualHub.",
            "schema": {
              "$ref": "#/definitions/ListVirtualHubIpConfigurationResults"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualHubs/{virtualHubName}/hubRouteTables/{routeTableName}": {
      "put": {
        "operationId": "HubRouteTables_CreateOrUpdate",
        "x-ms-examples": {
          "RouteTablePut": {
            "$ref": "./examples/HubRouteTablePut.json"
          }
        },
        "description": "Creates a RouteTable resource if it doesn't exist else updates the existing RouteTable.",
        "parameters": [
          {
            "$ref": "./network.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The resource group name of the VirtualHub."
          },
          {
            "name": "virtualHubName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the VirtualHub."
          },
          {
            "name": "routeTableName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the RouteTable."
          },
          {
            "$ref": "./network.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "routeTableParameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/HubRouteTable"
            },
            "description": "Parameters supplied to create or update RouteTable."
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. Returns the details of the RouteTable created or updated.",
            "schema": {
              "$ref": "#/definitions/HubRouteTable"
            }
          },
          "201": {
            "description": "Request received successfully. Returns the details of the RouteTable created or updated.",
            "schema": {
              "$ref": "#/definitions/HubRouteTable"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      },
      "get": {
        "operationId": "HubRouteTables_Get",
        "x-ms-examples": {
          "RouteTableGet": {
            "$ref": "./examples/HubRouteTableGet.json"
          }
        },
        "description": "Retrieves the details of a RouteTable.",
        "parameters": [
          {
            "$ref": "./network.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The resource group name of the VirtualHub."
          },
          {
            "name": "virtualHubName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the VirtualHub."
          },
          {
            "name": "routeTableName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the RouteTable."
          },
          {
            "$ref": "./network.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. Returns the details of the RouteTable retrieved.",
            "schema": {
              "$ref": "#/definitions/HubRouteTable"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        }
      },
      "delete": {
        "operationId": "HubRouteTables_Delete",
        "x-ms-examples": {
          "RouteTableDelete": {
            "$ref": "./examples/HubRouteTableDelete.json"
          }
        },
        "description": "Deletes a RouteTable.",
        "parameters": [
          {
            "$ref": "./network.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The resource group name of the RouteTable."
          },
          {
            "name": "virtualHubName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the VirtualHub."
          },
          {
            "name": "routeTableName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the RouteTable."
          },
          {
            "$ref": "./network.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. RouteTable deleted."
          },
          "202": {
            "description": "Request received successfully. RouteTable deletion is in progress; follow the Location header to poll for final outcome."
          },
          "204": {
            "description": "No RouteTables exist by the name provided."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualHubs/{virtualHubName}/hubRouteTables": {
      "get": {
        "operationId": "HubRouteTables_List",
        "x-ms-examples": {
          "RouteTableList": {
            "$ref": "./examples/HubRouteTableList.json"
          }
        },
        "description": "Retrieves the details of all RouteTables.",
        "parameters": [
          {
            "$ref": "./network.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The resource group name of the VirtualHub."
          },
          {
            "name": "virtualHubName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the VirtualHub."
          },
          {
            "$ref": "./network.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. Returns the details of all the RouteTables for the VirtualHub.",
            "schema": {
              "$ref": "#/definitions/ListHubRouteTablesResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    }
  },
  "definitions": {
    "VirtualWanProperties": {
      "properties": {
        "disableVpnEncryption": {
          "type": "boolean",
          "description": "Vpn encryption to be disabled or not."
        },
        "virtualHubs": {
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "./network.json#/definitions/SubResource"
          },
          "description": "List of VirtualHubs in the VirtualWAN."
        },
        "vpnSites": {
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "./network.json#/definitions/SubResource"
          },
          "description": "List of VpnSites in the VirtualWAN."
        },
        "allowBranchToBranchTraffic": {
          "type": "boolean",
          "description": "True if branch to branch traffic is allowed."
        },
        "allowVnetToVnetTraffic": {
          "type": "boolean",
          "description": "True if Vnet to Vnet traffic is allowed."
        },
        "office365LocalBreakoutCategory": {
          "description": "The office local breakout category.",
          "$ref": "#/definitions/OfficeTrafficCategory"
        },
        "provisioningState": {
          "readOnly": true,
          "$ref": "./network.json#/definitions/ProvisioningState",
          "description": "The provisioning state of the virtual WAN resource."
        },
        "type": {
          "type": "string",
          "description": "The type of the VirtualWAN."
        }
      },
      "description": "Parameters for VirtualWAN."
    },
    "VirtualWAN": {
      "required": [
        "location"
      ],
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/VirtualWanProperties",
          "description": "Properties of the virtual WAN."
        },
        "etag": {
          "type": "string",
          "readOnly": true,
          "description": "A unique read-only string that changes whenever the resource is updated."
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/Resource"
        }
      ],
      "description": "VirtualWAN Resource."
    },
    "ListVirtualWANsResult": {
      "description": "Result of the request to list VirtualWANs. It contains a list of VirtualWANs and a URL nextLink to get the next set of results.",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VirtualWAN"
          },
          "description": "List of VirtualWANs."
        },
        "nextLink": {
          "type": "string",
          "description": "URL to get the next set of operation list results if there are any."
        }
      }
    },
    "VpnSiteProperties": {
      "properties": {
        "virtualWan": {
          "$ref": "./network.json#/definitions/SubResource",
          "description": "The VirtualWAN to which the vpnSite belongs."
        },
        "deviceProperties": {
          "description": "The device properties.",
          "$ref": "#/definitions/DeviceProperties"
        },
        "ipAddress": {
          "type": "string",
          "description": "The ip-address for the vpn-site."
        },
        "siteKey": {
          "type": "string",
          "description": "The key for vpn-site that can be used for connections."
        },
        "addressSpace": {
          "$ref": "./virtualNetwork.json#/definitions/AddressSpace",
          "description": "The AddressSpace that contains an array of IP address ranges."
        },
        "bgpProperties": {
          "$ref": "./virtualNetworkGateway.json#/definitions/BgpSettings",
          "description": "The set of bgp properties."
        },
        "provisioningState": {
          "readOnly": true,
          "$ref": "./network.json#/definitions/ProvisioningState",
          "description": "The provisioning state of the VPN site resource."
        },
        "isSecuritySite": {
          "type": "boolean",
          "description": "IsSecuritySite flag."
        },
        "vpnSiteLinks": {
          "type": "array",
          "description": "List of all vpn site links.",
          "items": {
            "$ref": "#/definitions/VpnSiteLink"
          }
        }
      },
      "description": "Parameters for VpnSite."
    },
    "VpnSite": {
      "required": [
        "location"
      ],
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/VpnSiteProperties",
          "description": "Properties of the VPN site."
        },
        "etag": {
          "type": "string",
          "readOnly": true,
          "description": "A unique read-only string that changes whenever the resource is updated."
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/Resource"
        }
      ],
      "description": "VpnSite Resource."
    },
    "ListVpnSitesResult": {
      "description": "Result of the request to list VpnSites. It contains a list of VpnSites and a URL nextLink to get the next set of results.",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VpnSite"
          },
          "description": "List of VpnSites."
        },
        "nextLink": {
          "type": "string",
          "description": "URL to get the next set of operation list results if there are any."
        }
      }
    },
    "VpnSiteLinkProperties": {
      "properties": {
        "linkProperties": {
          "description": "The link provider properties.",
          "$ref": "#/definitions/VpnLinkProviderProperties"
        },
        "ipAddress": {
          "type": "string",
          "description": "The ip-address for the vpn-site-link."
        },
        "fqdn": {
          "type": "string",
          "description": "FQDN of vpn-site-link."
        },
        "bgpProperties": {
          "$ref": "#/definitions/VpnLinkBgpSettings",
          "description": "The set of bgp properties."
        },
        "provisioningState": {
          "readOnly": true,
          "$ref": "./network.json#/definitions/ProvisioningState",
          "description": "The provisioning state of the VPN site link resource."
        }
      },
      "description": "Parameters for VpnSite."
    },
    "VpnSiteLink": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/VpnSiteLinkProperties",
          "description": "Properties of the VPN site link."
        },
        "etag": {
          "type": "string",
          "readOnly": true,
          "description": "A unique read-only string that changes whenever the resource is updated."
        },
        "name": {
          "type": "string",
          "description": "The name of the resource that is unique within a resource group. This name can be used to access the resource."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "Resource type."
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/SubResource"
        }
      ],
      "description": "VpnSiteLink Resource."
    },
    "ListVpnSiteLinksResult": {
      "description": "Result of the request to list VpnSiteLinks. It contains a list of VpnSiteLinks and a URL nextLink to get the next set of results.",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VpnSiteLink"
          },
          "description": "List of VpnSitesLinks."
        },
        "nextLink": {
          "type": "string",
          "description": "URL to get the next set of operation list results if there are any."
        }
      }
    },
    "GetVpnSitesConfigurationRequest": {
      "properties": {
        "vpnSites": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of resource-ids of the vpn-sites for which config is to be downloaded."
        },
        "outputBlobSasUrl": {
          "type": "string",
          "description": "The sas-url to download the configurations for vpn-sites."
        }
      },
      "required": [
        "outputBlobSasUrl"
      ],
      "description": "List of Vpn-Sites."
    },
    "VirtualHubProperties": {
      "properties": {
        "virtualWan": {
          "$ref": "./network.json#/definitions/SubResource",
          "description": "The VirtualWAN to which the VirtualHub belongs."
        },
        "vpnGateway": {
          "$ref": "./network.json#/definitions/SubResource",
          "description": "The VpnGateway associated with this VirtualHub."
        },
        "p2SVpnGateway": {
          "$ref": "./network.json#/definitions/SubResource",
          "description": "The P2SVpnGateway associated with this VirtualHub."
        },
        "expressRouteGateway": {
          "$ref": "./network.json#/definitions/SubResource",
          "description": "The expressRouteGateway associated with this VirtualHub."
        },
        "azureFirewall": {
          "$ref": "./network.json#/definitions/SubResource",
          "description": "The azureFirewall associated with this VirtualHub."
        },
        "securityPartnerProvider": {
          "$ref": "./network.json#/definitions/SubResource",
          "description": "The securityPartnerProvider associated with this VirtualHub."
        },
        "virtualNetworkConnections": {
          "type": "array",
          "description": "List of all vnet connections with this VirtualHub.",
          "items": {
            "$ref": "#/definitions/HubVirtualNetworkConnection"
          }
        },
        "addressPrefix": {
          "type": "string",
          "description": "Address-prefix for this VirtualHub."
        },
        "routeTable": {
          "$ref": "#/definitions/VirtualHubRouteTable",
          "description": "The routeTable associated with this virtual hub."
        },
        "provisioningState": {
          "readOnly": true,
          "$ref": "./network.json#/definitions/ProvisioningState",
          "description": "The provisioning state of the virtual hub resource."
        },
        "securityProviderName": {
          "type": "string",
          "description": "The Security Provider name."
        },
        "virtualHubRouteTableV2s": {
          "type": "array",
          "description": "List of all virtual hub route table v2s associated with this VirtualHub.",
          "items": {
            "$ref": "#/definitions/VirtualHubRouteTableV2"
          }
        },
        "sku": {
          "type": "string",
          "description": "The sku of this VirtualHub."
        },
        "bgpConnections": {
          "type": "array",
          "readOnly": true,
          "description": "List of references to Bgp Connections.",
          "items": {
            "$ref": "./network.json#/definitions/SubResource"
          }
        },
        "ipConfigurations": {
          "type": "array",
          "readOnly": true,
          "description": "List of references to IpConfigurations.",
          "items": {
            "$ref": "./network.json#/definitions/SubResource"
          }
        },
        "virtualRouterAsn": {
          "type": "integer",
          "readOnly": false,
          "format": "int64",
          "minimum": 0,
          "maximum": 4294967295,
          "description": "VirtualRouter ASN."
        },
        "virtualRouterIps": {
          "type": "array",
          "readOnly": false,
          "description": "VirtualRouter IPs.",
          "items": {
            "type": "string"
          }
        }
      },
      "description": "Parameters for VirtualHub."
    },
    "BgpConnection": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/BgpConnectionProperties",
          "description": "The properties of the Bgp connections."
        },
        "name": {
          "type": "string",
          "description": "Name of the connection."
        },
        "etag": {
          "type": "string",
          "readOnly": true,
          "description": "A unique read-only string that changes whenever the resource is updated."
        },
        "type": {
          "type": "string",
          "readOnly": true,
          "description": "Connection type."
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/SubResource"
        }
      ],
      "description": "Virtual Appliance Site resource."
    },
    "BgpConnectionProperties": {
      "properties": {
        "peerAsn": {
          "type": "integer",
          "readOnly": false,
          "format": "int64",
          "minimum": 0,
          "maximum": 4294967295,
          "description": "Peer ASN."
        },
        "peerIp": {
          "type": "string",
          "readOnly": false,
          "description": "Peer IP."
        },
        "provisioningState": {
          "description": "The provisioning state of the resource.",
          "readOnly": true,
          "$ref": "./network.json#/definitions/ProvisioningState"
        },
        "connectionState": {
          "type": "string",
          "description": "The current state of the VirtualHub to Peer.",
          "readOnly": true,
          "enum": [
            "Unknown",
            "Connecting",
            "Connected",
            "NotConnected"
          ],
          "x-ms-enum": {
            "name": "HubBgpConnectionStatus",
            "modelAsString": true
          }
        }
      },
      "description": "Properties of the bgp connection."
    },
    "HubIpConfiguration": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/HubIPConfigurationPropertiesFormat",
          "description": "The properties of the Virtual Hub IPConfigurations."
        },
        "name": {
          "type": "string",
          "description": "Name of the Ip Configuration."
        },
        "etag": {
          "type": "string",
          "readOnly": true,
          "description": "A unique read-only string that changes whenever the resource is updated."
        },
        "type": {
          "type": "string",
          "readOnly": true,
          "description": "Ipconfiguration type."
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/SubResource"
        }
      ],
      "description": "IpConfigurations."
    },
    "HubIPConfigurationPropertiesFormat": {
      "properties": {
        "privateIPAddress": {
          "type": "string",
          "description": "The private IP address of the IP configuration."
        },
        "privateIPAllocationMethod": {
          "$ref": "./network.json#/definitions/IPAllocationMethod",
          "description": "The private IP address allocation method."
        },
        "subnet": {
          "$ref": "./virtualNetwork.json#/definitions/Subnet",
          "description": "The reference to the subnet resource."
        },
        "publicIPAddress": {
          "$ref": "./publicIpAddress.json#/definitions/PublicIPAddress",
          "description": "The reference to the public IP resource."
        },
        "provisioningState": {
          "readOnly": true,
          "$ref": "./network.json#/definitions/ProvisioningState",
          "description": "The provisioning state of the IP configuration resource."
        }
      },
      "description": "Properties of IP configuration."
    },
    "VirtualHubRouteTable": {
      "properties": {
        "routes": {
          "type": "array",
          "description": "List of all routes.",
          "items": {
            "$ref": "#/definitions/VirtualHubRoute"
          }
        }
      },
      "description": "VirtualHub route table."
    },
    "VirtualHubRoute": {
      "properties": {
        "addressPrefixes": {
          "type": "array",
          "description": "List of all addressPrefixes.",
          "items": {
            "type": "string"
          }
        },
        "nextHopIpAddress": {
          "type": "string",
          "description": "NextHop ip address."
        }
      },
      "description": "VirtualHub route."
    },
    "VirtualHub": {
      "required": [
        "location"
      ],
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/VirtualHubProperties",
          "description": "Properties of the virtual hub."
        },
        "etag": {
          "type": "string",
          "readOnly": true,
          "description": "A unique read-only string that changes whenever the resource is updated."
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/Resource"
        }
      ],
      "description": "VirtualHub Resource."
    },
    "ListVirtualHubsResult": {
      "description": "Result of the request to list VirtualHubs. It contains a list of VirtualHubs and a URL nextLink to get the next set of results.",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VirtualHub"
          },
          "description": "List of VirtualHubs."
        },
        "nextLink": {
          "type": "string",
          "description": "URL to get the next set of operation list results if there are any."
        }
      }
    },
    "VpnGatewayProperties": {
      "properties": {
        "virtualHub": {
          "$ref": "./network.json#/definitions/SubResource",
          "description": "The VirtualHub to which the gateway belongs."
        },
        "connections": {
          "type": "array",
          "description": "List of all vpn connections to the gateway.",
          "items": {
            "$ref": "#/definitions/VpnConnection"
          }
        },
        "bgpSettings": {
          "$ref": "./virtualNetworkGateway.json#/definitions/BgpSettings",
          "description": "Local network gateway's BGP speaker settings."
        },
        "provisioningState": {
          "readOnly": true,
          "$ref": "./network.json#/definitions/ProvisioningState",
          "description": "The provisioning state of the VPN gateway resource."
        },
        "vpnGatewayScaleUnit": {
          "type": "integer",
          "format": "int32",
          "description": "The scale unit for this vpn gateway."
        }
      },
      "description": "Parameters for VpnGateway."
    },
    "VpnGateway": {
      "required": [
        "location"
      ],
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/VpnGatewayProperties",
          "description": "Properties of the VPN gateway."
        },
        "etag": {
          "type": "string",
          "readOnly": true,
          "description": "A unique read-only string that changes whenever the resource is updated."
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/Resource"
        }
      ],
      "description": "VpnGateway Resource."
    },
    "ListVpnGatewaysResult": {
      "description": "Result of the request to list VpnGateways. It contains a list of VpnGateways and a URL nextLink to get the next set of results.",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VpnGateway"
          },
          "description": "List of VpnGateways."
        },
        "nextLink": {
          "type": "string",
          "description": "URL to get the next set of operation list results if there are any."
        }
      }
    },
    "VpnConnectionProperties": {
      "properties": {
        "remoteVpnSite": {
          "$ref": "./network.json#/definitions/SubResource",
          "description": "Id of the connected vpn site."
        },
        "routingWeight": {
          "type": "integer",
          "format": "int32",
          "description": "Routing weight for vpn connection."
        },
        "dpdTimeoutSeconds": {
          "type": "integer",
          "format": "int32",
          "description": "The dead peer detection timeout for a vpn connection in seconds."
        },
        "connectionStatus": {
          "description": "The connection status.",
          "$ref": "#/definitions/VpnConnectionStatus"
        },
        "vpnConnectionProtocolType": {
          "description": "Connection protocol used for this connection.",
          "$ref": "./virtualNetworkGateway.json#/definitions/ConnectionProtocol"
        },
        "ingressBytesTransferred": {
          "type": "integer",
          "format": "int64",
          "readOnly": true,
          "description": "Ingress bytes transferred."
        },
        "egressBytesTransferred": {
          "type": "integer",
          "format": "int64",
          "readOnly": true,
          "description": "Egress bytes transferred."
        },
        "connectionBandwidth": {
          "type": "integer",
          "format": "int32",
          "description": "Expected bandwidth in MBPS."
        },
        "sharedKey": {
          "type": "string",
          "description": "SharedKey for the vpn connection."
        },
        "enableBgp": {
          "type": "boolean",
          "description": "EnableBgp flag."
        },
        "usePolicyBasedTrafficSelectors": {
          "type": "boolean",
          "description": "Enable policy-based traffic selectors."
        },
        "ipsecPolicies": {
          "type": "array",
          "items": {
            "$ref": "./virtualNetworkGateway.json#/definitions/IpsecPolicy"
          },
          "description": "The IPSec Policies to be considered by this connection."
        },
        "enableRateLimiting": {
          "type": "boolean",
          "description": "EnableBgp flag."
        },
        "enableInternetSecurity": {
          "type": "boolean",
          "description": "Enable internet security."
        },
        "useLocalAzureIpAddress": {
          "type": "boolean",
          "description": "Use local azure ip to initiate connection."
        },
        "provisioningState": {
          "readOnly": true,
          "$ref": "./network.json#/definitions/ProvisioningState",
          "description": "The provisioning state of the VPN connection resource."
        },
        "vpnLinkConnections": {
          "type": "array",
          "description": "List of all vpn site link connections to the gateway.",
          "items": {
            "$ref": "#/definitions/VpnSiteLinkConnection"
          }
        },
        "routingConfiguration": {
          "$ref": "#/definitions/RoutingConfiguration",
          "description": "The Routing Configuration indicating the associated and propagated route tables on this connection."
        }
      },
      "description": "Parameters for VpnConnection."
    },
    "VpnConnection": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/VpnConnectionProperties",
          "description": "Properties of the VPN connection."
        },
        "name": {
          "type": "string",
          "description": "The name of the resource that is unique within a resource group. This name can be used to access the resource."
        },
        "etag": {
          "type": "string",
          "readOnly": true,
          "description": "A unique read-only string that changes whenever the resource is updated."
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/SubResource"
        }
      ],
      "description": "VpnConnection Resource."
    },
    "ListVpnConnectionsResult": {
      "description": "Result of the request to list all vpn connections to a virtual wan vpn gateway. It contains a list of Vpn Connections and a URL nextLink to get the next set of results.",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VpnConnection"
          },
          "description": "List of Vpn Connections."
        },
        "nextLink": {
          "type": "string",
          "description": "URL to get the next set of operation list results if there are any."
        }
      }
    },
    "VpnSiteLinkConnectionProperties": {
      "properties": {
        "vpnSiteLink": {
          "$ref": "./network.json#/definitions/SubResource",
          "description": "Id of the connected vpn site link."
        },
        "routingWeight": {
          "type": "integer",
          "format": "int32",
          "description": "Routing weight for vpn connection."
        },
        "connectionStatus": {
          "description": "The connection status.",
          "$ref": "#/definitions/VpnConnectionStatus"
        },
        "vpnConnectionProtocolType": {
          "description": "Connection protocol used for this connection.",
          "$ref": "./virtualNetworkGateway.json#/definitions/ConnectionProtocol"
        },
        "ingressBytesTransferred": {
          "type": "integer",
          "format": "int64",
          "readOnly": true,
          "description": "Ingress bytes transferred."
        },
        "egressBytesTransferred": {
          "type": "integer",
          "format": "int64",
          "readOnly": true,
          "description": "Egress bytes transferred."
        },
        "connectionBandwidth": {
          "type": "integer",
          "format": "int32",
          "description": "Expected bandwidth in MBPS."
        },
        "sharedKey": {
          "type": "string",
          "description": "SharedKey for the vpn connection."
        },
        "enableBgp": {
          "type": "boolean",
          "description": "EnableBgp flag."
        },
        "usePolicyBasedTrafficSelectors": {
          "type": "boolean",
          "description": "Enable policy-based traffic selectors."
        },
        "ipsecPolicies": {
          "type": "array",
          "items": {
            "$ref": "./virtualNetworkGateway.json#/definitions/IpsecPolicy"
          },
          "description": "The IPSec Policies to be considered by this connection."
        },
        "enableRateLimiting": {
          "type": "boolean",
          "description": "EnableBgp flag."
        },
        "useLocalAzureIpAddress": {
          "type": "boolean",
          "description": "Use local azure ip to initiate connection."
        },
        "provisioningState": {
          "readOnly": true,
          "$ref": "./network.json#/definitions/ProvisioningState",
          "description": "The provisioning state of the VPN site link connection resource."
        }
      },
      "description": "Parameters for VpnConnection."
    },
    "VpnSiteLinkConnection": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/VpnSiteLinkConnectionProperties",
          "description": "Properties of the VPN site link connection."
        },
        "name": {
          "type": "string",
          "description": "The name of the resource that is unique within a resource group. This name can be used to access the resource."
        },
        "etag": {
          "type": "string",
          "readOnly": true,
          "description": "A unique read-only string that changes whenever the resource is updated."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "Resource type."
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/SubResource"
        }
      ],
      "description": "VpnSiteLinkConnection Resource."
    },
    "ListVpnSiteLinkConnectionsResult": {
      "description": "Result of the request to list all vpn connections to a virtual wan vpn gateway. It contains a list of Vpn Connections and a URL nextLink to get the next set of results.",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VpnSiteLinkConnection"
          },
          "description": "List of VpnSiteLinkConnections."
        },
        "nextLink": {
          "type": "string",
          "description": "URL to get the next set of operation list results if there are any."
        }
      }
    },
    "HubVirtualNetworkConnectionProperties": {
      "properties": {
        "remoteVirtualNetwork": {
          "$ref": "./network.json#/definitions/SubResource",
          "description": "Reference to the remote virtual network."
        },
        "allowHubToRemoteVnetTransit": {
          "type": "boolean",
          "description": "VirtualHub to RemoteVnet transit to enabled or not."
        },
        "allowRemoteVnetToUseHubVnetGateways": {
          "type": "boolean",
          "description": "Allow RemoteVnet to use Virtual Hub's gateways."
        },
        "enableInternetSecurity": {
          "type": "boolean",
          "description": "Enable internet security."
        },
        "routingConfiguration": {
          "$ref": "#/definitions/RoutingConfiguration",
          "description": "The Routing Configuration indicating the associated and propagated route tables on this connection."
        },
        "provisioningState": {
          "readOnly": true,
          "$ref": "./network.json#/definitions/ProvisioningState",
          "description": "The provisioning state of the hub virtual network connection resource."
        }
      },
      "description": "Parameters for HubVirtualNetworkConnection."
    },
    "HubVirtualNetworkConnection": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/HubVirtualNetworkConnectionProperties",
          "description": "Properties of the hub virtual network connection."
        },
        "name": {
          "type": "string",
          "description": "The name of the resource that is unique within a resource group. This name can be used to access the resource."
        },
        "etag": {
          "type": "string",
          "readOnly": true,
          "description": "A unique read-only string that changes whenever the resource is updated."
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/SubResource"
        }
      ],
      "description": "HubVirtualNetworkConnection Resource."
    },
    "ListHubVirtualNetworkConnectionsResult": {
      "description": "List of HubVirtualNetworkConnections and a URL nextLink to get the next set of results.",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/HubVirtualNetworkConnection"
          },
          "description": "List of HubVirtualNetworkConnections."
        },
        "nextLink": {
          "type": "string",
          "description": "URL to get the next set of operation list results if there are any."
        }
      }
    },
    "HubRouteTableProperties": {
      "properties": {
        "routes": {
          "type": "array",
          "description": "List of all routes.",
          "items": {
            "$ref": "#/definitions/HubRoute"
          }
        },
        "labels": {
          "type": "array",
          "description": "List of labels associated with this route table.",
          "items": {
            "type": "string"
          }
        },
        "associatedConnections": {
          "type": "array",
          "description": "List of all connections associated with this route table.",
          "readOnly": true,
          "items": {
            "$ref": "./network.json#/definitions/SubResource"
          }
        },
        "propagatingConnections": {
          "type": "array",
          "description": "List of all connections that advertise to this route table.",
          "readOnly": true,
          "items": {
            "$ref": "./network.json#/definitions/SubResource"
          }
        },
        "provisioningState": {
          "$ref": "./network.json#/definitions/ProvisioningState",
          "readOnly": true,
          "description": "The provisioning state of the RouteTable resource."
        }
      },
      "description": "Parameters for RouteTable."
    },
    "HubRouteTable": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/HubRouteTableProperties",
          "description": "Properties of the RouteTable resource."
        },
        "name": {
          "type": "string",
          "description": "The name of the resource that is unique within a resource group. This name can be used to access the resource."
        },
        "etag": {
          "type": "string",
          "readOnly": true,
          "description": "A unique read-only string that changes whenever the resource is updated."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "Resource type."
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/SubResource"
        }
      ],
      "description": "RouteTable resource in a virtual hub."
    },
    "HubRoute": {
      "required": [
        "name",
        "destinationType",
        "destinations",
        "nextHopType",
        "nextHop"
      ],
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the Route that is unique within a RouteTable. This name can be used to access this route."
        },
        "destinationType": {
          "type": "string",
          "description": "The type of destinations (eg: CIDR, ResourceId, Service)."
        },
        "destinations": {
          "type": "array",
          "description": "List of all destinations.",
          "items": {
            "type": "string"
          }
        },
        "nextHopType": {
          "type": "string",
          "description": "The type of next hop (eg: ResourceId)."
        },
        "nextHop": {
          "type": "string",
          "description": "NextHop resource ID."
        }
      },
      "description": "RouteTable route."
    },
    "ListHubRouteTablesResult": {
      "description": "List of RouteTables and a URL nextLink to get the next set of results.",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/HubRouteTable"
          },
          "description": "List of RouteTables."
        },
        "nextLink": {
          "type": "string",
          "description": "URL to get the next set of operation list results if there are any."
        }
      }
    },
    "VpnSiteId": {
      "properties": {
        "vpnSite": {
          "type": "string",
          "readOnly": true,
          "description": "The resource-uri of the vpn-site for which config is to be fetched."
        }
      },
      "description": "VpnSite Resource."
    },
    "DeviceProperties": {
      "properties": {
        "deviceVendor": {
          "type": "string",
          "description": "Name of the device Vendor."
        },
        "deviceModel": {
          "type": "string",
          "description": "Model of the device."
        },
        "linkSpeedInMbps": {
          "type": "integer",
          "format": "int32",
          "description": "Link speed."
        }
      },
      "description": "List of properties of the device."
    },
    "VirtualWanSecurityProviders": {
      "properties": {
        "supportedProviders": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VirtualWanSecurityProvider"
          },
          "description": "List of VirtualWAN security providers."
        }
      },
      "description": "Collection of SecurityProviders."
    },
    "VirtualWanSecurityProvider": {
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the security provider."
        },
        "url": {
          "type": "string",
          "description": "Url of the security provider."
        },
        "type": {
          "$ref": "#/definitions/VirtualWanSecurityProviderType",
          "description": "Name of the security provider."
        }
      },
      "description": "Collection of SecurityProviders."
    },
    "VpnConnectionStatus": {
      "type": "string",
      "description": "The current state of the vpn connection.",
      "readOnly": true,
      "enum": [
        "Unknown",
        "Connecting",
        "Connected",
        "NotConnected"
      ],
      "x-ms-enum": {
        "name": "VpnConnectionStatus",
        "modelAsString": true
      }
    },
    "TunnelConnectionStatus": {
      "type": "string",
      "description": "The current state of the tunnel.",
      "readOnly": true,
      "enum": [
        "Unknown",
        "Connecting",
        "Connected",
        "NotConnected"
      ],
      "x-ms-enum": {
        "name": "TunnelConnectionStatus",
        "modelAsString": true
      }
    },
    "HubVirtualNetworkConnectionStatus": {
      "type": "string",
      "description": "The current state of the VirtualHub to vnet connection.",
      "readOnly": true,
      "enum": [
        "Unknown",
        "Connecting",
        "Connected",
        "NotConnected"
      ],
      "x-ms-enum": {
        "name": "HubVirtualNetworkConnectionStatus",
        "modelAsString": true
      }
    },
    "OfficeTrafficCategory": {
      "type": "string",
      "description": "The office traffic category.",
      "readOnly": true,
      "enum": [
        "Optimize",
        "OptimizeAndAllow",
        "All",
        "None"
      ],
      "x-ms-enum": {
        "name": "OfficeTrafficCategory",
        "modelAsString": true
      }
    },
    "VirtualWanSecurityProviderType": {
      "type": "string",
      "description": "The virtual wan security provider type.",
      "readOnly": true,
      "enum": [
        "External",
        "Native"
      ],
      "x-ms-enum": {
        "name": "VirtualWanSecurityProviderType",
        "modelAsString": true
      }
    },
    "VpnServerConfigVpnClientRootCertificate": {
      "properties": {
        "name": {
          "type": "string",
          "description": "The certificate name."
        },
        "publicCertData": {
          "type": "string",
          "description": "The certificate public data."
        }
      },
      "description": "Properties of VPN client root certificate of VpnServerConfiguration."
    },
    "VpnServerConfigRadiusServerRootCertificate": {
      "properties": {
        "name": {
          "type": "string",
          "description": "The certificate name."
        },
        "publicCertData": {
          "type": "string",
          "description": "The certificate public data."
        }
      },
      "description": "Properties of Radius Server root certificate of VpnServerConfiguration."
    },
    "VpnServerConfigVpnClientRevokedCertificate": {
      "properties": {
        "name": {
          "type": "string",
          "description": "The certificate name."
        },
        "thumbprint": {
          "type": "string",
          "description": "The revoked VPN client certificate thumbprint."
        }
      },
      "description": "Properties of the revoked VPN client certificate of VpnServerConfiguration."
    },
    "VpnServerConfigRadiusClientRootCertificate": {
      "properties": {
        "name": {
          "type": "string",
          "description": "The certificate name."
        },
        "thumbprint": {
          "type": "string",
          "description": "The Radius client root certificate thumbprint."
        }
      },
      "description": "Properties of the Radius client root certificate of VpnServerConfiguration."
    },
    "AadAuthenticationParameters": {
      "properties": {
        "aadTenant": {
          "type": "string",
          "description": "AAD Vpn authentication parameter AAD tenant."
        },
        "aadAudience": {
          "type": "string",
          "description": "AAD Vpn authentication parameter AAD audience."
        },
        "aadIssuer": {
          "type": "string",
          "description": "AAD Vpn authentication parameter AAD issuer."
        }
      },
      "description": "AAD Vpn authentication type related parameters."
    },
    "VpnServerConfigurationProperties": {
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the VpnServerConfiguration that is unique within a resource group."
        },
        "vpnProtocols": {
          "type": "array",
          "items": {
            "type": "string",
            "description": "VPN protocol enabled for the VpnServerConfiguration.",
            "enum": [
              "IkeV2",
              "OpenVPN"
            ],
            "x-ms-enum": {
              "name": "VpnGatewayTunnelingProtocol",
              "modelAsString": true
            }
          },
          "description": "VPN protocols for the VpnServerConfiguration."
        },
        "vpnAuthenticationTypes": {
          "type": "array",
          "items": {
            "type": "string",
            "description": "VPN authentication types enabled for the VpnServerConfiguration.",
            "enum": [
              "Certificate",
              "Radius",
              "AAD"
            ],
            "x-ms-enum": {
              "name": "VpnAuthenticationType",
              "modelAsString": true
            }
          },
          "description": "VPN authentication types for the VpnServerConfiguration."
        },
        "vpnClientRootCertificates": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VpnServerConfigVpnClientRootCertificate"
          },
          "description": "VPN client root certificate of VpnServerConfiguration."
        },
        "vpnClientRevokedCertificates": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VpnServerConfigVpnClientRevokedCertificate"
          },
          "description": "VPN client revoked certificate of VpnServerConfiguration."
        },
        "radiusServerRootCertificates": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VpnServerConfigRadiusServerRootCertificate"
          },
          "description": "Radius Server root certificate of VpnServerConfiguration."
        },
        "radiusClientRootCertificates": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VpnServerConfigRadiusClientRootCertificate"
          },
          "description": "Radius client root certificate of VpnServerConfiguration."
        },
        "vpnClientIpsecPolicies": {
          "type": "array",
          "items": {
            "$ref": "./virtualNetworkGateway.json#/definitions/IpsecPolicy"
          },
          "description": "VpnClientIpsecPolicies for VpnServerConfiguration."
        },
        "radiusServerAddress": {
          "type": "string",
          "description": "The radius server address property of the VpnServerConfiguration resource for point to site client connection."
        },
        "radiusServerSecret": {
          "type": "string",
          "description": "The radius secret property of the VpnServerConfiguration resource for point to site client connection."
        },
        "radiusServers": {
          "type": "array",
          "items": {
            "$ref": "./virtualNetworkGateway.json#/definitions/RadiusServer"
          },
          "description": "Multiple Radius Server configuration for VpnServerConfiguration."
        },
        "aadAuthenticationParameters": {
          "$ref": "#/definitions/AadAuthenticationParameters",
          "description": "The set of aad vpn authentication parameters."
        },
        "provisioningState": {
          "readOnly": true,
          "type": "string",
          "description": "The provisioning state of the VpnServerConfiguration resource. Possible values are: 'Updating', 'Deleting', and 'Failed'."
        },
        "p2SVpnGateways": {
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/P2SVpnGateway"
          },
          "description": "List of references to P2SVpnGateways."
        },
        "etag": {
          "readOnly": true,
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated."
        }
      },
      "description": "Parameters for VpnServerConfiguration."
    },
    "VpnServerConfiguration": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/VpnServerConfigurationProperties",
          "description": "Properties of the P2SVpnServer configuration."
        },
        "name": {
          "type": "string",
          "description": "The name of the resource that is unique within a resource group. This name can be used to access the resource."
        },
        "etag": {
          "type": "string",
          "readOnly": true,
          "description": "A unique read-only string that changes whenever the resource is updated."
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/Resource"
        }
      ],
      "description": "VpnServerConfiguration Resource."
    },
    "ListVpnServerConfigurationsResult": {
      "description": "Result of the request to list all VpnServerConfigurations. It contains a list of VpnServerConfigurations and a URL nextLink to get the next set of results.",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VpnServerConfiguration"
          },
          "description": "List of VpnServerConfigurations."
        },
        "nextLink": {
          "type": "string",
          "description": "URL to get the next set of operation list results if there are any."
        }
      }
    },
    "VpnClientConnectionHealth": {
      "properties": {
        "totalIngressBytesTransferred": {
          "readOnly": true,
          "type": "integer",
          "format": "int64",
          "description": "Total of the Ingress Bytes Transferred in this P2S Vpn connection."
        },
        "totalEgressBytesTransferred": {
          "readOnly": true,
          "type": "integer",
          "format": "int64",
          "description": "Total of the Egress Bytes Transferred in this connection."
        },
        "vpnClientConnectionsCount": {
          "type": "integer",
          "format": "int32",
          "description": "The total of p2s vpn clients connected at this time to this P2SVpnGateway."
        },
        "allocatedIpAddresses": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of allocated ip addresses to the connected p2s vpn clients."
        }
      },
      "description": "VpnClientConnectionHealth properties."
    },
    "P2SVpnGatewayProperties": {
      "properties": {
        "virtualHub": {
          "$ref": "./network.json#/definitions/SubResource",
          "description": "The VirtualHub to which the gateway belongs."
        },
        "p2SConnectionConfigurations": {
          "type": "array",
          "description": "List of all p2s connection configurations of the gateway.",
          "items": {
            "$ref": "#/definitions/P2SConnectionConfiguration"
          }
        },
        "provisioningState": {
          "readOnly": true,
          "$ref": "./network.json#/definitions/ProvisioningState",
          "description": "The provisioning state of the P2S VPN gateway resource."
        },
        "vpnGatewayScaleUnit": {
          "type": "integer",
          "format": "int32",
          "description": "The scale unit for this p2s vpn gateway."
        },
        "vpnServerConfiguration": {
          "$ref": "./network.json#/definitions/SubResource",
          "description": "The VpnServerConfiguration to which the p2sVpnGateway is attached to."
        },
        "vpnClientConnectionHealth": {
          "readOnly": true,
          "$ref": "#/definitions/VpnClientConnectionHealth",
          "description": "All P2S VPN clients' connection health status."
        },
        "customDnsServers": {
          "type": "array",
          "description": "List of all customer specified DNS servers IP addresses.",
          "items": {
            "type": "string"
          }
        }
      },
      "description": "Parameters for P2SVpnGateway."
    },
    "P2SVpnGateway": {
      "required": [
        "location"
      ],
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/P2SVpnGatewayProperties",
          "description": "Properties of the P2SVpnGateway."
        },
        "etag": {
          "type": "string",
          "readOnly": true,
          "description": "A unique read-only string that changes whenever the resource is updated."
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/Resource"
        }
      ],
      "description": "P2SVpnGateway Resource."
    },
    "ListP2SVpnGatewaysResult": {
      "description": "Result of the request to list P2SVpnGateways. It contains a list of P2SVpnGateways and a URL nextLink to get the next set of results.",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/P2SVpnGateway"
          },
          "description": "List of P2SVpnGateways."
        },
        "nextLink": {
          "type": "string",
          "description": "URL to get the next set of operation list results if there are any."
        }
      }
    },
    "P2SVpnProfileParameters": {
      "properties": {
        "authenticationMethod": {
          "$ref": "./network.json#/definitions/AuthenticationMethod",
          "description": "VPN client authentication method."
        }
      },
      "description": "Vpn Client Parameters for package generation."
    },
    "VpnProfileResponse": {
      "properties": {
        "profileUrl": {
          "type": "string",
          "description": "URL to the VPN profile."
        }
      },
      "description": "Vpn Profile Response for package generation."
    },
    "VpnLinkBgpSettings": {
      "properties": {
        "asn": {
          "type": "integer",
          "format": "int64",
          "description": "The BGP speaker's ASN."
        },
        "bgpPeeringAddress": {
          "type": "string",
          "description": "The BGP peering address and BGP identifier of this BGP speaker."
        }
      },
      "description": "BGP settings details for a link."
    },
    "VpnLinkProviderProperties": {
      "properties": {
        "linkProviderName": {
          "type": "string",
          "description": "Name of the link provider."
        },
        "linkSpeedInMbps": {
          "type": "integer",
          "format": "int32",
          "description": "Link speed."
        }
      },
      "description": "List of properties of a link provider."
    },
    "VpnServerConfigurationsResponse": {
      "properties": {
        "vpnServerConfigurationResourceIds": {
          "type": "array",
          "items": {
            "type": "string",
            "description": "VpnServerConfiguration partial resource uri."
          },
          "description": "List of VpnServerConfigurations associated with VirtualWan."
        }
      },
      "description": "VpnServerConfigurations list associated with VirtualWan Response."
    },
    "VirtualWanVpnProfileParameters": {
      "properties": {
        "vpnServerConfigurationResourceId": {
          "type": "string",
          "description": "VpnServerConfiguration partial resource uri with which VirtualWan is associated to."
        },
        "authenticationMethod": {
          "$ref": "./network.json#/definitions/AuthenticationMethod",
          "description": "VPN client authentication method."
        }
      },
      "description": "Virtual Wan Vpn profile parameters Vpn profile generation."
    },
    "P2SVpnConnectionHealthRequest": {
      "properties": {
        "vpnUserNamesFilter": {
          "type": "array",
          "items": {
            "type": "string",
            "description": "P2S vpn user name."
          },
          "description": "The list of p2s vpn user names whose p2s vpn connection detailed health to retrieve for."
        },
        "outputBlobSasUrl": {
          "type": "string",
          "description": "The sas-url to download the P2S Vpn connection health detail."
        }
      },
      "description": "List of P2S Vpn connection health request."
    },
    "P2SVpnConnectionHealth": {
      "properties": {
        "sasUrl": {
          "type": "string",
          "description": "Returned sas url of the blob to which the p2s vpn connection detailed health will be written."
        }
      },
      "description": "P2S Vpn connection detailed health written to sas url."
    },
    "P2SConnectionConfigurationProperties": {
      "properties": {
        "vpnClientAddressPool": {
          "$ref": "./virtualNetwork.json#/definitions/AddressSpace",
          "description": "The reference to the address space resource which represents Address space for P2S VpnClient."
        },
        "routingConfiguration": {
          "$ref": "#/definitions/RoutingConfiguration",
          "description": "The Routing Configuration indicating the associated and propagated route tables on this connection."
        },
        "provisioningState": {
          "readOnly": true,
          "$ref": "./network.json#/definitions/ProvisioningState",
          "description": "The provisioning state of the P2SConnectionConfiguration resource."
        }
      },
      "description": "Parameters for P2SConnectionConfiguration."
    },
    "P2SConnectionConfiguration": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/P2SConnectionConfigurationProperties",
          "description": "Properties of the P2S connection configuration."
        },
        "name": {
          "type": "string",
          "description": "The name of the resource that is unique within a resource group. This name can be used to access the resource."
        },
        "etag": {
          "type": "string",
          "readOnly": true,
          "description": "A unique read-only string that changes whenever the resource is updated."
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/SubResource"
        }
      ],
      "description": "P2SConnectionConfiguration Resource."
    },
    "VirtualHubRouteTableV2Properties": {
      "properties": {
        "routes": {
          "type": "array",
          "description": "List of all routes.",
          "items": {
            "$ref": "#/definitions/VirtualHubRouteV2"
          }
        },
        "attachedConnections": {
          "type": "array",
          "description": "List of all connections attached to this route table v2.",
          "items": {
            "type": "string"
          }
        },
        "provisioningState": {
          "$ref": "./network.json#/definitions/ProvisioningState",
          "readOnly": true,
          "description": "The provisioning state of the virtual hub route table v2 resource."
        }
      },
      "description": "Parameters for VirtualHubRouteTableV2."
    },
    "VirtualHubRouteTableV2": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/VirtualHubRouteTableV2Properties",
          "description": "Properties of the virtual hub route table v2."
        },
        "name": {
          "type": "string",
          "description": "The name of the resource that is unique within a resource group. This name can be used to access the resource."
        },
        "etag": {
          "type": "string",
          "readOnly": true,
          "description": "A unique read-only string that changes whenever the resource is updated."
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/SubResource"
        }
      ],
      "description": "VirtualHubRouteTableV2 Resource."
    },
    "VirtualHubRouteV2": {
      "properties": {
        "destinationType": {
          "type": "string",
          "description": "The type of destinations."
        },
        "destinations": {
          "type": "array",
          "description": "List of all destinations.",
          "items": {
            "type": "string"
          }
        },
        "nextHopType": {
          "type": "string",
          "description": "The type of next hops."
        },
        "nextHops": {
          "type": "array",
          "description": "NextHops ip address.",
          "items": {
            "type": "string"
          }
        }
      },
      "description": "VirtualHubRouteTableV2 route."
    },
    "ListVirtualHubRouteTableV2sResult": {
      "description": "List of VirtualHubRouteTableV2s and a URL nextLink to get the next set of results.",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VirtualHubRouteTableV2"
          },
          "description": "List of VirtualHubRouteTableV2s."
        },
        "nextLink": {
          "type": "string",
          "description": "URL to get the next set of operation list results if there are any."
        }
      }
    },
    "P2SVpnConnectionRequest": {
      "description": "List of p2s vpn connections to be disconnected.",
      "properties": {
        "vpnConnectionIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of p2s vpn connection Ids."
        }
      }
    },
    "VirtualHubId": {
      "properties": {
        "id": {
          "type": "string",
          "description": "The resource URI for the Virtual Hub where the ExpressRoute gateway is or will be deployed. The Virtual Hub resource and the ExpressRoute gateway resource reside in the same subscription."
        }
      },
      "description": "Virtual Hub identifier."
    },
    "ExpressRouteCircuitPeeringId": {
      "properties": {
        "id": {
          "type": "string",
          "description": "The ID of the ExpressRoute circuit peering."
        }
      },
      "description": "ExpressRoute circuit peering identifier."
    },
    "ExpressRouteConnectionId": {
      "properties": {
        "id": {
          "type": "string",
          "readOnly": true,
          "description": "The ID of the ExpressRouteConnection."
        }
      },
      "description": "The ID of the ExpressRouteConnection."
    },
    "ExpressRouteGatewayProperties": {
      "required": [
        "virtualHub"
      ],
      "properties": {
        "autoScaleConfiguration": {
          "properties": {
            "bounds": {
              "properties": {
                "min": {
                  "type": "integer",
                  "description": "Minimum number of scale units deployed for ExpressRoute gateway."
                },
                "max": {
                  "type": "integer",
                  "description": "Maximum number of scale units deployed for ExpressRoute gateway."
                }
              },
              "description": "Minimum and maximum number of scale units to deploy."
            }
          },
          "description": "Configuration for auto scaling."
        },
        "expressRouteConnections": {
          "type": "array",
          "readOnly": true,
          "description": "List of ExpressRoute connections to the ExpressRoute gateway.",
          "items": {
            "$ref": "#/definitions/ExpressRouteConnection"
          }
        },
        "provisioningState": {
          "readOnly": true,
          "$ref": "./network.json#/definitions/ProvisioningState",
          "description": "The provisioning state of the express route gateway resource."
        },
        "virtualHub": {
          "$ref": "#/definitions/VirtualHubId",
          "description": "The Virtual Hub where the ExpressRoute gateway is or will be deployed."
        }
      },
      "description": "ExpressRoute gateway resource properties."
    },
    "ExpressRouteGateway": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ExpressRouteGatewayProperties",
          "description": "Properties of the express route gateway."
        },
        "etag": {
          "type": "string",
          "readOnly": true,
          "description": "A unique read-only string that changes whenever the resource is updated."
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/Resource"
        }
      ],
      "description": "ExpressRoute gateway resource."
    },
    "ExpressRouteGatewayList": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExpressRouteGateway"
          },
          "description": "List of ExpressRoute gateways."
        }
      },
      "description": "List of ExpressRoute gateways."
    },
    "ExpressRouteConnectionProperties": {
      "required": [
        "expressRouteCircuitPeering"
      ],
      "properties": {
        "provisioningState": {
          "readOnly": true,
          "$ref": "./network.json#/definitions/ProvisioningState",
          "description": "The provisioning state of the express route connection resource."
        },
        "expressRouteCircuitPeering": {
          "$ref": "#/definitions/ExpressRouteCircuitPeeringId",
          "description": "The ExpressRoute circuit peering."
        },
        "authorizationKey": {
          "type": "string",
          "description": "Authorization key to establish the connection."
        },
        "routingWeight": {
          "type": "integer",
          "description": "The routing weight associated to the connection."
        },
        "enableInternetSecurity": {
          "type": "boolean",
          "description": "Enable internet security."
        },
        "routingConfiguration": {
          "$ref": "#/definitions/RoutingConfiguration",
          "description": "The Routing Configuration indicating the associated and propagated route tables on this connection."
        }
      },
      "description": "Properties of the ExpressRouteConnection subresource."
    },
    "ExpressRouteConnection": {
      "required": [
        "name"
      ],
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ExpressRouteConnectionProperties",
          "description": "Properties of the express route connection."
        },
        "name": {
          "type": "string",
          "description": "The name of the resource."
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/SubResource"
        }
      ],
      "description": "ExpressRouteConnection resource."
    },
    "ExpressRouteConnectionList": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExpressRouteConnection"
          },
          "description": "The list of ExpressRoute connections."
        }
      },
      "description": "ExpressRouteConnection list."
    },
    "ListVirtualHubBgpConnectionResults": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BgpConnection"
          },
          "description": "The list of VirtualHubBgpConnections."
        },
        "nextLink": {
          "type": "string",
          "description": "URL to get the next set of results."
        }
      },
      "description": "VirtualHubBgpConnections list."
    },
    "ListVirtualHubIpConfigurationResults": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/HubIpConfiguration"
          },
          "description": "The list of VirtualHubIpConfigurations."
        },
        "nextLink": {
          "type": "string",
          "description": "URL to get the next set of results."
        }
      },
      "description": "VirtualHubIpConfigurations list."
    },
    "RoutingConfiguration": {
      "description": "Routing Configuration indicating the associated and propagated route tables for this connection.",
      "properties": {
        "associatedRouteTable": {
          "$ref": "./network.json#/definitions/SubResource",
          "description": "The resource id RouteTable associated with this RoutingConfiguration."
        },
        "propagatedRouteTables": {
          "$ref": "#/definitions/PropagatedRouteTable",
          "description": "The list of RouteTables to advertise the routes to."
        },
        "vnetRoutes": {
          "$ref": "#/definitions/VnetRoute",
          "description": "List of routes that control routing from VirtualHub into a virtual network connection."
        }
      }
    },
    "PropagatedRouteTable": {
      "description": "The list of RouteTables to advertise the routes to.",
      "properties": {
        "labels": {
          "type": "array",
          "description": "The list of labels.",
          "items": {
            "type": "string"
          }
        },
        "ids": {
          "type": "array",
          "description": "The list of resource ids of all the RouteTables.",
          "items": {
            "$ref": "./network.json#/definitions/SubResource"
          }
        }
      }
    },
    "VnetRoute": {
      "description": "List of routes that control routing from VirtualHub into a virtual network connection.",
      "properties": {
        "staticRoutes": {
          "type": "array",
          "description": "List of all Static Routes.",
          "items": {
            "$ref": "#/definitions/StaticRoute"
          }
        }
      }
    },
    "StaticRoute": {
      "description": "List of all Static Routes.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the StaticRoute that is unique within a VnetRoute."
        },
        "addressPrefixes": {
          "type": "array",
          "description": "List of all address prefixes.",
          "items": {
            "type": "string"
          }
        },
        "nextHopIpAddress": {
          "type": "string",
          "description": "The ip address of the next hop."
        }
      }
    }
  }
}
