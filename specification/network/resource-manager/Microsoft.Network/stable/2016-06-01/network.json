{
  "swagger": "2.0",
  "info": {
    "title": "NetworkManagementClient",
    "description": "The Microsoft Azure Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Microsoft Azure Networks service.",
    "version": "2016-06-01"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json",
    "text/json"
  ],
  "produces": [
    "application/json",
    "text/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Azure Active Directory OAuth2 Flow",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "paths": {
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/applicationGateways/{applicationGatewayName}": {
      "delete": {
        "tags": [
          "ApplicationGateways"
        ],
        "operationId": "ApplicationGateways_Delete",
        "description": "The delete ApplicationGateway operation deletes the specified application gateway.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "applicationGatewayName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the application gateway."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "202": {
            "description": ""
          },
          "204": {
            "description": ""
          },
          "200": {
            "description": ""
          }
        },
        "x-ms-long-running-operation": true
      },
      "get": {
        "tags": [
          "ApplicationGateways"
        ],
        "operationId": "ApplicationGateways_Get",
        "description": "The Get ApplicationGateway operation retrieves information about the specified application gateway.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "applicationGatewayName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the application gateway."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ApplicationGateway"
            }
          }
        }
      },
      "put": {
        "tags": [
          "ApplicationGateways"
        ],
        "operationId": "ApplicationGateways_CreateOrUpdate",
        "description": "The Put ApplicationGateway operation creates/updates a ApplicationGateway",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "applicationGatewayName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the ApplicationGateway."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ApplicationGateway"
            },
            "description": "Parameters supplied to the create/delete ApplicationGateway operation"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ApplicationGateway"
            }
          },
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ApplicationGateway"
            }
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/applicationGateways": {
      "get": {
        "tags": [
          "ApplicationGateways"
        ],
        "operationId": "ApplicationGateways_List",
        "description": "The List ApplicationGateway operation retrieves all the application gateways in a resource group.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ApplicationGatewayListResult"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Network/applicationGateways": {
      "get": {
        "tags": [
          "ApplicationGateways"
        ],
        "operationId": "ApplicationGateways_ListAll",
        "description": "The List ApplicationGateway operation retrieves all the application gateways in a subscription.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ApplicationGatewayListResult"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/applicationGateways/{applicationGatewayName}/start": {
      "post": {
        "tags": [
          "ApplicationGateways"
        ],
        "operationId": "ApplicationGateways_Start",
        "description": "The Start ApplicationGateway operation starts application gateway in the specified resource group through Network resource provider.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "applicationGatewayName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the application gateway."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "202": {
            "description": ""
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/applicationGateways/{applicationGatewayName}/stop": {
      "post": {
        "tags": [
          "ApplicationGateways"
        ],
        "operationId": "ApplicationGateways_Stop",
        "description": "The STOP ApplicationGateway operation stops application gateway in the specified resource group through Network resource provider.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "applicationGatewayName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the application gateway."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "202": {
            "description": ""
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}/authorizations/{authorizationName}": {
      "delete": {
        "tags": [
          "ExpressRouteCircuitAuthorizations"
        ],
        "operationId": "ExpressRouteCircuitAuthorizations_Delete",
        "description": "The delete authorization operation deletes the specified authorization from the specified ExpressRouteCircuit.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "circuitName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the express route circuit."
          },
          {
            "name": "authorizationName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the authorization."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "202": {
            "description": ""
          },
          "200": {
            "description": ""
          },
          "204": {
            "description": ""
          }
        },
        "x-ms-long-running-operation": true
      },
      "get": {
        "tags": [
          "ExpressRouteCircuitAuthorizations"
        ],
        "operationId": "ExpressRouteCircuitAuthorizations_Get",
        "description": "The GET authorization operation retrieves the specified authorization from the specified ExpressRouteCircuit.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "circuitName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the express route circuit."
          },
          {
            "name": "authorizationName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the authorization."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ExpressRouteCircuitAuthorization"
            }
          }
        }
      },
      "put": {
        "tags": [
          "ExpressRouteCircuitAuthorizations"
        ],
        "operationId": "ExpressRouteCircuitAuthorizations_CreateOrUpdate",
        "description": "The Put Authorization operation creates/updates an authorization in the specified ExpressRouteCircuits",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "circuitName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the express route circuit."
          },
          {
            "name": "authorizationName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the authorization."
          },
          {
            "name": "authorizationParameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ExpressRouteCircuitAuthorization"
            },
            "description": "Parameters supplied to the create/update ExpressRouteCircuitAuthorization operation"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ExpressRouteCircuitAuthorization"
            }
          },
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ExpressRouteCircuitAuthorization"
            }
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}/authorizations": {
      "get": {
        "tags": [
          "ExpressRouteCircuitAuthorizations"
        ],
        "operationId": "ExpressRouteCircuitAuthorizations_List",
        "description": "The List authorization operation retrieves all the authorizations in an ExpressRouteCircuit.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "circuitName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the circuit."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/AuthorizationListResult"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}/peerings/{peeringName}": {
      "delete": {
        "tags": [
          "ExpressRouteCircuitPeerings"
        ],
        "operationId": "ExpressRouteCircuitPeerings_Delete",
        "description": "The delete peering operation deletes the specified peering from the ExpressRouteCircuit.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "circuitName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the express route circuit."
          },
          {
            "name": "peeringName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the peering."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "202": {
            "description": ""
          },
          "204": {
            "description": ""
          }
        },
        "x-ms-long-running-operation": true
      },
      "get": {
        "tags": [
          "ExpressRouteCircuitPeerings"
        ],
        "operationId": "ExpressRouteCircuitPeerings_Get",
        "description": "The GET peering operation retrieves the specified authorization from the ExpressRouteCircuit.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "circuitName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the express route circuit."
          },
          {
            "name": "peeringName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the peering."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ExpressRouteCircuitPeering"
            }
          }
        }
      },
      "put": {
        "tags": [
          "ExpressRouteCircuitPeerings"
        ],
        "operationId": "ExpressRouteCircuitPeerings_CreateOrUpdate",
        "description": "The Put Peering operation creates/updates an peering in the specified ExpressRouteCircuits",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "circuitName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the express route circuit."
          },
          {
            "name": "peeringName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the peering."
          },
          {
            "name": "peeringParameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ExpressRouteCircuitPeering"
            },
            "description": "Parameters supplied to the create/update ExpressRouteCircuit Peering operation"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ExpressRouteCircuitPeering"
            }
          },
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ExpressRouteCircuitPeering"
            }
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}/peerings": {
      "get": {
        "tags": [
          "ExpressRouteCircuitPeerings"
        ],
        "operationId": "ExpressRouteCircuitPeerings_List",
        "description": "The List peering operation retrieves all the peerings in an ExpressRouteCircuit.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "circuitName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the circuit."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ExpressRouteCircuitPeeringListResult"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}": {
      "delete": {
        "tags": [
          "ExpressRouteCircuits"
        ],
        "operationId": "ExpressRouteCircuits_Delete",
        "description": "The delete ExpressRouteCircuit operation deletes the specified ExpressRouteCircuit.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "circuitName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the express route Circuit."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "202": {
            "description": ""
          },
          "200": {
            "description": ""
          }
        },
        "x-ms-long-running-operation": true
      },
      "get": {
        "tags": [
          "ExpressRouteCircuits"
        ],
        "operationId": "ExpressRouteCircuits_Get",
        "description": "The Get ExpressRouteCircuit operation retrieves information about the specified ExpressRouteCircuit.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "circuitName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the circuit."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ExpressRouteCircuit"
            }
          }
        }
      },
      "put": {
        "tags": [
          "ExpressRouteCircuits"
        ],
        "operationId": "ExpressRouteCircuits_CreateOrUpdate",
        "description": "The Put ExpressRouteCircuit operation creates/updates a ExpressRouteCircuit",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "circuitName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the circuit."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ExpressRouteCircuit"
            },
            "description": "Parameters supplied to the create/delete ExpressRouteCircuit operation"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ExpressRouteCircuit"
            }
          },
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ExpressRouteCircuit"
            }
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}/peerings/{peeringName}/arpTables/{devicePath}": {
      "post": {
        "tags": [
          "ExpressRouteCircuitArpTable"
        ],
        "operationId": "ExpressRouteCircuits_ListArpTable",
        "description": "The ListArpTable from ExpressRouteCircuit operation retrieves the currently advertised arp table associated with the ExpressRouteCircuits in a resource group.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "circuitName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the circuit."
          },
          {
            "name": "peeringName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the peering."
          },
          {
            "name": "devicePath",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The path of the device."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ExpressRouteCircuitsArpTableListResult"
            }
          },
          "202": {
            "description": ""
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}/peerings/{peeringName}/routeTables/{devicePath}": {
      "post": {
        "tags": [
          "ExpressRouteCircuitRoutesTable"
        ],
        "operationId": "ExpressRouteCircuits_ListRoutesTable",
        "description": "The ListRoutesTable from ExpressRouteCircuit operation retrieves the currently advertised routes table associated with the ExpressRouteCircuits in a resource group.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "circuitName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the circuit."
          },
          {
            "name": "peeringName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the peering."
          },
          {
            "name": "devicePath",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The path of the device."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ExpressRouteCircuitsRoutesTableListResult"
            }
          },
          "202": {
            "description": ""
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}/peerings/{peeringName}/routeTablesSummary/{devicePath}": {
      "post": {
        "tags": [
          "ExpressRouteCircuitRoutesTableSummary"
        ],
        "operationId": "ExpressRouteCircuits_ListRoutesTableSummary",
        "description": "The ListRoutesTable from ExpressRouteCircuit operation retrieves the currently advertised routes table associated with the ExpressRouteCircuits in a resource group.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "circuitName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the circuit."
          },
          {
            "name": "peeringName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the peering."
          },
          {
            "name": "devicePath",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The path of the device."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ExpressRouteCircuitsRoutesTableSummaryListResult"
            }
          },
          "202": {
            "description": ""
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}/stats": {
      "get": {
        "tags": [
          "ExpressRouteCircuitStats"
        ],
        "operationId": "ExpressRouteCircuits_GetStats",
        "description": "The List stats ExpressRouteCircuit operation retrieves all the stats from a ExpressRouteCircuits in a resource group.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "circuitName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the circuit."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ExpressRouteCircuitStats"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}/peerings/{peeringName}/stats": {
      "get": {
        "tags": [
          "ExpressRouteCircuitStats"
        ],
        "operationId": "ExpressRouteCircuits_GetPeeringStats",
        "description": "The List stats ExpressRouteCircuit operation retrieves all the stats from a ExpressRouteCircuits in a resource group.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "circuitName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the circuit."
          },
          {
            "name": "peeringName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the peering."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ExpressRouteCircuitStats"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits": {
      "get": {
        "tags": [
          "ExpressRouteCircuits"
        ],
        "operationId": "ExpressRouteCircuits_List",
        "description": "The List ExpressRouteCircuit operation retrieves all the ExpressRouteCircuits in a resource group.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ExpressRouteCircuitListResult"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Network/expressRouteCircuits": {
      "get": {
        "tags": [
          "ExpressRouteCircuits"
        ],
        "operationId": "ExpressRouteCircuits_ListAll",
        "description": "The List ExpressRouteCircuit operation retrieves all the ExpressRouteCircuits in a subscription.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ExpressRouteCircuitListResult"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Network/expressRouteServiceProviders": {
      "get": {
        "tags": [
          "ExpressRouteServiceProviders"
        ],
        "operationId": "ExpressRouteServiceProviders_List",
        "description": "The List ExpressRouteServiceProvider operation retrieves all the available ExpressRouteServiceProviders.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ExpressRouteServiceProviderListResult"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/loadBalancers/{loadBalancerName}": {
      "delete": {
        "tags": [
          "LoadBalancers"
        ],
        "operationId": "LoadBalancers_Delete",
        "description": "The delete LoadBalancer operation deletes the specified load balancer.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "loadBalancerName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the loadBalancer."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "202": {
            "description": ""
          },
          "200": {
            "description": ""
          }
        },
        "x-ms-long-running-operation": true
      },
      "get": {
        "tags": [
          "LoadBalancers"
        ],
        "operationId": "LoadBalancers_Get",
        "description": "The Get LoadBalancer operation retrieves information about the specified LoadBalancer.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "loadBalancerName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the loadBalancer."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "$expand",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "expand references resources."
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/LoadBalancer"
            }
          }
        }
      },
      "put": {
        "tags": [
          "LoadBalancers"
        ],
        "operationId": "LoadBalancers_CreateOrUpdate",
        "description": "The Put LoadBalancer operation creates/updates a LoadBalancer",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "loadBalancerName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the loadBalancer."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LoadBalancer"
            },
            "description": "Parameters supplied to the create/delete LoadBalancer operation"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/LoadBalancer"
            }
          },
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/LoadBalancer"
            }
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Network/loadBalancers": {
      "get": {
        "tags": [
          "LoadBalancers"
        ],
        "operationId": "LoadBalancers_ListAll",
        "description": "The List loadBalancer operation retrieves all the load balancers in a subscription.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/LoadBalancerListResult"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/loadBalancers": {
      "get": {
        "tags": [
          "LoadBalancers"
        ],
        "operationId": "LoadBalancers_List",
        "description": "The List loadBalancer operation retrieves all the load balancers in a resource group.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/LoadBalancerListResult"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/localNetworkGateways/{localNetworkGatewayName}": {
      "put": {
        "tags": [
          "LocalNetworkGateways"
        ],
        "operationId": "LocalNetworkGateways_CreateOrUpdate",
        "description": "The Put LocalNetworkGateway operation creates/updates a local network gateway in the specified resource group through Network resource provider.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "localNetworkGatewayName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the local network gateway."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LocalNetworkGateway"
            },
            "description": "Parameters supplied to the Begin Create or update Local Network Gateway operation through Network resource provider."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/LocalNetworkGateway"
            }
          },
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/LocalNetworkGateway"
            }
          }
        },
        "x-ms-long-running-operation": true
      },
      "get": {
        "tags": [
          "LocalNetworkGateways"
        ],
        "operationId": "LocalNetworkGateways_Get",
        "description": "The Get LocalNetworkGateway operation retrieves information about the specified local network gateway through Network resource provider.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "localNetworkGatewayName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the local network gateway."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/LocalNetworkGateway"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "LocalNetworkGateways"
        ],
        "operationId": "LocalNetworkGateways_Delete",
        "description": "The Delete LocalNetworkGateway operation deletes the specified local network Gateway through Network resource provider.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "localNetworkGatewayName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the local network gateway."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "200": {
            "description": ""
          },
          "202": {
            "description": ""
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/localNetworkGateways": {
      "get": {
        "tags": [
          "LocalNetworkGateways"
        ],
        "operationId": "LocalNetworkGateways_List",
        "description": "The List LocalNetworkGateways operation retrieves all the local network gateways stored.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/LocalNetworkGatewayListResult"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkInterfaces/{networkInterfaceName}": {
      "delete": {
        "tags": [
          "NetworkInterfaces"
        ],
        "operationId": "NetworkInterfaces_Delete",
        "description": "The delete netwokInterface operation deletes the specified netwokInterface.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "networkInterfaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the network interface."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "202": {
            "description": ""
          },
          "200": {
            "description": ""
          }
        },
        "x-ms-long-running-operation": true
      },
      "get": {
        "tags": [
          "NetworkInterfaces"
        ],
        "operationId": "NetworkInterfaces_Get",
        "description": "The Get network interface operation retrieves information about the specified network interface.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "networkInterfaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the network interface."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "$expand",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "expand references resources."
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/NetworkInterface"
            }
          }
        }
      },
      "put": {
        "tags": [
          "NetworkInterfaces"
        ],
        "operationId": "NetworkInterfaces_CreateOrUpdate",
        "description": "The Put NetworkInterface operation creates/updates a networkInterface",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "networkInterfaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the network interface."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NetworkInterface"
            },
            "description": "Parameters supplied to the create/update NetworkInterface operation"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/NetworkInterface"
            }
          },
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/NetworkInterface"
            }
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.Compute/virtualMachineScaleSets/{virtualMachineScaleSetName}/virtualMachines/{virtualmachineIndex}/networkInterfaces": {
      "get": {
        "tags": [
          "NetworkInterfaces"
        ],
        "operationId": "NetworkInterfaces_ListVirtualMachineScaleSetVMNetworkInterfaces",
        "description": "The list network interface operation retrieves information about all network interfaces in a virtual machine from a virtual machine scale set.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "virtualMachineScaleSetName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the virtual machine scale set."
          },
          {
            "name": "virtualmachineIndex",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The virtual machine index."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/NetworkInterfaceListResult"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.Compute/virtualMachineScaleSets/{virtualMachineScaleSetName}/networkInterfaces": {
      "get": {
        "tags": [
          "NetworkInterfaces"
        ],
        "operationId": "NetworkInterfaces_ListVirtualMachineScaleSetNetworkInterfaces",
        "description": "The list network interface operation retrieves information about all network interfaces in a virtual machine scale set.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "virtualMachineScaleSetName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the virtual machine scale set."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/NetworkInterfaceListResult"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.Compute/virtualMachineScaleSets/{virtualMachineScaleSetName}/virtualMachines/{virtualmachineIndex}/networkInterfaces/{networkInterfaceName}": {
      "get": {
        "tags": [
          "NetworkInterfaces"
        ],
        "operationId": "NetworkInterfaces_GetVirtualMachineScaleSetNetworkInterface",
        "description": "The Get network interface operation retrieves information about the specified network interface in a virtual machine scale set.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "virtualMachineScaleSetName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the virtual machine scale set."
          },
          {
            "name": "virtualmachineIndex",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The virtual machine index."
          },
          {
            "name": "networkInterfaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the network interface."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "$expand",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "expand references resources."
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/NetworkInterface"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Network/networkInterfaces": {
      "get": {
        "tags": [
          "NetworkInterfaces"
        ],
        "operationId": "NetworkInterfaces_ListAll",
        "description": "The List networkInterfaces operation retrieves all the networkInterfaces in a subscription.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/NetworkInterfaceListResult"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkInterfaces": {
      "get": {
        "tags": [
          "NetworkInterfaces"
        ],
        "operationId": "NetworkInterfaces_List",
        "description": "The List networkInterfaces operation retrieves all the networkInterfaces in a resource group.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/NetworkInterfaceListResult"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkInterfaces/{networkInterfaceName}/effectiveRouteTable": {
      "post": {
        "tags": [
          "NetworkInterfaces"
        ],
        "operationId": "NetworkInterfaces_GetEffectiveRouteTable",
        "description": "The get effective routetable operation retrieves all the route tables applied on a networkInterface.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "networkInterfaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the network interface."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/EffectiveRouteListResult"
            }
          },
          "202": {
            "description": ""
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkInterfaces/{networkInterfaceName}/effectiveNetworkSecurityGroups": {
      "post": {
        "tags": [
          "NetworkInterfaces"
        ],
        "operationId": "NetworkInterfaces_ListEffectiveNetworkSecurityGroups",
        "description": "The list effective network security group operation retrieves all the network security groups applied on a networkInterface.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "networkInterfaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the network interface."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/EffectiveNetworkSecurityGroupListResult"
            }
          },
          "202": {
            "description": ""
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkSecurityGroups/{networkSecurityGroupName}": {
      "delete": {
        "tags": [
          "NetworkSecurityGroups"
        ],
        "operationId": "NetworkSecurityGroups_Delete",
        "description": "The Delete NetworkSecurityGroup operation deletes the specified network security group",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "networkSecurityGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the network security group."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "202": {
            "description": ""
          },
          "200": {
            "description": ""
          },
          "204": {
            "description": ""
          }
        },
        "x-ms-long-running-operation": true
      },
      "get": {
        "tags": [
          "NetworkSecurityGroups"
        ],
        "operationId": "NetworkSecurityGroups_Get",
        "description": "The Get NetworkSecurityGroups operation retrieves information about the specified network security group.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "networkSecurityGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the network security group."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "$expand",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "expand references resources."
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/NetworkSecurityGroup"
            }
          }
        }
      },
      "put": {
        "tags": [
          "NetworkSecurityGroups"
        ],
        "operationId": "NetworkSecurityGroups_CreateOrUpdate",
        "description": "The Put NetworkSecurityGroup operation creates/updates a network security group in the specified resource group.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "networkSecurityGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the network security group."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NetworkSecurityGroup"
            },
            "description": "Parameters supplied to the create/update Network Security Group operation"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/NetworkSecurityGroup"
            }
          },
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/NetworkSecurityGroup"
            }
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Network/networkSecurityGroups": {
      "get": {
        "tags": [
          "NetworkSecurityGroups"
        ],
        "operationId": "NetworkSecurityGroups_ListAll",
        "description": "The list NetworkSecurityGroups returns all network security groups in a subscription",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/NetworkSecurityGroupListResult"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkSecurityGroups": {
      "get": {
        "tags": [
          "NetworkSecurityGroups"
        ],
        "operationId": "NetworkSecurityGroups_List",
        "description": "The list NetworkSecurityGroups returns all network security groups in a resource group",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/NetworkSecurityGroupListResult"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/publicIPAddresses/{publicIpAddressName}": {
      "delete": {
        "tags": [
          "PublicIPAddresses"
        ],
        "operationId": "PublicIPAddresses_Delete",
        "description": "The delete publicIpAddress operation deletes the specified publicIpAddress.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "publicIpAddressName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the subnet."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "202": {
            "description": ""
          },
          "200": {
            "description": ""
          }
        },
        "x-ms-long-running-operation": true
      },
      "get": {
        "tags": [
          "PublicIPAddresses"
        ],
        "operationId": "PublicIPAddresses_Get",
        "description": "The Get publicIpAddress operation retrieves information about the specified pubicIpAddress",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "publicIpAddressName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the subnet."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "$expand",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "expand references resources."
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/PublicIPAddress"
            }
          }
        }
      },
      "put": {
        "tags": [
          "PublicIPAddresses"
        ],
        "operationId": "PublicIPAddresses_CreateOrUpdate",
        "description": "The Put PublicIPAddress operation creates/updates a stable/dynamic PublicIP address",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "publicIpAddressName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the publicIpAddress."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PublicIPAddress"
            },
            "description": "Parameters supplied to the create/update PublicIPAddress operation"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/PublicIPAddress"
            }
          },
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/PublicIPAddress"
            }
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Network/publicIPAddresses": {
      "get": {
        "tags": [
          "PublicIPAddresses"
        ],
        "operationId": "PublicIPAddresses_ListAll",
        "description": "The List publicIpAddress operation retrieves all the publicIpAddresses in a subscription.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/PublicIPAddressListResult"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/publicIPAddresses": {
      "get": {
        "tags": [
          "PublicIPAddresses"
        ],
        "operationId": "PublicIPAddresses_List",
        "description": "The List publicIpAddress operation retrieves all the publicIpAddresses in a resource group.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/PublicIPAddressListResult"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeTables/{routeTableName}": {
      "delete": {
        "tags": [
          "RouteTables"
        ],
        "operationId": "RouteTables_Delete",
        "description": "The Delete RouteTable operation deletes the specified Route Table",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "routeTableName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the route table."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "200": {
            "description": ""
          },
          "202": {
            "description": ""
          }
        },
        "x-ms-long-running-operation": true
      },
      "get": {
        "tags": [
          "RouteTables"
        ],
        "operationId": "RouteTables_Get",
        "description": "The Get RouteTables operation retrieves information about the specified route table.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "routeTableName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the route table."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "$expand",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "expand references resources."
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/RouteTable"
            }
          }
        }
      },
      "put": {
        "tags": [
          "RouteTables"
        ],
        "operationId": "RouteTables_CreateOrUpdate",
        "description": "The Put RouteTable operation creates/updates a route table in the specified resource group.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "routeTableName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the route table."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RouteTable"
            },
            "description": "Parameters supplied to the create/update Route Table operation"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/RouteTable"
            }
          },
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/RouteTable"
            }
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeTables": {
      "get": {
        "tags": [
          "RouteTables"
        ],
        "operationId": "RouteTables_List",
        "description": "The list RouteTables returns all route tables in a resource group",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/RouteTableListResult"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Network/routeTables": {
      "get": {
        "tags": [
          "RouteTables"
        ],
        "operationId": "RouteTables_ListAll",
        "description": "The list RouteTables returns all route tables in a subscription",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/RouteTableListResult"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeTables/{routeTableName}/routes/{routeName}": {
      "delete": {
        "tags": [
          "Routes"
        ],
        "operationId": "Routes_Delete",
        "description": "The delete route operation deletes the specified route from a route table.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "routeTableName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the route table."
          },
          {
            "name": "routeName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the route."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "202": {
            "description": ""
          },
          "200": {
            "description": ""
          },
          "204": {
            "description": ""
          }
        },
        "x-ms-long-running-operation": true
      },
      "get": {
        "tags": [
          "Routes"
        ],
        "operationId": "Routes_Get",
        "description": "The Get route operation retrieves information about the specified route from the route table.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "routeTableName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the route table."
          },
          {
            "name": "routeName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the route."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Route"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Routes"
        ],
        "operationId": "Routes_CreateOrUpdate",
        "description": "The Put route operation creates/updates a route in the specified route table",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "routeTableName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the route table."
          },
          {
            "name": "routeName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the route."
          },
          {
            "name": "routeParameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Route"
            },
            "description": "Parameters supplied to the create/update route operation"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Route"
            }
          },
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Route"
            }
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeTables/{routeTableName}/routes": {
      "get": {
        "tags": [
          "Routes"
        ],
        "operationId": "Routes_List",
        "description": "The List network security rule operation retrieves all the routes in a route table.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "routeTableName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the route table."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/RouteListResult"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkSecurityGroups/{networkSecurityGroupName}/securityRules/{securityRuleName}": {
      "delete": {
        "tags": [
          "SecurityRules"
        ],
        "operationId": "SecurityRules_Delete",
        "description": "The delete network security rule operation deletes the specified network security rule.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "networkSecurityGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the network security group."
          },
          {
            "name": "securityRuleName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the security rule."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "202": {
            "description": ""
          },
          "200": {
            "description": ""
          }
        },
        "x-ms-long-running-operation": true
      },
      "get": {
        "tags": [
          "SecurityRules"
        ],
        "operationId": "SecurityRules_Get",
        "description": "The Get NetworkSecurityRule operation retrieves information about the specified network security rule.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "networkSecurityGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the network security group."
          },
          {
            "name": "securityRuleName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the security rule."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SecurityRule"
            }
          }
        }
      },
      "put": {
        "tags": [
          "SecurityRules"
        ],
        "operationId": "SecurityRules_CreateOrUpdate",
        "description": "The Put network security rule operation creates/updates a security rule in the specified network security group",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "networkSecurityGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the network security group."
          },
          {
            "name": "securityRuleName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the security rule."
          },
          {
            "name": "securityRuleParameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SecurityRule"
            },
            "description": "Parameters supplied to the create/update network security rule operation"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SecurityRule"
            }
          },
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SecurityRule"
            }
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkSecurityGroups/{networkSecurityGroupName}/securityRules": {
      "get": {
        "tags": [
          "SecurityRules"
        ],
        "operationId": "SecurityRules_List",
        "description": "The List network security rule operation retrieves all the security rules in a network security group.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "networkSecurityGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the network security group."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SecurityRuleListResult"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/subnets/{subnetName}": {
      "delete": {
        "tags": [
          "Subnets"
        ],
        "operationId": "Subnets_Delete",
        "description": "The delete subnet operation deletes the specified subnet.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "virtualNetworkName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the virtual network."
          },
          {
            "name": "subnetName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the subnet."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "204": {
            "description": ""
          },
          "202": {
            "description": ""
          }
        },
        "x-ms-long-running-operation": true
      },
      "get": {
        "tags": [
          "Subnets"
        ],
        "operationId": "Subnets_Get",
        "description": "The Get subnet operation retrieves information about the specified subnet.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "virtualNetworkName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the virtual network."
          },
          {
            "name": "subnetName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the subnet."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "$expand",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "expand references resources."
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Subnet"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Subnets"
        ],
        "operationId": "Subnets_CreateOrUpdate",
        "description": "The Put Subnet operation creates/updates a subnet in the specified virtual network",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "virtualNetworkName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the virtual network."
          },
          {
            "name": "subnetName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the subnet."
          },
          {
            "name": "subnetParameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Subnet"
            },
            "description": "Parameters supplied to the create/update Subnet operation"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Subnet"
            }
          },
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Subnet"
            }
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/subnets": {
      "get": {
        "tags": [
          "Subnets"
        ],
        "operationId": "Subnets_List",
        "description": "The List subnets operation retrieves all the subnets in a virtual network.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "virtualNetworkName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the virtual network."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SubnetListResult"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/virtualNetworkPeerings/{virtualNetworkPeeringName}": {
      "delete": {
        "tags": [
          "VirtualNetworkPeerings"
        ],
        "operationId": "VirtualNetworkPeerings_Delete",
        "description": "The delete virtual network peering operation deletes the specified peering.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "virtualNetworkName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the virtual network."
          },
          {
            "name": "virtualNetworkPeeringName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the virtual network peering."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "204": {
            "description": ""
          },
          "202": {
            "description": ""
          }
        },
        "x-ms-long-running-operation": true
      },
      "get": {
        "tags": [
          "VirtualNetworkPeerings"
        ],
        "operationId": "VirtualNetworkPeerings_Get",
        "description": "The Get virtual network peering operation retrieves information about the specified virtual network peering.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "virtualNetworkName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the virtual network."
          },
          {
            "name": "virtualNetworkPeeringName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the virtual network peering."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/VirtualNetworkPeering"
            }
          }
        }
      },
      "put": {
        "tags": [
          "VirtualNetworkPeerings"
        ],
        "operationId": "VirtualNetworkPeerings_CreateOrUpdate",
        "description": "The Put virtual network peering operation creates/updates a peering in the specified virtual network",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "virtualNetworkName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the virtual network."
          },
          {
            "name": "virtualNetworkPeeringName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the peering."
          },
          {
            "name": "VirtualNetworkPeeringParameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VirtualNetworkPeering"
            },
            "description": "Parameters supplied to the create/update virtual network peering operation"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/VirtualNetworkPeering"
            }
          },
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/VirtualNetworkPeering"
            }
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/virtualNetworkPeerings": {
      "get": {
        "tags": [
          "VirtualNetworkPeerings"
        ],
        "operationId": "VirtualNetworkPeerings_List",
        "description": "The List virtual network peerings operation retrieves all the peerings in a virtual network.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "virtualNetworkName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the virtual network."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/VirtualNetworkPeeringListResult"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Network/locations/{location}/usages": {
      "get": {
        "tags": [
          "Usages"
        ],
        "operationId": "Usages_List",
        "description": "Lists compute usages for a subscription.",
        "parameters": [
          {
            "name": "location",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The location upon which resource usage is queried.",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/UsagesListResult"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/connections/{virtualNetworkGatewayConnectionName}": {
      "put": {
        "tags": [
          "VirtualNetworkGatewayConnections"
        ],
        "operationId": "VirtualNetworkGatewayConnections_CreateOrUpdate",
        "description": "The Put VirtualNetworkGatewayConnection operation creates/updates a virtual network gateway connection in the specified resource group through Network resource provider.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "virtualNetworkGatewayConnectionName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the virtual network gateway connection."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VirtualNetworkGatewayConnection"
            },
            "description": "Parameters supplied to the Begin Create or update Virtual Network Gateway connection operation through Network resource provider."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/VirtualNetworkGatewayConnection"
            }
          },
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/VirtualNetworkGatewayConnection"
            }
          }
        },
        "x-ms-long-running-operation": true
      },
      "get": {
        "tags": [
          "VirtualNetworkGatewayConnections"
        ],
        "operationId": "VirtualNetworkGatewayConnections_Get",
        "description": "The Get VirtualNetworkGatewayConnection operation retrieves information about the specified virtual network gateway connection through Network resource provider.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "virtualNetworkGatewayConnectionName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the virtual network gateway connection."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/VirtualNetworkGatewayConnection"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "VirtualNetworkGatewayConnections"
        ],
        "operationId": "VirtualNetworkGatewayConnections_Delete",
        "description": "The Delete VirtualNetworkGatewayConnection operation deletes the specified virtual network Gateway connection through Network resource provider.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "virtualNetworkGatewayConnectionName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the virtual network gateway connection."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "202": {
            "description": ""
          },
          "204": {
            "description": ""
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/connections/{connectionSharedKeyName}/sharedkey": {
      "get": {
        "tags": [
          "VirtualNetworkGatewayConnections"
        ],
        "operationId": "VirtualNetworkGatewayConnections_GetSharedKey",
        "description": "The Get VirtualNetworkGatewayConnectionSharedKey operation retrieves information about the specified virtual network gateway connection shared key through Network resource provider.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "connectionSharedKeyName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The virtual network gateway connection shared key name."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ConnectionSharedKeyResult"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/connections": {
      "get": {
        "tags": [
          "VirtualNetworkGatewayConnections"
        ],
        "operationId": "VirtualNetworkGatewayConnections_List",
        "description": "The List VirtualNetworkGatewayConnections operation retrieves all the virtual network gateways connections created.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/VirtualNetworkGatewayConnectionListResult"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/connections/{virtualNetworkGatewayConnectionName}/sharedkey/reset": {
      "post": {
        "tags": [
          "VirtualNetworkGatewayConnections"
        ],
        "operationId": "VirtualNetworkGatewayConnections_ResetSharedKey",
        "description": "The VirtualNetworkGatewayConnectionResetSharedKey operation resets the virtual network gateway connection shared key for passed virtual network gateway connection in the specified resource group through Network resource provider.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "virtualNetworkGatewayConnectionName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The virtual network gateway connection reset shared key Name."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ConnectionResetSharedKey"
            },
            "description": "Parameters supplied to the Begin Reset Virtual Network Gateway connection shared key operation through Network resource provider."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ConnectionResetSharedKey"
            }
          },
          "202": {
            "description": ""
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/connections/{virtualNetworkGatewayConnectionName}/sharedkey": {
      "put": {
        "tags": [
          "VirtualNetworkGatewayConnections"
        ],
        "operationId": "VirtualNetworkGatewayConnections_SetSharedKey",
        "description": "The Put VirtualNetworkGatewayConnectionSharedKey operation sets the virtual network gateway connection shared key for passed virtual network gateway connection in the specified resource group through Network resource provider.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "virtualNetworkGatewayConnectionName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The virtual network gateway connection name."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ConnectionSharedKey"
            },
            "description": "Parameters supplied to the Begin Set Virtual Network Gateway connection Shared key operation throughNetwork resource provider."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ConnectionSharedKey"
            }
          },
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ConnectionSharedKey"
            }
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}": {
      "put": {
        "tags": [
          "VirtualNetworkGateways"
        ],
        "operationId": "VirtualNetworkGateways_CreateOrUpdate",
        "description": "The Put VirtualNetworkGateway operation creates/updates a virtual network gateway in the specified resource group through Network resource provider.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "virtualNetworkGatewayName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the virtual network gateway."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VirtualNetworkGateway"
            },
            "description": "Parameters supplied to the Begin Create or update Virtual Network Gateway operation through Network resource provider."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/VirtualNetworkGateway"
            }
          },
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/VirtualNetworkGateway"
            }
          }
        },
        "x-ms-long-running-operation": true
      },
      "get": {
        "tags": [
          "VirtualNetworkGateways"
        ],
        "operationId": "VirtualNetworkGateways_Get",
        "description": "The Get VirtualNetworkGateway operation retrieves information about the specified virtual network gateway through Network resource provider.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "virtualNetworkGatewayName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the virtual network gateway."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/VirtualNetworkGateway"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "VirtualNetworkGateways"
        ],
        "operationId": "VirtualNetworkGateways_Delete",
        "description": "The Delete VirtualNetworkGateway operation deletes the specified virtual network Gateway through Network resource provider.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "virtualNetworkGatewayName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the virtual network gateway."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "202": {
            "description": ""
          },
          "200": {
            "description": ""
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways": {
      "get": {
        "tags": [
          "VirtualNetworkGateways"
        ],
        "operationId": "VirtualNetworkGateways_List",
        "description": "The List VirtualNetworkGateways operation retrieves all the virtual network gateways stored.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/VirtualNetworkGatewayListResult"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}/reset": {
      "post": {
        "tags": [
          "VirtualNetworkGateways"
        ],
        "operationId": "VirtualNetworkGateways_Reset",
        "description": "The Reset VirtualNetworkGateway operation resets the primary of the virtual network gateway in the specified resource group through Network resource provider.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "virtualNetworkGatewayName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the virtual network gateway."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VirtualNetworkGateway"
            },
            "description": "Parameters supplied to the Begin Reset Virtual Network Gateway operation through Network resource provider."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "202": {
            "description": ""
          },
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/VirtualNetworkGateway"
            }
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}/generatevpnclientpackage": {
      "post": {
        "tags": [
          "VirtualNetworkGateways"
        ],
        "operationId": "VirtualNetworkGateways_Generatevpnclientpackage",
        "description": "The Generatevpnclientpackage operation generates Vpn client package for P2S client of the virtual network gateway in the specified resource group through Network resource provider.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "virtualNetworkGatewayName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the virtual network gateway."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VpnClientParameters"
            },
            "description": "Parameters supplied to the Begin Generating  Virtual Network Gateway Vpn client package operation through Network resource provider."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Vpn client package url",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}": {
      "delete": {
        "tags": [
          "VirtualNetworks"
        ],
        "operationId": "VirtualNetworks_Delete",
        "description": "The Delete VirtualNetwork operation deletes the specified virtual network",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "virtualNetworkName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the virtual network."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "202": {
            "description": ""
          },
          "204": {
            "description": ""
          },
          "200": {
            "description": ""
          }
        },
        "x-ms-long-running-operation": true
      },
      "get": {
        "tags": [
          "VirtualNetworks"
        ],
        "operationId": "VirtualNetworks_Get",
        "description": "The Get VirtualNetwork operation retrieves information about the specified virtual network.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "virtualNetworkName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the virtual network."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "$expand",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "expand references resources."
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/VirtualNetwork"
            }
          }
        }
      },
      "put": {
        "tags": [
          "VirtualNetworks"
        ],
        "operationId": "VirtualNetworks_CreateOrUpdate",
        "description": "The Put VirtualNetwork operation creates/updates a virtual network in the specified resource group.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "virtualNetworkName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the virtual network."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VirtualNetwork"
            },
            "description": "Parameters supplied to the create/update Virtual Network operation"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/VirtualNetwork"
            }
          },
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/VirtualNetwork"
            }
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Network/virtualNetworks": {
      "get": {
        "tags": [
          "VirtualNetworks"
        ],
        "operationId": "VirtualNetworks_ListAll",
        "description": "The list VirtualNetwork returns all Virtual Networks in a subscription",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/VirtualNetworkListResult"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks": {
      "get": {
        "tags": [
          "VirtualNetworks"
        ],
        "operationId": "VirtualNetworks_List",
        "description": "The list VirtualNetwork returns all Virtual Networks in a resource group",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/VirtualNetworkListResult"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Network/locations/{location}/CheckDnsNameAvailability": {
      "get": {
        "operationId": "CheckDnsNameAvailability",
        "description": "Checks whether a domain name in the cloudapp.net zone is available for use.",
        "parameters": [
          {
            "name": "location",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The location of the domain name"
          },
          {
            "name": "domainNameLabel",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The domain name to be verified. It must conform to the following regular expression: ^[a-z][a-z0-9-]{1,61}[a-z0-9]$."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/DnsNameAvailabilityResult"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/CheckIPAddressAvailability": {
      "get": {
        "operationId": "VirtualNetworks_CheckIPAddressAvailability",
        "description": "Checks whether a private Ip address is available for use.",
        "parameters": [
          {
            "name": "ipAddress",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The private IP address to be verified."
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "virtualNetworkName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the virtual network."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "private IP address availability and list of other free addresses if the requested one is not available",
            "schema": {
              "$ref": "#/definitions/IPAddressAvailabilityResult"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "ApplicationGatewaySku": {
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of application gateway SKU",
          "enum": [
            "Standard_Small",
            "Standard_Medium",
            "Standard_Large"
          ],
          "x-ms-enum": {
            "name": "ApplicationGatewaySkuName",
            "modelAsString": true
          }
        },
        "tier": {
          "type": "string",
          "description": "Tier of application gateway",
          "enum": [
            "Standard"
          ],
          "x-ms-enum": {
            "name": "ApplicationGatewayTier",
            "modelAsString": true
          }
        },
        "capacity": {
          "type": "integer",
          "format": "int32",
          "description": "Capacity (instance count) of application gateway"
        }
      },
      "description": "SKU of application gateway"
    },
    "ApplicationGatewaySslPolicy": {
      "properties": {
        "disabledSslProtocols": {
          "type": "array",
          "description": "SSL protocols to be disabled on Application Gateway",
          "items": {
            "type": "string",
            "enum": [
              "TLSv1_0",
              "TLSv1_1",
              "TLSv1_2"
            ],
            "x-ms-enum": {
              "name": "ApplicationGatewaySslProtocol",
              "modelAsString": true
            }
          }
        }
      },
      "description": "Application gateway SSL policy"
    },
    "ApplicationGatewayIPConfigurationPropertiesFormat": {
      "properties": {
        "subnet": {
          "$ref": "#/definitions/SubResource",
          "description": "Reference of the subnet resource. A subnet from where application gateway gets its private address "
        },
        "provisioningState": {
          "type": "string",
          "description": "Provisioning state of the application gateway subnet resource Updating/Deleting/Failed"
        }
      },
      "description": "Properties of IP configuration of application gateway"
    },
    "ApplicationGatewayIPConfiguration": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ApplicationGatewayIPConfigurationPropertiesFormat"
        },
        "name": {
          "type": "string",
          "description": "Name of the resource that is unique within a resource group. This name can be used to access the resource"
        },
        "etag": {
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/SubResource"
        }
      ],
      "description": "IP configuration of application gateway"
    },
    "ApplicationGatewayAuthenticationCertificatePropertiesFormat": {
      "properties": {
        "data": {
          "type": "string",
          "description": "Certificate public data "
        },
        "provisioningState": {
          "type": "string",
          "description": "Provisioning state of the authentication certificate resource Updating/Deleting/Failed"
        }
      },
      "description": "Properties of Authentication certificates of application gateway"
    },
    "ApplicationGatewayAuthenticationCertificate": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ApplicationGatewayAuthenticationCertificatePropertiesFormat"
        },
        "name": {
          "type": "string",
          "description": "Name of the resource that is unique within a resource group. This name can be used to access the resource"
        },
        "etag": {
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/SubResource"
        }
      ],
      "description": "Authentication certificates of application gateway"
    },
    "ApplicationGatewaySslCertificatePropertiesFormat": {
      "properties": {
        "data": {
          "type": "string",
          "description": "SSL Certificate data "
        },
        "password": {
          "type": "string",
          "description": "SSL Certificate password "
        },
        "publicCertData": {
          "type": "string",
          "description": "SSL Certificate public data "
        },
        "provisioningState": {
          "type": "string",
          "description": "Provisioning state of the ssl certificate resource Updating/Deleting/Failed"
        }
      },
      "description": "Properties of SSL certificates of application gateway"
    },
    "ApplicationGatewaySslCertificate": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ApplicationGatewaySslCertificatePropertiesFormat"
        },
        "name": {
          "type": "string",
          "description": "Name of the resource that is unique within a resource group. This name can be used to access the resource"
        },
        "etag": {
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/SubResource"
        }
      ],
      "description": "SSL certificates of application gateway"
    },
    "ApplicationGatewayFrontendIPConfigurationPropertiesFormat": {
      "properties": {
        "privateIPAddress": {
          "type": "string",
          "description": "PrivateIPAddress of the Network Interface IP Configuration"
        },
        "privateIPAllocationMethod": {
          "type": "string",
          "description": "PrivateIP allocation method (Static/Dynamic)",
          "enum": [
            "Static",
            "Dynamic"
          ],
          "x-ms-enum": {
            "name": "IPAllocationMethod",
            "modelAsString": true
          }
        },
        "subnet": {
          "$ref": "#/definitions/SubResource",
          "description": "Reference of the subnet resource"
        },
        "publicIPAddress": {
          "$ref": "#/definitions/SubResource",
          "description": "Reference of the PublicIP resource"
        },
        "provisioningState": {
          "type": "string",
          "description": "Provisioning state of the PublicIP resource Updating/Deleting/Failed"
        }
      },
      "description": "Properties of Frontend IP configuration of application gateway"
    },
    "ApplicationGatewayFrontendIPConfiguration": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ApplicationGatewayFrontendIPConfigurationPropertiesFormat"
        },
        "name": {
          "type": "string",
          "description": "Name of the resource that is unique within a resource group. This name can be used to access the resource"
        },
        "etag": {
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/SubResource"
        }
      ],
      "description": "Frontend IP configuration of application gateway"
    },
    "ApplicationGatewayFrontendPortPropertiesFormat": {
      "properties": {
        "port": {
          "type": "integer",
          "format": "int32",
          "description": "Frontend port"
        },
        "provisioningState": {
          "type": "string",
          "description": "Provisioning state of the frontend port resource Updating/Deleting/Failed"
        }
      },
      "description": "Properties of Frontend Port of application gateway"
    },
    "ApplicationGatewayFrontendPort": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ApplicationGatewayFrontendPortPropertiesFormat"
        },
        "name": {
          "type": "string",
          "description": "Name of the resource that is unique within a resource group. This name can be used to access the resource"
        },
        "etag": {
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/SubResource"
        }
      ],
      "description": "Frontend Port of application gateway"
    },
    "ApplicationGatewayBackendAddress": {
      "properties": {
        "fqdn": {
          "type": "string",
          "description": "Dns name"
        },
        "ipAddress": {
          "type": "string",
          "description": "Ip address"
        }
      },
      "description": "Backend Address of application gateway"
    },
    "ApplicationGatewayBackendAddressPoolPropertiesFormat": {
      "properties": {
        "backendIPConfigurations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NetworkInterfaceIPConfiguration"
          },
          "description": "Collection of references to IPs defined in NICs"
        },
        "backendAddresses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApplicationGatewayBackendAddress"
          },
          "description": "Backend addresses"
        },
        "provisioningState": {
          "type": "string",
          "description": "Provisioning state of the backend address pool resource Updating/Deleting/Failed"
        }
      },
      "description": "Properties of Backend Address Pool of application gateway"
    },
    "ApplicationGatewayBackendAddressPool": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ApplicationGatewayBackendAddressPoolPropertiesFormat"
        },
        "name": {
          "type": "string",
          "description": "Resource that is unique within a resource group. This name can be used to access the resource"
        },
        "etag": {
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/SubResource"
        }
      ],
      "description": "Backend Address Pool of application gateway"
    },
    "ApplicationGatewayBackendHttpSettingsPropertiesFormat": {
      "properties": {
        "port": {
          "type": "integer",
          "format": "int32",
          "description": "Port"
        },
        "protocol": {
          "type": "string",
          "description": "Protocol",
          "enum": [
            "Http",
            "Https"
          ],
          "x-ms-enum": {
            "name": "ApplicationGatewayProtocol",
            "modelAsString": true
          }
        },
        "cookieBasedAffinity": {
          "type": "string",
          "description": "Cookie affinity",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "ApplicationGatewayCookieBasedAffinity",
            "modelAsString": true
          }
        },
        "requestTimeout": {
          "type": "integer",
          "format": "int32",
          "description": "Request timeout"
        },
        "probe": {
          "$ref": "#/definitions/SubResource",
          "description": "Probe resource of application gateway "
        },
        "authenticationCertificates": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SubResource"
          },
          "description": "Array of references to Application Gateway Authentication Certificates"
        },
        "provisioningState": {
          "type": "string",
          "description": "Provisioning state of the backend http settings resource Updating/Deleting/Failed"
        }
      },
      "description": "Properties of Backend address pool settings of application gateway"
    },
    "ApplicationGatewayBackendHttpSettings": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ApplicationGatewayBackendHttpSettingsPropertiesFormat"
        },
        "name": {
          "type": "string",
          "description": "Name of the resource that is unique within a resource group. This name can be used to access the resource"
        },
        "etag": {
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/SubResource"
        }
      ],
      "description": "Backend address pool settings of application gateway"
    },
    "ApplicationGatewayHttpListenerPropertiesFormat": {
      "properties": {
        "frontendIPConfiguration": {
          "$ref": "#/definitions/SubResource",
          "description": "Frontend IP configuration resource of application gateway "
        },
        "frontendPort": {
          "$ref": "#/definitions/SubResource",
          "description": "Frontend port resource of application gateway "
        },
        "protocol": {
          "type": "string",
          "description": "Protocol",
          "enum": [
            "Http",
            "Https"
          ],
          "x-ms-enum": {
            "name": "ApplicationGatewayProtocol",
            "modelAsString": true
          }
        },
        "hostName": {
          "type": "string",
          "description": "Host name of http listener "
        },
        "sslCertificate": {
          "$ref": "#/definitions/SubResource",
          "description": "Ssl certificate resource of application gateway "
        },
        "requireServerNameIndication": {
          "type": "boolean",
          "description": "RequireServerNameIndication of http listener "
        },
        "provisioningState": {
          "type": "string",
          "description": "Provisioning state of the http listener resource Updating/Deleting/Failed"
        }
      },
      "description": "Properties of Http listener of application gateway"
    },
    "ApplicationGatewayHttpListener": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ApplicationGatewayHttpListenerPropertiesFormat"
        },
        "name": {
          "type": "string",
          "description": "Name of the resource that is unique within a resource group. This name can be used to access the resource"
        },
        "etag": {
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/SubResource"
        }
      ],
      "description": "Http listener of application gateway"
    },
    "ApplicationGatewayPathRulePropertiesFormat": {
      "properties": {
        "paths": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Path rules of URL path map"
        },
        "backendAddressPool": {
          "$ref": "#/definitions/SubResource",
          "description": "Backend address pool resource of URL path map "
        },
        "backendHttpSettings": {
          "$ref": "#/definitions/SubResource",
          "description": "Backend http settings resource of URL path map "
        },
        "provisioningState": {
          "type": "string",
          "description": "Path rule of URL path map resource Updating/Deleting/Failed"
        }
      },
      "description": "Properties of probe of application gateway"
    },
    "ApplicationGatewayPathRule": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ApplicationGatewayPathRulePropertiesFormat"
        },
        "name": {
          "type": "string",
          "description": "Name of the resource that is unique within a resource group. This name can be used to access the resource"
        },
        "etag": {
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/SubResource"
        }
      ],
      "description": "Path rule of URL path map of application gateway"
    },
    "ApplicationGatewayProbePropertiesFormat": {
      "properties": {
        "protocol": {
          "type": "string",
          "description": "Protocol",
          "enum": [
            "Http",
            "Https"
          ],
          "x-ms-enum": {
            "name": "ApplicationGatewayProtocol",
            "modelAsString": true
          }
        },
        "host": {
          "type": "string",
          "description": "Host to send probe to "
        },
        "path": {
          "type": "string",
          "description": "Relative path of probe "
        },
        "interval": {
          "type": "integer",
          "format": "int32",
          "description": "Probing interval in seconds "
        },
        "timeout": {
          "type": "integer",
          "format": "int32",
          "description": "Probing timeout in seconds "
        },
        "unhealthyThreshold": {
          "type": "integer",
          "format": "int32",
          "description": "Probing unhealthy threshold "
        },
        "provisioningState": {
          "type": "string",
          "description": "Provisioning state of the backend http settings resource Updating/Deleting/Failed"
        }
      },
      "description": "Properties of probe of application gateway"
    },
    "ApplicationGatewayProbe": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ApplicationGatewayProbePropertiesFormat"
        },
        "name": {
          "type": "string",
          "description": "Name of the resource that is unique within a resource group. This name can be used to access the resource"
        },
        "etag": {
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/SubResource"
        }
      ],
      "description": "Probe of application gateway"
    },
    "ApplicationGatewayRequestRoutingRulePropertiesFormat": {
      "properties": {
        "ruleType": {
          "type": "string",
          "description": "Rule type",
          "enum": [
            "Basic",
            "PathBasedRouting"
          ],
          "x-ms-enum": {
            "name": "ApplicationGatewayRequestRoutingRuleType",
            "modelAsString": true
          }
        },
        "backendAddressPool": {
          "$ref": "#/definitions/SubResource",
          "description": "Backend address pool resource of application gateway "
        },
        "backendHttpSettings": {
          "$ref": "#/definitions/SubResource",
          "description": "Frontend port resource of application gateway "
        },
        "httpListener": {
          "$ref": "#/definitions/SubResource",
          "description": "Http listener resource of application gateway "
        },
        "urlPathMap": {
          "$ref": "#/definitions/SubResource",
          "description": "Url path map resource of application gateway "
        },
        "provisioningState": {
          "type": "string",
          "description": "Provisioning state of the request routing rule resource Updating/Deleting/Failed"
        }
      },
      "description": "Properties of Request routing rule of application gateway"
    },
    "ApplicationGatewayRequestRoutingRule": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ApplicationGatewayRequestRoutingRulePropertiesFormat"
        },
        "name": {
          "type": "string",
          "description": "Name of the resource that is unique within a resource group. This name can be used to access the resource"
        },
        "etag": {
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/SubResource"
        }
      ],
      "description": "Request routing rule of application gateway"
    },
    "ApplicationGatewayPropertiesFormat": {
      "properties": {
        "sku": {
          "$ref": "#/definitions/ApplicationGatewaySku",
          "description": "Sku of application gateway resource"
        },
        "sslPolicy": {
          "$ref": "#/definitions/ApplicationGatewaySslPolicy",
          "description": "SSL policy of application gateway resource"
        },
        "operationalState": {
          "readOnly": true,
          "type": "string",
          "description": "Operational state of application gateway resource",
          "enum": [
            "Stopped",
            "Starting",
            "Running",
            "Stopping"
          ],
          "x-ms-enum": {
            "name": "ApplicationGatewayOperationalState",
            "modelAsString": true
          }
        },
        "gatewayIPConfigurations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApplicationGatewayIPConfiguration"
          },
          "description": "Subnets of application gateway resource"
        },
        "authenticationCertificates": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApplicationGatewayAuthenticationCertificate"
          },
          "description": "Authentication certificates of application gateway resource"
        },
        "sslCertificates": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApplicationGatewaySslCertificate"
          },
          "description": "SSL certificates of application gateway resource"
        },
        "frontendIPConfigurations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApplicationGatewayFrontendIPConfiguration"
          },
          "description": "Frontend IP addresses of application gateway resource"
        },
        "frontendPorts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApplicationGatewayFrontendPort"
          },
          "description": "Frontend ports of application gateway resource"
        },
        "probes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApplicationGatewayProbe"
          },
          "description": "Probes of application gateway resource"
        },
        "backendAddressPools": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApplicationGatewayBackendAddressPool"
          },
          "description": "Backend address pool of application gateway resource"
        },
        "backendHttpSettingsCollection": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApplicationGatewayBackendHttpSettings"
          },
          "description": "Backend http settings of application gateway resource"
        },
        "httpListeners": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApplicationGatewayHttpListener"
          },
          "description": "HTTP listeners of application gateway resource"
        },
        "urlPathMaps": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApplicationGatewayUrlPathMap"
          },
          "description": "URL path map of application gateway resource"
        },
        "requestRoutingRules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApplicationGatewayRequestRoutingRule"
          },
          "description": "Request routing rules of application gateway resource"
        },
        "resourceGuid": {
          "type": "string",
          "description": "Resource guid property of the ApplicationGateway resource"
        },
        "provisioningState": {
          "type": "string",
          "description": "Provisioning state of the ApplicationGateway resource Updating/Deleting/Failed"
        }
      },
      "description": "Properties of Application Gateway"
    },
    "ApplicationGateway": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ApplicationGatewayPropertiesFormat"
        },
        "etag": {
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "description": "ApplicationGateways resource"
    },
    "ApplicationGatewayListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApplicationGateway"
          },
          "description": "List of ApplicationGateways in a resource group"
        },
        "nextLink": {
          "type": "string",
          "description": "URL to get the next set of results."
        }
      },
      "description": "Response for ListApplicationGateways Api service call"
    },
    "ApplicationGatewayUrlPathMapPropertiesFormat": {
      "properties": {
        "defaultBackendAddressPool": {
          "$ref": "#/definitions/SubResource",
          "description": "Default backend address pool resource of URL path map "
        },
        "defaultBackendHttpSettings": {
          "$ref": "#/definitions/SubResource",
          "description": "Default backend http settings resource of URL path map "
        },
        "pathRules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApplicationGatewayPathRule"
          },
          "description": "Path rule of URL path map resource"
        },
        "provisioningState": {
          "type": "string",
          "description": "Provisioning state of the backend http settings resource Updating/Deleting/Failed"
        }
      },
      "description": "Properties of UrlPathMap of application gateway"
    },
    "ApplicationGatewayUrlPathMap": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ApplicationGatewayUrlPathMapPropertiesFormat"
        },
        "name": {
          "type": "string",
          "description": "Name of the resource that is unique within a resource group. This name can be used to access the resource"
        },
        "etag": {
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/SubResource"
        }
      ],
      "description": "UrlPathMap of application gateway"
    },
    "AuthorizationPropertiesFormat": {
      "properties": {
        "authorizationKey": {
          "type": "string",
          "description": "Gets or sets the authorization key"
        },
        "authorizationUseStatus": {
          "type": "string",
          "description": "Gets or sets AuthorizationUseStatus",
          "enum": [
            "Available",
            "InUse"
          ],
          "x-ms-enum": {
            "name": "AuthorizationUseStatus",
            "modelAsString": true
          }
        },
        "provisioningState": {
          "type": "string",
          "description": "Gets provisioning state of the PublicIP resource Updating/Deleting/Failed"
        }
      }
    },
    "ExpressRouteCircuitAuthorization": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/AuthorizationPropertiesFormat"
        },
        "name": {
          "type": "string",
          "description": "Gets name of the resource that is unique within a resource group. This name can be used to access the resource"
        },
        "etag": {
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/SubResource"
        }
      ],
      "description": "Authorization in a ExpressRouteCircuit resource"
    },
    "AuthorizationListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExpressRouteCircuitAuthorization"
          },
          "description": "Gets the authorizations in an ExpressRoute Circuit"
        },
        "nextLink": {
          "type": "string",
          "description": "Gets the URL to get the next set of results."
        }
      },
      "description": "Response for ListAuthorizations Api service callRetrieves all authorizations that belongs to an ExpressRouteCircuit"
    },
    "ExpressRouteCircuitPeeringConfig": {
      "properties": {
        "advertisedPublicPrefixes": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Gets or sets the reference of AdvertisedPublicPrefixes"
        },
        "advertisedPublicPrefixesState": {
          "type": "string",
          "description": "Gets or sets AdvertisedPublicPrefixState of the Peering resource ",
          "enum": [
            "NotConfigured",
            "Configuring",
            "Configured",
            "ValidationNeeded"
          ],
          "x-ms-enum": {
            "name": "ExpressRouteCircuitPeeringAdvertisedPublicPrefixState",
            "modelAsString": true
          }
        },
        "customerASN": {
          "type": "integer",
          "format": "int32",
          "description": "Gets or Sets CustomerAsn of the peering."
        },
        "routingRegistryName": {
          "type": "string",
          "description": "Gets or Sets RoutingRegistryName of the config."
        }
      },
      "description": "Specifies the peering config"
    },
    "ExpressRouteCircuitStats": {
      "properties": {
        "primarybytesIn": {
          "type": "integer",
          "format": "int64",
          "description": "Gets BytesIn of the peering."
        },
        "primarybytesOut": {
          "type": "integer",
          "format": "int64",
          "description": "Gets BytesOut of the peering."
        },
        "secondarybytesIn": {
          "type": "integer",
          "format": "int64",
          "description": "Gets BytesIn of the peering."
        },
        "secondarybytesOut": {
          "type": "integer",
          "format": "int64",
          "description": "Gets BytesOut of the peering."
        }
      },
      "description": "Contains Stats associated with the peering"
    },
    "ExpressRouteCircuitPeeringPropertiesFormat": {
      "properties": {
        "peeringType": {
          "type": "string",
          "description": "Gets or sets PeeringType",
          "enum": [
            "AzurePublicPeering",
            "AzurePrivatePeering",
            "MicrosoftPeering"
          ],
          "x-ms-enum": {
            "name": "ExpressRouteCircuitPeeringType",
            "modelAsString": true
          }
        },
        "state": {
          "type": "string",
          "description": "Gets or sets state of Peering",
          "enum": [
            "Disabled",
            "Enabled"
          ],
          "x-ms-enum": {
            "name": "ExpressRouteCircuitPeeringState",
            "modelAsString": true
          }
        },
        "azureASN": {
          "type": "integer",
          "format": "int32",
          "description": "Gets or sets the azure ASN"
        },
        "peerASN": {
          "type": "integer",
          "format": "int32",
          "description": "Gets or sets the peer ASN"
        },
        "primaryPeerAddressPrefix": {
          "type": "string",
          "description": "Gets or sets the primary address prefix"
        },
        "secondaryPeerAddressPrefix": {
          "type": "string",
          "description": "Gets or sets the secondary address prefix"
        },
        "primaryAzurePort": {
          "type": "string",
          "description": "Gets or sets the primary port"
        },
        "secondaryAzurePort": {
          "type": "string",
          "description": "Gets or sets the secondary port"
        },
        "sharedKey": {
          "type": "string",
          "description": "Gets or sets the shared key"
        },
        "vlanId": {
          "type": "integer",
          "format": "int32",
          "description": "Gets or sets the vlan id"
        },
        "microsoftPeeringConfig": {
          "$ref": "#/definitions/ExpressRouteCircuitPeeringConfig",
          "description": "Gets or sets the mircosoft peering config"
        },
        "stats": {
          "$ref": "#/definitions/ExpressRouteCircuitStats",
          "description": "Gets or peering stats"
        },
        "provisioningState": {
          "type": "string",
          "description": "Gets provisioning state of the PublicIP resource Updating/Deleting/Failed"
        },
        "gatewayManagerEtag": {
          "type": "string",
          "description": "Gets or sets the GatewayManager Etag"
        },
        "lastModifiedBy": {
          "type": "string",
          "description": "Gets whether the provider or the customer last modified the peering"
        }
      }
    },
    "ExpressRouteCircuitPeering": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ExpressRouteCircuitPeeringPropertiesFormat"
        },
        "name": {
          "type": "string",
          "description": "Gets name of the resource that is unique within a resource group. This name can be used to access the resource"
        },
        "etag": {
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/SubResource"
        }
      ],
      "description": "Peering in a ExpressRouteCircuit resource"
    },
    "ExpressRouteCircuitPeeringListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExpressRouteCircuitPeering"
          },
          "description": "Gets the peerings in an express route circuit"
        },
        "nextLink": {
          "type": "string",
          "description": "Gets the URL to get the next set of results."
        }
      },
      "description": "Response for ListPeering Api service callRetrieves all Peerings that belongs to an ExpressRouteCircuit"
    },
    "ExpressRouteCircuitSku": {
      "properties": {
        "name": {
          "type": "string",
          "description": "Gets or sets name of the sku."
        },
        "tier": {
          "type": "string",
          "description": "Gets or sets tier of the sku.",
          "enum": [
            "Standard",
            "Premium"
          ],
          "x-ms-enum": {
            "name": "ExpressRouteCircuitSkuTier",
            "modelAsString": true
          }
        },
        "family": {
          "type": "string",
          "description": "Gets or sets family of the sku.",
          "enum": [
            "UnlimitedData",
            "MeteredData"
          ],
          "x-ms-enum": {
            "name": "ExpressRouteCircuitSkuFamily",
            "modelAsString": true
          }
        }
      },
      "description": "Contains sku in an ExpressRouteCircuit"
    },
    "ExpressRouteCircuitServiceProviderProperties": {
      "properties": {
        "serviceProviderName": {
          "type": "string",
          "description": "Gets or sets serviceProviderName."
        },
        "peeringLocation": {
          "type": "string",
          "description": "Gets or sets peering location."
        },
        "bandwidthInMbps": {
          "type": "integer",
          "format": "int32",
          "description": "Gets or sets BandwidthInMbps."
        }
      },
      "description": "Contains ServiceProviderProperties in an ExpressRouteCircuit"
    },
    "ExpressRouteCircuitPropertiesFormat": {
      "properties": {
        "allowClassicOperations": {
          "type": "boolean",
          "description": "allow classic operations"
        },
        "circuitProvisioningState": {
          "type": "string",
          "description": "Gets or sets CircuitProvisioningState state of the resource "
        },
        "serviceProviderProvisioningState": {
          "type": "string",
          "description": "Gets or sets ServiceProviderProvisioningState state of the resource ",
          "enum": [
            "NotProvisioned",
            "Provisioning",
            "Provisioned",
            "Deprovisioning"
          ],
          "x-ms-enum": {
            "name": "ServiceProviderProvisioningState",
            "modelAsString": true
          }
        },
        "authorizations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExpressRouteCircuitAuthorization"
          },
          "description": "Gets or sets list of authorizations"
        },
        "peerings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExpressRouteCircuitPeering"
          },
          "description": "Gets or sets list of peerings"
        },
        "serviceKey": {
          "type": "string",
          "description": "Gets or sets ServiceKey"
        },
        "serviceProviderNotes": {
          "type": "string",
          "description": "Gets or sets ServiceProviderNotes"
        },
        "serviceProviderProperties": {
          "$ref": "#/definitions/ExpressRouteCircuitServiceProviderProperties",
          "description": "Gets or sets ServiceProviderProperties"
        },
        "provisioningState": {
          "type": "string",
          "description": "Gets provisioning state of the PublicIP resource Updating/Deleting/Failed"
        },
        "gatewayManagerEtag": {
          "type": "string",
          "description": "Gets or sets the GatewayManager Etag"
        }
      },
      "description": "Properties of ExpressRouteCircuit"
    },
    "ExpressRouteCircuit": {
      "properties": {
        "sku": {
          "$ref": "#/definitions/ExpressRouteCircuitSku",
          "description": "Gets or sets sku"
        },
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ExpressRouteCircuitPropertiesFormat"
        },
        "etag": {
          "type": "string",
          "description": "Gets a unique read-only string that changes whenever the resource is updated"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "description": "ExpressRouteCircuit resource"
    },
    "ExpressRouteCircuitArpTable": {
      "properties": {
        "age": {
          "type": "integer",
          "format": "int32",
          "description": "Age."
        },
        "interface": {
          "type": "string",
          "description": "Interface."
        },
        "ipAddress": {
          "type": "string",
          "description": "Gets ipAddress."
        },
        "macAddress": {
          "type": "string",
          "description": "Gets macAddress."
        }
      },
      "description": "The arp table associated with the ExpressRouteCircuit"
    },
    "ExpressRouteCircuitsArpTableListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExpressRouteCircuitArpTable"
          },
          "description": "Gets List of ArpTable"
        },
        "nextLink": {
          "type": "string",
          "description": "Gets the URL to get the next set of results."
        }
      },
      "description": "Response for ListArpTable associated with the Express Route Circuits Api"
    },
    "ExpressRouteCircuitRoutesTable": {
      "properties": {
        "network": {
          "type": "string",
          "description": "network."
        },
        "nextHop": {
          "type": "string",
          "description": "nextHop"
        },
        "locPrf": {
          "type": "string",
          "description": "locPrf."
        },
        "weight": {
          "type": "integer",
          "format": "int32",
          "description": "weight."
        },
        "path": {
          "type": "string",
          "description": "path ."
        }
      },
      "required": [
        "nextHopType"
      ],
      "description": "The routes table associated with the ExpressRouteCircuit"
    },
    "ExpressRouteCircuitsRoutesTableListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExpressRouteCircuitRoutesTable"
          },
          "description": "Gets List of RoutesTable"
        },
        "nextLink": {
          "type": "string",
          "description": "Gets the URL to get the next set of results."
        }
      },
      "description": "Response for ListRoutesTable associated with the Express Route Circuits Api"
    },
    "ExpressRouteCircuitRoutesTableSummary": {
      "properties": {
        "neighbor": {
          "type": "string",
          "description": "Neighbor."
        },
        "v": {
          "type": "integer",
          "format": "int32",
          "description": "BGP version number spoken to the neighbor."
        },
        "as": {
          "type": "integer",
          "format": "int32",
          "description": "Autonomous system number."
        },
        "upDown": {
          "type": "string",
          "description": "The length of time that the BGP session has been in the Established state, or the current status if not in the Established state."
        },
        "statePfxRcd": {
          "type": "string",
          "description": "Current state of the BGP session, and the number of prefixes that have been received from a neighbor or peer group."
        }
      },
      "required": [
        "nextHopType"
      ],
      "description": "The routes table associated with the ExpressRouteCircuit"
    },
    "ExpressRouteCircuitsRoutesTableSummaryListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExpressRouteCircuitRoutesTableSummary"
          },
          "description": "Gets List of RoutesTable"
        },
        "nextLink": {
          "type": "string",
          "description": "Gets the URL to get the next set of results."
        }
      },
      "description": "Response for ListRoutesTable associated with the Express Route Circuits Api"
    },
    "ExpressRouteCircuitListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExpressRouteCircuit"
          },
          "description": "Gets a list of ExpressRouteCircuits in a resource group"
        },
        "nextLink": {
          "type": "string",
          "description": "Gets the URL to get the next set of results."
        }
      },
      "description": "Response for ListExpressRouteCircuit Api service call"
    },
    "ExpressRouteServiceProviderBandwidthsOffered": {
      "properties": {
        "offerName": {
          "type": "string",
          "description": "Gets the OfferName"
        },
        "valueInMbps": {
          "type": "integer",
          "format": "int32",
          "description": "Gets the ValueInMbps."
        }
      },
      "description": "Contains Bandwidths offered in ExpressRouteServiceProviders"
    },
    "ExpressRouteServiceProviderPropertiesFormat": {
      "properties": {
        "peeringLocations": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Gets or list of peering locations"
        },
        "bandwidthsOffered": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExpressRouteServiceProviderBandwidthsOffered"
          },
          "description": "Gets or bandwidths offered"
        },
        "provisioningState": {
          "type": "string",
          "description": "Gets provisioning state of the resource "
        }
      },
      "description": "Properties of ExpressRouteServiceProvider"
    },
    "ExpressRouteServiceProvider": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ExpressRouteServiceProviderPropertiesFormat"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "description": "ExpressRouteResourceProvider object"
    },
    "ExpressRouteServiceProviderListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExpressRouteServiceProvider"
          },
          "description": "Gets List of ExpressRouteResourceProvider"
        },
        "nextLink": {
          "type": "string",
          "description": "Gets the URL to get the next set of results."
        }
      },
      "description": "Response for ListExpressRouteServiceProvider Api service call"
    },
    "FrontendIPConfigurationPropertiesFormat": {
      "properties": {
        "inboundNatRules": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/SubResource"
          },
          "description": "Read only. Inbound rules URIs that use this frontend IP"
        },
        "inboundNatPools": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/SubResource"
          },
          "description": "Read only. Inbound pools URIs that use this frontend IP"
        },
        "outboundNatRules": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/SubResource"
          },
          "description": "Read only. Outbound rules URIs that use this frontend IP"
        },
        "loadBalancingRules": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/SubResource"
          },
          "description": "Gets Load Balancing rules URIs that use this frontend IP"
        },
        "privateIPAddress": {
          "type": "string",
          "description": "Gets or sets the privateIPAddress of the IP Configuration"
        },
        "privateIPAllocationMethod": {
          "type": "string",
          "description": "Gets or sets PrivateIP allocation method",
          "enum": [
            "Static",
            "Dynamic"
          ],
          "x-ms-enum": {
            "name": "IPAllocationMethod",
            "modelAsString": true
          }
        },
        "subnet": {
          "$ref": "#/definitions/Subnet",
          "description": "Gets or sets the reference of the subnet resource"
        },
        "publicIPAddress": {
          "$ref": "#/definitions/PublicIPAddress",
          "description": "Gets or sets the reference of the PublicIP resource"
        },
        "provisioningState": {
          "type": "string",
          "description": "Gets provisioning state of the PublicIP resource Updating/Deleting/Failed"
        }
      },
      "description": "Properties of Frontend IP Configuration of the load balancer"
    },
    "FrontendIPConfiguration": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/FrontendIPConfigurationPropertiesFormat"
        },
        "name": {
          "type": "string",
          "description": "Gets name of the resource that is unique within a resource group. This name can be used to access the resource"
        },
        "etag": {
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/SubResource"
        }
      ],
      "description": "Frontend IP address of the load balancer"
    },
    "BackendAddressPoolPropertiesFormat": {
      "properties": {
        "backendIPConfigurations": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/NetworkInterfaceIPConfiguration"
          },
          "description": "Gets collection of references to IPs defined in NICs"
        },
        "loadBalancingRules": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/SubResource"
          },
          "description": "Gets Load Balancing rules that use this Backend Address Pool"
        },
        "outboundNatRule": {
          "readOnly": true,
          "$ref": "#/definitions/SubResource",
          "description": "Gets outbound rules that use this Backend Address Pool"
        },
        "provisioningState": {
          "type": "string",
          "description": "Get provisioning state of the PublicIP resource Updating/Deleting/Failed"
        }
      },
      "description": "Properties of BackendAddressPool"
    },
    "BackendAddressPool": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/BackendAddressPoolPropertiesFormat"
        },
        "name": {
          "type": "string",
          "description": "Gets name of the resource that is unique within a resource group. This name can be used to access the resource"
        },
        "etag": {
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/SubResource"
        }
      ],
      "description": "Pool of backend IP addresses"
    },
    "LoadBalancingRulePropertiesFormat": {
      "properties": {
        "frontendIPConfiguration": {
          "$ref": "#/definitions/SubResource",
          "description": "Gets or sets a reference to frontend IP Addresses"
        },
        "backendAddressPool": {
          "$ref": "#/definitions/SubResource",
          "description": "Gets or sets  a reference to a pool of DIPs. Inbound traffic is randomly load balanced across IPs in the backend IPs"
        },
        "probe": {
          "$ref": "#/definitions/SubResource",
          "description": "Gets or sets the reference of the load balancer probe used by the Load Balancing rule."
        },
        "protocol": {
          "type": "string",
          "description": "Gets or sets the transport protocol for the external endpoint. Possible values are Udp or Tcp",
          "enum": [
            "Udp",
            "Tcp"
          ],
          "x-ms-enum": {
            "name": "TransportProtocol",
            "modelAsString": true
          }
        },
        "loadDistribution": {
          "type": "string",
          "description": "Gets or sets the load distribution policy for this rule",
          "enum": [
            "Default",
            "SourceIP",
            "SourceIPProtocol"
          ],
          "x-ms-enum": {
            "name": "LoadDistribution",
            "modelAsString": true
          }
        },
        "frontendPort": {
          "type": "integer",
          "format": "int32",
          "description": "Gets or sets the port for the external endpoint. You can specify any port number you choose, but the port numbers specified for each role in the service must be unique. Possible values range between 1 and 65535, inclusive"
        },
        "backendPort": {
          "type": "integer",
          "format": "int32",
          "description": "Gets or sets a port used for internal connections on the endpoint. The localPort attribute maps the eternal port of the endpoint to an internal port on a role. This is useful in scenarios where a role must communicate to an internal component on a port that is different from the one that is exposed externally. If not specified, the value of localPort is the same as the port attribute. Set the value of localPort to '*' to automatically assign an unallocated port that is discoverable using the runtime API"
        },
        "idleTimeoutInMinutes": {
          "type": "integer",
          "format": "int32",
          "description": "Gets or sets the timeout for the Tcp idle connection. The value can be set between 4 and 30 minutes. The default value is 4 minutes. This element is only used when the protocol is set to Tcp"
        },
        "enableFloatingIP": {
          "type": "boolean",
          "description": "Configures a virtual machine's endpoint for the floating IP capability required to configure a SQL AlwaysOn availability Group. This setting is required when using the SQL Always ON availability Groups in SQL server. This setting can't be changed after you create the endpoint"
        },
        "provisioningState": {
          "type": "string",
          "description": "Gets provisioning state of the PublicIP resource Updating/Deleting/Failed"
        }
      },
      "required": [
        "protocol",
        "frontendPort"
      ],
      "description": "Properties of the load balancer"
    },
    "LoadBalancingRule": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/LoadBalancingRulePropertiesFormat"
        },
        "name": {
          "type": "string",
          "description": "Gets name of the resource that is unique within a resource group. This name can be used to access the resource"
        },
        "etag": {
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/SubResource"
        }
      ],
      "description": "Rules of the load balancer"
    },
    "ProbePropertiesFormat": {
      "properties": {
        "loadBalancingRules": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/SubResource"
          },
          "description": "Gets Load balancer rules that use this probe"
        },
        "protocol": {
          "type": "string",
          "description": "Gets or sets the protocol of the end point. Possible values are http or Tcp. If Tcp is specified, a received ACK is required for the probe to be successful. If http is specified,a 200 OK response from the specifies URI is required for the probe to be successful",
          "enum": [
            "Http",
            "Tcp"
          ],
          "x-ms-enum": {
            "name": "ProbeProtocol",
            "modelAsString": true
          }
        },
        "port": {
          "type": "integer",
          "format": "int32",
          "description": "Gets or sets Port for communicating the probe. Possible values range from 1 to 65535, inclusive."
        },
        "intervalInSeconds": {
          "type": "integer",
          "format": "int32",
          "description": "Gets or sets the interval, in seconds, for how frequently to probe the endpoint for health status. Typically, the interval is slightly less than half the allocated timeout period (in seconds) which allows two full probes before taking the instance out of rotation. The default value is 15, the minimum value is 5"
        },
        "numberOfProbes": {
          "type": "integer",
          "format": "int32",
          "description": "Gets or sets the number of probes where if no response, will result in stopping further traffic from being delivered to the endpoint. This values allows endpoints to be taken out of rotation faster or slower than the typical times used in Azure. "
        },
        "requestPath": {
          "type": "string",
          "description": "Gets or sets the URI used for requesting health status from the VM. Path is required if a protocol is set to http. Otherwise, it is not allowed. There is no default value"
        },
        "provisioningState": {
          "type": "string",
          "description": "Gets provisioning state of the PublicIP resource Updating/Deleting/Failed"
        }
      },
      "required": [
        "protocol",
        "port"
      ]
    },
    "Probe": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ProbePropertiesFormat"
        },
        "name": {
          "type": "string",
          "description": "Gets name of the resource that is unique within a resource group. This name can be used to access the resource"
        },
        "etag": {
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/SubResource"
        }
      ],
      "description": "Load balancer Probe"
    },
    "InboundNatRulePropertiesFormat": {
      "properties": {
        "frontendIPConfiguration": {
          "$ref": "#/definitions/SubResource",
          "description": "Gets or sets a reference to frontend IP Addresses"
        },
        "backendIPConfiguration": {
          "readOnly": true,
          "$ref": "#/definitions/NetworkInterfaceIPConfiguration",
          "description": "Gets or sets a reference to a private ip address defined on a NetworkInterface of a VM. Traffic sent to frontendPort of each of the frontendIPConfigurations is forwarded to the backed IP"
        },
        "protocol": {
          "type": "string",
          "description": "Gets or sets the transport protocol for the endpoint. Possible values are Udp or Tcp",
          "enum": [
            "Udp",
            "Tcp"
          ],
          "x-ms-enum": {
            "name": "TransportProtocol",
            "modelAsString": true
          }
        },
        "frontendPort": {
          "type": "integer",
          "format": "int32",
          "description": "Gets or sets the port for the external endpoint. You can specify any port number you choose, but the port numbers specified for each role in the service must be unique. Possible values range between 1 and 65535, inclusive"
        },
        "backendPort": {
          "type": "integer",
          "format": "int32",
          "description": "Gets or sets a port used for internal connections on the endpoint. The localPort attribute maps the eternal port of the endpoint to an internal port on a role. This is useful in scenarios where a role must communicate to an internal component on a port that is different from the one that is exposed externally. If not specified, the value of localPort is the same as the port attribute. Set the value of localPort to '*' to automatically assign an unallocated port that is discoverable using the runtime API"
        },
        "idleTimeoutInMinutes": {
          "type": "integer",
          "format": "int32",
          "description": "Gets or sets the timeout for the Tcp idle connection. The value can be set between 4 and 30 minutes. The default value is 4 minutes. This element is only used when the protocol is set to Tcp"
        },
        "enableFloatingIP": {
          "type": "boolean",
          "description": "Configures a virtual machine's endpoint for the floating IP capability required to configure a SQL AlwaysOn availability Group. This setting is required when using the SQL Always ON availability Groups in SQL server. This setting can't be changed after you create the endpoint"
        },
        "provisioningState": {
          "type": "string",
          "description": "Gets provisioning state of the PublicIP resource Updating/Deleting/Failed"
        }
      },
      "description": "Properties of Inbound NAT rule"
    },
    "InboundNatRule": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/InboundNatRulePropertiesFormat"
        },
        "name": {
          "type": "string",
          "description": "Gets name of the resource that is unique within a resource group. This name can be used to access the resource"
        },
        "etag": {
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/SubResource"
        }
      ],
      "description": "Inbound NAT rule of the loadbalancer"
    },
    "InboundNatPoolPropertiesFormat": {
      "properties": {
        "frontendIPConfiguration": {
          "$ref": "#/definitions/SubResource",
          "description": "Gets or sets a reference to frontend IP Addresses"
        },
        "protocol": {
          "type": "string",
          "description": "Gets or sets the transport protocol for the endpoint. Possible values are Udp or Tcp",
          "enum": [
            "Udp",
            "Tcp"
          ],
          "x-ms-enum": {
            "name": "TransportProtocol",
            "modelAsString": true
          }
        },
        "frontendPortRangeStart": {
          "type": "integer",
          "format": "int32",
          "description": "Gets or sets the starting port range for the NAT pool. You can specify any port number you choose, but the port numbers specified for each role in the service must be unique. Possible values range between 1 and 65535, inclusive"
        },
        "frontendPortRangeEnd": {
          "type": "integer",
          "format": "int32",
          "description": "Gets or sets the ending port range for the NAT pool. You can specify any port number you choose, but the port numbers specified for each role in the service must be unique. Possible values range between 1 and 65535, inclusive"
        },
        "backendPort": {
          "type": "integer",
          "format": "int32",
          "description": "Gets or sets a port used for internal connections on the endpoint. The localPort attribute maps the eternal port of the endpoint to an internal port on a role. This is useful in scenarios where a role must communicate to an internal component on a port that is different from the one that is exposed externally. If not specified, the value of localPort is the same as the port attribute. Set the value of localPort to '*' to automatically assign an unallocated port that is discoverable using the runtime API"
        },
        "provisioningState": {
          "type": "string",
          "description": "Gets provisioning state of the PublicIP resource Updating/Deleting/Failed"
        }
      },
      "required": [
        "protocol",
        "frontendPortRangeStart",
        "frontendPortRangeEnd",
        "backendPort"
      ],
      "description": "Properties of Inbound NAT pool"
    },
    "InboundNatPool": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/InboundNatPoolPropertiesFormat"
        },
        "name": {
          "type": "string",
          "description": "Gets name of the resource that is unique within a resource group. This name can be used to access the resource"
        },
        "etag": {
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/SubResource"
        }
      ],
      "description": "Inbound NAT pool of the load balancer"
    },
    "OutboundNatRulePropertiesFormat": {
      "properties": {
        "allocatedOutboundPorts": {
          "type": "integer",
          "format": "int32",
          "description": "Gets or sets the number of outbound ports to be used for SNAT"
        },
        "frontendIPConfigurations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SubResource"
          },
          "description": "Gets or sets Frontend IP addresses of the load balancer"
        },
        "backendAddressPool": {
          "$ref": "#/definitions/SubResource",
          "description": "Gets or sets a reference to a pool of DIPs. Outbound traffic is randomly load balanced across IPs in the backend IPs"
        },
        "provisioningState": {
          "type": "string",
          "description": "Gets provisioning state of the PublicIP resource Updating/Deleting/Failed"
        }
      },
      "required": [
        "backendAddressPool"
      ],
      "description": "Outbound NAT pool of the load balancer"
    },
    "OutboundNatRule": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/OutboundNatRulePropertiesFormat"
        },
        "name": {
          "type": "string",
          "description": "Gets name of the resource that is unique within a resource group. This name can be used to access the resource"
        },
        "etag": {
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/SubResource"
        }
      ],
      "description": "Outbound NAT pool of the load balancer"
    },
    "LoadBalancerPropertiesFormat": {
      "properties": {
        "frontendIPConfigurations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FrontendIPConfiguration"
          },
          "description": "Gets or sets frontend IP addresses of the load balancer"
        },
        "backendAddressPools": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BackendAddressPool"
          },
          "description": "Gets or sets Pools of backend IP addresses"
        },
        "loadBalancingRules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LoadBalancingRule"
          },
          "description": "Gets or sets load balancing rules"
        },
        "probes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Probe"
          },
          "description": "Gets or sets list of Load balancer probes"
        },
        "inboundNatRules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/InboundNatRule"
          },
          "description": "Gets or sets list of inbound rules"
        },
        "inboundNatPools": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/InboundNatPool"
          },
          "description": "Gets or sets inbound NAT pools"
        },
        "outboundNatRules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OutboundNatRule"
          },
          "description": "Gets or sets outbound NAT rules"
        },
        "resourceGuid": {
          "type": "string",
          "description": "Gets or sets resource guid property of the Load balancer resource"
        },
        "provisioningState": {
          "type": "string",
          "description": "Gets provisioning state of the PublicIP resource Updating/Deleting/Failed"
        }
      },
      "description": "Properties of Load Balancer"
    },
    "LoadBalancer": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/LoadBalancerPropertiesFormat"
        },
        "etag": {
          "type": "string",
          "description": "Gets a unique read-only string that changes whenever the resource is updated"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "description": "LoadBalancer resource"
    },
    "LoadBalancerListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LoadBalancer"
          },
          "description": "Gets a list of LoadBalancers in a resource group"
        },
        "nextLink": {
          "type": "string",
          "description": "Gets the URL to get the next set of results."
        }
      },
      "description": "Response for ListLoadBalancers Api service call"
    },
    "AddressSpace": {
      "properties": {
        "addressPrefixes": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Gets or sets list of address blocks reserved for this virtual network in CIDR notation"
        }
      },
      "description": "AddressSpace contains an array of IP address ranges that can be used by subnets"
    },
    "BgpSettings": {
      "properties": {
        "asn": {
          "type": "integer",
          "format": "int64",
          "description": "Gets or sets this BGP speaker's ASN"
        },
        "bgpPeeringAddress": {
          "type": "string",
          "description": "Gets or sets the BGP peering address and BGP identifier of this BGP speaker"
        },
        "peerWeight": {
          "type": "integer",
          "format": "int32",
          "description": "Gets or sets the weight added to routes learned from this BGP speaker"
        }
      }
    },
    "LocalNetworkGatewayPropertiesFormat": {
      "properties": {
        "localNetworkAddressSpace": {
          "$ref": "#/definitions/AddressSpace",
          "description": "Local network site Address space"
        },
        "gatewayIpAddress": {
          "type": "string",
          "description": "IP address of local network gateway."
        },
        "bgpSettings": {
          "$ref": "#/definitions/BgpSettings",
          "description": "Local network gateway's BGP speaker settings"
        },
        "resourceGuid": {
          "type": "string",
          "description": "Gets or sets resource guid property of the LocalNetworkGateway resource"
        },
        "provisioningState": {
          "type": "string",
          "description": "Gets provisioning state of the LocalNetworkGateway resource Updating/Deleting/Failed"
        }
      },
      "description": "LocalNetworkGateway properties"
    },
    "LocalNetworkGateway": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/LocalNetworkGatewayPropertiesFormat"
        },
        "etag": {
          "type": "string",
          "description": "Gets a unique read-only string that changes whenever the resource is updated"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "description": "A common class for general resource information"
    },
    "LocalNetworkGatewayListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LocalNetworkGateway"
          },
          "description": "Gets List of LocalNetworkGateways that exists in a resource group"
        },
        "nextLink": {
          "type": "string",
          "description": "Gets the URL to get the next set of results."
        }
      },
      "description": "Response for ListLocalNetworkGateways Api service call"
    },
    "NetworkInterfaceIPConfigurationPropertiesFormat": {
      "properties": {
        "applicationGatewayBackendAddressPools": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApplicationGatewayBackendAddressPool"
          },
          "description": "Gets or sets the reference of ApplicationGatewayBackendAddressPool resource"
        },
        "loadBalancerBackendAddressPools": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BackendAddressPool"
          },
          "description": "Gets or sets the reference of LoadBalancerBackendAddressPool resource"
        },
        "loadBalancerInboundNatRules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/InboundNatRule"
          },
          "description": "Gets or sets list of references of LoadBalancerInboundNatRules"
        },
        "privateIPAddress": {
          "type": "string"
        },
        "privateIPAllocationMethod": {
          "type": "string",
          "description": "Gets or sets PrivateIP allocation method",
          "enum": [
            "Static",
            "Dynamic"
          ],
          "x-ms-enum": {
            "name": "IPAllocationMethod",
            "modelAsString": true
          }
        },
        "privateIPAddressVersion": {
          "type": "string",
          "description": "Gets or sets PrivateIP address version (IPv4/IPv6)",
          "enum": [
            "IPv4",
            "IPv6"
          ],
          "x-ms-enum": {
            "name": "IPVersion",
            "modelAsString": true
          }
        },
        "subnet": {
          "$ref": "#/definitions/Subnet"
        },
        "primary": {
          "type": "boolean",
          "description": "Gets whether this is a primary customer address on the NIC"
        },
        "publicIPAddress": {
          "$ref": "#/definitions/PublicIPAddress"
        },
        "provisioningState": {
          "type": "string"
        }
      },
      "description": "Properties of IPConfiguration"
    },
    "NetworkInterfaceIPConfiguration": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/NetworkInterfaceIPConfigurationPropertiesFormat"
        },
        "name": {
          "type": "string",
          "description": "Gets name of the resource that is unique within a resource group. This name can be used to access the resource"
        },
        "etag": {
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/SubResource"
        }
      ],
      "description": "IPConfiguration in a NetworkInterface"
    },
    "NetworkInterfaceDnsSettings": {
      "properties": {
        "dnsServers": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Gets or sets list of DNS servers IP addresses"
        },
        "appliedDnsServers": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Gets or sets list of Applied DNS servers IP addresses"
        },
        "internalDnsNameLabel": {
          "type": "string",
          "description": "Gets or sets the internal DNS name"
        },
        "internalFqdn": {
          "type": "string",
          "description": "Gets or sets the internal fqdn."
        },
        "internalDomainNameSuffix": {
          "type": "string",
          "description": "Gets or sets internal domain name suffix of the NIC."
        }
      },
      "description": "Dns settings of a network interface"
    },
    "NetworkInterfacePropertiesFormat": {
      "properties": {
        "virtualMachine": {
          "$ref": "#/definitions/SubResource",
          "description": "Gets or sets the reference of a VirtualMachine"
        },
        "networkSecurityGroup": {
          "$ref": "#/definitions/NetworkSecurityGroup",
          "description": "Gets or sets the reference of the NetworkSecurityGroup resource"
        },
        "ipConfigurations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NetworkInterfaceIPConfiguration"
          },
          "description": "Gets or sets list of IPConfigurations of the network interface"
        },
        "dnsSettings": {
          "$ref": "#/definitions/NetworkInterfaceDnsSettings",
          "description": "Gets or sets DNS settings in network interface"
        },
        "macAddress": {
          "type": "string",
          "description": "Gets the MAC address of the network interface"
        },
        "primary": {
          "type": "boolean",
          "description": "Gets whether this is a primary NIC on a virtual machine"
        },
        "enableIPForwarding": {
          "type": "boolean",
          "description": "Gets or sets whether IPForwarding is enabled on the NIC"
        },
        "resourceGuid": {
          "type": "string",
          "description": "Gets or sets resource guid property of the network interface resource"
        },
        "provisioningState": {
          "type": "string",
          "description": "Gets provisioning state of the PublicIP resource Updating/Deleting/Failed"
        }
      },
      "description": "NetworkInterface properties. "
    },
    "NetworkInterface": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/NetworkInterfacePropertiesFormat"
        },
        "etag": {
          "type": "string",
          "description": "Gets a unique read-only string that changes whenever the resource is updated"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "description": "A NetworkInterface in a resource group"
    },
    "NetworkInterfaceListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NetworkInterface"
          },
          "description": "Gets or sets list of NetworkInterfaces in a resource group"
        },
        "nextLink": {
          "type": "string",
          "description": "Gets the URL to get the next set of results."
        }
      },
      "description": "Response for ListNetworkInterface Api service call"
    },
    "SecurityRulePropertiesFormat": {
      "properties": {
        "description": {
          "type": "string",
          "description": "Gets or sets a description for this rule. Restricted to 140 chars."
        },
        "protocol": {
          "type": "string",
          "description": "Gets or sets Network protocol this rule applies to. Can be Tcp, Udp or All(*).",
          "enum": [
            "Tcp",
            "Udp",
            "*"
          ],
          "x-ms-enum": {
            "name": "SecurityRuleProtocol",
            "modelAsString": true
          }
        },
        "sourcePortRange": {
          "type": "string",
          "description": "Gets or sets Source Port or Range. Integer or range between 0 and 65535. Asterix '*' can also be used to match all ports."
        },
        "destinationPortRange": {
          "type": "string",
          "description": "Gets or sets Destination Port or Range. Integer or range between 0 and 65535. Asterix '*' can also be used to match all ports."
        },
        "sourceAddressPrefix": {
          "type": "string",
          "description": "Gets or sets source address prefix. CIDR or source IP range. Asterix '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used. If this is an ingress rule, specifies where network traffic originates from. "
        },
        "destinationAddressPrefix": {
          "type": "string",
          "description": "Gets or sets destination address prefix. CIDR or source IP range. Asterix '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used. "
        },
        "access": {
          "type": "string",
          "description": "Gets or sets network traffic is allowed or denied. Possible values are 'Allow' and 'Deny'",
          "enum": [
            "Allow",
            "Deny"
          ],
          "x-ms-enum": {
            "name": "SecurityRuleAccess",
            "modelAsString": true
          }
        },
        "priority": {
          "type": "integer",
          "format": "int32",
          "description": "Gets or sets the priority of the rule. The value can be between 100 and 4096. The priority number must be unique for each rule in the collection. The lower the priority number, the higher the priority of the rule."
        },
        "direction": {
          "type": "string",
          "description": "Gets or sets the direction of the rule.InBound or Outbound. The direction specifies if rule will be evaluated on incoming or outcoming traffic.",
          "enum": [
            "Inbound",
            "Outbound"
          ],
          "x-ms-enum": {
            "name": "SecurityRuleDirection",
            "modelAsString": true
          }
        },
        "provisioningState": {
          "type": "string",
          "description": "Gets provisioning state of the PublicIP resource Updating/Deleting/Failed"
        }
      },
      "required": [
        "protocol",
        "sourceAddressPrefix",
        "destinationAddressPrefix",
        "access",
        "direction"
      ]
    },
    "SecurityRule": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/SecurityRulePropertiesFormat"
        },
        "name": {
          "type": "string",
          "description": "Gets name of the resource that is unique within a resource group. This name can be used to access the resource"
        },
        "etag": {
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/SubResource"
        }
      ],
      "description": "Network security rule"
    },
    "NetworkSecurityGroupPropertiesFormat": {
      "properties": {
        "securityRules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SecurityRule"
          },
          "description": "Gets or sets security rules of network security group"
        },
        "defaultSecurityRules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SecurityRule"
          },
          "description": "Gets or default security rules of network security group"
        },
        "networkInterfaces": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/NetworkInterface"
          },
          "description": "Gets collection of references to Network Interfaces"
        },
        "subnets": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/Subnet"
          },
          "description": "Gets collection of references to subnets"
        },
        "resourceGuid": {
          "type": "string",
          "description": "Gets or sets resource guid property of the network security group resource"
        },
        "provisioningState": {
          "type": "string",
          "description": "Gets provisioning state of the PublicIP resource Updating/Deleting/Failed"
        }
      },
      "description": "Network Security Group resource"
    },
    "NetworkSecurityGroup": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/NetworkSecurityGroupPropertiesFormat"
        },
        "etag": {
          "type": "string",
          "description": "Gets a unique read-only string that changes whenever the resource is updated"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "description": "NetworkSecurityGroup resource"
    },
    "EffectiveNetworkSecurityGroup": {
      "properties": {
        "networkSecurityGroup": {
          "$ref": "#/definitions/SubResource",
          "description": "Gets the id of network security group that is applied"
        },
        "association": {
          "$ref": "#/definitions/EffectiveNetworkSecurityGroupAssociation"
        },
        "effectiveSecurityRules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EffectiveNetworkSecurityRule"
          },
          "description": "Gets collection of effective security rules"
        }
      },
      "description": "Effective NetworkSecurityGroup"
    },
    "EffectiveNetworkSecurityGroupAssociation": {
      "properties": {
        "subnet": {
          "$ref": "#/definitions/SubResource",
          "description": "Gets the id of subnet if assigned"
        },
        "networkInterface": {
          "$ref": "#/definitions/SubResource",
          "description": "Gets the id of network interface if assigned"
        }
      },
      "description": "Effective NetworkSecurityGroup association"
    },
    "EffectiveNetworkSecurityRule": {
      "properties": {
        "name": {
          "type": "string",
          "description": "Gets the name of the security rule specified by the user (if created by the user)"
        },
        "protocol": {
          "type": "string",
          "description": "Gets Network protocol this rule applies to",
          "enum": [
            "Tcp",
            "Udp",
            "*"
          ],
          "x-ms-enum": {
            "name": "SecurityRuleProtocol",
            "modelAsString": true
          }
        },
        "sourcePortRange": {
          "type": "string",
          "description": "Gets source port or range"
        },
        "destinationPortRange": {
          "type": "string",
          "description": "Gets destination port or range"
        },
        "sourceAddressPrefix": {
          "type": "string",
          "description": "Gets source address prefix"
        },
        "destinationAddressPrefix": {
          "type": "string",
          "description": "Gets destination address prefix"
        },
        "expandedSourceAddressPrefix": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Gets expanded source address prefix"
        },
        "expandedDestinationAddressPrefix": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Gets expanded destination address prefix"
        },
        "access": {
          "type": "string",
          "description": "Gets network traffic is allowed or denied",
          "enum": [
            "Allow",
            "Deny"
          ],
          "x-ms-enum": {
            "name": "SecurityRuleAccess",
            "modelAsString": true
          }
        },
        "priority": {
          "type": "integer",
          "format": "int32",
          "description": "Gets the priority of the rule"
        },
        "direction": {
          "type": "string",
          "description": "Gets the direction of the rule",
          "enum": [
            "Inbound",
            "Outbound"
          ],
          "x-ms-enum": {
            "name": "SecurityRuleDirection",
            "modelAsString": true
          }
        }
      },
      "description": "Effective NetworkSecurityRules"
    },
    "EffectiveNetworkSecurityGroupListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EffectiveNetworkSecurityGroup"
          },
          "description": "Gets list of effective network security groups"
        },
        "nextLink": {
          "type": "string",
          "description": "Gets the URL to get the next set of results."
        }
      },
      "description": "Response for list effective network security groups api service call"
    },
    "NetworkSecurityGroupListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NetworkSecurityGroup"
          },
          "description": "Gets List of NetworkSecurityGroups"
        },
        "nextLink": {
          "type": "string",
          "description": "Gets the URL to get the next set of results."
        }
      },
      "description": "Response for ListNetworkSecurityGroups Api service call"
    },
    "PublicIPAddressDnsSettings": {
      "properties": {
        "domainNameLabel": {
          "type": "string",
          "description": "Gets or sets the Domain name label.The concatenation of the domain name label and the regionalized DNS zone make up the fully qualified domain name associated with the public IP address. If a domain name label is specified, an A DNS record is created for the public IP in the Microsoft Azure DNS system."
        },
        "fqdn": {
          "type": "string",
          "description": "Gets the FQDN, Fully qualified domain name of the A DNS record associated with the public IP. This is the concatenation of the domainNameLabel and the regionalized DNS zone."
        },
        "reverseFqdn": {
          "type": "string",
          "description": "Gets or Sets the Reverse FQDN. A user-visible, fully qualified domain name that resolves to this public IP address. If the reverseFqdn is specified, then a PTR DNS record is created pointing from the IP address in the in-addr.arpa domain to the reverse FQDN. "
        }
      },
      "description": "Contains FQDN of the DNS record associated with the public IP address"
    },
    "PublicIPAddressPropertiesFormat": {
      "properties": {
        "publicIPAllocationMethod": {
          "type": "string",
          "description": "Gets or sets PublicIP allocation method (Static/Dynamic)",
          "enum": [
            "Static",
            "Dynamic"
          ],
          "x-ms-enum": {
            "name": "IPAllocationMethod",
            "modelAsString": true
          }
        },
        "publicIPAddressVersion": {
          "type": "string",
          "description": "Gets or sets PublicIP address version (IPv4/IPv6)",
          "enum": [
            "IPv4",
            "IPv6"
          ],
          "x-ms-enum": {
            "name": "IPVersion",
            "modelAsString": true
          }
        },
        "ipConfiguration": {
          "readOnly": true,
          "$ref": "#/definitions/IPConfiguration"
        },
        "dnsSettings": {
          "$ref": "#/definitions/PublicIPAddressDnsSettings",
          "description": "Gets or sets FQDN of the DNS record associated with the public IP address"
        },
        "ipAddress": {
          "type": "string"
        },
        "idleTimeoutInMinutes": {
          "type": "integer",
          "format": "int32",
          "description": "Gets or sets the Idletimeout of the public IP address"
        },
        "resourceGuid": {
          "type": "string",
          "description": "Gets or sets resource guid property of the PublicIP resource"
        },
        "provisioningState": {
          "type": "string",
          "description": "Gets provisioning state of the PublicIP resource Updating/Deleting/Failed"
        }
      },
      "description": "PublicIpAddress properties"
    },
    "PublicIPAddress": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/PublicIPAddressPropertiesFormat"
        },
        "etag": {
          "type": "string",
          "description": "Gets a unique read-only string that changes whenever the resource is updated"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "description": "PublicIPAddress resource"
    },
    "PublicIPAddressListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PublicIPAddress"
          },
          "description": "Gets List of publicIP addresses that exists in a resource group"
        },
        "nextLink": {
          "type": "string",
          "description": "Gets the URL to get the next set of results."
        }
      },
      "description": "Response for ListPublicIpAddresses Api service call"
    },
    "RoutePropertiesFormat": {
      "properties": {
        "addressPrefix": {
          "type": "string",
          "description": "Gets or sets the destination CIDR to which the route applies."
        },
        "nextHopType": {
          "type": "string",
          "description": "Gets or sets the type of Azure hop the packet should be sent to.",
          "enum": [
            "VirtualNetworkGateway",
            "VnetLocal",
            "Internet",
            "VirtualAppliance",
            "None"
          ],
          "x-ms-enum": {
            "name": "RouteNextHopType",
            "modelAsString": true
          }
        },
        "nextHopIpAddress": {
          "type": "string",
          "description": "Gets or sets the IP address packets should be forwarded to. Next hop values are only allowed in routes where the next hop type is VirtualAppliance."
        },
        "provisioningState": {
          "type": "string",
          "description": "Gets provisioning state of the resource Updating/Deleting/Failed"
        }
      },
      "required": [
        "nextHopType"
      ],
      "description": "Route resource"
    },
    "EffectiveRoute": {
      "properties": {
        "name": {
          "type": "string",
          "description": "Gets the name of the user defined route. This is optional."
        },
        "source": {
          "type": "string",
          "description": "Gets who created the route",
          "enum": [
            "Unknown",
            "User",
            "VirtualNetworkGateway",
            "Default"
          ],
          "x-ms-enum": {
            "name": "EffectiveRouteSource",
            "modelAsString": true
          }
        },
        "state": {
          "type": "string",
          "description": "Gets value of effective route",
          "enum": [
            "Active",
            "Invalid"
          ],
          "x-ms-enum": {
            "name": "EffectiveRouteState",
            "modelAsString": true
          }
        },
        "addressPrefix": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Gets address prefixes of the effective routes in CIDR notation."
        },
        "nextHopIpAddress": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Gets the IP address of the next hop of the effective route"
        },
        "nextHopType": {
          "type": "string",
          "description": "Gets or sets the type of Azure hop the packet should be sent to.",
          "enum": [
            "VirtualNetworkGateway",
            "VnetLocal",
            "Internet",
            "VirtualAppliance",
            "None"
          ],
          "x-ms-enum": {
            "name": "RouteNextHopType",
            "modelAsString": true
          }
        }
      },
      "description": "Effective Route"
    },
    "EffectiveRouteListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EffectiveRoute"
          },
          "description": "Gets list of effective routes"
        },
        "nextLink": {
          "type": "string",
          "description": "Gets the URL to get the next set of results."
        }
      },
      "description": "Response for list effective route api service call"
    },
    "Route": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/RoutePropertiesFormat"
        },
        "name": {
          "type": "string",
          "description": "Gets name of the resource that is unique within a resource group. This name can be used to access the resource"
        },
        "etag": {
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/SubResource"
        }
      ],
      "description": "Route resource"
    },
    "RouteTablePropertiesFormat": {
      "properties": {
        "routes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Route"
          },
          "description": "Gets or sets Routes in a Route Table"
        },
        "subnets": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/Subnet"
          },
          "description": "Gets collection of references to subnets"
        },
        "provisioningState": {
          "type": "string",
          "description": "Gets provisioning state of the resource Updating/Deleting/Failed"
        }
      },
      "description": "Route Table resource"
    },
    "RouteTable": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/RouteTablePropertiesFormat"
        },
        "etag": {
          "type": "string",
          "description": "Gets a unique read-only string that changes whenever the resource is updated"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "description": "RouteTable resource"
    },
    "RouteTableListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RouteTable"
          },
          "description": "Gets List of RouteTables in a resource group"
        },
        "nextLink": {
          "type": "string",
          "description": "Gets the URL to get the next set of results."
        }
      },
      "description": "Response for ListRouteTable Api service call"
    },
    "RouteListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Route"
          },
          "description": "Gets List of Routes in a resource group"
        },
        "nextLink": {
          "type": "string",
          "description": "Gets the URL to get the next set of results."
        }
      },
      "description": "Response for ListRoute Api service call"
    },
    "SecurityRuleListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SecurityRule"
          },
          "description": "Gets security rules in a network security group"
        },
        "nextLink": {
          "type": "string",
          "description": "Gets the URL to get the next set of results."
        }
      },
      "description": "Response for ListSecurityRule Api service callRetrieves all security rules that belongs to a network security group"
    },
    "IPConfigurationPropertiesFormat": {
      "properties": {
        "privateIPAddress": {
          "type": "string",
          "description": "Gets or sets the privateIPAddress of the IP Configuration"
        },
        "privateIPAllocationMethod": {
          "type": "string",
          "description": "Gets or sets PrivateIP allocation method",
          "enum": [
            "Static",
            "Dynamic"
          ],
          "x-ms-enum": {
            "name": "IPAllocationMethod",
            "modelAsString": true
          }
        },
        "subnet": {
          "$ref": "#/definitions/Subnet",
          "description": "Gets or sets the reference of the subnet resource"
        },
        "publicIPAddress": {
          "$ref": "#/definitions/PublicIPAddress",
          "description": "Gets or sets the reference of the PublicIP resource"
        },
        "provisioningState": {
          "type": "string",
          "description": "Gets provisioning state of the PublicIP resource Updating/Deleting/Failed"
        }
      },
      "description": "Properties of IPConfiguration"
    },
    "IPConfiguration": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/IPConfigurationPropertiesFormat"
        },
        "name": {
          "type": "string",
          "description": "Gets name of the resource that is unique within a resource group. This name can be used to access the resource"
        },
        "etag": {
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/SubResource"
        }
      ],
      "description": "IPConfiguration"
    },
    "ResourceNavigationLinkFormat": {
      "properties": {
        "linkedResourceType": {
          "type": "string",
          "description": "Resource type of the linked resource"
        },
        "link": {
          "type": "string",
          "description": "Link to the external resource"
        },
        "provisioningState": {
          "readOnly": true,
          "type": "string",
          "description": "Provisioning state of the ResourceNavigationLink resource"
        }
      },
      "description": "Properties of ResourceNavigationLink"
    },
    "ResourceNavigationLink": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ResourceNavigationLinkFormat"
        },
        "name": {
          "type": "string",
          "description": "Name of the resource that is unique within a resource group. This name can be used to access the resource"
        },
        "etag": {
          "readOnly": true,
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/SubResource"
        }
      ],
      "description": "ResourceNavigationLink resource"
    },
    "SubnetPropertiesFormat": {
      "properties": {
        "addressPrefix": {
          "type": "string",
          "description": "Gets or sets Address prefix for the subnet."
        },
        "networkSecurityGroup": {
          "$ref": "#/definitions/NetworkSecurityGroup",
          "description": "Gets or sets the reference of the NetworkSecurityGroup resource"
        },
        "routeTable": {
          "$ref": "#/definitions/RouteTable",
          "description": "Gets or sets the reference of the RouteTable resource"
        },
        "ipConfigurations": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/IPConfiguration"
          },
          "description": "Gets array of references to the network interface IP configurations using subnet"
        },
        "resourceNavigationLinks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResourceNavigationLink"
          },
          "description": "Gets array of references to the external resources using subnet"
        },
        "provisioningState": {
          "type": "string",
          "description": "Gets provisioning state of the resource"
        }
      }
    },
    "VirtualNetworkPeeringPropertiesFormat": {
      "properties": {
        "allowVirtualNetworkAccess": {
          "type": "boolean",
          "description": "Gets or sets whether the VMs in the linked virtual network space would be able to access all the VMs in local Virtual network space"
        },
        "allowForwardedTraffic": {
          "type": "boolean",
          "description": "Gets or sets whether the forwarded traffic from the VMs in the remote virtual network will be allowed/disallowed"
        },
        "allowGatewayTransit": {
          "type": "boolean",
          "description": "Gets or sets if gatewayLinks can be used in remote virtual network’s link to this virtual network"
        },
        "useRemoteGateways": {
          "type": "boolean",
          "description": "Gets or sets if remote gateways can be used on this virtual network. If the flag is set to true, and allowGatewayTransit on remote peering is also true, virtual network will use gateways of remote virtual network for transit. Only 1 peering can have this flag set to true. This flag cannot be set if virtual network already has a gateway."
        },
        "remoteVirtualNetwork": {
          "$ref": "#/definitions/SubResource",
          "description": "Gets or sets the reference of the remote virtual network"
        },
        "peeringState": {
          "type": "string",
          "description": "Gets the status of the virtual network peering",
          "enum": [
            "Initiated",
            "Connected",
            "Disconnected"
          ],
          "x-ms-enum": {
            "name": "VirtualNetworkPeeringState",
            "modelAsString": true
          }
        },
        "provisioningState": {
          "type": "string",
          "description": "Gets provisioning state of the resource"
        }
      }
    },
    "Subnet": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/SubnetPropertiesFormat"
        },
        "name": {
          "type": "string",
          "description": "Gets or sets the name of the resource that is unique within a resource group. This name can be used to access the resource"
        },
        "etag": {
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/SubResource"
        }
      ],
      "description": "Subnet in a VirtualNework resource"
    },
    "VirtualNetworkPeering": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/VirtualNetworkPeeringPropertiesFormat"
        },
        "name": {
          "type": "string",
          "description": "Gets or sets the name of the resource that is unique within a resource group. This name can be used to access the resource"
        },
        "etag": {
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/SubResource"
        }
      ],
      "description": "Peerings in a VirtualNework resource"
    },
    "SubnetListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Subnet"
          },
          "description": "Gets the subnets in a virtual network"
        },
        "nextLink": {
          "type": "string",
          "description": "Gets the URL to get the next set of results."
        }
      },
      "description": "Response for ListSubnets Api service callRetrieves all subnet that belongs to a virtual network"
    },
    "VirtualNetworkPeeringListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VirtualNetworkPeering"
          },
          "description": "Gets the peerings in a virtual network"
        },
        "nextLink": {
          "type": "string",
          "description": "Gets the URL to get the next set of results."
        }
      },
      "description": "Response for ListSubnets Api service callRetrieves all subnet that belongs to a virtual network"
    },
    "UsageName": {
      "properties": {
        "value": {
          "type": "string",
          "description": "Gets or sets a string describing the resource name."
        },
        "localizedValue": {
          "type": "string",
          "description": "Gets or sets a localized string describing the resource name."
        }
      },
      "description": "The Usage Names."
    },
    "Usage": {
      "properties": {
        "unit": {
          "type": "string",
          "description": "Gets or sets an enum describing the unit of measurement.",
          "enum": [
            "Count"
          ],
          "x-ms-enum": {
            "name": "UsageUnit",
            "modelAsString": true
          }
        },
        "currentValue": {
          "type": "integer",
          "format": "int64",
          "description": "Gets or sets the current value of the usage."
        },
        "limit": {
          "type": "integer",
          "format": "int64",
          "description": "Gets or sets the limit of usage."
        },
        "name": {
          "$ref": "#/definitions/UsageName",
          "description": "Gets or sets the name of the type of usage."
        }
      },
      "required": [
        "unit",
        "currentValue",
        "limit",
        "name"
      ],
      "description": "Describes Network Resource Usage."
    },
    "UsagesListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Usage"
          },
          "description": "Gets or sets the list Network Resource Usages."
        },
        "nextLink": {
          "type": "string",
          "description": "URL to get the next set of results."
        }
      },
      "description": "The List Usages operation response."
    },
    "VirtualNetworkGatewayIPConfigurationPropertiesFormat": {
      "properties": {
        "privateIPAllocationMethod": {
          "type": "string",
          "description": "Gets or sets PrivateIP allocation method",
          "enum": [
            "Static",
            "Dynamic"
          ],
          "x-ms-enum": {
            "name": "IPAllocationMethod",
            "modelAsString": true
          }
        },
        "subnet": {
          "$ref": "#/definitions/SubResource",
          "description": "Gets or sets the reference of the subnet resource"
        },
        "publicIPAddress": {
          "$ref": "#/definitions/SubResource",
          "description": "Gets or sets the reference of the PublicIP resource"
        },
        "provisioningState": {
          "type": "string",
          "description": "Gets provisioning state of the PublicIP resource Updating/Deleting/Failed"
        }
      },
      "description": "Properties of VirtualNetworkGatewayIPConfiguration"
    },
    "VirtualNetworkGatewayIPConfiguration": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/VirtualNetworkGatewayIPConfigurationPropertiesFormat"
        },
        "name": {
          "type": "string",
          "description": "Gets name of the resource that is unique within a resource group. This name can be used to access the resource"
        },
        "etag": {
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/SubResource"
        }
      ],
      "description": "IpConfiguration for Virtual network gateway"
    },
    "VirtualNetworkGatewayPropertiesFormat": {
      "properties": {
        "ipConfigurations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VirtualNetworkGatewayIPConfiguration"
          },
          "description": "IpConfigurations for Virtual network gateway."
        },
        "gatewayType": {
          "type": "string",
          "description": "The type of this virtual network gateway.",
          "enum": [
            "Vpn",
            "ExpressRoute"
          ],
          "x-ms-enum": {
            "name": "VirtualNetworkGatewayType",
            "modelAsString": true
          }
        },
        "vpnType": {
          "type": "string",
          "description": "The type of this virtual network gateway.",
          "enum": [
            "PolicyBased",
            "RouteBased"
          ],
          "x-ms-enum": {
            "name": "VpnType",
            "modelAsString": true
          }
        },
        "enableBgp": {
          "type": "boolean",
          "description": "EnableBgp Flag"
        },
	"activeActive": {
          "type": "boolean",
          "description": "ActiveActive flag"
        },
        "gatewayDefaultSite": {
          "$ref": "#/definitions/SubResource",
          "description": "Gets or sets the reference of the LocalNetworkGateway resource which represents Local network site having default routes. Assign Null value in case of removing existing default site setting."
        },
        "sku": {
          "$ref": "#/definitions/VirtualNetworkGatewaySku",
          "description": "Gets or sets the reference of the VirtualNetworkGatewaySku resource which represents the sku selected for Virtual network gateway."
        },
        "vpnClientConfiguration": {
          "$ref": "#/definitions/VpnClientConfiguration",
          "description": "Gets or sets the reference of the VpnClientConfiguration resource which represents the P2S VpnClient configurations."
        },
        "bgpSettings": {
          "$ref": "#/definitions/BgpSettings",
          "description": "Virtual network gateway's BGP speaker settings"
        },
        "resourceGuid": {
          "type": "string",
          "description": "Gets or sets resource guid property of the VirtualNetworkGateway resource"
        },
        "provisioningState": {
          "type": "string",
          "description": "Gets provisioning state of the VirtualNetworkGateway resource Updating/Deleting/Failed"
        }
      },
      "description": "VirtualNetworkGateway properties"
    },
    "VirtualNetworkGateway": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/VirtualNetworkGatewayPropertiesFormat"
        },
        "etag": {
          "type": "string",
          "description": "Gets a unique read-only string that changes whenever the resource is updated"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "description": "A common class for general resource information"
    },
    "VpnClientConfiguration": {
      "properties": {
        "vpnClientAddressPool": {
          "$ref": "#/definitions/AddressSpace",
          "description": "Gets or sets the reference of the Address space resource which represents Address space for P2S VpnClient."
        },
        "vpnClientRootCertificates": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VpnClientRootCertificate"
          },
          "description": "VpnClientRootCertificate for Virtual network gateway."
        },
        "vpnClientRevokedCertificates": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VpnClientRevokedCertificate"
          },
          "description": "VpnClientRevokedCertificate for Virtual network gateway."
        }
      },
      "description": "VpnClientConfiguration for P2S client"
    },
    "VirtualNetworkGatewaySku": {
      "properties": {
        "name": {
          "type": "string",
          "description": "Gateway sku name -Basic/HighPerformance/Standard/UltraPerformance",
          "enum": [
            "Basic",
            "HighPerformance",
            "Standard",
            "UltraPerformance"
          ],
          "x-ms-enum": {
            "name": "VirtualNetworkGatewaySkuName",
            "modelAsString": true
          }
        },
        "tier": {
          "type": "string",
          "description": "Gateway sku tier -Basic/HighPerformance/Standard/UltraPerformance",
          "enum": [
            "Basic",
            "HighPerformance",
            "Standard",
            "UltraPerformance"
          ],
          "x-ms-enum": {
            "name": "VirtualNetworkGatewaySkuTier",
            "modelAsString": true
          }
        },
        "capacity": {
          "type": "integer",
          "format": "int32",
          "description": "The capacity"
        }
      },
      "description": "VirtualNetworkGatewaySku details"
    },
    "VpnClientParameters": {
      "properties": {
        "ProcessorArchitecture": {
          "type": "string",
          "description": "VPN client Processor Architecture -Amd64/X86",
          "enum": [
            "Amd64",
            "X86"
          ],
          "x-ms-enum": {
            "name": "ProcessorArchitecture",
            "modelAsString": true
          }
        }
      },
      "description": "VpnClientParameters"
    },
    "VirtualNetworkGatewayConnectionPropertiesFormat": {
      "properties": {
        "authorizationKey": {
          "type": "string",
          "description": "The authorizationKey."
        },
        "virtualNetworkGateway1": {
          "$ref": "#/definitions/VirtualNetworkGateway"
        },
        "virtualNetworkGateway2": {
          "$ref": "#/definitions/VirtualNetworkGateway"
        },
        "localNetworkGateway2": {
          "$ref": "#/definitions/LocalNetworkGateway"
        },
        "connectionType": {
          "type": "string",
          "description": "Gateway connection type -Ipsec/Dedicated/VpnClient/Vnet2Vnet",
          "enum": [
            "IPsec",
            "Vnet2Vnet",
            "ExpressRoute",
            "VPNClient"
          ],
          "x-ms-enum": {
            "name": "VirtualNetworkGatewayConnectionType",
            "modelAsString": true
          }
        },
        "routingWeight": {
          "type": "integer",
          "format": "int32",
          "description": "The Routing weight."
        },
        "sharedKey": {
          "type": "string",
          "description": "The Ipsec share key."
        },
        "connectionStatus": {
          "type": "string",
          "description": "Virtual network Gateway connection status",
          "enum": [
            "Unknown",
            "Connecting",
            "Connected",
            "NotConnected"
          ],
          "x-ms-enum": {
            "name": "VirtualNetworkGatewayConnectionStatus",
            "modelAsString": true
          }
        },
        "egressBytesTransferred": {
          "type": "integer",
          "format": "int64",
          "description": "The Egress Bytes Transferred in this connection"
        },
        "ingressBytesTransferred": {
          "type": "integer",
          "format": "int64",
          "description": "The Ingress Bytes Transferred in this connection"
        },
        "peer": {
          "$ref": "#/definitions/SubResource",
          "description": "The reference to peerings resource."
        },
        "enableBgp": {
          "type": "boolean",
          "description": "EnableBgp Flag"
        },
        "resourceGuid": {
          "type": "string",
          "description": "Gets or sets resource guid property of the VirtualNetworkGatewayConnection resource"
        },
        "provisioningState": {
          "type": "string",
          "description": "Gets provisioning state of the VirtualNetworkGatewayConnection resource Updating/Deleting/Failed"
        }
      },
      "description": "VirtualNetworkGatewayConnection properties"
    },
    "VirtualNetworkGatewayConnection": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/VirtualNetworkGatewayConnectionPropertiesFormat"
        },
        "etag": {
          "type": "string",
          "description": "Gets a unique read-only string that changes whenever the resource is updated"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "description": "A common class for general resource information"
    },
    "VpnClientRevokedCertificatePropertiesFormat": {
      "properties": {
        "thumbprint": {
          "type": "string",
          "description": "Gets or sets the revoked Vpn client certificate thumbprint"
        },
        "provisioningState": {
          "type": "string",
          "description": "Gets provisioning state of the VPN client revoked certificate resource Updating/Deleting/Failed"
        }
      },
      "description": "Properties of the revoked VPN client certificate of virtual network gateway"
    },
    "VpnClientRevokedCertificate": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/VpnClientRevokedCertificatePropertiesFormat"
        },
        "name": {
          "type": "string",
          "description": "Gets name of the resource that is unique within a resource group. This name can be used to access the resource"
        },
        "etag": {
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/SubResource"
        }
      ],
      "description": "VPN client revoked certificate of virtual network gateway"
    },
    "VpnClientRootCertificatePropertiesFormat": {
      "properties": {
        "publicCertData": {
          "type": "string",
          "description": "Gets or sets the certificate public data"
        },
        "provisioningState": {
          "type": "string",
          "description": "Gets provisioning state of the VPN client root certificate resource Updating/Deleting/Failed"
        }
      },
      "description": "Properties of SSL certificates of application gateway"
    },
    "VpnClientRootCertificate": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/VpnClientRootCertificatePropertiesFormat"
        },
        "name": {
          "type": "string",
          "description": "Gets name of the resource that is unique within a resource group. This name can be used to access the resource"
        },
        "etag": {
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/SubResource"
        }
      ],
      "description": "VPN client root certificate of virtual network gateway"
    },
    "ConnectionSharedKeyResult": {
      "properties": {
        "value": {
          "type": "string",
          "description": "The virtual network connection shared key value"
        }
      },
      "description": "Response for CheckConnectionSharedKey Api service call"
    },
    "VirtualNetworkGatewayConnectionListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VirtualNetworkGatewayConnection"
          },
          "description": "Gets List of VirtualNetworkGatewayConnections that exists in a resource group"
        },
        "nextLink": {
          "type": "string",
          "description": "Gets the URL to get the next set of results."
        }
      },
      "description": "Response for ListVirtualNetworkGatewayConnections Api service call"
    },
    "ConnectionResetSharedKey": {
      "properties": {
        "keyLength": {
          "type": "integer",
          "format": "int64",
          "description": "The virtual network connection reset shared key length"
        }
      }
    },
    "ConnectionSharedKey": {
      "properties": {
        "value": {
          "type": "string",
          "description": "The virtual network connection shared key value"
        }
      },
      "description": "Response for GetConnectionSharedKey Api service call"
    },
    "VirtualNetworkGatewayListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VirtualNetworkGateway"
          },
          "description": "Gets List of VirtualNetworkGateways that exists in a resource group"
        },
        "nextLink": {
          "type": "string",
          "description": "Gets the URL to get the next set of results."
        }
      },
      "description": "Response for ListVirtualNetworkGateways Api service call"
    },
    "DhcpOptions": {
      "properties": {
        "dnsServers": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Gets or sets list of DNS servers IP addresses"
        }
      },
      "description": "DHCPOptions contains an array of DNS servers available to VMs deployed in the virtual networkStandard DHCP option for a subnet overrides VNET DHCP options."
    },
    "VirtualNetworkPropertiesFormat": {
      "properties": {
        "addressSpace": {
          "$ref": "#/definitions/AddressSpace",
          "description": "Gets or sets AddressSpace that contains an array of IP address ranges that can be used by subnets"
        },
        "dhcpOptions": {
          "$ref": "#/definitions/DhcpOptions",
          "description": "Gets or sets DHCPOptions that contains an array of DNS servers available to VMs deployed in the virtual network"
        },
        "subnets": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Subnet"
          },
          "description": "Gets or sets list of subnets in a VirtualNetwork"
        },
        "VirtualNetworkPeerings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VirtualNetworkPeering"
          },
          "description": "Gets or sets list of peerings in a VirtualNetwork"
        },
        "resourceGuid": {
          "type": "string",
          "description": "Gets or sets resource guid property of the VirtualNetwork resource"
        },
        "provisioningState": {
          "type": "string",
          "description": "Gets provisioning state of the PublicIP resource Updating/Deleting/Failed"
        }
      }
    },
    "VirtualNetwork": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/VirtualNetworkPropertiesFormat"
        },
        "etag": {
          "type": "string",
          "description": "Gets a unique read-only string that changes whenever the resource is updated"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "description": "Virtual Network resource"
    },
    "VirtualNetworkListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VirtualNetwork"
          },
          "description": "Gets list of VirtualNetworks in a resource group"
        },
        "nextLink": {
          "type": "string",
          "description": "Gets the URL to get the next set of results."
        }
      },
      "description": "Response for ListVirtualNetworks Api service call"
    },
    "DnsNameAvailabilityResult": {
      "properties": {
        "available": {
          "type": "boolean",
          "description": "Domain availability (True/False)"
        }
      },
      "description": "Response for CheckDnsNameAvailability Api service call"
    },
    "IPAddressAvailabilityResult": {
      "properties": {
        "available": {
          "type": "boolean",
          "description": "Private IP address availability"
        },
        "availableIPAddresses": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Contains other available private IP addresses if the asked for address is taken"
        }
      },
      "description": "Response for CheckIPAddressAvailability Api service call"
    },
    "ErrorDetails": {
      "properties": {
        "code": {
          "type": "string"
        },
        "target": {
          "type": "string"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "Error": {
      "properties": {
        "code": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "target": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ErrorDetails"
          }
        },
        "innerError": {
          "type": "string"
        }
      }
    },
    "AzureAsyncOperationResult": {
      "properties": {
        "status": {
          "type": "string",
          "description": "Status of the AzureAsyncOperation",
          "enum": [
            "InProgress",
            "Succeeded",
            "Failed"
          ],
          "x-ms-enum": {
            "name": "NetworkOperationStatus",
            "modelAsString": true
          }
        },
        "error": {
          "$ref": "#/definitions/Error"
        }
      },
      "description": "The response body contains the status of the specified asynchronous operation, indicating whether it has succeeded, is in progress, or has failed. Note that this status is distinct from the HTTP status code returned for the Get Operation Status operation itself. If the asynchronous operation succeeded, the response body includes the HTTP status code for the successful request. If the asynchronous operation failed, the response body includes the HTTP status code for the failed request and error information regarding the failure."
    },
    "Resource": {
      "properties": {
        "id": {
          "type": "string",
          "description": "Resource Id"
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Resource name"
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "Resource type"
        },
        "location": {
          "type": "string",
          "description": "Resource location"
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Resource tags"
        }
      },
      "x-ms-azure-resource": true
    },
    "SubResource": {
      "properties": {
        "id": {
          "type": "string",
          "description": "Resource Id"
        }
      },
      "x-ms-azure-resource": true
    }
  },
  "parameters": {
    "SubscriptionIdParameter": {
      "name": "subscriptionId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
    },
    "ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "required": true,
      "type": "string",
      "description": "Client Api Version."
    }
  }
}
