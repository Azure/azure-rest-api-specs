{
  "swagger": "2.0",
  "info": {
    "title": "NetworkManagementClient",
    "description": "The Microsoft Azure Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Microsoft Azure Networks service.",
    "version": "2020-03-01"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Azure Active Directory OAuth2 Flow.",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "paths": {
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/trustedSecurityPartners/{trustedSecurityPartnerName}": {
      "delete": {
        "tags": [
          "TrustedSecurityPartners"
        ],
        "operationId": "TrustedSecurityPartners_Delete",
        "description": "Deletes the specified Trusted Security Partner.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "trustedSecurityPartnerName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Trusted Security Partner."
          },
          {
            "$ref": "./network.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./network.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted and the operation will complete asynchronously."
          },
          "204": {
            "description": "Request successful. Resource with the specified name does not exist."
          },
          "200": {
            "description": "Delete successful."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Delete Trusted Security Partner": {
            "$ref": "./examples/TrustedSecurityPartnerDelete.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      },
      "get": {
        "tags": [
          "TrustedSecurityPartners"
        ],
        "operationId": "TrustedSecurityPartners_Get",
        "description": "Gets the specified Trusted Security Partner.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "trustedSecurityPartnerName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Trusted Security Partner."
          },
          {
            "$ref": "./network.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./network.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns a TrustedSecurityPartner resource.",
            "schema": {
              "$ref": "#/definitions/TrustedSecurityPartner"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Get Trusted Security Partner": {
            "$ref": "./examples/TrustedSecurityPartnerGet.json"
          }
        }
      },
      "put": {
        "tags": [
          "TrustedSecurityPartners"
        ],
        "operationId": "TrustedSecurityPartners_CreateOrUpdate",
        "description": "Creates or updates the specified Trusted Security Partner.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "trustedSecurityPartnerName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Trusted Security Partner."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TrustedSecurityPartner"
            },
            "description": "Parameters supplied to the create or update Trusted Security Partner operation."
          },
          {
            "$ref": "./network.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./network.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "201": {
            "description": "Create successful. The operation returns the resulting TrustedSecurityPartner resource.",
            "schema": {
              "$ref": "#/definitions/TrustedSecurityPartner"
            }
          },
          "200": {
            "description": "Update successful. The operation returns the resulting TrustedSecurityPartner resource.",
            "schema": {
              "$ref": "#/definitions/TrustedSecurityPartner"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Create Trusted Security Partner": {
            "$ref": "./examples/TrustedSecurityPartnerPut.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      },
      "patch": {
        "tags": [
          "TrustedSecurityPartners"
        ],
        "operationId": "TrustedSecurityPartners_UpdateTags",
        "description": "Updates tags of a Trusted Security Partner resource.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "trustedSecurityPartnerName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Trusted Security Partner."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./network.json#/definitions/TagsObject"
            },
            "description": "Parameters supplied to update Trusted Security Partner tags."
          },
          {
            "$ref": "./network.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./network.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Update successful. The operation returns the resulting TrustedSecurityPartner resource.",
            "schema": {
              "$ref": "#/definitions/TrustedSecurityPartner"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Update Trusted Security Partner Tags": {
            "$ref": "./examples/TrustedSecurityPartnerUpdateTags.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/trustedSecurityPartners": {
      "get": {
        "tags": [
          "TrustedSecurityPartners"
        ],
        "operationId": "TrustedSecurityPartners_List",
        "description": "Lists all Trusted Security Partners in a resource group.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "$ref": "./network.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./network.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The operation returns a list of TrustedSecurityPartner resources.",
            "schema": {
              "$ref": "#/definitions/TrustedSecurityPartnerListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "List all Trusted Security Partners for a given resource group": {
            "$ref": "./examples/TrustedSecurityPartnerListByResourceGroup.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Network/trustedSecurityPartners": {
      "get": {
        "tags": [
          "TrustedSecurityPartners"
        ],
        "operationId": "TrustedSecurityPartners_ListAll",
        "description": "Gets all the Trusted Security Partners in a subscription.",
        "parameters": [
          {
            "$ref": "./network.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./network.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The operation returns a list of TrustedSecurityPartner resources.",
            "schema": {
              "$ref": "#/definitions/TrustedSecurityPartnerListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "List all Trusted Security Partners for a given subscription": {
            "$ref": "./examples/TrustedSecurityPartnerListBySubscription.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    }
  },
  "definitions": {
    "TrustedSecurityPartnerPropertiesFormat": {
      "properties": {
        "provisioningState": {
          "readOnly": true,
          "$ref": "./network.json#/definitions/ProvisioningState",
          "description": "The provisioning state of the Trusted Security Partner resource."
        },
        "securityProviderName": {
          "description": "The security provider name",
          "$ref": "#/definitions/TrustedSecurityPartnerSecurityProviderName"
        },
        "connectionStatus": {
          "readOnly": true,
          "description": "The connection status with the Trusted Security Partner.",
          "$ref": "#/definitions/TrustedSecurityPartnerConnectionStatus"
        },
        "virtualHub": {
          "$ref": "./network.json#/definitions/SubResource",
          "description": "The virtualHub to which the Trusted Security Partner belongs."
        }
      },
      "description": "Properties of the Trusted Security Partner."
    },
    "TrustedSecurityPartner": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/TrustedSecurityPartnerPropertiesFormat",
          "description": "Properties of the trusted security partner."
        },
        "etag": {
          "type": "string",
          "readOnly": true,
          "description": "A unique read-only string that changes whenever the resource is updated."
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/Resource"
        }
      ],
      "description": "Trusted Security Partner resource."
    },
    "TrustedSecurityPartnerSecurityProviderName": {
      "type": "string",
      "description": "The Security Providers.",
      "enum": [
        "ZScaler",
        "IBoss"
      ],
      "x-ms-enum": {
        "name": "SecurityProviderName",
        "modelAsString": true
      }
    },
    "TrustedSecurityPartnerConnectionStatus": {
      "type": "string",
      "description": "The current state of the connection with Trusted Security Partner.",
      "readOnly": true,
      "enum": [
        "Unknown",
        "PartiallyConnected",
        "Connected",
        "NotConnected"
      ],
      "x-ms-enum": {
        "name": "ConnectionStatus",
        "modelAsString": true
      }
    }
  }
}
