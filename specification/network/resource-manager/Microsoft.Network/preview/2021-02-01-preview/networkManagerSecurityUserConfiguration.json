{
  "swagger": "2.0",
  "info": {
    "title": "SecurityUserConfiguration",
    "version": "2021-02-01-preview"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Azure Active Directory OAuth2 Flow.",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "paths": {
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkManagers/{networkManagerName}/securityUserConfigurations": {
      "get": {
        "tags": [
          "SecurityUserConfigurations"
        ],
        "operationId": "SecurityUserConfigurations_List",
        "description": "Lists all the network manager security user configurations in a network manager, in a paginated format.",
        "parameters": [
          {
            "$ref": "./network.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./network.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/NetworkManagerNameParameter"
          },
          {
            "$ref": "#/parameters/ListTopParameter"
          },
          {
            "$ref": "#/parameters/ListSkipTokenParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Get successful. The operation returns all security user configurations in the specified network manager, in a paginated format",
            "schema": {
              "$ref": "./networkManagerSecurityAdminConfiguration.json#/definitions/SecurityConfigurationListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "List security user configurations in a network manager": {
            "$ref": "./examples/NetworkManagerSecurityUserConfigurationList.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkManagers/{networkManagerName}/securityUserConfigurations/{configurationName}": {
      "parameters": [
        {
          "$ref": "./network.json#/parameters/ApiVersionParameter"
        },
        {
          "$ref": "./network.json#/parameters/SubscriptionIdParameter"
        },
        {
          "$ref": "#/parameters/ResourceGroupNameParameter"
        },
        {
          "$ref": "#/parameters/NetworkManagerNameParameter"
        },
        {
          "$ref": "#/parameters/SecurityConfigurationParameter"
        }
      ],
      "get": {
        "tags": [
          "SecurityUserConfigurations"
        ],
        "description": "Retrieves a network manager security user configuration.",
        "operationId": "SecurityUserConfigurations_Get",
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "./networkManagerSecurityAdminConfiguration.json#/definitions/SecurityConfiguration"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Get security user configurations": {
            "$ref": "./examples/NetworkManagerSecurityUserConfigurationGet.json"
          }
        }
      },
      "put": {
        "tags": [
          "SecurityUserConfigurations"
        ],
        "description": "Creates or updates a network manager security user configuration.",
        "operationId": "SecurityUserConfigurations_CreateOrUpdate",
        "parameters": [
          {
            "name": "securityUserConfiguration",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./networkManagerSecurityAdminConfiguration.json#/definitions/SecurityConfiguration"
            },
            "description": "The security user configuration to create or update"
          }
        ],
        "responses": {
          "200": {
            "description": "Updated Configuration",
            "schema": {
              "$ref": "./networkManagerSecurityAdminConfiguration.json#/definitions/SecurityConfiguration"
            }
          },
          "201": {
            "description": "Created Configuration",
            "schema": {
              "$ref": "./networkManagerSecurityAdminConfiguration.json#/definitions/SecurityConfiguration"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Create network manager security user configuration": {
            "$ref": "./examples/NetworkManagerSecurityUserConfigurationPut.json"
          }
        }
      },
      "delete": {
        "tags": [
          "SecurityUserConfigurations"
        ],
        "description": "Deletes a network manager security user configuration.",
        "operationId": "SecurityUserConfigurations_Delete",
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "Request successful. Resource does not exist."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Delete network manager security user configuration": {
            "$ref": "./examples/NetworkManagerSecurityUserConfigurationDelete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkManagers/{networkManagerName}/securityUserConfigurations/{configurationName}/ruleCollections": {
      "get": {
        "tags": [
          "UserRuleCollections"
        ],
        "operationId": "UserRuleCollections_List",
        "description": "Lists all the user rule collections in a security configuration, in a paginated format.",
        "parameters": [
          {
            "$ref": "./network.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./network.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/NetworkManagerNameParameter"
          },
          {
            "$ref": "#/parameters/SecurityConfigurationParameter"
          },
          {
            "$ref": "#/parameters/ListTopParameter"
          },
          {
            "$ref": "#/parameters/ListSkipTokenParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Get successful. The operation returns all ruleCollections in the specified security configuration, in a paginated format",
            "schema": {
              "$ref": "./networkManagerSecurityAdminConfiguration.json#/definitions/RuleCollectionListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "List rule collections in a security configuration": {
            "$ref": "./examples/NetworkManagerUserRuleCollectionList.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkManagers/{networkManagerName}/securityUserConfigurations/{configurationName}/ruleCollections/{ruleCollectionName}": {
      "parameters": [
        {
          "$ref": "./network.json#/parameters/ApiVersionParameter"
        },
        {
          "$ref": "./network.json#/parameters/SubscriptionIdParameter"
        },
        {
          "$ref": "#/parameters/ResourceGroupNameParameter"
        },
        {
          "$ref": "#/parameters/NetworkManagerNameParameter"
        },
        {
          "$ref": "#/parameters/SecurityConfigurationParameter"
        },
        {
          "$ref": "#/parameters/RuleCollectionParameter"
        }
      ],
      "get": {
        "tags": [
          "RuleCollections"
        ],
        "description": "Gets a network manager security user configuration rule collection.",
        "operationId": "UserRuleCollections_Get",
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "./networkManagerSecurityAdminConfiguration.json#/definitions/RuleCollection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Gets security user rule collection": {
            "$ref": "./examples/NetworkManagerUserRuleCollectionGet.json"
          }
        }
      },
      "put": {
        "tags": [
          "UserRuleCollections"
        ],
        "description": "Creates or updates a user rule collection.",
        "operationId": "UserRuleCollections_CreateOrUpdate",
        "parameters": [
          {
            "name": "userRuleCollection",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./networkManagerSecurityAdminConfiguration.json#/definitions/RuleCollection"
            },
            "description": "The User Rule Collection to create or update"
          }
        ],
        "responses": {
          "200": {
            "description": "Updated User Rule Collection",
            "schema": {
              "$ref": "./networkManagerSecurityAdminConfiguration.json#/definitions/RuleCollection"
            }
          },
          "201": {
            "description": "Created User Rule Collection",
            "schema": {
              "$ref": "./networkManagerSecurityAdminConfiguration.json#/definitions/RuleCollection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Create or Update a User Rule Collection": {
            "$ref": "./examples/NetworkManagerUserRuleCollectionPut.json"
          }
        }
      },
      "delete": {
        "tags": [
          "UserRuleCollections"
        ],
        "description": "Deletes a user rule collection.",
        "operationId": "UserRuleCollections_Delete",
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "Request successful. Resource does not exist."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Deletes a user rule collection": {
            "$ref": "./examples/NetworkManagerUserRuleCollectionDelete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkManagers/{networkManagerName}/securityUserConfigurations/{configurationName}/ruleCollections/{ruleCollectionName}/rules": {
      "parameters": [
        {
          "$ref": "./network.json#/parameters/ApiVersionParameter"
        },
        {
          "$ref": "./network.json#/parameters/SubscriptionIdParameter"
        },
        {
          "$ref": "#/parameters/ResourceGroupNameParameter"
        },
        {
          "$ref": "#/parameters/NetworkManagerNameParameter"
        },
        {
          "$ref": "#/parameters/SecurityConfigurationParameter"
        },
        {
          "$ref": "#/parameters/RuleCollectionParameter"
        },
        {
          "$ref": "#/parameters/ListTopParameter"
        },
        {
          "$ref": "#/parameters/ListSkipTokenParameter"
        }
      ],
      "get": {
        "tags": [
          "UserRules"
        ],
        "description": "Lists all user rules in a rule collection.",
        "operationId": "UserRules_List",
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/UserRuleListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "List security user rules": {
            "$ref": "./examples/NetworkManagerUserRulesList.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkManagers/{networkManagerName}/securityUserConfigurations/{configurationName}/ruleCollections/{ruleCollectionName}/rules/{ruleName}": {
      "parameters": [
        {
          "$ref": "./network.json#/parameters/ApiVersionParameter"
        },
        {
          "$ref": "./network.json#/parameters/SubscriptionIdParameter"
        },
        {
          "$ref": "#/parameters/ResourceGroupNameParameter"
        },
        {
          "$ref": "#/parameters/NetworkManagerNameParameter"
        },
        {
          "$ref": "#/parameters/SecurityConfigurationParameter"
        },
        {
          "$ref": "#/parameters/RuleCollectionParameter"
        },
        {
          "$ref": "#/parameters/SecurityConfigurationsRuleParameter"
        }
      ],
      "get": {
        "tags": [
          "UserRules"
        ],
        "description": "Gets a user rule.",
        "operationId": "UserRules_Get",
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/BaseUserRule"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Gets a user rule": {
            "$ref": "./examples/NetworkManagerUserRuleGet.json"
          },
          "Gets a default user rule": {
            "$ref": "./examples/NetworkManagerDefaultUserRuleGet.json"
          }
        }
      },
      "put": {
        "tags": [
          "UserRules"
        ],
        "description": "Creates or updates a user rule.",
        "operationId": "UserRules_CreateOrUpdate",
        "parameters": [
          {
            "name": "userRule",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BaseUserRule"
            },
            "description": "The user rule to create or update"
          }
        ],
        "responses": {
          "200": {
            "description": "Updated rule",
            "schema": {
              "$ref": "#/definitions/BaseUserRule"
            }
          },
          "201": {
            "description": "Created rule",
            "schema": {
              "$ref": "#/definitions/BaseUserRule"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Create a user rule": {
            "$ref": "./examples/NetworkManagerUserRulePut.json"
          },
          "Create a default user rule": {
            "$ref": "./examples/NetworkManagerDefaultUserRulePut.json"
          }
        }
      },
      "delete": {
        "tags": [
          "UserRules"
        ],
        "description": "Deletes a user rule.",
        "operationId": "UserRules_Delete",
        "responses": {
          "200": {
            "description": "Delete Succeed."
          },
          "204": {
            "description": "Request successful. Resource does not exist."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./network.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Delete a user rule": {
            "$ref": "./examples/NetworkManagerUserRuleDelete.json"
          }
        }
      }
    }
  },
  "definitions": {
    "BaseUserRule": {
      "properties": {
        "kind": {
          "type": "string",
          "description": "Whether the rule is custom or default.",
          "enum": [
            "Custom",
            "Default"
          ],
          "x-ms-enum": {
            "name": "UserRuleKind",
            "modelAsString": true
          }
        },
        "systemData": {
          "readOnly": true,
          "description": "The system metadata related to this resource.",
          "$ref": "./network.json#/definitions/SystemData"
        }
      },
      "allOf": [
        {
          "$ref": "./network.json#/definitions/ProxyResource"
        }
      ],
      "required": [
        "kind"
      ],
      "discriminator": "kind",
      "description": "Network base rule."
    },
    "UserRuleListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BaseUserRule"
          },
          "description": "A list of user rules"
        },
        "nextLink": {
          "type": "string",
          "description": "The URL to get the next set of results."
        }
      },
      "description": "security user rule list result."
    },
    "UserRule": {
      "properties": {
        "properties": {
          "$ref": "#/definitions/UserRulePropertiesFormat",
          "x-ms-client-flatten": true,
          "description": "Indicates the properties of the security user rule"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/BaseUserRule"
        }
      ],
      "description": "Network security user rule.",
      "x-ms-discriminator-value": "Custom"
    },
    "UserRulePropertiesFormat": {
      "type": "object",
      "properties": {
        "displayName": {
          "type": "string",
          "description": "A friendly name for the rule."
        },
        "description": {
          "type": "string",
          "description": "A description for this rule."
        },
        "protocol": {
          "type": "string",
          "$ref": "./networkManagerSecurityAdminConfiguration.json#/definitions/RuleProtocol",
          "description": "Network protocol this rule applies to."
        },
        "sources": {
          "type": "array",
          "items": {
            "$ref": "./networkManagerSecurityAdminConfiguration.json#/definitions/AddressPrefixItem"
          },
          "description": "The CIDR or source IP ranges."
        },
        "destinations": {
          "type": "array",
          "items": {
            "$ref": "./networkManagerSecurityAdminConfiguration.json#/definitions/AddressPrefixItem"
          },
          "description": "The destination address prefixes. CIDR or destination IP ranges."
        },
        "sourcePortRanges": {
          "type": "array",
          "items": {
            "type": "string",
            "description": "The source port."
          },
          "description": "The source port ranges."
        },
        "destinationPortRanges": {
          "type": "array",
          "items": {
            "type": "string",
            "description": "The destination port."
          },
          "description": "The destination port ranges."
        },
        "direction": {
          "$ref": "./networkManagerSecurityAdminConfiguration.json#/definitions/SecurityConfigurationRuleDirection",
          "description": "Indicates if the traffic matched against the rule in inbound or outbound."
        },
        "provisioningState": {
          "readOnly": true,
          "$ref": "./network.json#/definitions/ProvisioningState",
          "description": "The provisioning state of the security configuration user rule resource."
        }
      },
      "required": [
        "protocol",
        "direction"
      ],
      "description": "Security rule resource."
    },
    "DefaultUserRule": {
      "properties": {
        "properties": {
          "$ref": "#/definitions/DefaultUserRulePropertiesFormat",
          "x-ms-client-flatten": true,
          "description": "Indicates the properties of the security default user rule"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/BaseUserRule"
        }
      ],
      "description": "Network security default user rule.",
      "x-ms-discriminator-value": "Default"
    },
    "DefaultUserRulePropertiesFormat": {
      "type": "object",
      "properties": {
        "displayName": {
          "type": "string",
          "readOnly": true,
          "description": "A friendly name for the rule."
        },
        "description": {
          "type": "string",
          "readOnly": true,
          "description": "A description for this rule. Restricted to 140 chars."
        },
        "flag": {
          "type": "string",
          "description": "Default rule flag."
        },
        "protocol": {
          "type": "string",
          "readOnly": true,
          "$ref": "./networkManagerSecurityAdminConfiguration.json#/definitions/RuleProtocol",
          "description": "Network protocol this rule applies to."
        },
        "sources": {
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "./networkManagerSecurityAdminConfiguration.json#/definitions/AddressPrefixItem"
          },
          "description": "The CIDR or source IP ranges."
        },
        "destinations": {
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "./networkManagerSecurityAdminConfiguration.json#/definitions/AddressPrefixItem"
          },
          "description": "The destination address prefixes. CIDR or destination IP ranges."
        },
        "sourcePortRanges": {
          "type": "array",
          "readOnly": true,
          "items": {
            "type": "string",
            "description": "The source port."
          },
          "description": "The source port ranges."
        },
        "destinationPortRanges": {
          "type": "array",
          "readOnly": true,
          "items": {
            "type": "string",
            "description": "The destination port."
          },
          "description": "The destination port ranges."
        },
        "direction": {
          "$ref": "./networkManagerSecurityAdminConfiguration.json#/definitions/SecurityConfigurationRuleDirection",
          "readOnly": true,
          "description": "Indicates if the traffic matched against the rule in inbound or outbound."
        },
        "provisioningState": {
          "readOnly": true,
          "$ref": "./network.json#/definitions/ProvisioningState",
          "description": "The provisioning state of the security configuration user rule resource."
        }
      },
      "description": "Security default user rule resource."
    }
  },
  "parameters": {
    "SecurityConfigurationParameter": {
      "name": "configurationName",
      "in": "path",
      "description": "The name of the network manager security Configuration.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "RuleCollectionParameter": {
      "name": "ruleCollectionName",
      "in": "path",
      "description": "The name of the network manager security Configuration rule collection.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "SecurityConfigurationsRuleParameter": {
      "name": "ruleName",
      "in": "path",
      "description": "The name of the rule.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "ResourceGroupNameParameter": {
      "name": "resourceGroupName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the resource group.",
      "x-ms-parameter-location": "method"
    },
    "NetworkManagerNameParameter": {
      "name": "networkManagerName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the network manager.",
      "x-ms-parameter-location": "method"
    },
    "ListTopParameter": {
      "name": "$top",
      "description": "An optional query parameter which specifies the maximum number of records to be returned by the server.",
      "in": "query",
      "required": false,
      "type": "integer",
      "format": "int32",
      "minimum": 1,
      "maximum": 20,
      "x-ms-parameter-location": "method"
    },
    "ListSkipTokenParameter": {
      "name": "$skipToken",
      "description": "SkipToken is only used if a previous operation returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skipToken parameter that specifies a starting point to use for subsequent calls.",
      "in": "query",
      "required": false,
      "type": "string",
      "x-ms-parameter-location": "method"
    }
  }
}
