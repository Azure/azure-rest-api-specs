{
  "title": "List Azure Virtual Network Manager Effective Configuration by Subnet",
  "parameters": {
    "api-version": "2021-02-01-preview",
    "subscriptionId": "subscriptionA",
    "resourceGroupName": "myResourceGroup",
    "virtualNetworkName": "testVirtualNetwork",
    "subnetName": "testSubnet",
    "parameters": {
      "$skipToken": "FakeSkipTokenCode"
    }
  },
  "responses": {
    "200": {
      "body": {
        "value": [
          {
            "kind": "ConnectivityConfiguration",
            "id": "subscriptions/subscriptionA/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkManagers/testNetworkManager/connectivityConfigurations/myTestConnectivityConfig",
            "properties": {
              "displayName": "myTestConnectivityConfig",
              "description": "Sample Configuration",
              "connectivityTopology": "HubAndSpoke",
              "hubId": "/subscriptionB/resourceGroups/myResourceGroup/providers/Microsoft.Network/virtualNetworks/myHubVnet",
              "isGlobal": "True",
              "deleteExistingPeering": "True",
              "appliesToGroups": [
                {
                  "networkGroupId": "/subscriptions/subscriptionA/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkManagers/testNetworkManager/groups/group1",
                  "useHubGateway": "True",
                  "groupConnectivity": "None",
                  "isGlobal": "False"
                }
              ],
              "provisioningState": "Succeeded"
            },
            "configurationGroups": [
              {
                "id": "/subscriptions/subscriptionA/resourceGroup/myResourceGroup/providers/Microsoft.Network/networkManagers/testNetworkManager/networkGroups/group1",
                "properties": {
                  "displayName": "My Network Group",
                  "description": "A group for all test Virtual Networks",
                  "memberType": "VirtualNetwork",
                  "groupMembers": [
                    {
                      "vnetId": "/subscriptions/subscriptionC/resourceGroup/rg1/providers/Microsoft.Network/virtualnetwork/vnet1"
                    }
                  ],
                  "conditionalMembership": "",
                  "provisioningState": "Succeeded"
                }
              }
            ]
          },
          {
            "kind": "SecurityUserRuleCollection",
            "id": "/subscriptions/subscriptionA/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkManagers/testNetworkManager/securityUserConfigurations/myTestSecurityConfig/ruleCollections/testRuleCollection",
            "properties": {
              "displayName": "testRuleCollection",
              "description": "A sample rule collection",
              "provisioningState": "Succeeded",
              "rules": [
                {
                  "id": "/subscriptions/subscriptionA/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkManagers/testNetworkManager/securityUserConfigurations/myTestSecurityConfig/ruleCollections/testRuleCollection/rules/SampleUserRule",
                  "kind": "Custom",
                  "properties": {
                    "displayName": "SampleUserRule",
                    "description": "Sample User Rule",
                    "protocol": "Tcp",
                    "sources": [
                      {
                        "addressPrefixType": "IPPrefix",
                        "addressPrefix": "*"
                      }
                    ],
                    "destinations": [
                      {
                        "addressPrefixType": "IPPrefix",
                        "addressPrefix": "*"
                      }
                    ],
                    "sourcePortRanges": [
                      "0-65535"
                    ],
                    "destinationPortRanges": [
                      "22"
                    ],
                    "direction": "Inbound",
                    "provisioningState": "Succeeded"
                  }
                }
              ],
              "appliesToGroups": [
                {
                  "networkGroupId": "/subscriptions/subscriptionA/resourceGroup/myResourceGroup/providers/Microsoft.Network/networkManagers/testNetworkManager/networkGroups/group1"
                }
              ]
            },
            "configurationGroups": [
              {
                "id": "/subscriptions/subscriptionA/resourceGroup/myResourceGroup/providers/Microsoft.Network/networkManagers/testNetworkManager/networkGroups/group1",
                "properties": {
                  "displayName": "My Network Group",
                  "description": "A group for all test Virtual Networks",
                  "memberType": "VirtualNetwork",
                  "groupMembers": [
                    {
                      "vnetId": "/subscriptions/subscriptionC/resourceGroup/rg1/providers/Microsoft.Network/virtualnetwork/vnet1"
                    }
                  ],
                  "conditionalMembership": "",
                  "provisioningState": "Succeeded"
                }
              }
            ]
          },
          {
            "kind": "SecurityAdminRuleCollection",
            "id": "/subscriptions/subscriptionA/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkManagers/testNetworkManager/securityAdminConfigurations/myTestSecurityConfig/ruleCollections/testRuleCollection",
            "properties": {
              "configurationDisplayName": "SampleAdminConfig",
              "configurationDescription": "Sample Admin Config",
              "displayName": "testRuleCollection",
              "description": "A sample rule collection",
              "provisioningState": "Succeeded",
              "rules": [
                {
                  "id": "/subscriptions/subscriptionA/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkManagers/testNetworkManager/securityAdminConfigurations/myTestSecurityConfig/ruleCollections/testRuleCollection/rules/SampleAdminRule",
                  "kind": "Default",
                  "properties": {
                    "displayName": "SampleAdminRule",
                    "description": "Sample Admin Rule",
                    "flag": "AllowVnetInbound",
                    "protocol": "Tcp",
                    "sources": [
                      {
                        "addressPrefixType": "IPPrefix",
                        "addressPrefix": "*"
                      }
                    ],
                    "destinations": [
                      {
                        "addressPrefixType": "IPPrefix",
                        "addressPrefix": "*"
                      }
                    ],
                    "sourcePortRanges": [
                      "0-65535"
                    ],
                    "destinationPortRanges": [
                      "22"
                    ],
                    "direction": "Inbound",
                    "access": "Deny",
                    "priority": 1,
                    "provisioningState": "Succeeded"
                  }
                }
              ],
              "appliesToGroups": [
                {
                  "networkGroupId": "/subscriptions/subscriptionA/resourceGroup/myResourceGroup/providers/Microsoft.Network/networkManagers/testNetworkManager/networkGroups/group1"
                }
              ]
            },
            "configurationGroups": [
              {
                "id": "/subscriptions/subscriptionA/resourceGroup/myResourceGroup/providers/Microsoft.Network/networkManagers/testNetworkManager/networkGroups/group1",
                "properties": {
                  "displayName": "My Network Group",
                  "description": "A group for all test Virtual Networks",
                  "memberType": "VirtualNetwork",
                  "groupMembers": [
                    {
                      "vnetId": "/subscriptions/subscriptionC/resourceGroup/rg1/providers/Microsoft.Network/virtualnetwork/vnet1"
                    }
                  ],
                  "conditionalMembership": "",
                  "provisioningState": "Succeeded"
                }
              }
            ]
          }
        ],
        "$skipToken": "NextFakeSkipTokenCode"
      }
    }
  }
}
