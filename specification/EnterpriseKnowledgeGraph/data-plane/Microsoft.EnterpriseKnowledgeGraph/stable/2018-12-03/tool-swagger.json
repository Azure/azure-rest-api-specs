{
  "swagger": "2.0",
  "info": {
    "title": "Microsoft.Knowledge.EKG.Tools.ToolingApi",
    "version": "v1"
  },
  "host": "localhost:27748",
  "schemes": [
    "https"
  ],
  "paths": {
    "/Annotations": {
      "get": {
        "tags": [
          "Annotations"
        ],
        "operationId": "Annotations_GetAll",
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DbAnnotations"
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Annotations"
        ],
        "operationId": "Annotations_Post",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "AnnotationId",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "formData",
            "name": "IntentId",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "formData",
            "name": "Intent",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "ModifiedDateTime",
            "type": "string",
            "format": "date-time"
          },
          {
            "in": "formData",
            "name": "CreateDateTime",
            "type": "string",
            "format": "date-time"
          },
          {
            "in": "formData",
            "name": "CreatedBy",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "formData",
            "name": "CreatedByUser",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "ModifiedBy",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "formData",
            "name": "ModifiedByUser",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "AnnotatedQuery",
            "required": true,
            "type": "string"
          },
          {
            "in": "formData",
            "name": "RawQuery",
            "required": true,
            "type": "string"
          },
          {
            "in": "formData",
            "name": "Submitted",
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DbAnnotations"
            }
          }
        }
      }
    },
    "/Annotations/{annotationId}": {
      "get": {
        "tags": [
          "Annotations"
        ],
        "operationId": "Annotations_Get",
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "annotationId",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DbAnnotations"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Annotations"
        ],
        "operationId": "Annotations_Put",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "annotationId",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "formData",
            "name": "AnnotationId",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "formData",
            "name": "IntentId",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "formData",
            "name": "Intent",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "ModifiedDateTime",
            "type": "string",
            "format": "date-time"
          },
          {
            "in": "formData",
            "name": "CreateDateTime",
            "type": "string",
            "format": "date-time"
          },
          {
            "in": "formData",
            "name": "CreatedBy",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "formData",
            "name": "CreatedByUser",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "ModifiedBy",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "formData",
            "name": "ModifiedByUser",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "AnnotatedQuery",
            "required": true,
            "type": "string"
          },
          {
            "in": "formData",
            "name": "RawQuery",
            "required": true,
            "type": "string"
          },
          {
            "in": "formData",
            "name": "Submitted",
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DbAnnotations"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Annotations"
        ],
        "operationId": "Annotations_Delete",
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "annotationId",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DbAnnotations"
            }
          }
        }
      }
    },
    "/Annotations/GetByIntent/{intentId}": {
      "get": {
        "tags": [
          "Annotations"
        ],
        "operationId": "Annotations_GetByIntentId",
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "intentId",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DbAnnotations"
              }
            }
          }
        }
      }
    },
    "/Annotations/CreateWithReset": {
      "post": {
        "tags": [
          "Annotations"
        ],
        "operationId": "Annotations_PostWithReset",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "resetSubmit",
            "type": "boolean"
          },
          {
            "in": "formData",
            "name": "AnnotationId",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "formData",
            "name": "IntentId",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "formData",
            "name": "Intent",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "ModifiedDateTime",
            "type": "string",
            "format": "date-time"
          },
          {
            "in": "formData",
            "name": "CreateDateTime",
            "type": "string",
            "format": "date-time"
          },
          {
            "in": "formData",
            "name": "CreatedBy",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "formData",
            "name": "CreatedByUser",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "ModifiedBy",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "formData",
            "name": "ModifiedByUser",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "AnnotatedQuery",
            "required": true,
            "type": "string"
          },
          {
            "in": "formData",
            "name": "RawQuery",
            "required": true,
            "type": "string"
          },
          {
            "in": "formData",
            "name": "Submitted",
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DbAnnotations"
            }
          }
        }
      }
    },
    "/Annotations/{annotationId}/Reset": {
      "put": {
        "tags": [
          "Annotations"
        ],
        "operationId": "Annotations_PutWithReset",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "annotationId",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "resetSubmit",
            "type": "boolean"
          },
          {
            "in": "formData",
            "name": "AnnotationId",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "formData",
            "name": "IntentId",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "formData",
            "name": "Intent",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "ModifiedDateTime",
            "type": "string",
            "format": "date-time"
          },
          {
            "in": "formData",
            "name": "CreateDateTime",
            "type": "string",
            "format": "date-time"
          },
          {
            "in": "formData",
            "name": "CreatedBy",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "formData",
            "name": "CreatedByUser",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "ModifiedBy",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "formData",
            "name": "ModifiedByUser",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "AnnotatedQuery",
            "required": true,
            "type": "string"
          },
          {
            "in": "formData",
            "name": "RawQuery",
            "required": true,
            "type": "string"
          },
          {
            "in": "formData",
            "name": "Submitted",
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DbAnnotations"
            }
          }
        }
      }
    },
    "/Annotations/BulkDelete": {
      "delete": {
        "tags": [
          "Annotations"
        ],
        "operationId": "Annotations_BulkDelete",
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "ids",
            "required": true,
            "type": "array",
            "items": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DbAnnotations"
              }
            }
          }
        }
      }
    },
    "/Routes/Latest": {
      "get": {
        "tags": [
          "ApiRoutes"
        ],
        "operationId": "ApiRoutes_GetLatest",
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DbApiRoutes"
              }
            }
          }
        }
      }
    },
    "/Routes/{version}": {
      "get": {
        "tags": [
          "ApiRoutes"
        ],
        "operationId": "ApiRoutes_Get",
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "version",
            "required": true,
            "type": "string",
            "format": "date-time"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DbApiRoutes"
              }
            }
          }
        }
      }
    },
    "/Subscriptions": {
      "get": {
        "tags": [
          "AzureSubscriptions"
        ],
        "operationId": "AzureSubscriptions_GetAll",
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DbAzureSubscriptions"
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "AzureSubscriptions"
        ],
        "operationId": "AzureSubscriptions_Post",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "AzureSubscriptionId",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "formData",
            "name": "SubscriptionId",
            "required": true,
            "type": "string",
            "maxLength": 512,
            "minLength": 0
          },
          {
            "in": "formData",
            "name": "Users",
            "type": "array",
            "items": {
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DbAzureSubscriptions"
            }
          }
        }
      }
    },
    "/Subscriptions/{subscriptionId}": {
      "get": {
        "tags": [
          "AzureSubscriptions"
        ],
        "operationId": "AzureSubscriptions_Get",
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DbAzureSubscriptions"
            }
          }
        }
      },
      "put": {
        "tags": [
          "AzureSubscriptions"
        ],
        "operationId": "AzureSubscriptions_Put",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "formData",
            "name": "AzureSubscriptionId",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "formData",
            "name": "SubscriptionId",
            "required": true,
            "type": "string",
            "maxLength": 512,
            "minLength": 0
          },
          {
            "in": "formData",
            "name": "Users",
            "type": "array",
            "items": {
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DbAzureSubscriptions"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "AzureSubscriptions"
        ],
        "operationId": "AzureSubscriptions_Delete",
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DbAzureSubscriptions"
            }
          }
        }
      }
    },
    "/DataSourcesAndMapping": {
      "post": {
        "tags": [
          "CompositeDataSource"
        ],
        "operationId": "CompositeDataSource_Post",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "DataSource",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "MappingVersions",
            "type": "array",
            "items": {
            }
          },
          {
            "in": "formData",
            "name": "AzureSubscriptionId",
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CompositeDataSourceMappingModel"
            }
          }
        }
      }
    },
    "/Ontology": {
      "post": {
        "tags": [
          "CompositeOntology"
        ],
        "operationId": "CompositeOntology_Post",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "actionType",
            "type": "integer",
            "format": "int32",
            "enum": [
              0,
              1,
              2
            ]
          },
          {
            "in": "query",
            "name": "type",
            "type": "integer",
            "format": "int32",
            "enum": [
              0,
              1,
              2
            ]
          },
          {
            "in": "query",
            "name": "baseOntologyType",
            "type": "integer",
            "format": "int32",
            "enum": [
              0,
              1
            ]
          },
          {
            "in": "formData",
            "name": "Ontology",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "Version",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CompositeOntologyModel"
            }
          }
        }
      }
    },
    "/api/conflation/experiment": {
      "get": {
        "tags": [
          "Conflation"
        ],
        "operationId": "Conflation_Get",
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "experimentType",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ExperimentResponse"
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Conflation"
        ],
        "operationId": "Conflation_Post",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "RowVersion",
            "type": "string",
            "format": "byte"
          },
          {
            "in": "formData",
            "name": "ExperimentId",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "formData",
            "name": "Name",
            "required": true,
            "type": "string",
            "maxLength": 450,
            "minLength": 0
          },
          {
            "in": "formData",
            "name": "Description",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "ExperimentType",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "DataSourceId",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "formData",
            "name": "DataSource",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "Type",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "RulesJson",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "SynonymConfigJson",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "AzureSubscriptionId",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "formData",
            "name": "AzureSubscription",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "CreateDateTimeUtc",
            "type": "string",
            "format": "date-time"
          },
          {
            "in": "formData",
            "name": "ModifiedDateTimeUtc",
            "type": "string",
            "format": "date-time"
          },
          {
            "in": "formData",
            "name": "CreatedBy",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "formData",
            "name": "CreatedByUser",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "ModifiedBy",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "formData",
            "name": "ModifiedByUser",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "SamplingIndexId",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "formData",
            "name": "SamplingIndex",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "ConflationIndexId",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "formData",
            "name": "ConflationIndex",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "ValidationId",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "formData",
            "name": "ValidationData",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "State",
            "type": "integer",
            "format": "int32",
            "enum": [
              0,
              20,
              23,
              24,
              25,
              26,
              28,
              29,
              30,
              41,
              42,
              43,
              48,
              49,
              50,
              55,
              60,
              61
            ]
          },
          {
            "in": "formData",
            "name": "MatchingConfig",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "ConfigurationId",
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "formData",
            "name": "ErrorMessage",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ExperimentResponse"
            }
          }
        }
      }
    },
    "/api/conflation/experiment/{id}/reinitialize": {
      "post": {
        "tags": [
          "Conflation"
        ],
        "operationId": "Conflation_Reinitialize",
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ExperimentResponse"
            }
          }
        }
      }
    },
    "/api/conflation/experiment/{id}/rules": {
      "put": {
        "tags": [
          "Conflation"
        ],
        "operationId": "Conflation_UpdateRules",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "formData",
            "name": "RowVersion",
            "type": "string",
            "format": "byte"
          },
          {
            "in": "formData",
            "name": "ExperimentId",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "formData",
            "name": "Name",
            "required": true,
            "type": "string",
            "maxLength": 450,
            "minLength": 0
          },
          {
            "in": "formData",
            "name": "Description",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "ExperimentType",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "DataSourceId",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "formData",
            "name": "DataSource",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "Type",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "RulesJson",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "SynonymConfigJson",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "AzureSubscriptionId",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "formData",
            "name": "AzureSubscription",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "CreateDateTimeUtc",
            "type": "string",
            "format": "date-time"
          },
          {
            "in": "formData",
            "name": "ModifiedDateTimeUtc",
            "type": "string",
            "format": "date-time"
          },
          {
            "in": "formData",
            "name": "CreatedBy",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "formData",
            "name": "CreatedByUser",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "ModifiedBy",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "formData",
            "name": "ModifiedByUser",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "SamplingIndexId",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "formData",
            "name": "SamplingIndex",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "ConflationIndexId",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "formData",
            "name": "ConflationIndex",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "ValidationId",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "formData",
            "name": "ValidationData",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "State",
            "type": "integer",
            "format": "int32",
            "enum": [
              0,
              20,
              23,
              24,
              25,
              26,
              28,
              29,
              30,
              41,
              42,
              43,
              48,
              49,
              50,
              55,
              60,
              61
            ]
          },
          {
            "in": "formData",
            "name": "MatchingConfig",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "ConfigurationId",
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "formData",
            "name": "ErrorMessage",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ExperimentResponse"
            }
          }
        }
      }
    },
    "/api/conflation/experiment/{id}/SynonymConfig": {
      "put": {
        "tags": [
          "Conflation"
        ],
        "operationId": "Conflation_UpdateSynonymConfig",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "formData",
            "name": "RowVersion",
            "type": "string",
            "format": "byte"
          },
          {
            "in": "formData",
            "name": "ExperimentId",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "formData",
            "name": "Name",
            "required": true,
            "type": "string",
            "maxLength": 450,
            "minLength": 0
          },
          {
            "in": "formData",
            "name": "Description",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "ExperimentType",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "DataSourceId",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "formData",
            "name": "DataSource",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "Type",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "RulesJson",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "SynonymConfigJson",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "AzureSubscriptionId",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "formData",
            "name": "AzureSubscription",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "CreateDateTimeUtc",
            "type": "string",
            "format": "date-time"
          },
          {
            "in": "formData",
            "name": "ModifiedDateTimeUtc",
            "type": "string",
            "format": "date-time"
          },
          {
            "in": "formData",
            "name": "CreatedBy",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "formData",
            "name": "CreatedByUser",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "ModifiedBy",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "formData",
            "name": "ModifiedByUser",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "SamplingIndexId",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "formData",
            "name": "SamplingIndex",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "ConflationIndexId",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "formData",
            "name": "ConflationIndex",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "ValidationId",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "formData",
            "name": "ValidationData",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "State",
            "type": "integer",
            "format": "int32",
            "enum": [
              0,
              20,
              23,
              24,
              25,
              26,
              28,
              29,
              30,
              41,
              42,
              43,
              48,
              49,
              50,
              55,
              60,
              61
            ]
          },
          {
            "in": "formData",
            "name": "MatchingConfig",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "ConfigurationId",
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "formData",
            "name": "ErrorMessage",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ExperimentResponse"
            }
          }
        }
      }
    },
    "/api/conflation/experiment/{id}": {
      "get": {
        "tags": [
          "Conflation"
        ],
        "operationId": "Conflation_GetExperiment",
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ExperimentResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Conflation"
        ],
        "operationId": "Conflation_Delete",
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ExperimentResponse"
            }
          }
        }
      }
    },
    "/api/conflation/experiment/{id}/samples": {
      "post": {
        "tags": [
          "Conflation"
        ],
        "operationId": "Conflation_CreateSamples",
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DbSamplingIndexMetadata"
            }
          }
        }
      }
    },
    "/api/conflation/experiment/{id}/indexGen": {
      "post": {
        "tags": [
          "Conflation"
        ],
        "operationId": "Conflation_CreateIndex",
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DbConflationIndexMetadata"
            }
          }
        }
      }
    },
    "/api/conflation/experiment/{id}/status": {
      "get": {
        "tags": [
          "Conflation"
        ],
        "operationId": "Conflation_GetStatus",
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/StateResponse"
            }
          }
        }
      }
    },
    "/api/conflation/experiment/{id}/publish": {
      "post": {
        "tags": [
          "Conflation"
        ],
        "operationId": "Conflation_Publish",
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/conflation/experiment/{id}/retire": {
      "post": {
        "tags": [
          "Conflation"
        ],
        "operationId": "Conflation_Retire",
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/api/conflation/experiment/{id}/validation": {
      "get": {
        "tags": [
          "Conflation"
        ],
        "operationId": "Conflation_GetValidation",
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ValidationResponse"
            }
          }
        }
      }
    },
    "/api/conflation/experiment/{id}/model": {
      "get": {
        "tags": [
          "Conflation"
        ],
        "operationId": "Conflation_GetModel",
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ModelResponse"
            }
          }
        }
      }
    },
    "/api/conflation/experiment/{id}/synonymFile": {
      "get": {
        "tags": [
          "Conflation"
        ],
        "operationId": "Conflation_GetSynonymFile",
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/DataSources": {
      "get": {
        "tags": [
          "DataSources"
        ],
        "operationId": "DataSources_GetAll",
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DbDataSources"
              }
            }
          }
        }
      }
    },
    "/DataSources/Count": {
      "get": {
        "tags": [
          "DataSources"
        ],
        "operationId": "DataSources_Count",
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        }
      }
    },
    "/DataSources/{dataSourceId}": {
      "get": {
        "tags": [
          "DataSources"
        ],
        "operationId": "DataSources_Get",
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "dataSourceId",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DbDataSources"
            }
          }
        }
      },
      "put": {
        "tags": [
          "DataSources"
        ],
        "operationId": "DataSources_Put",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "dataSourceId",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "formData",
            "name": "DataSourceId",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "formData",
            "name": "SourceName",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "SampleData",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "MappingVersions",
            "type": "array",
            "items": {
            }
          },
          {
            "in": "formData",
            "name": "CreatedBy",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "formData",
            "name": "ModifiedBy",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "formData",
            "name": "CreatedByUser",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "ModifiedByUser",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "ModifiedDateTime",
            "type": "string",
            "format": "date-time"
          },
          {
            "in": "formData",
            "name": "CreateDateTime",
            "type": "string",
            "format": "date-time"
          },
          {
            "in": "formData",
            "name": "AzureSubscriptionId",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "formData",
            "name": "AzureSubscription",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "DeletionJobId",
            "type": "string",
            "maxLength": 100,
            "minLength": 0
          },
          {
            "in": "formData",
            "name": "Status",
            "type": "integer",
            "format": "int32",
            "enum": [
              0,
              1,
              2
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DbDataSources"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "DataSources"
        ],
        "operationId": "DataSources_Delete",
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "dataSourceId",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DbDataSources"
            }
          }
        }
      }
    },
    "/DataSources/MappingXml/{dataSourceId}": {
      "get": {
        "tags": [
          "DataSources"
        ],
        "operationId": "DataSources_GetMappingXmlById",
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "dataSourceId",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/DataSources/MappingXmlByType/{dataSourceId}": {
      "get": {
        "tags": [
          "DataSources"
        ],
        "operationId": "DataSources_GetMappingXmlByIdAndType",
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "dataSourceId",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "type",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/DataSources/MappingXml/{dataSourceId}/types": {
      "get": {
        "tags": [
          "DataSources"
        ],
        "operationId": "DataSources_GetMappingXmlTypesById",
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "dataSourceId",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/DataSources/MappingConfig/{dataSourceId}": {
      "get": {
        "tags": [
          "DataSources"
        ],
        "operationId": "DataSources_GetMappingConfigById",
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "dataSourceId",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RunMappingConfigModel"
            }
          }
        }
      }
    },
    "/DataSources/IngestionConfig/DataSource/{dataSourceId}": {
      "get": {
        "tags": [
          "DataSources"
        ],
        "operationId": "DataSources_GetByDataSourceBySourceId",
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "dataSourceId",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/IngestionConfigModel"
            }
          }
        }
      }
    },
    "/DataSources/DataSourceMappingXml/{id}": {
      "get": {
        "tags": [
          "DataSources"
        ],
        "operationId": "DataSources_GetDataSourcesAndOntologies",
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CompositeDataSourceModel"
            }
          }
        }
      }
    },
    "/DataSources/DataSource": {
      "post": {
        "tags": [
          "DataSources"
        ],
        "operationId": "DataSources_Post",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "DataSourceId",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "formData",
            "name": "SourceName",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "SampleData",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "MappingVersions",
            "type": "array",
            "items": {
            }
          },
          {
            "in": "formData",
            "name": "CreatedBy",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "formData",
            "name": "ModifiedBy",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "formData",
            "name": "CreatedByUser",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "ModifiedByUser",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "ModifiedDateTime",
            "type": "string",
            "format": "date-time"
          },
          {
            "in": "formData",
            "name": "CreateDateTime",
            "type": "string",
            "format": "date-time"
          },
          {
            "in": "formData",
            "name": "AzureSubscriptionId",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "formData",
            "name": "AzureSubscription",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "DeletionJobId",
            "type": "string",
            "maxLength": 100,
            "minLength": 0
          },
          {
            "in": "formData",
            "name": "Status",
            "type": "integer",
            "format": "int32",
            "enum": [
              0,
              1,
              2
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DbDataSources"
            }
          }
        }
      }
    },
    "/DataSources/BulkDelete": {
      "delete": {
        "tags": [
          "DataSources"
        ],
        "operationId": "DataSources_BulkDelete",
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "ids",
            "required": true,
            "type": "array",
            "items": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DbDataSources"
              }
            }
          }
        }
      }
    },
    "/DataSourcesMapping/{dataSourceMappingId}": {
      "get": {
        "tags": [
          "DataSourcesMapping"
        ],
        "operationId": "DataSourcesMapping_Get",
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "dataSourceMappingId",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DbDataSourceMappingVersions"
            }
          }
        }
      },
      "put": {
        "tags": [
          "DataSourcesMapping"
        ],
        "operationId": "DataSourcesMapping_Put",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "dataSourceMappingId",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "formData",
            "name": "DataSourceId",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "formData",
            "name": "DbDataSource",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "DataSourceMappingVersionId",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "formData",
            "name": "MappingXml",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "CreatedBy",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "formData",
            "name": "ModifiedBy",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "formData",
            "name": "CreatedByUser",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "ModifiedByUser",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "ModifiedDateTime",
            "type": "string",
            "format": "date-time"
          },
          {
            "in": "formData",
            "name": "CreateDateTime",
            "type": "string",
            "format": "date-time"
          },
          {
            "in": "formData",
            "name": "SchemaType",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "SourcePropertyCount",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "formData",
            "name": "MappedPropertyCount",
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DbDataSourceMappingVersions"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "DataSourcesMapping"
        ],
        "operationId": "DataSourcesMapping_Delete",
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "dataSourceMappingId",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DbDataSourceMappingVersions"
            }
          }
        }
      }
    },
    "/DataSourcesMapping": {
      "post": {
        "tags": [
          "DataSourcesMapping"
        ],
        "operationId": "DataSourcesMapping_Post",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "validate",
            "type": "boolean"
          },
          {
            "in": "formData",
            "name": "DataSourceId",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "formData",
            "name": "DbDataSource",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "DataSourceMappingVersionId",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "formData",
            "name": "MappingXml",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "CreatedBy",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "formData",
            "name": "ModifiedBy",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "formData",
            "name": "CreatedByUser",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "ModifiedByUser",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "ModifiedDateTime",
            "type": "string",
            "format": "date-time"
          },
          {
            "in": "formData",
            "name": "CreateDateTime",
            "type": "string",
            "format": "date-time"
          },
          {
            "in": "formData",
            "name": "SchemaType",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "SourcePropertyCount",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "formData",
            "name": "MappedPropertyCount",
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DbDataSourceMappingVersions"
            }
          }
        }
      }
    },
    "/DataSourcesMapping/BulkCreate": {
      "post": {
        "tags": [
          "DataSourcesMapping"
        ],
        "operationId": "DataSourcesMapping_PostBulk",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DbDataSourceMappingVersions"
              }
            }
          }
        }
      }
    },
    "/Intent": {
      "get": {
        "tags": [
          "Intent"
        ],
        "operationId": "Intent_GetAll",
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DbIntentDTO"
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Intent"
        ],
        "operationId": "Intent_Post",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "IntentId",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "formData",
            "name": "Name",
            "required": true,
            "type": "string",
            "maxLength": 512,
            "minLength": 0
          },
          {
            "in": "formData",
            "name": "ModifiedDateTime",
            "type": "string",
            "format": "date-time"
          },
          {
            "in": "formData",
            "name": "CreateDateTime",
            "type": "string",
            "format": "date-time"
          },
          {
            "in": "formData",
            "name": "CreatedBy",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "formData",
            "name": "CreatedByUser",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "ModifiedBy",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "formData",
            "name": "ModifiedByUser",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "TargetEntityTypeName",
            "type": "string",
            "maxLength": 512,
            "minLength": 0
          },
          {
            "in": "formData",
            "name": "NonEkgIntent",
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DbIntents"
            }
          }
        }
      }
    },
    "/Intent/{intentId}": {
      "get": {
        "tags": [
          "Intent"
        ],
        "operationId": "Intent_Get",
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "intentId",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DbIntentDTO"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Intent"
        ],
        "operationId": "Intent_Put",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "intentId",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "formData",
            "name": "IntentId",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "formData",
            "name": "Name",
            "required": true,
            "type": "string",
            "maxLength": 512,
            "minLength": 0
          },
          {
            "in": "formData",
            "name": "ModifiedDateTime",
            "type": "string",
            "format": "date-time"
          },
          {
            "in": "formData",
            "name": "CreateDateTime",
            "type": "string",
            "format": "date-time"
          },
          {
            "in": "formData",
            "name": "CreatedBy",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "formData",
            "name": "CreatedByUser",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "ModifiedBy",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "formData",
            "name": "ModifiedByUser",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "TargetEntityTypeName",
            "type": "string",
            "maxLength": 512,
            "minLength": 0
          },
          {
            "in": "formData",
            "name": "NonEkgIntent",
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DbIntents"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Intent"
        ],
        "operationId": "Intent_Delete",
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "intentId",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DbIntents"
            }
          }
        }
      }
    },
    "/Intent/BulkDelete": {
      "delete": {
        "tags": [
          "Intent"
        ],
        "operationId": "Intent_BulkDelete",
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "ids",
            "required": true,
            "type": "array",
            "items": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DbIntents"
              }
            }
          }
        }
      }
    },
    "/IntentClassifierModel": {
      "get": {
        "tags": [
          "IntentClassifierModel"
        ],
        "operationId": "IntentClassifierModel_GetAll",
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DbIntentClassifierModel"
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "IntentClassifierModel"
        ],
        "operationId": "IntentClassifierModel_Post",
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DbIntentClassifierModel"
            }
          }
        }
      }
    },
    "/IntentClassifierModel/{intentClassifierModelId}": {
      "get": {
        "tags": [
          "IntentClassifierModel"
        ],
        "operationId": "IntentClassifierModel_Get",
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "intentClassifierModelId",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DbIntentClassifierModel"
            }
          }
        }
      }
    },
    "/IntentClassifierModel/Deploy/{intentClassifierModelId}": {
      "put": {
        "tags": [
          "IntentClassifierModel"
        ],
        "operationId": "IntentClassifierModel_Deploy",
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "intentClassifierModelId",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DbIntentClassifierModel"
            }
          }
        }
      }
    },
    "/IntentClassifierModel/Search": {
      "get": {
        "tags": [
          "IntentClassifierModel"
        ],
        "operationId": "IntentClassifierModel_Search",
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/Intents/BulkUpload": {
      "post": {
        "tags": [
          "IntentsBulk"
        ],
        "operationId": "IntentsBulk_Post",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DbIntents"
            }
          }
        }
      }
    },
    "/Intents/Export": {
      "get": {
        "tags": [
          "IntentsBulk"
        ],
        "operationId": "IntentsBulk_Export",
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/sasho-modeling/GetInfoPageResults": {
      "get": {
        "tags": [
          "LinguisticModelBootstrap"
        ],
        "operationId": "LinguisticModelBootstrap_GetInfoPageModel",
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/InfoPageModel"
            }
          }
        }
      }
    },
    "/api/sasho-modeling/bootstrapModels": {
      "post": {
        "tags": [
          "LinguisticModelBootstrap"
        ],
        "operationId": "LinguisticModelBootstrap_BootstrapModel",
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/api/sasho-modeling/updateModels": {
      "post": {
        "tags": [
          "LinguisticModelBootstrap"
        ],
        "operationId": "LinguisticModelBootstrap_UpdateModel",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "Query",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "SparqlAnnotations",
            "type": "array",
            "items": {
            }
          },
          {
            "in": "formData",
            "name": "QueryAnnotations",
            "type": "array",
            "items": {
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/api/sasho-modeling/export": {
      "get": {
        "tags": [
          "LinguisticModelBootstrap"
        ],
        "operationId": "LinguisticModelBootstrap_ExportModel",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/sasho-modeling/restatement": {
      "get": {
        "tags": [
          "LinguisticModelBootstrap"
        ],
        "operationId": "LinguisticModelBootstrap_GetRestatement",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "LinguisticModelBootstrap"
        ],
        "operationId": "LinguisticModelBootstrap_AddRestatement",
        "parameters": [
          {
            "in": "body",
            "name": "restatement",
            "required": true,
            "schema":{
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/api/sasho-modeling/import": {
      "post": {
        "tags": [
          "LinguisticModelBootstrap"
        ],
        "operationId": "LinguisticModelBootstrap_ImportModel",
        "parameters": [
          {
            "in": "body",
            "name": "encryptedData",
            "required": true,
            "schema":{
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/api/sasho-modeling/{modelId}": {
      "delete": {
        "tags": [
          "LinguisticModelBootstrap"
        ],
        "operationId": "LinguisticModelBootstrap_DeleteLinguisticModel",
        "parameters": [
          {
            "in": "path",
            "name": "modelId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/Mapping/Run": {
      "post": {
        "tags": [
          "Mapping"
        ],
        "operationId": "Mapping_RunMapping",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "MappingXml",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "Document",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "SourceName",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/Mapping/Verify": {
      "post": {
        "tags": [
          "Mapping"
        ],
        "operationId": "Mapping_VerifyMapping",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "MappingXml",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "Document",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "SourceName",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/VerifyMappingResponse"
            }
          }
        }
      }
    },
    "/Mapping/PredicateValueMap/{entityType}": {
      "post": {
        "tags": [
          "Mapping"
        ],
        "operationId": "Mapping_GetPredicateValueMap",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "entityType",
            "required": true,
            "type": "string"
          },
          {
            "in": "formData",
            "name": "MappingXml",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "Document",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "SourceName",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/api/matchingconfig/compatiblematchingpairs": {
      "get": {
        "tags": [
          "MatchingConfig"
        ],
        "operationId": "MatchingConfig_GetCompatibleMatchingPairs",
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "$ref": "#/definitions/ValueTuple_List_String_String_"
              }
            }
          }
        }
      }
    },
    "/OneClickOnboard": {
      "post": {
        "tags": [
          "OneClickOnboard"
        ],
        "operationId": "OneClickOnboard_Post",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "BlobContainerLink",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/OneClickOnboardResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "OneClickOnboard"
        ],
        "operationId": "OneClickOnboard_Delete",
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DbOntology"
            }
          }
        }
      }
    },
    "/api/OneClickOnboard": {
      "get": {
        "tags": [
          "OneClickOnboard"
        ],
        "operationId": "OneClickOnboard_GetAllArtifactsFromBlob",
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "blobUri",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EKGOnboardingArtifacts"
            }
          }
        }
      }
    },
    "/Ontology/BySubscription": {
      "get": {
        "tags": [
          "Ontology"
        ],
        "operationId": "Ontology_GetBySubscriptionId",
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/OntologyDTO"
            }
          }
        }
      }
    },
    "/Ontology/{ontologyId}": {
      "delete": {
        "tags": [
          "Ontology"
        ],
        "operationId": "Ontology_Delete",
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "ontologyId",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DbOntology"
            }
          }
        }
      }
    },
    "/Ontology/UploadCustomGraphWalkConfig": {
      "put": {
        "tags": [
          "Ontology"
        ],
        "operationId": "Ontology_UploadCustomGraphWalkConfig",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DbOntology"
            }
          }
        }
      }
    },
    "/OntologyVersions/{ontologyVersionId}": {
      "get": {
        "tags": [
          "OntologyVersions"
        ],
        "operationId": "OntologyVersions_Get",
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "ontologyVersionId",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DbOntologyVersions"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "OntologyVersions"
        ],
        "operationId": "OntologyVersions_Delete",
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "ontologyVersionId",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DbOntologyVersions"
            }
          }
        }
      }
    },
    "/OntologyVersions/Ontology/{ontologyVersionId}": {
      "get": {
        "tags": [
          "OntologyVersions"
        ],
        "operationId": "OntologyVersions_GetOntologyJsonById",
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "ontologyVersionId",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/OntologyVersions/PublishedOntologyWithGraphwalk": {
      "get": {
        "tags": [
          "OntologyVersions"
        ],
        "operationId": "OntologyVersions_GetTheOnlyPublishedOntologyWithGraphWalkConfig",
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/OntologyVersions/{ontologyVersionId}/GraphWalkSettings": {
      "get": {
        "tags": [
          "OntologyVersions"
        ],
        "operationId": "OntologyVersions_GetOntologyVersionGraphWalkSettings",
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "ontologyVersionId",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GraphWalkSettingsDTO"
            }
          }
        }
      },
      "put": {
        "tags": [
          "OntologyVersions"
        ],
        "operationId": "OntologyVersions_SetOntologyVersionGraphWalkSettings",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "ontologyVersionId",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "formData",
            "name": "NamespaceToTypesToDepthsDictionary",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GraphWalkSettingsDTO"
            }
          }
        }
      }
    },
    "/OntologyVersions/GetPublishedOntology": {
      "get": {
        "tags": [
          "OntologyVersions"
        ],
        "operationId": "OntologyVersions_GetTheOnlyPublishedOntologyJsonBySQL",
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "includeGraphWalkConfig",
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/OntologyVersions/GetPublishedOntologyBySubscription": {
      "get": {
        "tags": [
          "OntologyVersions"
        ],
        "operationId": "OntologyVersions_GetTheOnlyPublishedOntologyJson",
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "includeGraphWalkConfig",
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/OntologyVersions/GetPublishedOntologyVersionBySubscription": {
      "get": {
        "tags": [
          "OntologyVersions"
        ],
        "operationId": "OntologyVersions_GetTheOnlyPublishedOntologyVersion",
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DbOntologyVersions"
            }
          }
        }
      }
    },
    "/OntologyVersions/Export/{ontologyVersionId}": {
      "get": {
        "tags": [
          "OntologyVersions"
        ],
        "operationId": "OntologyVersions_ExportOntology",
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "ontologyVersionId",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "format",
            "type": "integer",
            "format": "int32",
            "enum": [
              0,
              1,
              2
            ]
          },
          {
            "in": "query",
            "name": "fileType",
            "type": "integer",
            "format": "int32",
            "enum": [
              0,
              1
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/OntologyVersions/Publish/{ontologyVersionId}": {
      "put": {
        "tags": [
          "OntologyVersions"
        ],
        "operationId": "OntologyVersions_PublishOntologyVersion",
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "ontologyVersionId",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PublishOntologyVersionDTO"
            }
          }
        }
      }
    },
    "/OntologyVersions/UploadNewVersion": {
      "post": {
        "tags": [
          "OntologyVersions"
        ],
        "operationId": "OntologyVersions_UploadNewVersion",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "actionType",
            "type": "integer",
            "format": "int32",
            "enum": [
              0,
              1,
              2
            ]
          },
          {
            "in": "query",
            "name": "type",
            "type": "integer",
            "format": "int32",
            "enum": [
              0,
              1,
              2
            ]
          },
          {
            "in": "query",
            "name": "baseOntologyType",
            "type": "integer",
            "format": "int32",
            "enum": [
              0,
              1
            ]
          },
          {
            "in": "formData",
            "name": "OntologyId",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "formData",
            "name": "DbOntology",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "OntologyVersionId",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "formData",
            "name": "Version",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "CreatedBy",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "formData",
            "name": "ModifiedBy",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "formData",
            "name": "CreatedByUser",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "ModifiedByUser",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "Ontology",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "ModifiedDateTime",
            "type": "string",
            "format": "date-time"
          },
          {
            "in": "formData",
            "name": "CreateDateTime",
            "type": "string",
            "format": "date-time"
          },
          {
            "in": "formData",
            "name": "OntologyState",
            "type": "integer",
            "format": "int32",
            "enum": [
              1,
              2
            ]
          },
          {
            "in": "formData",
            "name": "Name",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "Description",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "TypeCount",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "formData",
            "name": "GraphWalkConfig",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "GraphWalkNamespaceToTypesToDepthsDictionary",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DbOntologyVersions"
            }
          }
        }
      }
    },
    "/OntologyVersions/{ontologyVersionId}/updateDescription": {
      "put": {
        "tags": [
          "OntologyVersions"
        ],
        "operationId": "OntologyVersions_UpdateNameAndDescription",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "ontologyVersionId",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "formData",
            "name": "OntologyId",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "formData",
            "name": "DbOntology",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "OntologyVersionId",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "formData",
            "name": "Version",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "CreatedBy",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "formData",
            "name": "ModifiedBy",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "formData",
            "name": "CreatedByUser",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "ModifiedByUser",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "Ontology",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "ModifiedDateTime",
            "type": "string",
            "format": "date-time"
          },
          {
            "in": "formData",
            "name": "CreateDateTime",
            "type": "string",
            "format": "date-time"
          },
          {
            "in": "formData",
            "name": "OntologyState",
            "type": "integer",
            "format": "int32",
            "enum": [
              1,
              2
            ]
          },
          {
            "in": "formData",
            "name": "Name",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "Description",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "TypeCount",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "formData",
            "name": "GraphWalkConfig",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "GraphWalkNamespaceToTypesToDepthsDictionary",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DbOntologyVersions"
            }
          }
        }
      }
    },
    "/OntologyVersions/{ontologyVersionId}/clone": {
      "post": {
        "tags": [
          "OntologyVersions"
        ],
        "operationId": "OntologyVersions_Clone",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "ontologyVersionId",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "isMinor",
            "type": "boolean"
          },
          {
            "in": "formData",
            "name": "OntologyId",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "formData",
            "name": "DbOntology",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "OntologyVersionId",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "formData",
            "name": "Version",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "CreatedBy",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "formData",
            "name": "ModifiedBy",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "formData",
            "name": "CreatedByUser",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "ModifiedByUser",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "Ontology",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "ModifiedDateTime",
            "type": "string",
            "format": "date-time"
          },
          {
            "in": "formData",
            "name": "CreateDateTime",
            "type": "string",
            "format": "date-time"
          },
          {
            "in": "formData",
            "name": "OntologyState",
            "type": "integer",
            "format": "int32",
            "enum": [
              1,
              2
            ]
          },
          {
            "in": "formData",
            "name": "Name",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "Description",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "TypeCount",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "formData",
            "name": "GraphWalkConfig",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "GraphWalkNamespaceToTypesToDepthsDictionary",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DbOntologyVersions"
            }
          }
        }
      }
    },
    "/OntologyVersions/BulkDelete": {
      "delete": {
        "tags": [
          "OntologyVersions"
        ],
        "operationId": "OntologyVersions_BulkDelete",
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "ontologyVersionIds",
            "required": true,
            "type": "array",
            "items": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DbOntologyVersions"
              }
            }
          }
        }
      }
    },
    "/OntologyVersions/EnableIngestion": {
      "get": {
        "tags": [
          "OntologyVersions"
        ],
        "operationId": "OntologyVersions_EnableIngestion",
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "boolean"
            }
          }
        }
      }
    },
    "/KeepAlive/Status": {
      "get": {
        "tags": [
          "Ping"
        ],
        "operationId": "Ping_Status",
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/KeepAlive/Ping": {
      "get": {
        "tags": [
          "Ping"
        ],
        "operationId": "Ping_PublicPing",
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/KeepAlive/DbStatus": {
      "get": {
        "tags": [
          "Ping"
        ],
        "operationId": "Ping_DatabaseStatus",
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/KeepAlive/DbPing": {
      "get": {
        "tags": [
          "Ping"
        ],
        "operationId": "Ping_NoAuthDatabasePing",
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/Primitives": {
      "get": {
        "tags": [
          "Primitives"
        ],
        "operationId": "Primitives_GetAll",
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DbPrimitives"
              }
            }
          }
        }
      }
    },
    "/api/RequesterIdExtraction": {
      "get": {
        "tags": [
          "RequesterIdExtraction"
        ],
        "operationId": "RequesterIdExtraction_GetExtractionTemplate",
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RequesterExtractionModel"
            }
          }
        }
      },
      "post": {
        "tags": [
          "RequesterIdExtraction"
        ],
        "operationId": "RequesterIdExtraction_AddExtractionTemplate",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "TemplateKey",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "Predicate",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/api/sasho-modeling/state/{state}": {
      "get": {
        "tags": [
          "SashoModeling"
        ],
        "operationId": "SashoModeling_GetSashoModelsByState",
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "state",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/api/sasho-modeling/annotations/{count}": {
      "get": {
        "tags": [
          "SashoModeling"
        ],
        "operationId": "SashoModeling_GetLatestAnnotations",
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "count",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/api/sasho-modeling/annotations": {
      "post": {
        "tags": [
          "SashoModeling"
        ],
        "operationId": "SashoModeling_UploadAnnotations",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        }
      }
    },
    "/api/sasho-modeling/model/{versionId}": {
      "get": {
        "tags": [
          "SashoModeling"
        ],
        "operationId": "SashoModeling_GetSashoModelsByVersionId",
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "versionId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SashoConfigurationModel"
            }
          }
        }
      }
    },
    "/api/sasho-modeling/model/{modelId}/entity/{entityName}": {
      "get": {
        "tags": [
          "SashoModeling"
        ],
        "operationId": "SashoModeling_GetEntityModel",
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "modelId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "entityName",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/XmlViewModel"
            }
          }
        }
      }
    },
    "/api/sasho-modeling/model/{modelId}/GetEntityNames": {
      "get": {
        "tags": [
          "SashoModeling"
        ],
        "operationId": "SashoModeling_GetEntityNames",
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "modelId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/EntityNameInfo"
              }
            }
          }
        }
      }
    },
    "/api/sasho-modeling/model/{modelId}/Relationships": {
      "post": {
        "tags": [
          "SashoModeling"
        ],
        "operationId": "SashoModeling_GetRelationships",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "modelId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/api/sasho-modeling/metrics/{modelId}": {
      "get": {
        "tags": [
          "SashoModeling"
        ],
        "operationId": "SashoModeling_GetSashoMetrics",
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "modelId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "format": "double",
                "type": "number"
              }
            }
          }
        }
      }
    },
    "/api/sasho-modeling/suggestions/alias": {
      "post": {
        "tags": [
          "SashoModeling"
        ],
        "operationId": "SashoModeling_GetAliasSuggestions",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "Alias",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "EntityType",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "Count",
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AliasSuggestionResponseModel"
            }
          }
        }
      }
    },
    "/api/sasho-modeling/sparql/GetSparqlObjects": {
      "post": {
        "tags": [
          "SashoModeling"
        ],
        "operationId": "SashoModeling_GetSparqlObjects",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "ModelId",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "Query",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SparqlVisualModel"
              }
            }
          }
        }
      }
    },
    "/api/sasho-modeling/publish/{modelId}": {
      "post": {
        "tags": [
          "SashoModeling"
        ],
        "operationId": "SashoModeling_PublishModel",
        "parameters": [
          {
            "in": "path",
            "name": "modelId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/api/sasho-modeling/reset/{modelId}": {
      "post": {
        "tags": [
          "SashoModeling"
        ],
        "operationId": "SashoModeling_ResetModel",
        "parameters": [
          {
            "in": "path",
            "name": "modelId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/api/sasho-modeling/models/uploadModels": {
      "post": {
        "tags": [
          "SashoModeling"
        ],
        "operationId": "SashoModeling_UploadModels",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "EntityModels",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "in": "formData",
            "name": "SparqlConfig",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "DisambiguateModel",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "RestatementConfig",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "ContextualLanguageModel",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "IndividualUpload",
            "type": "boolean"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/Ontology/AddSchemaNamespace/{ontologyVersionId}": {
      "post": {
        "tags": [
          "Schema"
        ],
        "operationId": "Schema_AddSchemaNamespace",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "ontologyVersionId",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "formData",
            "name": "NamespaceUri",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "NamespaceShorthand",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "PreviousNamespaceShorthand",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/Ontology/EditSchemaNamespace/{ontologyVersionId}": {
      "put": {
        "tags": [
          "Schema"
        ],
        "operationId": "Schema_EditSchemaNamespace",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "ontologyVersionId",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "formData",
            "name": "NamespaceUri",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "NamespaceShorthand",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "PreviousNamespaceShorthand",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/Ontology/DeleteSchemaNamespace/{ontologyVersionId}": {
      "post": {
        "tags": [
          "Schema"
        ],
        "operationId": "Schema_DeleteSchemaNamespace",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "ontologyVersionId",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "formData",
            "name": "OntologyNamespace",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "TypeName",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "PropertyName",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/Ontology/AddSchemaType/{ontologyVersionId}": {
      "post": {
        "tags": [
          "Schema"
        ],
        "operationId": "Schema_AddSchemaType",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "ontologyVersionId",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "formData",
            "name": "Namespace",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "Name",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "FriendlyName",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "Description",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "Category",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "Alias",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "GraphWalkDepth",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "formData",
            "name": "Parent",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "Properties",
            "type": "array",
            "items": {
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/Ontology/EditSchemaType/{ontologyVersionId}": {
      "put": {
        "tags": [
          "Schema"
        ],
        "operationId": "Schema_EditSchemaType",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "ontologyVersionId",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "formData",
            "name": "Namespace",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "Name",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "FriendlyName",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "Description",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "Category",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "Alias",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "GraphWalkDepth",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "formData",
            "name": "Parent",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "Properties",
            "type": "array",
            "items": {
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/Ontology/AddSchemaTypeWithProperties/{ontologyVersionId}": {
      "post": {
        "tags": [
          "Schema"
        ],
        "operationId": "Schema_AddSchemaTypeWithProperties",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "ontologyVersionId",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "formData",
            "name": "Namespace",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "Name",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "FriendlyName",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "Description",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "Category",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "Alias",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "GraphWalkDepth",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "formData",
            "name": "Parent",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "Properties",
            "type": "array",
            "items": {
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/Ontology/EditSchemaTypeWithProperties/{ontologyVersionId}": {
      "put": {
        "tags": [
          "Schema"
        ],
        "operationId": "Schema_EditSchemaTypeWithProperties",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "ontologyVersionId",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "formData",
            "name": "Namespace",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "Name",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "FriendlyName",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "Description",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "Category",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "Alias",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "GraphWalkDepth",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "formData",
            "name": "Parent",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "Properties",
            "type": "array",
            "items": {
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/Ontology/DeleteSchemaType/{ontologyVersionId}": {
      "post": {
        "tags": [
          "Schema"
        ],
        "operationId": "Schema_DeleteSchemaType",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "ontologyVersionId",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "formData",
            "name": "OntologyNamespace",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "TypeName",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "PropertyName",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/Ontology/AddSchemaProperty/{ontologyVersionId}": {
      "post": {
        "tags": [
          "Schema"
        ],
        "operationId": "Schema_AddSchemaProperty",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "ontologyVersionId",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "formData",
            "name": "Name",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "FriendlyName",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "Description",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "Multiplicity",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "Type",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "Owner",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "UpdateStatus",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/Ontology/EditSchemaProperty/{ontologyVersionId}": {
      "put": {
        "tags": [
          "Schema"
        ],
        "operationId": "Schema_EditSchemaProperty",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "ontologyVersionId",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "formData",
            "name": "Name",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "FriendlyName",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "Description",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "Multiplicity",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "Type",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "Owner",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "UpdateStatus",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/Ontology/DeleteSchemaProperty/{ontologyVersionId}": {
      "post": {
        "tags": [
          "Schema"
        ],
        "operationId": "Schema_DeleteSchemaProperty",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "ontologyVersionId",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "formData",
            "name": "OntologyNamespace",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "TypeName",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "PropertyName",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/Ontology/LatestOntologyTypes": {
      "get": {
        "tags": [
          "Schema"
        ],
        "operationId": "Schema_GetLatestOntology",
        "produces": [
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/OntologyDictionary"
            }
          }
        }
      }
    },
    "/Ontology/LatestSchemaPropertyStatsByEntityType": {
      "post": {
        "tags": [
          "Schema"
        ],
        "operationId": "Schema_GetSchemaPropertyStatsPerType",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/Ontology/LatestOntologyTypesByVersion/{ontologyVersionId}": {
      "get": {
        "tags": [
          "Schema"
        ],
        "operationId": "Schema_GetOntology",
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "ontologyVersionId",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/OntologyDictionary"
            }
          }
        }
      }
    },
    "/SearchOntology": {
      "post": {
        "tags": [
          "Search"
        ],
        "operationId": "Search_Search",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "caseSensitive",
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "excludeNamespaces",
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "excludeProperties",
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "excludeTypes",
            "type": "boolean"
          },
          {
            "in": "formData",
            "name": "AzureSubscriptionId",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "OntologyVersionId",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "formData",
            "name": "SearchTerm",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SchemaSearchResult"
              }
            }
          }
        }
      }
    },
    "/Tags": {
      "get": {
        "tags": [
          "Tags"
        ],
        "operationId": "Tags_GetAll",
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DbTags"
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Tags"
        ],
        "operationId": "Tags_Post",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "TagId",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "formData",
            "name": "Name",
            "required": true,
            "type": "string",
            "maxLength": 512,
            "minLength": 0
          },
          {
            "in": "formData",
            "name": "ModifiedDateTime",
            "type": "string",
            "format": "date-time"
          },
          {
            "in": "formData",
            "name": "CreateDateTime",
            "type": "string",
            "format": "date-time"
          },
          {
            "in": "formData",
            "name": "CreatedBy",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "formData",
            "name": "CreatedByUser",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "ModifiedBy",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "formData",
            "name": "ModifiedByUser",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DbTags"
            }
          }
        }
      }
    },
    "/Tags/{tagId}": {
      "get": {
        "tags": [
          "Tags"
        ],
        "operationId": "Tags_Get",
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "tagId",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DbTags"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Tags"
        ],
        "operationId": "Tags_Put",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "tagId",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "formData",
            "name": "TagId",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "formData",
            "name": "Name",
            "required": true,
            "type": "string",
            "maxLength": 512,
            "minLength": 0
          },
          {
            "in": "formData",
            "name": "ModifiedDateTime",
            "type": "string",
            "format": "date-time"
          },
          {
            "in": "formData",
            "name": "CreateDateTime",
            "type": "string",
            "format": "date-time"
          },
          {
            "in": "formData",
            "name": "CreatedBy",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "formData",
            "name": "CreatedByUser",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "ModifiedBy",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "formData",
            "name": "ModifiedByUser",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DbTags"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Tags"
        ],
        "operationId": "Tags_Delete",
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "tagId",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DbTags"
            }
          }
        }
      }
    },
    "/Tags/BulkDelete": {
      "delete": {
        "tags": [
          "Tags"
        ],
        "operationId": "Tags_BulkDelete",
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "ids",
            "required": true,
            "type": "array",
            "items": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DbTags"
              }
            }
          }
        }
      }
    },
    "/Users": {
      "get": {
        "tags": [
          "Users"
        ],
        "operationId": "Users_GetAll",
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DbUsers"
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Users"
        ],
        "operationId": "Users_Post",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "UserId",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "formData",
            "name": "ObjectId",
            "required": true,
            "type": "string",
            "maxLength": 512,
            "minLength": 0
          },
          {
            "in": "formData",
            "name": "Name",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "AzureSubscriptionId",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "formData",
            "name": "AzureSubscription",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DbUsers"
            }
          }
        }
      }
    },
    "/Users/{userId}": {
      "get": {
        "tags": [
          "Users"
        ],
        "operationId": "Users_Get",
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DbUsers"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Users"
        ],
        "operationId": "Users_Put",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "formData",
            "name": "UserId",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "formData",
            "name": "ObjectId",
            "required": true,
            "type": "string",
            "maxLength": 512,
            "minLength": 0
          },
          {
            "in": "formData",
            "name": "Name",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "AzureSubscriptionId",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "formData",
            "name": "AzureSubscription",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DbUsers"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Users"
        ],
        "operationId": "Users_Delete",
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DbUsers"
            }
          }
        }
      }
    },
    "/api/conflation/validation/{validationId}/samples/{sampleId}": {
      "get": {
        "tags": [
          "Validation"
        ],
        "operationId": "Validation_GetValidationSample",
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "validationId",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "sampleId",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DbValidationSample"
            }
          }
        }
      }
    },
    "/api/conflation/validation/{validationId}/samples/{sampleId}/update": {
      "post": {
        "tags": [
          "Validation"
        ],
        "operationId": "Validation_UpdateSample",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "validationId",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "sampleId",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "formData",
            "name": "SampleId",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "formData",
            "name": "State",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "Type",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ValidationResponse"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "DbAnnotations": {
      "required": [
        "AnnotatedQuery",
        "RawQuery"
      ],
      "type": "object",
      "properties": {
        "AnnotationId": {
          "format": "int32",
          "type": "integer"
        },
        "IntentId": {
          "format": "int32",
          "type": "integer"
        },
        "Intent": {
          "$ref": "#/definitions/DbIntents"
        },
        "ModifiedDateTime": {
          "format": "date-time",
          "type": "string"
        },
        "CreateDateTime": {
          "format": "date-time",
          "type": "string"
        },
        "CreatedBy": {
          "format": "int32",
          "type": "integer"
        },
        "CreatedByUser": {
          "$ref": "#/definitions/DbUsers"
        },
        "ModifiedBy": {
          "format": "int32",
          "type": "integer"
        },
        "ModifiedByUser": {
          "$ref": "#/definitions/DbUsers"
        },
        "AnnotatedQuery": {
          "type": "string"
        },
        "RawQuery": {
          "type": "string"
        },
        "Submitted": {
          "type": "boolean"
        }
      }
    },
    "DbIntents": {
      "required": [
        "Name"
      ],
      "type": "object",
      "properties": {
        "IntentId": {
          "format": "int32",
          "type": "integer"
        },
        "Name": {
          "maxLength": 512,
          "minLength": 0,
          "type": "string"
        },
        "ModifiedDateTime": {
          "format": "date-time",
          "type": "string"
        },
        "CreateDateTime": {
          "format": "date-time",
          "type": "string"
        },
        "CreatedBy": {
          "format": "int32",
          "type": "integer"
        },
        "CreatedByUser": {
          "$ref": "#/definitions/DbUsers"
        },
        "ModifiedBy": {
          "format": "int32",
          "type": "integer"
        },
        "ModifiedByUser": {
          "$ref": "#/definitions/DbUsers"
        },
        "TargetEntityTypeName": {
          "maxLength": 512,
          "minLength": 0,
          "type": "string"
        },
        "NonEkgIntent": {
          "type": "boolean"
        }
      }
    },
    "DbUsers": {
      "required": [
        "ObjectId"
      ],
      "type": "object",
      "properties": {
        "UserId": {
          "format": "int32",
          "type": "integer"
        },
        "ObjectId": {
          "maxLength": 512,
          "minLength": 0,
          "type": "string"
        },
        "Name": {
          "type": "string"
        },
        "AzureSubscriptionId": {
          "format": "int32",
          "type": "integer"
        },
        "AzureSubscription": {
          "$ref": "#/definitions/DbAzureSubscriptions"
        }
      }
    },
    "DbAzureSubscriptions": {
      "required": [
        "SubscriptionId"
      ],
      "type": "object",
      "properties": {
        "AzureSubscriptionId": {
          "format": "int32",
          "type": "integer"
        },
        "SubscriptionId": {
          "maxLength": 512,
          "minLength": 0,
          "type": "string"
        },
        "Users": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DbUsers"
          }
        }
      }
    },
    "DbApiRoutes": {
      "required": [
        "Name"
      ],
      "type": "object",
      "properties": {
        "Id": {
          "format": "int32",
          "type": "integer"
        },
        "Name": {
          "maxLength": 512,
          "minLength": 0,
          "type": "string"
        },
        "Version": {
          "format": "date-time",
          "type": "string"
        },
        "Route": {
          "maxLength": 512,
          "minLength": 0,
          "type": "string"
        },
        "Method": {
          "type": "string"
        }
      }
    },
    "CompositeDataSourceMappingModel": {
      "type": "object",
      "properties": {
        "DataSource": {
          "$ref": "#/definitions/DbDataSources"
        },
        "MappingVersions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DbDataSourceMappingVersions"
          }
        },
        "AzureSubscriptionId": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "DbDataSources": {
      "type": "object",
      "properties": {
        "DataSourceId": {
          "format": "int32",
          "type": "integer"
        },
        "SourceName": {
          "type": "string"
        },
        "SampleData": {
          "type": "string"
        },
        "MappingVersions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DbDataSourceMappingVersions"
          }
        },
        "CreatedBy": {
          "format": "int32",
          "type": "integer"
        },
        "ModifiedBy": {
          "format": "int32",
          "type": "integer"
        },
        "CreatedByUser": {
          "$ref": "#/definitions/DbUsers"
        },
        "ModifiedByUser": {
          "$ref": "#/definitions/DbUsers"
        },
        "ModifiedDateTime": {
          "format": "date-time",
          "type": "string"
        },
        "CreateDateTime": {
          "format": "date-time",
          "type": "string"
        },
        "AzureSubscriptionId": {
          "format": "int32",
          "type": "integer"
        },
        "AzureSubscription": {
          "$ref": "#/definitions/DbAzureSubscriptions"
        },
        "DeletionJobId": {
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "Status": {
          "format": "int32",
          "enum": [
            0,
            1,
            2
          ],
          "type": "integer"
        }
      }
    },
    "DbDataSourceMappingVersions": {
      "type": "object",
      "properties": {
        "DataSourceId": {
          "format": "int32",
          "type": "integer"
        },
        "DbDataSource": {
          "$ref": "#/definitions/DbDataSources"
        },
        "DataSourceMappingVersionId": {
          "format": "int32",
          "type": "integer"
        },
        "MappingXml": {
          "type": "string"
        },
        "CreatedBy": {
          "format": "int32",
          "type": "integer"
        },
        "ModifiedBy": {
          "format": "int32",
          "type": "integer"
        },
        "CreatedByUser": {
          "$ref": "#/definitions/DbUsers"
        },
        "ModifiedByUser": {
          "$ref": "#/definitions/DbUsers"
        },
        "ModifiedDateTime": {
          "format": "date-time",
          "type": "string"
        },
        "CreateDateTime": {
          "format": "date-time",
          "type": "string"
        },
        "SchemaType": {
          "type": "string"
        },
        "SourcePropertyCount": {
          "format": "int32",
          "type": "integer"
        },
        "MappedPropertyCount": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "CompositeOntologyModel": {
      "type": "object",
      "properties": {
        "Ontology": {
          "$ref": "#/definitions/DbOntology"
        },
        "Version": {
          "$ref": "#/definitions/DbOntologyVersions"
        }
      }
    },
    "DbOntology": {
      "type": "object",
      "properties": {
        "Name": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "ModifiedDateTime": {
          "format": "date-time",
          "type": "string"
        },
        "CreateDateTime": {
          "format": "date-time",
          "type": "string"
        },
        "AzureSubscriptionId": {
          "format": "int32",
          "type": "integer"
        },
        "AzureSubscription": {
          "$ref": "#/definitions/DbAzureSubscriptions"
        },
        "CreatedBy": {
          "format": "int32",
          "type": "integer"
        },
        "CreatedByUser": {
          "$ref": "#/definitions/DbUsers"
        },
        "ModifiedBy": {
          "format": "int32",
          "type": "integer"
        },
        "ModifiedByUser": {
          "$ref": "#/definitions/DbUsers"
        },
        "OntologyId": {
          "format": "int32",
          "type": "integer"
        },
        "OntologyVersions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DbOntologyVersions"
          }
        },
        "UsingCustomGraphWalkConfig": {
          "type": "boolean"
        },
        "CustomGraphWalkConfig": {
          "type": "string"
        }
      }
    },
    "DbOntologyVersions": {
      "type": "object",
      "properties": {
        "OntologyId": {
          "format": "int32",
          "type": "integer"
        },
        "DbOntology": {
          "$ref": "#/definitions/DbOntology"
        },
        "OntologyVersionId": {
          "format": "int32",
          "type": "integer"
        },
        "Version": {
          "type": "string"
        },
        "CreatedBy": {
          "format": "int32",
          "type": "integer"
        },
        "ModifiedBy": {
          "format": "int32",
          "type": "integer"
        },
        "CreatedByUser": {
          "$ref": "#/definitions/DbUsers"
        },
        "ModifiedByUser": {
          "$ref": "#/definitions/DbUsers"
        },
        "Ontology": {
          "type": "string"
        },
        "ModifiedDateTime": {
          "format": "date-time",
          "type": "string"
        },
        "CreateDateTime": {
          "format": "date-time",
          "type": "string"
        },
        "OntologyState": {
          "format": "int32",
          "enum": [
            1,
            2
          ],
          "type": "integer"
        },
        "Name": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "TypeCount": {
          "format": "int32",
          "type": "integer"
        },
        "GraphWalkConfig": {
          "type": "string"
        },
        "GraphWalkNamespaceToTypesToDepthsDictionary": {
          "type": "string"
        }
      }
    },
    "DbConflationExperiment": {
      "required": [
        "Name"
      ],
      "type": "object",
      "properties": {
        "RowVersion": {
          "format": "byte",
          "type": "string"
        },
        "ExperimentId": {
          "format": "int32",
          "type": "integer"
        },
        "Name": {
          "maxLength": 450,
          "minLength": 0,
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "ExperimentType": {
          "type": "string"
        },
        "DataSourceId": {
          "format": "int32",
          "type": "integer"
        },
        "DataSource": {
          "$ref": "#/definitions/DbDataSources"
        },
        "Type": {
          "type": "string"
        },
        "RulesJson": {
          "type": "string"
        },
        "SynonymConfigJson": {
          "type": "string"
        },
        "AzureSubscriptionId": {
          "format": "int32",
          "type": "integer"
        },
        "AzureSubscription": {
          "$ref": "#/definitions/DbAzureSubscriptions"
        },
        "CreateDateTimeUtc": {
          "format": "date-time",
          "type": "string"
        },
        "ModifiedDateTimeUtc": {
          "format": "date-time",
          "type": "string"
        },
        "CreatedBy": {
          "format": "int32",
          "type": "integer"
        },
        "CreatedByUser": {
          "$ref": "#/definitions/DbUsers"
        },
        "ModifiedBy": {
          "format": "int32",
          "type": "integer"
        },
        "ModifiedByUser": {
          "$ref": "#/definitions/DbUsers"
        },
        "SamplingIndexId": {
          "format": "int32",
          "type": "integer"
        },
        "SamplingIndex": {
          "$ref": "#/definitions/DbSamplingIndexMetadata"
        },
        "ConflationIndexId": {
          "format": "int32",
          "type": "integer"
        },
        "ConflationIndex": {
          "$ref": "#/definitions/DbConflationIndexMetadata"
        },
        "ValidationId": {
          "format": "int32",
          "type": "integer"
        },
        "ValidationData": {
          "$ref": "#/definitions/DbValidation"
        },
        "State": {
          "format": "int32",
          "enum": [
            0,
            20,
            23,
            24,
            25,
            26,
            28,
            29,
            30,
            41,
            42,
            43,
            48,
            49,
            50,
            55,
            60,
            61
          ],
          "type": "integer"
        },
        "MatchingConfig": {
          "type": "string"
        },
        "ConfigurationId": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "ErrorMessage": {
          "type": "string"
        }
      }
    },
    "DbSamplingIndexMetadata": {
      "type": "object",
      "properties": {
        "Id": {
          "format": "int32",
          "type": "integer"
        },
        "Name": {
          "maxLength": 450,
          "minLength": 0,
          "type": "string"
        },
        "CreateDateTimeUtc": {
          "format": "date-time",
          "type": "string"
        },
        "ModifiedDateTimeUtc": {
          "format": "date-time",
          "type": "string"
        },
        "State": {
          "format": "int32",
          "enum": [
            0,
            1,
            2
          ],
          "type": "integer"
        },
        "SampleCount": {
          "format": "int32",
          "type": "integer"
        },
        "IsStorageDeleted": {
          "type": "boolean"
        },
        "RowVersion": {
          "format": "byte",
          "type": "string"
        }
      }
    },
    "DbConflationIndexMetadata": {
      "type": "object",
      "properties": {
        "Id": {
          "format": "int32",
          "type": "integer"
        },
        "Name": {
          "maxLength": 450,
          "minLength": 0,
          "type": "string"
        },
        "CreateDateTimeUtc": {
          "format": "date-time",
          "type": "string"
        },
        "ModifiedDateTimeUtc": {
          "format": "date-time",
          "type": "string"
        },
        "State": {
          "format": "int32",
          "enum": [
            0,
            1,
            2
          ],
          "type": "integer"
        },
        "IndexPath": {
          "type": "string"
        },
        "IsStorageDeleted": {
          "type": "boolean"
        },
        "RowVersion": {
          "format": "byte",
          "type": "string"
        }
      }
    },
    "DbValidation": {
      "type": "object",
      "properties": {
        "ValidationId": {
          "format": "int32",
          "type": "integer"
        },
        "Name": {
          "maxLength": 450,
          "minLength": 0,
          "type": "string"
        },
        "Samples": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DbValidationSample"
          }
        },
        "MatchingRate": {
          "format": "double",
          "type": "number"
        },
        "Precision": {
          "format": "double",
          "type": "number"
        },
        "Recall": {
          "format": "double",
          "type": "number"
        },
        "CreateDateTimeUtc": {
          "format": "date-time",
          "type": "string"
        },
        "ModifiedDateTimeUtc": {
          "format": "date-time",
          "type": "string"
        },
        "RowVersion": {
          "format": "byte",
          "type": "string"
        }
      }
    },
    "DbValidationSample": {
      "type": "object",
      "properties": {
        "ValidationId": {
          "format": "int32",
          "type": "integer"
        },
        "ValidationData": {
          "$ref": "#/definitions/DbValidation"
        },
        "SampleId": {
          "format": "int32",
          "type": "integer"
        },
        "Name": {
          "maxLength": 450,
          "minLength": 0,
          "type": "string"
        },
        "BlobName": {
          "type": "string"
        },
        "SourceKey": {
          "type": "string"
        },
        "EntityId": {
          "type": "string"
        },
        "State": {
          "format": "int32",
          "enum": [
            0,
            1,
            2,
            3
          ],
          "type": "integer"
        },
        "Type": {
          "format": "int32",
          "enum": [
            0,
            1,
            2
          ],
          "type": "integer"
        },
        "Content": {
          "type": "string"
        },
        "CreateDateTimeUtc": {
          "format": "date-time",
          "type": "string"
        },
        "ModifiedDateTimeUtc": {
          "format": "date-time",
          "type": "string"
        },
        "RowVersion": {
          "format": "byte",
          "type": "string"
        }
      }
    },
    "ExperimentResponse": {
      "type": "object",
      "properties": {
        "ExperimentId": {
          "format": "int32",
          "type": "integer"
        },
        "Name": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "DataSourceId": {
          "format": "int32",
          "type": "integer"
        },
        "DataSource": {
          "$ref": "#/definitions/DataSourceResponse"
        },
        "Type": {
          "type": "string"
        },
        "RulesJson": {
          "type": "string"
        },
        "SynonymConfigJson": {
          "type": "string"
        },
        "CreateDateTimeUtc": {
          "format": "date-time",
          "type": "string"
        },
        "ModifiedDateTimeUtc": {
          "format": "date-time",
          "type": "string"
        },
        "CreatedBy": {
          "format": "int32",
          "type": "integer"
        },
        "CreatedByUser": {
          "$ref": "#/definitions/UserResponse"
        },
        "ModifiedBy": {
          "format": "int32",
          "type": "integer"
        },
        "ModifiedByUser": {
          "$ref": "#/definitions/UserResponse"
        },
        "ValidationData": {
          "$ref": "#/definitions/ValidationResponse"
        },
        "State": {
          "type": "string"
        },
        "MatchingConfig": {
          "type": "string"
        },
        "ConfigurationId": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "ErrorMessage": {
          "type": "string"
        }
      }
    },
    "DataSourceResponse": {
      "type": "object",
      "properties": {
        "DataSourceId": {
          "format": "int32",
          "type": "integer"
        },
        "SourceName": {
          "type": "string"
        }
      }
    },
    "UserResponse": {
      "type": "object",
      "properties": {
        "UserId": {
          "format": "int32",
          "type": "integer"
        },
        "Name": {
          "type": "string"
        }
      }
    },
    "ValidationResponse": {
      "type": "object",
      "properties": {
        "ValidationId": {
          "format": "double",
          "type": "number"
        },
        "MatchingRate": {
          "format": "double",
          "type": "number"
        },
        "Precision": {
          "format": "double",
          "type": "number"
        },
        "Recall": {
          "format": "double",
          "type": "number"
        },
        "Samples": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ValidationSampleResponse"
          }
        }
      }
    },
    "ValidationSampleResponse": {
      "type": "object",
      "properties": {
        "SampleId": {
          "format": "int32",
          "type": "integer"
        },
        "State": {
          "type": "string"
        },
        "Type": {
          "type": "string"
        }
      }
    },
    "StateResponse": {
      "type": "object",
      "properties": {
        "ExperimentId": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "State": {
          "type": "string",
          "readOnly": true
        },
        "ErrorMessage": {
          "type": "string",
          "readOnly": true
        }
      }
    },
    "ModelResponse": {
      "type": "object",
      "properties": {
        "Type": {
          "type": "string",
          "readOnly": true
        },
        "RulesJson": {
          "type": "string",
          "readOnly": true
        },
        "SynonymConfigJson": {
          "type": "string",
          "readOnly": true
        }
      }
    },
    "RunMappingConfigModel": {
      "type": "object",
      "properties": {
        "MappingXml": {
          "type": "string"
        },
        "Document": {
          "type": "string"
        },
        "SourceName": {
          "type": "string"
        }
      }
    },
    "IngestionConfigModel": {
      "type": "object",
      "properties": {
        "OntologyUrl": {
          "type": "string"
        },
        "MappingXmlUrl": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "OntologyVersionId": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "CompositeDataSourceModel": {
      "type": "object",
      "properties": {
        "DataSource": {
          "$ref": "#/definitions/DbDataSources"
        },
        "MappingVersion": {
          "$ref": "#/definitions/DbDataSourceMappingVersions"
        }
      }
    },
    "DbIntentDTO": {
      "type": "object",
      "properties": {
        "IntentId": {
          "format": "int32",
          "type": "integer"
        },
        "Name": {
          "type": "string"
        },
        "ModifiedDateTime": {
          "format": "date-time",
          "type": "string"
        },
        "CreateDateTime": {
          "format": "date-time",
          "type": "string"
        },
        "CreatedBy": {
          "format": "int32",
          "type": "integer"
        },
        "CreatedByUser": {
          "$ref": "#/definitions/DbUsers"
        },
        "ModifiedBy": {
          "format": "int32",
          "type": "integer"
        },
        "ModifiedByUser": {
          "$ref": "#/definitions/DbUsers"
        },
        "TargetEntityTypeName": {
          "type": "string"
        },
        "NonEkgIntent": {
          "type": "boolean"
        },
        "Status": {
          "format": "int32",
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9
          ],
          "type": "integer"
        },
        "NumberOfUtterances": {
          "format": "int32",
          "type": "integer"
        },
        "LastPublishedDateTime": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "DbIntentClassifierModel": {
      "type": "object",
      "properties": {
        "Id": {
          "format": "int32",
          "type": "integer"
        },
        "ModifiedDateTime": {
          "format": "date-time",
          "type": "string"
        },
        "CreateDateTime": {
          "format": "date-time",
          "type": "string"
        },
        "CreatedBy": {
          "format": "int32",
          "type": "integer"
        },
        "CreatedByUser": {
          "$ref": "#/definitions/DbUsers"
        },
        "ModifiedBy": {
          "format": "int32",
          "type": "integer"
        },
        "ModifiedByUser": {
          "$ref": "#/definitions/DbUsers"
        },
        "NumberOfIntents": {
          "format": "int32",
          "type": "integer"
        },
        "NumberOfAnnotations": {
          "format": "int32",
          "type": "integer"
        },
        "ModelId": {
          "type": "string"
        },
        "ModelState": {
          "type": "string"
        }
      }
    },
    "CompositeIntent": {
      "type": "object",
      "properties": {
        "IntentName": {
          "type": "string"
        },
        "NonEkgIntent": {
          "type": "boolean"
        },
        "TargetEntityTypeName": {
          "type": "string"
        },
        "Queries": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "InfoPageModel": {
      "type": "object",
      "properties": {
        "ProductionModelInfo": {
          "$ref": "#/definitions/ProductionModelInfo"
        },
        "TrainingModelInfo": {
          "$ref": "#/definitions/TrainingModelInfo"
        },
        "IntermediateTrainingModelInfo": {
          "$ref": "#/definitions/IntermediateTrainingModelInfo"
        },
        "SavedModelInfo": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SavedModelInfo"
          }
        }
      }
    },
    "ProductionModelInfo": {
      "type": "object",
      "properties": {
        "ModelId": {
          "type": "string"
        },
        "SparqlTranslationConfigNames": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "TrainingModelInfo": {
      "type": "object",
      "properties": {
        "PublishedOntologyName": {
          "type": "string"
        },
        "PublishedOntologyVersion": {
          "type": "string"
        },
        "ModelOntologyVersion": {
          "type": "string"
        },
        "PublishedOntologyLastUpdatedTime": {
          "type": "string"
        },
        "HasModels": {
          "type": "boolean"
        },
        "ModelId": {
          "type": "string"
        },
        "SparqlTranslationConfigNames": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "IntermediateTrainingModelInfo": {
      "type": "object",
      "properties": {
        "ModelId": {
          "type": "string"
        },
        "SparqlTranslationConfigNames": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "SavedModelInfo": {
      "type": "object",
      "properties": {
        "ModelId": {
          "type": "string"
        },
        "SparqlTranslationConfigNames": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "AnnotationsViewModel": {
      "type": "object",
      "properties": {
        "Query": {
          "type": "string"
        },
        "SparqlAnnotations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SparqlAnnotationViewModel"
          }
        },
        "QueryAnnotations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/QueryAnnotation"
          }
        }
      }
    },
    "SparqlAnnotationViewModel": {
      "type": "object",
      "properties": {
        "Sparql": {
          "type": "string"
        },
        "Interpretation": {
          "type": "string"
        },
        "Rating": {
          "format": "int32",
          "enum": [
            0,
            1,
            2,
            3,
            4,
            -1
          ],
          "type": "integer"
        }
      }
    },
    "QueryAnnotation": {
      "type": "object",
      "properties": {
        "Phrase": {
          "type": "string"
        },
        "StartIndex": {
          "format": "int32",
          "type": "integer"
        },
        "Length": {
          "format": "int32",
          "type": "integer"
        },
        "AnnotationType": {
          "format": "int32",
          "enum": [
            0,
            1,
            2,
            3,
            4
          ],
          "type": "integer"
        },
        "EntityAnnotation": {
          "type": "string"
        },
        "AttributeAnnotation": {
          "type": "string"
        },
        "ConditionOperator": {
          "type": "string"
        },
        "ConditionValue": {
          "type": "string"
        },
        "RelationshipAttribute": {
          "type": "string"
        }
      }
    },
    "VerifyMappingResponse": {
      "type": "object",
      "properties": {
        "OntologyVersion": {
          "type": "string"
        },
        "OntologyVersionName": {
          "type": "string"
        },
        "Entities": {
          "type": "array",
          "items": {
            "type": "object"
          }
        }
      }
    },
    "OneClickOnboardRequest": {
      "type": "object",
      "properties": {
        "BlobContainerLink": {
          "type": "string"
        }
      }
    },
    "OneClickOnboardResponse": {
      "type": "object",
      "properties": {
        "SuccessMessage": {
          "type": "string"
        },
        "OntologyId": {
          "format": "int32",
          "type": "integer"
        },
        "OntologyName": {
          "type": "string"
        }
      }
    },
    "EKGOnboardingArtifacts": {
      "type": "object",
      "properties": {
        "OntologyName": {
          "type": "string"
        },
        "OntologyJson": {
          "type": "string"
        },
        "DataSourceArtifacts": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/DataSourceArtifacts"
          },
          "readOnly": true
        },
        "GraphWalkSettings": {
          "$ref": "#/definitions/GraphWalkSettingsDTO"
        }
      }
    },
    "DataSourceArtifacts": {
      "type": "object",
      "properties": {
        "SchemaType": {
          "type": "string"
        },
        "MappingXml": {
          "type": "string"
        },
        "SampleData": {
          "type": "string"
        }
      }
    },
    "GraphWalkSettingsDTO": {
      "type": "object",
      "properties": {
        "NamespaceToTypesToDepthsDictionary": {
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "additionalProperties": {
              "format": "int32",
              "type": "integer"
            }
          }
        }
      }
    },
    "OntologyDTO": {
      "type": "object",
      "properties": {
        "Name": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "ModifiedDateTime": {
          "format": "date-time",
          "type": "string"
        },
        "CreateDateTime": {
          "format": "date-time",
          "type": "string"
        },
        "AzureSubscriptionId": {
          "format": "int32",
          "type": "integer"
        },
        "AzureSubscription": {
          "$ref": "#/definitions/DbAzureSubscriptions"
        },
        "CreatedBy": {
          "format": "int32",
          "type": "integer"
        },
        "CreatedByUser": {
          "$ref": "#/definitions/DbUsers"
        },
        "ModifiedBy": {
          "format": "int32",
          "type": "integer"
        },
        "ModifiedByUser": {
          "$ref": "#/definitions/DbUsers"
        },
        "OntologyId": {
          "format": "int32",
          "type": "integer"
        },
        "OntologyVersions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DbOntologyVersions"
          }
        },
        "UsingCustomGraphWalkConfig": {
          "type": "boolean"
        },
        "DataSources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DbDataSources"
          }
        },
        "TypeCount": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "PublishOntologyVersionDTO": {
      "type": "object",
      "properties": {
        "Warning": {
          "type": "string"
        },
        "OntologyVersion": {
          "$ref": "#/definitions/DbOntologyVersions"
        }
      }
    },
    "DbPrimitives": {
      "required": [
        "PrimitiveType"
      ],
      "type": "object",
      "properties": {
        "PrimitiveTypeId": {
          "format": "int32",
          "enum": [
            1,
            2,
            3,
            4,
            5
          ],
          "type": "integer"
        },
        "PrimitiveType": {
          "maxLength": 512,
          "minLength": 0,
          "type": "string"
        }
      }
    },
    "RequesterExtractionParameters": {
      "type": "object",
      "properties": {
        "TemplateKey": {
          "type": "string"
        },
        "Predicate": {
          "type": "string"
        }
      }
    },
    "RequesterExtractionModel": {
      "type": "object",
      "properties": {
        "TemplateKey": {
          "type": "string"
        },
        "SparqlTemplate": {
          "type": "string"
        }
      }
    },
    "UserAnnotation": {
      "type": "object",
      "properties": {
        "Query": {
          "type": "string"
        },
        "QueryAnnotations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/IAnnotation"
          }
        },
        "SparqlAnnotations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SparqlAnnotation"
          }
        },
        "CreatedDateTime": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "IAnnotation": {
      "type": "object",
      "properties": {
        "Type": {
          "format": "int32",
          "enum": [
            0,
            1,
            2,
            3,
            4
          ],
          "type": "integer",
          "readOnly": true
        },
        "Phrase": {
          "type": "string"
        },
        "StartIndex": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "SparqlAnnotation": {
      "type": "object",
      "properties": {
        "Sparql": {
          "type": "string"
        },
        "Interpretation": {
          "$ref": "#/definitions/SemanticInterpretation"
        },
        "Rating": {
          "format": "int32",
          "enum": [
            0,
            1,
            2,
            3,
            4,
            -1
          ],
          "type": "integer"
        }
      }
    },
    "SemanticInterpretation": {
      "type": "object",
      "properties": {
        "Expression": {
          "type": "string"
        },
        "RootFrame": {
          "$ref": "#/definitions/RootFrame"
        },
        "ScoreVector": {
          "type": "object",
          "additionalProperties": {
            "format": "double",
            "type": "number"
          }
        },
        "FrameBindingInfo": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FrameBindingInfo"
          }
        }
      }
    },
    "RootFrame": {
      "type": "object",
      "properties": {
        "Utterance": {
          "type": "string"
        },
        "TokenSequence": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TokenInfo"
          }
        },
        "FirstTokenIndex": {
          "format": "int32",
          "type": "integer"
        },
        "LastTokenIndex": {
          "format": "int32",
          "type": "integer"
        },
        "FrameType": {
          "type": "string"
        },
        "LabeledBracketNotation": {
          "type": "string"
        },
        "ChildFrames": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Frame"
          }
        }
      }
    },
    "FrameBindingInfo": {
      "type": "object",
      "properties": {
        "FrameInfo": {
          "$ref": "#/definitions/FrameInfo"
        },
        "EntityTerm": {
          "$ref": "#/definitions/EntityTerm"
        }
      }
    },
    "TokenInfo": {
      "type": "object",
      "properties": {
        "Value": {
          "type": "string"
        },
        "StartIndex": {
          "format": "int32",
          "type": "integer"
        },
        "Length": {
          "format": "int32",
          "type": "integer"
        },
        "Type": {
          "type": "string"
        },
        "SpellCorrection": {
          "$ref": "#/definitions/SpellCorrectionSuggestion"
        },
        "Stems": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StemmerSuggestion"
          }
        }
      }
    },
    "Frame": {
      "type": "object",
      "properties": {
        "FirstTokenIndex": {
          "format": "int32",
          "type": "integer"
        },
        "LastTokenIndex": {
          "format": "int32",
          "type": "integer"
        },
        "FrameType": {
          "type": "string"
        },
        "LabeledBracketNotation": {
          "type": "string"
        },
        "ChildFrames": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Frame"
          }
        }
      }
    },
    "FrameInfo": {
      "type": "object",
      "properties": {
        "FrameType": {
          "type": "string"
        },
        "StringRepresentation": {
          "type": "string"
        }
      }
    },
    "EntityTerm": {
      "type": "object",
      "properties": {
        "EntityName": {
          "type": "string"
        },
        "TermValue": {
          "type": "string"
        },
        "TermType": {
          "type": "string"
        },
        "SemanticType": {
          "type": "string"
        },
        "TokenSequenceMatchType": {
          "type": "string"
        },
        "TokenMatches": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TokenMatch"
          }
        },
        "FirstTokenIndex": {
          "format": "int32",
          "type": "integer"
        },
        "LastTokenIndex": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "SpellCorrectionSuggestion": {
      "type": "object",
      "properties": {
        "Suggestion": {
          "type": "string"
        },
        "SuggestionConfidence": {
          "format": "double",
          "type": "number"
        }
      }
    },
    "StemmerSuggestion": {
      "type": "object",
      "properties": {
        "StemValue": {
          "type": "string"
        }
      }
    },
    "TokenMatch": {
      "type": "object",
      "properties": {
        "TokenIndex": {
          "format": "int32",
          "type": "integer"
        },
        "MatchType": {
          "type": "string"
        }
      }
    },
    "SashoConfigurationModel": {
      "required": [
        "ModelId",
        "States",
        "Csdl",
        "Lsdl",
        "SparqlConfig",
        "DisambiguateModel"
      ],
      "type": "object",
      "properties": {
        "ModelId": {
          "type": "string"
        },
        "States": {
          "type": "array",
          "items": {
            "format": "int32",
            "enum": [
              0,
              1,
              2,
              3
            ],
            "type": "integer"
          }
        },
        "Csdl": {
          "type": "string"
        },
        "Lsdl": {
          "type": "string"
        },
        "SparqlConfig": {
          "$ref": "#/definitions/SparqlConverterConfiguration"
        },
        "DisambiguateModel": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/DisambiguateModelConfig"
          }
        },
        "RestatementConfig": {
          "type": "string"
        },
        "ContextualLanguageModel": {
          "$ref": "#/definitions/ContextualLanguageModel"
        },
        "UpdateTime": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "SparqlConverterConfiguration": {
      "type": "object",
      "properties": {
        "LinguisticTypes": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/LinguisticTypeConfiguration"
          }
        },
        "ReRankers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RankerConfiguration"
          }
        },
        "SparqlExpanders": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RankerConfiguration"
          }
        },
        "Ontology": {
          "$ref": "#/definitions/OntologyConfiguration"
        },
        "MaximumNumberOfEntities": {
          "format": "int32",
          "type": "integer"
        },
        "MaximumAmbiguousBindingCombinations": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "DisambiguateModelConfig": {
      "type": "object",
      "properties": {
        "EntityType": {
          "type": "string"
        },
        "MaxNumberOfActionsPerRequest": {
          "format": "int32",
          "type": "integer"
        },
        "MaxNumberOfActions": {
          "format": "int32",
          "type": "integer"
        },
        "MaxNumberOfEntitiesPerRequest": {
          "format": "int32",
          "type": "integer"
        },
        "MaxNumberOfEntities": {
          "format": "int32",
          "type": "integer"
        },
        "SparqlQueryResponseLimit": {
          "format": "int32",
          "type": "integer"
        },
        "Actions": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/Action"
          }
        },
        "States": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/StateConfig"
          }
        },
        "QLearning": {
          "$ref": "#/definitions/QLearningConfig"
        }
      }
    },
    "ContextualLanguageModel": {
      "type": "object",
      "properties": {
        "Ngrams": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/Ngram"
          },
          "readOnly": true
        },
        "Mean": {
          "format": "double",
          "type": "number",
          "readOnly": true
        },
        "StandardDeviation": {
          "format": "double",
          "type": "number",
          "readOnly": true
        }
      }
    },
    "LinguisticTypeConfiguration": {
      "type": "object",
      "properties": {
        "TypeName": {
          "type": "string"
        },
        "AdditionalProjections": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "KeywordFallbackSearch": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/KeywordFallbackSearchConfiguration"
          }
        },
        "IsPrimaryDisplayType": {
          "type": "boolean"
        },
        "OntologyType": {
          "type": "string"
        },
        "LinguisticRelations": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "LinguisticScalars": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "RankerConfiguration": {
      "type": "object",
      "properties": {
        "SortVariables": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "BoundVariables": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "SelectVariables": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "CommonVariableTypes": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "DynamicVariableTypes": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "SortAscending": {
          "type": "boolean"
        },
        "TopologyOrder": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "Penalty": {
          "format": "double",
          "type": "number"
        },
        "TripleReplacements": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TripleReplacementConfiguration"
          }
        },
        "RankingFunctions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RankingFunction"
          }
        }
      }
    },
    "OntologyConfiguration": {
      "type": "object",
      "properties": {
        "MetaTypes": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "DefaultPrefixes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SparqlPrefix"
          }
        }
      }
    },
    "Action": {
      "type": "object",
      "properties": {
        "Name": {
          "type": "string"
        },
        "ActionType": {
          "format": "int32",
          "enum": [
            0,
            1,
            2
          ],
          "type": "integer"
        },
        "MultiEntry": {
          "type": "boolean"
        }
      }
    },
    "StateConfig": {
      "type": "object",
      "properties": {
        "StateSignificance": {
          "format": "double",
          "type": "number"
        },
        "StartRange": {
          "format": "int32",
          "type": "integer"
        },
        "EndRange": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "QLearningConfig": {
      "type": "object",
      "properties": {
        "ReinforcementMode": {
          "format": "int32",
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5
          ],
          "type": "integer"
        },
        "Reward": {
          "format": "double",
          "type": "number"
        },
        "Penalty": {
          "format": "double",
          "type": "number"
        },
        "Alpha": {
          "format": "double",
          "type": "number"
        },
        "Gamma": {
          "format": "double",
          "type": "number"
        },
        "QLearningMatrix": {
          "type": "array",
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/MatrixCellConfig"
            }
          }
        }
      }
    },
    "Ngram": {
      "type": "object",
      "properties": {
        "Order": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "Value": {
          "type": "string",
          "readOnly": true
        },
        "Probability": {
          "format": "double",
          "type": "number",
          "readOnly": true
        },
        "BackoffProbability": {
          "format": "double",
          "type": "number",
          "readOnly": true
        }
      }
    },
    "KeywordFallbackSearchConfiguration": {
      "type": "object",
      "properties": {
        "Predicate": {
          "type": "string"
        },
        "Score": {
          "format": "float",
          "type": "number"
        }
      }
    },
    "TripleReplacementConfiguration": {
      "type": "object",
      "properties": {
        "TriplesToFind": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Triple"
          }
        },
        "TriplesToReplace": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Triple"
          }
        }
      }
    },
    "RankingFunction": {
      "type": "object",
      "properties": {
        "Expression": {
          "type": "string"
        },
        "Variable": {
          "type": "string"
        }
      }
    },
    "SparqlPrefix": {
      "type": "object",
      "properties": {
        "Label": {
          "type": "string"
        },
        "Iri": {
          "type": "string"
        }
      }
    },
    "MatrixCellConfig": {
      "type": "object",
      "properties": {
        "StateName": {
          "type": "string"
        },
        "ActionName": {
          "type": "string"
        },
        "QValue": {
          "format": "double",
          "type": "number"
        },
        "Reward": {
          "format": "double",
          "type": "number"
        }
      }
    },
    "Triple": {
      "type": "object",
      "properties": {
        "Subject": {
          "type": "string"
        },
        "Predicate": {
          "type": "object"
        },
        "Object": {
          "type": "object"
        },
        "ItemType": {
          "format": "int32",
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8
          ],
          "type": "integer",
          "readOnly": true
        },
        "Sequence": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "XmlViewModel": {
      "type": "object",
      "properties": {
        "EntityName": {
          "type": "string"
        },
        "ConceptualSchema": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Entity"
          }
        },
        "Nouns": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Noun"
          }
        },
        "AttributeNouns": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AttributeNoun"
          }
        },
        "Relationships": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ViewRelationship"
          }
        },
        "GlobalSynonyms": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GlobalSynonym"
          }
        }
      }
    },
    "Entity": {
      "type": "object",
      "properties": {
        "EntityName": {
          "type": "string"
        },
        "EntityType": {
          "type": "string"
        },
        "IsScalar": {
          "type": "boolean"
        },
        "OntologyName": {
          "type": "string"
        }
      }
    },
    "Noun": {
      "type": "object",
      "properties": {
        "NounString": {
          "type": "string"
        },
        "Weight": {
          "type": "string"
        }
      }
    },
    "AttributeNoun": {
      "type": "object",
      "properties": {
        "Attribute": {
          "type": "string"
        },
        "OntologyName": {
          "type": "string"
        },
        "Nouns": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Noun"
          }
        }
      }
    },
    "ViewRelationship": {
      "type": "object",
      "properties": {
        "Name": {
          "type": "string"
        },
        "OntologyName": {
          "type": "string"
        },
        "Roles": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Role"
          }
        },
        "When": {
          "type": "string"
        },
        "Where": {
          "type": "string"
        },
        "Conditions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Condition"
          }
        },
        "AttributePhrasing": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AttributePhrasing"
          }
        },
        "DynamicAdjectivePhrasing": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DynamicAdjectivePhrasing"
          }
        },
        "NounPhrasing": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NounPhrasing"
          }
        },
        "DynamicNounPhrasing": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DynamicNounPhrasing"
          }
        },
        "AdjectivePhrasing": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AdjectivePhrasing"
          }
        },
        "VerbPhrasing": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VerbPhrasing"
          }
        },
        "PrepositionPhrasing": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PrepositionPhrasing"
          }
        },
        "Weight": {
          "type": "string"
        }
      }
    },
    "GlobalSynonym": {
      "type": "object",
      "properties": {
        "OriginalTerm": {
          "type": "string"
        },
        "TargetTerm": {
          "type": "string"
        }
      }
    },
    "Role": {
      "type": "object",
      "properties": {
        "RoleName": {
          "type": "string"
        },
        "EntityName": {
          "type": "string"
        },
        "OntologyName": {
          "type": "string"
        },
        "Nouns": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "Condition": {
      "type": "object",
      "properties": {
        "Entity": {
          "type": "string"
        },
        "Operator": {
          "type": "string"
        },
        "ValueType": {
          "type": "string"
        },
        "Value": {
          "type": "string"
        }
      }
    },
    "AttributePhrasing": {
      "type": "object",
      "properties": {
        "Object": {
          "type": "string"
        },
        "Subject": {
          "type": "string"
        },
        "Phrasing": {
          "type": "string"
        },
        "Weight": {
          "type": "string"
        }
      }
    },
    "DynamicAdjectivePhrasing": {
      "type": "object",
      "properties": {
        "Adjective": {
          "type": "string"
        },
        "Subject": {
          "type": "string"
        },
        "Phrasing": {
          "type": "string"
        },
        "Weight": {
          "type": "string"
        }
      }
    },
    "NounPhrasing": {
      "type": "object",
      "properties": {
        "Nouns": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "Subject": {
          "type": "string"
        },
        "Phrasing": {
          "type": "string"
        },
        "Weight": {
          "type": "string"
        }
      }
    },
    "DynamicNounPhrasing": {
      "type": "object",
      "properties": {
        "Subject": {
          "type": "string"
        },
        "Noun": {
          "type": "string"
        },
        "Phrasing": {
          "type": "string"
        },
        "Weight": {
          "type": "string"
        }
      }
    },
    "AdjectivePhrasing": {
      "type": "object",
      "properties": {
        "Subject": {
          "type": "string"
        },
        "Adjectives": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "Measurement": {
          "type": "string"
        },
        "Antonyms": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "Phrasing": {
          "type": "string"
        },
        "Weight": {
          "type": "string"
        }
      }
    },
    "VerbPhrasing": {
      "type": "object",
      "properties": {
        "Verbs": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "VerbObject": {
          "type": "string"
        },
        "Subject": {
          "type": "string"
        },
        "Prepositions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "Object": {
          "type": "string"
        },
        "Phrasing": {
          "type": "string"
        },
        "Weight": {
          "type": "string"
        }
      }
    },
    "PrepositionPhrasing": {
      "type": "object",
      "properties": {
        "Subject": {
          "type": "string"
        },
        "Prepositions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "Object": {
          "type": "string"
        },
        "Phrasing": {
          "type": "string"
        },
        "Weight": {
          "type": "string"
        }
      }
    },
    "EntityNameInfo": {
      "type": "object",
      "properties": {
        "OntologyName": {
          "type": "string"
        },
        "EntityName": {
          "type": "string"
        },
        "IsMainEntity": {
          "type": "boolean"
        }
      }
    },
    "AliasSuggestionRequestModel": {
      "type": "object",
      "properties": {
        "Alias": {
          "type": "string"
        },
        "EntityType": {
          "type": "string"
        },
        "Count": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "AliasSuggestionResponseModel": {
      "type": "object",
      "properties": {
        "IsPresent": {
          "type": "boolean"
        },
        "SuggestedAlias": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "TryQueryModel": {
      "type": "object",
      "properties": {
        "ModelId": {
          "type": "string"
        },
        "Query": {
          "type": "string"
        }
      }
    },
    "SparqlVisualModel": {
      "type": "object",
      "properties": {
        "Sparql": {
          "type": "string"
        },
        "Score": {
          "format": "double",
          "type": "number"
        },
        "CircleList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Node"
          }
        },
        "LineList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Edge"
          }
        },
        "UnrecognizedTerms": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "Interpretation": {
          "type": "string"
        },
        "Annotations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/QueryAnnotation"
          }
        }
      }
    },
    "Node": {
      "type": "object",
      "properties": {
        "Name": {
          "type": "string"
        },
        "ObjectValues": {
          "type": "string"
        },
        "X": {
          "format": "int32",
          "type": "integer"
        },
        "Y": {
          "format": "int32",
          "type": "integer"
        },
        "IsMainProjection": {
          "type": "boolean"
        }
      }
    },
    "Edge": {
      "type": "object",
      "properties": {
        "Source": {
          "type": "string"
        },
        "Dest": {
          "type": "string"
        },
        "Name": {
          "type": "string"
        }
      }
    },
    "UploadModelInfo": {
      "type": "object",
      "properties": {
        "EntityModels": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "SparqlConfig": {
          "type": "string"
        },
        "DisambiguateModel": {
          "type": "string"
        },
        "RestatementConfig": {
          "type": "string"
        },
        "ContextualLanguageModel": {
          "type": "string"
        },
        "IndividualUpload": {
          "type": "boolean"
        }
      }
    },
    "SchemaNamespaceDTO": {
      "type": "object",
      "properties": {
        "NamespaceUri": {
          "type": "string"
        },
        "NamespaceShorthand": {
          "type": "string"
        },
        "PreviousNamespaceShorthand": {
          "type": "string"
        }
      }
    },
    "OntologyKeys": {
      "type": "object",
      "properties": {
        "OntologyNamespace": {
          "type": "string"
        },
        "TypeName": {
          "type": "string"
        },
        "PropertyName": {
          "type": "string"
        }
      }
    },
    "SchemaTypeDTO": {
      "type": "object",
      "properties": {
        "Namespace": {
          "type": "string"
        },
        "Name": {
          "type": "string"
        },
        "FriendlyName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "Category": {
          "type": "string"
        },
        "Alias": {
          "type": "string"
        },
        "GraphWalkDepth": {
          "format": "int32",
          "type": "integer"
        },
        "Parent": {
          "type": "string"
        },
        "Properties": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SchemaPropertyDTO"
          }
        }
      }
    },
    "SchemaPropertyDTO": {
      "type": "object",
      "properties": {
        "Name": {
          "type": "string"
        },
        "FriendlyName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "Multiplicity": {
          "type": "string"
        },
        "Type": {
          "type": "string"
        },
        "Owner": {
          "type": "string"
        },
        "UpdateStatus": {
          "type": "string"
        }
      }
    },
    "OntologyDictionary": {
      "type": "object",
      "properties": {
        "NamespaceTypes": {
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/SchemaType"
            }
          },
          "readOnly": true
        },
        "Relationships": {
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/SchemaTypeRelationship"
            }
          },
          "readOnly": true
        },
        "Properties": {
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/SchemaProperty"
            }
          },
          "readOnly": true
        },
        "Types": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/SchemaType"
          },
          "readOnly": true
        },
        "Namespaces": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "readOnly": true
        }
      }
    },
    "SchemaType": {
      "type": "object",
      "properties": {
        "namespace": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "friendlyName": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "category": {
          "type": "string"
        },
        "alias": {
          "type": "string"
        },
        "parent": {
          "type": "string"
        },
        "Properties": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SchemaProperty"
          }
        },
        "fields": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SchemaProperty"
          }
        }
      }
    },
    "SchemaTypeRelationship": {
      "type": "object",
      "properties": {
        "relationship": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "SchemaProperty": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "multiplicity": {
          "format": "int32",
          "enum": [
            0,
            1
          ],
          "type": "integer"
        },
        "friendlyName": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "SearchParams": {
      "type": "object",
      "properties": {
        "AzureSubscriptionId": {
          "type": "string"
        },
        "OntologyVersionId": {
          "format": "int32",
          "type": "integer"
        },
        "SearchTerm": {
          "type": "string"
        }
      }
    },
    "SchemaSearchResult": {
      "type": "object",
      "properties": {
        "WhereFound": {
          "format": "int32",
          "enum": [
            0,
            1,
            2,
            3
          ],
          "type": "integer"
        },
        "Namespace": {
          "type": "string"
        },
        "ClassName": {
          "type": "string"
        },
        "PropertyName": {
          "type": "string"
        },
        "EnumValueName": {
          "type": "string"
        }
      }
    },
    "DbTags": {
      "required": [
        "Name"
      ],
      "type": "object",
      "properties": {
        "TagId": {
          "format": "int32",
          "type": "integer"
        },
        "Name": {
          "maxLength": 512,
          "minLength": 0,
          "type": "string"
        },
        "ModifiedDateTime": {
          "format": "date-time",
          "type": "string"
        },
        "CreateDateTime": {
          "format": "date-time",
          "type": "string"
        },
        "CreatedBy": {
          "format": "int32",
          "type": "integer"
        },
        "CreatedByUser": {
          "$ref": "#/definitions/DbUsers"
        },
        "ModifiedBy": {
          "format": "int32",
          "type": "integer"
        },
        "ModifiedByUser": {
          "$ref": "#/definitions/DbUsers"
        }
      }
    },
    "ValueTuple_List_String_String_": {
      "type": "object",
      "properties": {
        "Item1": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "Item2": {
          "type": "string"
        }
      }
    }
  }
}
