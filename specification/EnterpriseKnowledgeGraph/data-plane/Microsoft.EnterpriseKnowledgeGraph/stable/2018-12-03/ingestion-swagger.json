{
   "swagger":"2.0",
   "info":{
      "version":"v1",
      "title":"Microsoft.Knowledge.EKG.Ingestion.WebApp"
   },
   "host":"localhost:20002",
   "schemes":[
      "http"
   ],
   "paths":{
      "/keepalive":{
         "get":{
            "tags":[
               "GraphBuild"
            ],
            "operationId":"GraphBuild_Keepalive",
            "consumes":[

            ],
            "produces":[
               "application/json",
               "text/json"
            ],
            "parameters":[
               {
                  "name":"X-EKG-RequestContext",
                  "in":"header",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "schema":{
                     "$ref":"#/definitions/IngestionPingStatusResponse"
                  }
               }
            }
         }
      },
      "/sources/{sourceId}/documents/{documentId}":{
         "delete":{
            "tags":[
               "GraphBuild"
            ],
            "summary":"Deletes requested document of the source from Graph",
            "description":"This API deletes the document of source from the graph",
            "operationId":"DeleteDocument",
            "consumes":[

            ],
            "produces":[
               "application/json",
               "text/json"
            ],
            "parameters":[
               {
                  "name":"sourceId",
                  "in":"path",
                  "description":"Id of  document source",
                  "required":true,
                  "type":"integer",
                  "format":"int32"
               },
               {
                  "name":"documentId",
                  "in":"path",
                  "description":"Id of document",
                  "required":true,
                  "type":"string"
               },
               {
                  "name":"hardDelete",
                  "in":"query",
                  "description":"Whether to hard delete",
                  "required":false,
                  "type":"boolean"
               },
               {
                  "name":"X-EKG-RequestContext",
                  "in":"header",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "schema":{
                     "$ref":"#/definitions/IngestionJobResponse"
                  }
               }
            }
         }
      },
      "/sources/{sourceId}":{
         "delete":{
            "tags":[
               "GraphBuild"
            ],
            "summary":"Deletes source from Graph",
            "description":"This API deletes source and all its documents from Graph",
            "operationId":"DeleteSource",
            "consumes":[

            ],
            "produces":[
               "application/json",
               "text/json"
            ],
            "parameters":[
               {
                  "name":"sourceId",
                  "in":"path",
                  "description":"Id of source",
                  "required":true,
                  "type":"integer",
                  "format":"int32"
               },
               {
                  "name":"X-EKG-RequestContext",
                  "in":"header",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "schema":{
                     "$ref":"#/definitions/IngestionJobResponse"
                  }
               }
            }
         }
      },
      "/editorial/{entityId}":{
         "delete":{
            "tags":[
               "GraphBuild"
            ],
            "operationId":"DeleteEntity",
            "consumes":[

            ],
            "produces":[
               "application/json",
               "text/json",
               "application/xml",
               "text/xml"
            ],
            "parameters":[
               {
                  "name":"entityId",
                  "in":"path",
                  "required":true,
                  "type":"string"
               },
               {
                  "name":"X-EKG-RequestContext",
                  "in":"header",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "schema":{
                     "type":"object"
                  }
               }
            }
         }
      },
      "/editorial/{entityId}/updatingOfProperty":{
         "post":{
            "tags":[
               "GraphBuild"
            ],
            "operationId":"EditorialUpdate",
            "consumes":[
               "application/json",
               "text/json",
               "application/xml",
               "text/xml",
               "application/x-www-form-urlencoded"
            ],
            "produces":[
               "application/json",
               "text/json",
               "application/xml",
               "text/xml"
            ],
            "parameters":[
               {
                  "name":"entityId",
                  "in":"path",
                  "required":true,
                  "type":"string"
               },
               {
                  "name":"editorialUpdateRequest",
                  "in":"body",
                  "required":true,
                  "schema":{
                     "$ref":"#/definitions/EditorialUpdateRequest"
                  }
               },
               {
                  "name":"X-EKG-RequestContext",
                  "in":"header",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "schema":{
                     "type":"object"
                  }
               }
            }
         }
      },
      "/editorial/{entityId}/deletingOfProperty":{
         "post":{
            "tags":[
               "GraphBuild"
            ],
            "operationId":"EditorialDelete",
            "consumes":[
               "application/json",
               "text/json",
               "application/xml",
               "text/xml",
               "application/x-www-form-urlencoded"
            ],
            "produces":[
               "application/json",
               "text/json",
               "application/xml",
               "text/xml"
            ],
            "parameters":[
               {
                  "name":"entityId",
                  "in":"path",
                  "required":true,
                  "type":"string"
               },
               {
                  "name":"editorialOperationRequest",
                  "in":"body",
                  "required":true,
                  "schema":{
                     "$ref":"#/definitions/EditorialDeleteRequest"
                  }
               },
               {
                  "name":"X-EKG-RequestContext",
                  "in":"header",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "schema":{
                     "type":"object"
                  }
               }
            }
         }
      },
      "/editorial/{entityId}/cleanup":{
         "post":{
            "tags":[
               "GraphBuild"
            ],
            "operationId":"EditorialCleanUp",
            "consumes":[
               "application/json",
               "text/json",
               "application/xml",
               "text/xml",
               "application/x-www-form-urlencoded"
            ],
            "produces":[
               "application/json",
               "text/json",
               "application/xml",
               "text/xml"
            ],
            "parameters":[
               {
                  "name":"entityId",
                  "in":"path",
                  "required":true,
                  "type":"string"
               },
               {
                  "name":"editorialOperationRequest",
                  "in":"body",
                  "required":true,
                  "schema":{
                     "$ref":"#/definitions/EditorialCleanUpRequest"
                  }
               },
               {
                  "name":"X-EKG-RequestContext",
                  "in":"header",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "schema":{
                     "type":"object"
                  }
               }
            }
         }
      },
      "/ingestion-jobs":{
         "get":{
            "tags":[
               "GraphBuild"
            ],
            "summary":"Returns the details  of jobs submitted in time range",
            "description":"This API  provides the details of the jobs submitted in time range",
            "operationId":"GetAllJobsStatus",
            "consumes":[

            ],
            "produces":[
               "application/json",
               "text/json",
               "application/xml",
               "text/xml"
            ],
            "parameters":[
               {
                  "name":"startTime",
                  "in":"query",
                  "description":"StartTime of time range",
                  "required":true,
                  "type":"string"
               },
               {
                  "name":"endTime",
                  "in":"query",
                  "description":"EndTime of time range",
                  "required":true,
                  "type":"string"
               },
               {
                  "name":"X-EKG-RequestContext",
                  "in":"header",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "schema":{
                     "type":"array",
                     "items":{
                        "$ref":"#/definitions/BatchInfoApiResponse"
                     }
                  }
               }
            }
         },
         "post":{
            "tags":[
               "GraphBuild"
            ],
            "summary":"Posts Ingestion Job",
            "description":"This API is used to submit new ingestion job to GraphBuildPipeline",
            "operationId":"CreateIngestionJob",
            "consumes":[
               "application/json",
               "text/json",
               "application/xml",
               "text/xml",
               "application/x-www-form-urlencoded"
            ],
            "produces":[
               "application/json",
               "text/json"
            ],
            "parameters":[
               {
                  "name":"ingestionJobRequest",
                  "in":"body",
                  "description":"IngestionJob Request",
                  "required":true,
                  "schema":{
                     "$ref":"#/definitions/IngestionJobPostRequest"
                  }
               },
               {
                  "name":"X-EKG-RequestContext",
                  "in":"header",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "schema":{
                     "$ref":"#/definitions/IngestionJobResponse"
                  }
               }
            }
         }
      },
      "/ingestion-jobs/{jobId}":{
         "get":{
            "tags":[
               "GraphBuild"
            ],
            "summary":"Returns the Ingestion status of job",
            "description":"This API  provides the details of status of the ingestion job",
            "operationId":"GetJobStatus",
            "consumes":[

            ],
            "produces":[
               "application/json",
               "text/json",
               "application/xml",
               "text/xml"
            ],
            "parameters":[
               {
                  "name":"jobId",
                  "in":"path",
                  "description":"Id of ingestion job",
                  "required":true,
                  "type":"string"
               },
               {
                  "name":"X-EKG-RequestContext",
                  "in":"header",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "schema":{
                     "type":"array",
                     "items":{
                        "$ref":"#/definitions/BatchStatusApiResponse"
                     }
                  }
               }
            }
         }
      },
      "/editorial-jobs/{jobId}":{
         "get":{
            "tags":[
               "GraphBuild"
            ],
            "operationId":"GetEditorialStatus",
            "consumes":[

            ],
            "produces":[
               "application/json",
               "text/json",
               "application/xml",
               "text/xml"
            ],
            "parameters":[
               {
                  "name":"jobId",
                  "in":"path",
                  "required":true,
                  "type":"string"
               },
               {
                  "name":"X-EKG-RequestContext",
                  "in":"header",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "schema":{
                     "type":"array",
                     "items":{
                        "$ref":"#/definitions/BatchStatusEntity"
                     }
                  }
               }
            }
         }
      },
      "/debug":{
         "get":{
            "tags":[
               "GraphBuild"
            ],
            "operationId":"GetDebug",
            "consumes":[

            ],
            "produces":[
               "application/json",
               "text/json",
               "application/xml",
               "text/xml"
            ],
            "parameters":[
               {
                  "name":"entityId",
                  "in":"query",
                  "required":true,
                  "type":"string"
               },
               {
                  "name":"property",
                  "in":"query",
                  "required":true,
                  "type":"string"
               },
               {
                  "name":"X-EKG-RequestContext",
                  "in":"header",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "schema":{
                     "type":"array",
                     "items":{
                        "$ref":"#/definitions/DebugOutput"
                     }
                  }
               }
            }
         }
      }
   },
   "definitions":{
      "IngestionPingStatusResponse":{
         "type":"object",
         "properties":{
            "Status":{
               "type":"string"
            },
            "Entries":{
               "type":"object"
            }
         }
      },
      "IngestionJobResponse":{
         "type":"object",
         "properties":{
            "JobId":{
               "type":"string"
            }
         }
      },
      "EditorialUpdateRequest":{
         "type":"object",
         "properties":{
            "Triples":{
               "type":"array",
               "items":{
                  "$ref":"#/definitions/TripleUpdate"
               }
            }
         }
      },
      "TripleUpdate":{
         "type":"object",
         "properties":{
            "From":{
               "type":"string"
            },
            "To":{
               "type":"string"
            },
            "Predicate":{
               "type":"string"
            }
         }
      },
      "EditorialDeleteRequest":{
         "type":"object",
         "properties":{
            "Triples":{
               "type":"array",
               "items":{
                  "$ref":"#/definitions/TripleDelete"
               }
            }
         }
      },
      "TripleDelete":{
         "type":"object",
         "properties":{
            "Value":{
               "type":"string"
            },
            "Predicate":{
               "type":"string"
            }
         }
      },
      "EditorialCleanUpRequest":{
         "type":"object",
         "properties":{
            "Triples":{
               "type":"array",
               "items":{
                  "$ref":"#/definitions/Triple"
               }
            }
         }
      },
      "Triple":{
         "type":"object",
         "properties":{
            "Predicate":{
               "type":"string"
            }
         }
      },
      "IngestionJobPostRequest":{
         "description":"IngestionJobPostRequest",
         "type":"object",
         "properties":{
            "Type":{
               "enum":[
                  "blob",
                  "payload"
               ],
               "type":"string"
            },
            "SourceId":{
               "format":"int32",
               "description":"Source Id",
               "type":"integer"
            },
            "BlobUrls":{
               "description":"List of blob Urls having payload",
               "type":"array",
               "items":{
                  "type":"string"
               }
            },
            "RawPayloads":{
               "description":"List of payloads in json format.Max Recommended size is 250 MB",
               "type":"array",
               "items":{
                  "$ref":"#/definitions/LoadRequest"
               }
            },
            "ForceUpdate":{
               "description":"Whether to update document when there are no changes",
               "type":"boolean"
            },
            "IngestionMode":{
               "description":"Mode of Ingestion",
               "enum":[
                  "Batch",
                  "Streaming"
               ],
               "type":"string"
            }
         }
      },
      "LoadRequest":{
         "type":"object",
         "properties":{
            "Id":{
               "description":"DocumentId",
               "type":"string"
            },
            "PayLoad":{
               "description":"RawPayload in Json format",
               "type":"string"
            }
         }
      },
      "BatchInfoApiResponse":{
         "description":"Status of Job",
         "type":"object",
         "properties":{
            "JobId":{
               "description":"Job Id",
               "type":"string"
            },
            "SourceId":{
               "format":"int32",
               "description":"Source Id",
               "type":"integer"
            },
            "BatchState":{
               "description":"State of job",
               "type":"string"
            },
            "StartTime":{
               "description":"Start time of job",
               "type":"string"
            },
            "LastUpdated":{
               "description":"LastUpdated time of job",
               "type":"string"
            },
            "OntologyversionId":{
               "format":"int32",
               "description":"Ontology Version",
               "type":"integer"
            },
            "OperationType":{
               "description":"Type of job",
               "type":"string"
            }
         }
      },
      "BatchStatusApiResponse":{
         "type":"object",
         "properties":{
            "JobId":{
               "description":"JobId",
               "type":"string"
            },
            "Stage":{
               "description":"Stage of Ingestion",
               "type":"string"
            },
            "TotalDocumentsInBatch":{
               "format":"int32",
               "description":"TotalDocs in batch",
               "type":"integer"
            },
            "SuccessDocumentsCount":{
               "format":"int32",
               "description":"Count of docs processed successfully",
               "type":"integer"
            },
            "FailedDocumentsCount":{
               "format":"int32",
               "description":"Count of docs failed",
               "type":"integer"
            },
            "ExceptionMessage":{
               "description":"Aggregated exception message",
               "type":"string"
            },
            "TimeTakenInStage":{
               "description":"Time taken for stage",
               "type":"string"
            }
         }
      },
      "BatchStatusEntity":{
         "type":"object",
         "properties":{
            "PartitionKey":{
               "type":"string"
            },
            "RowKey":{
               "type":"string"
            },
            "TotalDocumentsInBatch":{
               "format":"int32",
               "type":"integer"
            },
            "SuccessDocumentsCount":{
               "format":"int32",
               "type":"integer"
            },
            "FailedDocumentsCount":{
               "format":"int32",
               "type":"integer"
            },
            "ExceptionMessage":{
               "type":"string"
            },
            "TimeTakenInStage":{
               "type":"string"
            },
            "LastUpdateTimeStamp":{
               "type":"string"
            },
            "Timestamp":{
               "format":"date-time",
               "type":"string"
            },
            "ETag":{
               "type":"string"
            }
         }
      },
      "DebugOutput":{
         "type":"object",
         "properties":{
            "GraphUpdateDebugOutput":{
               "$ref":"#/definitions/GraphUpdateDebugOutput"
            },
            "ConflationDebugOutput":{
               "type":"object",
               "additionalProperties":{
                  "type":"array",
                  "items":{
                     "$ref":"#/definitions/ConflationDebugOutput"
                  }
               }
            },
            "MappingDebugOutput":{
               "type":"object",
               "additionalProperties":{
                  "type":"array",
                  "items":{
                     "$ref":"#/definitions/MappingDebugOutput"
                  }
               }
            },
            "UploadDebugOutput":{
               "type":"object",
               "additionalProperties":{
                  "$ref":"#/definitions/UploadDebugOutput"
               }
            }
         }
      },
      "GraphUpdateDebugOutput":{
         "type":"object",
         "properties":{
            "EntityId":{
               "type":"string"
            },
            "Property":{
               "type":"string"
            },
            "Value":{
               "type":"string"
            },
            "Sources":{
               "type":"array",
               "items":{
                  "$ref":"#/definitions/SourceDocument"
               }
            }
         }
      },
      "ConflationDebugOutput":{
         "type":"object",
         "properties":{
            "EntityId":{
               "type":"string"
            },
            "Property":{
               "type":"string"
            },
            "Value":{
               "type":"string"
            }
         }
      },
      "MappingDebugOutput":{
         "type":"object",
         "properties":{
            "SubjectKey":{
               "type":"string"
            },
            "Property":{
               "type":"string"
            },
            "Value":{
               "type":"string"
            }
         }
      },
      "UploadDebugOutput":{
         "type":"object",
         "properties":{
            "DocumentId":{
               "type":"string"
            },
            "Content":{
               "type":"string"
            }
         }
      },
      "SourceDocument":{
         "type":"object",
         "properties":{
            "SourceId":{
               "format":"int32",
               "type":"integer"
            },
            "DocumentId":{
               "type":"string"
            }
         }
      }
   }
}
