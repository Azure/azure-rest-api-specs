{
  "swagger": "2.0",
  "info": {
    "title": "Oracle Database Resource Manager",
    "version": "2023-09-01-preview",
    "x-typespec-generated": [
      {
        "emitter": "@azure-tools/typespec-autorest"
      }
    ]
  },
  "schemes": [
    "https"
  ],
  "host": "management.azure.com",
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "description": "Azure Active Directory OAuth2 Flow.",
      "flow": "implicit",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "tags": [
    {
      "name": "Operations"
    },
    {
      "name": "CloudExadataInfrastructures"
    },
    {
      "name": "DbServers"
    },
    {
      "name": "CloudVmClusters"
    },
    {
      "name": "VirtualNetworkAddresses"
    },
    {
      "name": "SystemVersions"
    },
    {
      "name": "OracleSubscriptions"
    },
    {
      "name": "DbNodes"
    },
    {
      "name": "GiVersions"
    },
    {
      "name": "DbSystemShapes"
    },
    {
      "name": "DnsPrivateViews"
    },
    {
      "name": "DnsPrivateZones"
    },
    {
      "name": "AutonomousDatabases"
    },
    {
      "name": "AutonomousDatabaseBackups"
    },
    {
      "name": "AutonomousDatabaseCharacterSets"
    },
    {
      "name": "AutonomousDatabaseNationalCharacterSets"
    },
    {
      "name": "AutonomousDatabaseVersions"
    }
  ],
  "paths": {
    "/providers/Oracle.Database/operations": {
      "get": {
        "operationId": "Operations_List",
        "tags": [
          "Operations"
        ],
        "description": "List the operations for the provider",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/OperationListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List Operations": {
            "$ref": "./examples/operations_list.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Oracle.Database/autonomousDatabases": {
      "get": {
        "operationId": "AutonomousDatabases_ListBySubscription",
        "tags": [
          "AutonomousDatabases"
        ],
        "description": "List AutonomousDatabase resources by subscription ID",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/AutonomousDatabaseListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List Autonomous Database by subscription": {
            "$ref": "./examples/autonomousDatabase_listBySubscription.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Oracle.Database/cloudExadataInfrastructures": {
      "get": {
        "operationId": "CloudExadataInfrastructures_ListBySubscription",
        "tags": [
          "CloudExadataInfrastructures"
        ],
        "description": "List CloudExadataInfrastructure resources by subscription ID",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/CloudExadataInfrastructureListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List Exadata Infrastructure by subscription": {
            "$ref": "./examples/exaInfra_listBySubscription.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Oracle.Database/cloudVmClusters": {
      "get": {
        "operationId": "CloudVmClusters_ListBySubscription",
        "tags": [
          "CloudVmClusters"
        ],
        "description": "List CloudVmCluster resources by subscription ID",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/CloudVmClusterListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List VM Clusters by subscription": {
            "$ref": "./examples/vmClusters_listBySubscription.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Oracle.Database/locations/{location}/autonomousDatabaseCharacterSets": {
      "get": {
        "operationId": "AutonomousDatabaseCharacterSets_ListByLocation",
        "tags": [
          "AutonomousDatabaseCharacterSets"
        ],
        "description": "List AutonomousDatabaseCharacterSet resources by Location",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/LocationParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/AutonomousDatabaseCharacterSetListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List autonomous db character sets by location": {
            "$ref": "./examples/autonomousDatabaseCharacterSet_listByLocation.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Oracle.Database/locations/{location}/autonomousDatabaseCharacterSets/{adbscharsetname}": {
      "get": {
        "operationId": "AutonomousDatabaseCharacterSets_Get",
        "tags": [
          "AutonomousDatabaseCharacterSets"
        ],
        "description": "Get a AutonomousDatabaseCharacterSet",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/LocationParameter"
          },
          {
            "name": "adbscharsetname",
            "in": "path",
            "description": "AutonomousDatabaseCharacterSet name",
            "required": true,
            "type": "string",
            "pattern": ".*"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/AutonomousDatabaseCharacterSet"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get autonomous db character set": {
            "$ref": "./examples/autonomousDatabaseCharacterSet_get.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Oracle.Database/locations/{location}/autonomousDatabaseNationalCharacterSets": {
      "get": {
        "operationId": "AutonomousDatabaseNationalCharacterSets_ListByLocation",
        "tags": [
          "AutonomousDatabaseNationalCharacterSets"
        ],
        "description": "List AutonomousDatabaseNationalCharacterSet resources by Location",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/LocationParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/AutonomousDatabaseNationalCharacterSetListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List autonomous db national character sets by location": {
            "$ref": "./examples/autonomousDatabaseNationalCharacterSet_listByLocation.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Oracle.Database/locations/{location}/autonomousDatabaseNationalCharacterSets/{adbsncharsetname}": {
      "get": {
        "operationId": "AutonomousDatabaseNationalCharacterSets_Get",
        "tags": [
          "AutonomousDatabaseNationalCharacterSets"
        ],
        "description": "Get a AutonomousDatabaseNationalCharacterSet",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/LocationParameter"
          },
          {
            "name": "adbsncharsetname",
            "in": "path",
            "description": "AutonomousDatabaseNationalCharacterSets name",
            "required": true,
            "type": "string",
            "pattern": ".*"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/AutonomousDatabaseNationalCharacterSet"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get autonomous db national character set": {
            "$ref": "./examples/autonomousDatabaseNationalCharacterSet_get.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Oracle.Database/locations/{location}/autonomousDbVersions": {
      "get": {
        "operationId": "AutonomousDatabaseVersions_ListByLocation",
        "tags": [
          "AutonomousDatabaseVersions"
        ],
        "description": "List AutonomousDbVersion resources by Location",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/LocationParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/AutonomousDbVersionListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List an autonomous versions by location": {
            "$ref": "./examples/autonomousDatabaseVersion_listByLocation.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Oracle.Database/locations/{location}/autonomousDbVersions/{autonomousdbversionsname}": {
      "get": {
        "operationId": "AutonomousDatabaseVersions_Get",
        "tags": [
          "AutonomousDatabaseVersions"
        ],
        "description": "Get a AutonomousDbVersion",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/LocationParameter"
          },
          {
            "name": "autonomousdbversionsname",
            "in": "path",
            "description": "AutonomousDbVersion name",
            "required": true,
            "type": "string",
            "pattern": ".*"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/AutonomousDbVersion"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get an autonomous version": {
            "$ref": "./examples/autonomousDatabaseVersion_get.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Oracle.Database/locations/{location}/dbSystemShapes": {
      "get": {
        "operationId": "DbSystemShapes_ListByLocation",
        "tags": [
          "DbSystemShapes"
        ],
        "description": "List DbSystemShape resources by Location",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/LocationParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DbSystemShapeListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List DbSystemShapes by location": {
            "$ref": "./examples/dbSystemShapes_listByLocation.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Oracle.Database/locations/{location}/dbSystemShapes/{dbsystemshapename}": {
      "get": {
        "operationId": "DbSystemShapes_Get",
        "tags": [
          "DbSystemShapes"
        ],
        "description": "Get a DbSystemShape",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/LocationParameter"
          },
          {
            "name": "dbsystemshapename",
            "in": "path",
            "description": "DbSystemShape name",
            "required": true,
            "type": "string",
            "pattern": ".*"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DbSystemShape"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get a DbSystemShape by name": {
            "$ref": "./examples/dbSystemShapes_get.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Oracle.Database/locations/{location}/dnsPrivateViews": {
      "get": {
        "operationId": "DnsPrivateViews_ListByLocation",
        "tags": [
          "DnsPrivateViews"
        ],
        "description": "List DnsPrivateView resources by Location",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/LocationParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DnsPrivateViewListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List DnsPrivateViews by location": {
            "$ref": "./examples/dnsPrivateViews_listByLocation.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Oracle.Database/locations/{location}/dnsPrivateViews/{dnsprivateviewocid}": {
      "get": {
        "operationId": "DnsPrivateViews_Get",
        "tags": [
          "DnsPrivateViews"
        ],
        "description": "Get a DnsPrivateView",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/LocationParameter"
          },
          {
            "name": "dnsprivateviewocid",
            "in": "path",
            "description": "DnsPrivateView OCID",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 255,
            "pattern": ".*"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DnsPrivateView"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get a DnsPrivateView by name": {
            "$ref": "./examples/dnsPrivateViews_get.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Oracle.Database/locations/{location}/dnsPrivateZones": {
      "get": {
        "operationId": "DnsPrivateZones_ListByLocation",
        "tags": [
          "DnsPrivateZones"
        ],
        "description": "List DnsPrivateZone resources by Location",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/LocationParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DnsPrivateZoneListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List DnsPrivateZones by location": {
            "$ref": "./examples/dnsPrivateZones_listByLocation.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Oracle.Database/locations/{location}/dnsPrivateZones/{dnsprivatezonename}": {
      "get": {
        "operationId": "DnsPrivateZones_Get",
        "tags": [
          "DnsPrivateZones"
        ],
        "description": "Get a DnsPrivateZone",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/LocationParameter"
          },
          {
            "name": "dnsprivatezonename",
            "in": "path",
            "description": "DnsPrivateZone name",
            "required": true,
            "type": "string",
            "pattern": ".*"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DnsPrivateZone"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get a DnsPrivateZone by name": {
            "$ref": "./examples/dnsPrivateZones_get.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Oracle.Database/locations/{location}/giVersions": {
      "get": {
        "operationId": "GiVersions_ListByLocation",
        "tags": [
          "GiVersions"
        ],
        "description": "List GiVersion resources by Location",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/LocationParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/GiVersionListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List GiVersions by location": {
            "$ref": "./examples/giVersions_listByLocation.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Oracle.Database/locations/{location}/giVersions/{giversionname}": {
      "get": {
        "operationId": "GiVersions_Get",
        "tags": [
          "GiVersions"
        ],
        "description": "Get a GiVersion",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/LocationParameter"
          },
          {
            "name": "giversionname",
            "in": "path",
            "description": "GiVersion name",
            "required": true,
            "type": "string",
            "pattern": ".*"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/GiVersion"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get a GiVersion by name": {
            "$ref": "./examples/giVersions_get.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Oracle.Database/locations/{location}/systemVersions": {
      "get": {
        "operationId": "SystemVersions_ListByLocation",
        "tags": [
          "SystemVersions"
        ],
        "description": "List SystemVersion resources by Location",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/LocationParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/SystemVersionListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List Exadata System Versions by the provided filter": {
            "$ref": "./examples/systemVersions_listByLocation.json"
          },
          "systemVersions_listByLocation": {
            "$ref": "./examples/systemVersions_listByLocation.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Oracle.Database/locations/{location}/systemVersions/{systemversionname}": {
      "get": {
        "operationId": "SystemVersions_Get",
        "tags": [
          "SystemVersions"
        ],
        "description": "Get a SystemVersion",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/LocationParameter"
          },
          {
            "name": "systemversionname",
            "in": "path",
            "description": "SystemVersion name",
            "required": true,
            "type": "string",
            "pattern": ".*"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/SystemVersion"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get Exadata System Version": {
            "$ref": "./examples/systemVersions_get.json"
          },
          "systemVersions_listSystemVersions": {
            "$ref": "./examples/systemVersions_get.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Oracle.Database/oracleSubscriptions": {
      "get": {
        "operationId": "OracleSubscriptions_ListBySubscription",
        "tags": [
          "OracleSubscriptions"
        ],
        "description": "List OracleSubscription resources by subscription ID",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/OracleSubscriptionListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List Oracle Subscriptions by subscription": {
            "$ref": "./examples/oracleSubscriptions_listBySubscription.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Oracle.Database/oracleSubscriptions/default": {
      "get": {
        "operationId": "OracleSubscriptions_Get",
        "tags": [
          "OracleSubscriptions"
        ],
        "description": "Get a OracleSubscription",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/OracleSubscription"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get Oracle Subscription": {
            "$ref": "./examples/oracleSubscriptions_get.json"
          }
        }
      },
      "put": {
        "operationId": "OracleSubscriptions_CreateOrUpdate",
        "tags": [
          "OracleSubscriptions"
        ],
        "description": "Create a OracleSubscription",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/OracleSubscription"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'OracleSubscription' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/OracleSubscription"
            }
          },
          "201": {
            "description": "Resource 'OracleSubscription' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/OracleSubscription"
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Create or Update Oracle Subscription": {
            "$ref": "./examples/oracleSubscriptions_create.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "OracleSubscriptions_Update",
        "tags": [
          "OracleSubscriptions"
        ],
        "description": "Update a OracleSubscription",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "The resource properties to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/OracleSubscriptionUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/OracleSubscription"
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Patch Oracle Subscription": {
            "$ref": "./examples/oracleSubscriptions_patch.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "OracleSubscriptions_Delete",
        "tags": [
          "OracleSubscriptions"
        ],
        "description": "Delete a OracleSubscription",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete Oracle Subscription": {
            "$ref": "./examples/oracleSubscriptions_delete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/providers/Oracle.Database/oracleSubscriptions/default/listActivationLinks": {
      "post": {
        "operationId": "OracleSubscriptions_ListActivationLinks",
        "tags": [
          "OracleSubscriptions"
        ],
        "description": "List Activation Links",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ActivationLinks"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List Activation Links for the Oracle Subscription": {
            "$ref": "./examples/oracleSubscriptions_listActivationLinks.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/providers/Oracle.Database/oracleSubscriptions/default/listCloudAccountDetails": {
      "post": {
        "operationId": "OracleSubscriptions_ListCloudAccountDetails",
        "tags": [
          "OracleSubscriptions"
        ],
        "description": "List Cloud Account Details",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/CloudAccountDetails"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List Cloud Account details for the Oracle Subscription": {
            "$ref": "./examples/oracleSubscriptions_listCloudAccountDetails.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/providers/Oracle.Database/oracleSubscriptions/default/listSaasSubscriptionDetails": {
      "post": {
        "operationId": "OracleSubscriptions_ListSaasSubscriptionDetails",
        "tags": [
          "OracleSubscriptions"
        ],
        "description": "List Saas Subscription Details",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/SaasSubscriptionDetails"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List Saas Subscription details for the Oracle Subscription": {
            "$ref": "./examples/oracleSubscriptions_listSaasSubscriptionDetails.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Oracle.Database/autonomousDatabases": {
      "get": {
        "operationId": "AutonomousDatabases_ListByResourceGroup",
        "tags": [
          "AutonomousDatabases"
        ],
        "description": "List AutonomousDatabase resources by resource group",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/AutonomousDatabaseListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List Autonomous Database by resource group": {
            "$ref": "./examples/autonomousDatabase_listByResourceGroup.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Oracle.Database/autonomousDatabases/{autonomousdatabasename}": {
      "get": {
        "operationId": "AutonomousDatabases_Get",
        "tags": [
          "AutonomousDatabases"
        ],
        "description": "Get a AutonomousDatabase",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "autonomousdatabasename",
            "in": "path",
            "description": "The database name.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 30,
            "pattern": ".*"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/AutonomousDatabase"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "AutonomousDatabases_Get": {
            "$ref": "./examples/autonomousDatabase_get.json"
          },
          "Get Autonomous Database": {
            "$ref": "./examples/autonomousDatabase_get.json"
          }
        }
      },
      "put": {
        "operationId": "AutonomousDatabases_CreateOrUpdate",
        "tags": [
          "AutonomousDatabases"
        ],
        "description": "Create a AutonomousDatabase",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "autonomousdatabasename",
            "in": "path",
            "description": "The database name.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 30,
            "pattern": ".*"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AutonomousDatabase"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'AutonomousDatabase' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/AutonomousDatabase"
            }
          },
          "201": {
            "description": "Resource 'AutonomousDatabase' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/AutonomousDatabase"
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "AutonomousDatabases_CreateOrUpdate": {
            "$ref": "./examples/autonomousDatabase_create.json"
          },
          "AutonomousDatabases_CreateOrUpdate_clone": {
            "$ref": "./examples/autonomousDatabaseClone_create.json"
          },
          "Create Autonomous Database": {
            "$ref": "./examples/autonomousDatabase_create.json"
          },
          "Create clone Autonomous Database": {
            "$ref": "./examples/autonomousDatabaseClone_create.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "AutonomousDatabases_Update",
        "tags": [
          "AutonomousDatabases"
        ],
        "description": "Update a AutonomousDatabase",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "autonomousdatabasename",
            "in": "path",
            "description": "The database name.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 30,
            "pattern": ".*"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "The resource properties to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AutonomousDatabaseUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/AutonomousDatabase"
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Patch Autonomous Database": {
            "$ref": "./examples/autonomousDatabase_patch.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "AutonomousDatabases_Delete",
        "tags": [
          "AutonomousDatabases"
        ],
        "description": "Delete a AutonomousDatabase",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "autonomousdatabasename",
            "in": "path",
            "description": "The database name.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 30,
            "pattern": ".*"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete Autonomous Database": {
            "$ref": "./examples/autonomousDatabase_delete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Oracle.Database/autonomousDatabases/{autonomousdatabasename}/autonomousDatabaseBackups": {
      "get": {
        "operationId": "AutonomousDatabaseBackups_ListByAutonomousDatabase",
        "tags": [
          "AutonomousDatabaseBackups"
        ],
        "description": "List AutonomousDatabaseBackup resources by AutonomousDatabase",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "autonomousdatabasename",
            "in": "path",
            "description": "The database name.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 30,
            "pattern": ".*"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/AutonomousDatabaseBackupListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "AutonomousDatabaseBackups_ListByAutonomousDatabase": {
            "$ref": "./examples/autonomousDatabaseBackup_listByParent.json"
          },
          "List Autonomous Database Backups by Autonomous Database.": {
            "$ref": "./examples/autonomousDatabaseBackup_listByParent.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Oracle.Database/autonomousDatabases/{autonomousdatabasename}/autonomousDatabaseBackups/{adbbackupid}": {
      "get": {
        "operationId": "AutonomousDatabaseBackups_Get",
        "tags": [
          "AutonomousDatabaseBackups"
        ],
        "description": "Get a AutonomousDatabaseBackup",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "autonomousdatabasename",
            "in": "path",
            "description": "The database name.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 30,
            "pattern": ".*"
          },
          {
            "name": "adbbackupid",
            "in": "path",
            "description": "AutonomousDatabaseBackup id",
            "required": true,
            "type": "string",
            "pattern": ".*"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/AutonomousDatabaseBackup"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "AutonomousDatabaseBackups_Get": {
            "$ref": "./examples/autonomousDatabaseBackup_get.json"
          },
          "Get Autonomous Database Backup.": {
            "$ref": "./examples/autonomousDatabaseBackup_get.json"
          }
        }
      },
      "put": {
        "operationId": "AutonomousDatabaseBackups_CreateOrUpdate",
        "tags": [
          "AutonomousDatabaseBackups"
        ],
        "description": "Create a AutonomousDatabaseBackup",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "autonomousdatabasename",
            "in": "path",
            "description": "The database name.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 30,
            "pattern": ".*"
          },
          {
            "name": "adbbackupid",
            "in": "path",
            "description": "AutonomousDatabaseBackup id",
            "required": true,
            "type": "string",
            "pattern": ".*"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AutonomousDatabaseBackup"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'AutonomousDatabaseBackup' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/AutonomousDatabaseBackup"
            }
          },
          "201": {
            "description": "Resource 'AutonomousDatabaseBackup' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/AutonomousDatabaseBackup"
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "AutonomousDatabaseBackups_CreateOrUpdate": {
            "$ref": "./examples/autonomousDatabaseBackup_create.json"
          },
          "Create Autonomous Database Backup.": {
            "$ref": "./examples/autonomousDatabaseBackup_create.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "AutonomousDatabaseBackups_Update",
        "tags": [
          "AutonomousDatabaseBackups"
        ],
        "description": "Update a AutonomousDatabaseBackup",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "autonomousdatabasename",
            "in": "path",
            "description": "The database name.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 30,
            "pattern": ".*"
          },
          {
            "name": "adbbackupid",
            "in": "path",
            "description": "AutonomousDatabaseBackup id",
            "required": true,
            "type": "string",
            "pattern": ".*"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "The resource properties to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AutonomousDatabaseBackupUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/AutonomousDatabaseBackup"
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "AutonomousDatabaseBackups_Update": {
            "$ref": "./examples/autonomousDatabaseBackup_patch.json"
          },
          "Patch Autonomous Database Backup.": {
            "$ref": "./examples/autonomousDatabaseBackup_patch.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "AutonomousDatabaseBackups_Delete",
        "tags": [
          "AutonomousDatabaseBackups"
        ],
        "description": "Delete a AutonomousDatabaseBackup",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "autonomousdatabasename",
            "in": "path",
            "description": "The database name.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 30,
            "pattern": ".*"
          },
          {
            "name": "adbbackupid",
            "in": "path",
            "description": "AutonomousDatabaseBackup id",
            "required": true,
            "type": "string",
            "pattern": ".*"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "AutonomousDatabaseBackups_Delete": {
            "$ref": "./examples/autonomousDatabaseBackup_delete.json"
          },
          "Delete Autonomous Database Backup.": {
            "$ref": "./examples/autonomousDatabaseBackup_delete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Oracle.Database/autonomousDatabases/{autonomousdatabasename}/failover": {
      "post": {
        "operationId": "AutonomousDatabases_Failover",
        "tags": [
          "AutonomousDatabases"
        ],
        "description": "Perform failover action on Autonomous Database",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "autonomousdatabasename",
            "in": "path",
            "description": "The database name.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 30,
            "pattern": ".*"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The content of the action request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PeerDbDetails"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/AutonomousDatabase"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "AutonomousDatabases_Failover": {
            "$ref": "./examples/autonomousDatabase_failover.json"
          },
          "Perform failover action on Autonomous Database": {
            "$ref": "./examples/autonomousDatabase_failover.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Oracle.Database/autonomousDatabases/{autonomousdatabasename}/generateWallet": {
      "post": {
        "operationId": "AutonomousDatabases_GenerateWallet",
        "tags": [
          "AutonomousDatabases"
        ],
        "description": "Generate wallet action on Autonomous Database",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "autonomousdatabasename",
            "in": "path",
            "description": "The database name.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 30,
            "pattern": ".*"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The content of the action request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GenerateAutonomousDatabaseWalletDetails"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/AutonomousDatabaseWalletFile"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Generate wallet action on Autonomous Database": {
            "$ref": "./examples/autonomousDatabase_generateWallet.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Oracle.Database/autonomousDatabases/{autonomousdatabasename}/restore": {
      "post": {
        "operationId": "AutonomousDatabases_Restore",
        "tags": [
          "AutonomousDatabases"
        ],
        "description": "Restores an Autonomous Database based on the provided request parameters.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "autonomousdatabasename",
            "in": "path",
            "description": "The database name.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 30,
            "pattern": ".*"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The content of the action request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RestoreAutonomousDatabaseDetails"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/AutonomousDatabase"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "AutonomousDatabases_Restore": {
            "$ref": "./examples/autonomousDatabase_restore.json"
          },
          "Perform restore action on Autonomous Database": {
            "$ref": "./examples/autonomousDatabase_restore.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Oracle.Database/autonomousDatabases/{autonomousdatabasename}/shrink": {
      "post": {
        "operationId": "AutonomousDatabases_Shrink",
        "tags": [
          "AutonomousDatabases"
        ],
        "description": "This operation shrinks the current allocated storage down to the current actual used data storage.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "autonomousdatabasename",
            "in": "path",
            "description": "The database name.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 30,
            "pattern": ".*"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/AutonomousDatabase"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Perform shrink action on Autonomous Database": {
            "$ref": "./examples/autonomousDatabase_shrink.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Oracle.Database/autonomousDatabases/{autonomousdatabasename}/switchover": {
      "post": {
        "operationId": "AutonomousDatabases_Switchover",
        "tags": [
          "AutonomousDatabases"
        ],
        "description": "Perform switchover action on Autonomous Database",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "autonomousdatabasename",
            "in": "path",
            "description": "The database name.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 30,
            "pattern": ".*"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The content of the action request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PeerDbDetails"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/AutonomousDatabase"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "AutonomousDatabases_Switchover": {
            "$ref": "./examples/autonomousDatabase_switchover.json"
          },
          "Perform switchover action on Autonomous Database": {
            "$ref": "./examples/autonomousDatabase_switchover.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Oracle.Database/cloudExadataInfrastructures": {
      "get": {
        "operationId": "CloudExadataInfrastructures_ListByResourceGroup",
        "tags": [
          "CloudExadataInfrastructures"
        ],
        "description": "List CloudExadataInfrastructure resources by resource group",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/CloudExadataInfrastructureListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List Exadata Infrastructure by resource group": {
            "$ref": "./examples/exaInfra_listByResourceGroup.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Oracle.Database/cloudExadataInfrastructures/{cloudexadatainfrastructurename}": {
      "get": {
        "operationId": "CloudExadataInfrastructures_Get",
        "tags": [
          "CloudExadataInfrastructures"
        ],
        "description": "Get a CloudExadataInfrastructure",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "cloudexadatainfrastructurename",
            "in": "path",
            "description": "CloudExadataInfrastructure name",
            "required": true,
            "type": "string",
            "pattern": ".*"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/CloudExadataInfrastructure"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get Exadata Infrastructure": {
            "$ref": "./examples/exaInfra_get.json"
          }
        }
      },
      "put": {
        "operationId": "CloudExadataInfrastructures_CreateOrUpdate",
        "tags": [
          "CloudExadataInfrastructures"
        ],
        "description": "Create a CloudExadataInfrastructure",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "cloudexadatainfrastructurename",
            "in": "path",
            "description": "CloudExadataInfrastructure name",
            "required": true,
            "type": "string",
            "pattern": ".*"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CloudExadataInfrastructure"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'CloudExadataInfrastructure' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/CloudExadataInfrastructure"
            }
          },
          "201": {
            "description": "Resource 'CloudExadataInfrastructure' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/CloudExadataInfrastructure"
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Create Exadata Infrastructure": {
            "$ref": "./examples/exaInfra_create.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "CloudExadataInfrastructures_Update",
        "tags": [
          "CloudExadataInfrastructures"
        ],
        "description": "Update a CloudExadataInfrastructure",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "cloudexadatainfrastructurename",
            "in": "path",
            "description": "CloudExadataInfrastructure name",
            "required": true,
            "type": "string",
            "pattern": ".*"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "The resource properties to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CloudExadataInfrastructureUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/CloudExadataInfrastructure"
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Patch Exadata Infrastructure": {
            "$ref": "./examples/exaInfra_patch.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "CloudExadataInfrastructures_Delete",
        "tags": [
          "CloudExadataInfrastructures"
        ],
        "description": "Delete a CloudExadataInfrastructure",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "cloudexadatainfrastructurename",
            "in": "path",
            "description": "CloudExadataInfrastructure name",
            "required": true,
            "type": "string",
            "pattern": ".*"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete Exadata Infrastructure": {
            "$ref": "./examples/exaInfra_delete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Oracle.Database/cloudExadataInfrastructures/{cloudexadatainfrastructurename}/addStorageCapacity": {
      "post": {
        "operationId": "CloudExadataInfrastructures_AddStorageCapacity",
        "tags": [
          "CloudExadataInfrastructures"
        ],
        "description": "Perform add storage capacity on exadata infra",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "cloudexadatainfrastructurename",
            "in": "path",
            "description": "CloudExadataInfrastructure name",
            "required": true,
            "type": "string",
            "pattern": ".*"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/CloudExadataInfrastructure"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Perform add storage capacity on exadata infra": {
            "$ref": "./examples/exaInfra_addStorageCapacity.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Oracle.Database/cloudExadataInfrastructures/{cloudexadatainfrastructurename}/dbServers": {
      "get": {
        "operationId": "DbServers_ListByCloudExadataInfrastructure",
        "tags": [
          "DbServers"
        ],
        "description": "List DbServer resources by CloudExadataInfrastructure",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "cloudexadatainfrastructurename",
            "in": "path",
            "description": "CloudExadataInfrastructure name",
            "required": true,
            "type": "string",
            "pattern": ".*"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DbServerListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List DbServers by Exadata Infrastructure": {
            "$ref": "./examples/dbServers_listByParent.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Oracle.Database/cloudExadataInfrastructures/{cloudexadatainfrastructurename}/dbServers/{dbserverocid}": {
      "get": {
        "operationId": "DbServers_Get",
        "tags": [
          "DbServers"
        ],
        "description": "Get a DbServer",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "cloudexadatainfrastructurename",
            "in": "path",
            "description": "CloudExadataInfrastructure name",
            "required": true,
            "type": "string",
            "pattern": ".*"
          },
          {
            "name": "dbserverocid",
            "in": "path",
            "description": "DbServer OCID.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 255,
            "pattern": ".*"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DbServer"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get DbServer by parent": {
            "$ref": "./examples/dbServers_get.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Oracle.Database/cloudVmClusters": {
      "get": {
        "operationId": "CloudVmClusters_ListByResourceGroup",
        "tags": [
          "CloudVmClusters"
        ],
        "description": "List CloudVmCluster resources by resource group",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/CloudVmClusterListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List VM Clusters by resource group": {
            "$ref": "./examples/vmClusters_listByResourceGroup.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Oracle.Database/cloudVmClusters/{cloudvmclustername}": {
      "get": {
        "operationId": "CloudVmClusters_Get",
        "tags": [
          "CloudVmClusters"
        ],
        "description": "Get a CloudVmCluster",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "cloudvmclustername",
            "in": "path",
            "description": "CloudVmCluster name",
            "required": true,
            "type": "string",
            "pattern": ".*"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/CloudVmCluster"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get VM Cluster": {
            "$ref": "./examples/vmClusters_get.json"
          }
        }
      },
      "put": {
        "operationId": "CloudVmClusters_CreateOrUpdate",
        "tags": [
          "CloudVmClusters"
        ],
        "description": "Create a CloudVmCluster",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "cloudvmclustername",
            "in": "path",
            "description": "CloudVmCluster name",
            "required": true,
            "type": "string",
            "pattern": ".*"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CloudVmCluster"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'CloudVmCluster' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/CloudVmCluster"
            }
          },
          "201": {
            "description": "Resource 'CloudVmCluster' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/CloudVmCluster"
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Create VM Cluster": {
            "$ref": "./examples/vmClusters_create.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "CloudVmClusters_Update",
        "tags": [
          "CloudVmClusters"
        ],
        "description": "Update a CloudVmCluster",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "cloudvmclustername",
            "in": "path",
            "description": "CloudVmCluster name",
            "required": true,
            "type": "string",
            "pattern": ".*"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "The resource properties to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CloudVmClusterUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/CloudVmCluster"
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Patch VM Cluster": {
            "$ref": "./examples/vmClusters_patch.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "CloudVmClusters_Delete",
        "tags": [
          "CloudVmClusters"
        ],
        "description": "Delete a CloudVmCluster",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "cloudvmclustername",
            "in": "path",
            "description": "CloudVmCluster name",
            "required": true,
            "type": "string",
            "pattern": ".*"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete VM Cluster": {
            "$ref": "./examples/vmClusters_delete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Oracle.Database/cloudVmClusters/{cloudvmclustername}/addVms": {
      "post": {
        "operationId": "CloudVmClusters_AddVms",
        "tags": [
          "CloudVmClusters"
        ],
        "description": "Add VMs to the VM Cluster",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "cloudvmclustername",
            "in": "path",
            "description": "CloudVmCluster name",
            "required": true,
            "type": "string",
            "pattern": ".*"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The content of the action request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AddRemoveDbNode"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/CloudVmCluster"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Add VMs to VM Cluster": {
            "$ref": "./examples/vmClusters_addVms.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Oracle.Database/cloudVmClusters/{cloudvmclustername}/dbNodes": {
      "get": {
        "operationId": "DbNodes_ListByCloudVmCluster",
        "tags": [
          "DbNodes"
        ],
        "description": "List DbNode resources by CloudVmCluster",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "cloudvmclustername",
            "in": "path",
            "description": "CloudVmCluster name",
            "required": true,
            "type": "string",
            "pattern": ".*"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DbNodeListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List DbNodes by VM Cluster": {
            "$ref": "./examples/dbNodes_listByParent.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Oracle.Database/cloudVmClusters/{cloudvmclustername}/dbNodes/{dbnodeocid}": {
      "get": {
        "operationId": "DbNodes_Get",
        "tags": [
          "DbNodes"
        ],
        "description": "Get a DbNode",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "cloudvmclustername",
            "in": "path",
            "description": "CloudVmCluster name",
            "required": true,
            "type": "string",
            "pattern": ".*"
          },
          {
            "name": "dbnodeocid",
            "in": "path",
            "description": "DbNode OCID.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 255,
            "pattern": ".*"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DbNode"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get DbNode": {
            "$ref": "./examples/dbNodes_get.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Oracle.Database/cloudVmClusters/{cloudvmclustername}/dbNodes/{dbnodeocid}/action": {
      "post": {
        "operationId": "DbNodes_Action",
        "tags": [
          "DbNodes"
        ],
        "description": "VM actions on DbNode of VM Cluster by the provided filter",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "cloudvmclustername",
            "in": "path",
            "description": "CloudVmCluster name",
            "required": true,
            "type": "string",
            "pattern": ".*"
          },
          {
            "name": "dbnodeocid",
            "in": "path",
            "description": "DbNode OCID.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 255,
            "pattern": ".*"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The content of the action request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DbNodeAction"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DbNode"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "DbNodes_Action": {
            "$ref": "./examples/dbNodes_action.json"
          },
          "VM actions on DbNodes of VM Cluster": {
            "$ref": "./examples/dbNodes_action.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Oracle.Database/cloudVmClusters/{cloudvmclustername}/listPrivateIpAddresses": {
      "post": {
        "operationId": "CloudVmClusters_ListPrivateIpAddresses",
        "tags": [
          "CloudVmClusters"
        ],
        "description": "List Private IP Addresses by the provided filter",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "cloudvmclustername",
            "in": "path",
            "description": "CloudVmCluster name",
            "required": true,
            "type": "string",
            "pattern": ".*"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The content of the action request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PrivateIpAddressesFilter"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PrivateIpAddressProperties"
              },
              "x-ms-identifiers": []
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List Private IP Addresses for VM Cluster": {
            "$ref": "./examples/vmClusters_listPrivateIpAddresses.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Oracle.Database/cloudVmClusters/{cloudvmclustername}/removeVms": {
      "post": {
        "operationId": "CloudVmClusters_RemoveVms",
        "tags": [
          "CloudVmClusters"
        ],
        "description": "Remove VMs from the VM Cluster",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "cloudvmclustername",
            "in": "path",
            "description": "CloudVmCluster name",
            "required": true,
            "type": "string",
            "pattern": ".*"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The content of the action request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AddRemoveDbNode"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/CloudVmCluster"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Remove VMs from VM Cluster": {
            "$ref": "./examples/vmClusters_removeVms.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Oracle.Database/cloudVmClusters/{cloudvmclustername}/virtualNetworkAddresses": {
      "get": {
        "operationId": "VirtualNetworkAddresses_ListByCloudVmCluster",
        "tags": [
          "VirtualNetworkAddresses"
        ],
        "description": "List VirtualNetworkAddress resources by CloudVmCluster",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "cloudvmclustername",
            "in": "path",
            "description": "CloudVmCluster name",
            "required": true,
            "type": "string",
            "pattern": ".*"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/VirtualNetworkAddressListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List Virtual Network Addresses by VM Cluster": {
            "$ref": "./examples/virtualNetworkAddresses_listByParent.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Oracle.Database/cloudVmClusters/{cloudvmclustername}/virtualNetworkAddresses/{virtualnetworkaddressname}": {
      "get": {
        "operationId": "VirtualNetworkAddresses_Get",
        "tags": [
          "VirtualNetworkAddresses"
        ],
        "description": "Get a VirtualNetworkAddress",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "cloudvmclustername",
            "in": "path",
            "description": "CloudVmCluster name",
            "required": true,
            "type": "string",
            "pattern": ".*"
          },
          {
            "name": "virtualnetworkaddressname",
            "in": "path",
            "description": "Virtual IP address hostname.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 63,
            "pattern": ".*"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/VirtualNetworkAddress"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get Virtual Network Address": {
            "$ref": "./examples/virtualNetworkAddresses_get.json"
          }
        }
      },
      "put": {
        "operationId": "VirtualNetworkAddresses_CreateOrUpdate",
        "tags": [
          "VirtualNetworkAddresses"
        ],
        "description": "Create a VirtualNetworkAddress",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "cloudvmclustername",
            "in": "path",
            "description": "CloudVmCluster name",
            "required": true,
            "type": "string",
            "pattern": ".*"
          },
          {
            "name": "virtualnetworkaddressname",
            "in": "path",
            "description": "Virtual IP address hostname.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 63,
            "pattern": ".*"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VirtualNetworkAddress"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'VirtualNetworkAddress' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/VirtualNetworkAddress"
            }
          },
          "201": {
            "description": "Resource 'VirtualNetworkAddress' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/VirtualNetworkAddress"
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Create Virtual Network Address": {
            "$ref": "./examples/virtualNetworkAddresses_create.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "VirtualNetworkAddresses_Delete",
        "tags": [
          "VirtualNetworkAddresses"
        ],
        "description": "Delete a VirtualNetworkAddress",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "cloudvmclustername",
            "in": "path",
            "description": "CloudVmCluster name",
            "required": true,
            "type": "string",
            "pattern": ".*"
          },
          {
            "name": "virtualnetworkaddressname",
            "in": "path",
            "description": "Virtual IP address hostname.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 63,
            "pattern": ".*"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete Virtual Network Address": {
            "$ref": "./examples/virtualNetworkAddresses_delete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    }
  },
  "definitions": {
    "ActivationLinks": {
      "type": "object",
      "description": "Activation Links model",
      "properties": {
        "newCloudAccountActivationLink": {
          "type": "string",
          "description": "New Cloud Account Activation Link",
          "readOnly": true
        },
        "existingCloudAccountActivationLink": {
          "type": "string",
          "description": "Existing Cloud Account Activation Link",
          "readOnly": true
        }
      }
    },
    "AddRemoveDbNode": {
      "type": "object",
      "description": "Add/Remove (Virtual Machine) DbNode model",
      "properties": {
        "dbServers": {
          "type": "array",
          "description": "Db servers ocids",
          "items": {
            "$ref": "#/definitions/Ocid"
          }
        }
      },
      "required": [
        "dbServers"
      ]
    },
    "AllConnectionStringType": {
      "type": "object",
      "description": "The connection string profile to allow clients to group, filter and select connection string values based on structured metadata.",
      "properties": {
        "high": {
          "type": "string",
          "description": "The High database service provides the highest level of resources to each SQL statement resulting in the highest performance, but supports the fewest number of concurrent SQL statements.",
          "minLength": 10,
          "maxLength": 255
        },
        "low": {
          "type": "string",
          "description": "The Low database service provides the least level of resources to each SQL statement, but supports the most number of concurrent SQL statements.",
          "minLength": 10,
          "maxLength": 255
        },
        "medium": {
          "type": "string",
          "description": "The Medium database service provides a lower level of resources to each SQL statement potentially resulting a lower level of performance, but supports more concurrent SQL statements.",
          "minLength": 10,
          "maxLength": 255
        }
      }
    },
    "ApexDetailsType": {
      "type": "object",
      "description": "Information about Oracle APEX Application Development.",
      "properties": {
        "apexVersion": {
          "type": "string",
          "description": "The Oracle APEX Application Development version."
        },
        "ordsVersion": {
          "type": "string",
          "description": "The Oracle REST Data Services (ORDS) version."
        }
      }
    },
    "AutonomousDatabase": {
      "type": "object",
      "description": "Autonomous Database  resource model.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/AutonomousDatabaseBaseProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "AutonomousDatabaseBackup": {
      "type": "object",
      "description": "AutonomousDatabaseBackup resource definition",
      "properties": {
        "properties": {
          "$ref": "#/definitions/AutonomousDatabaseBackupProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "AutonomousDatabaseBackupLifecycleState": {
      "type": "string",
      "description": "Autonomous database backup lifecycle state enum",
      "enum": [
        "Creating",
        "Active",
        "Deleting",
        "Failed",
        "Updating"
      ],
      "x-ms-enum": {
        "name": "AutonomousDatabaseBackupLifecycleState",
        "modelAsString": true,
        "values": [
          {
            "name": "Creating",
            "value": "Creating",
            "description": "AutonomousDatabase backup is creating"
          },
          {
            "name": "Active",
            "value": "Active",
            "description": "AutonomousDatabase backup is active"
          },
          {
            "name": "Deleting",
            "value": "Deleting",
            "description": "AutonomousDatabase backup is deleting"
          },
          {
            "name": "Failed",
            "value": "Failed",
            "description": "AutonomousDatabase backup is failed"
          },
          {
            "name": "Updating",
            "value": "Updating",
            "description": "AutonomousDatabase backup is updating"
          }
        ]
      }
    },
    "AutonomousDatabaseBackupListResult": {
      "type": "object",
      "description": "The response of a AutonomousDatabaseBackup list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The AutonomousDatabaseBackup items on this page",
          "items": {
            "$ref": "#/definitions/AutonomousDatabaseBackup"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "AutonomousDatabaseBackupProperties": {
      "type": "object",
      "description": "AutonomousDatabaseBackup resource model",
      "properties": {
        "autonomousDatabaseOcid": {
          "$ref": "#/definitions/Ocid",
          "description": "The OCID of the Autonomous Database.",
          "readOnly": true
        },
        "databaseSizeInTbs": {
          "type": "number",
          "format": "double",
          "description": "The size of the database in terabytes at the time the backup was taken.",
          "readOnly": true
        },
        "dbVersion": {
          "type": "string",
          "description": "A valid Oracle Database version for Autonomous Database.",
          "readOnly": true
        },
        "displayName": {
          "type": "string",
          "description": "The user-friendly name for the backup. The name does not have to be unique.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "ocid": {
          "$ref": "#/definitions/Ocid",
          "description": "The OCID of the Autonomous Database backup.",
          "readOnly": true
        },
        "isAutomatic": {
          "type": "boolean",
          "description": "Indicates whether the backup is user-initiated or automatic.",
          "readOnly": true
        },
        "isRestorable": {
          "type": "boolean",
          "description": "Indicates whether the backup can be used to restore the associated Autonomous Database.",
          "readOnly": true
        },
        "lifecycleDetails": {
          "type": "string",
          "description": "Additional information about the current lifecycle state.",
          "readOnly": true
        },
        "lifecycleState": {
          "$ref": "#/definitions/AutonomousDatabaseBackupLifecycleState",
          "description": "The current state of the backup.",
          "readOnly": true
        },
        "retentionPeriodInDays": {
          "type": "integer",
          "format": "int32",
          "description": "Retention period, in days, for long-term backups.",
          "minimum": 60,
          "maximum": 3650,
          "x-ms-mutability": [
            "read",
            "update",
            "create"
          ]
        },
        "sizeInTbs": {
          "type": "number",
          "format": "double",
          "description": "The backup size in terabytes (TB).",
          "readOnly": true
        },
        "timeAvailableTil": {
          "type": "string",
          "format": "date-time",
          "description": "Timestamp until when the backup will be available.",
          "readOnly": true
        },
        "timeStarted": {
          "type": "string",
          "description": "The date and time the backup started.",
          "readOnly": true
        },
        "timeEnded": {
          "type": "string",
          "description": "The date and time the backup completed.",
          "readOnly": true
        },
        "backupType": {
          "$ref": "#/definitions/AutonomousDatabaseBackupType",
          "description": "The type of backup.",
          "readOnly": true
        },
        "provisioningState": {
          "$ref": "#/definitions/AzureResourceProvisioningState",
          "description": "Azure resource provisioning state.",
          "readOnly": true
        }
      }
    },
    "AutonomousDatabaseBackupType": {
      "type": "string",
      "description": "Autonomous database backup type enum",
      "enum": [
        "Incremental",
        "Full",
        "LongTerm"
      ],
      "x-ms-enum": {
        "name": "AutonomousDatabaseBackupType",
        "modelAsString": true,
        "values": [
          {
            "name": "Incremental",
            "value": "Incremental",
            "description": "Incremental backup"
          },
          {
            "name": "Full",
            "value": "Full",
            "description": "Full backup"
          },
          {
            "name": "LongTerm",
            "value": "LongTerm",
            "description": "LongTerm backup"
          }
        ]
      }
    },
    "AutonomousDatabaseBackupUpdate": {
      "type": "object",
      "description": "The type used for update operations of the AutonomousDatabaseBackup.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/AutonomousDatabaseBackupUpdateProperties",
          "x-ms-client-flatten": true
        }
      }
    },
    "AutonomousDatabaseBackupUpdateProperties": {
      "type": "object",
      "description": "The updatable properties of the AutonomousDatabaseBackup.",
      "properties": {
        "retentionPeriodInDays": {
          "type": "integer",
          "format": "int32",
          "description": "Retention period, in days, for long-term backups.",
          "minimum": 60,
          "maximum": 3650,
          "x-ms-mutability": [
            "read",
            "update",
            "create"
          ]
        }
      }
    },
    "AutonomousDatabaseBaseProperties": {
      "type": "object",
      "description": "Autonomous Database base resource model.",
      "properties": {
        "adminPassword": {
          "$ref": "#/definitions/Password",
          "description": "Admin password.",
          "minLength": 12,
          "maxLength": 30,
          "x-ms-mutability": [
            "update",
            "create"
          ]
        },
        "dataBaseType": {
          "$ref": "#/definitions/DataBaseType",
          "description": "Database type to be created.",
          "x-ms-mutability": [
            "create"
          ]
        },
        "autonomousMaintenanceScheduleType": {
          "$ref": "#/definitions/AutonomousMaintenanceScheduleType",
          "description": "The maintenance schedule type of the Autonomous Database Serverless.",
          "x-ms-mutability": [
            "read",
            "update",
            "create"
          ]
        },
        "characterSet": {
          "type": "string",
          "description": "The character set for the autonomous database.",
          "minLength": 1,
          "maxLength": 255,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "computeCount": {
          "type": "number",
          "format": "float",
          "description": "The compute amount (CPUs) available to the database.",
          "minimum": 0.1,
          "maximum": 512,
          "x-ms-mutability": [
            "read",
            "update",
            "create"
          ]
        },
        "computeModel": {
          "$ref": "#/definitions/ComputeModel",
          "description": "The compute model of the Autonomous Database.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "cpuCoreCount": {
          "type": "integer",
          "format": "int32",
          "description": "The number of CPU cores to be made available to the database.",
          "minimum": 1,
          "maximum": 128,
          "x-ms-mutability": [
            "read",
            "update",
            "create"
          ]
        },
        "customerContacts": {
          "type": "array",
          "description": "Customer Contacts.",
          "items": {
            "$ref": "#/definitions/CustomerContact"
          },
          "x-ms-identifiers": [],
          "x-ms-mutability": [
            "read",
            "update",
            "create"
          ]
        },
        "dataStorageSizeInTbs": {
          "type": "integer",
          "format": "int32",
          "description": "The quantity of data in the database, in terabytes.",
          "minimum": 1,
          "maximum": 384,
          "x-ms-mutability": [
            "read",
            "update",
            "create"
          ]
        },
        "dataStorageSizeInGbs": {
          "type": "integer",
          "format": "int32",
          "description": "The size, in gigabytes, of the data volume that will be created and attached to the database.",
          "minimum": 20,
          "maximum": 393216,
          "x-ms-mutability": [
            "read",
            "update",
            "create"
          ]
        },
        "dbVersion": {
          "type": "string",
          "description": "A valid Oracle Database version for Autonomous Database.",
          "minLength": 1,
          "maxLength": 255,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "dbWorkload": {
          "$ref": "#/definitions/WorkloadType",
          "description": "The Autonomous Database workload type",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "displayName": {
          "type": "string",
          "description": "The user-friendly name for the Autonomous Database.",
          "minLength": 1,
          "maxLength": 255,
          "x-ms-mutability": [
            "read",
            "update",
            "create"
          ]
        },
        "isAutoScalingEnabled": {
          "type": "boolean",
          "description": "Indicates if auto scaling is enabled for the Autonomous Database CPU core count.",
          "x-ms-mutability": [
            "read",
            "update",
            "create"
          ]
        },
        "isAutoScalingForStorageEnabled": {
          "type": "boolean",
          "description": "Indicates if auto scaling is enabled for the Autonomous Database storage.",
          "x-ms-mutability": [
            "read",
            "update",
            "create"
          ]
        },
        "peerDbIds": {
          "type": "array",
          "description": "The list of [OCIDs](https://docs.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of standby databases located in Autonomous Data Guard remote regions that are associated with the source database. Note that for Autonomous Database Serverless instances, standby databases located in the same region as the source primary database do not have OCIDs.",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "peerDbId": {
          "type": "string",
          "description": "The database OCID of the Disaster Recovery peer database, which is located in a different region from the current peer database.",
          "minLength": 1,
          "maxLength": 255,
          "x-ms-mutability": [
            "update"
          ]
        },
        "isLocalDataGuardEnabled": {
          "type": "boolean",
          "description": "Indicates whether the Autonomous Database has local or called in-region Data Guard enabled.",
          "x-ms-mutability": [
            "read",
            "update",
            "create"
          ]
        },
        "isRemoteDataGuardEnabled": {
          "type": "boolean",
          "description": "Indicates whether the Autonomous Database has Cross Region Data Guard enabled.",
          "readOnly": true
        },
        "localDisasterRecoveryType": {
          "$ref": "#/definitions/DisasterRecoveryType",
          "description": "Indicates the local disaster recovery (DR) type of the Autonomous Database Serverless instance.Autonomous Data Guard (ADG) DR type provides business critical DR with a faster recovery time objective (RTO) during failover or switchover.Backup-based DR type provides lower cost DR with a slower RTO during failover or switchover.",
          "readOnly": true
        },
        "localStandbyDb": {
          "$ref": "#/definitions/AutonomousDatabaseStandbySummary",
          "description": "Local Autonomous Disaster Recovery standby database details.",
          "readOnly": true
        },
        "failedDataRecoveryInSeconds": {
          "type": "integer",
          "format": "int32",
          "description": "Indicates the number of seconds of data loss for a Data Guard failover.",
          "readOnly": true
        },
        "isMtlsConnectionRequired": {
          "type": "boolean",
          "description": "Specifies if the Autonomous Database requires mTLS connections.",
          "x-ms-mutability": [
            "read",
            "update",
            "create"
          ]
        },
        "isPreviewVersionWithServiceTermsAccepted": {
          "type": "boolean",
          "description": "Specifies if the Autonomous Database preview version is being provisioned.",
          "x-ms-mutability": [
            "create"
          ]
        },
        "licenseModel": {
          "$ref": "#/definitions/LicenseModel",
          "description": "The Oracle license model that applies to the Oracle Autonomous Database. The default is LICENSE_INCLUDED.",
          "x-ms-mutability": [
            "read",
            "update",
            "create"
          ]
        },
        "ncharacterSet": {
          "type": "string",
          "description": "The character set for the Autonomous Database.",
          "minLength": 1,
          "maxLength": 255,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "lifecycleDetails": {
          "type": "string",
          "description": "Additional information about the current lifecycle state.",
          "readOnly": true
        },
        "provisioningState": {
          "$ref": "#/definitions/AzureResourceProvisioningState",
          "description": "Azure resource provisioning state.",
          "readOnly": true
        },
        "lifecycleState": {
          "$ref": "#/definitions/AutonomousDatabaseLifecycleState",
          "description": "Views lifecycleState",
          "readOnly": true
        },
        "scheduledOperations": {
          "$ref": "#/definitions/ScheduledOperationsType",
          "description": "The list of scheduled operations.",
          "x-ms-mutability": [
            "read",
            "update",
            "create"
          ]
        },
        "privateEndpointIp": {
          "type": "string",
          "description": "The private endpoint Ip address for the resource.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "privateEndpointLabel": {
          "type": "string",
          "description": "The resource's private endpoint label.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "ociUrl": {
          "type": "string",
          "description": "HTTPS link to OCI resources exposed to Azure Customer via Azure Interface.",
          "readOnly": true
        },
        "subnetId": {
          "$ref": "#/definitions/SubnetId",
          "description": "Client subnet",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "vnetId": {
          "$ref": "#/definitions/VnetId",
          "description": "VNET for network connectivity",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "timeCreated": {
          "type": "string",
          "format": "date-time",
          "description": "The date and time that the database was created.",
          "readOnly": true
        },
        "timeMaintenanceBegin": {
          "type": "string",
          "format": "date-time",
          "description": "The date and time when maintenance will begin.",
          "readOnly": true
        },
        "timeMaintenanceEnd": {
          "type": "string",
          "format": "date-time",
          "description": "The date and time when maintenance will end.",
          "readOnly": true
        },
        "actualUsedDataStorageSizeInTbs": {
          "type": "number",
          "format": "double",
          "description": "The current amount of storage in use for user and system data, in terabytes (TB).",
          "readOnly": true
        },
        "allocatedStorageSizeInTbs": {
          "type": "number",
          "format": "double",
          "description": "The amount of storage currently allocated for the database tables and billed for, rounded up.",
          "readOnly": true
        },
        "apexDetails": {
          "$ref": "#/definitions/ApexDetailsType",
          "description": "Information about Oracle APEX Application Development.",
          "readOnly": true
        },
        "availableUpgradeVersions": {
          "type": "array",
          "description": "List of Oracle Database versions available for a database upgrade. If there are no version upgrades available, this list is empty.",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "connectionStrings": {
          "$ref": "#/definitions/ConnectionStringType",
          "description": "The connection string used to connect to the Autonomous Database.",
          "readOnly": true
        },
        "connectionUrls": {
          "$ref": "#/definitions/ConnectionUrlType",
          "description": "The URLs for accessing Oracle Application Express (APEX) and SQL Developer Web with a browser from a Compute instance within your VCN or that has a direct connection to your VCN. ",
          "readOnly": true
        },
        "dataSafeStatus": {
          "$ref": "#/definitions/DataSafeStatusType",
          "description": "Status of the Data Safe registration for this Autonomous Database.",
          "readOnly": true
        },
        "databaseEdition": {
          "$ref": "#/definitions/DatabaseEditionType",
          "description": "The Oracle Database Edition that applies to the Autonomous databases.",
          "x-ms-mutability": [
            "read",
            "update",
            "create"
          ]
        },
        "autonomousDatabaseId": {
          "$ref": "#/definitions/AutonomousDatabaseId",
          "description": "Autonomous Database ID",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "inMemoryAreaInGbs": {
          "type": "integer",
          "format": "int32",
          "description": "The area assigned to In-Memory tables in Autonomous Database.",
          "readOnly": true
        },
        "nextLongTermBackupTimeStamp": {
          "type": "string",
          "format": "date-time",
          "description": "The date and time when the next long-term backup would be created.",
          "readOnly": true
        },
        "longTermBackupSchedule": {
          "$ref": "#/definitions/LongTermBackUpScheduleDetails",
          "description": "Details for the long-term backup schedule.",
          "x-ms-mutability": [
            "read",
            "update"
          ]
        },
        "isPreview": {
          "type": "boolean",
          "description": "Indicates if the Autonomous Database version is a preview version.",
          "readOnly": true
        },
        "localAdgAutoFailoverMaxDataLossLimit": {
          "type": "integer",
          "format": "int32",
          "description": "Parameter that allows users to select an acceptable maximum data loss limit in seconds, up to which Automatic Failover will be triggered when necessary for a Local Autonomous Data Guard",
          "minimum": 0,
          "maximum": 3600,
          "x-ms-mutability": [
            "read",
            "update"
          ]
        },
        "memoryPerOracleComputeUnitInGbs": {
          "type": "integer",
          "format": "int32",
          "description": "The amount of memory (in GBs) enabled per ECPU or OCPU.",
          "readOnly": true
        },
        "openMode": {
          "$ref": "#/definitions/OpenModeType",
          "description": "Indicates the Autonomous Database mode.",
          "x-ms-mutability": [
            "read",
            "update"
          ]
        },
        "operationsInsightsStatus": {
          "$ref": "#/definitions/OperationsInsightsStatusType",
          "description": "Status of Operations Insights for this Autonomous Database.",
          "readOnly": true
        },
        "permissionLevel": {
          "$ref": "#/definitions/PermissionLevelType",
          "description": "The Autonomous Database permission level.",
          "x-ms-mutability": [
            "read",
            "update"
          ]
        },
        "privateEndpoint": {
          "type": "string",
          "description": "The private endpoint for the resource.",
          "readOnly": true
        },
        "provisionableCpus": {
          "type": "array",
          "description": "An array of CPU values that an Autonomous Database can be scaled to.",
          "items": {
            "type": "integer",
            "format": "int32"
          },
          "readOnly": true
        },
        "role": {
          "$ref": "#/definitions/RoleType",
          "description": "The Data Guard role of the Autonomous Container Database or Autonomous Database, if Autonomous Data Guard is enabled.",
          "x-ms-mutability": [
            "read",
            "update"
          ]
        },
        "serviceConsoleUrl": {
          "type": "string",
          "description": "The URL of the Service Console for the Autonomous Database.",
          "minLength": 10,
          "maxLength": 255,
          "readOnly": true
        },
        "sqlWebDeveloperUrl": {
          "type": "string",
          "description": "The SQL Web Developer URL for the Oracle Autonomous Database.",
          "minLength": 10,
          "maxLength": 2048,
          "readOnly": true
        },
        "supportedRegionsToCloneTo": {
          "type": "array",
          "description": "The list of regions that support the creation of an Autonomous Database clone or an Autonomous Data Guard standby database.",
          "maxItems": 50,
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "timeDataGuardRoleChanged": {
          "type": "string",
          "description": "The date and time the Autonomous Data Guard role was switched for the Autonomous Database.",
          "readOnly": true
        },
        "timeDeletionOfFreeAutonomousDatabase": {
          "type": "string",
          "description": "The date and time the Always Free database will be automatically deleted because of inactivity.",
          "readOnly": true
        },
        "timeLocalDataGuardEnabled": {
          "type": "string",
          "description": "The date and time that Autonomous Data Guard was enabled for an Autonomous Database where the standby was provisioned in the same region as the primary database.",
          "readOnly": true
        },
        "timeOfLastFailover": {
          "type": "string",
          "description": "The timestamp of the last failover operation.",
          "readOnly": true
        },
        "timeOfLastRefresh": {
          "type": "string",
          "description": "The date and time when last refresh happened.",
          "readOnly": true
        },
        "timeOfLastRefreshPoint": {
          "type": "string",
          "description": "The refresh point timestamp (UTC).",
          "readOnly": true
        },
        "timeOfLastSwitchover": {
          "type": "string",
          "description": "The timestamp of the last switchover operation for the Autonomous Database.",
          "readOnly": true
        },
        "timeReclamationOfFreeAutonomousDatabase": {
          "type": "string",
          "description": "The date and time the Always Free database will be stopped because of inactivity.",
          "readOnly": true
        },
        "usedDataStorageSizeInGbs": {
          "type": "integer",
          "format": "int32",
          "description": "The storage space consumed by Autonomous Database in GBs.",
          "readOnly": true
        },
        "usedDataStorageSizeInTbs": {
          "type": "integer",
          "format": "int32",
          "description": "The amount of storage that has been used, in terabytes.",
          "readOnly": true
        },
        "ocid": {
          "$ref": "#/definitions/Ocid",
          "description": "Database ocid",
          "readOnly": true
        },
        "backupRetentionPeriodInDays": {
          "type": "integer",
          "format": "int32",
          "description": "Retention period, in days, for long-term backups",
          "x-ms-mutability": [
            "read",
            "update",
            "create"
          ]
        },
        "whitelistedIps": {
          "type": "array",
          "description": "The client IP access control list (ACL). This is an array of CIDR notations and/or IP addresses. Values should be separate strings, separated by commas. Example: ['1.1.1.1','1.1.1.0/24','1.1.2.25']",
          "items": {
            "$ref": "#/definitions/aclString"
          },
          "x-ms-mutability": [
            "read",
            "update",
            "create"
          ]
        }
      },
      "discriminator": "dataBaseType",
      "required": [
        "dataBaseType"
      ]
    },
    "AutonomousDatabaseCharacterSet": {
      "type": "object",
      "description": "AutonomousDatabaseCharacterSets resource definition",
      "properties": {
        "properties": {
          "$ref": "#/definitions/AutonomousDatabaseCharacterSetProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "AutonomousDatabaseCharacterSetListResult": {
      "type": "object",
      "description": "The response of a AutonomousDatabaseCharacterSet list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The AutonomousDatabaseCharacterSet items on this page",
          "items": {
            "$ref": "#/definitions/AutonomousDatabaseCharacterSet"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "AutonomousDatabaseCharacterSetProperties": {
      "type": "object",
      "description": "AutonomousDatabaseCharacterSet resource model",
      "properties": {
        "characterSet": {
          "type": "string",
          "description": "The Oracle Autonomous Database supported character sets.",
          "minLength": 1,
          "maxLength": 255,
          "readOnly": true
        }
      }
    },
    "AutonomousDatabaseCloneProperties": {
      "type": "object",
      "description": "Autonomous Database clone resource model.",
      "properties": {
        "source": {
          "$ref": "#/definitions/SourceType",
          "description": "The source of the database.",
          "x-ms-mutability": [
            "create"
          ]
        },
        "sourceId": {
          "$ref": "#/definitions/AutonomousDatabaseId",
          "description": "The Azure ID of the Autonomous Database that was cloned to create the current Autonomous Database.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "cloneType": {
          "$ref": "#/definitions/CloneType",
          "description": "The Autonomous Database clone type.",
          "x-ms-mutability": [
            "create"
          ]
        },
        "isReconnectCloneEnabled": {
          "type": "boolean",
          "description": "Indicates if the refreshable clone can be reconnected to its source database.",
          "readOnly": true
        },
        "isRefreshableClone": {
          "type": "boolean",
          "description": "Indicates if the Autonomous Database is a refreshable clone.",
          "readOnly": true
        },
        "refreshableModel": {
          "$ref": "#/definitions/RefreshableModelType",
          "description": "The refresh mode of the clone.",
          "x-ms-mutability": [
            "create"
          ]
        },
        "refreshableStatus": {
          "$ref": "#/definitions/RefreshableStatusType",
          "description": "The refresh status of the clone.",
          "readOnly": true
        },
        "timeUntilReconnectCloneEnabled": {
          "type": "string",
          "description": "The time and date as an RFC3339 formatted string, e.g., 2022-01-01T12:00:00.000Z, to set the limit for a refreshable clone to be reconnected to its source database.",
          "x-ms-mutability": [
            "read",
            "update"
          ]
        }
      },
      "required": [
        "sourceId",
        "cloneType"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/AutonomousDatabaseBaseProperties"
        }
      ],
      "x-ms-discriminator-value": "Clone"
    },
    "AutonomousDatabaseId": {
      "type": "string",
      "format": "arm-id",
      "description": "A type definition that refers the id to an Azure Resource Manager resource.",
      "x-ms-arm-id-details": {
        "allowedResources": [
          {
            "type": "Oracle.Database/autonomousDatabases"
          }
        ]
      }
    },
    "AutonomousDatabaseLifecycleState": {
      "type": "string",
      "description": "Autonomous database lifecycle state enum",
      "enum": [
        "Provisioning",
        "Available",
        "Stopping",
        "Stopped",
        "Starting",
        "Terminating",
        "Terminated",
        "Unavailable",
        "RestoreInProgress",
        "RestoreFailed",
        "BackupInProgress",
        "ScaleInProgress",
        "AvailableNeedsAttention",
        "Updating",
        "MaintenanceInProgress",
        "Restarting",
        "Recreating",
        "RoleChangeInProgress",
        "Upgrading",
        "Inaccessible",
        "Standby"
      ],
      "x-ms-enum": {
        "name": "AutonomousDatabaseLifecycleState",
        "modelAsString": true,
        "values": [
          {
            "name": "Provisioning",
            "value": "Provisioning",
            "description": "Indicates that resource in Provisioning state"
          },
          {
            "name": "Available",
            "value": "Available",
            "description": "Indicates that resource in Available state"
          },
          {
            "name": "Stopping",
            "value": "Stopping",
            "description": "Indicates that resource in Stopping state"
          },
          {
            "name": "Stopped",
            "value": "Stopped",
            "description": "Indicates that resource in Stopped state"
          },
          {
            "name": "Starting",
            "value": "Starting",
            "description": "Indicates that resource in Starting state"
          },
          {
            "name": "Terminating",
            "value": "Terminating",
            "description": "Indicates that resource in Terminating state"
          },
          {
            "name": "Terminated",
            "value": "Terminated",
            "description": "Indicates that resource in Terminated state"
          },
          {
            "name": "Unavailable",
            "value": "Unavailable",
            "description": "Indicates that resource in Unavailable state"
          },
          {
            "name": "RestoreInProgress",
            "value": "RestoreInProgress",
            "description": "Indicates that resource in RestoreInProgress state"
          },
          {
            "name": "RestoreFailed",
            "value": "RestoreFailed",
            "description": "Indicates that resource in RestoreFailed state"
          },
          {
            "name": "BackupInProgress",
            "value": "BackupInProgress",
            "description": "Indicates that resource in BackupInProgress state"
          },
          {
            "name": "ScaleInProgress",
            "value": "ScaleInProgress",
            "description": "Indicates that resource in ScaleInProgress state"
          },
          {
            "name": "AvailableNeedsAttention",
            "value": "AvailableNeedsAttention",
            "description": "Indicates that resource is available but needs attention"
          },
          {
            "name": "Updating",
            "value": "Updating",
            "description": "Indicates that resource in Updating state"
          },
          {
            "name": "MaintenanceInProgress",
            "value": "MaintenanceInProgress",
            "description": "Indicates that resource maintenance in progress state"
          },
          {
            "name": "Restarting",
            "value": "Restarting",
            "description": "Indicates that resource in Restarting state"
          },
          {
            "name": "Recreating",
            "value": "Recreating",
            "description": "Indicates that resource in Recreating state"
          },
          {
            "name": "RoleChangeInProgress",
            "value": "RoleChangeInProgress",
            "description": "Indicates that resource role change in progress state"
          },
          {
            "name": "Upgrading",
            "value": "Upgrading",
            "description": "Indicates that resource in Upgrading state"
          },
          {
            "name": "Inaccessible",
            "value": "Inaccessible",
            "description": "IIndicates that resource in Inaccessible state"
          },
          {
            "name": "Standby",
            "value": "Standby",
            "description": "Indicates that resource in Standby state"
          }
        ]
      }
    },
    "AutonomousDatabaseListResult": {
      "type": "object",
      "description": "The response of a AutonomousDatabase list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The AutonomousDatabase items on this page",
          "items": {
            "$ref": "#/definitions/AutonomousDatabase"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "AutonomousDatabaseNationalCharacterSet": {
      "type": "object",
      "description": "AutonomousDatabaseNationalCharacterSets resource definition",
      "properties": {
        "properties": {
          "$ref": "#/definitions/AutonomousDatabaseNationalCharacterSetProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "AutonomousDatabaseNationalCharacterSetListResult": {
      "type": "object",
      "description": "The response of a AutonomousDatabaseNationalCharacterSet list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The AutonomousDatabaseNationalCharacterSet items on this page",
          "items": {
            "$ref": "#/definitions/AutonomousDatabaseNationalCharacterSet"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "AutonomousDatabaseNationalCharacterSetProperties": {
      "type": "object",
      "description": "AutonomousDatabaseNationalCharacterSet resource model",
      "properties": {
        "characterSet": {
          "type": "string",
          "description": "The Oracle Autonomous Database supported national character sets.",
          "minLength": 1,
          "maxLength": 255,
          "readOnly": true
        }
      }
    },
    "AutonomousDatabaseProperties": {
      "type": "object",
      "description": "Autonomous Database resource model.",
      "allOf": [
        {
          "$ref": "#/definitions/AutonomousDatabaseBaseProperties"
        }
      ],
      "x-ms-discriminator-value": "Regular"
    },
    "AutonomousDatabaseStandbySummary": {
      "type": "object",
      "description": "Autonomous Disaster Recovery standby database details.",
      "properties": {
        "lagTimeInSeconds": {
          "type": "integer",
          "format": "int32",
          "description": "The amount of time, in seconds, that the data of the standby database lags the data of the primary database. Can be used to determine the potential data loss in the event of a failover."
        },
        "lifecycleState": {
          "$ref": "#/definitions/AutonomousDatabaseLifecycleState",
          "description": "The current state of the Autonomous Database."
        },
        "lifecycleDetails": {
          "type": "string",
          "description": "Additional information about the current lifecycle state."
        },
        "timeDataGuardRoleChanged": {
          "type": "string",
          "description": "The date and time the Autonomous Data Guard role was switched for the standby Autonomous Database."
        },
        "timeDisasterRecoveryRoleChanged": {
          "type": "string",
          "description": "The date and time the Disaster Recovery role was switched for the standby Autonomous Database."
        }
      }
    },
    "AutonomousDatabaseUpdate": {
      "type": "object",
      "description": "The type used for update operations of the AutonomousDatabase.",
      "properties": {
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "$ref": "#/definitions/AutonomousDatabaseUpdateProperties",
          "x-ms-client-flatten": true
        }
      }
    },
    "AutonomousDatabaseUpdateProperties": {
      "type": "object",
      "description": "The updatable properties of the AutonomousDatabase.",
      "properties": {
        "adminPassword": {
          "$ref": "#/definitions/Password",
          "description": "Admin password.",
          "minLength": 12,
          "maxLength": 30,
          "x-ms-mutability": [
            "update",
            "create"
          ]
        },
        "autonomousMaintenanceScheduleType": {
          "$ref": "#/definitions/AutonomousMaintenanceScheduleType",
          "description": "The maintenance schedule type of the Autonomous Database Serverless.",
          "x-ms-mutability": [
            "read",
            "update",
            "create"
          ]
        },
        "computeCount": {
          "type": "number",
          "format": "float",
          "description": "The compute amount (CPUs) available to the database.",
          "minimum": 0.1,
          "maximum": 512,
          "x-ms-mutability": [
            "read",
            "update",
            "create"
          ]
        },
        "cpuCoreCount": {
          "type": "integer",
          "format": "int32",
          "description": "The number of CPU cores to be made available to the database.",
          "minimum": 1,
          "maximum": 128,
          "x-ms-mutability": [
            "read",
            "update",
            "create"
          ]
        },
        "customerContacts": {
          "type": "array",
          "description": "Customer Contacts.",
          "items": {
            "$ref": "#/definitions/CustomerContact"
          },
          "x-ms-identifiers": [],
          "x-ms-mutability": [
            "read",
            "update",
            "create"
          ]
        },
        "dataStorageSizeInTbs": {
          "type": "integer",
          "format": "int32",
          "description": "The quantity of data in the database, in terabytes.",
          "minimum": 1,
          "maximum": 384,
          "x-ms-mutability": [
            "read",
            "update",
            "create"
          ]
        },
        "dataStorageSizeInGbs": {
          "type": "integer",
          "format": "int32",
          "description": "The size, in gigabytes, of the data volume that will be created and attached to the database.",
          "minimum": 20,
          "maximum": 393216,
          "x-ms-mutability": [
            "read",
            "update",
            "create"
          ]
        },
        "displayName": {
          "type": "string",
          "description": "The user-friendly name for the Autonomous Database.",
          "minLength": 1,
          "maxLength": 255,
          "x-ms-mutability": [
            "read",
            "update",
            "create"
          ]
        },
        "isAutoScalingEnabled": {
          "type": "boolean",
          "description": "Indicates if auto scaling is enabled for the Autonomous Database CPU core count.",
          "x-ms-mutability": [
            "read",
            "update",
            "create"
          ]
        },
        "isAutoScalingForStorageEnabled": {
          "type": "boolean",
          "description": "Indicates if auto scaling is enabled for the Autonomous Database storage.",
          "x-ms-mutability": [
            "read",
            "update",
            "create"
          ]
        },
        "peerDbId": {
          "type": "string",
          "description": "The database OCID of the Disaster Recovery peer database, which is located in a different region from the current peer database.",
          "minLength": 1,
          "maxLength": 255,
          "x-ms-mutability": [
            "update"
          ]
        },
        "isLocalDataGuardEnabled": {
          "type": "boolean",
          "description": "Indicates whether the Autonomous Database has local or called in-region Data Guard enabled.",
          "x-ms-mutability": [
            "read",
            "update",
            "create"
          ]
        },
        "isMtlsConnectionRequired": {
          "type": "boolean",
          "description": "Specifies if the Autonomous Database requires mTLS connections.",
          "x-ms-mutability": [
            "read",
            "update",
            "create"
          ]
        },
        "licenseModel": {
          "$ref": "#/definitions/LicenseModel",
          "description": "The Oracle license model that applies to the Oracle Autonomous Database. The default is LICENSE_INCLUDED.",
          "x-ms-mutability": [
            "read",
            "update",
            "create"
          ]
        },
        "scheduledOperations": {
          "$ref": "#/definitions/ScheduledOperationsTypeUpdate",
          "description": "The list of scheduled operations.",
          "x-ms-mutability": [
            "read",
            "update",
            "create"
          ]
        },
        "databaseEdition": {
          "$ref": "#/definitions/DatabaseEditionType",
          "description": "The Oracle Database Edition that applies to the Autonomous databases.",
          "x-ms-mutability": [
            "read",
            "update",
            "create"
          ]
        },
        "longTermBackupSchedule": {
          "$ref": "#/definitions/LongTermBackUpScheduleDetails",
          "description": "Details for the long-term backup schedule.",
          "x-ms-mutability": [
            "read",
            "update"
          ]
        },
        "localAdgAutoFailoverMaxDataLossLimit": {
          "type": "integer",
          "format": "int32",
          "description": "Parameter that allows users to select an acceptable maximum data loss limit in seconds, up to which Automatic Failover will be triggered when necessary for a Local Autonomous Data Guard",
          "minimum": 0,
          "maximum": 3600,
          "x-ms-mutability": [
            "read",
            "update"
          ]
        },
        "openMode": {
          "$ref": "#/definitions/OpenModeType",
          "description": "Indicates the Autonomous Database mode.",
          "x-ms-mutability": [
            "read",
            "update"
          ]
        },
        "permissionLevel": {
          "$ref": "#/definitions/PermissionLevelType",
          "description": "The Autonomous Database permission level.",
          "x-ms-mutability": [
            "read",
            "update"
          ]
        },
        "role": {
          "$ref": "#/definitions/RoleType",
          "description": "The Data Guard role of the Autonomous Container Database or Autonomous Database, if Autonomous Data Guard is enabled.",
          "x-ms-mutability": [
            "read",
            "update"
          ]
        },
        "backupRetentionPeriodInDays": {
          "type": "integer",
          "format": "int32",
          "description": "Retention period, in days, for long-term backups",
          "x-ms-mutability": [
            "read",
            "update",
            "create"
          ]
        },
        "whitelistedIps": {
          "type": "array",
          "description": "The client IP access control list (ACL). This is an array of CIDR notations and/or IP addresses. Values should be separate strings, separated by commas. Example: ['1.1.1.1','1.1.1.0/24','1.1.2.25']",
          "items": {
            "$ref": "#/definitions/aclString"
          },
          "x-ms-mutability": [
            "read",
            "update",
            "create"
          ]
        }
      }
    },
    "AutonomousDatabaseWalletFile": {
      "type": "object",
      "description": "Autonomous Database Wallet File resource model.",
      "properties": {
        "walletFiles": {
          "type": "string",
          "description": "The base64 encoded wallet files"
        }
      },
      "required": [
        "walletFiles"
      ]
    },
    "AutonomousDbVersion": {
      "type": "object",
      "description": "AutonomousDbVersion resource definition",
      "properties": {
        "properties": {
          "$ref": "#/definitions/AutonomousDbVersionProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "AutonomousDbVersionListResult": {
      "type": "object",
      "description": "The response of a AutonomousDbVersion list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The AutonomousDbVersion items on this page",
          "items": {
            "$ref": "#/definitions/AutonomousDbVersion"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "AutonomousDbVersionProperties": {
      "type": "object",
      "description": "AutonomousDbVersion resource model",
      "properties": {
        "version": {
          "type": "string",
          "description": "Supported Autonomous Db versions.",
          "minLength": 1,
          "maxLength": 255,
          "readOnly": true
        },
        "dbWorkload": {
          "$ref": "#/definitions/WorkloadType",
          "description": "The Autonomous Database workload type",
          "readOnly": true
        },
        "isDefaultForFree": {
          "type": "boolean",
          "description": "True if this version of the Oracle Database software's default is free.",
          "readOnly": true
        },
        "isDefaultForPaid": {
          "type": "boolean",
          "description": "True if this version of the Oracle Database software's default is paid.",
          "readOnly": true
        },
        "isFreeTierEnabled": {
          "type": "boolean",
          "description": "True if this version of the Oracle Database software can be used for Always-Free Autonomous Databases.",
          "readOnly": true
        },
        "isPaidEnabled": {
          "type": "boolean",
          "description": "True if this version of the Oracle Database software has payments enabled.",
          "readOnly": true
        }
      }
    },
    "AutonomousMaintenanceScheduleType": {
      "type": "string",
      "description": "Autonomous database maintenance schedule type enum.",
      "enum": [
        "Early",
        "Regular"
      ],
      "x-ms-enum": {
        "name": "AutonomousMaintenanceScheduleType",
        "modelAsString": true,
        "values": [
          {
            "name": "Early",
            "value": "Early",
            "description": "Early maintenance schedule"
          },
          {
            "name": "Regular",
            "value": "Regular",
            "description": "Regular maintenance schedule"
          }
        ]
      }
    },
    "Azure.ResourceManager.ResourceProvisioningState": {
      "type": "string",
      "description": "The provisioning state of a resource type.",
      "enum": [
        "Succeeded",
        "Failed",
        "Canceled"
      ],
      "x-ms-enum": {
        "name": "ResourceProvisioningState",
        "modelAsString": true,
        "values": [
          {
            "name": "Succeeded",
            "value": "Succeeded",
            "description": "Resource has been created."
          },
          {
            "name": "Failed",
            "value": "Failed",
            "description": "Resource creation failed."
          },
          {
            "name": "Canceled",
            "value": "Canceled",
            "description": "Resource creation was canceled."
          }
        ]
      },
      "readOnly": true
    },
    "AzureResourceProvisioningState": {
      "type": "string",
      "description": "Azure Resource Provisioning State enum",
      "enum": [
        "Succeeded",
        "Failed",
        "Canceled",
        "Provisioning"
      ],
      "x-ms-enum": {
        "name": "AzureResourceProvisioningState",
        "modelAsString": true,
        "values": [
          {
            "name": "Succeeded",
            "value": "Succeeded",
            "description": "Resource has been created."
          },
          {
            "name": "Failed",
            "value": "Failed",
            "description": "Resource creation failed."
          },
          {
            "name": "Canceled",
            "value": "Canceled",
            "description": "Resource creation was canceled."
          },
          {
            "name": "Provisioning",
            "value": "Provisioning",
            "description": "Indicates that resource in Provisioning state"
          }
        ]
      },
      "readOnly": true
    },
    "CloneType": {
      "type": "string",
      "description": "Clone type enum",
      "enum": [
        "Full",
        "Metadata"
      ],
      "x-ms-enum": {
        "name": "CloneType",
        "modelAsString": true,
        "values": [
          {
            "name": "Full",
            "value": "Full",
            "description": "Full clone"
          },
          {
            "name": "Metadata",
            "value": "Metadata",
            "description": "Metadata only"
          }
        ]
      }
    },
    "CloudAccountDetails": {
      "type": "object",
      "description": "Cloud Account Details model",
      "properties": {
        "cloudAccountName": {
          "type": "string",
          "description": "Cloud Account name",
          "readOnly": true
        },
        "cloudAccountHomeRegion": {
          "type": "string",
          "description": "Cloud Account Home region",
          "readOnly": true
        }
      }
    },
    "CloudAccountProvisioningState": {
      "type": "string",
      "description": "CloudAccountProvisioningState enum",
      "enum": [
        "Pending",
        "Provisioning",
        "Available"
      ],
      "x-ms-enum": {
        "name": "CloudAccountProvisioningState",
        "modelAsString": true,
        "values": [
          {
            "name": "Pending",
            "value": "Pending",
            "description": "Pending - Initial state when Oracle cloud account is not configured"
          },
          {
            "name": "Provisioning",
            "value": "Provisioning",
            "description": "Provisioning - State when Oracle cloud account is being provisioned"
          },
          {
            "name": "Available",
            "value": "Available",
            "description": "Available - State when Oracle cloud account cloud linking is complete and it is available"
          }
        ]
      }
    },
    "CloudExadataInfrastructure": {
      "type": "object",
      "description": "CloudExadataInfrastructure resource definition",
      "properties": {
        "properties": {
          "$ref": "#/definitions/CloudExadataInfrastructureProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true
        },
        "zones": {
          "type": "array",
          "description": "CloudExadataInfrastructure zones",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "zones"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "CloudExadataInfrastructureId": {
      "type": "string",
      "format": "arm-id",
      "description": "A type definition that refers the id to an Azure Resource Manager resource.",
      "x-ms-arm-id-details": {
        "allowedResources": [
          {
            "type": "Oracle.Database/cloudExadataInfrastructures"
          }
        ]
      }
    },
    "CloudExadataInfrastructureLifecycleState": {
      "type": "string",
      "description": "CloudExadataInfrastructureLifecycleState enum",
      "enum": [
        "Provisioning",
        "Available",
        "Updating",
        "Terminating",
        "Terminated",
        "MaintenanceInProgress",
        "Failed"
      ],
      "x-ms-enum": {
        "name": "CloudExadataInfrastructureLifecycleState",
        "modelAsString": true,
        "values": [
          {
            "name": "Provisioning",
            "value": "Provisioning",
            "description": "Indicates that resource in Provisioning state"
          },
          {
            "name": "Available",
            "value": "Available",
            "description": "Indicates that resource in Available state"
          },
          {
            "name": "Updating",
            "value": "Updating",
            "description": "Indicates that resource in Updating state"
          },
          {
            "name": "Terminating",
            "value": "Terminating",
            "description": "Indicates that resource in Terminating state"
          },
          {
            "name": "Terminated",
            "value": "Terminated",
            "description": "Indicates that resource in Terminated state"
          },
          {
            "name": "MaintenanceInProgress",
            "value": "MaintenanceInProgress",
            "description": "Indicates that resource maintenance in progress state"
          },
          {
            "name": "Failed",
            "value": "Failed",
            "description": "Indicates that resource in Failed state"
          }
        ]
      }
    },
    "CloudExadataInfrastructureListResult": {
      "type": "object",
      "description": "The response of a CloudExadataInfrastructure list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The CloudExadataInfrastructure items on this page",
          "items": {
            "$ref": "#/definitions/CloudExadataInfrastructure"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "CloudExadataInfrastructureProperties": {
      "type": "object",
      "description": "CloudExadataInfrastructure resource model",
      "properties": {
        "ocid": {
          "$ref": "#/definitions/Ocid",
          "description": "Exadata infra ocid",
          "readOnly": true
        },
        "computeCount": {
          "type": "integer",
          "format": "int32",
          "description": "The number of compute servers for the cloud Exadata infrastructure.",
          "x-ms-mutability": [
            "read",
            "update",
            "create"
          ]
        },
        "storageCount": {
          "type": "integer",
          "format": "int32",
          "description": "The number of storage servers for the cloud Exadata infrastructure.",
          "x-ms-mutability": [
            "read",
            "update",
            "create"
          ]
        },
        "totalStorageSizeInGbs": {
          "type": "integer",
          "format": "int32",
          "description": "The total storage allocated to the cloud Exadata infrastructure resource, in gigabytes (GB).",
          "readOnly": true
        },
        "availableStorageSizeInGbs": {
          "type": "integer",
          "format": "int32",
          "description": "The available storage can be allocated to the cloud Exadata infrastructure resource, in gigabytes (GB).",
          "readOnly": true
        },
        "timeCreated": {
          "type": "string",
          "description": "The date and time the cloud Exadata infrastructure resource was created.",
          "readOnly": true
        },
        "lifecycleDetails": {
          "type": "string",
          "description": "Additional information about the current lifecycle state.",
          "readOnly": true
        },
        "maintenanceWindow": {
          "$ref": "#/definitions/MaintenanceWindow",
          "description": "maintenanceWindow property",
          "x-ms-mutability": [
            "read",
            "update",
            "create"
          ]
        },
        "estimatedPatchingTime": {
          "$ref": "#/definitions/EstimatedPatchingTime",
          "description": "The estimated total time required in minutes for all patching operations (database server, storage server, and network switch patching).",
          "readOnly": true
        },
        "customerContacts": {
          "type": "array",
          "description": "The list of customer email addresses that receive information from Oracle about the specified OCI Database service resource. Oracle uses these email addresses to send notifications about planned and unplanned software maintenance updates, information about system hardware, and other information needed by administrators. Up to 10 email addresses can be added to the customer contacts for a cloud Exadata infrastructure instance. ",
          "items": {
            "$ref": "#/definitions/CustomerContact"
          },
          "x-ms-identifiers": [],
          "x-ms-mutability": [
            "read",
            "update",
            "create"
          ]
        },
        "provisioningState": {
          "$ref": "#/definitions/AzureResourceProvisioningState",
          "description": "CloudExadataInfrastructure provisioning state",
          "readOnly": true
        },
        "lifecycleState": {
          "$ref": "#/definitions/CloudExadataInfrastructureLifecycleState",
          "description": "CloudExadataInfrastructure lifecycle state",
          "readOnly": true
        },
        "shape": {
          "type": "string",
          "description": "The model name of the cloud Exadata infrastructure resource.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "ociUrl": {
          "type": "string",
          "format": "uri",
          "description": "HTTPS link to OCI resources exposed to Azure Customer via Azure Interface.",
          "readOnly": true
        },
        "cpuCount": {
          "type": "integer",
          "format": "int32",
          "description": "The total number of CPU cores allocated.",
          "readOnly": true
        },
        "maxCpuCount": {
          "type": "integer",
          "format": "int32",
          "description": "The total number of CPU cores available.",
          "readOnly": true
        },
        "memorySizeInGbs": {
          "type": "integer",
          "format": "int32",
          "description": "The memory allocated in GBs.",
          "readOnly": true
        },
        "maxMemoryInGbs": {
          "type": "integer",
          "format": "int32",
          "description": "The total memory available in GBs.",
          "readOnly": true
        },
        "dbNodeStorageSizeInGbs": {
          "type": "integer",
          "format": "int32",
          "description": "The local node storage to be allocated in GBs.",
          "readOnly": true
        },
        "maxDbNodeStorageSizeInGbs": {
          "type": "integer",
          "format": "int32",
          "description": "The total local node storage available in GBs.",
          "readOnly": true
        },
        "dataStorageSizeInTbs": {
          "type": "number",
          "format": "double",
          "description": "The quantity of data in the database, in terabytes.",
          "readOnly": true
        },
        "maxDataStorageInTbs": {
          "type": "number",
          "format": "double",
          "description": "The total available DATA disk group size.",
          "readOnly": true
        },
        "dbServerVersion": {
          "type": "string",
          "description": "The software version of the database servers (dom0) in the Exadata infrastructure.",
          "readOnly": true
        },
        "storageServerVersion": {
          "type": "string",
          "description": "The software version of the storage servers (cells) in the Exadata infrastructure.",
          "readOnly": true
        },
        "activatedStorageCount": {
          "type": "integer",
          "format": "int32",
          "description": "The requested number of additional storage servers activated for the Exadata infrastructure.",
          "readOnly": true
        },
        "additionalStorageCount": {
          "type": "integer",
          "format": "int32",
          "description": "The requested number of additional storage servers for the Exadata infrastructure.",
          "readOnly": true
        },
        "displayName": {
          "type": "string",
          "description": "The name for the Exadata infrastructure.",
          "minLength": 1,
          "maxLength": 255,
          "x-ms-mutability": [
            "read",
            "update",
            "create"
          ]
        },
        "lastMaintenanceRunId": {
          "$ref": "#/definitions/Ocid",
          "description": "The OCID of the last maintenance run.",
          "readOnly": true
        },
        "nextMaintenanceRunId": {
          "$ref": "#/definitions/Ocid",
          "description": "The OCID of the next maintenance run.",
          "readOnly": true
        },
        "monthlyDbServerVersion": {
          "type": "string",
          "description": "Monthly Db Server version",
          "readOnly": true
        },
        "monthlyStorageServerVersion": {
          "type": "string",
          "description": "Monthly Storage Server version",
          "readOnly": true
        }
      },
      "required": [
        "shape",
        "displayName"
      ]
    },
    "CloudExadataInfrastructureUpdate": {
      "type": "object",
      "description": "The type used for update operations of the CloudExadataInfrastructure.",
      "properties": {
        "zones": {
          "type": "array",
          "description": "CloudExadataInfrastructure zones",
          "items": {
            "type": "string"
          }
        },
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "$ref": "#/definitions/CloudExadataInfrastructureUpdateProperties",
          "x-ms-client-flatten": true
        }
      }
    },
    "CloudExadataInfrastructureUpdateProperties": {
      "type": "object",
      "description": "The updatable properties of the CloudExadataInfrastructure.",
      "properties": {
        "computeCount": {
          "type": "integer",
          "format": "int32",
          "description": "The number of compute servers for the cloud Exadata infrastructure.",
          "x-ms-mutability": [
            "read",
            "update",
            "create"
          ]
        },
        "storageCount": {
          "type": "integer",
          "format": "int32",
          "description": "The number of storage servers for the cloud Exadata infrastructure.",
          "x-ms-mutability": [
            "read",
            "update",
            "create"
          ]
        },
        "maintenanceWindow": {
          "$ref": "#/definitions/MaintenanceWindow",
          "description": "maintenanceWindow property",
          "x-ms-mutability": [
            "read",
            "update",
            "create"
          ]
        },
        "customerContacts": {
          "type": "array",
          "description": "The list of customer email addresses that receive information from Oracle about the specified OCI Database service resource. Oracle uses these email addresses to send notifications about planned and unplanned software maintenance updates, information about system hardware, and other information needed by administrators. Up to 10 email addresses can be added to the customer contacts for a cloud Exadata infrastructure instance. ",
          "items": {
            "$ref": "#/definitions/CustomerContact"
          },
          "x-ms-identifiers": [],
          "x-ms-mutability": [
            "read",
            "update",
            "create"
          ]
        },
        "displayName": {
          "type": "string",
          "description": "The name for the Exadata infrastructure.",
          "minLength": 1,
          "maxLength": 255,
          "x-ms-mutability": [
            "read",
            "update",
            "create"
          ]
        }
      }
    },
    "CloudVmCluster": {
      "type": "object",
      "description": "CloudVmCluster resource definition",
      "properties": {
        "properties": {
          "$ref": "#/definitions/CloudVmClusterProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "CloudVmClusterLifecycleState": {
      "type": "string",
      "description": "Cloud VM Cluster lifecycle state enum",
      "enum": [
        "Provisioning",
        "Available",
        "Updating",
        "Terminating",
        "Terminated",
        "MaintenanceInProgress",
        "Failed"
      ],
      "x-ms-enum": {
        "name": "CloudVmClusterLifecycleState",
        "modelAsString": true,
        "values": [
          {
            "name": "Provisioning",
            "value": "Provisioning",
            "description": "Indicates that resource in Provisioning state"
          },
          {
            "name": "Available",
            "value": "Available",
            "description": "Indicates that resource in Available state"
          },
          {
            "name": "Updating",
            "value": "Updating",
            "description": "Indicates that resource in Updating state"
          },
          {
            "name": "Terminating",
            "value": "Terminating",
            "description": "Indicates that resource in Terminating state"
          },
          {
            "name": "Terminated",
            "value": "Terminated",
            "description": "Indicates that resource in Terminated state"
          },
          {
            "name": "MaintenanceInProgress",
            "value": "MaintenanceInProgress",
            "description": "Indicates that resource Maintenance in progress state"
          },
          {
            "name": "Failed",
            "value": "Failed",
            "description": "Indicates that resource in Failed state"
          }
        ]
      }
    },
    "CloudVmClusterListResult": {
      "type": "object",
      "description": "The response of a CloudVmCluster list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The CloudVmCluster items on this page",
          "items": {
            "$ref": "#/definitions/CloudVmCluster"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "CloudVmClusterProperties": {
      "type": "object",
      "description": "CloudVmCluster resource model",
      "properties": {
        "ocid": {
          "$ref": "#/definitions/Ocid",
          "description": "Cloud VM Cluster ocid",
          "readOnly": true
        },
        "listenerPort": {
          "type": "integer",
          "format": "int64",
          "description": "The port number configured for the listener on the cloud VM cluster.",
          "readOnly": true
        },
        "nodeCount": {
          "type": "integer",
          "format": "int32",
          "description": "The number of nodes in the cloud VM cluster. ",
          "readOnly": true
        },
        "storageSizeInGbs": {
          "type": "integer",
          "format": "int32",
          "description": "The data disk group size to be allocated in GBs per VM.",
          "x-ms-mutability": [
            "read",
            "update"
          ]
        },
        "dataStorageSizeInTbs": {
          "type": "number",
          "format": "double",
          "description": "The data disk group size to be allocated in TBs."
        },
        "dbNodeStorageSizeInGbs": {
          "type": "integer",
          "format": "int32",
          "description": "The local node storage to be allocated in GBs."
        },
        "memorySizeInGbs": {
          "type": "integer",
          "format": "int32",
          "description": "The memory to be allocated in GBs."
        },
        "timeCreated": {
          "type": "string",
          "format": "date-time",
          "description": "The date and time that the cloud VM cluster was created.",
          "readOnly": true
        },
        "lifecycleDetails": {
          "type": "string",
          "description": "Additional information about the current lifecycle state.",
          "readOnly": true
        },
        "timeZone": {
          "type": "string",
          "description": "The time zone of the cloud VM cluster. For details, see [Exadata Infrastructure Time Zones](/Content/Database/References/timezones.htm).",
          "minLength": 1,
          "maxLength": 255,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "zoneId": {
          "$ref": "#/definitions/Ocid",
          "description": "The OCID of the zone the cloud VM cluster is associated with.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "hostname": {
          "type": "string",
          "description": "The hostname for the cloud VM cluster.",
          "minLength": 1,
          "maxLength": 23,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "domain": {
          "type": "string",
          "description": "The domain name for the cloud VM cluster.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "cpuCoreCount": {
          "type": "integer",
          "format": "int32",
          "description": "The number of CPU cores enabled on the cloud VM cluster."
        },
        "ocpuCount": {
          "type": "number",
          "format": "float",
          "description": "The number of OCPU cores to enable on the cloud VM cluster. Only 1 decimal place is allowed for the fractional part."
        },
        "clusterName": {
          "type": "string",
          "description": "The cluster name for cloud VM cluster. The cluster name must begin with an alphabetic character, and may contain hyphens (-). Underscores (_) are not permitted. The cluster name can be no longer than 11 characters and is not case sensitive. ",
          "minLength": 1,
          "maxLength": 11,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "dataStoragePercentage": {
          "type": "integer",
          "format": "int32",
          "description": "The percentage assigned to DATA storage (user data and database files). The remaining percentage is assigned to RECO storage (database redo logs, archive logs, and recovery manager backups). Accepted values are 35, 40, 60 and 80. The default is 80 percent assigned to DATA storage. See [Storage Configuration](/Content/Database/Concepts/exaoverview.htm#Exadata) in the Exadata documentation for details on the impact of the configuration settings on storage. ",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "isLocalBackupEnabled": {
          "type": "boolean",
          "description": "If true, database backup on local Exadata storage is configured for the cloud VM cluster. If false, database backup on local Exadata storage is not available in the cloud VM cluster. ",
          "default": false,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "cloudExadataInfrastructureId": {
          "$ref": "#/definitions/CloudExadataInfrastructureId",
          "description": "Cloud Exadata Infrastructure ID",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "isSparseDiskgroupEnabled": {
          "type": "boolean",
          "description": "If true, sparse disk group is configured for the cloud VM cluster. If false, sparse disk group is not created. ",
          "default": false,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "systemVersion": {
          "type": "string",
          "description": "Operating system version of the image.",
          "minLength": 1,
          "maxLength": 255,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "sshPublicKeys": {
          "type": "array",
          "description": "The public key portion of one or more key pairs used for SSH access to the cloud VM cluster.",
          "items": {
            "type": "string"
          }
        },
        "licenseModel": {
          "$ref": "#/definitions/LicenseModel",
          "description": "The Oracle license model that applies to the cloud VM cluster. The default is LICENSE_INCLUDED. "
        },
        "diskRedundancy": {
          "$ref": "#/definitions/DiskRedundancy",
          "description": "The type of redundancy configured for the cloud Vm cluster. NORMAL is 2-way redundancy. HIGH is 3-way redundancy. ",
          "readOnly": true
        },
        "scanIpIds": {
          "type": "array",
          "description": "The Single Client Access Name (SCAN) IP addresses associated with the cloud VM cluster. SCAN IP addresses are typically used for load balancing and are not assigned to any interface. Oracle Clusterware directs the requests to the appropriate nodes in the cluster. **Note:** For a single-node DB system, this list is empty.",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "vipIds": {
          "type": "array",
          "description": "The virtual IP (VIP) addresses associated with the cloud VM cluster. The Cluster Ready Services (CRS) creates and maintains one VIP address for each node in the Exadata Cloud Service instance to enable failover. If one node fails, the VIP is reassigned to another active node in the cluster. **Note:** For a single-node DB system, this list is empty.",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "scanDnsName": {
          "type": "string",
          "description": "The FQDN of the DNS record for the SCAN IP addresses that are associated with the cloud VM cluster. ",
          "minLength": 1,
          "maxLength": 72,
          "readOnly": true
        },
        "scanListenerPortTcp": {
          "type": "integer",
          "format": "int32",
          "description": "The TCP Single Client Access Name (SCAN) port. The default port is 1521.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "scanListenerPortTcpSsl": {
          "type": "integer",
          "format": "int32",
          "description": "The TCPS Single Client Access Name (SCAN) port. The default port is 2484.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "scanDnsRecordId": {
          "$ref": "#/definitions/Ocid",
          "description": "The OCID of the DNS record for the SCAN IP addresses that are associated with the cloud VM cluster.",
          "readOnly": true
        },
        "shape": {
          "type": "string",
          "description": "The model name of the Exadata hardware running the cloud VM cluster.",
          "minLength": 1,
          "maxLength": 255,
          "readOnly": true
        },
        "provisioningState": {
          "$ref": "#/definitions/AzureResourceProvisioningState",
          "description": "CloudVmCluster provisioning state",
          "readOnly": true
        },
        "lifecycleState": {
          "$ref": "#/definitions/CloudVmClusterLifecycleState",
          "description": "CloudVmCluster lifecycle state",
          "readOnly": true
        },
        "vnetId": {
          "$ref": "#/definitions/VnetId",
          "description": "VNET for network connectivity",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "giVersion": {
          "type": "string",
          "description": "Oracle Grid Infrastructure (GI) software version",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "ociUrl": {
          "type": "string",
          "format": "uri",
          "description": "HTTPS link to OCI resources exposed to Azure Customer via Azure Interface.",
          "readOnly": true
        },
        "nsgUrl": {
          "type": "string",
          "format": "uri",
          "description": "HTTPS link to OCI Network Security Group exposed to Azure Customer via the Azure Interface.",
          "readOnly": true
        },
        "subnetId": {
          "$ref": "#/definitions/SubnetId",
          "description": "Client subnet",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "backupSubnetCidr": {
          "type": "string",
          "description": "Client OCI backup subnet CIDR, default is 192.168.252.0/22",
          "minLength": 1,
          "maxLength": 32,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "nsgCidrs": {
          "type": "array",
          "description": "CIDR blocks for additional NSG ingress rules. The VNET CIDRs used to provision the VM Cluster will be added by default.",
          "items": {
            "$ref": "#/definitions/NsgCidr"
          },
          "x-ms-identifiers": [],
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "dataCollectionOptions": {
          "$ref": "#/definitions/DataCollectionOptions",
          "description": "Indicates user preferences for the various diagnostic collection options for the VM cluster/Cloud VM cluster/VMBM DBCS."
        },
        "displayName": {
          "type": "string",
          "description": "Display Name",
          "minLength": 1,
          "maxLength": 255
        },
        "computeNodes": {
          "type": "array",
          "description": "The list of compute servers to be added to the cloud VM cluster.",
          "items": {
            "$ref": "#/definitions/Ocid"
          },
          "x-ms-mutability": [
            "update"
          ]
        },
        "iormConfigCache": {
          "$ref": "#/definitions/ExadataIormConfig",
          "description": "iormConfigCache details for cloud VM cluster.",
          "readOnly": true
        },
        "lastUpdateHistoryEntryId": {
          "$ref": "#/definitions/Ocid",
          "description": "The OCID of the last maintenance update history entry.",
          "readOnly": true
        },
        "dbServers": {
          "type": "array",
          "description": "The list of DB servers.",
          "items": {
            "$ref": "#/definitions/Ocid"
          },
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "compartmentId": {
          "$ref": "#/definitions/Ocid",
          "description": "Cluster compartmentId",
          "readOnly": true
        },
        "subnetOcid": {
          "$ref": "#/definitions/Ocid",
          "description": "Cluster subnet ocid",
          "readOnly": true
        }
      },
      "required": [
        "hostname",
        "cpuCoreCount",
        "cloudExadataInfrastructureId",
        "sshPublicKeys",
        "vnetId",
        "giVersion",
        "subnetId",
        "displayName"
      ]
    },
    "CloudVmClusterUpdate": {
      "type": "object",
      "description": "The type used for update operations of the CloudVmCluster.",
      "properties": {
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "$ref": "#/definitions/CloudVmClusterUpdateProperties",
          "x-ms-client-flatten": true
        }
      }
    },
    "CloudVmClusterUpdateProperties": {
      "type": "object",
      "description": "The updatable properties of the CloudVmCluster.",
      "properties": {
        "storageSizeInGbs": {
          "type": "integer",
          "format": "int32",
          "description": "The data disk group size to be allocated in GBs per VM.",
          "x-ms-mutability": [
            "read",
            "update"
          ]
        },
        "dataStorageSizeInTbs": {
          "type": "number",
          "format": "double",
          "description": "The data disk group size to be allocated in TBs."
        },
        "dbNodeStorageSizeInGbs": {
          "type": "integer",
          "format": "int32",
          "description": "The local node storage to be allocated in GBs."
        },
        "memorySizeInGbs": {
          "type": "integer",
          "format": "int32",
          "description": "The memory to be allocated in GBs."
        },
        "cpuCoreCount": {
          "type": "integer",
          "format": "int32",
          "description": "The number of CPU cores enabled on the cloud VM cluster."
        },
        "ocpuCount": {
          "type": "number",
          "format": "float",
          "description": "The number of OCPU cores to enable on the cloud VM cluster. Only 1 decimal place is allowed for the fractional part."
        },
        "sshPublicKeys": {
          "type": "array",
          "description": "The public key portion of one or more key pairs used for SSH access to the cloud VM cluster.",
          "items": {
            "type": "string"
          }
        },
        "licenseModel": {
          "$ref": "#/definitions/LicenseModel",
          "description": "The Oracle license model that applies to the cloud VM cluster. The default is LICENSE_INCLUDED. "
        },
        "dataCollectionOptions": {
          "$ref": "#/definitions/DataCollectionOptions",
          "description": "Indicates user preferences for the various diagnostic collection options for the VM cluster/Cloud VM cluster/VMBM DBCS."
        },
        "displayName": {
          "type": "string",
          "description": "Display Name",
          "minLength": 1,
          "maxLength": 255
        },
        "computeNodes": {
          "type": "array",
          "description": "The list of compute servers to be added to the cloud VM cluster.",
          "items": {
            "$ref": "#/definitions/Ocid"
          },
          "x-ms-mutability": [
            "update"
          ]
        }
      }
    },
    "ComputeModel": {
      "type": "string",
      "description": "Compute model enum",
      "enum": [
        "ECPU",
        "OCPU"
      ],
      "x-ms-enum": {
        "name": "ComputeModel",
        "modelAsString": true,
        "values": [
          {
            "name": "ECPU",
            "value": "ECPU",
            "description": "ECPU model type"
          },
          {
            "name": "OCPU",
            "value": "OCPU",
            "description": "OCPU model type"
          }
        ]
      }
    },
    "ConnectionStringType": {
      "type": "object",
      "description": "Connection strings to connect to an Oracle Autonomous Database.",
      "properties": {
        "allConnectionStrings": {
          "$ref": "#/definitions/AllConnectionStringType",
          "description": "Returns all connection strings that can be used to connect to the Autonomous Database."
        },
        "dedicated": {
          "type": "string",
          "description": "The database service provides the least level of resources to each SQL statement, but supports the most number of concurrent SQL statements.",
          "minLength": 10,
          "maxLength": 255
        },
        "high": {
          "type": "string",
          "description": "The High database service provides the highest level of resources to each SQL statement resulting in the highest performance, but supports the fewest number of concurrent SQL statements.",
          "minLength": 10,
          "maxLength": 255
        },
        "low": {
          "type": "string",
          "description": "The Low database service provides the least level of resources to each SQL statement, but supports the most number of concurrent SQL statements.",
          "minLength": 10,
          "maxLength": 255
        },
        "medium": {
          "type": "string",
          "description": "The Medium database service provides a lower level of resources to each SQL statement potentially resulting a lower level of performance, but supports more concurrent SQL statements.",
          "minLength": 10,
          "maxLength": 255
        },
        "profiles": {
          "type": "array",
          "description": "A list of connection string profiles to allow clients to group, filter and select connection string values based on structured metadata.",
          "items": {
            "$ref": "#/definitions/ProfileType"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "ConnectionUrlType": {
      "type": "object",
      "description": "The URLs for accessing Oracle Application Express (APEX) and SQL Developer Web with a browser from a Compute instance within your VCN or that has a direct connection to your VCN.",
      "properties": {
        "apexUrl": {
          "type": "string",
          "description": "Oracle Application Express (APEX) URL.",
          "minLength": 10,
          "maxLength": 512
        },
        "databaseTransformsUrl": {
          "type": "string",
          "description": "The URL of the Database Transforms for the Autonomous Database.",
          "minLength": 10,
          "maxLength": 512
        },
        "graphStudioUrl": {
          "type": "string",
          "description": "The URL of the Graph Studio for the Autonomous Database.",
          "minLength": 10,
          "maxLength": 512
        },
        "machineLearningNotebookUrl": {
          "type": "string",
          "description": "The URL of the Oracle Machine Learning (OML) Notebook for the Autonomous Database.",
          "minLength": 10,
          "maxLength": 512
        },
        "mongoDbUrl": {
          "type": "string",
          "description": "The URL of the MongoDB API for the Autonomous Database.",
          "minLength": 10,
          "maxLength": 512
        },
        "ordsUrl": {
          "type": "string",
          "description": "The Oracle REST Data Services (ORDS) URL of the Web Access for the Autonomous Database.",
          "minLength": 10,
          "maxLength": 512
        },
        "sqlDevWebUrl": {
          "type": "string",
          "description": "Oracle SQL Developer Web URL.",
          "minLength": 10,
          "maxLength": 512
        }
      }
    },
    "ConsumerGroup": {
      "type": "string",
      "description": "Consumer group enum.",
      "enum": [
        "High",
        "Medium",
        "Low",
        "Tp",
        "Tpurgent"
      ],
      "x-ms-enum": {
        "name": "ConsumerGroup",
        "modelAsString": true,
        "values": [
          {
            "name": "High",
            "value": "High",
            "description": "High group"
          },
          {
            "name": "Medium",
            "value": "Medium",
            "description": "Medium group"
          },
          {
            "name": "Low",
            "value": "Low",
            "description": "Low group"
          },
          {
            "name": "Tp",
            "value": "Tp",
            "description": "TP group"
          },
          {
            "name": "Tpurgent",
            "value": "Tpurgent",
            "description": "TPurgent group"
          }
        ]
      }
    },
    "CustomerContact": {
      "type": "object",
      "description": "CustomerContact resource properties",
      "properties": {
        "email": {
          "type": "string",
          "description": "The email address used by Oracle to send notifications regarding databases and infrastructure.",
          "minLength": 1,
          "maxLength": 320
        }
      },
      "required": [
        "email"
      ]
    },
    "DataBaseType": {
      "type": "string",
      "description": "Database type enum",
      "enum": [
        "Regular",
        "Clone"
      ],
      "x-ms-enum": {
        "name": "DataBaseType",
        "modelAsString": true,
        "values": [
          {
            "name": "Regular",
            "value": "Regular",
            "description": "Regular DB"
          },
          {
            "name": "Clone",
            "value": "Clone",
            "description": "Clone DB"
          }
        ]
      }
    },
    "DataCollectionOptions": {
      "type": "object",
      "description": "DataCollectionOptions resource properties",
      "properties": {
        "isDiagnosticsEventsEnabled": {
          "type": "boolean",
          "description": "Indicates whether diagnostic collection is enabled for the VM cluster/Cloud VM cluster/VMBM DBCS.",
          "default": false
        },
        "isHealthMonitoringEnabled": {
          "type": "boolean",
          "description": "Indicates whether health monitoring is enabled for the VM cluster / Cloud VM cluster / VMBM DBCS.",
          "default": false
        },
        "isIncidentLogsEnabled": {
          "type": "boolean",
          "description": "Indicates whether incident logs and trace collection are enabled for the VM cluster / Cloud VM cluster / VMBM DBCS.",
          "default": false
        }
      }
    },
    "DataSafeStatusType": {
      "type": "string",
      "description": "DataSafe status type enum.",
      "enum": [
        "Registering",
        "Registered",
        "Deregistering",
        "NotRegistered",
        "Failed"
      ],
      "x-ms-enum": {
        "name": "DataSafeStatusType",
        "modelAsString": true,
        "values": [
          {
            "name": "Registering",
            "value": "Registering",
            "description": "Registering status"
          },
          {
            "name": "Registered",
            "value": "Registered",
            "description": "Registered status"
          },
          {
            "name": "Deregistering",
            "value": "Deregistering",
            "description": "Deregistering status"
          },
          {
            "name": "NotRegistered",
            "value": "NotRegistered",
            "description": "NotRegistered status"
          },
          {
            "name": "Failed",
            "value": "Failed",
            "description": "Failed status"
          }
        ]
      }
    },
    "DatabaseEditionType": {
      "type": "string",
      "description": "Database edition type enum.",
      "enum": [
        "StandardEdition",
        "EnterpriseEdition"
      ],
      "x-ms-enum": {
        "name": "DatabaseEditionType",
        "modelAsString": true,
        "values": [
          {
            "name": "StandardEdition",
            "value": "StandardEdition",
            "description": "Standard edition"
          },
          {
            "name": "EnterpriseEdition",
            "value": "EnterpriseEdition",
            "description": "Enterprise edition"
          }
        ]
      }
    },
    "DayOfWeek": {
      "type": "object",
      "description": "DayOfWeek resource properties",
      "properties": {
        "name": {
          "$ref": "#/definitions/DayOfWeekName",
          "description": "Name of the day of the week."
        }
      },
      "required": [
        "name"
      ]
    },
    "DayOfWeekName": {
      "type": "string",
      "description": "DayOfWeekName enum",
      "enum": [
        "Monday",
        "Tuesday",
        "Wednesday",
        "Thursday",
        "Friday",
        "Saturday",
        "Sunday"
      ],
      "x-ms-enum": {
        "name": "DayOfWeekName",
        "modelAsString": true,
        "values": [
          {
            "name": "Monday",
            "value": "Monday",
            "description": "Monday value"
          },
          {
            "name": "Tuesday",
            "value": "Tuesday",
            "description": "Tuesday value"
          },
          {
            "name": "Wednesday",
            "value": "Wednesday",
            "description": "Wednesday value"
          },
          {
            "name": "Thursday",
            "value": "Thursday",
            "description": "Thursday value"
          },
          {
            "name": "Friday",
            "value": "Friday",
            "description": "Friday value"
          },
          {
            "name": "Saturday",
            "value": "Saturday",
            "description": "Saturday value"
          },
          {
            "name": "Sunday",
            "value": "Sunday",
            "description": "Sunday value"
          }
        ]
      }
    },
    "DayOfWeekUpdate": {
      "type": "object",
      "description": "DayOfWeek resource properties",
      "properties": {
        "name": {
          "$ref": "#/definitions/DayOfWeekName",
          "description": "Name of the day of the week."
        }
      }
    },
    "DbIormConfig": {
      "type": "object",
      "description": "DbIormConfig for cloud vm cluster",
      "properties": {
        "dbName": {
          "type": "string",
          "description": "The database name. For the default DbPlan, the dbName is default."
        },
        "flashCacheLimit": {
          "type": "string",
          "description": "The flash cache limit for this database. This value is internally configured based on the share value assigned to the database."
        },
        "share": {
          "type": "integer",
          "format": "int32",
          "description": "The relative priority of this database.",
          "minimum": 1,
          "maximum": 32
        }
      }
    },
    "DbNode": {
      "type": "object",
      "description": "The DbNode resource belonging to vmCluster",
      "properties": {
        "properties": {
          "$ref": "#/definitions/DbNodeProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "DbNodeAction": {
      "type": "object",
      "description": "DbNode action object",
      "properties": {
        "action": {
          "$ref": "#/definitions/DbNodeActionEnum",
          "description": "Db action"
        }
      },
      "required": [
        "action"
      ]
    },
    "DbNodeActionEnum": {
      "type": "string",
      "description": "DbNode action enum",
      "enum": [
        "Start",
        "Stop",
        "SoftReset",
        "Reset"
      ],
      "x-ms-enum": {
        "name": "DbNodeActionEnum",
        "modelAsString": true,
        "values": [
          {
            "name": "Start",
            "value": "Start",
            "description": "Start DbNode"
          },
          {
            "name": "Stop",
            "value": "Stop",
            "description": "Stop DbNode"
          },
          {
            "name": "SoftReset",
            "value": "SoftReset",
            "description": "Soft reset DbNode"
          },
          {
            "name": "Reset",
            "value": "Reset",
            "description": "Reset DbNode"
          }
        ]
      }
    },
    "DbNodeListResult": {
      "type": "object",
      "description": "The response of a DbNode list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The DbNode items on this page",
          "items": {
            "$ref": "#/definitions/DbNode"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "DbNodeMaintenanceType": {
      "type": "string",
      "description": "The type of database node maintenance.",
      "enum": [
        "VmdbRebootMigration"
      ],
      "x-ms-enum": {
        "name": "DbNodeMaintenanceType",
        "modelAsString": true,
        "values": [
          {
            "name": "VmdbRebootMigration",
            "value": "VmdbRebootMigration",
            "description": "VMDB reboot migration maintenance type"
          }
        ]
      }
    },
    "DbNodeProperties": {
      "type": "object",
      "description": "The properties of DbNodeResource",
      "properties": {
        "ocid": {
          "$ref": "#/definitions/Ocid",
          "description": "DbNode OCID",
          "readOnly": true
        },
        "additionalDetails": {
          "type": "string",
          "description": "Additional information about the planned maintenance.",
          "readOnly": true
        },
        "backupIpId": {
          "$ref": "#/definitions/Ocid",
          "description": "The OCID of the backup IP address associated with the database node.",
          "readOnly": true
        },
        "backupVnic2Id": {
          "$ref": "#/definitions/Ocid",
          "description": "The OCID of the second backup VNIC.",
          "readOnly": true
        },
        "backupVnicId": {
          "$ref": "#/definitions/Ocid",
          "description": "The OCID of the backup VNIC.",
          "readOnly": true
        },
        "cpuCoreCount": {
          "type": "integer",
          "format": "int32",
          "description": "The number of CPU cores enabled on the Db node.",
          "readOnly": true
        },
        "dbNodeStorageSizeInGbs": {
          "type": "integer",
          "format": "int32",
          "description": "The allocated local node storage in GBs on the Db node.",
          "readOnly": true
        },
        "dbServerId": {
          "$ref": "#/definitions/Ocid",
          "description": "The OCID of the Exacc Db server associated with the database node.",
          "readOnly": true
        },
        "dbSystemId": {
          "$ref": "#/definitions/Ocid",
          "description": "The OCID of the DB system.",
          "readOnly": true
        },
        "faultDomain": {
          "type": "string",
          "description": "The name of the Fault Domain the instance is contained in.",
          "minLength": 1,
          "maxLength": 255,
          "readOnly": true
        },
        "hostIpId": {
          "$ref": "#/definitions/Ocid",
          "description": "The OCID of the host IP address associated with the database node.",
          "readOnly": true
        },
        "hostname": {
          "type": "string",
          "description": "The host name for the database node.",
          "readOnly": true
        },
        "lifecycleState": {
          "$ref": "#/definitions/DbNodeProvisioningState",
          "description": "The current state of the database node.",
          "readOnly": true
        },
        "lifecycleDetails": {
          "type": "string",
          "description": "Lifecycle details of Db Node.",
          "readOnly": true
        },
        "maintenanceType": {
          "$ref": "#/definitions/DbNodeMaintenanceType",
          "description": "The type of database node maintenance.",
          "readOnly": true
        },
        "memorySizeInGbs": {
          "type": "integer",
          "format": "int32",
          "description": "The allocated memory in GBs on the Db node.",
          "readOnly": true
        },
        "softwareStorageSizeInGb": {
          "type": "integer",
          "format": "int32",
          "description": "The size (in GB) of the block storage volume allocation for the DB system. This attribute applies only for virtual machine DB systems.",
          "readOnly": true
        },
        "timeCreated": {
          "type": "string",
          "format": "date-time",
          "description": "The date and time that the database node was created.",
          "readOnly": true
        },
        "timeMaintenanceWindowEnd": {
          "type": "string",
          "format": "date-time",
          "description": "End date and time of maintenance window.",
          "readOnly": true
        },
        "timeMaintenanceWindowStart": {
          "type": "string",
          "format": "date-time",
          "description": "Start date and time of maintenance window.",
          "readOnly": true
        },
        "vnic2Id": {
          "$ref": "#/definitions/Ocid",
          "description": "The OCID of the second VNIC.",
          "readOnly": true
        },
        "vnicId": {
          "$ref": "#/definitions/Ocid",
          "description": "The OCID of the VNIC.",
          "readOnly": true
        },
        "provisioningState": {
          "$ref": "#/definitions/Azure.ResourceManager.ResourceProvisioningState",
          "description": "Azure resource provisioning state.",
          "readOnly": true
        }
      }
    },
    "DbNodeProvisioningState": {
      "type": "string",
      "description": "DnNode provisioning state enum",
      "enum": [
        "Provisioning",
        "Available",
        "Updating",
        "Stopping",
        "Stopped",
        "Starting",
        "Terminating",
        "Terminated",
        "Failed"
      ],
      "x-ms-enum": {
        "name": "DbNodeProvisioningState",
        "modelAsString": true,
        "values": [
          {
            "name": "Provisioning",
            "value": "Provisioning",
            "description": "Indicates that resource in Provisioning state"
          },
          {
            "name": "Available",
            "value": "Available",
            "description": "Indicates that resource in Available state"
          },
          {
            "name": "Updating",
            "value": "Updating",
            "description": "Indicates that resource in Updating state"
          },
          {
            "name": "Stopping",
            "value": "Stopping",
            "description": "Indicates that resource in Stopping state"
          },
          {
            "name": "Stopped",
            "value": "Stopped",
            "description": "Indicates that resource in Stopped state"
          },
          {
            "name": "Starting",
            "value": "Starting",
            "description": "Indicates that resource in Starting state"
          },
          {
            "name": "Terminating",
            "value": "Terminating",
            "description": "Indicates that resource in Terminating state"
          },
          {
            "name": "Terminated",
            "value": "Terminated",
            "description": "Indicates that resource in Terminated state"
          },
          {
            "name": "Failed",
            "value": "Failed",
            "description": "Indicates that resource in Failed state"
          }
        ]
      }
    },
    "DbServer": {
      "type": "object",
      "description": "DbServer resource model",
      "properties": {
        "properties": {
          "$ref": "#/definitions/DbServerProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "DbServerListResult": {
      "type": "object",
      "description": "The response of a DbServer list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The DbServer items on this page",
          "items": {
            "$ref": "#/definitions/DbServer"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "DbServerPatchingDetails": {
      "type": "object",
      "description": "DbServer Patching Properties",
      "properties": {
        "estimatedPatchDuration": {
          "type": "integer",
          "format": "int32",
          "description": "Estimated Patch Duration",
          "minimum": 1,
          "maximum": 3000,
          "readOnly": true
        },
        "patchingStatus": {
          "$ref": "#/definitions/DbServerPatchingStatus",
          "description": "Patching Status",
          "readOnly": true
        },
        "timePatchingEnded": {
          "type": "string",
          "format": "date-time",
          "description": "Time Patching Ended",
          "readOnly": true
        },
        "timePatchingStarted": {
          "type": "string",
          "format": "date-time",
          "description": "Time Patching Started",
          "readOnly": true
        }
      }
    },
    "DbServerPatchingStatus": {
      "type": "string",
      "description": "DB Server patching status enum",
      "enum": [
        "Scheduled",
        "MaintenanceInProgress",
        "Failed",
        "Complete"
      ],
      "x-ms-enum": {
        "name": "DbServerPatchingStatus",
        "modelAsString": true,
        "values": [
          {
            "name": "Scheduled",
            "value": "Scheduled",
            "description": "Patching scheduled"
          },
          {
            "name": "MaintenanceInProgress",
            "value": "MaintenanceInProgress",
            "description": "Patching in progress"
          },
          {
            "name": "Failed",
            "value": "Failed",
            "description": "Patching failed"
          },
          {
            "name": "Complete",
            "value": "Complete",
            "description": "Patching completed"
          }
        ]
      }
    },
    "DbServerProperties": {
      "type": "object",
      "description": "DbServer resource properties",
      "properties": {
        "ocid": {
          "$ref": "#/definitions/Ocid",
          "description": "Db server name.",
          "readOnly": true
        },
        "displayName": {
          "type": "string",
          "description": "The name for the Db Server.",
          "minLength": 1,
          "maxLength": 255,
          "readOnly": true
        },
        "compartmentId": {
          "$ref": "#/definitions/Ocid",
          "description": "The OCID of the compartment.",
          "readOnly": true
        },
        "exadataInfrastructureId": {
          "$ref": "#/definitions/Ocid",
          "description": "The OCID of the Exadata infrastructure.",
          "readOnly": true
        },
        "cpuCoreCount": {
          "type": "integer",
          "format": "int32",
          "description": "The number of CPU cores enabled on the Db server.",
          "readOnly": true
        },
        "dbServerPatchingDetails": {
          "$ref": "#/definitions/DbServerPatchingDetails",
          "description": "dbServerPatching details of the Db server.",
          "readOnly": true
        },
        "maxMemoryInGbs": {
          "type": "integer",
          "format": "int32",
          "description": "The total memory available in GBs.",
          "readOnly": true
        },
        "dbNodeStorageSizeInGbs": {
          "type": "integer",
          "format": "int32",
          "description": "The allocated local node storage in GBs on the Db server.",
          "readOnly": true
        },
        "vmClusterIds": {
          "type": "array",
          "description": "The OCID of the VM Clusters associated with the Db server.",
          "items": {
            "$ref": "#/definitions/Ocid"
          },
          "readOnly": true
        },
        "dbNodeIds": {
          "type": "array",
          "description": "The OCID of the Db nodes associated with the Db server.",
          "items": {
            "$ref": "#/definitions/Ocid"
          },
          "readOnly": true
        },
        "lifecycleDetails": {
          "type": "string",
          "description": "Lifecycle details of dbServer.",
          "readOnly": true
        },
        "lifecycleState": {
          "$ref": "#/definitions/DbServerProvisioningState",
          "description": "DbServer provisioning state.",
          "readOnly": true
        },
        "maxCpuCount": {
          "type": "integer",
          "format": "int32",
          "description": "The total number of CPU cores available.",
          "readOnly": true
        },
        "autonomousVmClusterIds": {
          "type": "array",
          "description": "The list of OCIDs of the Autonomous VM Clusters associated with the Db server.",
          "items": {
            "$ref": "#/definitions/Ocid"
          },
          "readOnly": true
        },
        "autonomousVirtualMachineIds": {
          "type": "array",
          "description": "The list of OCIDs of the Autonomous Virtual Machines associated with the Db server.",
          "items": {
            "$ref": "#/definitions/Ocid"
          },
          "readOnly": true
        },
        "maxDbNodeStorageInGbs": {
          "type": "integer",
          "format": "int32",
          "description": "The total max dbNode storage in GBs.",
          "readOnly": true
        },
        "memorySizeInGbs": {
          "type": "integer",
          "format": "int32",
          "description": "The total memory size in GBs.",
          "readOnly": true
        },
        "shape": {
          "type": "string",
          "description": "The shape of the Db server. The shape determines the amount of CPU, storage, and memory resources available.",
          "minLength": 1,
          "maxLength": 255,
          "readOnly": true
        },
        "timeCreated": {
          "type": "string",
          "format": "date-time",
          "description": "The date and time that the Db Server was created.",
          "readOnly": true
        },
        "provisioningState": {
          "$ref": "#/definitions/Azure.ResourceManager.ResourceProvisioningState",
          "description": "Azure resource provisioning state.",
          "readOnly": true
        }
      }
    },
    "DbServerProvisioningState": {
      "type": "string",
      "description": "DbServerProvisioningState enum",
      "enum": [
        "Creating",
        "Available",
        "Unavailable",
        "Deleting",
        "Deleted",
        "MaintenanceInProgress"
      ],
      "x-ms-enum": {
        "name": "DbServerProvisioningState",
        "modelAsString": true,
        "values": [
          {
            "name": "Creating",
            "value": "Creating",
            "description": "Indicates that resource in Creating state"
          },
          {
            "name": "Available",
            "value": "Available",
            "description": "Indicates that resource in Available state"
          },
          {
            "name": "Unavailable",
            "value": "Unavailable",
            "description": "Indicates that resource in Unavailable state"
          },
          {
            "name": "Deleting",
            "value": "Deleting",
            "description": "Indicates that resource in Deleting state"
          },
          {
            "name": "Deleted",
            "value": "Deleted",
            "description": "Indicates that resource in Deleted state"
          },
          {
            "name": "MaintenanceInProgress",
            "value": "MaintenanceInProgress",
            "description": "Indicates that resource maintenance in progress state"
          }
        ]
      }
    },
    "DbSystemShape": {
      "type": "object",
      "description": "DbSystemShape resource definition",
      "properties": {
        "properties": {
          "$ref": "#/definitions/DbSystemShapeProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "DbSystemShapeListResult": {
      "type": "object",
      "description": "The response of a DbSystemShape list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The DbSystemShape items on this page",
          "items": {
            "$ref": "#/definitions/DbSystemShape"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "DbSystemShapeProperties": {
      "type": "object",
      "description": "DbSystemShape resource model",
      "properties": {
        "shapeFamily": {
          "type": "string",
          "description": "The family of the shape used for the DB system.",
          "minLength": 1,
          "maxLength": 255,
          "readOnly": true
        },
        "availableCoreCount": {
          "type": "integer",
          "format": "int32",
          "description": "The maximum number of CPU cores that can be enabled on the DB system for this shape.",
          "readOnly": true
        },
        "minimumCoreCount": {
          "type": "integer",
          "format": "int32",
          "description": "The minimum number of CPU cores that can be enabled on the DB system for this shape.",
          "readOnly": true
        },
        "runtimeMinimumCoreCount": {
          "type": "integer",
          "format": "int32",
          "description": "The runtime minimum number of CPU cores that can be enabled on the DB system for this shape.",
          "readOnly": true
        },
        "coreCountIncrement": {
          "type": "integer",
          "format": "int32",
          "description": "The discrete number by which the CPU core count for this shape can be increased or decreased.",
          "readOnly": true
        },
        "minStorageCount": {
          "type": "integer",
          "format": "int32",
          "description": "The minimum number of Exadata storage servers available for the Exadata infrastructure.",
          "readOnly": true
        },
        "maxStorageCount": {
          "type": "integer",
          "format": "int32",
          "description": "The maximum number of Exadata storage servers available for the Exadata infrastructure.",
          "readOnly": true
        },
        "availableDataStoragePerServerInTbs": {
          "type": "number",
          "format": "double",
          "description": "The maximum data storage available per storage server for this shape. Only applicable to ExaCC Elastic shapes.",
          "readOnly": true
        },
        "availableMemoryPerNodeInGbs": {
          "type": "integer",
          "format": "int32",
          "description": "The maximum memory available per database node for this shape. Only applicable to ExaCC Elastic shapes.",
          "readOnly": true
        },
        "availableDbNodePerNodeInGbs": {
          "type": "integer",
          "format": "int32",
          "description": "The maximum Db Node storage available per database node for this shape. Only applicable to ExaCC Elastic shapes.",
          "readOnly": true
        },
        "minCoreCountPerNode": {
          "type": "integer",
          "format": "int32",
          "description": "The minimum number of CPU cores that can be enabled per node for this shape.",
          "readOnly": true
        },
        "availableMemoryInGbs": {
          "type": "integer",
          "format": "int32",
          "description": "The maximum memory that can be enabled for this shape.",
          "readOnly": true
        },
        "minMemoryPerNodeInGbs": {
          "type": "integer",
          "format": "int32",
          "description": "The minimum memory that need be allocated per node for this shape.",
          "readOnly": true
        },
        "availableDbNodeStorageInGbs": {
          "type": "integer",
          "format": "int32",
          "description": "The maximum Db Node storage that can be enabled for this shape.",
          "readOnly": true
        },
        "minDbNodeStoragePerNodeInGbs": {
          "type": "integer",
          "format": "int32",
          "description": "The minimum Db Node storage that need be allocated per node for this shape.",
          "readOnly": true
        },
        "availableDataStorageInTbs": {
          "type": "integer",
          "format": "int32",
          "description": "The maximum DATA storage that can be enabled for this shape.",
          "readOnly": true
        },
        "minDataStorageInTbs": {
          "type": "integer",
          "format": "int32",
          "description": "The minimum data storage that need be allocated for this shape.",
          "readOnly": true
        },
        "minimumNodeCount": {
          "type": "integer",
          "format": "int32",
          "description": "The minimum number of database nodes available for this shape.",
          "readOnly": true
        },
        "maximumNodeCount": {
          "type": "integer",
          "format": "int32",
          "description": "The maximum number of database nodes available for this shape.",
          "readOnly": true
        },
        "availableCoreCountPerNode": {
          "type": "integer",
          "format": "int32",
          "description": "The maximum number of CPU cores per database node that can be enabled for this shape. Only applicable to the flex Exadata shape and ExaCC Elastic shapes.",
          "readOnly": true
        }
      }
    },
    "DisasterRecoveryType": {
      "type": "string",
      "description": "Disaster recovery type enum.",
      "enum": [
        "Adg",
        "BackupBased"
      ],
      "x-ms-enum": {
        "name": "DisasterRecoveryType",
        "modelAsString": true,
        "values": [
          {
            "name": "Adg",
            "value": "Adg",
            "description": "ADG type"
          },
          {
            "name": "BackupBased",
            "value": "BackupBased",
            "description": "Backup based type"
          }
        ]
      }
    },
    "DiskRedundancy": {
      "type": "string",
      "description": "Disk redundancy enum",
      "enum": [
        "High",
        "Normal"
      ],
      "x-ms-enum": {
        "name": "DiskRedundancy",
        "modelAsString": true,
        "values": [
          {
            "name": "High",
            "value": "High",
            "description": "High redundancy"
          },
          {
            "name": "Normal",
            "value": "Normal",
            "description": "Normal redundancy"
          }
        ]
      }
    },
    "DnsPrivateView": {
      "type": "object",
      "description": "DnsPrivateView resource definition",
      "properties": {
        "properties": {
          "$ref": "#/definitions/DnsPrivateViewProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "DnsPrivateViewListResult": {
      "type": "object",
      "description": "The response of a DnsPrivateView list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The DnsPrivateView items on this page",
          "items": {
            "$ref": "#/definitions/DnsPrivateView"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "DnsPrivateViewProperties": {
      "type": "object",
      "description": "Views resource model",
      "properties": {
        "ocid": {
          "$ref": "#/definitions/Ocid",
          "description": "The OCID of the view",
          "readOnly": true
        },
        "displayName": {
          "type": "string",
          "description": "The display name of the view resource",
          "readOnly": true
        },
        "isProtected": {
          "type": "boolean",
          "description": "A Boolean flag indicating whether or not parts of the resource are unable to be explicitly managed.",
          "readOnly": true
        },
        "lifecycleState": {
          "$ref": "#/definitions/DnsPrivateViewsLifecycleState",
          "description": "Views lifecycleState",
          "readOnly": true
        },
        "self": {
          "type": "string",
          "description": "The canonical absolute URL of the resource.",
          "readOnly": true
        },
        "timeCreated": {
          "type": "string",
          "format": "date-time",
          "description": "views timeCreated",
          "readOnly": true
        },
        "timeUpdated": {
          "type": "string",
          "format": "date-time",
          "description": "views timeCreated",
          "readOnly": true
        },
        "provisioningState": {
          "$ref": "#/definitions/Azure.ResourceManager.ResourceProvisioningState",
          "description": "Azure resource provisioning state.",
          "readOnly": true
        }
      }
    },
    "DnsPrivateViewsLifecycleState": {
      "type": "string",
      "description": "DNS Private Views lifecycle state enum",
      "enum": [
        "Active",
        "Deleted",
        "Deleting",
        "Updating"
      ],
      "x-ms-enum": {
        "name": "DnsPrivateViewsLifecycleState",
        "modelAsString": true,
        "values": [
          {
            "name": "Active",
            "value": "Active",
            "description": "DNS Private View is active"
          },
          {
            "name": "Deleted",
            "value": "Deleted",
            "description": "DNS Private View is deleted"
          },
          {
            "name": "Deleting",
            "value": "Deleting",
            "description": "DNS Private View is deleting"
          },
          {
            "name": "Updating",
            "value": "Updating",
            "description": "DNS Private View is updating"
          }
        ]
      }
    },
    "DnsPrivateZone": {
      "type": "object",
      "description": "DnsPrivateZone resource definition",
      "properties": {
        "properties": {
          "$ref": "#/definitions/DnsPrivateZoneProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "DnsPrivateZoneListResult": {
      "type": "object",
      "description": "The response of a DnsPrivateZone list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The DnsPrivateZone items on this page",
          "items": {
            "$ref": "#/definitions/DnsPrivateZone"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "DnsPrivateZoneProperties": {
      "type": "object",
      "description": "Zones resource model",
      "properties": {
        "ocid": {
          "$ref": "#/definitions/Ocid",
          "description": "The OCID of the Zone",
          "readOnly": true
        },
        "isProtected": {
          "type": "boolean",
          "description": "A Boolean flag indicating whether or not parts of the resource are unable to be explicitly managed.",
          "readOnly": true
        },
        "lifecycleState": {
          "$ref": "#/definitions/DnsPrivateZonesLifecycleState",
          "description": "Zones lifecycleState",
          "readOnly": true
        },
        "self": {
          "type": "string",
          "description": "The canonical absolute URL of the resource.",
          "readOnly": true
        },
        "serial": {
          "type": "integer",
          "format": "int32",
          "description": "The current serial of the zone. As seen in the zone's SOA record.",
          "readOnly": true
        },
        "version": {
          "type": "string",
          "description": "Version is the never-repeating, totally-orderable, version of the zone, from which the serial field of the zone's SOA record is derived.",
          "readOnly": true
        },
        "viewId": {
          "$ref": "#/definitions/Ocid",
          "description": "The OCID of the private view containing the zone. This value will be null for zones in the global DNS, which are publicly resolvable and not part of a private view.",
          "readOnly": true
        },
        "zoneType": {
          "$ref": "#/definitions/ZoneType",
          "description": "The type of the zone. Must be either PRIMARY or SECONDARY. SECONDARY is only supported for GLOBAL zones.",
          "readOnly": true
        },
        "timeCreated": {
          "type": "string",
          "format": "date-time",
          "description": "Zones timeCreated",
          "readOnly": true
        },
        "provisioningState": {
          "$ref": "#/definitions/Azure.ResourceManager.ResourceProvisioningState",
          "description": "Azure resource provisioning state.",
          "readOnly": true
        }
      }
    },
    "DnsPrivateZonesLifecycleState": {
      "type": "string",
      "description": "DNS Private Zones lifecycle state enum",
      "enum": [
        "Active",
        "Creating",
        "Deleted",
        "Deleting",
        "Updating"
      ],
      "x-ms-enum": {
        "name": "DnsPrivateZonesLifecycleState",
        "modelAsString": true,
        "values": [
          {
            "name": "Active",
            "value": "Active",
            "description": "DNS Private Zones is active"
          },
          {
            "name": "Creating",
            "value": "Creating",
            "description": "DNS Private Zones is creating"
          },
          {
            "name": "Deleted",
            "value": "Deleted",
            "description": "DNS Private Zones is deleted"
          },
          {
            "name": "Deleting",
            "value": "Deleting",
            "description": "DNS Private Zones is deleting"
          },
          {
            "name": "Updating",
            "value": "Updating",
            "description": "DNS Private Zones is updating"
          }
        ]
      }
    },
    "EstimatedPatchingTime": {
      "type": "object",
      "description": "The estimated total time required in minutes for all patching operations (database server, storage server, and network switch patching).",
      "properties": {
        "estimatedDbServerPatchingTime": {
          "type": "integer",
          "format": "int32",
          "description": "The estimated time required in minutes for database server patching.",
          "minimum": 1,
          "maximum": 3000,
          "readOnly": true
        },
        "estimatedNetworkSwitchesPatchingTime": {
          "type": "integer",
          "format": "int32",
          "description": "The estimated time required in minutes for network switch patching.",
          "minimum": 1,
          "maximum": 3000,
          "readOnly": true
        },
        "estimatedStorageServerPatchingTime": {
          "type": "integer",
          "format": "int32",
          "description": "The estimated time required in minutes for storage server patching.",
          "minimum": 1,
          "maximum": 3000,
          "readOnly": true
        },
        "totalEstimatedPatchingTime": {
          "type": "integer",
          "format": "int32",
          "description": "The estimated total time required in minutes for all patching operations.",
          "minimum": 1,
          "maximum": 3000,
          "readOnly": true
        }
      }
    },
    "ExadataIormConfig": {
      "type": "object",
      "description": "ExadataIormConfig for cloud vm cluster",
      "properties": {
        "dbPlans": {
          "type": "array",
          "description": "An array of IORM settings for all the database in the Exadata DB system.",
          "items": {
            "$ref": "#/definitions/DbIormConfig"
          },
          "x-ms-identifiers": []
        },
        "lifecycleDetails": {
          "type": "string",
          "description": "Additional information about the current lifecycleState."
        },
        "lifecycleState": {
          "$ref": "#/definitions/IormLifecycleState",
          "description": "The current state of IORM configuration for the Exadata DB system."
        },
        "objective": {
          "$ref": "#/definitions/Objective",
          "description": "The current value for the IORM objective. The default is AUTO."
        }
      }
    },
    "GenerateAutonomousDatabaseWalletDetails": {
      "type": "object",
      "description": "Autonomous Database Generate Wallet resource model.",
      "properties": {
        "generateType": {
          "$ref": "#/definitions/GenerateType",
          "description": "The type of wallet to generate."
        },
        "isRegional": {
          "type": "boolean",
          "description": "True when requesting regional connection strings in PDB connect info, applicable to cross-region DG only."
        },
        "password": {
          "$ref": "#/definitions/Password",
          "description": "The password to encrypt the keys inside the wallet",
          "minLength": 8
        }
      },
      "required": [
        "password"
      ]
    },
    "GenerateType": {
      "type": "string",
      "description": "Generate type enum",
      "enum": [
        "Single",
        "All"
      ],
      "x-ms-enum": {
        "name": "GenerateType",
        "modelAsString": true,
        "values": [
          {
            "name": "Single",
            "value": "Single",
            "description": "Generate single"
          },
          {
            "name": "All",
            "value": "All",
            "description": "Generate all"
          }
        ]
      }
    },
    "GiVersion": {
      "type": "object",
      "description": "GiVersion resource definition",
      "properties": {
        "properties": {
          "$ref": "#/definitions/GiVersionProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "GiVersionListResult": {
      "type": "object",
      "description": "The response of a GiVersion list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The GiVersion items on this page",
          "items": {
            "$ref": "#/definitions/GiVersion"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "GiVersionProperties": {
      "type": "object",
      "description": "GiVersion resource model",
      "properties": {
        "version": {
          "type": "string",
          "description": "A valid Oracle Grid Infrastructure (GI) software version.",
          "minLength": 1,
          "maxLength": 255,
          "readOnly": true
        }
      }
    },
    "HostFormatType": {
      "type": "string",
      "description": "Host format type enum.",
      "enum": [
        "Fqdn",
        "Ip"
      ],
      "x-ms-enum": {
        "name": "HostFormatType",
        "modelAsString": true,
        "values": [
          {
            "name": "Fqdn",
            "value": "Fqdn",
            "description": "FQDN format"
          },
          {
            "name": "Ip",
            "value": "Ip",
            "description": "IP format"
          }
        ]
      }
    },
    "Intent": {
      "type": "string",
      "description": "Intent enum",
      "enum": [
        "Retain",
        "Reset"
      ],
      "x-ms-enum": {
        "name": "Intent",
        "modelAsString": true,
        "values": [
          {
            "name": "Retain",
            "value": "Retain",
            "description": "Retain intent"
          },
          {
            "name": "Reset",
            "value": "Reset",
            "description": "Reset intent"
          }
        ]
      }
    },
    "IormLifecycleState": {
      "type": "string",
      "description": "ORM lifecycle state enum",
      "enum": [
        "BootStrapping",
        "Enabled",
        "Disabled",
        "Updating",
        "Failed"
      ],
      "x-ms-enum": {
        "name": "IormLifecycleState",
        "modelAsString": true,
        "values": [
          {
            "name": "BootStrapping",
            "value": "BootStrapping",
            "description": "Indicates that resource in Provisioning state"
          },
          {
            "name": "Enabled",
            "value": "Enabled",
            "description": "Indicates that resource in Enabled state"
          },
          {
            "name": "Disabled",
            "value": "Disabled",
            "description": "Indicates that resource in Disabled state"
          },
          {
            "name": "Updating",
            "value": "Updating",
            "description": "Indicates that resource in Updating state"
          },
          {
            "name": "Failed",
            "value": "Failed",
            "description": "Indicates that resource in Failed state"
          }
        ]
      }
    },
    "LicenseModel": {
      "type": "string",
      "description": "LicenseModel enum",
      "enum": [
        "LicenseIncluded",
        "BringYourOwnLicense"
      ],
      "x-ms-enum": {
        "name": "LicenseModel",
        "modelAsString": true,
        "values": [
          {
            "name": "LicenseIncluded",
            "value": "LicenseIncluded",
            "description": "License included"
          },
          {
            "name": "BringYourOwnLicense",
            "value": "BringYourOwnLicense",
            "description": "Bring Your Own License"
          }
        ]
      }
    },
    "LongTermBackUpScheduleDetails": {
      "type": "object",
      "description": "Details for the long-term backup schedule.",
      "properties": {
        "repeatCadence": {
          "$ref": "#/definitions/RepeatCadenceType",
          "description": "The frequency of the long-term backup schedule"
        },
        "timeOfBackup": {
          "type": "string",
          "format": "date-time",
          "description": "The timestamp for the long-term backup schedule. For a MONTHLY cadence, months having fewer days than the provided date will have the backup taken on the last day of that month."
        },
        "retentionPeriodInDays": {
          "$ref": "#/definitions/RetentionPeriod",
          "description": "Retention period, in days, for backups."
        },
        "isDisabled": {
          "type": "boolean",
          "description": "Indicates if the long-term backup schedule should be deleted. The default value is `FALSE`."
        }
      }
    },
    "MaintenanceWindow": {
      "type": "object",
      "description": "MaintenanceWindow resource properties",
      "properties": {
        "preference": {
          "$ref": "#/definitions/Preference",
          "description": "The maintenance window scheduling preference."
        },
        "months": {
          "type": "array",
          "description": "Months during the year when maintenance should be performed.",
          "items": {
            "$ref": "#/definitions/Month"
          },
          "x-ms-identifiers": [
            "name"
          ]
        },
        "weeksOfMonth": {
          "type": "array",
          "description": "Weeks during the month when maintenance should be performed. Weeks start on the 1st, 8th, 15th, and 22nd days of the month, and have a duration of 7 days. Weeks start and end based on calendar dates, not days of the week. For example, to allow maintenance during the 2nd week of the month (from the 8th day to the 14th day of the month), use the value 2. Maintenance cannot be scheduled for the fifth week of months that contain more than 28 days. Note that this parameter works in conjunction with the  daysOfWeek and hoursOfDay parameters to allow you to specify specific days of the week and hours that maintenance will be performed. ",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "daysOfWeek": {
          "type": "array",
          "description": "Days during the week when maintenance should be performed.",
          "items": {
            "$ref": "#/definitions/DayOfWeek"
          },
          "x-ms-identifiers": [
            "name"
          ]
        },
        "hoursOfDay": {
          "type": "array",
          "description": "The window of hours during the day when maintenance should be performed. The window is a 4 hour slot. Valid values are - 0 - represents time slot 0:00 - 3:59 UTC - 4 - represents time slot 4:00 - 7:59 UTC - 8 - represents time slot 8:00 - 11:59 UTC - 12 - represents time slot 12:00 - 15:59 UTC - 16 - represents time slot 16:00 - 19:59 UTC - 20 - represents time slot 20:00 - 23:59 UTC",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "leadTimeInWeeks": {
          "type": "integer",
          "format": "int32",
          "description": "Lead time window allows user to set a lead time to prepare for a down time. The lead time is in weeks and valid value is between 1 to 4. "
        },
        "patchingMode": {
          "$ref": "#/definitions/PatchingMode",
          "description": "Cloud Exadata infrastructure node patching method."
        },
        "customActionTimeoutInMins": {
          "type": "integer",
          "format": "int32",
          "description": "Determines the amount of time the system will wait before the start of each database server patching operation. Custom action timeout is in minutes and valid value is between 15 to 120 (inclusive).",
          "minimum": 0,
          "maximum": 120
        },
        "isCustomActionTimeoutEnabled": {
          "type": "boolean",
          "description": "If true, enables the configuration of a custom action timeout (waiting period) between database server patching operations."
        },
        "isMonthlyPatchingEnabled": {
          "type": "boolean",
          "description": "is Monthly Patching Enabled"
        }
      }
    },
    "Month": {
      "type": "object",
      "description": "Month resource properties",
      "properties": {
        "name": {
          "$ref": "#/definitions/MonthName",
          "description": "Name of the month of the year."
        }
      },
      "required": [
        "name"
      ]
    },
    "MonthName": {
      "type": "string",
      "description": "MonthName enum",
      "enum": [
        "January",
        "February",
        "March",
        "April",
        "May",
        "June",
        "July",
        "August",
        "September",
        "October",
        "November",
        "December"
      ],
      "x-ms-enum": {
        "name": "MonthName",
        "modelAsString": true,
        "values": [
          {
            "name": "January",
            "value": "January",
            "description": "January value"
          },
          {
            "name": "February",
            "value": "February",
            "description": "February value"
          },
          {
            "name": "March",
            "value": "March",
            "description": "March value"
          },
          {
            "name": "April",
            "value": "April",
            "description": "April value"
          },
          {
            "name": "May",
            "value": "May",
            "description": "May value"
          },
          {
            "name": "June",
            "value": "June",
            "description": "June value"
          },
          {
            "name": "July",
            "value": "July",
            "description": "July value"
          },
          {
            "name": "August",
            "value": "August",
            "description": "August value"
          },
          {
            "name": "September",
            "value": "September",
            "description": "September value"
          },
          {
            "name": "October",
            "value": "October",
            "description": "October value"
          },
          {
            "name": "November",
            "value": "November",
            "description": "November value"
          },
          {
            "name": "December",
            "value": "December",
            "description": "December value"
          }
        ]
      }
    },
    "MsRpaasNewResourceHeader": {
      "type": "object",
      "description": "Header to distinguish between resource creation or update"
    },
    "NsgCidr": {
      "type": "object",
      "description": "A rule for allowing inbound (INGRESS) IP packets",
      "properties": {
        "source": {
          "type": "string",
          "description": "Conceptually, this is the range of IP addresses that a packet coming into the instance can come from.",
          "minLength": 1,
          "maxLength": 128
        },
        "destinationPortRange": {
          "$ref": "#/definitions/PortRange",
          "description": "Destination port range to specify particular destination ports for TCP rules."
        }
      },
      "required": [
        "source"
      ]
    },
    "Objective": {
      "type": "string",
      "description": "Objective enum",
      "enum": [
        "LowLatency",
        "HighThroughput",
        "Balanced",
        "Auto",
        "Basic"
      ],
      "x-ms-enum": {
        "name": "Objective",
        "modelAsString": true,
        "values": [
          {
            "name": "LowLatency",
            "value": "LowLatency",
            "description": "Low latency objective"
          },
          {
            "name": "HighThroughput",
            "value": "HighThroughput",
            "description": "High throughput objective"
          },
          {
            "name": "Balanced",
            "value": "Balanced",
            "description": "Balanced objective"
          },
          {
            "name": "Auto",
            "value": "Auto",
            "description": "Auto objective"
          },
          {
            "name": "Basic",
            "value": "Basic",
            "description": "Basic objective"
          }
        ]
      }
    },
    "Ocid": {
      "type": "string",
      "description": "The [OCID](/Content/General/Concepts/identifiers.htm) of the resource.",
      "minLength": 1,
      "maxLength": 255
    },
    "OpenModeType": {
      "type": "string",
      "description": "Open mode type enum.",
      "enum": [
        "ReadOnly",
        "ReadWrite"
      ],
      "x-ms-enum": {
        "name": "OpenModeType",
        "modelAsString": true,
        "values": [
          {
            "name": "ReadOnly",
            "value": "ReadOnly",
            "description": "ReadOnly mode"
          },
          {
            "name": "ReadWrite",
            "value": "ReadWrite",
            "description": "ReadWrite mode"
          }
        ]
      }
    },
    "OperationsInsightsStatusType": {
      "type": "string",
      "description": "Operations Insights status type enum.",
      "enum": [
        "Enabling",
        "Enabled",
        "Disabling",
        "NotEnabled",
        "FailedEnabling",
        "FailedDisabling"
      ],
      "x-ms-enum": {
        "name": "OperationsInsightsStatusType",
        "modelAsString": true,
        "values": [
          {
            "name": "Enabling",
            "value": "Enabling",
            "description": "Enabling status"
          },
          {
            "name": "Enabled",
            "value": "Enabled",
            "description": "Enabled status"
          },
          {
            "name": "Disabling",
            "value": "Disabling",
            "description": "Disabling status"
          },
          {
            "name": "NotEnabled",
            "value": "NotEnabled",
            "description": "NotEnabled status"
          },
          {
            "name": "FailedEnabling",
            "value": "FailedEnabling",
            "description": "FailedEnabling status"
          },
          {
            "name": "FailedDisabling",
            "value": "FailedDisabling",
            "description": "FailedDisabling status"
          }
        ]
      }
    },
    "OracleSubscription": {
      "type": "object",
      "description": "OracleSubscription resource definition",
      "properties": {
        "properties": {
          "$ref": "#/definitions/OracleSubscriptionProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true
        },
        "plan": {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/Plan",
          "description": "Details of the resource plan."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "OracleSubscriptionListResult": {
      "type": "object",
      "description": "The response of a OracleSubscription list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The OracleSubscription items on this page",
          "items": {
            "$ref": "#/definitions/OracleSubscription"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "OracleSubscriptionProperties": {
      "type": "object",
      "description": "Oracle Subscription resource model",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/OracleSubscriptionProvisioningState",
          "description": "OracleSubscriptionProvisioningState provisioning state",
          "readOnly": true
        },
        "saasSubscriptionId": {
          "type": "string",
          "description": "SAAS subscription ID generated by Marketplace",
          "readOnly": true
        },
        "cloudAccountId": {
          "$ref": "#/definitions/Ocid",
          "description": "Cloud Account Id",
          "readOnly": true
        },
        "cloudAccountState": {
          "$ref": "#/definitions/CloudAccountProvisioningState",
          "description": "Cloud Account provisioning state.",
          "readOnly": true
        },
        "termUnit": {
          "type": "string",
          "description": "Term Unit. P1Y, P3Y, etc, see Durations https://en.wikipedia.org/wiki/ISO_8601",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "productCode": {
          "type": "string",
          "description": "Product code for the term unit",
          "x-ms-mutability": [
            "update"
          ]
        },
        "intent": {
          "$ref": "#/definitions/Intent",
          "description": "Intent for the update operation",
          "x-ms-mutability": [
            "update"
          ]
        }
      }
    },
    "OracleSubscriptionProvisioningState": {
      "type": "string",
      "description": "OracleSubscriptionProvisioningState enum",
      "enum": [
        "Succeeded",
        "Failed",
        "Canceled"
      ],
      "x-ms-enum": {
        "name": "OracleSubscriptionProvisioningState",
        "modelAsString": true,
        "values": [
          {
            "name": "Succeeded",
            "value": "Succeeded",
            "description": "Resource has been created."
          },
          {
            "name": "Failed",
            "value": "Failed",
            "description": "Resource creation failed."
          },
          {
            "name": "Canceled",
            "value": "Canceled",
            "description": "Resource creation was canceled."
          }
        ]
      },
      "readOnly": true
    },
    "OracleSubscriptionUpdate": {
      "type": "object",
      "description": "The type used for update operations of the OracleSubscription.",
      "properties": {
        "plan": {
          "$ref": "#/definitions/PlanUpdate",
          "description": "Details of the resource plan."
        },
        "properties": {
          "$ref": "#/definitions/OracleSubscriptionUpdateProperties",
          "x-ms-client-flatten": true
        }
      }
    },
    "OracleSubscriptionUpdateProperties": {
      "type": "object",
      "description": "The updatable properties of the OracleSubscription.",
      "properties": {
        "productCode": {
          "type": "string",
          "description": "Product code for the term unit",
          "x-ms-mutability": [
            "update"
          ]
        },
        "intent": {
          "$ref": "#/definitions/Intent",
          "description": "Intent for the update operation",
          "x-ms-mutability": [
            "update"
          ]
        }
      }
    },
    "Password": {
      "type": "string",
      "format": "password",
      "description": "Password string.",
      "x-ms-secret": true
    },
    "PatchingMode": {
      "type": "string",
      "description": "Patching mode enum",
      "enum": [
        "Rolling",
        "NonRolling"
      ],
      "x-ms-enum": {
        "name": "PatchingMode",
        "modelAsString": true,
        "values": [
          {
            "name": "Rolling",
            "value": "Rolling",
            "description": "Rolling patching"
          },
          {
            "name": "NonRolling",
            "value": "NonRolling",
            "description": "Non Rolling patching"
          }
        ]
      }
    },
    "PeerDbDetails": {
      "type": "object",
      "description": "PeerDb Details",
      "properties": {
        "peerDbId": {
          "type": "string",
          "description": "The database OCID of the Disaster Recovery peer database, which is located in a different region from the current peer database.",
          "minLength": 1,
          "maxLength": 255
        }
      }
    },
    "PermissionLevelType": {
      "type": "string",
      "description": "Permission level type enum.",
      "enum": [
        "Restricted",
        "Unrestricted"
      ],
      "x-ms-enum": {
        "name": "PermissionLevelType",
        "modelAsString": true,
        "values": [
          {
            "name": "Restricted",
            "value": "Restricted",
            "description": "Restricted permission level"
          },
          {
            "name": "Unrestricted",
            "value": "Unrestricted",
            "description": "Unrestricted permission level"
          }
        ]
      }
    },
    "PlanUpdate": {
      "type": "object",
      "description": "ResourcePlanTypeUpdate model definition",
      "properties": {
        "name": {
          "type": "string",
          "description": "A user defined name of the 3rd Party Artifact that is being procured."
        },
        "publisher": {
          "type": "string",
          "description": "The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic"
        },
        "product": {
          "type": "string",
          "description": "The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact at the time of Data Market onboarding. "
        },
        "promotionCode": {
          "type": "string",
          "description": "A publisher provided promotion code as provisioned in Data Market for the said product/artifact."
        },
        "version": {
          "type": "string",
          "description": "The version of the desired product/artifact."
        }
      }
    },
    "PortRange": {
      "type": "object",
      "description": "Port Range to specify particular destination ports for TCP rules.",
      "properties": {
        "min": {
          "type": "integer",
          "format": "int32",
          "description": "The minimum port number, which must not be greater than the maximum port number.",
          "minimum": 1,
          "maximum": 65535
        },
        "max": {
          "type": "integer",
          "format": "int32",
          "description": "The maximum port number, which must not be less than the minimum port number. To specify a single port number, set both the min and max to the same value.",
          "minimum": 1,
          "maximum": 65535
        }
      },
      "required": [
        "min",
        "max"
      ]
    },
    "Preference": {
      "type": "string",
      "description": "Preference enum",
      "enum": [
        "NoPreference",
        "CustomPreference"
      ],
      "x-ms-enum": {
        "name": "Preference",
        "modelAsString": true,
        "values": [
          {
            "name": "NoPreference",
            "value": "NoPreference",
            "description": "No preference"
          },
          {
            "name": "CustomPreference",
            "value": "CustomPreference",
            "description": "Custom preference"
          }
        ]
      }
    },
    "PrivateIpAddressProperties": {
      "type": "object",
      "description": "PrivateIpAddress resource properties",
      "properties": {
        "displayName": {
          "type": "string",
          "description": "PrivateIpAddresses displayName"
        },
        "hostnameLabel": {
          "type": "string",
          "description": "PrivateIpAddresses hostnameLabel"
        },
        "ocid": {
          "$ref": "#/definitions/Ocid",
          "description": "PrivateIpAddresses Id"
        },
        "ipAddress": {
          "type": "string",
          "description": "PrivateIpAddresses ipAddress"
        },
        "subnetId": {
          "$ref": "#/definitions/Ocid",
          "description": "PrivateIpAddresses subnetId"
        }
      },
      "required": [
        "displayName",
        "hostnameLabel",
        "ocid",
        "ipAddress",
        "subnetId"
      ]
    },
    "PrivateIpAddressesFilter": {
      "type": "object",
      "description": "Private Ip Addresses filter",
      "properties": {
        "subnetId": {
          "$ref": "#/definitions/Ocid",
          "description": "Subnet OCID"
        },
        "vnicId": {
          "$ref": "#/definitions/Ocid",
          "description": "VCN OCID"
        }
      },
      "required": [
        "subnetId",
        "vnicId"
      ]
    },
    "ProfileType": {
      "type": "object",
      "description": "The connection string profile to allow clients to group, filter and select connection string values based on structured metadata.",
      "properties": {
        "consumerGroup": {
          "$ref": "#/definitions/ConsumerGroup",
          "description": "Consumer group used by the connection."
        },
        "displayName": {
          "type": "string",
          "description": "A user-friendly name for the connection.",
          "minLength": 1,
          "maxLength": 255
        },
        "hostFormat": {
          "$ref": "#/definitions/HostFormatType",
          "description": "Host format used in connection string."
        },
        "isRegional": {
          "type": "boolean",
          "description": "True for a regional connection string, applicable to cross-region DG only."
        },
        "protocol": {
          "$ref": "#/definitions/ProtocolType",
          "description": "Protocol used by the connection."
        },
        "sessionMode": {
          "$ref": "#/definitions/SessionModeType",
          "description": "Specifies whether the listener performs a direct hand-off of the session, or redirects the session."
        },
        "syntaxFormat": {
          "$ref": "#/definitions/SyntaxFormatType",
          "description": "Specifies whether the connection string is using the long (LONG), Easy Connect (EZCONNECT), or Easy Connect Plus (EZCONNECTPLUS) format."
        },
        "tlsAuthentication": {
          "$ref": "#/definitions/TlsAuthenticationType",
          "description": "Specifies whether the TLS handshake is using one-way (SERVER) or mutual (MUTUAL) authentication."
        },
        "value": {
          "type": "string",
          "description": "Connection string value."
        }
      },
      "required": [
        "displayName",
        "hostFormat",
        "protocol",
        "sessionMode",
        "syntaxFormat",
        "value"
      ]
    },
    "ProtocolType": {
      "type": "string",
      "description": "Protocol type enum.",
      "enum": [
        "TCP",
        "TCPS"
      ],
      "x-ms-enum": {
        "name": "ProtocolType",
        "modelAsString": true,
        "values": [
          {
            "name": "TCP",
            "value": "TCP",
            "description": "TCP protocol"
          },
          {
            "name": "TCPS",
            "value": "TCPS",
            "description": "TCPS protocol"
          }
        ]
      }
    },
    "RefreshableModelType": {
      "type": "string",
      "description": "Refreshable model type enum",
      "enum": [
        "Automatic",
        "Manual"
      ],
      "x-ms-enum": {
        "name": "RefreshableModelType",
        "modelAsString": true,
        "values": [
          {
            "name": "Automatic",
            "value": "Automatic",
            "description": "Automatic refreshable model type"
          },
          {
            "name": "Manual",
            "value": "Manual",
            "description": "Manual refreshable model type"
          }
        ]
      }
    },
    "RefreshableStatusType": {
      "type": "string",
      "description": "Refreshable status type enum.",
      "enum": [
        "Refreshing",
        "NotRefreshing"
      ],
      "x-ms-enum": {
        "name": "RefreshableStatusType",
        "modelAsString": true,
        "values": [
          {
            "name": "Refreshing",
            "value": "Refreshing",
            "description": "Refreshing status"
          },
          {
            "name": "NotRefreshing",
            "value": "NotRefreshing",
            "description": "NotRefreshing status"
          }
        ]
      }
    },
    "RepeatCadenceType": {
      "type": "string",
      "description": "Repeat cadence type enum",
      "enum": [
        "OneTime",
        "Weekly",
        "Monthly",
        "Yearly"
      ],
      "x-ms-enum": {
        "name": "RepeatCadenceType",
        "modelAsString": true,
        "values": [
          {
            "name": "OneTime",
            "value": "OneTime",
            "description": "Repeat one time"
          },
          {
            "name": "Weekly",
            "value": "Weekly",
            "description": "Repeat weekly"
          },
          {
            "name": "Monthly",
            "value": "Monthly",
            "description": "Repeat monthly"
          },
          {
            "name": "Yearly",
            "value": "Yearly",
            "description": "Repeat yearly"
          }
        ]
      }
    },
    "RestoreAutonomousDatabaseDetails": {
      "type": "object",
      "description": "Details to restore an Oracle Autonomous Database.",
      "properties": {
        "timestamp": {
          "type": "string",
          "format": "date-time",
          "description": "The time to restore the database to."
        }
      },
      "required": [
        "timestamp"
      ]
    },
    "RetentionPeriod": {
      "type": "integer",
      "format": "int32",
      "description": "Retention period, in days, for backups.",
      "minimum": 90,
      "maximum": 2558
    },
    "RoleType": {
      "type": "string",
      "description": "Role type enum.",
      "enum": [
        "Primary",
        "Standby",
        "DisabledStandby",
        "BackupCopy",
        "SnapshotStandby"
      ],
      "x-ms-enum": {
        "name": "RoleType",
        "modelAsString": true,
        "values": [
          {
            "name": "Primary",
            "value": "Primary",
            "description": "Primary role"
          },
          {
            "name": "Standby",
            "value": "Standby",
            "description": "Standby role"
          },
          {
            "name": "DisabledStandby",
            "value": "DisabledStandby",
            "description": "DisabledStandby role"
          },
          {
            "name": "BackupCopy",
            "value": "BackupCopy",
            "description": "BackupCopy role"
          },
          {
            "name": "SnapshotStandby",
            "value": "SnapshotStandby",
            "description": "SnapshotStandby role"
          }
        ]
      }
    },
    "SaasSubscriptionDetails": {
      "type": "object",
      "description": "SaaS Subscription Details model",
      "properties": {
        "id": {
          "type": "string",
          "description": "Purchased SaaS subscription ID",
          "readOnly": true
        },
        "subscriptionName": {
          "type": "string",
          "description": "SaaS subscription name",
          "readOnly": true
        },
        "timeCreated": {
          "type": "string",
          "format": "date-time",
          "description": "Creation Date and Time",
          "readOnly": true
        },
        "offerId": {
          "type": "string",
          "description": "Purchased offer ID",
          "readOnly": true
        },
        "planId": {
          "type": "string",
          "description": "Purchased offer's plan ID",
          "readOnly": true
        },
        "saasSubscriptionStatus": {
          "type": "string",
          "description": "Indicates the status of the Subscription.",
          "readOnly": true
        },
        "publisherId": {
          "type": "string",
          "description": "Publisher ID",
          "readOnly": true
        },
        "purchaserEmailId": {
          "type": "string",
          "description": "Purchaser Email ID",
          "readOnly": true
        },
        "purchaserTenantId": {
          "type": "string",
          "description": "Purchaser Tenant ID",
          "readOnly": true
        },
        "termUnit": {
          "type": "string",
          "description": "Purchase Term Unit",
          "readOnly": true
        },
        "isAutoRenew": {
          "type": "boolean",
          "description": "AutoRenew flag",
          "readOnly": true
        },
        "isFreeTrial": {
          "type": "boolean",
          "description": "FreeTrial flag",
          "readOnly": true
        }
      }
    },
    "ScheduledOperationsType": {
      "type": "object",
      "description": "The list of scheduled operations.",
      "properties": {
        "dayOfWeek": {
          "$ref": "#/definitions/DayOfWeek",
          "description": "Day of week"
        },
        "scheduledStartTime": {
          "type": "string",
          "description": "auto start time. value must be of ISO-8601 format HH:mm",
          "minLength": 1,
          "maxLength": 50
        },
        "scheduledStopTime": {
          "type": "string",
          "description": "auto stop time. value must be of ISO-8601 format HH:mm",
          "minLength": 1,
          "maxLength": 50
        }
      },
      "required": [
        "dayOfWeek"
      ]
    },
    "ScheduledOperationsTypeUpdate": {
      "type": "object",
      "description": "The list of scheduled operations.",
      "properties": {
        "dayOfWeek": {
          "$ref": "#/definitions/DayOfWeekUpdate",
          "description": "Day of week"
        },
        "scheduledStartTime": {
          "type": "string",
          "description": "auto start time. value must be of ISO-8601 format HH:mm",
          "minLength": 1,
          "maxLength": 50
        },
        "scheduledStopTime": {
          "type": "string",
          "description": "auto stop time. value must be of ISO-8601 format HH:mm",
          "minLength": 1,
          "maxLength": 50
        }
      }
    },
    "SessionModeType": {
      "type": "string",
      "description": "Session mode type enum.",
      "enum": [
        "Direct",
        "Redirect"
      ],
      "x-ms-enum": {
        "name": "SessionModeType",
        "modelAsString": true,
        "values": [
          {
            "name": "Direct",
            "value": "Direct",
            "description": "Direct session mode"
          },
          {
            "name": "Redirect",
            "value": "Redirect",
            "description": "Redirect session mode"
          }
        ]
      }
    },
    "SourceType": {
      "type": "string",
      "description": "Source type enum.",
      "enum": [
        "None",
        "Database",
        "BackupFromId",
        "BackupFromTimestamp",
        "CloneToRefreshable",
        "CrossRegionDataguard",
        "CrossRegionDisasterRecovery"
      ],
      "x-ms-enum": {
        "name": "SourceType",
        "modelAsString": true,
        "values": [
          {
            "name": "None",
            "value": "None",
            "description": "None source"
          },
          {
            "name": "Database",
            "value": "Database",
            "description": "Database source"
          },
          {
            "name": "BackupFromId",
            "value": "BackupFromId",
            "description": "Backup from ID source"
          },
          {
            "name": "BackupFromTimestamp",
            "value": "BackupFromTimestamp",
            "description": "Backup from timestamp source"
          },
          {
            "name": "CloneToRefreshable",
            "value": "CloneToRefreshable",
            "description": "Clone to refreshable source"
          },
          {
            "name": "CrossRegionDataguard",
            "value": "CrossRegionDataguard",
            "description": "Cross region dataguard source"
          },
          {
            "name": "CrossRegionDisasterRecovery",
            "value": "CrossRegionDisasterRecovery",
            "description": "cross region disaster recovery source"
          }
        ]
      }
    },
    "SubnetId": {
      "type": "string",
      "format": "arm-id",
      "description": "A type definition that refers the id to an Azure Resource Manager resource.",
      "x-ms-arm-id-details": {
        "allowedResources": [
          {
            "type": "Microsoft.Network/virtualNetworks/subnets"
          }
        ]
      }
    },
    "SyntaxFormatType": {
      "type": "string",
      "description": "Syntax format type enum.",
      "enum": [
        "Long",
        "Ezconnect",
        "Ezconnectplus"
      ],
      "x-ms-enum": {
        "name": "SyntaxFormatType",
        "modelAsString": true,
        "values": [
          {
            "name": "Long",
            "value": "Long",
            "description": "Long format"
          },
          {
            "name": "Ezconnect",
            "value": "Ezconnect",
            "description": "Ezconnect format"
          },
          {
            "name": "Ezconnectplus",
            "value": "Ezconnectplus",
            "description": "Ezconnectplus format"
          }
        ]
      }
    },
    "SystemVersion": {
      "type": "object",
      "description": "SystemVersion resource Definition",
      "properties": {
        "properties": {
          "$ref": "#/definitions/SystemVersionProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "SystemVersionListResult": {
      "type": "object",
      "description": "The response of a SystemVersion list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The SystemVersion items on this page",
          "items": {
            "$ref": "#/definitions/SystemVersion"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "SystemVersionProperties": {
      "type": "object",
      "description": "System Version Resource model",
      "properties": {
        "systemVersion": {
          "type": "string",
          "description": "A valid Oracle System Version",
          "readOnly": true
        }
      }
    },
    "SystemVersionsFilter": {
      "type": "object",
      "description": "SystemVersions filter",
      "properties": {
        "giVersion": {
          "type": "string",
          "description": "Grid Infrastructure version"
        },
        "shape": {
          "type": "string",
          "description": "Exadata shape"
        },
        "isLatestVersion": {
          "type": "boolean",
          "description": "Check If we have to list only latest versions"
        }
      },
      "required": [
        "giVersion",
        "shape"
      ]
    },
    "TlsAuthenticationType": {
      "type": "string",
      "description": "TLS authentication type enum.",
      "enum": [
        "Server",
        "Mutual"
      ],
      "x-ms-enum": {
        "name": "TlsAuthenticationType",
        "modelAsString": true,
        "values": [
          {
            "name": "Server",
            "value": "Server",
            "description": "Server authentication"
          },
          {
            "name": "Mutual",
            "value": "Mutual",
            "description": "Mutual TLS"
          }
        ]
      }
    },
    "UpdateAction": {
      "type": "string",
      "description": "Update action enum",
      "enum": [
        "RollingApply",
        "NonRollingApply",
        "PreCheck",
        "RollBack"
      ],
      "x-ms-enum": {
        "name": "UpdateAction",
        "modelAsString": true,
        "values": [
          {
            "name": "RollingApply",
            "value": "RollingApply",
            "description": "Rolling apply action"
          },
          {
            "name": "NonRollingApply",
            "value": "NonRollingApply",
            "description": "Non rolling apply action"
          },
          {
            "name": "PreCheck",
            "value": "PreCheck",
            "description": "Pre-check action"
          },
          {
            "name": "RollBack",
            "value": "RollBack",
            "description": "Rollback action"
          }
        ]
      }
    },
    "ValidationError": {
      "type": "object",
      "description": "validation error",
      "properties": {
        "code": {
          "type": "string",
          "description": "error code"
        },
        "message": {
          "type": "string",
          "description": "error message"
        }
      },
      "required": [
        "code",
        "message"
      ]
    },
    "ValidationResult": {
      "type": "object",
      "description": "validation result",
      "properties": {
        "status": {
          "$ref": "#/definitions/ValidationStatus",
          "description": "validation status"
        },
        "error": {
          "$ref": "#/definitions/ValidationError",
          "description": "validation error"
        }
      },
      "required": [
        "status",
        "error"
      ]
    },
    "ValidationStatus": {
      "type": "string",
      "description": "validation status",
      "enum": [
        "Succeeded",
        "Failed"
      ],
      "x-ms-enum": {
        "name": "ValidationStatus",
        "modelAsString": true,
        "values": [
          {
            "name": "Succeeded",
            "value": "Succeeded",
            "description": "Validation succeeded"
          },
          {
            "name": "Failed",
            "value": "Failed",
            "description": "Validation failed"
          }
        ]
      },
      "readOnly": true
    },
    "VirtualNetworkAddress": {
      "type": "object",
      "description": "Virtual IP resource belonging to a vm cluster resource.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/VirtualNetworkAddressProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "VirtualNetworkAddressLifecycleState": {
      "type": "string",
      "description": "VirtualNetworkAddressLifecycleState enum",
      "enum": [
        "Provisioning",
        "Available",
        "Terminating",
        "Terminated",
        "Failed"
      ],
      "x-ms-enum": {
        "name": "VirtualNetworkAddressLifecycleState",
        "modelAsString": true,
        "values": [
          {
            "name": "Provisioning",
            "value": "Provisioning",
            "description": "Indicates that resource in Provisioning state"
          },
          {
            "name": "Available",
            "value": "Available",
            "description": "Indicates that resource in Available state"
          },
          {
            "name": "Terminating",
            "value": "Terminating",
            "description": "Indicates that resource in Terminating state"
          },
          {
            "name": "Terminated",
            "value": "Terminated",
            "description": "Indicates that resource in Terminated state"
          },
          {
            "name": "Failed",
            "value": "Failed",
            "description": "Indicates that resource in Failed state"
          }
        ]
      }
    },
    "VirtualNetworkAddressListResult": {
      "type": "object",
      "description": "The response of a VirtualNetworkAddress list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The VirtualNetworkAddress items on this page",
          "items": {
            "$ref": "#/definitions/VirtualNetworkAddress"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "VirtualNetworkAddressProperties": {
      "type": "object",
      "description": "virtualNetworkAddress resource properties",
      "properties": {
        "ipAddress": {
          "type": "string",
          "description": "Virtual network Address address.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "vmOcid": {
          "$ref": "#/definitions/Ocid",
          "description": "Virtual Machine OCID.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "ocid": {
          "$ref": "#/definitions/Ocid",
          "description": "Application VIP OCID.",
          "readOnly": true
        },
        "domain": {
          "type": "string",
          "description": "Virtual network address fully qualified domain name.",
          "readOnly": true
        },
        "lifecycleDetails": {
          "type": "string",
          "description": "Additional information about the current lifecycle state of the application virtual IP (VIP) address.",
          "readOnly": true
        },
        "provisioningState": {
          "$ref": "#/definitions/AzureResourceProvisioningState",
          "description": "Azure resource provisioning state.",
          "readOnly": true
        },
        "lifecycleState": {
          "$ref": "#/definitions/VirtualNetworkAddressLifecycleState",
          "description": "virtual network address lifecycle state.",
          "readOnly": true
        },
        "timeAssigned": {
          "type": "string",
          "format": "date-time",
          "description": "The date and time when the create operation for the application virtual IP (VIP) address completed.",
          "readOnly": true
        }
      }
    },
    "VnetId": {
      "type": "string",
      "format": "arm-id",
      "description": "A type definition that refers the id to an Azure Resource Manager resource.",
      "x-ms-arm-id-details": {
        "allowedResources": [
          {
            "type": "Microsoft.Network/virtualNetworks"
          }
        ]
      }
    },
    "WorkloadType": {
      "type": "string",
      "description": "WorkloadType enum",
      "enum": [
        "OLTP",
        "DW",
        "AJD",
        "APEX"
      ],
      "x-ms-enum": {
        "name": "WorkloadType",
        "modelAsString": true,
        "values": [
          {
            "name": "OLTP",
            "value": "OLTP",
            "description": "OLTP - indicates an Autonomous Transaction Processing database"
          },
          {
            "name": "DW",
            "value": "DW",
            "description": "DW - indicates an Autonomous Data Warehouse database"
          },
          {
            "name": "AJD",
            "value": "AJD",
            "description": "AJD - indicates an Autonomous JSON Database"
          },
          {
            "name": "APEX",
            "value": "APEX",
            "description": "APEX - indicates an Autonomous Database with the Oracle APEX Application Development workload type."
          }
        ]
      }
    },
    "ZoneType": {
      "type": "string",
      "description": "Zone type enum",
      "enum": [
        "Primary",
        "Secondary"
      ],
      "x-ms-enum": {
        "name": "ZoneType",
        "modelAsString": true,
        "values": [
          {
            "name": "Primary",
            "value": "Primary",
            "description": "Primary zone"
          },
          {
            "name": "Secondary",
            "value": "Secondary",
            "description": "Secondary zone"
          }
        ]
      }
    },
    "aclString": {
      "type": "string",
      "description": "The client IP access control list (ACL). This is an array of CIDR notations and/or IP addresses. Values should be separate strings, separated by commas. Example: ['1.1.1.1','1.1.1.0/24','1.1.2.25']",
      "minLength": 1,
      "maxLength": 1024
    }
  },
  "parameters": {}
}
