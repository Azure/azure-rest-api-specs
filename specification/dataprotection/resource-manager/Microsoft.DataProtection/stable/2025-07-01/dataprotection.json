{
  "swagger": "2.0",
  "info": {
    "title": "Data Protection Client",
    "version": "2025-07-01",
    "description": "Open API 2.0 Specs for Azure Data Protection service",
    "x-typespec-generated": [
      {
        "emitter": "@azure-tools/typespec-autorest"
      }
    ]
  },
  "schemes": [
    "https"
  ],
  "host": "management.azure.com",
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "description": "Azure Active Directory OAuth2 Flow.",
      "flow": "implicit",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "tags": [
    {
      "name": "Operations"
    },
    {
      "name": "BackupInstances"
    },
    {
      "name": "BackupVaultResources"
    },
    {
      "name": "BackupVaultOperationResults"
    },
    {
      "name": "BaseBackupPolicyResources"
    },
    {
      "name": "BackupInstanceResources"
    },
    {
      "name": "AzureBackupRecoveryPointResources"
    },
    {
      "name": "AzureBackupJobResources"
    },
    {
      "name": "DeletedBackupInstanceResources"
    },
    {
      "name": "ResourceGuards"
    },
    {
      "name": "ResourceGuardResources"
    },
    {
      "name": "DppBaseResourceOperationGroup"
    },
    {
      "name": "ResourceGuardProxyBaseResources"
    }
  ],
  "paths": {
    "/{resourceId}/providers/Microsoft.DataProtection/backupInstances": {
      "get": {
        "operationId": "BackupInstancesExtensionRouting_List",
        "description": "Gets a list of backup instances associated with a tracked resource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "resourceId",
            "in": "path",
            "description": "ARM path of the resource to be protected using Microsoft.DataProtection",
            "required": true,
            "type": "string",
            "x-ms-skip-url-encoding": true
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/BackupInstanceResourceList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "List BackupInstances associated with an azure resource": {
            "$ref": "./examples/BackupInstanceOperations/ListBackupInstancesExtensionRouting.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/providers/Microsoft.DataProtection/operations": {
      "get": {
        "operationId": "DataProtectionOperations_List",
        "tags": [
          "Operations"
        ],
        "description": "List the operations for the provider",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/OperationListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Returns the list of supported REST operations.": {
            "$ref": "./examples/Operations/List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.DataProtection/backupVaults": {
      "get": {
        "operationId": "BackupVaults_GetInSubscription",
        "tags": [
          "BackupVaultResources"
        ],
        "description": "Returns resource collection belonging to a subscription.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/BackupVaultResourceList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Get BackupVaults in Subscription": {
            "$ref": "./examples/VaultCRUD/GetBackupVaultsInSubscription.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.DataProtection/locations/{location}/checkFeatureSupport": {
      "post": {
        "operationId": "DataProtection_CheckFeatureSupport",
        "summary": "Validates if a feature is supported",
        "description": "Validates if a feature is supported",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/LocationParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "The request body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FeatureValidationRequestBase"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/FeatureValidationResponseBase"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Check Azure Vm Backup Feature Support": {
            "$ref": "./examples/CheckfeatureSupport.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.DataProtection/locations/{location}/operationResults/{operationId}": {
      "get": {
        "operationId": "OperationResult_Get",
        "summary": "Gets the operation status for a resource.",
        "description": "Gets the operation result for a resource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "operationId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/LocationParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/OperationJobExtendedInfo"
            }
          },
          "202": {
            "description": "The request has been accepted for processing, but processing has not yet completed.",
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string"
              },
              "Location": {
                "type": "string"
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Get OperationResult": {
            "$ref": "./examples/GetOperationResult.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.DataProtection/locations/{location}/operationStatus/{operationId}": {
      "get": {
        "operationId": "OperationStatus_Get",
        "summary": "Gets the operation status for a resource.",
        "description": "Gets the operation status for a resource.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/LocationParameter"
          },
          {
            "name": "operationId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/OperationResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Get OperationStatus": {
            "$ref": "./examples/GetOperationStatus.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.DataProtection/resourceGuards": {
      "get": {
        "operationId": "ResourceGuards_GetResourcesInSubscription",
        "tags": [
          "ResourceGuardResources"
        ],
        "description": "Returns ResourceGuards collection belonging to a subscription.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ResourceGuardResourceList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Get ResourceGuards in Subscription": {
            "$ref": "./examples/ResourceGuardCRUD/GetResourceGuardsInSubscription.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataProtection/backupVaults": {
      "get": {
        "operationId": "BackupVaults_GetInResourceGroup",
        "tags": [
          "BackupVaultOperationResults"
        ],
        "description": "Returns resource collection belonging to a resource group.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/BackupVaultResourceList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Get BackupVaults in ResourceGroup": {
            "$ref": "./examples/VaultCRUD/GetBackupVaultsInResourceGroup.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataProtection/backupVaults/{vaultName}": {
      "get": {
        "operationId": "BackupVaults_Get",
        "tags": [
          "BackupVaultResources"
        ],
        "description": "Returns a resource belonging to a resource group.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "vaultName",
            "in": "path",
            "description": "The name of the BackupVaultResource",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/BackupVaultResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Get BackupVault": {
            "$ref": "./examples/VaultCRUD/GetBackupVault.json"
          },
          "Get BackupVault With CMK": {
            "$ref": "./examples/VaultCRUD/GetBackupVaultWithCMK.json"
          },
          "Get BackupVault With MSI": {
            "$ref": "./examples/VaultCRUD/GetBackupVaultWithMSI.json"
          }
        }
      },
      "put": {
        "operationId": "BackupVaults_CreateOrUpdate",
        "tags": [
          "BackupVaultResources"
        ],
        "description": "Creates or updates a BackupVault resource belonging to a resource group.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "vaultName",
            "in": "path",
            "description": "The name of the BackupVaultResource",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-ms-authorization-auxiliary",
            "in": "header",
            "required": false,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Request body for operation",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BackupVaultResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'BackupVaultResource' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/BackupVaultResource"
            }
          },
          "201": {
            "description": "Resource 'BackupVaultResource' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/BackupVaultResource"
            },
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Create BackupVault": {
            "$ref": "./examples/VaultCRUD/PutBackupVault.json"
          },
          "Create BackupVault With CMK": {
            "$ref": "./examples/VaultCRUD/PutBackupVaultWithCMK.json"
          },
          "Create BackupVault With MSI": {
            "$ref": "./examples/VaultCRUD/PutBackupVaultWithMSI.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location",
          "final-state-schema": "#/definitions/BackupVaultResource"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "BackupVaults_Update",
        "tags": [
          "BackupVaultResources"
        ],
        "description": "Updates a BackupVault resource belonging to a resource group. For example, updating tags for a resource.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "vaultName",
            "in": "path",
            "description": "The name of the BackupVaultResource",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-ms-authorization-auxiliary",
            "in": "header",
            "required": false,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Request body for operation",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PatchResourceRequestInput"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/BackupVaultResource"
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Patch BackupVault": {
            "$ref": "./examples/VaultCRUD/PatchBackupVault.json"
          },
          "Patch BackupVault with CMK": {
            "$ref": "./examples/VaultCRUD/PatchBackupVaultWithCMK.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location",
          "final-state-schema": "#/definitions/BackupVaultResource"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "BackupVaults_Delete",
        "tags": [
          "BackupVaultResources"
        ],
        "description": "Deletes a BackupVault resource from the resource group.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "vaultName",
            "in": "path",
            "description": "The name of the BackupVaultResource",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Delete BackupVault": {
            "$ref": "./examples/VaultCRUD/DeleteBackupVault.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataProtection/backupVaults/{vaultName}/backupInstances": {
      "get": {
        "operationId": "BackupInstances_List",
        "tags": [
          "BackupInstances"
        ],
        "description": "Gets a backup instances belonging to a backup vault",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "vaultName",
            "in": "path",
            "description": "The name of the backup vault.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/BackupInstanceResourceList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "List BackupInstances in a Vault": {
            "$ref": "./examples/BackupInstanceOperations/ListBackupInstances.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataProtection/backupVaults/{vaultName}/backupInstances/{backupInstanceName}": {
      "get": {
        "operationId": "BackupInstances_Get",
        "tags": [
          "BackupInstanceResources"
        ],
        "description": "Gets a backup instance with name in a backup vault",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "vaultName",
            "in": "path",
            "description": "The name of the backup vault.",
            "required": true,
            "type": "string",
            "minLength": 2,
            "maxLength": 50,
            "pattern": "^[A-Za-z][-A-Za-z0-9]*[A-Za-z0-9]$"
          },
          {
            "name": "backupInstanceName",
            "in": "path",
            "description": "The name of the BackupInstanceResource",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/BackupInstanceResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Get BackupInstance": {
            "$ref": "./examples/BackupInstanceOperations/GetBackupInstance.json"
          },
          "Get BackupInstance for ADLS Blob": {
            "$ref": "./examples/BackupInstanceOperations/GetBackupInstance_ADLSBlobBackupDatasourceParameters.json"
          }
        }
      },
      "put": {
        "operationId": "BackupInstances_CreateOrUpdate",
        "tags": [
          "BackupInstanceResources"
        ],
        "description": "Create or update a backup instance in a backup vault",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "vaultName",
            "in": "path",
            "description": "The name of the backup vault.",
            "required": true,
            "type": "string",
            "minLength": 2,
            "maxLength": 50,
            "pattern": "^[A-Za-z][-A-Za-z0-9]*[A-Za-z0-9]$"
          },
          {
            "name": "backupInstanceName",
            "in": "path",
            "description": "The name of the BackupInstanceResource",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-ms-authorization-auxiliary",
            "in": "header",
            "required": false,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Request body for operation",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BackupInstanceResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'BackupInstanceResource' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/BackupInstanceResource"
            }
          },
          "201": {
            "description": "Resource 'BackupInstanceResource' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/BackupInstanceResource"
            },
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "format": "uri",
                "description": "A link to the status monitor"
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Create BackupInstance": {
            "$ref": "./examples/BackupInstanceOperations/PutBackupInstance.json"
          },
          "Create BackupInstance With ADLSBlobBackupDatasourceParameters": {
            "$ref": "./examples/BackupInstanceOperations/PutBackupInstance_ADLSBlobBackupDatasourceParameters.json"
          },
          "Create BackupInstance With KubernetesClusterBackupDatasourceParameters": {
            "$ref": "./examples/BackupInstanceOperations/PutBackupInstance_KubernetesClusterBackupDatasourceParameters.json"
          },
          "Create BackupInstance to perform critical operation With MUA": {
            "$ref": "./examples/BackupInstanceOperations/PutBackupInstance_ResourceGuardEnabled.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location",
          "final-state-schema": "#/definitions/BackupInstanceResource"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "BackupInstances_Delete",
        "tags": [
          "BackupInstanceResources"
        ],
        "description": "Delete a backup instance in a backup vault",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "vaultName",
            "in": "path",
            "description": "The name of the backup vault.",
            "required": true,
            "type": "string",
            "minLength": 2,
            "maxLength": 50,
            "pattern": "^[A-Za-z][-A-Za-z0-9]*[A-Za-z0-9]$"
          },
          {
            "name": "backupInstanceName",
            "in": "path",
            "description": "The name of the BackupInstanceResource",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-ms-authorization-auxiliary",
            "in": "header",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "format": "uri",
                "description": "A link to the status monitor"
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Delete BackupInstance": {
            "$ref": "./examples/BackupInstanceOperations/DeleteBackupInstance.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataProtection/backupVaults/{vaultName}/backupInstances/{backupInstanceName}/backup": {
      "post": {
        "operationId": "BackupInstances_AdhocBackup",
        "tags": [
          "BackupInstanceResources"
        ],
        "description": "Trigger adhoc backup",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "vaultName",
            "in": "path",
            "description": "The name of the backup vault.",
            "required": true,
            "type": "string",
            "minLength": 2,
            "maxLength": 50,
            "pattern": "^[A-Za-z][-A-Za-z0-9]*[A-Za-z0-9]$"
          },
          {
            "name": "backupInstanceName",
            "in": "path",
            "description": "The name of the BackupInstanceResource",
            "required": true,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Request body for operation",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TriggerBackupRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/OperationJobExtendedInfo"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "format": "uri",
                "description": "A link to the status monitor"
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Trigger Adhoc Backup": {
            "$ref": "./examples/BackupInstanceOperations/TriggerBackup.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location",
          "final-state-schema": "#/definitions/OperationJobExtendedInfo"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataProtection/backupVaults/{vaultName}/backupInstances/{backupInstanceName}/findRestorableTimeRanges": {
      "post": {
        "operationId": "RestorableTimeRanges_Find",
        "tags": [
          "BackupInstanceResources"
        ],
        "description": "",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "vaultName",
            "in": "path",
            "description": "The name of the backup vault.",
            "required": true,
            "type": "string",
            "minLength": 2,
            "maxLength": 50,
            "pattern": "^[A-Za-z][-A-Za-z0-9]*[A-Za-z0-9]$"
          },
          {
            "name": "backupInstanceName",
            "in": "path",
            "description": "The name of the BackupInstanceResource",
            "required": true,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Request body for operation",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AzureBackupFindRestorableTimeRangesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/AzureBackupFindRestorableTimeRangesResponseResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Find Restorable Time Ranges": {
            "$ref": "./examples/BackupInstanceOperations/FindRestorableTimeRanges.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataProtection/backupVaults/{vaultName}/backupInstances/{backupInstanceName}/operationResults/{operationId}": {
      "get": {
        "operationId": "BackupInstances_GetBackupInstanceOperationResult",
        "tags": [
          "BackupInstances"
        ],
        "description": "Get result of backup instance creation operation",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "vaultName",
            "in": "path",
            "description": "The name of the BackupVaultResource",
            "required": true,
            "type": "string"
          },
          {
            "name": "backupInstanceName",
            "in": "path",
            "description": "The name of the BackupInstanceResource",
            "required": true,
            "type": "string"
          },
          {
            "name": "operationId",
            "in": "path",
            "description": "The name of the BackupInstanceResource",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/BackupInstanceResource"
            }
          },
          "202": {
            "description": "The request has been accepted for processing, but processing has not yet completed."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Get BackupInstanceOperationResult": {
            "$ref": "./examples/BackupInstanceOperations/GetBackupInstanceOperationResult.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataProtection/backupVaults/{vaultName}/backupInstances/{backupInstanceName}/recoveryPoints": {
      "get": {
        "operationId": "RecoveryPoints_List",
        "tags": [
          "AzureBackupRecoveryPointResources"
        ],
        "description": "Returns a list of Recovery Points for a DataSource in a vault.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "vaultName",
            "in": "path",
            "description": "The name of the backup vault.",
            "required": true,
            "type": "string"
          },
          {
            "name": "backupInstanceName",
            "in": "path",
            "description": "The name of the backup instance.",
            "required": true,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "OData filter options.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$skipToken",
            "in": "query",
            "description": "skipToken Filter.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/AzureBackupRecoveryPointResourceList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "List Recovery Points in a Vault": {
            "$ref": "./examples/BackupInstanceOperations/ListRecoveryPoints.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataProtection/backupVaults/{vaultName}/backupInstances/{backupInstanceName}/recoveryPoints/{recoveryPointId}": {
      "get": {
        "operationId": "RecoveryPoints_Get",
        "tags": [
          "AzureBackupRecoveryPointResources"
        ],
        "description": "Gets a Recovery Point using recoveryPointId for a Datasource.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "vaultName",
            "in": "path",
            "description": "The name of the backup vault.",
            "required": true,
            "type": "string"
          },
          {
            "name": "backupInstanceName",
            "in": "path",
            "description": "The name of the backup instance.",
            "required": true,
            "type": "string"
          },
          {
            "name": "recoveryPointId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/AzureBackupRecoveryPointResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Get Recovery Point": {
            "$ref": "./examples/BackupInstanceOperations/GetRecoveryPoint.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataProtection/backupVaults/{vaultName}/backupInstances/{backupInstanceName}/rehydrate": {
      "post": {
        "operationId": "BackupInstances_TriggerRehydrate",
        "tags": [
          "BackupInstanceResources"
        ],
        "description": "rehydrate recovery point for restore for a BackupInstance",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "vaultName",
            "in": "path",
            "description": "The name of the backup vault.",
            "required": true,
            "type": "string",
            "minLength": 2,
            "maxLength": 50,
            "pattern": "^[A-Za-z][-A-Za-z0-9]*[A-Za-z0-9]$"
          },
          {
            "name": "backupInstanceName",
            "in": "path",
            "description": "The name of the BackupInstanceResource",
            "required": true,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Request body for operation",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AzureBackupRehydrationRequest"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "format": "uri",
                "description": "A link to the status monitor"
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Trigger Rehydrate": {
            "$ref": "./examples/BackupInstanceOperations/TriggerRehydrate.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataProtection/backupVaults/{vaultName}/backupInstances/{backupInstanceName}/restore": {
      "post": {
        "operationId": "BackupInstances_TriggerRestore",
        "tags": [
          "BackupInstanceResources"
        ],
        "description": "Triggers restore for a BackupInstance",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "vaultName",
            "in": "path",
            "description": "The name of the backup vault.",
            "required": true,
            "type": "string",
            "minLength": 2,
            "maxLength": 50,
            "pattern": "^[A-Za-z][-A-Za-z0-9]*[A-Za-z0-9]$"
          },
          {
            "name": "backupInstanceName",
            "in": "path",
            "description": "The name of the BackupInstanceResource",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-ms-authorization-auxiliary",
            "in": "header",
            "required": false,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Request body for operation",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AzureBackupRestoreRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/OperationJobExtendedInfo"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "format": "uri",
                "description": "A link to the status monitor"
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Trigger Restore": {
            "$ref": "./examples/BackupInstanceOperations/TriggerRestore.json"
          },
          "Trigger Restore As Files": {
            "$ref": "./examples/BackupInstanceOperations/TriggerRestoreAsFiles.json"
          },
          "Trigger Restore With Rehydration": {
            "$ref": "./examples/BackupInstanceOperations/TriggerRestoreWithRehydration.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location",
          "final-state-schema": "#/definitions/OperationJobExtendedInfo"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataProtection/backupVaults/{vaultName}/backupInstances/{backupInstanceName}/resumeBackups": {
      "post": {
        "operationId": "BackupInstances_ResumeBackups",
        "tags": [
          "BackupInstanceResources"
        ],
        "description": "This operation will resume backups for backup instance",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "vaultName",
            "in": "path",
            "description": "The name of the backup vault.",
            "required": true,
            "type": "string",
            "minLength": 2,
            "maxLength": 50,
            "pattern": "^[A-Za-z][-A-Za-z0-9]*[A-Za-z0-9]$"
          },
          {
            "name": "backupInstanceName",
            "in": "path",
            "description": "The name of the BackupInstanceResource",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded."
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "format": "uri",
                "description": "A link to the status monitor"
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "ResumeBackups": {
            "$ref": "./examples/BackupInstanceOperations/ResumeBackups.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataProtection/backupVaults/{vaultName}/backupInstances/{backupInstanceName}/resumeProtection": {
      "post": {
        "operationId": "BackupInstances_ResumeProtection",
        "tags": [
          "BackupInstanceResources"
        ],
        "description": "This operation will resume protection for a stopped backup instance",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "vaultName",
            "in": "path",
            "description": "The name of the backup vault.",
            "required": true,
            "type": "string",
            "minLength": 2,
            "maxLength": 50,
            "pattern": "^[A-Za-z][-A-Za-z0-9]*[A-Za-z0-9]$"
          },
          {
            "name": "backupInstanceName",
            "in": "path",
            "description": "The name of the BackupInstanceResource",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded."
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "format": "uri",
                "description": "A link to the status monitor"
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "ResumeProtection": {
            "$ref": "./examples/BackupInstanceOperations/ResumeProtection.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataProtection/backupVaults/{vaultName}/backupInstances/{backupInstanceName}/stopProtection": {
      "post": {
        "operationId": "BackupInstances_StopProtection",
        "tags": [
          "BackupInstanceResources"
        ],
        "description": "This operation will stop protection of a backup instance and data will be held forever",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "vaultName",
            "in": "path",
            "description": "The name of the backup vault.",
            "required": true,
            "type": "string",
            "minLength": 2,
            "maxLength": 50,
            "pattern": "^[A-Za-z][-A-Za-z0-9]*[A-Za-z0-9]$"
          },
          {
            "name": "backupInstanceName",
            "in": "path",
            "description": "The name of the BackupInstanceResource",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-ms-authorization-auxiliary",
            "in": "header",
            "required": false,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "The content of the action request",
            "required": false,
            "schema": {
              "$ref": "#/definitions/StopProtectionRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded."
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "format": "uri",
                "description": "A link to the status monitor"
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "StopProtection": {
            "$ref": "./examples/BackupInstanceOperations/StopProtection.json"
          },
          "StopProtection with MUA": {
            "$ref": "./examples/BackupInstanceOperations/StopProtection_ResourceGuardEnabled.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataProtection/backupVaults/{vaultName}/backupInstances/{backupInstanceName}/suspendBackups": {
      "post": {
        "operationId": "BackupInstances_SuspendBackups",
        "tags": [
          "BackupInstanceResources"
        ],
        "description": "This operation will stop backup for a backup instance and retains the backup data as per the policy (except latest Recovery point, which will be retained forever)",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "vaultName",
            "in": "path",
            "description": "The name of the backup vault.",
            "required": true,
            "type": "string",
            "minLength": 2,
            "maxLength": 50,
            "pattern": "^[A-Za-z][-A-Za-z0-9]*[A-Za-z0-9]$"
          },
          {
            "name": "backupInstanceName",
            "in": "path",
            "description": "The name of the BackupInstanceResource",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-ms-authorization-auxiliary",
            "in": "header",
            "required": false,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "The content of the action request",
            "required": false,
            "schema": {
              "$ref": "#/definitions/SuspendBackupRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded."
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "format": "uri",
                "description": "A link to the status monitor"
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "SuspendBackups": {
            "$ref": "./examples/BackupInstanceOperations/SuspendBackups.json"
          },
          "SuspendBackups with MUA": {
            "$ref": "./examples/BackupInstanceOperations/SuspendBackup_ResourceGuardEnabled.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataProtection/backupVaults/{vaultName}/backupInstances/{backupInstanceName}/sync": {
      "post": {
        "operationId": "BackupInstances_SyncBackupInstance",
        "tags": [
          "BackupInstanceResources"
        ],
        "description": "Sync backup instance again in case of failure\nThis action will retry last failed operation and will bring backup instance to valid state",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "vaultName",
            "in": "path",
            "description": "The name of the backup vault.",
            "required": true,
            "type": "string",
            "minLength": 2,
            "maxLength": 50,
            "pattern": "^[A-Za-z][-A-Za-z0-9]*[A-Za-z0-9]$"
          },
          {
            "name": "backupInstanceName",
            "in": "path",
            "description": "The name of the BackupInstanceResource",
            "required": true,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Request body for operation",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SyncBackupInstanceRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded."
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "format": "uri",
                "description": "A link to the status monitor"
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Sync BackupInstance": {
            "$ref": "./examples/BackupInstanceOperations/SyncBackupInstance.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataProtection/backupVaults/{vaultName}/backupInstances/{backupInstanceName}/validateForModifyBackup": {
      "post": {
        "operationId": "BackupInstances_ValidateForModifyBackup",
        "tags": [
          "BackupInstanceResources"
        ],
        "description": "Validate whether update for backup instance will be successful or not",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "vaultName",
            "in": "path",
            "description": "The name of the backup vault.",
            "required": true,
            "type": "string",
            "minLength": 2,
            "maxLength": 50,
            "pattern": "^[A-Za-z][-A-Za-z0-9]*[A-Za-z0-9]$"
          },
          {
            "name": "backupInstanceName",
            "in": "path",
            "description": "The name of the BackupInstanceResource",
            "required": true,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Request body for operation",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ValidateForModifyBackupRequest"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "format": "uri",
                "description": "A link to the status monitor"
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Validate For Modify Backup": {
            "$ref": "./examples/BackupInstanceOperations/ValidateForModifyBackup.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataProtection/backupVaults/{vaultName}/backupInstances/{backupInstanceName}/validateRestore": {
      "post": {
        "operationId": "BackupInstances_ValidateForRestore",
        "tags": [
          "BackupInstanceResources"
        ],
        "description": "Validates if Restore can be triggered for a DataSource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "vaultName",
            "in": "path",
            "description": "The name of the backup vault.",
            "required": true,
            "type": "string",
            "minLength": 2,
            "maxLength": 50,
            "pattern": "^[A-Za-z][-A-Za-z0-9]*[A-Za-z0-9]$"
          },
          {
            "name": "backupInstanceName",
            "in": "path",
            "description": "The name of the BackupInstanceResource",
            "required": true,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Request body for operation",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ValidateRestoreRequestObject"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/OperationJobExtendedInfo"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "format": "uri",
                "description": "A link to the status monitor"
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Validate Restore": {
            "$ref": "./examples/BackupInstanceOperations/ValidateRestore.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location",
          "final-state-schema": "#/definitions/OperationJobExtendedInfo"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataProtection/backupVaults/{vaultName}/backupJobs": {
      "get": {
        "operationId": "Jobs_List",
        "tags": [
          "AzureBackupJobResources"
        ],
        "description": "Returns list of jobs belonging to a backup vault",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "vaultName",
            "in": "path",
            "description": "The name of the backup vault.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/AzureBackupJobResourceList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Get Jobs": {
            "$ref": "./examples/JobCRUD/ListJobs.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataProtection/backupVaults/{vaultName}/backupJobs/{jobId}": {
      "get": {
        "operationId": "Jobs_Get",
        "tags": [
          "AzureBackupJobResources"
        ],
        "description": "Gets a job with id in a backup vault",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "vaultName",
            "in": "path",
            "description": "The name of the backup vault.",
            "required": true,
            "type": "string"
          },
          {
            "name": "jobId",
            "in": "path",
            "description": "The Job ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000).",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/AzureBackupJobResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Get Job": {
            "$ref": "./examples/JobCRUD/GetJob.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataProtection/backupVaults/{vaultName}/backupJobs/operations/{operationId}": {
      "get": {
        "operationId": "ExportJobsOperationResult_Get",
        "tags": [
          "BackupVaultResources"
        ],
        "description": "Gets the operation result of operation triggered by Export Jobs API. If the operation is successful, then it also contains URL of a Blob and a SAS key to access the same. The blob contains exported jobs in JSON serialized format.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "vaultName",
            "in": "path",
            "description": "The name of the BackupVaultResource",
            "required": true,
            "type": "string"
          },
          {
            "name": "operationId",
            "in": "path",
            "description": "OperationID which represents the export job.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ExportJobsResult"
            }
          },
          "202": {
            "description": "The request has been accepted for processing, but processing has not yet completed."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Get Export Jobs Operation Result": {
            "$ref": "./examples/JobCRUD/GetExportJobsOperationResult.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataProtection/backupVaults/{vaultName}/backupPolicies": {
      "get": {
        "operationId": "BackupPolicies_List",
        "tags": [
          "BaseBackupPolicyResources"
        ],
        "description": "Returns list of backup policies belonging to a backup vault",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "vaultName",
            "in": "path",
            "description": "The name of the backup vault.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/BaseBackupPolicyResourceList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "List BackupPolicy": {
            "$ref": "./examples/PolicyCRUD/ListBackupPolicy.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataProtection/backupVaults/{vaultName}/backupPolicies/{backupPolicyName}": {
      "get": {
        "operationId": "BackupPolicies_Get",
        "tags": [
          "BaseBackupPolicyResources"
        ],
        "description": "Gets a backup policy belonging to a backup vault",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "vaultName",
            "in": "path",
            "description": "The name of the backup vault.",
            "required": true,
            "type": "string"
          },
          {
            "name": "backupPolicyName",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/BaseBackupPolicyResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Get BackupPolicy": {
            "$ref": "./examples/PolicyCRUD/GetBackupPolicy.json"
          }
        }
      },
      "put": {
        "operationId": "BackupPolicies_CreateOrUpdate",
        "tags": [
          "BaseBackupPolicyResources"
        ],
        "description": "Creates or Updates a backup policy belonging to a backup vault",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "vaultName",
            "in": "path",
            "description": "The name of the backup vault.",
            "required": true,
            "type": "string"
          },
          {
            "name": "backupPolicyName",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Request body for operation",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BaseBackupPolicyResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'BaseBackupPolicyResource' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/BaseBackupPolicyResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "CreateOrUpdate BackupPolicy": {
            "$ref": "./examples/PolicyCRUD/CreateOrUpdateBackupPolicy.json"
          }
        }
      },
      "delete": {
        "operationId": "BackupPolicies_Delete",
        "tags": [
          "BaseBackupPolicyResources"
        ],
        "description": "Deletes a backup policy belonging to a backup vault",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "vaultName",
            "in": "path",
            "description": "The name of the backup vault.",
            "required": true,
            "type": "string"
          },
          {
            "name": "backupPolicyName",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Delete BackupPolicy": {
            "$ref": "./examples/PolicyCRUD/DeleteBackupPolicy.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataProtection/backupVaults/{vaultName}/backupResourceGuardProxies": {
      "get": {
        "operationId": "DppResourceGuardProxy_List",
        "tags": [
          "ResourceGuardProxyBaseResources"
        ],
        "description": "Returns the list of ResourceGuardProxies associated with the vault",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "vaultName",
            "in": "path",
            "description": "The name of the backup vault.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ResourceGuardProxyBaseResourceList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Get ResourceGuardProxies": {
            "$ref": "./examples/ResourceGuardProxyCRUD/ListResourceGuardProxy.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataProtection/backupVaults/{vaultName}/backupResourceGuardProxies/{resourceGuardProxyName}": {
      "get": {
        "operationId": "DppResourceGuardProxy_Get",
        "tags": [
          "ResourceGuardProxyBaseResources"
        ],
        "description": "Returns the ResourceGuardProxy object associated with the vault, and that matches the name in the request",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "vaultName",
            "in": "path",
            "description": "The name of the backup vault.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGuardProxyName",
            "in": "path",
            "description": "name of the resource guard proxy",
            "required": true,
            "type": "string",
            "pattern": "^[A-Za-z0-9]*$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ResourceGuardProxyBaseResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Get ResourceGuardProxy": {
            "$ref": "./examples/ResourceGuardProxyCRUD/GetResourceGuardProxy.json"
          }
        }
      },
      "put": {
        "operationId": "DppResourceGuardProxy_CreateOrUpdate",
        "tags": [
          "ResourceGuardProxyBaseResources"
        ],
        "description": "Creates or Updates a ResourceGuardProxy",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "vaultName",
            "in": "path",
            "description": "The name of the backup vault.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGuardProxyName",
            "in": "path",
            "description": "name of the resource guard proxy",
            "required": true,
            "type": "string",
            "pattern": "^[A-Za-z0-9]*$"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Request body for operation",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ResourceGuardProxyBaseResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'ResourceGuardProxyBaseResource' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/ResourceGuardProxyBaseResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Create ResourceGuardProxy": {
            "$ref": "./examples/ResourceGuardProxyCRUD/PutResourceGuardProxy.json"
          }
        }
      },
      "delete": {
        "operationId": "DppResourceGuardProxy_Delete",
        "tags": [
          "ResourceGuardProxyBaseResources"
        ],
        "description": "Deletes the ResourceGuardProxy",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "vaultName",
            "in": "path",
            "description": "The name of the backup vault.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGuardProxyName",
            "in": "path",
            "description": "name of the resource guard proxy",
            "required": true,
            "type": "string",
            "pattern": "^[A-Za-z0-9]*$"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Delete ResourceGuardProxy": {
            "$ref": "./examples/ResourceGuardProxyCRUD/DeleteResourceGuardProxy.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataProtection/backupVaults/{vaultName}/backupResourceGuardProxies/{resourceGuardProxyName}/unlockDelete": {
      "post": {
        "operationId": "DppResourceGuardProxy_UnlockDelete",
        "tags": [
          "ResourceGuardProxyBaseResources"
        ],
        "description": "UnlockDelete call for ResourceGuardProxy, executed before one can delete it",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "vaultName",
            "in": "path",
            "description": "The name of the backup vault.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGuardProxyName",
            "in": "path",
            "description": "name of the resource guard proxy",
            "required": true,
            "type": "string",
            "pattern": "^[A-Za-z0-9]*$"
          },
          {
            "name": "x-ms-authorization-auxiliary",
            "in": "header",
            "required": false,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Request body for operation",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UnlockDeleteRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/UnlockDeleteResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "UnlockDelete ResourceGuardProxy": {
            "$ref": "./examples/ResourceGuardProxyCRUD/UnlockDeleteResourceGuardProxy.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataProtection/backupVaults/{vaultName}/deletedBackupInstances": {
      "get": {
        "operationId": "DeletedBackupInstances_List",
        "tags": [
          "DeletedBackupInstanceResources"
        ],
        "description": "Gets deleted backup instances belonging to a backup vault",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "vaultName",
            "in": "path",
            "description": "The name of the backup vault.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DeletedBackupInstanceResourceList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "List DeletedBackupInstances in a Vault": {
            "$ref": "./examples/DeletedBackupInstanceOperations/ListDeletedBackupInstances.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataProtection/backupVaults/{vaultName}/deletedBackupInstances/{backupInstanceName}": {
      "get": {
        "operationId": "DeletedBackupInstances_Get",
        "tags": [
          "DeletedBackupInstanceResources"
        ],
        "description": "Gets a deleted backup instance with name in a backup vault",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "vaultName",
            "in": "path",
            "description": "The name of the backup vault.",
            "required": true,
            "type": "string"
          },
          {
            "name": "backupInstanceName",
            "in": "path",
            "description": "The name of the deleted backup instance",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DeletedBackupInstanceResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Get DeletedBackupInstance": {
            "$ref": "./examples/DeletedBackupInstanceOperations/GetDeletedBackupInstance.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataProtection/backupVaults/{vaultName}/deletedBackupInstances/{backupInstanceName}/undelete": {
      "post": {
        "operationId": "DeletedBackupInstances_Undelete",
        "tags": [
          "DeletedBackupInstanceResources"
        ],
        "description": "A long-running resource action.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "vaultName",
            "in": "path",
            "description": "The name of the backup vault.",
            "required": true,
            "type": "string"
          },
          {
            "name": "backupInstanceName",
            "in": "path",
            "description": "The name of the deleted backup instance",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully."
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Undelete Deleted BackupInstance": {
            "$ref": "./examples/DeletedBackupInstanceOperations/UndeleteDeletedBackupInstance.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataProtection/backupVaults/{vaultName}/exportBackupJobs": {
      "post": {
        "operationId": "ExportJobs_Trigger",
        "tags": [
          "BackupVaultResources"
        ],
        "description": "Triggers export of jobs and returns an OperationID to track.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "vaultName",
            "in": "path",
            "description": "The name of the BackupVaultResource",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Trigger Export Jobs": {
            "$ref": "./examples/JobCRUD/TriggerExportJobs.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataProtection/backupVaults/{vaultName}/operationResults/{operationId}": {
      "get": {
        "operationId": "BackupVaultOperationResults_Get",
        "tags": [
          "BackupVaultOperationResults"
        ],
        "description": "Get a BackupVaultResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "vaultName",
            "in": "path",
            "description": "The name of the BackupVaultResource",
            "required": true,
            "type": "string"
          },
          {
            "name": "operationId",
            "in": "path",
            "description": "The name of the BackupVaultResource",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/BackupVaultResource"
            }
          },
          "202": {
            "description": "The request has been accepted for processing, but processing has not yet completed.",
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string"
              },
              "Location": {
                "type": "string"
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "GetOperationResult Patch": {
            "$ref": "./examples/VaultCRUD/GetOperationResultPatch.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataProtection/backupVaults/{vaultName}/operationStatus/{operationId}": {
      "get": {
        "operationId": "OperationStatusBackupVaultContext_Get",
        "tags": [
          "BackupVaultResources"
        ],
        "description": "Gets the operation status for an operation over a BackupVault's context.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "vaultName",
            "in": "path",
            "description": "The name of the BackupVaultResource",
            "required": true,
            "type": "string"
          },
          {
            "name": "operationId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/OperationResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Get OperationStatus": {
            "$ref": "./examples/GetOperationStatusVaultContext.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataProtection/backupVaults/{vaultName}/validateForBackup": {
      "post": {
        "operationId": "BackupInstances_ValidateForBackup",
        "tags": [
          "BackupVaultResources"
        ],
        "description": "Validate whether adhoc backup will be successful or not",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "vaultName",
            "in": "path",
            "description": "The name of the BackupVaultResource",
            "required": true,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Request body for operation",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ValidateForBackupRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/OperationJobExtendedInfo"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "format": "uri",
                "description": "A link to the status monitor"
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Validate For Backup": {
            "$ref": "./examples/BackupInstanceOperations/ValidateForBackup.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location",
          "final-state-schema": "#/definitions/OperationJobExtendedInfo"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataProtection/locations/{location}/checkNameAvailability": {
      "post": {
        "operationId": "BackupVaults_CheckNameAvailability",
        "summary": "API to check for resource name availability",
        "description": "API to check for resource name availability",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/LocationParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Check name availability request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CheckNameAvailabilityRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/CheckNameAvailabilityResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Check BackupVaults name availability": {
            "$ref": "./examples/VaultCRUD/CheckBackupVaultsNameAvailability.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataProtection/locations/{location}/crossRegionRestore": {
      "post": {
        "operationId": "BackupInstances_TriggerCrossRegionRestore",
        "description": "Triggers Cross Region Restore for BackupInstance.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/LocationParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Request body for trigger CRR operation",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CrossRegionRestoreRequestObject"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/OperationJobExtendedInfo"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "format": "uri",
                "description": "A link to the status monitor"
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Trigger Cross Region Restore": {
            "$ref": "./examples/CrossRegionRestore/TriggerCrossRegionRestore.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location",
          "final-state-schema": "#/definitions/OperationJobExtendedInfo"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataProtection/locations/{location}/fetchCrossRegionRestoreJob": {
      "post": {
        "operationId": "FetchCrossRegionRestoreJob_Get",
        "description": "Fetches the Cross Region Restore Job",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/LocationParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Request body for operation",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CrossRegionRestoreJobRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/AzureBackupJobResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Get Cross Region Restore Job": {
            "$ref": "./examples/CrossRegionRestore/FetchCrossRegionRestoreJob.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataProtection/locations/{location}/fetchCrossRegionRestoreJobs": {
      "post": {
        "operationId": "FetchCrossRegionRestoreJobs_List",
        "description": "Fetches list of Cross Region Restore job belonging to the vault",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/LocationParameter"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "OData filter options.",
            "required": false,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Request body for operation",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CrossRegionRestoreJobsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/AzureBackupJobResourceList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "List Cross Region Restore Jobs": {
            "$ref": "./examples/CrossRegionRestore/FetchCrossRegionRestoreJobs.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataProtection/locations/{location}/fetchSecondaryRecoveryPoints": {
      "post": {
        "operationId": "FetchSecondaryRecoveryPoints_List",
        "description": "Returns a list of Secondary Recovery Points for a DataSource in a vault, that can be used for Cross Region Restore.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/LocationParameter"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "OData filter options.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$skipToken",
            "in": "query",
            "description": "skipToken Filter.",
            "required": false,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Request body for operation",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FetchSecondaryRPsRequestParameters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/AzureBackupRecoveryPointResourceList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Fetch SecondaryRPs": {
            "$ref": "./examples/CrossRegionRestore/FetchSecondaryRPs.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataProtection/locations/{location}/validateCrossRegionRestore": {
      "post": {
        "operationId": "BackupInstances_ValidateCrossRegionRestore",
        "description": "Validates whether Cross Region Restore can be triggered for DataSource.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/LocationParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Request body for operation",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ValidateCrossRegionRestoreRequestObject"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/OperationJobExtendedInfo"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "format": "uri",
                "description": "A link to the status monitor"
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Validate Cross Region Restore": {
            "$ref": "./examples/CrossRegionRestore/ValidateCrossRegionRestore.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location",
          "final-state-schema": "#/definitions/OperationJobExtendedInfo"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataProtection/operationStatus/{operationId}": {
      "get": {
        "operationId": "OperationStatusResourceGroupContext_Get",
        "summary": "Gets the operation status for an operation over a ResourceGroup's context.",
        "description": "Gets the operation status for an operation over a ResourceGroup's context.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "operationId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/OperationResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Get OperationStatus": {
            "$ref": "./examples/GetOperationStatusRGContext.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataProtection/resourceGuards": {
      "get": {
        "operationId": "ResourceGuards_GetResourcesInResourceGroup",
        "tags": [
          "ResourceGuardResources"
        ],
        "description": "Returns ResourceGuards collection belonging to a ResourceGroup.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ResourceGuardResourceList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Get ResourceGuards in ResourceGroup": {
            "$ref": "./examples/ResourceGuardCRUD/GetResourceGuardsInResourceGroup.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataProtection/resourceGuards/{resourceGuardsName}": {
      "get": {
        "operationId": "ResourceGuards_Get",
        "tags": [
          "ResourceGuardResources"
        ],
        "description": "Returns a ResourceGuard belonging to a resource group.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "resourceGuardsName",
            "in": "path",
            "description": "The name of ResourceGuard",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ResourceGuardResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Get ResourceGuard": {
            "$ref": "./examples/ResourceGuardCRUD/GetResourceGuard.json"
          }
        }
      },
      "put": {
        "operationId": "ResourceGuards_Put",
        "tags": [
          "ResourceGuardResources"
        ],
        "description": "Creates or updates a ResourceGuard resource belonging to a resource group.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "resourceGuardsName",
            "in": "path",
            "description": "The name of ResourceGuard",
            "required": true,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Request body for operation",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ResourceGuardResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'ResourceGuardResource' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/ResourceGuardResource"
            }
          },
          "201": {
            "description": "Resource 'ResourceGuardResource' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/ResourceGuardResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Create ResourceGuard": {
            "$ref": "./examples/ResourceGuardCRUD/PutResourceGuard.json"
          }
        }
      },
      "patch": {
        "operationId": "ResourceGuards_Patch",
        "tags": [
          "ResourceGuardResources"
        ],
        "description": "Updates a ResourceGuard resource belonging to a resource group. For example, updating tags for a resource.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "resourceGuardsName",
            "in": "path",
            "description": "The name of ResourceGuard",
            "required": true,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Request body for operation",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PatchResourceGuardInput"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ResourceGuardResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Patch ResourceGuard": {
            "$ref": "./examples/ResourceGuardCRUD/PatchResourceGuard.json"
          }
        }
      },
      "delete": {
        "operationId": "ResourceGuards_Delete",
        "tags": [
          "ResourceGuardResources"
        ],
        "description": "Deletes a ResourceGuard resource from the resource group.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "resourceGuardsName",
            "in": "path",
            "description": "The name of ResourceGuard",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Delete ResourceGuard": {
            "$ref": "./examples/ResourceGuardCRUD/DeleteResourceGuard.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataProtection/resourceGuards/{resourceGuardsName}/deleteProtectedItemRequests": {
      "get": {
        "operationId": "ResourceGuards_GetDeleteProtectedItemRequestsObjects",
        "tags": [
          "DppBaseResourceOperationGroup"
        ],
        "description": "Returns collection of operation request objects for a critical operation protected by the given ResourceGuard resource.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "resourceGuardsName",
            "in": "path",
            "description": "The name of the ResourceGuardResource",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DppBaseResourceList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "List OperationsRequestObject": {
            "$ref": "./examples/ResourceGuardCRUD/ListDeleteProtectedItemRequests.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataProtection/resourceGuards/{resourceGuardsName}/deleteProtectedItemRequests/{requestName}": {
      "get": {
        "operationId": "ResourceGuards_GetDefaultDeleteProtectedItemRequestsObject",
        "tags": [
          "DppBaseResourceOperationGroup"
        ],
        "description": "Returns collection of operation request objects for a critical operation protected by the given ResourceGuard resource.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "resourceGuardsName",
            "in": "path",
            "description": "The name of the ResourceGuardResource",
            "required": true,
            "type": "string"
          },
          {
            "name": "requestName",
            "in": "path",
            "description": "The name of the DppBaseResource",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DppBaseResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Get DefaultOperationsRequestObject": {
            "$ref": "./examples/ResourceGuardCRUD/GetDefaultDeleteProtectedItemRequests.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataProtection/resourceGuards/{resourceGuardsName}/deleteResourceGuardProxyRequests": {
      "get": {
        "operationId": "ResourceGuards_GetDeleteResourceGuardProxyRequestsObjects",
        "tags": [
          "ResourceGuards"
        ],
        "description": "Returns collection of operation request objects for a critical operation protected by the given ResourceGuard resource.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "resourceGuardsName",
            "in": "path",
            "description": "The name of the ResourceGuardResource",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DppBaseResourceList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "List OperationsRequestObject": {
            "$ref": "./examples/ResourceGuardCRUD/ListDeleteResourceGuardProxyRequests.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataProtection/resourceGuards/{resourceGuardsName}/deleteResourceGuardProxyRequests/{requestName}": {
      "get": {
        "operationId": "ResourceGuards_GetDefaultDeleteResourceGuardProxyRequestsObject",
        "tags": [
          "ResourceGuards"
        ],
        "description": "Returns collection of operation request objects for a critical operation protected by the given ResourceGuard resource.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "resourceGuardsName",
            "in": "path",
            "description": "The name of the ResourceGuardResource",
            "required": true,
            "type": "string"
          },
          {
            "name": "requestName",
            "in": "path",
            "description": "The name of the DppBaseResource",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DppBaseResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Get DefaultOperationsRequestObject": {
            "$ref": "./examples/ResourceGuardCRUD/GetDefaultDeleteResourceGuardProxyRequests.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataProtection/resourceGuards/{resourceGuardsName}/disableSoftDeleteRequests": {
      "get": {
        "operationId": "ResourceGuards_GetDisableSoftDeleteRequestsObjects",
        "tags": [
          "DppBaseResourceOperationGroup"
        ],
        "description": "Returns collection of operation request objects for a critical operation protected by the given ResourceGuard resource.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "resourceGuardsName",
            "in": "path",
            "description": "The name of the ResourceGuardResource",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DppBaseResourceList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "List OperationsRequestObject": {
            "$ref": "./examples/ResourceGuardCRUD/ListDisableSoftDeleteRequests.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataProtection/resourceGuards/{resourceGuardsName}/disableSoftDeleteRequests/{requestName}": {
      "get": {
        "operationId": "ResourceGuards_GetDefaultDisableSoftDeleteRequestsObject",
        "tags": [
          "DppBaseResourceOperationGroup"
        ],
        "description": "Returns collection of operation request objects for a critical operation protected by the given ResourceGuard resource.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "resourceGuardsName",
            "in": "path",
            "description": "The name of the ResourceGuardResource",
            "required": true,
            "type": "string"
          },
          {
            "name": "requestName",
            "in": "path",
            "description": "The name of the DppBaseResource",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DppBaseResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Get DefaultOperationsRequestObject": {
            "$ref": "./examples/ResourceGuardCRUD/GetDefaultDisableSoftDeleteRequests.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataProtection/resourceGuards/{resourceGuardsName}/getBackupSecurityPINRequests": {
      "get": {
        "operationId": "ResourceGuards_GetBackupSecurityPINRequestsObjects",
        "tags": [
          "DppBaseResourceOperationGroup"
        ],
        "description": "Returns collection of operation request objects for a critical operation protected by the given ResourceGuard resource.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "resourceGuardsName",
            "in": "path",
            "description": "The name of the ResourceGuardResource",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DppBaseResourceList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "List OperationsRequestObject": {
            "$ref": "./examples/ResourceGuardCRUD/ListBackupSecurityPINRequests.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataProtection/resourceGuards/{resourceGuardsName}/getBackupSecurityPINRequests/{requestName}": {
      "get": {
        "operationId": "ResourceGuards_GetDefaultBackupSecurityPINRequestsObject",
        "tags": [
          "DppBaseResourceOperationGroup"
        ],
        "description": "Returns collection of operation request objects for a critical operation protected by the given ResourceGuard resource.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "resourceGuardsName",
            "in": "path",
            "description": "The name of the ResourceGuardResource",
            "required": true,
            "type": "string"
          },
          {
            "name": "requestName",
            "in": "path",
            "description": "The name of the DppBaseResource",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DppBaseResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Get DefaultOperationsRequestObject": {
            "$ref": "./examples/ResourceGuardCRUD/GetDefaultBackupSecurityPINRequests.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataProtection/resourceGuards/{resourceGuardsName}/updateProtectedItemRequests": {
      "get": {
        "operationId": "ResourceGuards_GetUpdateProtectedItemRequestsObjects",
        "tags": [
          "DppBaseResourceOperationGroup"
        ],
        "description": "Returns collection of operation request objects for a critical operation protected by the given ResourceGuard resource.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "resourceGuardsName",
            "in": "path",
            "description": "The name of the ResourceGuardResource",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DppBaseResourceList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "List OperationsRequestObject": {
            "$ref": "./examples/ResourceGuardCRUD/ListUpdateProtectedItemRequests.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataProtection/resourceGuards/{resourceGuardsName}/updateProtectedItemRequests/{requestName}": {
      "get": {
        "operationId": "ResourceGuards_GetDefaultUpdateProtectedItemRequestsObject",
        "tags": [
          "DppBaseResourceOperationGroup"
        ],
        "description": "Returns collection of operation request objects for a critical operation protected by the given ResourceGuard resource.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "resourceGuardsName",
            "in": "path",
            "description": "The name of the ResourceGuardResource",
            "required": true,
            "type": "string"
          },
          {
            "name": "requestName",
            "in": "path",
            "description": "The name of the DppBaseResource",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DppBaseResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Get DefaultOperationsRequestObject": {
            "$ref": "./examples/ResourceGuardCRUD/GetDefaultUpdateProtectedItemRequests.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataProtection/resourceGuards/{resourceGuardsName}/updateProtectionPolicyRequests": {
      "get": {
        "operationId": "ResourceGuards_GetUpdateProtectionPolicyRequestsObjects",
        "tags": [
          "DppBaseResourceOperationGroup"
        ],
        "description": "Returns collection of operation request objects for a critical operation protected by the given ResourceGuard resource.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "resourceGuardsName",
            "in": "path",
            "description": "The name of the ResourceGuardResource",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DppBaseResourceList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "List OperationsRequestObject": {
            "$ref": "./examples/ResourceGuardCRUD/ListUpdateProtectionPolicyRequests.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataProtection/resourceGuards/{resourceGuardsName}/updateProtectionPolicyRequests/{requestName}": {
      "get": {
        "operationId": "ResourceGuards_GetDefaultUpdateProtectionPolicyRequestsObject",
        "tags": [
          "DppBaseResourceOperationGroup"
        ],
        "description": "Returns collection of operation request objects for a critical operation protected by the given ResourceGuard resource.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "resourceGuardsName",
            "in": "path",
            "description": "The name of the ResourceGuardResource",
            "required": true,
            "type": "string"
          },
          {
            "name": "requestName",
            "in": "path",
            "description": "The name of the DppBaseResource",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DppBaseResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Get DefaultOperationsRequestObject": {
            "$ref": "./examples/ResourceGuardCRUD/GetDefaultUpdateProtectionPolicyRequests.json"
          }
        }
      }
    }
  },
  "definitions": {
    "AKSVolumeTypes": {
      "type": "string",
      "enum": [
        "AzureDisk",
        "AzureFileShareSMB"
      ],
      "x-ms-enum": {
        "name": "AKSVolumeTypes",
        "modelAsString": true,
        "values": [
          {
            "name": "AzureDisk",
            "value": "AzureDisk"
          },
          {
            "name": "AzureFileShareSMB",
            "value": "AzureFileShareSMB"
          }
        ]
      }
    },
    "AbsoluteDeleteOption": {
      "type": "object",
      "description": "Delete option with duration",
      "allOf": [
        {
          "$ref": "#/definitions/DeleteOption"
        }
      ],
      "x-ms-discriminator-value": "AbsoluteDeleteOption"
    },
    "AbsoluteMarker": {
      "type": "string",
      "enum": [
        "AllBackup",
        "FirstOfDay",
        "FirstOfMonth",
        "FirstOfWeek",
        "FirstOfYear"
      ],
      "x-ms-enum": {
        "name": "AbsoluteMarker",
        "modelAsString": true,
        "values": [
          {
            "name": "AllBackup",
            "value": "AllBackup"
          },
          {
            "name": "FirstOfDay",
            "value": "FirstOfDay"
          },
          {
            "name": "FirstOfMonth",
            "value": "FirstOfMonth"
          },
          {
            "name": "FirstOfWeek",
            "value": "FirstOfWeek"
          },
          {
            "name": "FirstOfYear",
            "value": "FirstOfYear"
          }
        ]
      }
    },
    "AdHocBackupRuleOptions": {
      "type": "object",
      "description": "Adhoc backup rules",
      "properties": {
        "ruleName": {
          "type": "string"
        },
        "triggerOption": {
          "$ref": "#/definitions/AdhocBackupTriggerOption",
          "description": "Adhoc backup trigger option"
        }
      },
      "required": [
        "ruleName",
        "triggerOption"
      ]
    },
    "AdhocBackupTriggerOption": {
      "type": "object",
      "description": "Adhoc backup trigger option",
      "properties": {
        "retentionTagOverride": {
          "type": "string"
        }
      }
    },
    "AdhocBasedTaggingCriteria": {
      "type": "object",
      "description": "Adhoc backup tagging criteria",
      "properties": {
        "tagInfo": {
          "$ref": "#/definitions/RetentionTag",
          "description": "Retention tag information"
        }
      }
    },
    "AdhocBasedTriggerContext": {
      "type": "object",
      "description": "Adhoc trigger context",
      "properties": {
        "taggingCriteria": {
          "$ref": "#/definitions/AdhocBasedTaggingCriteria",
          "description": "Tagging Criteria containing retention tag for adhoc backup."
        }
      },
      "required": [
        "taggingCriteria"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/TriggerContext"
        }
      ],
      "x-ms-discriminator-value": "AdhocBasedTriggerContext"
    },
    "AdlsBlobBackupDatasourceParameters": {
      "type": "object",
      "description": "Parameters to be used during configuration of backup of azure data lake storage account blobs",
      "allOf": [
        {
          "$ref": "#/definitions/BlobBackupDatasourceParameters"
        }
      ],
      "x-ms-discriminator-value": "AdlsBlobBackupDatasourceParameters"
    },
    "AlertsState": {
      "type": "string",
      "enum": [
        "Enabled",
        "Disabled"
      ],
      "x-ms-enum": {
        "name": "AlertsState",
        "modelAsString": true,
        "values": [
          {
            "name": "Enabled",
            "value": "Enabled"
          },
          {
            "name": "Disabled",
            "value": "Disabled"
          }
        ]
      }
    },
    "AuthCredentials": {
      "type": "object",
      "description": "Base class for different types of authentication credentials.",
      "properties": {
        "objectType": {
          "type": "string",
          "description": "Type of the specific object - used for deserializing"
        }
      },
      "discriminator": "objectType",
      "required": [
        "objectType"
      ]
    },
    "AzureBackupDiscreteRecoveryPoint": {
      "type": "object",
      "description": "Azure backup discrete RecoveryPoint",
      "properties": {
        "friendlyName": {
          "type": "string"
        },
        "recoveryPointDataStoresDetails": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RecoveryPointDataStoreDetails"
          }
        },
        "recoveryPointTime": {
          "type": "string",
          "format": "date-time"
        },
        "policyName": {
          "type": "string"
        },
        "policyVersion": {
          "type": "string"
        },
        "recoveryPointId": {
          "type": "string"
        },
        "recoveryPointType": {
          "type": "string"
        },
        "retentionTagName": {
          "type": "string"
        },
        "retentionTagVersion": {
          "type": "string"
        },
        "expiryTime": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "recoveryPointState": {
          "$ref": "#/definitions/RecoveryPointCompletionState",
          "description": "Specifies recovery point completeness. Partial (i.e., only some of the intended items were backed up), or Completed (i.e., ALL intended items were backed up)."
        }
      },
      "required": [
        "recoveryPointTime"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/AzureBackupRecoveryPoint"
        }
      ],
      "x-ms-discriminator-value": "AzureBackupDiscreteRecoveryPoint"
    },
    "AzureBackupFindRestorableTimeRangesRequest": {
      "type": "object",
      "description": "List Restore Ranges Request",
      "properties": {
        "sourceDataStoreType": {
          "$ref": "#/definitions/RestoreSourceDataStoreType",
          "description": "Gets or sets the type of the source data store."
        },
        "startTime": {
          "type": "string",
          "description": "Start time for the List Restore Ranges request. ISO 8601 format."
        },
        "endTime": {
          "type": "string",
          "description": "End time for the List Restore Ranges request. ISO 8601 format."
        }
      },
      "required": [
        "sourceDataStoreType"
      ]
    },
    "AzureBackupFindRestorableTimeRangesResponse": {
      "type": "object",
      "description": "List Restore Ranges Response",
      "properties": {
        "restorableTimeRanges": {
          "type": "array",
          "description": "Returns the Restore Ranges available on the Backup Instance.",
          "items": {
            "$ref": "#/definitions/RestorableTimeRange"
          },
          "x-ms-identifiers": []
        },
        "objectType": {
          "type": "string"
        }
      }
    },
    "AzureBackupFindRestorableTimeRangesResponseResource": {
      "type": "object",
      "description": "List Restore Ranges Response",
      "properties": {
        "properties": {
          "$ref": "#/definitions/AzureBackupFindRestorableTimeRangesResponse",
          "description": "AzureBackupFindRestorableTimeRangesResponseResource properties"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/DppResource"
        }
      ]
    },
    "AzureBackupJob": {
      "type": "object",
      "description": "AzureBackup Job Class",
      "properties": {
        "activityID": {
          "type": "string",
          "description": "Job Activity Id"
        },
        "backupInstanceFriendlyName": {
          "type": "string",
          "description": "Name of the Backup Instance"
        },
        "backupInstanceId": {
          "type": "string",
          "description": "ARM ID of the Backup Instance",
          "readOnly": true
        },
        "dataSourceId": {
          "type": "string",
          "description": "ARM ID of the DataSource"
        },
        "dataSourceLocation": {
          "type": "string",
          "description": "Location of the DataSource"
        },
        "dataSourceName": {
          "type": "string",
          "description": "User Friendly Name of the DataSource"
        },
        "dataSourceSetName": {
          "type": "string",
          "description": "Data Source Set Name of the DataSource"
        },
        "dataSourceType": {
          "type": "string",
          "description": "Type of DataSource"
        },
        "duration": {
          "type": "string",
          "description": "Total run time of the job. ISO 8601 format."
        },
        "endTime": {
          "type": "string",
          "format": "date-time",
          "description": "EndTime of the job(in UTC)",
          "readOnly": true
        },
        "errorDetails": {
          "type": "array",
          "description": "A List, detailing the errors related to the job",
          "items": {
            "$ref": "#/definitions/UserFacingError"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        },
        "extendedInfo": {
          "$ref": "#/definitions/JobExtendedInfo",
          "description": "Extended Information about the job",
          "readOnly": true
        },
        "isUserTriggered": {
          "type": "boolean",
          "description": "Indicated that whether the job is adhoc(true) or scheduled(false)"
        },
        "operation": {
          "type": "string",
          "description": "It indicates the type of Job i.e. Backup:full/log/diff ;Restore:ALR/OLR; Tiering:Backup/Archive ; Management:ConfigureProtection/UnConfigure"
        },
        "operationCategory": {
          "type": "string",
          "description": "It indicates the type of Job i.e. Backup/Restore/Tiering/Management"
        },
        "policyId": {
          "type": "string",
          "description": "ARM ID of the policy",
          "readOnly": true
        },
        "policyName": {
          "type": "string",
          "description": "Name of the policy",
          "readOnly": true
        },
        "progressEnabled": {
          "type": "boolean",
          "description": "Indicated whether progress is enabled for the job"
        },
        "progressUrl": {
          "type": "string",
          "description": "Url which contains job's progress",
          "readOnly": true
        },
        "rehydrationPriority": {
          "type": "string",
          "description": "Priority to be used for rehydration",
          "readOnly": true
        },
        "restoreType": {
          "type": "string",
          "description": "It indicates the sub type of operation i.e. in case of Restore it can be ALR/OLR",
          "readOnly": true
        },
        "sourceResourceGroup": {
          "type": "string",
          "description": "Resource Group Name of the Datasource"
        },
        "sourceSubscriptionID": {
          "type": "string",
          "description": "SubscriptionId corresponding to the DataSource"
        },
        "startTime": {
          "type": "string",
          "format": "date-time",
          "description": "StartTime of the job(in UTC)"
        },
        "status": {
          "type": "string",
          "description": "Status of the job like InProgress/Completed/Failed/Cancelled/CompletedWithWarnings/Cancelling/Paused"
        },
        "subscriptionId": {
          "type": "string",
          "description": "Subscription Id of the corresponding backup vault"
        },
        "supportedActions": {
          "type": "array",
          "description": "List of supported actions",
          "items": {
            "type": "string"
          }
        },
        "vaultName": {
          "type": "string",
          "description": "Name of the vault"
        },
        "etag": {
          "type": "string"
        },
        "sourceDataStoreName": {
          "type": "string"
        },
        "destinationDataStoreName": {
          "type": "string"
        }
      },
      "required": [
        "activityID",
        "backupInstanceFriendlyName",
        "dataSourceId",
        "dataSourceLocation",
        "dataSourceName",
        "dataSourceType",
        "isUserTriggered",
        "operation",
        "operationCategory",
        "progressEnabled",
        "sourceResourceGroup",
        "sourceSubscriptionID",
        "startTime",
        "status",
        "subscriptionId",
        "supportedActions",
        "vaultName"
      ]
    },
    "AzureBackupJobResource": {
      "type": "object",
      "description": "AzureBackup Job Resource Class",
      "properties": {
        "properties": {
          "$ref": "#/definitions/AzureBackupJob",
          "description": "AzureBackupJobResource properties"
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "AzureBackupJobResourceList": {
      "type": "object",
      "description": "List of AzureBackup Job resources",
      "properties": {
        "value": {
          "type": "array",
          "description": "List of resources.",
          "items": {
            "$ref": "#/definitions/AzureBackupJobResource"
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/DppResourceList"
        }
      ]
    },
    "AzureBackupParams": {
      "type": "object",
      "description": "Azure backup parameters",
      "properties": {
        "backupType": {
          "type": "string",
          "description": "BackupType ; Full/Incremental etc"
        }
      },
      "required": [
        "backupType"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/BackupParameters"
        }
      ],
      "x-ms-discriminator-value": "AzureBackupParams"
    },
    "AzureBackupRecoveryPoint": {
      "type": "object",
      "description": "Azure backup recoveryPoint",
      "properties": {
        "objectType": {
          "type": "string"
        }
      },
      "discriminator": "objectType",
      "required": [
        "objectType"
      ]
    },
    "AzureBackupRecoveryPointBasedRestoreRequest": {
      "type": "object",
      "description": "Azure backup recoveryPoint based restore request",
      "properties": {
        "recoveryPointId": {
          "type": "string"
        }
      },
      "required": [
        "recoveryPointId"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/AzureBackupRestoreRequest"
        }
      ],
      "x-ms-discriminator-value": "AzureBackupRecoveryPointBasedRestoreRequest"
    },
    "AzureBackupRecoveryPointResource": {
      "type": "object",
      "description": "Azure backup recoveryPoint resource",
      "properties": {
        "properties": {
          "$ref": "#/definitions/AzureBackupRecoveryPoint",
          "description": "AzureBackupRecoveryPointResource properties"
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "AzureBackupRecoveryPointResourceList": {
      "type": "object",
      "description": "Azure backup recoveryPoint resource list",
      "properties": {
        "value": {
          "type": "array",
          "description": "List of resources.",
          "items": {
            "$ref": "#/definitions/AzureBackupRecoveryPointResource"
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/DppResourceList"
        }
      ]
    },
    "AzureBackupRecoveryTimeBasedRestoreRequest": {
      "type": "object",
      "description": "AzureBackup RecoveryPointTime Based Restore Request",
      "properties": {
        "recoveryPointTime": {
          "type": "string",
          "description": "The recovery time in ISO 8601 format example - 2020-08-14T17:30:00.0000000Z."
        }
      },
      "required": [
        "recoveryPointTime"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/AzureBackupRestoreRequest"
        }
      ],
      "x-ms-discriminator-value": "AzureBackupRecoveryTimeBasedRestoreRequest"
    },
    "AzureBackupRehydrationRequest": {
      "type": "object",
      "description": "Azure Backup Rehydrate Request",
      "properties": {
        "recoveryPointId": {
          "type": "string",
          "description": "Id of the recovery point to be recovered"
        },
        "rehydrationPriority": {
          "$ref": "#/definitions/RehydrationPriority",
          "description": "Priority to be used for rehydration. Values High or Standard"
        },
        "rehydrationRetentionDuration": {
          "type": "string",
          "description": "Retention duration in ISO 8601 format i.e P10D ."
        }
      },
      "required": [
        "recoveryPointId",
        "rehydrationRetentionDuration"
      ]
    },
    "AzureBackupRestoreRequest": {
      "type": "object",
      "description": "Azure backup restore request",
      "properties": {
        "objectType": {
          "type": "string"
        },
        "restoreTargetInfo": {
          "$ref": "#/definitions/RestoreTargetInfoBase",
          "description": "Gets or sets the restore target information."
        },
        "sourceDataStoreType": {
          "$ref": "#/definitions/SourceDataStoreType",
          "description": "Gets or sets the type of the source data store."
        },
        "sourceResourceId": {
          "type": "string",
          "description": "Fully qualified Azure Resource Manager ID of the datasource which is being recovered."
        },
        "resourceGuardOperationRequests": {
          "type": "array",
          "description": "ResourceGuardOperationRequests on which LAC check will be performed",
          "items": {
            "type": "string"
          }
        },
        "identityDetails": {
          "$ref": "#/definitions/IdentityDetails",
          "description": "Contains information of the Identity Details for the BI.\nIf it is null, default will be considered as System Assigned."
        }
      },
      "discriminator": "objectType",
      "required": [
        "objectType",
        "restoreTargetInfo",
        "sourceDataStoreType"
      ]
    },
    "AzureBackupRestoreWithRehydrationRequest": {
      "type": "object",
      "description": "AzureBackup Restore with Rehydration Request",
      "properties": {
        "rehydrationPriority": {
          "$ref": "#/definitions/RehydrationPriority",
          "description": "Priority to be used for rehydration. Values High or Standard"
        },
        "rehydrationRetentionDuration": {
          "type": "string",
          "description": "Retention duration in ISO 8601 format i.e P10D ."
        }
      },
      "required": [
        "rehydrationPriority",
        "rehydrationRetentionDuration"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/AzureBackupRecoveryPointBasedRestoreRequest"
        }
      ],
      "x-ms-discriminator-value": "AzureBackupRestoreWithRehydrationRequest"
    },
    "AzureBackupRule": {
      "type": "object",
      "description": "Azure backup rule",
      "properties": {
        "backupParameters": {
          "$ref": "#/definitions/BackupParameters",
          "description": "BackupParameters base"
        },
        "dataStore": {
          "$ref": "#/definitions/DataStoreInfoBase",
          "description": "DataStoreInfo base"
        },
        "trigger": {
          "$ref": "#/definitions/TriggerContext",
          "description": "Trigger context"
        }
      },
      "required": [
        "dataStore",
        "trigger"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/BasePolicyRule"
        }
      ],
      "x-ms-discriminator-value": "AzureBackupRule"
    },
    "AzureMonitorAlertSettings": {
      "type": "object",
      "description": "Settings for Azure Monitor based alerts",
      "properties": {
        "alertsForAllJobFailures": {
          "$ref": "#/definitions/AlertsState"
        }
      }
    },
    "AzureOperationalStoreParameters": {
      "type": "object",
      "description": "Parameters for Operational-Tier DataStore",
      "properties": {
        "resourceGroupId": {
          "type": "string",
          "description": "Gets or sets the Snapshot Resource Group Uri."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/DataStoreParameters"
        }
      ],
      "x-ms-discriminator-value": "AzureOperationalStoreParameters"
    },
    "AzureRetentionRule": {
      "type": "object",
      "description": "Azure retention rule",
      "properties": {
        "isDefault": {
          "type": "boolean"
        },
        "lifecycles": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SourceLifeCycle"
          },
          "x-ms-identifiers": []
        }
      },
      "required": [
        "lifecycles"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/BasePolicyRule"
        }
      ],
      "x-ms-discriminator-value": "AzureRetentionRule"
    },
    "BCDRSecurityLevel": {
      "type": "string",
      "description": "Security Level of Backup Vault",
      "enum": [
        "Poor",
        "Fair",
        "Good",
        "Excellent",
        "NotSupported"
      ],
      "x-ms-enum": {
        "name": "BCDRSecurityLevel",
        "modelAsString": true,
        "values": [
          {
            "name": "Poor",
            "value": "Poor"
          },
          {
            "name": "Fair",
            "value": "Fair"
          },
          {
            "name": "Good",
            "value": "Good"
          },
          {
            "name": "Excellent",
            "value": "Excellent"
          },
          {
            "name": "NotSupported",
            "value": "NotSupported"
          }
        ]
      }
    },
    "BackupCriteria": {
      "type": "object",
      "description": "BackupCriteria base class",
      "properties": {
        "objectType": {
          "type": "string",
          "description": "Type of the specific object - used for deserializing"
        }
      },
      "discriminator": "objectType",
      "required": [
        "objectType"
      ]
    },
    "BackupDatasourceParameters": {
      "type": "object",
      "description": "Parameters for Backup Datasource",
      "properties": {
        "objectType": {
          "type": "string",
          "description": "Type of the specific object - used for deserializing"
        }
      },
      "discriminator": "objectType",
      "required": [
        "objectType"
      ]
    },
    "BackupInstance": {
      "type": "object",
      "description": "Backup Instance",
      "properties": {
        "friendlyName": {
          "type": "string",
          "description": "Gets or sets the Backup Instance friendly name."
        },
        "dataSourceInfo": {
          "$ref": "#/definitions/Datasource",
          "description": "Gets or sets the data source information."
        },
        "dataSourceSetInfo": {
          "$ref": "#/definitions/DatasourceSet",
          "description": "Gets or sets the data source set information."
        },
        "policyInfo": {
          "$ref": "#/definitions/PolicyInfo",
          "description": "Gets or sets the policy information."
        },
        "resourceGuardOperationRequests": {
          "type": "array",
          "description": "ResourceGuardOperationRequests on which LAC check will be performed",
          "items": {
            "type": "string"
          }
        },
        "protectionStatus": {
          "$ref": "#/definitions/ProtectionStatusDetails",
          "description": "Specifies the protection status of the resource",
          "readOnly": true
        },
        "currentProtectionState": {
          "$ref": "#/definitions/CurrentProtectionState",
          "description": "Specifies the current protection state of the resource",
          "readOnly": true
        },
        "protectionErrorDetails": {
          "$ref": "#/definitions/UserFacingError",
          "description": "Specifies the protection error of the resource",
          "readOnly": true
        },
        "provisioningState": {
          "type": "string",
          "description": "Specifies the provisioning state of the resource i.e. provisioning/updating/Succeeded/Failed",
          "readOnly": true
        },
        "datasourceAuthCredentials": {
          "$ref": "#/definitions/AuthCredentials",
          "description": "Credentials to use to authenticate with data source provider."
        },
        "validationType": {
          "$ref": "#/definitions/ValidationType",
          "description": "Specifies the type of validation. In case of DeepValidation, all validations from /validateForBackup API will run again."
        },
        "identityDetails": {
          "$ref": "#/definitions/IdentityDetails",
          "description": "Contains information of the Identity Details for the BI.\nIf it is null, default will be considered as System Assigned."
        },
        "objectType": {
          "type": "string"
        }
      },
      "required": [
        "dataSourceInfo",
        "policyInfo",
        "objectType"
      ]
    },
    "BackupInstanceResource": {
      "type": "object",
      "description": "BackupInstance Resource",
      "properties": {
        "properties": {
          "$ref": "#/definitions/BackupInstance",
          "description": "BackupInstanceResource properties"
        },
        "tags": {
          "type": "object",
          "description": "Proxy Resource tags.",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "BackupInstanceResourceList": {
      "type": "object",
      "description": "BackupInstance Resource list response",
      "properties": {
        "value": {
          "type": "array",
          "description": "List of resources.",
          "items": {
            "$ref": "#/definitions/BackupInstanceResource"
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/DppResourceList"
        }
      ]
    },
    "BackupParameters": {
      "type": "object",
      "description": "BackupParameters base",
      "properties": {
        "objectType": {
          "type": "string",
          "description": "Type of the specific object - used for deserializing"
        }
      },
      "discriminator": "objectType",
      "required": [
        "objectType"
      ]
    },
    "BackupPolicy": {
      "type": "object",
      "description": "Rule based backup policy",
      "properties": {
        "policyRules": {
          "type": "array",
          "description": "Policy rule dictionary that contains rules for each backuptype i.e Full/Incremental/Logs etc",
          "items": {
            "$ref": "#/definitions/BasePolicyRule"
          },
          "x-ms-identifiers": []
        }
      },
      "required": [
        "policyRules"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/BaseBackupPolicy"
        }
      ],
      "x-ms-discriminator-value": "BackupPolicy"
    },
    "BackupSchedule": {
      "type": "object",
      "description": "Schedule for backup",
      "properties": {
        "repeatingTimeIntervals": {
          "type": "array",
          "description": "Repeating time interval which only support the following ISO 8601 format [R/startDateTime/Duration]. Example: R/2007-03-01T13:00:00Z/P1Y2M10DT2H30M",
          "items": {
            "type": "string"
          }
        },
        "timeZone": {
          "type": "string",
          "description": "Time zone for a schedule. Example: Pacific Standard Time"
        }
      },
      "required": [
        "repeatingTimeIntervals"
      ]
    },
    "BackupVault": {
      "type": "object",
      "description": "Backup Vault",
      "properties": {
        "monitoringSettings": {
          "$ref": "#/definitions/MonitoringSettings",
          "description": "Monitoring Settings"
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "Provisioning state of the BackupVault resource",
          "readOnly": true
        },
        "resourceMoveState": {
          "$ref": "#/definitions/ResourceMoveState",
          "description": "Resource move state for backup vault",
          "readOnly": true
        },
        "resourceMoveDetails": {
          "$ref": "#/definitions/ResourceMoveDetails",
          "description": "Resource move details for backup vault",
          "readOnly": true
        },
        "securitySettings": {
          "$ref": "#/definitions/SecuritySettings",
          "description": "Security Settings"
        },
        "storageSettings": {
          "type": "array",
          "description": "Storage Settings",
          "items": {
            "$ref": "#/definitions/StorageSetting"
          },
          "x-ms-identifiers": []
        },
        "isVaultProtectedByResourceGuard": {
          "type": "boolean",
          "description": "Is vault protected by resource guard",
          "readOnly": true
        },
        "featureSettings": {
          "$ref": "#/definitions/FeatureSettings",
          "description": "Feature Settings"
        },
        "secureScore": {
          "$ref": "#/definitions/SecureScoreLevel",
          "description": "Secure Score of Backup Vault",
          "readOnly": true
        },
        "bcdrSecurityLevel": {
          "$ref": "#/definitions/BCDRSecurityLevel",
          "description": "Security Level of Backup Vault",
          "readOnly": true
        },
        "resourceGuardOperationRequests": {
          "type": "array",
          "description": "ResourceGuardOperationRequests on which LAC check will be performed",
          "items": {
            "type": "string"
          }
        },
        "replicatedRegions": {
          "type": "array",
          "description": "List of replicated regions for Backup Vault",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "storageSettings"
      ]
    },
    "BackupVaultResource": {
      "type": "object",
      "description": "Backup Vault Resource",
      "properties": {
        "properties": {
          "$ref": "#/definitions/BackupVault",
          "description": "BackupVaultResource properties"
        },
        "identity": {
          "$ref": "#/definitions/DppIdentityDetails",
          "description": "Input Managed Identity Details"
        },
        "eTag": {
          "type": "string",
          "description": "Optional ETag."
        }
      },
      "required": [
        "properties"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "BackupVaultResourceList": {
      "type": "object",
      "description": "List of BackupVault resources",
      "properties": {
        "value": {
          "type": "array",
          "description": "List of resources.",
          "items": {
            "$ref": "#/definitions/BackupVaultResource"
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/DppResourceList"
        }
      ]
    },
    "BaseBackupPolicy": {
      "type": "object",
      "description": "BackupPolicy base",
      "properties": {
        "datasourceTypes": {
          "type": "array",
          "description": "Type of datasource for the backup management",
          "items": {
            "type": "string"
          }
        },
        "objectType": {
          "type": "string"
        }
      },
      "discriminator": "objectType",
      "required": [
        "datasourceTypes",
        "objectType"
      ]
    },
    "BaseBackupPolicyResource": {
      "type": "object",
      "description": "BaseBackupPolicy resource",
      "properties": {
        "properties": {
          "$ref": "#/definitions/BaseBackupPolicy",
          "description": "BaseBackupPolicyResource properties"
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "BaseBackupPolicyResourceList": {
      "type": "object",
      "description": "List of BaseBackupPolicy resources",
      "properties": {
        "value": {
          "type": "array",
          "description": "List of resources.",
          "items": {
            "$ref": "#/definitions/BaseBackupPolicyResource"
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/DppResourceList"
        }
      ]
    },
    "BasePolicyRule": {
      "type": "object",
      "description": "BasePolicy Rule",
      "properties": {
        "name": {
          "type": "string"
        },
        "objectType": {
          "type": "string"
        }
      },
      "discriminator": "objectType",
      "required": [
        "name",
        "objectType"
      ]
    },
    "BaseResourceProperties": {
      "type": "object",
      "description": "Properties which are specific to datasource/datasourceSets",
      "properties": {
        "objectType": {
          "$ref": "#/definitions/ResourcePropertiesObjectType",
          "description": "Type of the specific object - used for deserializing"
        }
      },
      "discriminator": "objectType",
      "required": [
        "objectType"
      ]
    },
    "BlobBackupDatasourceParameters": {
      "type": "object",
      "description": "Parameters to be used during configuration of backup of blobs",
      "properties": {
        "containersList": {
          "type": "array",
          "description": "List of containers to be backed up during configuration of backup of blobs",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "containersList"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/BackupDatasourceParameters"
        }
      ],
      "x-ms-discriminator-value": "BlobBackupDatasourceParameters"
    },
    "CheckNameAvailabilityRequest": {
      "type": "object",
      "description": "CheckNameAvailability Request",
      "properties": {
        "name": {
          "type": "string",
          "description": "Resource name for which availability needs to be checked"
        },
        "type": {
          "type": "string",
          "description": "Describes the Resource type: Microsoft.DataProtection/BackupVaults"
        }
      }
    },
    "CheckNameAvailabilityResult": {
      "type": "object",
      "description": "CheckNameAvailability Result",
      "properties": {
        "message": {
          "type": "string",
          "description": "Gets or sets the message."
        },
        "nameAvailable": {
          "type": "boolean",
          "description": "Gets or sets a value indicating whether [name available]."
        },
        "reason": {
          "type": "string",
          "description": "Gets or sets the reason."
        }
      }
    },
    "CloudError": {
      "type": "object",
      "description": "An error response from Azure Backup.",
      "properties": {
        "error": {
          "$ref": "#/definitions/Error",
          "description": "The resource management error response."
        }
      }
    },
    "CmkKekIdentity": {
      "type": "object",
      "description": "The details of the managed identity used for CMK",
      "properties": {
        "identityType": {
          "$ref": "#/definitions/IdentityType",
          "description": "The identity type. 'SystemAssigned' and 'UserAssigned' are mutually exclusive. 'SystemAssigned' will use implicitly created managed identity."
        },
        "identityId": {
          "type": "string",
          "description": "The managed identity to be used which has access permissions to the Key Vault. Provide a value here in case identity types: 'UserAssigned' only."
        }
      }
    },
    "CmkKeyVaultProperties": {
      "type": "object",
      "description": "The properties of the Key Vault which hosts CMK",
      "properties": {
        "keyUri": {
          "type": "string",
          "description": "The key uri of the Customer Managed Key"
        }
      }
    },
    "CopyOnExpiryOption": {
      "type": "object",
      "description": "Copy on Expiry Option",
      "allOf": [
        {
          "$ref": "#/definitions/CopyOption"
        }
      ],
      "x-ms-discriminator-value": "CopyOnExpiryOption"
    },
    "CopyOption": {
      "type": "object",
      "description": "Options to copy",
      "properties": {
        "objectType": {
          "type": "string",
          "description": "Type of the specific object - used for deserializing"
        }
      },
      "discriminator": "objectType",
      "required": [
        "objectType"
      ]
    },
    "CrossRegionRestoreDetails": {
      "type": "object",
      "description": "Cross Region Restore details",
      "properties": {
        "sourceRegion": {
          "type": "string"
        },
        "sourceBackupInstanceId": {
          "type": "string"
        }
      },
      "required": [
        "sourceRegion",
        "sourceBackupInstanceId"
      ]
    },
    "CrossRegionRestoreJobRequest": {
      "type": "object",
      "description": "Details of CRR Job to be fetched",
      "properties": {
        "sourceRegion": {
          "type": "string"
        },
        "sourceBackupVaultId": {
          "type": "string"
        },
        "jobId": {
          "type": "string"
        }
      },
      "required": [
        "sourceRegion",
        "sourceBackupVaultId",
        "jobId"
      ]
    },
    "CrossRegionRestoreJobsRequest": {
      "type": "object",
      "description": "Details of Backup Vault for which CRR Jobs are to be fetched",
      "properties": {
        "sourceRegion": {
          "type": "string"
        },
        "sourceBackupVaultId": {
          "type": "string"
        }
      },
      "required": [
        "sourceRegion",
        "sourceBackupVaultId"
      ]
    },
    "CrossRegionRestoreRequestObject": {
      "type": "object",
      "description": "Cross Region Restore Request Object",
      "properties": {
        "restoreRequestObject": {
          "$ref": "#/definitions/AzureBackupRestoreRequest",
          "description": "Gets or sets the restore request object."
        },
        "crossRegionRestoreDetails": {
          "$ref": "#/definitions/CrossRegionRestoreDetails",
          "description": "Cross region restore details."
        }
      },
      "required": [
        "restoreRequestObject",
        "crossRegionRestoreDetails"
      ]
    },
    "CrossRegionRestoreSettings": {
      "type": "object",
      "properties": {
        "state": {
          "$ref": "#/definitions/CrossRegionRestoreState",
          "description": "CrossRegionRestore state"
        }
      }
    },
    "CrossRegionRestoreState": {
      "type": "string",
      "description": "CrossRegionRestore state",
      "enum": [
        "Disabled",
        "Enabled"
      ],
      "x-ms-enum": {
        "name": "CrossRegionRestoreState",
        "modelAsString": true,
        "values": [
          {
            "name": "Disabled",
            "value": "Disabled"
          },
          {
            "name": "Enabled",
            "value": "Enabled"
          }
        ]
      }
    },
    "CrossSubscriptionRestoreSettings": {
      "type": "object",
      "description": "CrossSubscriptionRestore Settings",
      "properties": {
        "state": {
          "$ref": "#/definitions/CrossSubscriptionRestoreState",
          "description": "CrossSubscriptionRestore state"
        }
      }
    },
    "CrossSubscriptionRestoreState": {
      "type": "string",
      "description": "CrossSubscriptionRestore state",
      "enum": [
        "Disabled",
        "PermanentlyDisabled",
        "Enabled"
      ],
      "x-ms-enum": {
        "name": "CrossSubscriptionRestoreState",
        "modelAsString": true,
        "values": [
          {
            "name": "Disabled",
            "value": "Disabled"
          },
          {
            "name": "PermanentlyDisabled",
            "value": "PermanentlyDisabled"
          },
          {
            "name": "Enabled",
            "value": "Enabled"
          }
        ]
      }
    },
    "CurrentProtectionState": {
      "type": "string",
      "description": "Specifies the current protection state of the resource",
      "enum": [
        "Invalid",
        "NotProtected",
        "ConfiguringProtection",
        "ProtectionConfigured",
        "BackupSchedulesSuspended",
        "RetentionSchedulesSuspended",
        "ProtectionStopped",
        "ProtectionError",
        "ConfiguringProtectionFailed",
        "SoftDeleting",
        "SoftDeleted",
        "UpdatingProtection"
      ],
      "x-ms-enum": {
        "name": "CurrentProtectionState",
        "modelAsString": true,
        "values": [
          {
            "name": "Invalid",
            "value": "Invalid"
          },
          {
            "name": "NotProtected",
            "value": "NotProtected"
          },
          {
            "name": "ConfiguringProtection",
            "value": "ConfiguringProtection"
          },
          {
            "name": "ProtectionConfigured",
            "value": "ProtectionConfigured"
          },
          {
            "name": "BackupSchedulesSuspended",
            "value": "BackupSchedulesSuspended"
          },
          {
            "name": "RetentionSchedulesSuspended",
            "value": "RetentionSchedulesSuspended"
          },
          {
            "name": "ProtectionStopped",
            "value": "ProtectionStopped"
          },
          {
            "name": "ProtectionError",
            "value": "ProtectionError"
          },
          {
            "name": "ConfiguringProtectionFailed",
            "value": "ConfiguringProtectionFailed"
          },
          {
            "name": "SoftDeleting",
            "value": "SoftDeleting"
          },
          {
            "name": "SoftDeleted",
            "value": "SoftDeleted"
          },
          {
            "name": "UpdatingProtection",
            "value": "UpdatingProtection"
          }
        ]
      }
    },
    "CustomCopyOption": {
      "type": "object",
      "description": "Duration based custom options to copy",
      "properties": {
        "duration": {
          "type": "string",
          "description": "Data copied after given timespan"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/CopyOption"
        }
      ],
      "x-ms-discriminator-value": "CustomCopyOption"
    },
    "DataStoreInfoBase": {
      "type": "object",
      "description": "DataStoreInfo base",
      "properties": {
        "dataStoreType": {
          "$ref": "#/definitions/DataStoreTypes",
          "description": "type of datastore; Operational/Vault/Archive"
        },
        "objectType": {
          "type": "string",
          "description": "Type of Datasource object, used to initialize the right inherited type"
        }
      },
      "required": [
        "dataStoreType",
        "objectType"
      ]
    },
    "DataStoreParameters": {
      "type": "object",
      "description": "Parameters for DataStore",
      "properties": {
        "objectType": {
          "type": "string",
          "description": "Type of the specific object - used for deserializing"
        },
        "dataStoreType": {
          "$ref": "#/definitions/DataStoreTypes",
          "description": "type of datastore; Operational/Vault/Archive"
        }
      },
      "discriminator": "objectType",
      "required": [
        "objectType",
        "dataStoreType"
      ]
    },
    "DataStoreTypes": {
      "type": "string",
      "description": "type of datastore; Operational/Vault/Archive",
      "enum": [
        "OperationalStore",
        "VaultStore",
        "ArchiveStore"
      ],
      "x-ms-enum": {
        "name": "DataStoreTypes",
        "modelAsString": true,
        "values": [
          {
            "name": "OperationalStore",
            "value": "OperationalStore"
          },
          {
            "name": "VaultStore",
            "value": "VaultStore"
          },
          {
            "name": "ArchiveStore",
            "value": "ArchiveStore"
          }
        ]
      }
    },
    "Datasource": {
      "type": "object",
      "description": "Datasource to be backed up",
      "properties": {
        "datasourceType": {
          "type": "string",
          "description": "DatasourceType of the resource."
        },
        "objectType": {
          "type": "string",
          "description": "Type of Datasource object, used to initialize the right inherited type"
        },
        "resourceID": {
          "type": "string",
          "description": "Full ARM ID of the resource. For azure resources, this is ARM ID. For non azure resources, this will be the ID created by backup service via Fabric/Vault."
        },
        "resourceLocation": {
          "type": "string",
          "description": "Location of datasource."
        },
        "resourceName": {
          "type": "string",
          "description": "Unique identifier of the resource in the context of parent."
        },
        "resourceType": {
          "type": "string",
          "description": "Resource Type of Datasource."
        },
        "resourceUri": {
          "type": "string",
          "description": "Uri of the resource."
        },
        "resourceProperties": {
          "$ref": "#/definitions/BaseResourceProperties",
          "description": "Properties specific to data source"
        }
      },
      "required": [
        "resourceID"
      ]
    },
    "DatasourceSet": {
      "type": "object",
      "description": "DatasourceSet details of datasource to be backed up",
      "properties": {
        "datasourceType": {
          "type": "string",
          "description": "DatasourceType of the resource."
        },
        "objectType": {
          "type": "string",
          "description": "Type of Datasource object, used to initialize the right inherited type"
        },
        "resourceID": {
          "type": "string",
          "description": "Full ARM ID of the resource. For azure resources, this is ARM ID. For non azure resources, this will be the ID created by backup service via Fabric/Vault."
        },
        "resourceLocation": {
          "type": "string",
          "description": "Location of datasource."
        },
        "resourceName": {
          "type": "string",
          "description": "Unique identifier of the resource in the context of parent."
        },
        "resourceType": {
          "type": "string",
          "description": "Resource Type of Datasource."
        },
        "resourceUri": {
          "type": "string",
          "description": "Uri of the resource."
        },
        "resourceProperties": {
          "$ref": "#/definitions/BaseResourceProperties",
          "description": "Properties specific to data source set"
        }
      },
      "required": [
        "resourceID"
      ]
    },
    "Day": {
      "type": "object",
      "description": "Day of the week",
      "properties": {
        "date": {
          "type": "integer",
          "format": "int32",
          "description": "Date of the month"
        },
        "isLast": {
          "type": "boolean",
          "description": "Whether Date is last date of month"
        }
      }
    },
    "DayOfWeek": {
      "type": "string",
      "enum": [
        "Friday",
        "Monday",
        "Saturday",
        "Sunday",
        "Thursday",
        "Tuesday",
        "Wednesday"
      ],
      "x-ms-enum": {
        "name": "DayOfWeek",
        "modelAsString": true,
        "values": [
          {
            "name": "Friday",
            "value": "Friday"
          },
          {
            "name": "Monday",
            "value": "Monday"
          },
          {
            "name": "Saturday",
            "value": "Saturday"
          },
          {
            "name": "Sunday",
            "value": "Sunday"
          },
          {
            "name": "Thursday",
            "value": "Thursday"
          },
          {
            "name": "Tuesday",
            "value": "Tuesday"
          },
          {
            "name": "Wednesday",
            "value": "Wednesday"
          }
        ]
      }
    },
    "DefaultResourceProperties": {
      "type": "object",
      "description": "Default source properties",
      "allOf": [
        {
          "$ref": "#/definitions/BaseResourceProperties"
        }
      ],
      "x-ms-discriminator-value": "DefaultResourceProperties"
    },
    "DeleteOption": {
      "type": "object",
      "description": "Delete Option",
      "properties": {
        "duration": {
          "type": "string",
          "description": "Duration of deletion after given timespan"
        },
        "objectType": {
          "type": "string",
          "description": "Type of the specific object - used for deserializing"
        }
      },
      "discriminator": "objectType",
      "required": [
        "duration",
        "objectType"
      ]
    },
    "DeletedBackupInstance": {
      "type": "object",
      "description": "Deleted Backup Instance",
      "properties": {
        "deletionInfo": {
          "$ref": "#/definitions/DeletionInfo",
          "description": "Deletion info of Backup Instance",
          "readOnly": true
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/BackupInstance"
        }
      ]
    },
    "DeletedBackupInstanceResource": {
      "type": "object",
      "description": "Deleted Backup Instance",
      "properties": {
        "properties": {
          "$ref": "#/definitions/DeletedBackupInstance",
          "description": "DeletedBackupInstanceResource properties"
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "DeletedBackupInstanceResourceList": {
      "type": "object",
      "description": "List of DeletedBackupInstance resources",
      "properties": {
        "value": {
          "type": "array",
          "description": "List of resources.",
          "items": {
            "$ref": "#/definitions/DeletedBackupInstanceResource"
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/DppResourceList"
        }
      ]
    },
    "DeletionInfo": {
      "type": "object",
      "description": "Deletion Info",
      "properties": {
        "deletionTime": {
          "type": "string",
          "description": "Specifies time of deletion",
          "readOnly": true
        },
        "billingEndDate": {
          "type": "string",
          "description": "Specifies billing end date",
          "readOnly": true
        },
        "scheduledPurgeTime": {
          "type": "string",
          "description": "Specifies purge time",
          "readOnly": true
        },
        "deleteActivityID": {
          "type": "string",
          "description": "Delete activity ID for troubleshooting purpose",
          "readOnly": true
        }
      }
    },
    "DppBaseResource": {
      "type": "object",
      "description": "Base resource under Microsoft.DataProtection provider namespace",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "DppBaseResourceList": {
      "type": "object",
      "description": "Base for all lists of V2 resources.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The DppBaseResource items on this page",
          "items": {
            "$ref": "#/definitions/DppBaseResource"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "DppIdentityDetails": {
      "type": "object",
      "description": "Identity details",
      "properties": {
        "principalId": {
          "type": "string",
          "description": "The object ID of the service principal object for the managed identity that is used to grant role-based access to an Azure resource.",
          "readOnly": true
        },
        "tenantId": {
          "type": "string",
          "description": "A Globally Unique Identifier (GUID) that represents the Azure AD tenant where the resource is now a member.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The identityType which can be either SystemAssigned, UserAssigned, 'SystemAssigned,UserAssigned' or None"
        },
        "userAssignedIdentities": {
          "type": "object",
          "description": "Gets or sets the user assigned identities.",
          "additionalProperties": {
            "$ref": "../../../../../common-types/resource-management/v5/managedidentity.json#/definitions/UserAssignedIdentity"
          }
        }
      }
    },
    "DppResource": {
      "type": "object",
      "description": "Resource class",
      "properties": {
        "id": {
          "type": "string",
          "description": "Resource Id represents the complete path to the resource.",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "Resource name associated with the resource.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "Resource type represents the complete path of the form Namespace/ResourceType/ResourceType/...",
          "readOnly": true
        },
        "systemData": {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/systemData",
          "description": "Metadata pertaining to creation and last modification of the resource.",
          "readOnly": true
        }
      }
    },
    "DppResourceList": {
      "type": "object",
      "description": "ListResource",
      "properties": {
        "nextLink": {
          "type": "string",
          "description": "The uri to fetch the next page of resources. Call ListNext() fetches next page of resources."
        }
      }
    },
    "DppTrackedResourceList": {
      "type": "object",
      "properties": {
        "nextLink": {
          "type": "string",
          "description": "The uri to fetch the next page of resources. Call ListNext() fetches next page of resources."
        }
      }
    },
    "EncryptionState": {
      "type": "string",
      "description": "Encryption state of the Backup Vault.",
      "enum": [
        "Enabled",
        "Disabled",
        "Inconsistent"
      ],
      "x-ms-enum": {
        "name": "EncryptionState",
        "modelAsString": true,
        "values": [
          {
            "name": "Enabled",
            "value": "Enabled",
            "description": "CMK encryption is enabled on the Backup Vault"
          },
          {
            "name": "Disabled",
            "value": "Disabled",
            "description": "CMK encryption is disabled on the Backup Vault. User can not set this state once Encryption State is 'Enabled'."
          },
          {
            "name": "Inconsistent",
            "value": "Inconsistent",
            "description": "CMK encryption is in inconsistent state on the Backup Vault. This state indicates that user needs to retry the encryption settings operation immediately to correct the state."
          }
        ]
      }
    },
    "Error": {
      "type": "object",
      "description": "The resource management error response.",
      "properties": {
        "additionalInfo": {
          "type": "array",
          "description": "The error additional info.",
          "items": {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorAdditionalInfo"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        },
        "code": {
          "type": "string",
          "description": "The error code.",
          "readOnly": true
        },
        "details": {
          "type": "array",
          "description": "The error details.",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        },
        "message": {
          "type": "string",
          "description": "The error message.",
          "readOnly": true
        },
        "target": {
          "type": "string",
          "description": "The error target.",
          "readOnly": true
        }
      }
    },
    "ExistingResourcePolicy": {
      "type": "string",
      "description": "Gets or sets the Conflict Policy property. This property sets policy during conflict of resources during restore.",
      "enum": [
        "Skip",
        "Patch"
      ],
      "x-ms-enum": {
        "name": "ExistingResourcePolicy",
        "modelAsString": true,
        "values": [
          {
            "name": "Skip",
            "value": "Skip"
          },
          {
            "name": "Patch",
            "value": "Patch"
          }
        ]
      }
    },
    "ExportJobsResult": {
      "type": "object",
      "description": "The result for export jobs containing blob details.",
      "properties": {
        "blobUrl": {
          "type": "string",
          "description": "URL of the blob into which the serialized string of list of jobs is exported.",
          "readOnly": true
        },
        "blobSasKey": {
          "type": "string",
          "description": "SAS key to access the blob.",
          "readOnly": true
        },
        "excelFileBlobUrl": {
          "type": "string",
          "description": "URL of the blob into which the ExcelFile is uploaded.",
          "readOnly": true
        },
        "excelFileBlobSasKey": {
          "type": "string",
          "description": "SAS key to access the ExcelFile blob.",
          "readOnly": true
        }
      }
    },
    "FeatureSettings": {
      "type": "object",
      "description": "Class containing feature settings of vault",
      "properties": {
        "crossSubscriptionRestoreSettings": {
          "$ref": "#/definitions/CrossSubscriptionRestoreSettings",
          "description": "CrossSubscriptionRestore Settings"
        },
        "crossRegionRestoreSettings": {
          "$ref": "#/definitions/CrossRegionRestoreSettings"
        }
      }
    },
    "FeatureSupportStatus": {
      "type": "string",
      "description": "feature support status",
      "enum": [
        "Invalid",
        "NotSupported",
        "AlphaPreview",
        "PrivatePreview",
        "PublicPreview",
        "GenerallyAvailable"
      ],
      "x-ms-enum": {
        "name": "FeatureSupportStatus",
        "modelAsString": true,
        "values": [
          {
            "name": "Invalid",
            "value": "Invalid"
          },
          {
            "name": "NotSupported",
            "value": "NotSupported"
          },
          {
            "name": "AlphaPreview",
            "value": "AlphaPreview"
          },
          {
            "name": "PrivatePreview",
            "value": "PrivatePreview"
          },
          {
            "name": "PublicPreview",
            "value": "PublicPreview"
          },
          {
            "name": "GenerallyAvailable",
            "value": "GenerallyAvailable"
          }
        ]
      }
    },
    "FeatureType": {
      "type": "string",
      "description": "backup support feature type.",
      "enum": [
        "Invalid",
        "DataSourceType"
      ],
      "x-ms-enum": {
        "name": "FeatureType",
        "modelAsString": true,
        "values": [
          {
            "name": "Invalid",
            "value": "Invalid"
          },
          {
            "name": "DataSourceType",
            "value": "DataSourceType"
          }
        ]
      }
    },
    "FeatureValidationRequest": {
      "type": "object",
      "description": "Base class for feature object",
      "properties": {
        "featureType": {
          "$ref": "#/definitions/FeatureType",
          "description": "backup support feature type."
        },
        "featureName": {
          "type": "string",
          "description": "backup support feature name."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/FeatureValidationRequestBase"
        }
      ],
      "x-ms-discriminator-value": "FeatureValidationRequest"
    },
    "FeatureValidationRequestBase": {
      "type": "object",
      "description": "Base class for Backup Feature support",
      "properties": {
        "objectType": {
          "type": "string",
          "description": "Type of the specific object - used for deserializing"
        }
      },
      "discriminator": "objectType",
      "required": [
        "objectType"
      ]
    },
    "FeatureValidationResponse": {
      "type": "object",
      "description": "Feature Validation Response",
      "properties": {
        "featureType": {
          "$ref": "#/definitions/FeatureType",
          "description": "backup support feature type."
        },
        "features": {
          "type": "array",
          "description": "Response features",
          "items": {
            "$ref": "#/definitions/SupportedFeature"
          },
          "x-ms-identifiers": []
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/FeatureValidationResponseBase"
        }
      ],
      "x-ms-discriminator-value": "FeatureValidationResponse"
    },
    "FeatureValidationResponseBase": {
      "type": "object",
      "description": "Base class for Backup Feature support",
      "properties": {
        "objectType": {
          "type": "string",
          "description": "Type of the specific object - used for deserializing"
        }
      },
      "discriminator": "objectType",
      "required": [
        "objectType"
      ]
    },
    "FetchSecondaryRPsRequestParameters": {
      "type": "object",
      "description": "Information about BI whose secondary RecoveryPoints are requested\nSource region and\nBI ARM path",
      "properties": {
        "sourceRegion": {
          "type": "string",
          "description": "Source region in which BackupInstance is located"
        },
        "sourceBackupInstanceId": {
          "type": "string",
          "description": "ARM Path of BackupInstance"
        }
      }
    },
    "IdentityDetails": {
      "type": "object",
      "properties": {
        "useSystemAssignedIdentity": {
          "type": "boolean",
          "description": "Specifies if the BI is protected by System Identity."
        },
        "userAssignedIdentityArmUrl": {
          "type": "string",
          "description": "ARM URL for User Assigned Identity."
        }
      }
    },
    "IdentityType": {
      "type": "string",
      "description": "The identity type. 'SystemAssigned' and 'UserAssigned' are mutually exclusive. 'SystemAssigned' will use implicitly created managed identity.",
      "enum": [
        "SystemAssigned",
        "UserAssigned"
      ],
      "x-ms-enum": {
        "name": "IdentityType",
        "modelAsString": true,
        "values": [
          {
            "name": "SystemAssigned",
            "value": "SystemAssigned"
          },
          {
            "name": "UserAssigned",
            "value": "UserAssigned"
          }
        ]
      }
    },
    "ImmediateCopyOption": {
      "type": "object",
      "description": "Immediate copy Option",
      "allOf": [
        {
          "$ref": "#/definitions/CopyOption"
        }
      ],
      "x-ms-discriminator-value": "ImmediateCopyOption"
    },
    "ImmutabilitySettings": {
      "type": "object",
      "description": "Immutability Settings at vault level",
      "properties": {
        "state": {
          "$ref": "#/definitions/ImmutabilityState",
          "description": "Immutability state"
        }
      }
    },
    "ImmutabilityState": {
      "type": "string",
      "description": "Immutability state",
      "enum": [
        "Disabled",
        "Unlocked",
        "Locked"
      ],
      "x-ms-enum": {
        "name": "ImmutabilityState",
        "modelAsString": true,
        "values": [
          {
            "name": "Disabled",
            "value": "Disabled"
          },
          {
            "name": "Unlocked",
            "value": "Unlocked"
          },
          {
            "name": "Locked",
            "value": "Locked"
          }
        ]
      }
    },
    "InfrastructureEncryptionState": {
      "type": "string",
      "description": "Enabling/Disabling the Double Encryption state",
      "enum": [
        "Enabled",
        "Disabled"
      ],
      "x-ms-enum": {
        "name": "InfrastructureEncryptionState",
        "modelAsString": true,
        "values": [
          {
            "name": "Enabled",
            "value": "Enabled"
          },
          {
            "name": "Disabled",
            "value": "Disabled"
          }
        ]
      }
    },
    "InnerError": {
      "type": "object",
      "description": "Inner Error",
      "properties": {
        "additionalInfo": {
          "type": "object",
          "description": "Any Key value pairs that can be provided to the client for additional  verbose information.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "code": {
          "type": "string",
          "description": "Unique code for this error"
        },
        "embeddedInnerError": {
          "$ref": "#/definitions/InnerError",
          "description": "Child Inner Error, to allow Nesting."
        }
      }
    },
    "ItemLevelRestoreCriteria": {
      "type": "object",
      "description": "Class to contain criteria for item level restore",
      "properties": {
        "objectType": {
          "type": "string",
          "description": "Type of the specific object - used for deserializing"
        }
      },
      "discriminator": "objectType",
      "required": [
        "objectType"
      ]
    },
    "ItemLevelRestoreTargetInfo": {
      "type": "object",
      "description": "Restore target info for Item level restore operation",
      "properties": {
        "restoreCriteria": {
          "type": "array",
          "description": "Restore Criteria",
          "items": {
            "$ref": "#/definitions/ItemLevelRestoreCriteria"
          },
          "x-ms-identifiers": []
        },
        "datasourceInfo": {
          "$ref": "#/definitions/Datasource",
          "description": "Information of target DS"
        },
        "datasourceSetInfo": {
          "$ref": "#/definitions/DatasourceSet",
          "description": "Information of target DS Set"
        },
        "datasourceAuthCredentials": {
          "$ref": "#/definitions/AuthCredentials",
          "description": "Credentials to use to authenticate with data source provider."
        }
      },
      "required": [
        "restoreCriteria",
        "datasourceInfo"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/RestoreTargetInfoBase"
        }
      ],
      "x-ms-discriminator-value": "ItemLevelRestoreTargetInfo"
    },
    "ItemPathBasedRestoreCriteria": {
      "type": "object",
      "description": "Prefix criteria to be used to during restore",
      "properties": {
        "itemPath": {
          "type": "string",
          "description": "The path of the item to be restored. It could be the full path of the item or the path relative to the backup item"
        },
        "isPathRelativeToBackupItem": {
          "type": "boolean",
          "description": "Flag to specify if the path is relative to backup item or full path"
        },
        "subItemPathPrefix": {
          "type": "array",
          "description": "The list of prefix strings to be used as filter criteria during restore. These are relative to the item path specified.",
          "items": {
            "type": "string"
          }
        },
        "renameTo": {
          "type": "string",
          "description": "Rename the item to be restored. Restore will rename the itemPath to this new name if the value is specified otherwise the itemPath will be restored as same name."
        }
      },
      "required": [
        "itemPath",
        "isPathRelativeToBackupItem"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/ItemLevelRestoreCriteria"
        }
      ],
      "x-ms-discriminator-value": "ItemPathBasedRestoreCriteria"
    },
    "JobExtendedInfo": {
      "type": "object",
      "description": "Extended Information about the job",
      "properties": {
        "additionalDetails": {
          "type": "object",
          "description": "Job's Additional Details",
          "additionalProperties": {
            "type": "string"
          }
        },
        "backupInstanceState": {
          "type": "string",
          "description": "State of the Backup Instance",
          "readOnly": true
        },
        "dataTransferredInBytes": {
          "type": "number",
          "format": "double",
          "description": "Number of bytes transferred",
          "readOnly": true
        },
        "recoveryDestination": {
          "type": "string",
          "description": "Destination where restore is done",
          "readOnly": true
        },
        "sourceRecoverPoint": {
          "$ref": "#/definitions/RestoreJobRecoveryPointDetails",
          "description": "Details of the Source Recovery Point",
          "readOnly": true
        },
        "subTasks": {
          "type": "array",
          "description": "List of Sub Tasks of the job",
          "items": {
            "$ref": "#/definitions/JobSubTask"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        },
        "targetRecoverPoint": {
          "$ref": "#/definitions/RestoreJobRecoveryPointDetails",
          "description": "Details of the Target Recovery Point",
          "readOnly": true
        },
        "warningDetails": {
          "type": "array",
          "description": "A List, detailing the warnings related to the job",
          "items": {
            "$ref": "#/definitions/UserFacingWarningDetail"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        }
      }
    },
    "JobSubTask": {
      "type": "object",
      "description": "Details of Job's Sub Task",
      "properties": {
        "additionalDetails": {
          "type": "object",
          "description": "Additional details of Sub Tasks",
          "additionalProperties": {
            "type": "string"
          }
        },
        "taskId": {
          "type": "integer",
          "format": "int32",
          "description": "Task Id of the Sub Task"
        },
        "taskName": {
          "type": "string",
          "description": "Name of the Sub Task"
        },
        "taskProgress": {
          "type": "string",
          "description": "Progress of the Sub Task",
          "readOnly": true
        },
        "taskStatus": {
          "type": "string",
          "description": "Status of the Sub Task"
        }
      },
      "required": [
        "taskId",
        "taskName",
        "taskStatus"
      ]
    },
    "KubernetesClusterBackupDatasourceParameters": {
      "type": "object",
      "description": "Parameters for Kubernetes Cluster Backup Datasource",
      "properties": {
        "snapshotVolumes": {
          "type": "boolean",
          "description": "Gets or sets the volume snapshot property. This property if enabled will take volume snapshots during backup."
        },
        "includedVolumeTypes": {
          "type": "array",
          "description": "Gets or sets the include volume types property. This property sets the volume types to be included during backup.",
          "items": {
            "$ref": "#/definitions/AKSVolumeTypes"
          }
        },
        "includeClusterScopeResources": {
          "type": "boolean",
          "description": "Gets or sets the include cluster resources property. This property if enabled will include cluster scope resources during backup."
        },
        "includedNamespaces": {
          "type": "array",
          "description": "Gets or sets the include namespaces property. This property sets the namespaces to be included during backup.",
          "items": {
            "type": "string"
          }
        },
        "excludedNamespaces": {
          "type": "array",
          "description": "Gets or sets the exclude namespaces property. This property sets the namespaces to be excluded during backup.",
          "items": {
            "type": "string"
          }
        },
        "includedResourceTypes": {
          "type": "array",
          "description": "Gets or sets the include resource types property. This property sets the resource types to be included during backup.",
          "items": {
            "type": "string"
          }
        },
        "excludedResourceTypes": {
          "type": "array",
          "description": "Gets or sets the exclude resource types property. This property sets the resource types to be excluded during backup.",
          "items": {
            "type": "string"
          }
        },
        "labelSelectors": {
          "type": "array",
          "description": "Gets or sets the LabelSelectors property. This property sets the resource with such label selectors to be included during backup.",
          "items": {
            "type": "string"
          }
        },
        "backupHookReferences": {
          "type": "array",
          "description": "Gets or sets the backup hook references. This property sets the hook reference to be executed during backup.",
          "items": {
            "$ref": "#/definitions/NamespacedNameResource"
          },
          "x-ms-identifiers": []
        }
      },
      "required": [
        "snapshotVolumes",
        "includeClusterScopeResources"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/BackupDatasourceParameters"
        }
      ],
      "x-ms-discriminator-value": "KubernetesClusterBackupDatasourceParameters"
    },
    "KubernetesClusterRestoreCriteria": {
      "type": "object",
      "description": "kubernetes Cluster Backup target info for restore operation",
      "properties": {
        "includeClusterScopeResources": {
          "type": "boolean",
          "description": "Gets or sets the include cluster resources property. This property if enabled will include cluster scope resources during restore."
        },
        "includedNamespaces": {
          "type": "array",
          "description": "Gets or sets the include namespaces property. This property sets the namespaces to be included during restore.",
          "items": {
            "type": "string"
          }
        },
        "excludedNamespaces": {
          "type": "array",
          "description": "Gets or sets the exclude namespaces property. This property sets the namespaces to be excluded during restore.",
          "items": {
            "type": "string"
          }
        },
        "includedResourceTypes": {
          "type": "array",
          "description": "Gets or sets the include resource types property. This property sets the resource types to be included during restore.",
          "items": {
            "type": "string"
          }
        },
        "excludedResourceTypes": {
          "type": "array",
          "description": "Gets or sets the exclude resource types property. This property sets the resource types to be excluded during restore.",
          "items": {
            "type": "string"
          }
        },
        "labelSelectors": {
          "type": "array",
          "description": "Gets or sets the LabelSelectors property. This property sets the resource with such label selectors to be included during restore.",
          "items": {
            "type": "string"
          }
        },
        "persistentVolumeRestoreMode": {
          "$ref": "#/definitions/PersistentVolumeRestoreMode",
          "description": "Gets or sets the PV (Persistent Volume) Restore Mode property. This property sets whether volumes needs to be restored."
        },
        "conflictPolicy": {
          "$ref": "#/definitions/ExistingResourcePolicy",
          "description": "Gets or sets the Conflict Policy property. This property sets policy during conflict of resources during restore."
        },
        "namespaceMappings": {
          "type": "object",
          "description": "Gets or sets the Namespace Mappings property. This property sets if namespace needs to be change during restore.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "restoreHookReferences": {
          "type": "array",
          "description": "Gets or sets the restore hook references. This property sets the hook reference to be executed during restore.",
          "items": {
            "$ref": "#/definitions/NamespacedNameResource"
          },
          "x-ms-identifiers": []
        },
        "resourceModifierReference": {
          "$ref": "#/definitions/NamespacedNameResource",
          "description": "Gets or sets the resource modifier reference. This property sets the reference for resource modifier during restore."
        }
      },
      "required": [
        "includeClusterScopeResources"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/ItemLevelRestoreCriteria"
        }
      ],
      "x-ms-discriminator-value": "KubernetesClusterRestoreCriteria"
    },
    "KubernetesClusterVaultTierRestoreCriteria": {
      "type": "object",
      "description": "kubernetes Cluster Backup target info for restore operation from vault",
      "properties": {
        "includeClusterScopeResources": {
          "type": "boolean",
          "description": "Gets or sets the include cluster resources property. This property if enabled will include cluster scope resources during restore from vault."
        },
        "includedNamespaces": {
          "type": "array",
          "description": "Gets or sets the include namespaces property. This property sets the namespaces to be included during restore from vault.",
          "items": {
            "type": "string"
          }
        },
        "excludedNamespaces": {
          "type": "array",
          "description": "Gets or sets the exclude namespaces property. This property sets the namespaces to be excluded during restore from vault.",
          "items": {
            "type": "string"
          }
        },
        "includedResourceTypes": {
          "type": "array",
          "description": "Gets or sets the include resource types property. This property sets the resource types to be included during restore from vault.",
          "items": {
            "type": "string"
          }
        },
        "excludedResourceTypes": {
          "type": "array",
          "description": "Gets or sets the exclude resource types property. This property sets the resource types to be excluded during restore from vault.",
          "items": {
            "type": "string"
          }
        },
        "labelSelectors": {
          "type": "array",
          "description": "Gets or sets the LabelSelectors property. This property sets the resource with such label selectors to be included during restore from vault.",
          "items": {
            "type": "string"
          }
        },
        "persistentVolumeRestoreMode": {
          "$ref": "#/definitions/PersistentVolumeRestoreMode",
          "description": "Gets or sets the PV (Persistent Volume) Restore Mode property. This property sets whether volumes needs to be restored from vault."
        },
        "conflictPolicy": {
          "$ref": "#/definitions/ExistingResourcePolicy",
          "description": "Gets or sets the Conflict Policy property. This property sets policy during conflict of resources during restore from vault."
        },
        "namespaceMappings": {
          "type": "object",
          "description": "Gets or sets the Namespace Mappings property. This property sets if namespace needs to be change during restore from vault.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "restoreHookReferences": {
          "type": "array",
          "description": "Gets or sets the restore hook references. This property sets the hook reference to be executed during restore from vault.",
          "items": {
            "$ref": "#/definitions/NamespacedNameResource"
          },
          "x-ms-identifiers": []
        },
        "stagingResourceGroupId": {
          "type": "string",
          "format": "arm-id",
          "description": "Gets or sets the staging RG Id for creating staging disks and snapshots during restore from vault."
        },
        "stagingStorageAccountId": {
          "type": "string",
          "format": "arm-id",
          "description": "Gets or sets the staging Storage Account Id for creating backup extension object store data during restore from vault.",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.Storage/storageAccounts"
              }
            ]
          }
        },
        "resourceModifierReference": {
          "$ref": "#/definitions/NamespacedNameResource",
          "description": "Gets or sets the resource modifier reference. This property sets the reference for resource modifier during restore."
        }
      },
      "required": [
        "includeClusterScopeResources"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/ItemLevelRestoreCriteria"
        }
      ],
      "x-ms-discriminator-value": "KubernetesClusterVaultTierRestoreCriteria"
    },
    "KubernetesPVRestoreCriteria": {
      "type": "object",
      "description": "Item Level kubernetes persistent volume target info for restore operation",
      "properties": {
        "name": {
          "type": "string",
          "description": "Selected persistent volume claim name"
        },
        "storageClassName": {
          "type": "string",
          "description": "Selected storage class name for restore operation"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ItemLevelRestoreCriteria"
        }
      ],
      "x-ms-discriminator-value": "KubernetesPVRestoreCriteria"
    },
    "KubernetesStorageClassRestoreCriteria": {
      "type": "object",
      "description": "Item Level kubernetes storage class target info for restore operation",
      "properties": {
        "selectedStorageClassName": {
          "type": "string",
          "description": "Selected storage class name"
        },
        "provisioner": {
          "type": "string",
          "description": "Provisioner of the storage class"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ItemLevelRestoreCriteria"
        }
      ],
      "x-ms-discriminator-value": "KubernetesStorageClassRestoreCriteria"
    },
    "MonitoringSettings": {
      "type": "object",
      "description": "Monitoring Settings",
      "properties": {
        "azureMonitorAlertSettings": {
          "$ref": "#/definitions/AzureMonitorAlertSettings",
          "description": "Settings for Azure Monitor based alerts"
        }
      }
    },
    "Month": {
      "type": "string",
      "enum": [
        "April",
        "August",
        "December",
        "February",
        "January",
        "July",
        "June",
        "March",
        "May",
        "November",
        "October",
        "September"
      ],
      "x-ms-enum": {
        "name": "Month",
        "modelAsString": true,
        "values": [
          {
            "name": "April",
            "value": "April"
          },
          {
            "name": "August",
            "value": "August"
          },
          {
            "name": "December",
            "value": "December"
          },
          {
            "name": "February",
            "value": "February"
          },
          {
            "name": "January",
            "value": "January"
          },
          {
            "name": "July",
            "value": "July"
          },
          {
            "name": "June",
            "value": "June"
          },
          {
            "name": "March",
            "value": "March"
          },
          {
            "name": "May",
            "value": "May"
          },
          {
            "name": "November",
            "value": "November"
          },
          {
            "name": "October",
            "value": "October"
          },
          {
            "name": "September",
            "value": "September"
          }
        ]
      }
    },
    "NamespacedNameResource": {
      "type": "object",
      "description": "Class to refer resources which contains namespace and name",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the resource"
        },
        "namespace": {
          "type": "string",
          "description": "Namespace in which the resource exists"
        }
      }
    },
    "OperationExtendedInfo": {
      "type": "object",
      "description": "Operation Extended Info",
      "properties": {
        "objectType": {
          "type": "string",
          "description": "This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types."
        }
      },
      "discriminator": "objectType",
      "required": [
        "objectType"
      ]
    },
    "OperationJobExtendedInfo": {
      "type": "object",
      "description": "Operation Job Extended Info",
      "properties": {
        "jobId": {
          "type": "string",
          "description": "Name or Arm Id of the job created for this operation."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/OperationExtendedInfo"
        }
      ],
      "x-ms-discriminator-value": "OperationJobExtendedInfo"
    },
    "OperationResource": {
      "type": "object",
      "description": "Operation Resource",
      "properties": {
        "endTime": {
          "type": "string",
          "format": "date-time",
          "description": "End time of the operation"
        },
        "error": {
          "$ref": "#/definitions/Error",
          "description": "Required if status == failed or status == canceled. This is the OData v4 error format, used by the RPC and will go into the v2.2 Azure REST API guidelines.\nThe full set of optional properties (e.g. inner errors / details) can be found in the \"Error Response\" section."
        },
        "id": {
          "type": "string",
          "description": "It should match what is used to GET the operation result"
        },
        "name": {
          "type": "string",
          "description": "It must match the last segment of the \"id\" field, and will typically be a GUID / system generated value"
        },
        "properties": {
          "$ref": "#/definitions/OperationExtendedInfo",
          "description": "End time of the operation"
        },
        "startTime": {
          "type": "string",
          "format": "date-time",
          "description": "Start time of the operation"
        },
        "status": {
          "type": "string"
        }
      }
    },
    "PatchBackupVaultInput": {
      "type": "object",
      "description": "Backup Vault Contract for Patch Backup Vault API.",
      "properties": {
        "monitoringSettings": {
          "$ref": "#/definitions/MonitoringSettings",
          "description": "Monitoring Settings"
        },
        "securitySettings": {
          "$ref": "#/definitions/SecuritySettings",
          "description": "Security Settings"
        },
        "featureSettings": {
          "$ref": "#/definitions/FeatureSettings",
          "description": "Feature Settings"
        },
        "resourceGuardOperationRequests": {
          "type": "array",
          "description": "ResourceGuardOperationRequests on which LAC check will be performed",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "PatchResourceGuardInput": {
      "type": "object",
      "description": "Patch Request content for Microsoft.DataProtection Resource Guard resources",
      "properties": {
        "tags": {
          "type": "object",
          "description": "Resource Guard tags.",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "PatchResourceRequestInput": {
      "type": "object",
      "description": "Patch Request content for Microsoft.DataProtection resources",
      "properties": {
        "identity": {
          "$ref": "#/definitions/DppIdentityDetails",
          "description": "Input Managed Identity Details"
        },
        "properties": {
          "$ref": "#/definitions/PatchBackupVaultInput",
          "description": "Resource properties."
        },
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "PersistentVolumeRestoreMode": {
      "type": "string",
      "description": "Gets or sets the PV (Persistent Volume) Restore Mode property. This property sets whether volumes needs to be restored.",
      "enum": [
        "RestoreWithVolumeData",
        "RestoreWithoutVolumeData"
      ],
      "x-ms-enum": {
        "name": "PersistentVolumeRestoreMode",
        "modelAsString": true,
        "values": [
          {
            "name": "RestoreWithVolumeData",
            "value": "RestoreWithVolumeData"
          },
          {
            "name": "RestoreWithoutVolumeData",
            "value": "RestoreWithoutVolumeData"
          }
        ]
      }
    },
    "PolicyInfo": {
      "type": "object",
      "description": "Policy Info in backupInstance",
      "properties": {
        "policyId": {
          "type": "string"
        },
        "policyVersion": {
          "type": "string",
          "readOnly": true
        },
        "policyParameters": {
          "$ref": "#/definitions/PolicyParameters",
          "description": "Policy parameters for the backup instance"
        }
      },
      "required": [
        "policyId"
      ]
    },
    "PolicyParameters": {
      "type": "object",
      "description": "Parameters in Policy",
      "properties": {
        "dataStoreParametersList": {
          "type": "array",
          "description": "Gets or sets the DataStore Parameters",
          "items": {
            "$ref": "#/definitions/DataStoreParameters"
          },
          "x-ms-identifiers": []
        },
        "backupDatasourceParametersList": {
          "type": "array",
          "description": "Gets or sets the Backup Data Source Parameters",
          "items": {
            "$ref": "#/definitions/BackupDatasourceParameters"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "ProtectionStatusDetails": {
      "type": "object",
      "description": "Protection status details",
      "properties": {
        "errorDetails": {
          "$ref": "#/definitions/UserFacingError",
          "description": "Specifies the protection status error of the resource"
        },
        "status": {
          "$ref": "#/definitions/Status",
          "description": "Specifies the protection status of the resource"
        }
      }
    },
    "ProvisioningState": {
      "type": "string",
      "description": "Provisioning state of the BackupVault resource",
      "enum": [
        "Failed",
        "Provisioning",
        "Succeeded",
        "Unknown",
        "Updating"
      ],
      "x-ms-enum": {
        "name": "ProvisioningState",
        "modelAsString": true,
        "values": [
          {
            "name": "Failed",
            "value": "Failed"
          },
          {
            "name": "Provisioning",
            "value": "Provisioning"
          },
          {
            "name": "Succeeded",
            "value": "Succeeded"
          },
          {
            "name": "Unknown",
            "value": "Unknown"
          },
          {
            "name": "Updating",
            "value": "Updating"
          }
        ]
      }
    },
    "RangeBasedItemLevelRestoreCriteria": {
      "type": "object",
      "description": "Item Level target info for restore operation",
      "properties": {
        "minMatchingValue": {
          "type": "string",
          "description": "minimum value for range prefix match"
        },
        "maxMatchingValue": {
          "type": "string",
          "description": "maximum value for range prefix match"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ItemLevelRestoreCriteria"
        }
      ],
      "x-ms-discriminator-value": "RangeBasedItemLevelRestoreCriteria"
    },
    "RecoveryOption": {
      "type": "string",
      "description": "Recovery Option",
      "enum": [
        "FailIfExists"
      ],
      "x-ms-enum": {
        "name": "RecoveryOption",
        "modelAsString": true,
        "values": [
          {
            "name": "FailIfExists",
            "value": "FailIfExists"
          }
        ]
      }
    },
    "RecoveryPointCompletionState": {
      "type": "string",
      "description": "Specifies recovery point completeness. Partial (i.e., only some of the intended items were backed up), or Completed (i.e., ALL intended items were backed up).",
      "enum": [
        "Completed",
        "Partial"
      ],
      "x-ms-enum": {
        "name": "RecoveryPointCompletionState",
        "modelAsString": true,
        "values": [
          {
            "name": "Completed",
            "value": "Completed"
          },
          {
            "name": "Partial",
            "value": "Partial"
          }
        ]
      }
    },
    "RecoveryPointDataStoreDetails": {
      "type": "object",
      "description": "RecoveryPoint datastore details",
      "properties": {
        "creationTime": {
          "type": "string",
          "format": "date-time"
        },
        "expiryTime": {
          "type": "string",
          "format": "date-time"
        },
        "id": {
          "type": "string"
        },
        "metaData": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "visible": {
          "type": "boolean"
        },
        "rehydrationExpiryTime": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "rehydrationStatus": {
          "$ref": "#/definitions/RehydrationStatus",
          "readOnly": true
        }
      }
    },
    "RehydrationPriority": {
      "type": "string",
      "description": "Priority to be used for rehydration. Values High or Standard",
      "enum": [
        "Invalid",
        "High",
        "Standard"
      ],
      "x-ms-enum": {
        "name": "RehydrationPriority",
        "modelAsString": true,
        "values": [
          {
            "name": "Invalid",
            "value": "Invalid"
          },
          {
            "name": "High",
            "value": "High"
          },
          {
            "name": "Standard",
            "value": "Standard"
          }
        ]
      }
    },
    "RehydrationStatus": {
      "type": "string",
      "enum": [
        "CREATE_IN_PROGRESS",
        "COMPLETED",
        "DELETE_IN_PROGRESS",
        "DELETED",
        "FAILED"
      ],
      "x-ms-enum": {
        "name": "RehydrationStatus",
        "modelAsString": true,
        "values": [
          {
            "name": "CREATE_IN_PROGRESS",
            "value": "CREATE_IN_PROGRESS"
          },
          {
            "name": "COMPLETED",
            "value": "COMPLETED"
          },
          {
            "name": "DELETE_IN_PROGRESS",
            "value": "DELETE_IN_PROGRESS"
          },
          {
            "name": "DELETED",
            "value": "DELETED"
          },
          {
            "name": "FAILED",
            "value": "FAILED"
          }
        ]
      }
    },
    "ResourceGuard": {
      "type": "object",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "Provisioning state of the BackupVault resource",
          "readOnly": true
        },
        "allowAutoApprovals": {
          "type": "boolean",
          "description": "This flag indicates whether auto approval is allowed or not.",
          "readOnly": true
        },
        "resourceGuardOperations": {
          "type": "array",
          "description": "{readonly} List of operation details those are protected by the ResourceGuard resource",
          "items": {
            "$ref": "#/definitions/ResourceGuardOperation"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        },
        "vaultCriticalOperationExclusionList": {
          "type": "array",
          "description": "List of critical operations which are not protected by this resourceGuard",
          "items": {
            "type": "string"
          }
        },
        "description": {
          "type": "string",
          "description": "Description about the pre-req steps to perform all the critical operations.",
          "readOnly": true
        }
      }
    },
    "ResourceGuardOperation": {
      "type": "object",
      "description": "This class contains all the details about a critical operation.",
      "properties": {
        "vaultCriticalOperation": {
          "type": "string",
          "description": "Name of the critical operation.",
          "readOnly": true
        },
        "requestResourceType": {
          "type": "string",
          "description": "Type of resource request.",
          "readOnly": true
        }
      }
    },
    "ResourceGuardOperationDetail": {
      "type": "object",
      "description": "VaultCritical Operation protected by a resource guard",
      "properties": {
        "vaultCriticalOperation": {
          "type": "string"
        },
        "defaultResourceRequest": {
          "type": "string"
        }
      }
    },
    "ResourceGuardProxyBase": {
      "type": "object",
      "description": "ResourceGuardProxyBase object, used in ResourceGuardProxyBaseResource",
      "properties": {
        "resourceGuardResourceId": {
          "type": "string"
        },
        "resourceGuardOperationDetails": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResourceGuardOperationDetail"
          },
          "x-ms-identifiers": []
        },
        "lastUpdatedTime": {
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      }
    },
    "ResourceGuardProxyBaseResource": {
      "type": "object",
      "description": "ResourceGuardProxyBaseResource object, used for response and request bodies for ResourceGuardProxy APIs",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ResourceGuardProxyBase",
          "description": "ResourceGuardProxyBaseResource properties"
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "ResourceGuardProxyBaseResourceList": {
      "type": "object",
      "description": "List of ResourceGuardProxyBase resources",
      "properties": {
        "value": {
          "type": "array",
          "description": "List of resources.",
          "items": {
            "$ref": "#/definitions/ResourceGuardProxyBaseResource"
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/DppResourceList"
        }
      ]
    },
    "ResourceGuardResource": {
      "type": "object",
      "description": "Concrete tracked resource types can be created by aliasing this type using a specific property type.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ResourceGuard",
          "description": "ResourceGuardResource properties"
        },
        "eTag": {
          "type": "string",
          "description": "Optional ETag."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "ResourceGuardResourceList": {
      "type": "object",
      "description": "List of ResourceGuard resources",
      "properties": {
        "value": {
          "type": "array",
          "description": "List of resources.",
          "items": {
            "$ref": "#/definitions/ResourceGuardResource"
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/DppTrackedResourceList"
        }
      ]
    },
    "ResourceMoveDetails": {
      "type": "object",
      "description": "ResourceMoveDetails will be returned in response to GetResource call from ARM",
      "properties": {
        "operationId": {
          "type": "string",
          "description": "CorrelationId of latest ResourceMove operation attempted"
        },
        "startTimeUtc": {
          "type": "string",
          "description": "Start time in UTC of latest ResourceMove operation attempted. ISO 8601 format."
        },
        "completionTimeUtc": {
          "type": "string",
          "description": "Completion time in UTC of latest ResourceMove operation attempted. ISO 8601 format."
        },
        "sourceResourcePath": {
          "type": "string",
          "description": "ARM resource path of source resource"
        },
        "targetResourcePath": {
          "type": "string",
          "description": "ARM resource path of target resource used in latest ResourceMove operation"
        }
      }
    },
    "ResourceMoveState": {
      "type": "string",
      "description": "Resource move state for backup vault",
      "enum": [
        "Unknown",
        "InProgress",
        "PrepareFailed",
        "CommitFailed",
        "Failed",
        "PrepareTimedout",
        "CommitTimedout",
        "CriticalFailure",
        "PartialSuccess",
        "MoveSucceeded"
      ],
      "x-ms-enum": {
        "name": "ResourceMoveState",
        "modelAsString": true,
        "values": [
          {
            "name": "Unknown",
            "value": "Unknown"
          },
          {
            "name": "InProgress",
            "value": "InProgress"
          },
          {
            "name": "PrepareFailed",
            "value": "PrepareFailed"
          },
          {
            "name": "CommitFailed",
            "value": "CommitFailed"
          },
          {
            "name": "Failed",
            "value": "Failed"
          },
          {
            "name": "PrepareTimedout",
            "value": "PrepareTimedout"
          },
          {
            "name": "CommitTimedout",
            "value": "CommitTimedout"
          },
          {
            "name": "CriticalFailure",
            "value": "CriticalFailure"
          },
          {
            "name": "PartialSuccess",
            "value": "PartialSuccess"
          },
          {
            "name": "MoveSucceeded",
            "value": "MoveSucceeded"
          }
        ]
      }
    },
    "ResourcePropertiesObjectType": {
      "type": "string",
      "description": "Type of the specific object - used for deserializing",
      "enum": [
        "DefaultResourceProperties"
      ],
      "x-ms-enum": {
        "name": "ResourcePropertiesObjectType",
        "modelAsString": true,
        "values": [
          {
            "name": "DefaultResourceProperties",
            "value": "DefaultResourceProperties"
          }
        ]
      }
    },
    "RestorableTimeRange": {
      "type": "object",
      "properties": {
        "startTime": {
          "type": "string",
          "description": "Start time for the available restore range"
        },
        "endTime": {
          "type": "string",
          "description": "End time for the available restore range"
        },
        "objectType": {
          "type": "string"
        }
      },
      "required": [
        "startTime",
        "endTime"
      ]
    },
    "RestoreFilesTargetInfo": {
      "type": "object",
      "description": "Class encapsulating restore as files target parameters",
      "properties": {
        "targetDetails": {
          "$ref": "#/definitions/TargetDetails",
          "description": "Destination of RestoreAsFiles operation, when destination is not a datasource"
        }
      },
      "required": [
        "targetDetails"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/RestoreTargetInfoBase"
        }
      ],
      "x-ms-discriminator-value": "RestoreFilesTargetInfo"
    },
    "RestoreJobRecoveryPointDetails": {
      "type": "object",
      "properties": {
        "recoveryPointID": {
          "type": "string"
        },
        "recoveryPointTime": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "RestoreSourceDataStoreType": {
      "type": "string",
      "description": "Gets or sets the type of the source data store.",
      "enum": [
        "OperationalStore",
        "VaultStore",
        "ArchiveStore"
      ],
      "x-ms-enum": {
        "name": "RestoreSourceDataStoreType",
        "modelAsString": true,
        "values": [
          {
            "name": "OperationalStore",
            "value": "OperationalStore"
          },
          {
            "name": "VaultStore",
            "value": "VaultStore"
          },
          {
            "name": "ArchiveStore",
            "value": "ArchiveStore"
          }
        ]
      }
    },
    "RestoreTargetInfo": {
      "type": "object",
      "description": "Class encapsulating restore target parameters",
      "properties": {
        "datasourceInfo": {
          "$ref": "#/definitions/Datasource",
          "description": "Information of target DS"
        },
        "datasourceSetInfo": {
          "$ref": "#/definitions/DatasourceSet",
          "description": "Information of target DS Set"
        },
        "datasourceAuthCredentials": {
          "$ref": "#/definitions/AuthCredentials",
          "description": "Credentials to use to authenticate with data source provider."
        }
      },
      "required": [
        "datasourceInfo"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/RestoreTargetInfoBase"
        }
      ],
      "x-ms-discriminator-value": "RestoreTargetInfo"
    },
    "RestoreTargetInfoBase": {
      "type": "object",
      "description": "Base class common to RestoreTargetInfo and RestoreFilesTargetInfo",
      "properties": {
        "objectType": {
          "type": "string",
          "description": "Type of Datasource object, used to initialize the right inherited type"
        },
        "recoveryOption": {
          "$ref": "#/definitions/RecoveryOption",
          "description": "Recovery Option"
        },
        "restoreLocation": {
          "type": "string",
          "description": "Target Restore region"
        }
      },
      "discriminator": "objectType",
      "required": [
        "objectType",
        "recoveryOption"
      ]
    },
    "RestoreTargetLocationType": {
      "type": "string",
      "description": "Denotes the target location where the data will be restored,\nstring value for the enum {Microsoft.Internal.AzureBackup.DataProtection.Common.Interface.RestoreTargetLocationType}",
      "enum": [
        "Invalid",
        "AzureBlobs",
        "AzureFiles"
      ],
      "x-ms-enum": {
        "name": "RestoreTargetLocationType",
        "modelAsString": true,
        "values": [
          {
            "name": "Invalid",
            "value": "Invalid"
          },
          {
            "name": "AzureBlobs",
            "value": "AzureBlobs"
          },
          {
            "name": "AzureFiles",
            "value": "AzureFiles"
          }
        ]
      }
    },
    "RetentionTag": {
      "type": "object",
      "description": "Retention tag",
      "properties": {
        "eTag": {
          "type": "string",
          "description": "Retention Tag version.",
          "readOnly": true
        },
        "id": {
          "type": "string",
          "description": "Retention Tag version.",
          "readOnly": true
        },
        "tagName": {
          "type": "string",
          "description": "Retention Tag Name to relate it to retention rule."
        }
      },
      "required": [
        "tagName"
      ]
    },
    "ScheduleBasedBackupCriteria": {
      "type": "object",
      "description": "Schedule based backup criteria",
      "properties": {
        "absoluteCriteria": {
          "type": "array",
          "description": "it contains absolute values like \"AllBackup\" / \"FirstOfDay\" / \"FirstOfWeek\" / \"FirstOfMonth\"\nand should be part of AbsoluteMarker enum",
          "items": {
            "$ref": "#/definitions/AbsoluteMarker"
          }
        },
        "daysOfMonth": {
          "type": "array",
          "description": "This is day of the month from 1 to 28 other wise last of month",
          "items": {
            "$ref": "#/definitions/Day"
          },
          "x-ms-identifiers": []
        },
        "daysOfTheWeek": {
          "type": "array",
          "description": "It should be Sunday/Monday/T..../Saturday",
          "items": {
            "$ref": "#/definitions/DayOfWeek"
          }
        },
        "monthsOfYear": {
          "type": "array",
          "description": "It should be January/February/....../December",
          "items": {
            "$ref": "#/definitions/Month"
          }
        },
        "scheduleTimes": {
          "type": "array",
          "description": "List of schedule times for backup",
          "items": {
            "type": "string",
            "format": "date-time"
          }
        },
        "weeksOfTheMonth": {
          "type": "array",
          "description": "It should be First/Second/Third/Fourth/Last",
          "items": {
            "$ref": "#/definitions/WeekNumber"
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/BackupCriteria"
        }
      ],
      "x-ms-discriminator-value": "ScheduleBasedBackupCriteria"
    },
    "ScheduleBasedTriggerContext": {
      "type": "object",
      "description": "Schedule based trigger context",
      "properties": {
        "schedule": {
          "$ref": "#/definitions/BackupSchedule",
          "description": "Schedule for this backup"
        },
        "taggingCriteria": {
          "type": "array",
          "description": "List of tags that can be applicable for given schedule.",
          "items": {
            "$ref": "#/definitions/TaggingCriteria"
          },
          "x-ms-identifiers": []
        }
      },
      "required": [
        "schedule",
        "taggingCriteria"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/TriggerContext"
        }
      ],
      "x-ms-discriminator-value": "ScheduleBasedTriggerContext"
    },
    "SecretStoreBasedAuthCredentials": {
      "type": "object",
      "description": "Secret store based authentication credentials.",
      "properties": {
        "secretStoreResource": {
          "$ref": "#/definitions/SecretStoreResource",
          "description": "Secret store resource"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/AuthCredentials"
        }
      ],
      "x-ms-discriminator-value": "SecretStoreBasedAuthCredentials"
    },
    "SecretStoreResource": {
      "type": "object",
      "description": "Class representing a secret store resource.",
      "properties": {
        "uri": {
          "type": "string",
          "description": "Uri to get to the resource"
        },
        "secretStoreType": {
          "$ref": "#/definitions/SecretStoreType",
          "description": "Gets or sets the type of secret store"
        },
        "value": {
          "type": "string",
          "description": "Gets or sets value stored in secret store resource"
        }
      },
      "required": [
        "secretStoreType"
      ]
    },
    "SecretStoreType": {
      "type": "string",
      "description": "Gets or sets the type of secret store",
      "enum": [
        "Invalid",
        "AzureKeyVault"
      ],
      "x-ms-enum": {
        "name": "SecretStoreType",
        "modelAsString": true,
        "values": [
          {
            "name": "Invalid",
            "value": "Invalid"
          },
          {
            "name": "AzureKeyVault",
            "value": "AzureKeyVault"
          }
        ]
      }
    },
    "SecureScoreLevel": {
      "type": "string",
      "description": "Secure Score of Backup Vault",
      "enum": [
        "None",
        "Minimum",
        "Adequate",
        "Maximum",
        "NotSupported"
      ],
      "x-ms-enum": {
        "name": "SecureScoreLevel",
        "modelAsString": true,
        "values": [
          {
            "name": "None",
            "value": "None"
          },
          {
            "name": "Minimum",
            "value": "Minimum"
          },
          {
            "name": "Adequate",
            "value": "Adequate"
          },
          {
            "name": "Maximum",
            "value": "Maximum"
          },
          {
            "name": "NotSupported",
            "value": "NotSupported"
          }
        ]
      }
    },
    "SecuritySettings": {
      "type": "object",
      "description": "Class containing security settings of vault",
      "properties": {
        "softDeleteSettings": {
          "$ref": "#/definitions/SoftDeleteSettings",
          "description": "Soft delete related settings"
        },
        "immutabilitySettings": {
          "$ref": "#/definitions/ImmutabilitySettings",
          "description": "Immutability Settings at vault level"
        },
        "encryptionSettings": {
          "$ref": "#/definitions/encryptionSettings",
          "description": "Customer Managed Key details of the resource."
        }
      }
    },
    "SoftDeleteSettings": {
      "type": "object",
      "description": "Soft delete related settings",
      "properties": {
        "state": {
          "$ref": "#/definitions/SoftDeleteState",
          "description": "State of soft delete"
        },
        "retentionDurationInDays": {
          "type": "number",
          "format": "double",
          "description": "Soft delete retention duration"
        }
      }
    },
    "SoftDeleteState": {
      "type": "string",
      "description": "State of soft delete",
      "enum": [
        "Off",
        "On",
        "AlwaysOn"
      ],
      "x-ms-enum": {
        "name": "SoftDeleteState",
        "modelAsString": true,
        "values": [
          {
            "name": "Off",
            "value": "Off",
            "description": "Soft Delete is turned off for the BackupVault"
          },
          {
            "name": "On",
            "value": "On",
            "description": "Soft Delete is enabled for the BackupVault but can be turned off"
          },
          {
            "name": "AlwaysOn",
            "value": "AlwaysOn",
            "description": "Soft Delete is permanently enabled for the BackupVault and the setting cannot be changed"
          }
        ]
      }
    },
    "SourceDataStoreType": {
      "type": "string",
      "description": "Gets or sets the type of the source data store.",
      "enum": [
        "ArchiveStore",
        "SnapshotStore",
        "OperationalStore",
        "VaultStore"
      ],
      "x-ms-enum": {
        "name": "SourceDataStoreType",
        "modelAsString": true,
        "values": [
          {
            "name": "ArchiveStore",
            "value": "ArchiveStore"
          },
          {
            "name": "SnapshotStore",
            "value": "SnapshotStore"
          },
          {
            "name": "OperationalStore",
            "value": "OperationalStore"
          },
          {
            "name": "VaultStore",
            "value": "VaultStore"
          }
        ]
      }
    },
    "SourceLifeCycle": {
      "type": "object",
      "description": "Source LifeCycle",
      "properties": {
        "deleteAfter": {
          "$ref": "#/definitions/DeleteOption",
          "description": "Delete Option"
        },
        "sourceDataStore": {
          "$ref": "#/definitions/DataStoreInfoBase",
          "description": "DataStoreInfo base"
        },
        "targetDataStoreCopySettings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TargetCopySetting"
          },
          "x-ms-identifiers": []
        }
      },
      "required": [
        "deleteAfter",
        "sourceDataStore"
      ]
    },
    "Status": {
      "type": "string",
      "description": "Specifies the protection status of the resource",
      "enum": [
        "ConfiguringProtection",
        "ConfiguringProtectionFailed",
        "ProtectionConfigured",
        "ProtectionStopped",
        "SoftDeleted",
        "SoftDeleting"
      ],
      "x-ms-enum": {
        "name": "Status",
        "modelAsString": true,
        "values": [
          {
            "name": "ConfiguringProtection",
            "value": "ConfiguringProtection"
          },
          {
            "name": "ConfiguringProtectionFailed",
            "value": "ConfiguringProtectionFailed"
          },
          {
            "name": "ProtectionConfigured",
            "value": "ProtectionConfigured"
          },
          {
            "name": "ProtectionStopped",
            "value": "ProtectionStopped"
          },
          {
            "name": "SoftDeleted",
            "value": "SoftDeleted"
          },
          {
            "name": "SoftDeleting",
            "value": "SoftDeleting"
          }
        ]
      }
    },
    "StopProtectionRequest": {
      "type": "object",
      "description": "Request body of Stop protection when MUA is Enabled",
      "properties": {
        "resourceGuardOperationRequests": {
          "type": "array",
          "description": "ResourceGuardOperationRequests on which LAC check will be performed",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "StorageSetting": {
      "type": "object",
      "description": "Storage setting",
      "properties": {
        "datastoreType": {
          "$ref": "#/definitions/StorageSettingStoreTypes",
          "description": "Gets or sets the type of the datastore."
        },
        "type": {
          "$ref": "#/definitions/StorageSettingTypes",
          "description": "Gets or sets the type."
        }
      }
    },
    "StorageSettingStoreTypes": {
      "type": "string",
      "description": "Gets or sets the type of the datastore.",
      "enum": [
        "ArchiveStore",
        "OperationalStore",
        "VaultStore"
      ],
      "x-ms-enum": {
        "name": "StorageSettingStoreTypes",
        "modelAsString": true,
        "values": [
          {
            "name": "ArchiveStore",
            "value": "ArchiveStore"
          },
          {
            "name": "OperationalStore",
            "value": "OperationalStore"
          },
          {
            "name": "VaultStore",
            "value": "VaultStore"
          }
        ]
      }
    },
    "StorageSettingTypes": {
      "type": "string",
      "description": "Gets or sets the type.",
      "enum": [
        "GeoRedundant",
        "LocallyRedundant",
        "ZoneRedundant"
      ],
      "x-ms-enum": {
        "name": "StorageSettingTypes",
        "modelAsString": true,
        "values": [
          {
            "name": "GeoRedundant",
            "value": "GeoRedundant"
          },
          {
            "name": "LocallyRedundant",
            "value": "LocallyRedundant"
          },
          {
            "name": "ZoneRedundant",
            "value": "ZoneRedundant"
          }
        ]
      }
    },
    "SupportedFeature": {
      "type": "object",
      "description": "Elements class for feature request",
      "properties": {
        "featureName": {
          "type": "string",
          "description": "support feature type."
        },
        "supportStatus": {
          "$ref": "#/definitions/FeatureSupportStatus",
          "description": "feature support status"
        },
        "exposureControlledFeatures": {
          "type": "array",
          "description": "support feature type.",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "SuspendBackupRequest": {
      "type": "object",
      "description": "Request body of Suspend backup when MUA is Enabled",
      "properties": {
        "resourceGuardOperationRequests": {
          "type": "array",
          "description": "ResourceGuardOperationRequests on which LAC check will be performed",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "SyncBackupInstanceRequest": {
      "type": "object",
      "description": "Sync BackupInstance Request",
      "properties": {
        "syncType": {
          "$ref": "#/definitions/SyncType",
          "description": "Field indicating sync type e.g. to sync only in case of failure or in all cases"
        }
      }
    },
    "SyncType": {
      "type": "string",
      "description": "Field indicating sync type e.g. to sync only in case of failure or in all cases",
      "enum": [
        "Default",
        "ForceResync"
      ],
      "x-ms-enum": {
        "name": "SyncType",
        "modelAsString": true,
        "values": [
          {
            "name": "Default",
            "value": "Default"
          },
          {
            "name": "ForceResync",
            "value": "ForceResync"
          }
        ]
      }
    },
    "TaggingCriteria": {
      "type": "object",
      "description": "Tagging criteria",
      "properties": {
        "criteria": {
          "type": "array",
          "description": "Criteria which decides whether the tag can be applied to a triggered backup.",
          "items": {
            "$ref": "#/definitions/BackupCriteria"
          },
          "x-ms-identifiers": []
        },
        "isDefault": {
          "type": "boolean",
          "description": "Specifies if tag is default."
        },
        "taggingPriority": {
          "type": "integer",
          "format": "int64",
          "description": "Retention Tag priority."
        },
        "tagInfo": {
          "$ref": "#/definitions/RetentionTag",
          "description": "Retention tag information"
        }
      },
      "required": [
        "isDefault",
        "taggingPriority",
        "tagInfo"
      ]
    },
    "TargetCopySetting": {
      "type": "object",
      "description": "Target copy settings",
      "properties": {
        "copyAfter": {
          "$ref": "#/definitions/CopyOption",
          "description": "It can be CustomCopyOption or ImmediateCopyOption."
        },
        "dataStore": {
          "$ref": "#/definitions/DataStoreInfoBase",
          "description": "Info of target datastore"
        }
      },
      "required": [
        "copyAfter",
        "dataStore"
      ]
    },
    "TargetDetails": {
      "type": "object",
      "description": "Class encapsulating target details, used where the destination is not a datasource",
      "properties": {
        "filePrefix": {
          "type": "string",
          "description": "Restore operation may create multiple files inside location pointed by Url\nBelow will be the common prefix for all of them"
        },
        "restoreTargetLocationType": {
          "$ref": "#/definitions/RestoreTargetLocationType",
          "description": "Denotes the target location where the data will be restored,\nstring value for the enum {Microsoft.Internal.AzureBackup.DataProtection.Common.Interface.RestoreTargetLocationType}"
        },
        "url": {
          "type": "string",
          "description": "Url denoting the restore destination. It can point to container / file share etc"
        },
        "targetResourceArmId": {
          "type": "string",
          "description": "Full ARM Id denoting the restore destination. It is the ARM Id pointing to container / file share\nThis is optional if the target subscription can be identified with the URL field. If not\nthen this is needed if CrossSubscriptionRestore field of BackupVault is in any of the disabled states"
        }
      },
      "required": [
        "filePrefix",
        "restoreTargetLocationType",
        "url"
      ]
    },
    "TriggerBackupRequest": {
      "type": "object",
      "description": "Trigger backup request",
      "properties": {
        "backupRuleOptions": {
          "$ref": "#/definitions/AdHocBackupRuleOptions",
          "description": "Name for the Rule of the Policy which needs to be applied for this backup"
        }
      },
      "required": [
        "backupRuleOptions"
      ]
    },
    "TriggerContext": {
      "type": "object",
      "description": "Trigger context",
      "properties": {
        "objectType": {
          "type": "string",
          "description": "Type of the specific object - used for deserializing"
        }
      },
      "discriminator": "objectType",
      "required": [
        "objectType"
      ]
    },
    "UnlockDeleteRequest": {
      "type": "object",
      "description": "Request body of unlock delete API.",
      "properties": {
        "resourceGuardOperationRequests": {
          "type": "array",
          "description": "ResourceGuardOperationRequests on which LAC check will be performed",
          "items": {
            "type": "string"
          }
        },
        "resourceToBeDeleted": {
          "type": "string"
        }
      }
    },
    "UnlockDeleteResponse": {
      "type": "object",
      "description": "Response of Unlock Delete API.",
      "properties": {
        "unlockDeleteExpiryTime": {
          "type": "string",
          "description": "This is the time when unlock delete privileges will get expired."
        }
      }
    },
    "UserFacingError": {
      "type": "object",
      "description": "Error object used by layers that have access to localized content, and propagate that to user",
      "properties": {
        "code": {
          "type": "string",
          "description": "Unique code for this error"
        },
        "details": {
          "type": "array",
          "description": "Additional related Errors",
          "items": {
            "$ref": "#/definitions/UserFacingError"
          },
          "x-ms-identifiers": []
        },
        "innerError": {
          "$ref": "#/definitions/InnerError",
          "description": "Inner Error"
        },
        "isRetryable": {
          "type": "boolean",
          "description": "Whether the operation will be retryable or not"
        },
        "isUserError": {
          "type": "boolean",
          "description": "Whether the operation is due to a user error or service error"
        },
        "properties": {
          "type": "object",
          "description": "Any key value pairs that can be injected inside error object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "message": {
          "type": "string"
        },
        "recommendedAction": {
          "type": "array",
          "description": "RecommendedAction � localized.",
          "items": {
            "type": "string"
          }
        },
        "target": {
          "type": "string",
          "description": "Target of the error."
        }
      }
    },
    "UserFacingWarningDetail": {
      "type": "object",
      "description": "Warning object used by layers that have access to localized content, and propagate that to user",
      "properties": {
        "resourceName": {
          "type": "string",
          "description": "Name of resource for which warning is raised."
        },
        "warning": {
          "$ref": "#/definitions/UserFacingError",
          "description": "Error details for the warning."
        }
      },
      "required": [
        "warning"
      ]
    },
    "ValidateCrossRegionRestoreRequestObject": {
      "type": "object",
      "description": "Cross Region Restore Request Object",
      "properties": {
        "restoreRequestObject": {
          "$ref": "#/definitions/AzureBackupRestoreRequest",
          "description": "Gets or sets the restore request object."
        },
        "crossRegionRestoreDetails": {
          "$ref": "#/definitions/CrossRegionRestoreDetails",
          "description": "Cross region restore details."
        }
      },
      "required": [
        "restoreRequestObject",
        "crossRegionRestoreDetails"
      ]
    },
    "ValidateForBackupRequest": {
      "type": "object",
      "description": "Validate for backup request",
      "properties": {
        "backupInstance": {
          "$ref": "#/definitions/BackupInstance",
          "description": "Backup Instance"
        }
      },
      "required": [
        "backupInstance"
      ]
    },
    "ValidateForModifyBackupRequest": {
      "type": "object",
      "description": "Validate for modify backup request",
      "properties": {
        "backupInstance": {
          "$ref": "#/definitions/BackupInstance",
          "description": "Backup Instance"
        }
      },
      "required": [
        "backupInstance"
      ]
    },
    "ValidateRestoreRequestObject": {
      "type": "object",
      "description": "Validate restore request object",
      "properties": {
        "restoreRequestObject": {
          "$ref": "#/definitions/AzureBackupRestoreRequest",
          "description": "Gets or sets the restore request object."
        }
      },
      "required": [
        "restoreRequestObject"
      ]
    },
    "ValidationType": {
      "type": "string",
      "description": "Specifies the type of validation. In case of DeepValidation, all validations from /validateForBackup API will run again.",
      "enum": [
        "ShallowValidation",
        "DeepValidation"
      ],
      "x-ms-enum": {
        "name": "ValidationType",
        "modelAsString": true,
        "values": [
          {
            "name": "ShallowValidation",
            "value": "ShallowValidation"
          },
          {
            "name": "DeepValidation",
            "value": "DeepValidation"
          }
        ]
      }
    },
    "WeekNumber": {
      "type": "string",
      "enum": [
        "First",
        "Fourth",
        "Last",
        "Second",
        "Third"
      ],
      "x-ms-enum": {
        "name": "WeekNumber",
        "modelAsString": true,
        "values": [
          {
            "name": "First",
            "value": "First"
          },
          {
            "name": "Fourth",
            "value": "Fourth"
          },
          {
            "name": "Last",
            "value": "Last"
          },
          {
            "name": "Second",
            "value": "Second"
          },
          {
            "name": "Third",
            "value": "Third"
          }
        ]
      }
    },
    "encryptionSettings": {
      "type": "object",
      "description": "Customer Managed Key details of the resource.",
      "properties": {
        "state": {
          "$ref": "#/definitions/EncryptionState",
          "description": "Encryption state of the Backup Vault."
        },
        "keyVaultProperties": {
          "$ref": "#/definitions/CmkKeyVaultProperties",
          "description": "The properties of the Key Vault which hosts CMK"
        },
        "kekIdentity": {
          "$ref": "#/definitions/CmkKekIdentity",
          "description": "The details of the managed identity used for CMK"
        },
        "infrastructureEncryption": {
          "$ref": "#/definitions/InfrastructureEncryptionState",
          "description": "Enabling/Disabling the Double Encryption state"
        }
      }
    }
  },
  "parameters": {}
}
