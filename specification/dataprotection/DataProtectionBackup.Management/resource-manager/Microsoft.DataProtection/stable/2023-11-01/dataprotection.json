{
  "swagger": "2.0",
  "info": {
    "title": "Data Protection Client",
    "version": "2023-11-01",
    "description": "Open API 2.0 Specs for Azure Data Protection service",
    "x-typespec-generated": [
      {
        "emitter": "@azure-tools/typespec-autorest"
      }
    ]
  },
  "schemes": [
    "https"
  ],
  "host": "management.azure.com",
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "security": [
    {
      "AadOauth2Auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "AadOauth2Auth": {
      "type": "oauth2",
      "description": "The Azure Active Directory OAuth2 Flow",
      "flow": "accessCode",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
        "user_impersonation": ""
      },
      "tokenUrl": "https://login.microsoftonline.com/common/oauth2/token"
    }
  },
  "tags": [
    {
      "name": "Operations"
    },
    {
      "name": "BackupVaultResources"
    },
    {
      "name": "BaseBackupPolicyResources"
    },
    {
      "name": "BackupInstanceResources"
    },
    {
      "name": "AzureBackupRecoveryPointResources"
    },
    {
      "name": "AzureBackupJobResources"
    },
    {
      "name": "DeletedBackupInstanceResources"
    },
    {
      "name": "ResourceGuardResources"
    },
    {
      "name": "ResourceGuardProxyBaseResources"
    }
  ],
  "paths": {
    "/providers/Microsoft.DataProtection/operations": {
      "get": {
        "operationId": "Operations_List",
        "tags": [
          "Operations"
        ],
        "description": "List the operations for the provider",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/OperationListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.DataProtection/backupVaults": {
      "get": {
        "operationId": "BackupVaults_GetInSubscription",
        "tags": [
          "BackupVaultResources"
        ],
        "description": "Returns resource collection belonging to a subscription.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/BackupVaultResourceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get BackupVaults in Subscription": {
            "$ref": "./examples/BackupVaults_GetInSubscription.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.DataProtection/locations/{location}/checkFeatureSupport": {
      "post": {
        "operationId": "DataProtectionOperations_CheckFeatureSupport",
        "summary": "Validates if a feature is supported",
        "description": "Validates if a feature is supported",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string"
          },
          {
            "name": "location",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "content",
            "in": "body",
            "description": "Feature support request object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FeatureValidationRequestBase"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/FeatureValidationResponseBase"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.DataProtection/resourceGuards": {
      "get": {
        "operationId": "ResourceGuards_GetResourcesInSubscription",
        "tags": [
          "ResourceGuardResources"
        ],
        "description": "Returns ResourceGuards collection belonging to a subscription.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ResourceGuardResourceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get ResourceGuards in Subscription": {
            "$ref": "./examples/ResourceGuards_GetResourcesInSubscription.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataProtection/backupVaults": {
      "get": {
        "operationId": "BackupVaults_GetInResourceGroup",
        "tags": [
          "BackupVaultResources"
        ],
        "description": "Returns resource collection belonging to a resource group.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/BackupVaultResourceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get BackupVaults in ResourceGroup": {
            "$ref": "./examples/BackupVaults_GetInResourceGroup.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataProtection/backupVaults/{vaultName}": {
      "get": {
        "operationId": "BackupVaults_Get",
        "tags": [
          "BackupVaultResources"
        ],
        "description": "Returns a resource belonging to a resource group.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "vaultName",
            "in": "path",
            "description": "The name of the backup vault.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/BackupVaultResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get BackupVault": {
            "$ref": "./examples/BackupVaults_Get_Get_Backup_Vault.json"
          },
          "Get BackupVault With MSI": {
            "$ref": "./examples/BackupVaults_Get_Get_Backup_Vault_With_Msi.json"
          }
        }
      },
      "put": {
        "operationId": "BackupVaults_CreateOrUpdate",
        "tags": [
          "BackupVaultResources"
        ],
        "description": "Creates or updates a BackupVault resource belonging to a resource group.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "vaultName",
            "in": "path",
            "description": "The name of the backup vault.",
            "required": true,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Request body for operation",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BackupVaultResource"
            },
            "x-ms-client-name": "parameters"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'BackupVaultResource' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/BackupVaultResource"
            }
          },
          "201": {
            "description": "Resource 'BackupVaultResource' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/BackupVaultResource"
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Create BackupVault": {
            "$ref": "./examples/BackupVaults_CreateOrUpdate_Create_Backup_Vault.json"
          },
          "Create BackupVault With MSI": {
            "$ref": "./examples/BackupVaults_CreateOrUpdate_Create_Backup_Vault_With_Msi.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "BackupVaults_Update",
        "tags": [
          "BackupVaultResources"
        ],
        "description": "Updates a BackupVault resource belonging to a resource group. For example, updating tags for a resource.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "vaultName",
            "in": "path",
            "description": "The name of the backup vault.",
            "required": true,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Request body for operation",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PatchResourceRequestInput"
            },
            "x-ms-client-name": "parameters"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/BackupVaultResource"
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Patch BackupVault": {
            "$ref": "./examples/BackupVaults_Update.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "BackupVaults_Delete",
        "tags": [
          "BackupVaultResources"
        ],
        "description": "Deletes a BackupVault resource from the resource group.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "vaultName",
            "in": "path",
            "description": "The name of the backup vault.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete BackupVault": {
            "$ref": "./examples/BackupVaults_Delete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataProtection/backupVaults/{vaultName}/backupInstances": {
      "get": {
        "operationId": "BackupInstances_List",
        "tags": [
          "BackupInstanceResources"
        ],
        "description": "Gets a backup instances belonging to a backup vault",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "vaultName",
            "in": "path",
            "description": "The name of the backup vault.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/BackupInstanceResourceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List BackupInstances in a Vault": {
            "$ref": "./examples/BackupInstances_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataProtection/backupVaults/{vaultName}/backupInstances/{backupInstanceName}": {
      "get": {
        "operationId": "BackupInstances_Get",
        "tags": [
          "BackupInstanceResources"
        ],
        "description": "Gets a backup instance with name in a backup vault",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "vaultName",
            "in": "path",
            "description": "The name of the backup vault.",
            "required": true,
            "type": "string"
          },
          {
            "name": "backupInstanceName",
            "in": "path",
            "description": "The name of the backup instance.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/BackupInstanceResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get BackupInstance": {
            "$ref": "./examples/BackupInstances_Get.json"
          }
        }
      },
      "put": {
        "operationId": "BackupInstances_CreateOrUpdate",
        "tags": [
          "BackupInstanceResources"
        ],
        "description": "Create or update a backup instance in a backup vault",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "vaultName",
            "in": "path",
            "description": "The name of the backup vault.",
            "required": true,
            "type": "string"
          },
          {
            "name": "backupInstanceName",
            "in": "path",
            "description": "The name of the backup instance.",
            "required": true,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Request body for operation",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BackupInstanceResource"
            },
            "x-ms-client-name": "parameters"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'BackupInstanceResource' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/BackupInstanceResource"
            }
          },
          "201": {
            "description": "Resource 'BackupInstanceResource' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/BackupInstanceResource"
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Create BackupInstance": {
            "$ref": "./examples/BackupInstances_CreateOrUpdate.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "BackupInstances_Delete",
        "tags": [
          "BackupInstanceResources"
        ],
        "description": "Delete a backup instance in a backup vault",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "vaultName",
            "in": "path",
            "description": "The name of the backup vault.",
            "required": true,
            "type": "string"
          },
          {
            "name": "backupInstanceName",
            "in": "path",
            "description": "The name of the backup instance.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete BackupInstance": {
            "$ref": "./examples/BackupInstances_Delete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataProtection/backupVaults/{vaultName}/backupInstances/{backupInstanceName}/adhocBackup": {
      "post": {
        "operationId": "BackupInstances_AdhocBackup",
        "tags": [
          "BackupInstanceResources"
        ],
        "description": "Trigger adhoc backup",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "vaultName",
            "in": "path",
            "description": "The name of the backup vault.",
            "required": true,
            "type": "string"
          },
          {
            "name": "backupInstanceName",
            "in": "path",
            "description": "The name of the backup instance.",
            "required": true,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Request body for operation",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TriggerBackupRequest"
            },
            "x-ms-client-name": "parameters"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/OperationJobExtendedInfo"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Trigger Adhoc Backup": {
            "$ref": "./examples/BackupInstances_AdhocBackup.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataProtection/backupVaults/{vaultName}/backupInstances/{backupInstanceName}/find": {
      "post": {
        "operationId": "RestorableTimeRanges_Find",
        "tags": [
          "BackupInstanceResources"
        ],
        "description": "A synchronous resource action.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "vaultName",
            "in": "path",
            "description": "The name of the backup vault.",
            "required": true,
            "type": "string"
          },
          {
            "name": "backupInstanceName",
            "in": "path",
            "description": "The name of the backup instance.",
            "required": true,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Request body for operation",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AzureBackupFindRestorableTimeRangesRequest"
            },
            "x-ms-client-name": "parameters"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/AzureBackupFindRestorableTimeRangesResponseResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Find Restorable Time Ranges": {
            "$ref": "./examples/RestorableTimeRanges_Find.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataProtection/backupVaults/{vaultName}/backupInstances/{backupInstanceName}/recoveryPoints": {
      "get": {
        "operationId": "RecoveryPoints_List",
        "tags": [
          "AzureBackupRecoveryPointResources"
        ],
        "description": "Returns a list of Recovery Points for a DataSource in a vault.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "OData filter options.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$skipToken",
            "in": "query",
            "description": "skipToken Filter.",
            "required": false,
            "type": "string"
          },
          {
            "name": "vaultName",
            "in": "path",
            "description": "The name of the backup vault.",
            "required": true,
            "type": "string"
          },
          {
            "name": "backupInstanceName",
            "in": "path",
            "description": "The name of the backup instance.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/AzureBackupRecoveryPointResourceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List Recovery Points in a Vault": {
            "$ref": "./examples/RecoveryPoints_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataProtection/backupVaults/{vaultName}/backupInstances/{backupInstanceName}/recoveryPoints/{recoveryPointId}": {
      "get": {
        "operationId": "RecoveryPoints_Get",
        "tags": [
          "AzureBackupRecoveryPointResources"
        ],
        "description": "Gets a Recovery Point using recoveryPointId for a Datasource.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "vaultName",
            "in": "path",
            "description": "The name of the backup vault.",
            "required": true,
            "type": "string"
          },
          {
            "name": "backupInstanceName",
            "in": "path",
            "description": "The name of the backup instance.",
            "required": true,
            "type": "string"
          },
          {
            "name": "recoveryPointId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/AzureBackupRecoveryPointResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get Recovery Point": {
            "$ref": "./examples/RecoveryPoints_Get.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataProtection/backupVaults/{vaultName}/backupInstances/{backupInstanceName}/resumeBackups": {
      "post": {
        "operationId": "BackupInstances_ResumeBackups",
        "tags": [
          "BackupInstanceResources"
        ],
        "description": "This operation will resume backups for backup instance",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "vaultName",
            "in": "path",
            "description": "The name of the backup vault.",
            "required": true,
            "type": "string"
          },
          {
            "name": "backupInstanceName",
            "in": "path",
            "description": "The name of the backup instance.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "204": {
            "description": "ARM operation completed successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ResumeBackups": {
            "$ref": "./examples/BackupInstances_ResumeBackups.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataProtection/backupVaults/{vaultName}/backupInstances/{backupInstanceName}/resumeProtection": {
      "post": {
        "operationId": "BackupInstances_ResumeProtection",
        "tags": [
          "BackupInstanceResources"
        ],
        "description": "This operation will resume protection for a stopped backup instance",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "vaultName",
            "in": "path",
            "description": "The name of the backup vault.",
            "required": true,
            "type": "string"
          },
          {
            "name": "backupInstanceName",
            "in": "path",
            "description": "The name of the backup instance.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "204": {
            "description": "ARM operation completed successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ResumeProtection": {
            "$ref": "./examples/BackupInstances_ResumeProtection.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataProtection/backupVaults/{vaultName}/backupInstances/{backupInstanceName}/stopProtection": {
      "post": {
        "operationId": "BackupInstances_StopProtection",
        "tags": [
          "BackupInstanceResources"
        ],
        "description": "This operation will stop protection of a backup instance and data will be held forever",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "vaultName",
            "in": "path",
            "description": "The name of the backup vault.",
            "required": true,
            "type": "string"
          },
          {
            "name": "backupInstanceName",
            "in": "path",
            "description": "The name of the backup instance.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "204": {
            "description": "ARM operation completed successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "StopProtection": {
            "$ref": "./examples/BackupInstances_StopProtection.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataProtection/backupVaults/{vaultName}/backupInstances/{backupInstanceName}/suspendBackups": {
      "post": {
        "operationId": "BackupInstances_SuspendBackups",
        "tags": [
          "BackupInstanceResources"
        ],
        "description": "This operation will stop backup for a backup instance and retains the backup data as per the policy (except latest Recovery point, which will be retained forever)",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "vaultName",
            "in": "path",
            "description": "The name of the backup vault.",
            "required": true,
            "type": "string"
          },
          {
            "name": "backupInstanceName",
            "in": "path",
            "description": "The name of the backup instance.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "204": {
            "description": "ARM operation completed successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "SuspendBackups": {
            "$ref": "./examples/BackupInstances_SuspendBackups.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataProtection/backupVaults/{vaultName}/backupInstances/{backupInstanceName}/syncBackupInstance": {
      "post": {
        "operationId": "BackupInstances_SyncBackupInstance",
        "tags": [
          "BackupInstanceResources"
        ],
        "description": "Sync backup instance again in case of failure\nThis action will retry last failed operation and will bring backup instance to valid state",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "vaultName",
            "in": "path",
            "description": "The name of the backup vault.",
            "required": true,
            "type": "string"
          },
          {
            "name": "backupInstanceName",
            "in": "path",
            "description": "The name of the backup instance.",
            "required": true,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Request body for operation",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SyncBackupInstanceRequest"
            },
            "x-ms-client-name": "parameters"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "204": {
            "description": "ARM operation completed successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Sync BackupInstance": {
            "$ref": "./examples/BackupInstances_SyncBackupInstance.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataProtection/backupVaults/{vaultName}/backupInstances/{backupInstanceName}/triggerRehydrate": {
      "post": {
        "operationId": "BackupInstances_TriggerRehydrate",
        "tags": [
          "BackupInstanceResources"
        ],
        "description": "rehydrate recovery point for restore for a BackupInstance",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "vaultName",
            "in": "path",
            "description": "The name of the backup vault.",
            "required": true,
            "type": "string"
          },
          {
            "name": "backupInstanceName",
            "in": "path",
            "description": "The name of the backup instance.",
            "required": true,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Request body for operation",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AzureBackupRehydrationRequest"
            },
            "x-ms-client-name": "parameters"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Trigger Rehydrate": {
            "$ref": "./examples/BackupInstances_TriggerRehydrate.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataProtection/backupVaults/{vaultName}/backupInstances/{backupInstanceName}/triggerRestore": {
      "post": {
        "operationId": "BackupInstances_TriggerRestore",
        "tags": [
          "BackupInstanceResources"
        ],
        "description": "Triggers restore for a BackupInstance",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "vaultName",
            "in": "path",
            "description": "The name of the backup vault.",
            "required": true,
            "type": "string"
          },
          {
            "name": "backupInstanceName",
            "in": "path",
            "description": "The name of the backup instance.",
            "required": true,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Request body for operation",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AzureBackupRestoreRequest"
            },
            "x-ms-client-name": "parameters"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/OperationJobExtendedInfo"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Trigger Restore": {
            "$ref": "./examples/BackupInstances_TriggerRestore_Trigger_Restore.json"
          },
          "Trigger Restore As Files": {
            "$ref": "./examples/BackupInstances_TriggerRestore_Trigger_Restore_As_Files.json"
          },
          "Trigger Restore With Rehydration": {
            "$ref": "./examples/BackupInstances_TriggerRestore_Trigger_Restore_With_Rehydration.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataProtection/backupVaults/{vaultName}/backupInstances/{backupInstanceName}/validateForRestore": {
      "post": {
        "operationId": "BackupInstances_ValidateForRestore",
        "tags": [
          "BackupInstanceResources"
        ],
        "description": "Validates if Restore can be triggered for a DataSource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "vaultName",
            "in": "path",
            "description": "The name of the backup vault.",
            "required": true,
            "type": "string"
          },
          {
            "name": "backupInstanceName",
            "in": "path",
            "description": "The name of the backup instance.",
            "required": true,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Request body for operation",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ValidateRestoreRequestObject"
            },
            "x-ms-client-name": "parameters"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/OperationJobExtendedInfo"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Validate Restore": {
            "$ref": "./examples/BackupInstances_ValidateForRestore.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataProtection/backupVaults/{vaultName}/backupJobs": {
      "get": {
        "operationId": "Jobs_List",
        "tags": [
          "AzureBackupJobResources"
        ],
        "description": "Returns list of jobs belonging to a backup vault",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "vaultName",
            "in": "path",
            "description": "The name of the backup vault.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/AzureBackupJobResourceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get Jobs": {
            "$ref": "./examples/Jobs_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataProtection/backupVaults/{vaultName}/backupJobs/{jobId}": {
      "get": {
        "operationId": "Jobs_Get",
        "tags": [
          "AzureBackupJobResources"
        ],
        "description": "Gets a job with id in a backup vault",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "vaultName",
            "in": "path",
            "description": "The name of the backup vault.",
            "required": true,
            "type": "string"
          },
          {
            "name": "jobId",
            "in": "path",
            "description": "The Job ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000).",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/AzureBackupJobResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get Job": {
            "$ref": "./examples/Jobs_Get.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataProtection/backupVaults/{vaultName}/backupPolicies": {
      "get": {
        "operationId": "BackupPolicies_List",
        "tags": [
          "BaseBackupPolicyResources"
        ],
        "description": "Returns list of backup policies belonging to a backup vault",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "vaultName",
            "in": "path",
            "description": "The name of the backup vault.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/BaseBackupPolicyResourceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List BackupPolicy": {
            "$ref": "./examples/BackupPolicies_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataProtection/backupVaults/{vaultName}/backupPolicies/{backupPolicyName}": {
      "get": {
        "operationId": "BackupPolicies_Get",
        "tags": [
          "BaseBackupPolicyResources"
        ],
        "description": "Gets a backup policy belonging to a backup vault",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "vaultName",
            "in": "path",
            "description": "The name of the backup vault.",
            "required": true,
            "type": "string"
          },
          {
            "name": "backupPolicyName",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/BaseBackupPolicyResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get BackupPolicy": {
            "$ref": "./examples/BackupPolicies_Get.json"
          }
        }
      },
      "put": {
        "operationId": "BackupPolicies_CreateOrUpdate",
        "tags": [
          "BaseBackupPolicyResources"
        ],
        "description": "Creates or Updates a backup policy belonging to a backup vault",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "vaultName",
            "in": "path",
            "description": "The name of the backup vault.",
            "required": true,
            "type": "string"
          },
          {
            "name": "backupPolicyName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Request body for operation",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BaseBackupPolicyResource"
            },
            "x-ms-client-name": "parameters"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'BaseBackupPolicyResource' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/BaseBackupPolicyResource"
            }
          },
          "201": {
            "description": "Resource 'BaseBackupPolicyResource' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/BaseBackupPolicyResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CreateOrUpdate BackupPolicy": {
            "$ref": "./examples/BackupPolicies_CreateOrUpdate.json"
          }
        }
      },
      "delete": {
        "operationId": "BackupPolicies_Delete",
        "tags": [
          "BaseBackupPolicyResources"
        ],
        "description": "Deletes a backup policy belonging to a backup vault",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "vaultName",
            "in": "path",
            "description": "The name of the backup vault.",
            "required": true,
            "type": "string"
          },
          {
            "name": "backupPolicyName",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete BackupPolicy": {
            "$ref": "./examples/BackupPolicies_Delete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataProtection/backupVaults/{vaultName}/backupResourceGuardProxies": {
      "get": {
        "operationId": "DppResourceGuardProxy_List",
        "tags": [
          "ResourceGuardProxyBaseResources"
        ],
        "description": "Returns the list of ResourceGuardProxies associated with the vault",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "vaultName",
            "in": "path",
            "description": "The name of the backup vault.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ResourceGuardProxyBaseResourceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get ResourceGuardProxies": {
            "$ref": "./examples/DppResourceGuardProxy_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataProtection/backupVaults/{vaultName}/backupResourceGuardProxies/{resourceGuardProxyName}": {
      "get": {
        "operationId": "DppResourceGuardProxy_Get",
        "tags": [
          "ResourceGuardProxyBaseResources"
        ],
        "description": "Returns the ResourceGuardProxy object associated with the vault, and that matches the name in the request",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "vaultName",
            "in": "path",
            "description": "The name of the backup vault.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGuardProxyName",
            "in": "path",
            "description": "name of the resource guard proxy",
            "required": true,
            "type": "string",
            "pattern": "^[A-Za-z0-9]*$"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ResourceGuardProxyBaseResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get ResourceGuardProxy": {
            "$ref": "./examples/DppResourceGuardProxy_Get.json"
          }
        }
      },
      "put": {
        "operationId": "DppResourceGuardProxy_CreateOrUpdate",
        "tags": [
          "ResourceGuardProxyBaseResources"
        ],
        "description": "Creates or Updates a ResourceGuardProxy",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "vaultName",
            "in": "path",
            "description": "The name of the backup vault.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGuardProxyName",
            "in": "path",
            "description": "name of the resource guard proxy",
            "required": true,
            "type": "string",
            "pattern": "^[A-Za-z0-9]*$"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Request body for operation",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ResourceGuardProxyBaseResource"
            },
            "x-ms-client-name": "parameters"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'ResourceGuardProxyBaseResource' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/ResourceGuardProxyBaseResource"
            }
          },
          "201": {
            "description": "Resource 'ResourceGuardProxyBaseResource' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/ResourceGuardProxyBaseResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Create ResourceGuardProxy": {
            "$ref": "./examples/DppResourceGuardProxy_CreateOrUpdate.json"
          }
        }
      },
      "delete": {
        "operationId": "DppResourceGuardProxy_Delete",
        "tags": [
          "ResourceGuardProxyBaseResources"
        ],
        "description": "Deletes the ResourceGuardProxy",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "vaultName",
            "in": "path",
            "description": "The name of the backup vault.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGuardProxyName",
            "in": "path",
            "description": "name of the resource guard proxy",
            "required": true,
            "type": "string",
            "pattern": "^[A-Za-z0-9]*$"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete ResourceGuardProxy": {
            "$ref": "./examples/DppResourceGuardProxy_Delete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataProtection/backupVaults/{vaultName}/backupResourceGuardProxies/{resourceGuardProxyName}/unlockDelete": {
      "post": {
        "operationId": "DppResourceGuardProxy_UnlockDelete",
        "tags": [
          "ResourceGuardProxyBaseResources"
        ],
        "description": "UnlockDelete call for ResourceGuardProxy, executed before one can delete it",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "vaultName",
            "in": "path",
            "description": "The name of the backup vault.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGuardProxyName",
            "in": "path",
            "description": "name of the resource guard proxy",
            "required": true,
            "type": "string",
            "pattern": "^[A-Za-z0-9]*$"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Request body for operation",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UnlockDeleteRequest"
            },
            "x-ms-client-name": "parameters"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/UnlockDeleteResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "UnlockDelete ResourceGuardProxy": {
            "$ref": "./examples/DppResourceGuardProxy_UnlockDelete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataProtection/backupVaults/{vaultName}/deletedBackupInstances": {
      "get": {
        "operationId": "DeletedBackupInstances_List",
        "tags": [
          "DeletedBackupInstanceResources"
        ],
        "description": "Gets deleted backup instances belonging to a backup vault",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "vaultName",
            "in": "path",
            "description": "The name of the backup vault.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DeletedBackupInstanceResourceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List DeletedBackupInstances in a Vault": {
            "$ref": "./examples/DeletedBackupInstances_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataProtection/backupVaults/{vaultName}/deletedBackupInstances/{backupInstanceName}": {
      "get": {
        "operationId": "DeletedBackupInstances_Get",
        "tags": [
          "DeletedBackupInstanceResources"
        ],
        "description": "Gets a deleted backup instance with name in a backup vault",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "vaultName",
            "in": "path",
            "description": "The name of the backup vault.",
            "required": true,
            "type": "string"
          },
          {
            "name": "backupInstanceName",
            "in": "path",
            "description": "The name of the deleted backup instance",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DeletedBackupInstanceResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get DeletedBackupInstance": {
            "$ref": "./examples/DeletedBackupInstances_Get.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataProtection/backupVaults/{vaultName}/deletedBackupInstances/{backupInstanceName}/undelete": {
      "post": {
        "operationId": "DeletedBackupInstances_Undelete",
        "tags": [
          "DeletedBackupInstanceResources"
        ],
        "description": "A long-running resource action.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "vaultName",
            "in": "path",
            "description": "The name of the backup vault.",
            "required": true,
            "type": "string"
          },
          {
            "name": "backupInstanceName",
            "in": "path",
            "description": "The name of the deleted backup instance",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "204": {
            "description": "ARM operation completed successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Undelete Deleted BackupInstance": {
            "$ref": "./examples/DeletedBackupInstances_Undelete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataProtection/backupVaults/{vaultName}/trigger": {
      "post": {
        "operationId": "ExportJobs_Trigger",
        "tags": [
          "BackupVaultResources"
        ],
        "description": "Triggers export of jobs and returns an OperationID to track.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "vaultName",
            "in": "path",
            "description": "The name of the backup vault.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Trigger Export Jobs": {
            "$ref": "./examples/ExportJobs_Trigger.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataProtection/backupVaults/{vaultName}/validateForBackup": {
      "post": {
        "operationId": "BackupInstances_ValidateForBackup",
        "tags": [
          "BackupVaultResources"
        ],
        "description": "Validate whether adhoc backup will be successful or not",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "vaultName",
            "in": "path",
            "description": "The name of the backup vault.",
            "required": true,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Request body for operation",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ValidateForBackupRequest"
            },
            "x-ms-client-name": "parameters"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/OperationJobExtendedInfo"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Validate For Backup": {
            "$ref": "./examples/BackupInstances_ValidateForBackup.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataProtection/locations/{location}/fetchCrossRegionRestoreJob": {
      "post": {
        "operationId": "FetchCrossRegionRestoreJobOperations_Get",
        "description": "Fetches the Cross Region Restore Job",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string"
          },
          {
            "name": "location",
            "in": "path",
            "description": "The name of the Azure region.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Request body for operation",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CrossRegionRestoreJobRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/AzureBackupJobResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataProtection/locations/{location}/fetchCrossRegionRestoreJobs": {
      "post": {
        "operationId": "FetchCrossRegionRestoreJobsOperations_List",
        "description": "Fetches list of Cross Region Restore job belonging to the vault",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string"
          },
          {
            "name": "location",
            "in": "path",
            "description": "The name of the Azure region.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "OData filter options.",
            "required": false,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Request body for operation",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CrossRegionRestoreJobsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/AzureBackupJobResourceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataProtection/locations/{location}/fetchSecondaryRecoveryPoints": {
      "post": {
        "operationId": "FetchSecondaryRecoveryPointsOperations_List",
        "description": "Returns a list of Secondary Recovery Points for a DataSource in a vault, that can be used for Cross Region Restore.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "location",
            "in": "path",
            "description": "The name of the Azure region.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "OData filter options.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$skipToken",
            "in": "query",
            "description": "skipToken Filter.",
            "required": false,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Request body for operation",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FetchSecondaryRPsRequestParameters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/AzureBackupRecoveryPointResourceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataProtection/resourceGuards": {
      "get": {
        "operationId": "ResourceGuards_GetResourcesInResourceGroup",
        "tags": [
          "ResourceGuardResources"
        ],
        "description": "Returns ResourceGuards collection belonging to a ResourceGroup.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ResourceGuardResourceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get ResourceGuards in ResourceGroup": {
            "$ref": "./examples/ResourceGuards_GetResourcesInResourceGroup.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataProtection/resourceGuards/{resourceGuardsName}": {
      "get": {
        "operationId": "ResourceGuards_Get",
        "tags": [
          "ResourceGuardResources"
        ],
        "description": "Returns a ResourceGuard belonging to a resource group.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "resourceGuardsName",
            "in": "path",
            "description": "The name of ResourceGuard",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ResourceGuardResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get ResourceGuard": {
            "$ref": "./examples/ResourceGuards_Get.json"
          }
        }
      },
      "put": {
        "operationId": "ResourceGuards_Put",
        "tags": [
          "ResourceGuardResources"
        ],
        "description": "Creates or updates a ResourceGuard resource belonging to a resource group.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "resourceGuardsName",
            "in": "path",
            "description": "The name of ResourceGuard",
            "required": true,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Request body for operation",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ResourceGuardResource"
            },
            "x-ms-client-name": "parameters"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'ResourceGuardResource' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/ResourceGuardResource"
            }
          },
          "201": {
            "description": "Resource 'ResourceGuardResource' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/ResourceGuardResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Create ResourceGuard": {
            "$ref": "./examples/ResourceGuards_Put.json"
          }
        }
      },
      "patch": {
        "operationId": "ResourceGuards_Patch",
        "tags": [
          "ResourceGuardResources"
        ],
        "description": "Updates a ResourceGuard resource belonging to a resource group. For example, updating tags for a resource.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "resourceGuardsName",
            "in": "path",
            "description": "The name of ResourceGuard",
            "required": true,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Request body for operation",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PatchResourceGuardInput"
            },
            "x-ms-client-name": "parameters"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ResourceGuardResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Patch ResourceGuard": {
            "$ref": "./examples/ResourceGuards_Patch.json"
          }
        }
      },
      "delete": {
        "operationId": "ResourceGuards_Delete",
        "tags": [
          "ResourceGuardResources"
        ],
        "description": "Deletes a ResourceGuard resource from the resource group.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "resourceGuardsName",
            "in": "path",
            "description": "The name of ResourceGuard",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete ResourceGuard": {
            "$ref": "./examples/ResourceGuards_Delete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataProtection/resourceGuards/{resourceGuardsName}/deleteProtectedItemRequests/{resourceGroupName}/{subscriptionId}/{resourceGuardsName}": {
      "get": {
        "operationId": "ResourceGuards_GetDeleteProtectedItemRequestsObjects",
        "tags": [
          "ResourceGuardResources"
        ],
        "summary": "Returns collection of operation request objects for a critical operation protected by the given ResourceGuard resource.",
        "description": "Returns collection of operation request objects for a critical operation protected by the given ResourceGuard resource.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGuardsName",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/PagedResourceGuardProtectedObjectData"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "List OperationsRequestObject": {
            "$ref": "./examples/ResourceGuards_GetDeleteProtectedItemRequestsObjects.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataProtection/resourceGuards/{resourceGuardsName}/deleteProtectedItemRequests/{requestName}/{resourceGroupName}/{subscriptionId}/{resourceGuardsName}/{requestName}": {
      "get": {
        "operationId": "ResourceGuards_GetDefaultDeleteProtectedItemRequestsObject",
        "tags": [
          "ResourceGuardResources"
        ],
        "summary": "Returns collection of operation request objects for a critical operation protected by the given ResourceGuard resource.",
        "description": "Returns collection of operation request objects for a critical operation protected by the given ResourceGuard resource.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGuardsName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "requestName",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/ResourceGuardProtectedObjectData"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "Get DefaultOperationsRequestObject": {
            "$ref": "./examples/ResourceGuards_GetDefaultDeleteProtectedItemRequestsObject.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataProtection/resourceGuards/{resourceGuardsName}/deleteResourceGuardProxyRequests/{resourceGroupName}/{subscriptionId}/{resourceGuardsName}": {
      "get": {
        "operationId": "ResourceGuards_GetDeleteResourceGuardProxyRequestsObjects",
        "tags": [
          "ResourceGuardResources"
        ],
        "summary": "Returns collection of operation request objects for a critical operation protected by the given ResourceGuard resource.",
        "description": "Returns collection of operation request objects for a critical operation protected by the given ResourceGuard resource.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGuardsName",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/PagedResourceGuardProtectedObjectData"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "List OperationsRequestObject": {
            "$ref": "./examples/ResourceGuards_GetDeleteResourceGuardProxyRequestsObjects.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataProtection/resourceGuards/{resourceGuardsName}/deleteResourceGuardProxyRequests/{requestName}/{resourceGroupName}/{subscriptionId}/{resourceGuardsName}/{requestName}": {
      "get": {
        "operationId": "ResourceGuards_GetDefaultDeleteResourceGuardProxyRequestsObject",
        "tags": [
          "ResourceGuardResources"
        ],
        "summary": "Returns collection of operation request objects for a critical operation protected by the given ResourceGuard resource.",
        "description": "Returns collection of operation request objects for a critical operation protected by the given ResourceGuard resource.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGuardsName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "requestName",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/ResourceGuardProtectedObjectData"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "Get DefaultOperationsRequestObject": {
            "$ref": "./examples/ResourceGuards_GetDefaultDeleteResourceGuardProxyRequestsObject.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataProtection/resourceGuards/{resourceGuardsName}/disableSoftDeleteRequests/{resourceGroupName}/{subscriptionId}/{resourceGuardsName}": {
      "get": {
        "operationId": "ResourceGuards_GetDisableSoftDeleteRequestsObjects",
        "tags": [
          "ResourceGuardResources"
        ],
        "summary": "Returns collection of operation request objects for a critical operation protected by the given ResourceGuard resource.",
        "description": "Returns collection of operation request objects for a critical operation protected by the given ResourceGuard resource.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGuardsName",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/PagedResourceGuardProtectedObjectData"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "List OperationsRequestObject": {
            "$ref": "./examples/ResourceGuards_GetDisableSoftDeleteRequestsObjects.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataProtection/resourceGuards/{resourceGuardsName}/disableSoftDeleteRequests/{requestName}/{resourceGroupName}/{subscriptionId}/{resourceGuardsName}/{requestName}": {
      "get": {
        "operationId": "ResourceGuards_GetDefaultDisableSoftDeleteRequestsObject",
        "tags": [
          "ResourceGuardResources"
        ],
        "summary": "Returns collection of operation request objects for a critical operation protected by the given ResourceGuard resource.",
        "description": "Returns collection of operation request objects for a critical operation protected by the given ResourceGuard resource.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGuardsName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "requestName",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/ResourceGuardProtectedObjectData"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "Get DefaultOperationsRequestObject": {
            "$ref": "./examples/ResourceGuards_GetDefaultDisableSoftDeleteRequestsObject.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataProtection/resourceGuards/{resourceGuardsName}/getBackupSecurityPINRequests/{resourceGroupName}/{subscriptionId}/{resourceGuardsName}": {
      "get": {
        "operationId": "ResourceGuards_GetBackupSecurityPINRequestsObjects",
        "tags": [
          "ResourceGuardResources"
        ],
        "summary": "Returns collection of operation request objects for a critical operation protected by the given ResourceGuard resource.",
        "description": "Returns collection of operation request objects for a critical operation protected by the given ResourceGuard resource.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGuardsName",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/PagedResourceGuardProtectedObjectData"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "List OperationsRequestObject": {
            "$ref": "./examples/ResourceGuards_GetBackupSecurityPINRequestsObjects.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataProtection/resourceGuards/{resourceGuardsName}/getBackupSecurityPINRequests/{requestName}/{resourceGroupName}/{subscriptionId}/{resourceGuardsName}/{requestName}": {
      "get": {
        "operationId": "ResourceGuards_GetDefaultBackupSecurityPINRequestsObject",
        "tags": [
          "ResourceGuardResources"
        ],
        "summary": "Returns collection of operation request objects for a critical operation protected by the given ResourceGuard resource.",
        "description": "Returns collection of operation request objects for a critical operation protected by the given ResourceGuard resource.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGuardsName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "requestName",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/ResourceGuardProtectedObjectData"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "Get DefaultOperationsRequestObject": {
            "$ref": "./examples/ResourceGuards_GetDefaultBackupSecurityPINRequestsObject.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataProtection/resourceGuards/{resourceGuardsName}/updateProtectedItemRequests/{resourceGroupName}/{subscriptionId}/{resourceGuardsName}": {
      "get": {
        "operationId": "ResourceGuards_GetUpdateProtectedItemRequestsObjects",
        "tags": [
          "ResourceGuardResources"
        ],
        "summary": "Returns collection of operation request objects for a critical operation protected by the given ResourceGuard resource.",
        "description": "Returns collection of operation request objects for a critical operation protected by the given ResourceGuard resource.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGuardsName",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/PagedResourceGuardProtectedObjectData"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "List OperationsRequestObject": {
            "$ref": "./examples/ResourceGuards_GetUpdateProtectedItemRequestsObjects.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataProtection/resourceGuards/{resourceGuardsName}/updateProtectedItemRequests/{requestName}/{resourceGroupName}/{subscriptionId}/{resourceGuardsName}/{requestName}": {
      "get": {
        "operationId": "ResourceGuards_GetDefaultUpdateProtectedItemRequestsObject",
        "tags": [
          "ResourceGuardResources"
        ],
        "summary": "Returns collection of operation request objects for a critical operation protected by the given ResourceGuard resource.",
        "description": "Returns collection of operation request objects for a critical operation protected by the given ResourceGuard resource.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGuardsName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "requestName",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/ResourceGuardProtectedObjectData"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "Get DefaultOperationsRequestObject": {
            "$ref": "./examples/ResourceGuards_GetDefaultUpdateProtectedItemRequestsObject.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataProtection/resourceGuards/{resourceGuardsName}/updateProtectionPolicyRequests/{resourceGroupName}/{subscriptionId}/{resourceGuardsName}": {
      "get": {
        "operationId": "ResourceGuards_GetUpdateProtectionPolicyRequestsObjects",
        "tags": [
          "ResourceGuardResources"
        ],
        "summary": "Returns collection of operation request objects for a critical operation protected by the given ResourceGuard resource.",
        "description": "Returns collection of operation request objects for a critical operation protected by the given ResourceGuard resource.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGuardsName",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/PagedResourceGuardProtectedObjectData"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "List OperationsRequestObject": {
            "$ref": "./examples/ResourceGuards_GetUpdateProtectionPolicyRequestsObjects.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataProtection/resourceGuards/{resourceGuardsName}/updateProtectionPolicyRequests/{requestName}/{resourceGroupName}/{subscriptionId}/{resourceGuardsName}/{requestName}": {
      "get": {
        "operationId": "ResourceGuards_GetDefaultUpdateProtectionPolicyRequestsObject",
        "tags": [
          "ResourceGuardResources"
        ],
        "summary": "Returns collection of operation request objects for a critical operation protected by the given ResourceGuard resource.",
        "description": "Returns collection of operation request objects for a critical operation protected by the given ResourceGuard resource.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGuardsName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "requestName",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/ResourceGuardProtectedObjectData"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "Get DefaultOperationsRequestObject": {
            "$ref": "./examples/ResourceGuards_GetDefaultUpdateProtectionPolicyRequestsObject.json"
          }
        }
      }
    }
  },
  "definitions": {
    "AbsoluteDeleteOption": {
      "type": "object",
      "description": "Delete option with duration",
      "allOf": [
        {
          "$ref": "#/definitions/DeleteOption"
        }
      ],
      "x-ms-discriminator-value": "AbsoluteDeleteOption"
    },
    "AbsoluteMarker": {
      "type": "string",
      "enum": [
        "AllBackup",
        "FirstOfDay",
        "FirstOfMonth",
        "FirstOfWeek",
        "FirstOfYear"
      ],
      "x-ms-enum": {
        "name": "AbsoluteMarker",
        "modelAsString": true
      }
    },
    "AdHocBackupRuleOptions": {
      "type": "object",
      "description": "Adhoc backup rules",
      "properties": {
        "ruleName": {
          "type": "string"
        },
        "triggerOption": {
          "$ref": "#/definitions/AdhocBackupTriggerOption",
          "description": "Adhoc backup trigger option"
        }
      },
      "required": [
        "ruleName",
        "triggerOption"
      ]
    },
    "AdhocBackupTriggerOption": {
      "type": "object",
      "description": "Adhoc backup trigger option",
      "properties": {
        "retentionTagOverride": {
          "type": "string"
        }
      }
    },
    "AdhocBasedTaggingCriteria": {
      "type": "object",
      "description": "Adhoc backup tagging criteria",
      "properties": {
        "tagInfo": {
          "$ref": "#/definitions/RetentionTag",
          "description": "Retention tag information"
        }
      }
    },
    "AdhocBasedTriggerContext": {
      "type": "object",
      "description": "Adhoc trigger context",
      "properties": {
        "taggingCriteria": {
          "$ref": "#/definitions/AdhocBasedTaggingCriteria",
          "description": "Tagging Criteria containing retention tag for adhoc backup."
        }
      },
      "required": [
        "taggingCriteria"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/TriggerContext"
        }
      ],
      "x-ms-discriminator-value": "AdhocBasedTriggerContext"
    },
    "AlertsState": {
      "type": "string",
      "enum": [
        "Enabled",
        "Disabled"
      ],
      "x-ms-enum": {
        "name": "AlertsState",
        "modelAsString": true
      }
    },
    "AuthCredentials": {
      "type": "object",
      "description": "Base class for different types of authentication credentials.",
      "properties": {
        "objectType": {
          "type": "string",
          "description": "Discriminator property for AuthCredentials."
        }
      },
      "discriminator": "objectType",
      "required": [
        "objectType"
      ]
    },
    "Azure.Core.Foundations.Error": {
      "type": "object",
      "description": "The error object.",
      "properties": {
        "code": {
          "type": "string",
          "description": "One of a server-defined set of error codes."
        },
        "message": {
          "type": "string",
          "description": "A human-readable representation of the error."
        },
        "target": {
          "type": "string",
          "description": "The target of the error."
        },
        "details": {
          "type": "array",
          "description": "An array of details about specific errors that led to this reported error.",
          "items": {
            "$ref": "#/definitions/Azure.Core.Foundations.Error"
          },
          "x-ms-identifiers": []
        },
        "innererror": {
          "$ref": "#/definitions/Azure.Core.Foundations.InnerError",
          "description": "An object containing more specific information than the current object about the error."
        }
      },
      "required": [
        "code",
        "message"
      ]
    },
    "Azure.Core.Foundations.ErrorResponse": {
      "type": "object",
      "description": "A response containing error details.",
      "properties": {
        "error": {
          "$ref": "#/definitions/Azure.Core.Foundations.Error",
          "description": "The error object."
        }
      },
      "required": [
        "error"
      ]
    },
    "Azure.Core.Foundations.InnerError": {
      "type": "object",
      "description": "An object containing more specific information about the error. As per Microsoft One API guidelines - https://github.com/Microsoft/api-guidelines/blob/vNext/Guidelines.md#7102-error-condition-responses.",
      "properties": {
        "code": {
          "type": "string",
          "description": "One of a server-defined set of error codes."
        },
        "innererror": {
          "$ref": "#/definitions/Azure.Core.Foundations.InnerError",
          "description": "Inner error."
        }
      }
    },
    "Azure.ResourceManager.Foundations.UserAssignedIdentity": {
      "type": "object",
      "description": "A managed identity assigned by the user.",
      "properties": {
        "clientId": {
          "type": "string",
          "description": "The active directory client identifier for this principal."
        },
        "principalId": {
          "type": "string",
          "description": "The active directory identifier for this principal."
        }
      }
    },
    "AzureBackupDiscreteRecoveryPoint": {
      "type": "object",
      "description": "Azure backup discrete RecoveryPoint",
      "properties": {
        "friendlyName": {
          "type": "string"
        },
        "recoveryPointDataStoresDetails": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RecoveryPointDataStoreDetails"
          }
        },
        "recoveryPointTime": {
          "type": "string",
          "format": "date-time"
        },
        "policyName": {
          "type": "string"
        },
        "policyVersion": {
          "type": "string"
        },
        "recoveryPointId": {
          "type": "string"
        },
        "recoveryPointType": {
          "type": "string"
        },
        "retentionTagName": {
          "type": "string"
        },
        "retentionTagVersion": {
          "type": "string"
        },
        "expiryTime": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "recoveryPointState": {
          "$ref": "#/definitions/RecoveryPointCompletionState",
          "description": "Specifies recovery point completeness. Partial (i.e., only some of the intended items were backed up), or Completed (i.e., ALL intended items were backed up)."
        }
      },
      "required": [
        "recoveryPointTime"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/AzureBackupRecoveryPoint"
        }
      ],
      "x-ms-discriminator-value": "AzureBackupDiscreteRecoveryPoint"
    },
    "AzureBackupFindRestorableTimeRangesRequest": {
      "type": "object",
      "description": "List Restore Ranges Request",
      "properties": {
        "sourceDataStoreType": {
          "$ref": "#/definitions/RestoreSourceDataStoreType",
          "description": "Gets or sets the type of the source data store."
        },
        "startTime": {
          "type": "string",
          "description": "Start time for the List Restore Ranges request. ISO 8601 format."
        },
        "endTime": {
          "type": "string",
          "description": "End time for the List Restore Ranges request. ISO 8601 format."
        }
      },
      "required": [
        "sourceDataStoreType"
      ]
    },
    "AzureBackupFindRestorableTimeRangesRequestResource": {
      "type": "object",
      "description": "List Restore Ranges Request",
      "properties": {
        "content": {
          "$ref": "#/definitions/AzureBackupFindRestorableTimeRangesRequest",
          "description": "AzureBackupFindRestorableTimeRangesRequestResource content"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/DppWorkerRequest"
        }
      ]
    },
    "AzureBackupFindRestorableTimeRangesResponse": {
      "type": "object",
      "description": "List Restore Ranges Response",
      "properties": {
        "restorableTimeRanges": {
          "type": "array",
          "description": "Returns the Restore Ranges available on the Backup Instance.",
          "items": {
            "$ref": "#/definitions/RestorableTimeRange"
          },
          "x-ms-identifiers": []
        },
        "objectType": {
          "type": "string"
        }
      }
    },
    "AzureBackupFindRestorableTimeRangesResponseResource": {
      "type": "object",
      "description": "List Restore Ranges Response",
      "properties": {
        "properties": {
          "$ref": "#/definitions/AzureBackupFindRestorableTimeRangesResponse",
          "description": "AzureBackupFindRestorableTimeRangesResponseResource properties"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/DppResource"
        }
      ]
    },
    "AzureBackupJob": {
      "type": "object",
      "description": "AzureBackup Job Class",
      "properties": {
        "activityID": {
          "type": "string",
          "description": "Job Activity Id"
        },
        "backupInstanceFriendlyName": {
          "type": "string",
          "description": "Name of the Backup Instance"
        },
        "backupInstanceId": {
          "type": "string",
          "description": "ARM ID of the Backup Instance",
          "readOnly": true
        },
        "dataSourceId": {
          "type": "string",
          "description": "ARM ID of the DataSource"
        },
        "dataSourceLocation": {
          "type": "string",
          "description": "Location of the DataSource"
        },
        "dataSourceName": {
          "type": "string",
          "description": "User Friendly Name of the DataSource"
        },
        "dataSourceSetName": {
          "type": "string",
          "description": "Data Source Set Name of the DataSource"
        },
        "dataSourceType": {
          "type": "string",
          "description": "Type of DataSource"
        },
        "duration": {
          "type": "string",
          "description": "Total run time of the job. ISO 8601 format."
        },
        "endTime": {
          "type": "string",
          "format": "date-time",
          "description": "EndTime of the job(in UTC)",
          "readOnly": true
        },
        "errorDetails": {
          "type": "array",
          "description": "A List, detailing the errors related to the job",
          "items": {
            "$ref": "#/definitions/UserFacingError"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        },
        "extendedInfo": {
          "$ref": "#/definitions/JobExtendedInfo",
          "description": "Extended Information about the job",
          "readOnly": true
        },
        "isUserTriggered": {
          "type": "boolean",
          "description": "Indicated that whether the job is adhoc(true) or scheduled(false)"
        },
        "operation": {
          "type": "string",
          "description": "It indicates the type of Job i.e. Backup:full/log/diff ;Restore:ALR/OLR; Tiering:Backup/Archive ; Management:ConfigureProtection/UnConfigure"
        },
        "operationCategory": {
          "type": "string",
          "description": "It indicates the type of Job i.e. Backup/Restore/Tiering/Management"
        },
        "policyId": {
          "type": "string",
          "description": "ARM ID of the policy",
          "readOnly": true
        },
        "policyName": {
          "type": "string",
          "description": "Name of the policy",
          "readOnly": true
        },
        "progressEnabled": {
          "type": "boolean",
          "description": "Indicated whether progress is enabled for the job"
        },
        "progressUrl": {
          "type": "string",
          "description": "Url which contains job's progress",
          "readOnly": true
        },
        "rehydrationPriority": {
          "type": "string",
          "description": "Priority to be used for rehydration",
          "readOnly": true
        },
        "restoreType": {
          "type": "string",
          "description": "It indicates the sub type of operation i.e. in case of Restore it can be ALR/OLR",
          "readOnly": true
        },
        "sourceResourceGroup": {
          "type": "string",
          "description": "Resource Group Name of the Datasource"
        },
        "sourceSubscriptionID": {
          "type": "string",
          "description": "SubscriptionId corresponding to the DataSource"
        },
        "startTime": {
          "type": "string",
          "format": "date-time",
          "description": "StartTime of the job(in UTC)"
        },
        "status": {
          "type": "string",
          "description": "Status of the job like InProgress/Success/Failed/Cancelled/SuccessWithWarning"
        },
        "subscriptionId": {
          "type": "string",
          "description": "Subscription Id of the corresponding backup vault"
        },
        "supportedActions": {
          "type": "array",
          "description": "List of supported actions",
          "items": {
            "type": "string"
          }
        },
        "vaultName": {
          "type": "string",
          "description": "Name of the vault"
        },
        "etag": {
          "type": "string"
        },
        "sourceDataStoreName": {
          "type": "string"
        },
        "destinationDataStoreName": {
          "type": "string"
        }
      },
      "required": [
        "activityID",
        "backupInstanceFriendlyName",
        "dataSourceId",
        "dataSourceLocation",
        "dataSourceName",
        "dataSourceType",
        "isUserTriggered",
        "operation",
        "operationCategory",
        "progressEnabled",
        "sourceResourceGroup",
        "sourceSubscriptionID",
        "startTime",
        "status",
        "subscriptionId",
        "supportedActions",
        "vaultName"
      ]
    },
    "AzureBackupJobResource": {
      "type": "object",
      "description": "AzureBackup Job Resource Class",
      "properties": {
        "properties": {
          "$ref": "#/definitions/AzureBackupJob",
          "description": "AzureBackupJobResource properties",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "AzureBackupJobResourceListResult": {
      "type": "object",
      "description": "The response of a AzureBackupJobResource list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The AzureBackupJobResource items on this page",
          "items": {
            "$ref": "#/definitions/AzureBackupJobResource"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "AzureBackupParams": {
      "type": "object",
      "description": "Azure backup parameters",
      "properties": {
        "backupType": {
          "type": "string",
          "description": "BackupType ; Full/Incremental etc"
        }
      },
      "required": [
        "backupType"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/BackupParameters"
        }
      ],
      "x-ms-discriminator-value": "AzureBackupParams"
    },
    "AzureBackupRecoveryPoint": {
      "type": "object",
      "description": "Azure backup recoveryPoint",
      "properties": {
        "objectType": {
          "type": "string",
          "description": "Discriminator property for AzureBackupRecoveryPoint."
        }
      },
      "discriminator": "objectType",
      "required": [
        "objectType"
      ]
    },
    "AzureBackupRecoveryPointBasedRestoreRequest": {
      "type": "object",
      "description": "Azure backup recoveryPoint based restore request",
      "properties": {
        "objectType": {
          "type": "string",
          "description": "Discriminator property for AzureBackupRecoveryPointBasedRestoreRequest."
        },
        "recoveryPointId": {
          "type": "string"
        }
      },
      "discriminator": "objectType",
      "required": [
        "objectType",
        "recoveryPointId"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/AzureBackupRestoreRequest"
        }
      ]
    },
    "AzureBackupRecoveryPointResource": {
      "type": "object",
      "description": "Azure backup recoveryPoint resource",
      "properties": {
        "properties": {
          "$ref": "#/definitions/AzureBackupRecoveryPoint",
          "description": "AzureBackupRecoveryPointResource properties",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "AzureBackupRecoveryPointResourceListResult": {
      "type": "object",
      "description": "The response of a AzureBackupRecoveryPointResource list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The AzureBackupRecoveryPointResource items on this page",
          "items": {
            "$ref": "#/definitions/AzureBackupRecoveryPointResource"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "AzureBackupRecoveryTimeBasedRestoreRequest": {
      "type": "object",
      "description": "AzureBackup RecoveryPointTime Based Restore Request",
      "properties": {
        "recoveryPointTime": {
          "type": "string",
          "description": "The recovery time in ISO 8601 format example - 2020-08-14T17:30:00.0000000Z."
        }
      },
      "required": [
        "recoveryPointTime"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/AzureBackupRestoreRequest"
        }
      ],
      "x-ms-discriminator-value": "AzureBackupRecoveryTimeBasedRestoreRequest"
    },
    "AzureBackupRehydrationRequest": {
      "type": "object",
      "description": "Azure Backup Rehydrate Request",
      "properties": {
        "recoveryPointId": {
          "type": "string",
          "description": "Id of the recovery point to be recovered"
        },
        "rehydrationPriority": {
          "$ref": "#/definitions/RehydrationPriority",
          "description": "Priority to be used for rehydration. Values High or Standard"
        },
        "rehydrationRetentionDuration": {
          "type": "string",
          "format": "duration",
          "description": "Retention duration in ISO 8601 format i.e P10D ."
        }
      },
      "required": [
        "recoveryPointId",
        "rehydrationRetentionDuration"
      ]
    },
    "AzureBackupRestoreRequest": {
      "type": "object",
      "description": "Azure backup restore request",
      "properties": {
        "objectType": {
          "type": "string",
          "description": "Discriminator property for AzureBackupRestoreRequest."
        },
        "restoreTargetInfo": {
          "$ref": "#/definitions/RestoreTargetInfoBase",
          "description": "Gets or sets the restore target information."
        },
        "sourceDataStoreType": {
          "$ref": "#/definitions/SourceDataStoreType",
          "description": "Gets or sets the type of the source data store."
        },
        "sourceResourceId": {
          "type": "string",
          "description": "Fully qualified Azure Resource Manager ID of the datasource which is being recovered."
        },
        "identityDetails": {
          "$ref": "#/definitions/IdentityDetails",
          "description": "Contains information of the Identity Details for the BI.\nIf it is null, default will be considered as System Assigned."
        }
      },
      "discriminator": "objectType",
      "required": [
        "objectType",
        "restoreTargetInfo",
        "sourceDataStoreType"
      ]
    },
    "AzureBackupRestoreWithRehydrationRequest": {
      "type": "object",
      "description": "AzureBackup Restore with Rehydration Request",
      "properties": {
        "rehydrationPriority": {
          "$ref": "#/definitions/RehydrationPriority",
          "description": "Priority to be used for rehydration. Values High or Standard"
        },
        "rehydrationRetentionDuration": {
          "type": "string",
          "format": "duration",
          "description": "Retention duration in ISO 8601 format i.e P10D ."
        }
      },
      "required": [
        "rehydrationPriority",
        "rehydrationRetentionDuration"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/AzureBackupRecoveryPointBasedRestoreRequest"
        }
      ],
      "x-ms-discriminator-value": "AzureBackupRestoreWithRehydrationRequest"
    },
    "AzureBackupRule": {
      "type": "object",
      "description": "Azure backup rule",
      "properties": {
        "backupParameters": {
          "$ref": "#/definitions/BackupParameters",
          "description": "BackupParameters base"
        },
        "dataStore": {
          "$ref": "#/definitions/DataStoreInfoBase",
          "description": "DataStoreInfo base"
        },
        "trigger": {
          "$ref": "#/definitions/TriggerContext",
          "description": "Trigger context"
        }
      },
      "required": [
        "dataStore",
        "trigger"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/BasePolicyRule"
        }
      ],
      "x-ms-discriminator-value": "AzureBackupRule"
    },
    "AzureMonitorAlertSettings": {
      "type": "object",
      "description": "Settings for Azure Monitor based alerts",
      "properties": {
        "alertsForAllJobFailures": {
          "$ref": "#/definitions/AlertsState"
        }
      }
    },
    "AzureOperationalStoreParameters": {
      "type": "object",
      "description": "Parameters for Operational-Tier DataStore",
      "properties": {
        "resourceGroupId": {
          "type": "string",
          "description": "Gets or sets the Snapshot Resource Group Uri."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/DataStoreParameters"
        }
      ],
      "x-ms-discriminator-value": "AzureOperationalStoreParameters"
    },
    "AzureRetentionRule": {
      "type": "object",
      "description": "Azure retention rule",
      "properties": {
        "isDefault": {
          "type": "boolean"
        },
        "lifecycles": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SourceLifeCycle"
          },
          "x-ms-identifiers": []
        }
      },
      "required": [
        "lifecycles"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/BasePolicyRule"
        }
      ],
      "x-ms-discriminator-value": "AzureRetentionRule"
    },
    "BackupCriteria": {
      "type": "object",
      "description": "BackupCriteria base class",
      "properties": {
        "objectType": {
          "type": "string",
          "description": "Discriminator property for BackupCriteria."
        }
      },
      "discriminator": "objectType",
      "required": [
        "objectType"
      ]
    },
    "BackupDatasourceParameters": {
      "type": "object",
      "description": "Parameters for Backup Datasource",
      "properties": {
        "objectType": {
          "type": "string",
          "description": "Discriminator property for BackupDatasourceParameters."
        }
      },
      "discriminator": "objectType",
      "required": [
        "objectType"
      ]
    },
    "BackupInstance": {
      "type": "object",
      "description": "Backup Instance",
      "properties": {
        "friendlyName": {
          "type": "string",
          "description": "Gets or sets the Backup Instance friendly name."
        },
        "dataSourceInfo": {
          "$ref": "#/definitions/Datasource",
          "description": "Gets or sets the data source information."
        },
        "dataSourceSetInfo": {
          "$ref": "#/definitions/DatasourceSet",
          "description": "Gets or sets the data source set information."
        },
        "policyInfo": {
          "$ref": "#/definitions/PolicyInfo",
          "description": "Gets or sets the policy information."
        },
        "protectionStatus": {
          "$ref": "#/definitions/ProtectionStatusDetails",
          "description": "Specifies the protection status of the resource",
          "readOnly": true
        },
        "currentProtectionState": {
          "$ref": "#/definitions/CurrentProtectionState",
          "description": "Specifies the current protection state of the resource",
          "readOnly": true
        },
        "protectionErrorDetails": {
          "$ref": "#/definitions/UserFacingError",
          "description": "Specifies the protection error of the resource",
          "readOnly": true
        },
        "provisioningState": {
          "type": "string",
          "description": "Specifies the provisioning state of the resource i.e. provisioning/updating/Succeeded/Failed",
          "readOnly": true
        },
        "datasourceAuthCredentials": {
          "$ref": "#/definitions/AuthCredentials",
          "description": "Credentials to use to authenticate with data source provider."
        },
        "validationType": {
          "$ref": "#/definitions/ValidationType",
          "description": "Specifies the type of validation. In case of DeepValidation, all validations from /validateForBackup API will run again."
        },
        "identityDetails": {
          "$ref": "#/definitions/IdentityDetails",
          "description": "Contains information of the Identity Details for the BI.\nIf it is null, default will be considered as System Assigned."
        },
        "objectType": {
          "type": "string"
        }
      },
      "required": [
        "dataSourceInfo",
        "policyInfo",
        "objectType"
      ]
    },
    "BackupInstanceResource": {
      "type": "object",
      "description": "BackupInstance Resource",
      "properties": {
        "properties": {
          "$ref": "#/definitions/BackupInstance",
          "description": "BackupInstanceResource properties",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "BackupInstanceResourceListResult": {
      "type": "object",
      "description": "The response of a BackupInstanceResource list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The BackupInstanceResource items on this page",
          "items": {
            "$ref": "#/definitions/BackupInstanceResource"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "BackupParameters": {
      "type": "object",
      "description": "BackupParameters base",
      "properties": {
        "objectType": {
          "type": "string",
          "description": "Discriminator property for BackupParameters."
        }
      },
      "discriminator": "objectType",
      "required": [
        "objectType"
      ]
    },
    "BackupPolicy": {
      "type": "object",
      "description": "Rule based backup policy",
      "properties": {
        "policyRules": {
          "type": "array",
          "description": "Policy rule dictionary that contains rules for each backuptype i.e Full/Incremental/Logs etc",
          "items": {
            "$ref": "#/definitions/BasePolicyRule"
          },
          "x-ms-identifiers": []
        }
      },
      "required": [
        "policyRules"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/BaseBackupPolicy"
        }
      ],
      "x-ms-discriminator-value": "BackupPolicy"
    },
    "BackupSchedule": {
      "type": "object",
      "description": "Schedule for backup",
      "properties": {
        "repeatingTimeIntervals": {
          "type": "array",
          "description": "ISO 8601 repeating time interval format",
          "items": {
            "type": "string"
          }
        },
        "timeZone": {
          "type": "string",
          "description": "Time zone for a schedule. Example: Pacific Standard Time"
        }
      },
      "required": [
        "repeatingTimeIntervals"
      ]
    },
    "BackupVault": {
      "type": "object",
      "description": "Backup Vault",
      "properties": {
        "monitoringSettings": {
          "$ref": "#/definitions/MonitoringSettings",
          "description": "Monitoring Settings"
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "Provisioning state of the BackupVault resource",
          "readOnly": true
        },
        "resourceMoveState": {
          "$ref": "#/definitions/ResourceMoveState",
          "description": "Resource move state for backup vault",
          "readOnly": true
        },
        "resourceMoveDetails": {
          "$ref": "#/definitions/ResourceMoveDetails",
          "description": "Resource move details for backup vault",
          "readOnly": true
        },
        "securitySettings": {
          "$ref": "#/definitions/SecuritySettings",
          "description": "Security Settings"
        },
        "storageSettings": {
          "type": "array",
          "description": "Storage Settings",
          "items": {
            "$ref": "#/definitions/StorageSetting"
          },
          "x-ms-identifiers": []
        },
        "isVaultProtectedByResourceGuard": {
          "type": "boolean",
          "description": "Is vault protected by resource guard",
          "readOnly": true
        },
        "featureSettings": {
          "$ref": "#/definitions/FeatureSettings",
          "description": "Feature Settings"
        },
        "secureScore": {
          "$ref": "#/definitions/SecureScoreLevel",
          "description": "Secure Score of Backup Vault",
          "readOnly": true
        },
        "replicatedRegions": {
          "type": "array",
          "description": "List of replicated regions for Backup Vault",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "storageSettings"
      ]
    },
    "BackupVaultResource": {
      "type": "object",
      "description": "Backup Vault Resource",
      "properties": {
        "properties": {
          "$ref": "#/definitions/BackupVault",
          "description": "BackupVaultResource properties",
          "x-ms-client-flatten": true
        }
      },
      "required": [
        "properties"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "BackupVaultResourceListResult": {
      "type": "object",
      "description": "The response of a BackupVaultResource list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The BackupVaultResource items on this page",
          "items": {
            "$ref": "#/definitions/BackupVaultResource"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "BaseBackupPolicy": {
      "type": "object",
      "description": "BackupPolicy base",
      "properties": {
        "objectType": {
          "type": "string",
          "description": "Discriminator property for BaseBackupPolicy."
        },
        "datasourceTypes": {
          "type": "array",
          "description": "Type of datasource for the backup management",
          "items": {
            "type": "string"
          }
        }
      },
      "discriminator": "objectType",
      "required": [
        "objectType",
        "datasourceTypes"
      ]
    },
    "BaseBackupPolicyResource": {
      "type": "object",
      "description": "BaseBackupPolicy resource",
      "properties": {
        "properties": {
          "$ref": "#/definitions/BaseBackupPolicy",
          "description": "BaseBackupPolicyResource properties",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "BaseBackupPolicyResourceListResult": {
      "type": "object",
      "description": "The response of a BaseBackupPolicyResource list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The BaseBackupPolicyResource items on this page",
          "items": {
            "$ref": "#/definitions/BaseBackupPolicyResource"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "BasePolicyRule": {
      "type": "object",
      "description": "BasePolicy Rule",
      "properties": {
        "objectType": {
          "type": "string",
          "description": "Discriminator property for BasePolicyRule."
        },
        "name": {
          "type": "string"
        }
      },
      "discriminator": "objectType",
      "required": [
        "objectType",
        "name"
      ]
    },
    "BaseResourceProperties": {
      "type": "object",
      "description": "Properties which are specific to datasource/datasourceSets",
      "properties": {
        "objectType": {
          "type": "string",
          "description": "Discriminator property for BaseResourceProperties."
        }
      },
      "discriminator": "objectType",
      "required": [
        "objectType"
      ]
    },
    "BlobBackupDatasourceParameters": {
      "type": "object",
      "description": "Parameters to be used during configuration of backup of blobs",
      "properties": {
        "containersList": {
          "type": "array",
          "description": "List of containers to be backed up during configuration of backup of blobs",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "containersList"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/BackupDatasourceParameters"
        }
      ],
      "x-ms-discriminator-value": "BlobBackupDatasourceParameters"
    },
    "CheckNameAvailabilityRequest": {
      "type": "object",
      "description": "CheckNameAvailability Request",
      "properties": {
        "name": {
          "type": "string",
          "description": "Resource name for which availability needs to be checked"
        },
        "type": {
          "type": "string",
          "description": "Describes the Resource type: Microsoft.DataProtection/BackupVaults"
        }
      }
    },
    "CheckNameAvailabilityResult": {
      "type": "object",
      "description": "CheckNameAvailability Result",
      "properties": {
        "message": {
          "type": "string",
          "description": "Gets or sets the message."
        },
        "nameAvailable": {
          "type": "boolean",
          "description": "Gets or sets a value indicating whether [name available]."
        },
        "reason": {
          "type": "string",
          "description": "Gets or sets the reason."
        }
      }
    },
    "ClientDiscoveryDisplay": {
      "type": "object",
      "description": "Localized display information of an operation.",
      "properties": {
        "description": {
          "type": "string",
          "description": "Description of the operation having details of what operation is about."
        },
        "operation": {
          "type": "string",
          "description": "Operations Name itself."
        },
        "provider": {
          "type": "string",
          "description": "Name of the provider for display purposes"
        },
        "resource": {
          "type": "string",
          "description": "ResourceType for which this Operation can be performed."
        }
      }
    },
    "ClientDiscoveryForLogSpecification": {
      "type": "object",
      "description": "Class to represent shoebox log specification in json client discovery.",
      "properties": {
        "blobDuration": {
          "type": "string",
          "format": "duration",
          "description": "blob duration of shoebox log specification"
        },
        "displayName": {
          "type": "string",
          "description": "Localized display name"
        },
        "name": {
          "type": "string",
          "description": "Name for shoebox log specification."
        }
      }
    },
    "ClientDiscoveryForProperties": {
      "type": "object",
      "description": "Class to represent shoebox properties in json client discovery.",
      "properties": {
        "serviceSpecification": {
          "$ref": "#/definitions/ClientDiscoveryForServiceSpecification",
          "description": "Operation properties."
        }
      }
    },
    "ClientDiscoveryForServiceSpecification": {
      "type": "object",
      "description": "Class to represent shoebox service specification in json client discovery.",
      "properties": {
        "logSpecifications": {
          "type": "array",
          "description": "List of log specifications of this operation.",
          "items": {
            "$ref": "#/definitions/ClientDiscoveryForLogSpecification"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "ClientDiscoveryResponse": {
      "type": "object",
      "description": "Operations List response which contains list of available APIs.",
      "properties": {
        "nextLink": {
          "type": "string",
          "description": "Link to the next chunk of Response."
        },
        "value": {
          "type": "array",
          "description": "List of available operations.",
          "items": {
            "$ref": "#/definitions/ClientDiscoveryValueForSingleApi"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "ClientDiscoveryValueForSingleApi": {
      "type": "object",
      "description": "Available operation details.",
      "properties": {
        "display": {
          "$ref": "#/definitions/ClientDiscoveryDisplay",
          "description": "Contains the localized display information for this particular operation"
        },
        "name": {
          "type": "string",
          "description": "Name of the Operation."
        },
        "isDataAction": {
          "type": "boolean",
          "description": "Indicates whether the operation is a data action"
        },
        "origin": {
          "type": "string",
          "description": "The intended executor of the operation;governs the display of the operation in the RBAC UX and the audit logs UX"
        },
        "properties": {
          "$ref": "#/definitions/ClientDiscoveryForProperties",
          "description": "Properties for the given operation."
        }
      }
    },
    "CloudError": {
      "type": "object",
      "description": "An error response from Azure Backup.",
      "properties": {
        "error": {
          "$ref": "#/definitions/Error",
          "description": "The resource management error response."
        }
      }
    },
    "CopyOnExpiryOption": {
      "type": "object",
      "description": "Copy on Expiry Option",
      "allOf": [
        {
          "$ref": "#/definitions/CopyOption"
        }
      ],
      "x-ms-discriminator-value": "CopyOnExpiryOption"
    },
    "CopyOption": {
      "type": "object",
      "description": "Options to copy",
      "properties": {
        "objectType": {
          "type": "string",
          "description": "Discriminator property for CopyOption."
        }
      },
      "discriminator": "objectType",
      "required": [
        "objectType"
      ]
    },
    "CrossRegionRestoreDetails": {
      "type": "object",
      "description": "Cross Region Restore details",
      "properties": {
        "sourceRegion": {
          "type": "string"
        },
        "sourceBackupInstanceId": {
          "type": "string"
        }
      },
      "required": [
        "sourceRegion",
        "sourceBackupInstanceId"
      ]
    },
    "CrossRegionRestoreJobRequest": {
      "type": "object",
      "description": "Details of CRR Job to be fetched",
      "properties": {
        "sourceRegion": {
          "type": "string"
        },
        "sourceBackupVaultId": {
          "type": "string"
        },
        "jobId": {
          "type": "string"
        }
      },
      "required": [
        "sourceRegion",
        "sourceBackupVaultId",
        "jobId"
      ]
    },
    "CrossRegionRestoreJobsRequest": {
      "type": "object",
      "description": "Details of Backup Vault for which CRR Jobs are to be fetched",
      "properties": {
        "sourceRegion": {
          "type": "string"
        },
        "sourceBackupVaultId": {
          "type": "string"
        }
      },
      "required": [
        "sourceRegion",
        "sourceBackupVaultId"
      ]
    },
    "CrossRegionRestoreRequestObject": {
      "type": "object",
      "description": "Cross Region Restore Request Object",
      "properties": {
        "restoreRequestObject": {
          "$ref": "#/definitions/AzureBackupRestoreRequest",
          "description": "Gets or sets the restore request object."
        },
        "crossRegionRestoreDetails": {
          "$ref": "#/definitions/CrossRegionRestoreDetails",
          "description": "Cross region restore details."
        }
      },
      "required": [
        "restoreRequestObject",
        "crossRegionRestoreDetails"
      ]
    },
    "CrossRegionRestoreSettings": {
      "type": "object",
      "properties": {
        "state": {
          "$ref": "#/definitions/CrossRegionRestoreState",
          "description": "CrossRegionRestore state"
        }
      }
    },
    "CrossRegionRestoreState": {
      "type": "string",
      "description": "CrossRegionRestore state",
      "enum": [
        "Disabled",
        "Enabled"
      ],
      "x-ms-enum": {
        "name": "CrossRegionRestoreState",
        "modelAsString": true
      }
    },
    "CrossSubscriptionRestoreSettings": {
      "type": "object",
      "description": "CrossSubscriptionRestore Settings",
      "properties": {
        "state": {
          "$ref": "#/definitions/CrossSubscriptionRestoreState",
          "description": "CrossSubscriptionRestore state"
        }
      }
    },
    "CrossSubscriptionRestoreState": {
      "type": "string",
      "description": "CrossSubscriptionRestore state",
      "enum": [
        "Disabled",
        "PermanentlyDisabled",
        "Enabled"
      ],
      "x-ms-enum": {
        "name": "CrossSubscriptionRestoreState",
        "modelAsString": true
      }
    },
    "CurrentProtectionState": {
      "type": "string",
      "description": "Specifies the current protection state of the resource",
      "enum": [
        "Invalid",
        "NotProtected",
        "ConfiguringProtection",
        "ProtectionConfigured",
        "BackupSchedulesSuspended",
        "RetentionSchedulesSuspended",
        "ProtectionStopped",
        "ProtectionError",
        "ConfiguringProtectionFailed",
        "SoftDeleting",
        "SoftDeleted",
        "UpdatingProtection"
      ],
      "x-ms-enum": {
        "name": "CurrentProtectionState",
        "modelAsString": true
      }
    },
    "CustomCopyOption": {
      "type": "object",
      "description": "Duration based custom options to copy",
      "properties": {
        "duration": {
          "type": "string",
          "format": "duration",
          "description": "Data copied after given timespan"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/CopyOption"
        }
      ],
      "x-ms-discriminator-value": "CustomCopyOption"
    },
    "DataStoreInfoBase": {
      "type": "object",
      "description": "DataStoreInfo base",
      "properties": {
        "dataStoreType": {
          "$ref": "#/definitions/DataStoreTypes",
          "description": "type of datastore; Operational/Vault/Archive"
        },
        "objectType": {
          "type": "string",
          "description": "Type of Datasource object, used to initialize the right inherited type"
        }
      },
      "required": [
        "dataStoreType",
        "objectType"
      ]
    },
    "DataStoreParameters": {
      "type": "object",
      "description": "Parameters for DataStore",
      "properties": {
        "objectType": {
          "type": "string",
          "description": "Discriminator property for DataStoreParameters."
        },
        "dataStoreType": {
          "$ref": "#/definitions/DataStoreTypes",
          "description": "type of datastore; Operational/Vault/Archive"
        }
      },
      "discriminator": "objectType",
      "required": [
        "objectType",
        "dataStoreType"
      ]
    },
    "DataStoreTypes": {
      "type": "string",
      "description": "type of datastore; Operational/Vault/Archive",
      "enum": [
        "OperationalStore",
        "VaultStore",
        "ArchiveStore"
      ],
      "x-ms-enum": {
        "name": "DataStoreTypes",
        "modelAsString": true
      }
    },
    "Datasource": {
      "type": "object",
      "description": "Datasource to be backed up",
      "properties": {
        "datasourceType": {
          "type": "string",
          "description": "DatasourceType of the resource."
        },
        "objectType": {
          "type": "string",
          "description": "Type of Datasource object, used to initialize the right inherited type"
        },
        "resourceID": {
          "type": "string",
          "description": "Full ARM ID of the resource. For azure resources, this is ARM ID. For non azure resources, this will be the ID created by backup service via Fabric/Vault."
        },
        "resourceLocation": {
          "type": "string",
          "description": "Location of datasource."
        },
        "resourceName": {
          "type": "string",
          "description": "Unique identifier of the resource in the context of parent."
        },
        "resourceType": {
          "type": "string",
          "description": "Resource Type of Datasource."
        },
        "resourceUri": {
          "type": "string",
          "description": "Uri of the resource."
        },
        "resourceProperties": {
          "$ref": "#/definitions/BaseResourceProperties",
          "description": "Properties specific to data source"
        }
      },
      "required": [
        "resourceID"
      ]
    },
    "DatasourceSet": {
      "type": "object",
      "description": "DatasourceSet details of datasource to be backed up",
      "properties": {
        "datasourceType": {
          "type": "string",
          "description": "DatasourceType of the resource."
        },
        "objectType": {
          "type": "string",
          "description": "Type of Datasource object, used to initialize the right inherited type"
        },
        "resourceID": {
          "type": "string",
          "description": "Full ARM ID of the resource. For azure resources, this is ARM ID. For non azure resources, this will be the ID created by backup service via Fabric/Vault."
        },
        "resourceLocation": {
          "type": "string",
          "description": "Location of datasource."
        },
        "resourceName": {
          "type": "string",
          "description": "Unique identifier of the resource in the context of parent."
        },
        "resourceType": {
          "type": "string",
          "description": "Resource Type of Datasource."
        },
        "resourceUri": {
          "type": "string",
          "description": "Uri of the resource."
        },
        "resourceProperties": {
          "$ref": "#/definitions/BaseResourceProperties",
          "description": "Properties specific to data source set"
        }
      },
      "required": [
        "resourceID"
      ]
    },
    "Day": {
      "type": "object",
      "description": "Day of the week",
      "properties": {
        "date": {
          "type": "integer",
          "format": "int32",
          "description": "Date of the month"
        },
        "isLast": {
          "type": "boolean",
          "description": "Whether Date is last date of month"
        }
      }
    },
    "DayOfWeek": {
      "type": "string",
      "enum": [
        "Friday",
        "Monday",
        "Saturday",
        "Sunday",
        "Thursday",
        "Tuesday",
        "Wednesday"
      ],
      "x-ms-enum": {
        "name": "DayOfWeek",
        "modelAsString": true
      }
    },
    "DefaultResourceProperties": {
      "type": "object",
      "description": "Default source properties",
      "allOf": [
        {
          "$ref": "#/definitions/BaseResourceProperties"
        }
      ],
      "x-ms-discriminator-value": "DefaultResourceProperties"
    },
    "DeleteOption": {
      "type": "object",
      "description": "Delete Option",
      "properties": {
        "objectType": {
          "type": "string",
          "description": "Discriminator property for DeleteOption."
        },
        "duration": {
          "type": "string",
          "format": "duration",
          "description": "Duration of deletion after given timespan"
        }
      },
      "discriminator": "objectType",
      "required": [
        "objectType",
        "duration"
      ]
    },
    "DeletedBackupInstance": {
      "type": "object",
      "description": "Deleted Backup Instance",
      "properties": {
        "deletionInfo": {
          "$ref": "#/definitions/DeletionInfo",
          "description": "Deletion info of Backup Instance",
          "readOnly": true
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/BackupInstance"
        }
      ]
    },
    "DeletedBackupInstanceResource": {
      "type": "object",
      "description": "Deleted Backup Instance",
      "properties": {
        "properties": {
          "$ref": "#/definitions/DeletedBackupInstance",
          "description": "DeletedBackupInstanceResource properties",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "DeletedBackupInstanceResourceListResult": {
      "type": "object",
      "description": "The response of a DeletedBackupInstanceResource list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The DeletedBackupInstanceResource items on this page",
          "items": {
            "$ref": "#/definitions/DeletedBackupInstanceResource"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "DeletionInfo": {
      "type": "object",
      "description": "Deletion Info",
      "properties": {
        "deletionTime": {
          "type": "string",
          "description": "Specifies time of deletion",
          "readOnly": true
        },
        "billingEndDate": {
          "type": "string",
          "description": "Specifies billing end date",
          "readOnly": true
        },
        "scheduledPurgeTime": {
          "type": "string",
          "description": "Specifies purge time",
          "readOnly": true
        },
        "deleteActivityID": {
          "type": "string",
          "description": "Delete activity ID for troubleshooting purpose",
          "readOnly": true
        }
      }
    },
    "DppBaseTrackedResource": {
      "type": "object",
      "properties": {
        "eTag": {
          "type": "string",
          "description": "Optional ETag."
        },
        "id": {
          "type": "string",
          "description": "Resource Id represents the complete path to the resource.",
          "readOnly": true
        },
        "location": {
          "type": "string",
          "description": "Resource location."
        },
        "name": {
          "type": "string",
          "description": "Resource name associated with the resource.",
          "readOnly": true
        },
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "type": {
          "type": "string",
          "description": "Resource type represents the complete path of the form Namespace/ResourceType/ResourceType/...",
          "readOnly": true
        },
        "systemData": {
          "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/systemData",
          "description": "Metadata pertaining to creation and last modification of the resource.",
          "readOnly": true
        }
      }
    },
    "DppIdentityDetails": {
      "type": "object",
      "description": "Identity details",
      "properties": {
        "principalId": {
          "type": "string",
          "description": "The object ID of the service principal object for the managed identity that is used to grant role-based access to an Azure resource.",
          "readOnly": true
        },
        "tenantId": {
          "type": "string",
          "description": "A Globally Unique Identifier (GUID) that represents the Azure AD tenant where the resource is now a member.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The identityType which can be either SystemAssigned, UserAssigned, 'SystemAssigned,UserAssigned' or None"
        },
        "userAssignedIdentities": {
          "type": "object",
          "description": "Gets or sets the user assigned identities.",
          "additionalProperties": {
            "$ref": "#/definitions/Azure.ResourceManager.Foundations.UserAssignedIdentity"
          }
        }
      }
    },
    "DppProxyResource": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Proxy Resource Id represents the complete path to the resource.",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "Proxy Resource name associated with the resource.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "Proxy Resource type represents the complete path of the form Namespace/ResourceType/ResourceType/...",
          "readOnly": true
        },
        "tags": {
          "type": "object",
          "description": "Proxy Resource tags.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "systemData": {
          "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/systemData",
          "description": "Metadata pertaining to creation and last modification of the resource.",
          "readOnly": true
        }
      }
    },
    "DppResource": {
      "type": "object",
      "description": "Resource class",
      "properties": {
        "id": {
          "type": "string",
          "description": "Resource Id represents the complete path to the resource.",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "Resource name associated with the resource.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "Resource type represents the complete path of the form Namespace/ResourceType/ResourceType/...",
          "readOnly": true
        },
        "systemData": {
          "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/systemData",
          "description": "Metadata pertaining to creation and last modification of the resource.",
          "readOnly": true
        }
      }
    },
    "DppResourceList": {
      "type": "object",
      "description": "ListResource",
      "properties": {
        "nextLink": {
          "type": "string",
          "description": "The uri to fetch the next page of resources. Call ListNext() fetches next page of resources."
        }
      }
    },
    "DppTrackedResource": {
      "type": "object",
      "properties": {
        "identity": {
          "$ref": "#/definitions/DppIdentityDetails",
          "description": "Input Managed Identity Details"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/DppBaseTrackedResource"
        }
      ]
    },
    "DppTrackedResourceList": {
      "type": "object",
      "properties": {
        "nextLink": {
          "type": "string",
          "description": "The uri to fetch the next page of resources. Call ListNext() fetches next page of resources."
        }
      }
    },
    "DppWorkerRequest": {
      "type": "object",
      "properties": {
        "subscriptionId": {
          "type": "string"
        },
        "uri": {
          "type": "string"
        },
        "headers": {
          "type": "object",
          "description": "Dictionary of <components·ikn5y4·schemas·dppworkerrequest·properties·headers·additionalproperties>",
          "additionalProperties": {
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "supportedGroupVersions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "cultureInfo": {
          "type": "string"
        },
        "parameters": {
          "type": "object",
          "description": "Dictionary of <string>",
          "additionalProperties": {
            "type": "string"
          }
        },
        "httpMethod": {
          "type": "string"
        }
      }
    },
    "Error": {
      "type": "object",
      "description": "The resource management error response.",
      "properties": {
        "additionalInfo": {
          "type": "array",
          "description": "The error additional info.",
          "items": {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/ErrorAdditionalInfo"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        },
        "code": {
          "type": "string",
          "description": "The error code.",
          "readOnly": true
        },
        "details": {
          "type": "array",
          "description": "The error details.",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        },
        "message": {
          "type": "string",
          "description": "The error message.",
          "readOnly": true
        },
        "target": {
          "type": "string",
          "description": "The error target.",
          "readOnly": true
        }
      }
    },
    "ExistingResourcePolicy": {
      "type": "string",
      "description": "Gets or sets the Conflict Policy property. This property sets policy during conflict of resources during restore.",
      "enum": [
        "Skip",
        "Patch"
      ],
      "x-ms-enum": {
        "name": "ExistingResourcePolicy",
        "modelAsString": true
      }
    },
    "ExportJobsResult": {
      "type": "object",
      "description": "The result for export jobs containing blob details.",
      "properties": {
        "blobUrl": {
          "type": "string",
          "description": "URL of the blob into which the serialized string of list of jobs is exported.",
          "readOnly": true
        },
        "blobSasKey": {
          "type": "string",
          "description": "SAS key to access the blob.",
          "readOnly": true
        },
        "excelFileBlobUrl": {
          "type": "string",
          "description": "URL of the blob into which the ExcelFile is uploaded.",
          "readOnly": true
        },
        "excelFileBlobSasKey": {
          "type": "string",
          "description": "SAS key to access the ExcelFile blob.",
          "readOnly": true
        }
      }
    },
    "FeatureSettings": {
      "type": "object",
      "description": "Class containing feature settings of vault",
      "properties": {
        "crossSubscriptionRestoreSettings": {
          "$ref": "#/definitions/CrossSubscriptionRestoreSettings",
          "description": "CrossSubscriptionRestore Settings"
        },
        "crossRegionRestoreSettings": {
          "$ref": "#/definitions/CrossRegionRestoreSettings"
        }
      }
    },
    "FeatureSupportStatus": {
      "type": "string",
      "description": "feature support status",
      "enum": [
        "Invalid",
        "NotSupported",
        "AlphaPreview",
        "PrivatePreview",
        "PublicPreview",
        "GenerallyAvailable"
      ],
      "x-ms-enum": {
        "name": "FeatureSupportStatus",
        "modelAsString": true
      }
    },
    "FeatureType": {
      "type": "string",
      "description": "backup support feature type.",
      "enum": [
        "Invalid",
        "DataSourceType"
      ],
      "x-ms-enum": {
        "name": "FeatureType",
        "modelAsString": true
      }
    },
    "FeatureValidationRequest": {
      "type": "object",
      "description": "Base class for feature object",
      "properties": {
        "featureType": {
          "$ref": "#/definitions/FeatureType",
          "description": "backup support feature type."
        },
        "featureName": {
          "type": "string",
          "description": "backup support feature name."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/FeatureValidationRequestBase"
        }
      ],
      "x-ms-discriminator-value": "FeatureValidationRequest"
    },
    "FeatureValidationRequestBase": {
      "type": "object",
      "description": "Base class for Backup Feature support",
      "properties": {
        "objectType": {
          "type": "string",
          "description": "Discriminator property for FeatureValidationRequestBase."
        }
      },
      "discriminator": "objectType",
      "required": [
        "objectType"
      ]
    },
    "FeatureValidationResponse": {
      "type": "object",
      "description": "Feature Validation Response",
      "properties": {
        "featureType": {
          "$ref": "#/definitions/FeatureType",
          "description": "backup support feature type."
        },
        "features": {
          "type": "array",
          "description": "Response features",
          "items": {
            "$ref": "#/definitions/SupportedFeature"
          },
          "x-ms-identifiers": []
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/FeatureValidationResponseBase"
        }
      ],
      "x-ms-discriminator-value": "FeatureValidationResponse"
    },
    "FeatureValidationResponseBase": {
      "type": "object",
      "description": "Base class for Backup Feature support",
      "properties": {
        "objectType": {
          "type": "string",
          "description": "Discriminator property for FeatureValidationResponseBase."
        }
      },
      "discriminator": "objectType",
      "required": [
        "objectType"
      ]
    },
    "FetchSecondaryRPsRequestParameters": {
      "type": "object",
      "description": "Information about BI whose secondary RecoveryPoints are requested\nSource region and\nBI ARM path",
      "properties": {
        "sourceRegion": {
          "type": "string",
          "description": "Source region in which BackupInstance is located"
        },
        "sourceBackupInstanceId": {
          "type": "string",
          "description": "ARM Path of BackupInstance"
        }
      }
    },
    "IdentityDetails": {
      "type": "object",
      "properties": {
        "useSystemAssignedIdentity": {
          "type": "boolean",
          "description": "Specifies if the BI is protected by System Identity."
        },
        "userAssignedIdentityArmUrl": {
          "type": "string",
          "description": "ARM URL for User Assigned Identity."
        }
      }
    },
    "ImmediateCopyOption": {
      "type": "object",
      "description": "Immediate copy Option",
      "allOf": [
        {
          "$ref": "#/definitions/CopyOption"
        }
      ],
      "x-ms-discriminator-value": "ImmediateCopyOption"
    },
    "ImmutabilitySettings": {
      "type": "object",
      "description": "Immutability Settings at vault level",
      "properties": {
        "state": {
          "$ref": "#/definitions/ImmutabilityState",
          "description": "Immutability state"
        }
      }
    },
    "ImmutabilityState": {
      "type": "string",
      "description": "Immutability state",
      "enum": [
        "Disabled",
        "Unlocked",
        "Locked"
      ],
      "x-ms-enum": {
        "name": "ImmutabilityState",
        "modelAsString": true
      }
    },
    "InnerError": {
      "type": "object",
      "description": "Inner Error",
      "properties": {
        "additionalInfo": {
          "type": "object",
          "description": "Any Key value pairs that can be provided to the client for additional  verbose information.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "code": {
          "type": "string",
          "description": "Unique code for this error"
        },
        "embeddedInnerError": {
          "$ref": "#/definitions/InnerError",
          "description": "Child Inner Error, to allow Nesting."
        }
      }
    },
    "ItemLevelRestoreCriteria": {
      "type": "object",
      "description": "Class to contain criteria for item level restore",
      "properties": {
        "objectType": {
          "type": "string",
          "description": "Discriminator property for ItemLevelRestoreCriteria."
        }
      },
      "discriminator": "objectType",
      "required": [
        "objectType"
      ]
    },
    "ItemLevelRestoreTargetInfo": {
      "type": "object",
      "description": "Restore target info for Item level restore operation",
      "properties": {
        "restoreCriteria": {
          "type": "array",
          "description": "Restore Criteria",
          "items": {
            "$ref": "#/definitions/ItemLevelRestoreCriteria"
          },
          "x-ms-identifiers": []
        },
        "datasourceInfo": {
          "$ref": "#/definitions/Datasource",
          "description": "Information of target DS"
        },
        "datasourceSetInfo": {
          "$ref": "#/definitions/DatasourceSet",
          "description": "Information of target DS Set"
        },
        "datasourceAuthCredentials": {
          "$ref": "#/definitions/AuthCredentials",
          "description": "Credentials to use to authenticate with data source provider."
        }
      },
      "required": [
        "restoreCriteria",
        "datasourceInfo"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/RestoreTargetInfoBase"
        }
      ],
      "x-ms-discriminator-value": "ItemLevelRestoreTargetInfo"
    },
    "ItemPathBasedRestoreCriteria": {
      "type": "object",
      "description": "Prefix criteria to be used to during restore",
      "properties": {
        "itemPath": {
          "type": "string",
          "description": "The path of the item to be restored. It could be the full path of the item or the path relative to the backup item"
        },
        "isPathRelativeToBackupItem": {
          "type": "boolean",
          "description": "Flag to specify if the path is relative to backup item or full path"
        },
        "subItemPathPrefix": {
          "type": "array",
          "description": "The list of prefix strings to be used as filter criteria during restore. These are relative to the item path specified.",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "itemPath",
        "isPathRelativeToBackupItem"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/ItemLevelRestoreCriteria"
        }
      ],
      "x-ms-discriminator-value": "ItemPathBasedRestoreCriteria"
    },
    "JobExtendedInfo": {
      "type": "object",
      "description": "Extended Information about the job",
      "properties": {
        "additionalDetails": {
          "type": "object",
          "description": "Job's Additional Details",
          "additionalProperties": {
            "type": "string"
          }
        },
        "backupInstanceState": {
          "type": "string",
          "description": "State of the Backup Instance",
          "readOnly": true
        },
        "dataTransferredInBytes": {
          "type": "number",
          "format": "double",
          "description": "Number of bytes transferred",
          "readOnly": true
        },
        "recoveryDestination": {
          "type": "string",
          "description": "Destination where restore is done",
          "readOnly": true
        },
        "sourceRecoverPoint": {
          "$ref": "#/definitions/RestoreJobRecoveryPointDetails",
          "description": "Details of the Source Recovery Point",
          "readOnly": true
        },
        "subTasks": {
          "type": "array",
          "description": "List of Sub Tasks of the job",
          "items": {
            "$ref": "#/definitions/JobSubTask"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        },
        "targetRecoverPoint": {
          "$ref": "#/definitions/RestoreJobRecoveryPointDetails",
          "description": "Details of the Target Recovery Point",
          "readOnly": true
        },
        "warningDetails": {
          "type": "array",
          "description": "A List, detailing the warnings related to the job",
          "items": {
            "$ref": "#/definitions/UserFacingWarningDetail"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        }
      }
    },
    "JobSubTask": {
      "type": "object",
      "description": "Details of Job's Sub Task",
      "properties": {
        "additionalDetails": {
          "type": "object",
          "description": "Additional details of Sub Tasks",
          "additionalProperties": {
            "type": "string"
          }
        },
        "taskId": {
          "type": "integer",
          "format": "int32",
          "description": "Task Id of the Sub Task"
        },
        "taskName": {
          "type": "string",
          "description": "Name of the Sub Task"
        },
        "taskProgress": {
          "type": "string",
          "description": "Progress of the Sub Task",
          "readOnly": true
        },
        "taskStatus": {
          "type": "string",
          "description": "Status of the Sub Task"
        }
      },
      "required": [
        "taskId",
        "taskName",
        "taskStatus"
      ]
    },
    "KubernetesClusterBackupDatasourceParameters": {
      "type": "object",
      "description": "Parameters for Kubernetes Cluster Backup Datasource",
      "properties": {
        "snapshotVolumes": {
          "type": "boolean",
          "description": "Gets or sets the volume snapshot property. This property if enabled will take volume snapshots during backup."
        },
        "includeClusterScopeResources": {
          "type": "boolean",
          "description": "Gets or sets the include cluster resources property. This property if enabled will include cluster scope resources during backup."
        },
        "includedNamespaces": {
          "type": "array",
          "description": "Gets or sets the include namespaces property. This property sets the namespaces to be included during backup.",
          "items": {
            "type": "string"
          }
        },
        "excludedNamespaces": {
          "type": "array",
          "description": "Gets or sets the exclude namespaces property. This property sets the namespaces to be excluded during backup.",
          "items": {
            "type": "string"
          }
        },
        "includedResourceTypes": {
          "type": "array",
          "description": "Gets or sets the include resource types property. This property sets the resource types to be included during backup.",
          "items": {
            "type": "string"
          }
        },
        "excludedResourceTypes": {
          "type": "array",
          "description": "Gets or sets the exclude resource types property. This property sets the resource types to be excluded during backup.",
          "items": {
            "type": "string"
          }
        },
        "labelSelectors": {
          "type": "array",
          "description": "Gets or sets the LabelSelectors property. This property sets the resource with such label selectors to be included during backup.",
          "items": {
            "type": "string"
          }
        },
        "backupHookReferences": {
          "type": "array",
          "description": "Gets or sets the backup hook references. This property sets the hook reference to be executed during backup.",
          "items": {
            "$ref": "#/definitions/NamespacedNameResource"
          },
          "x-ms-identifiers": []
        }
      },
      "required": [
        "snapshotVolumes",
        "includeClusterScopeResources"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/BackupDatasourceParameters"
        }
      ],
      "x-ms-discriminator-value": "KubernetesClusterBackupDatasourceParameters"
    },
    "KubernetesClusterRestoreCriteria": {
      "type": "object",
      "description": "kubernetes Cluster Backup target info for restore operation",
      "properties": {
        "includeClusterScopeResources": {
          "type": "boolean",
          "description": "Gets or sets the include cluster resources property. This property if enabled will include cluster scope resources during restore."
        },
        "includedNamespaces": {
          "type": "array",
          "description": "Gets or sets the include namespaces property. This property sets the namespaces to be included during restore.",
          "items": {
            "type": "string"
          }
        },
        "excludedNamespaces": {
          "type": "array",
          "description": "Gets or sets the exclude namespaces property. This property sets the namespaces to be excluded during restore.",
          "items": {
            "type": "string"
          }
        },
        "includedResourceTypes": {
          "type": "array",
          "description": "Gets or sets the include resource types property. This property sets the resource types to be included during restore.",
          "items": {
            "type": "string"
          }
        },
        "excludedResourceTypes": {
          "type": "array",
          "description": "Gets or sets the exclude resource types property. This property sets the resource types to be excluded during restore.",
          "items": {
            "type": "string"
          }
        },
        "labelSelectors": {
          "type": "array",
          "description": "Gets or sets the LabelSelectors property. This property sets the resource with such label selectors to be included during restore.",
          "items": {
            "type": "string"
          }
        },
        "persistentVolumeRestoreMode": {
          "$ref": "#/definitions/PersistentVolumeRestoreMode",
          "description": "Gets or sets the PV (Persistent Volume) Restore Mode property. This property sets whether volumes needs to be restored."
        },
        "conflictPolicy": {
          "$ref": "#/definitions/ExistingResourcePolicy",
          "description": "Gets or sets the Conflict Policy property. This property sets policy during conflict of resources during restore."
        },
        "namespaceMappings": {
          "type": "object",
          "description": "Gets or sets the Namespace Mappings property. This property sets if namespace needs to be change during restore.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "restoreHookReferences": {
          "type": "array",
          "description": "Gets or sets the restore hook references. This property sets the hook reference to be executed during restore.",
          "items": {
            "$ref": "#/definitions/NamespacedNameResource"
          },
          "x-ms-identifiers": []
        }
      },
      "required": [
        "includeClusterScopeResources"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/ItemLevelRestoreCriteria"
        }
      ],
      "x-ms-discriminator-value": "KubernetesClusterRestoreCriteria"
    },
    "KubernetesClusterVaultTierRestoreCriteria": {
      "type": "object",
      "description": "kubernetes Cluster Backup target info for restore operation from vault",
      "properties": {
        "includeClusterScopeResources": {
          "type": "boolean",
          "description": "Gets or sets the include cluster resources property. This property if enabled will include cluster scope resources during restore from vault."
        },
        "includedNamespaces": {
          "type": "array",
          "description": "Gets or sets the include namespaces property. This property sets the namespaces to be included during restore from vault.",
          "items": {
            "type": "string"
          }
        },
        "excludedNamespaces": {
          "type": "array",
          "description": "Gets or sets the exclude namespaces property. This property sets the namespaces to be excluded during restore from vault.",
          "items": {
            "type": "string"
          }
        },
        "includedResourceTypes": {
          "type": "array",
          "description": "Gets or sets the include resource types property. This property sets the resource types to be included during restore from vault.",
          "items": {
            "type": "string"
          }
        },
        "excludedResourceTypes": {
          "type": "array",
          "description": "Gets or sets the exclude resource types property. This property sets the resource types to be excluded during restore from vault.",
          "items": {
            "type": "string"
          }
        },
        "labelSelectors": {
          "type": "array",
          "description": "Gets or sets the LabelSelectors property. This property sets the resource with such label selectors to be included during restore from vault.",
          "items": {
            "type": "string"
          }
        },
        "persistentVolumeRestoreMode": {
          "$ref": "#/definitions/PersistentVolumeRestoreMode",
          "description": "Gets or sets the PV (Persistent Volume) Restore Mode property. This property sets whether volumes needs to be restored from vault."
        },
        "conflictPolicy": {
          "$ref": "#/definitions/ExistingResourcePolicy",
          "description": "Gets or sets the Conflict Policy property. This property sets policy during conflict of resources during restore from vault."
        },
        "namespaceMappings": {
          "type": "object",
          "description": "Gets or sets the Namespace Mappings property. This property sets if namespace needs to be change during restore from vault.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "restoreHookReferences": {
          "type": "array",
          "description": "Gets or sets the restore hook references. This property sets the hook reference to be executed during restore from vault.",
          "items": {
            "$ref": "#/definitions/NamespacedNameResource"
          },
          "x-ms-identifiers": []
        },
        "stagingResourceGroupId": {
          "type": "string",
          "format": "arm-id",
          "description": "Gets or sets the staging RG Id for creating staging disks and snapshots during restore from vault.",
          "x-ms-arm-id-details": {
            "allowedResources": []
          }
        },
        "stagingStorageAccountId": {
          "type": "string",
          "format": "arm-id",
          "description": "Gets or sets the staging Storage Account Id for creating backup extension object store data during restore from vault.",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.Storage/storageAccounts"
              }
            ]
          }
        }
      },
      "required": [
        "includeClusterScopeResources"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/ItemLevelRestoreCriteria"
        }
      ],
      "x-ms-discriminator-value": "KubernetesClusterVaultTierRestoreCriteria"
    },
    "KubernetesPVRestoreCriteria": {
      "type": "object",
      "description": "Item Level kubernetes persistent volume target info for restore operation",
      "properties": {
        "name": {
          "type": "string",
          "description": "Selected persistent volume claim name"
        },
        "storageClassName": {
          "type": "string",
          "description": "Selected storage class name for restore operation"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ItemLevelRestoreCriteria"
        }
      ],
      "x-ms-discriminator-value": "KubernetesPVRestoreCriteria"
    },
    "KubernetesStorageClassRestoreCriteria": {
      "type": "object",
      "description": "Item Level kubernetes storage class target info for restore operation",
      "properties": {
        "selectedStorageClassName": {
          "type": "string",
          "description": "Selected storage class name"
        },
        "provisioner": {
          "type": "string",
          "description": "Provisioner of the storage class"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ItemLevelRestoreCriteria"
        }
      ],
      "x-ms-discriminator-value": "KubernetesStorageClassRestoreCriteria"
    },
    "MonitoringSettings": {
      "type": "object",
      "description": "Monitoring Settings",
      "properties": {
        "azureMonitorAlertSettings": {
          "$ref": "#/definitions/AzureMonitorAlertSettings",
          "description": "Settings for Azure Monitor based alerts"
        }
      }
    },
    "Month": {
      "type": "string",
      "enum": [
        "April",
        "August",
        "December",
        "February",
        "January",
        "July",
        "June",
        "March",
        "May",
        "November",
        "October",
        "September"
      ],
      "x-ms-enum": {
        "name": "Month",
        "modelAsString": true
      }
    },
    "NamespacedNameResource": {
      "type": "object",
      "description": "Class to refer resources which contains namespace and name",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the resource"
        },
        "namespace": {
          "type": "string",
          "description": "Namespace in which the resource exists"
        }
      }
    },
    "OperationExtendedInfo": {
      "type": "object",
      "description": "Operation Extended Info",
      "properties": {
        "objectType": {
          "type": "string",
          "description": "Discriminator property for OperationExtendedInfo."
        }
      },
      "discriminator": "objectType",
      "required": [
        "objectType"
      ]
    },
    "OperationJobExtendedInfo": {
      "type": "object",
      "description": "Operation Job Extended Info",
      "properties": {
        "jobId": {
          "type": "string",
          "description": "Name or Arm Id of the job created for this operation."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/OperationExtendedInfo"
        }
      ],
      "x-ms-discriminator-value": "OperationJobExtendedInfo"
    },
    "OperationResource": {
      "type": "object",
      "description": "Operation Resource",
      "properties": {
        "endTime": {
          "type": "string",
          "format": "date-time",
          "description": "End time of the operation"
        },
        "error": {
          "$ref": "#/definitions/Error",
          "description": "Required if status == failed or status == canceled. This is the OData v4 error format, used by the RPC and will go into the v2.2 Azure REST API guidelines.\nThe full set of optional properties (e.g. inner errors / details) can be found in the \"Error Response\" section."
        },
        "id": {
          "type": "string",
          "description": "It should match what is used to GET the operation result"
        },
        "name": {
          "type": "string",
          "description": "It must match the last segment of the \"id\" field, and will typically be a GUID / system generated value"
        },
        "properties": {
          "$ref": "#/definitions/OperationExtendedInfo",
          "description": "End time of the operation"
        },
        "startTime": {
          "type": "string",
          "format": "date-time",
          "description": "Start time of the operation"
        },
        "status": {
          "type": "string"
        }
      }
    },
    "PagedResourceGuardProtectedObjectData": {
      "type": "object",
      "description": "Base for all lists of V2 resources.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The ResourceGuardProtectedObjectData items on this page",
          "items": {
            "$ref": "#/definitions/ResourceGuardProtectedObjectData"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "PatchBackupVaultInput": {
      "type": "object",
      "description": "Backup Vault Contract for Patch Backup Vault API.",
      "properties": {
        "monitoringSettings": {
          "$ref": "#/definitions/MonitoringSettings",
          "description": "Monitoring Settings"
        },
        "securitySettings": {
          "$ref": "#/definitions/SecuritySettings",
          "description": "Security Settings"
        },
        "featureSettings": {
          "$ref": "#/definitions/FeatureSettings",
          "description": "Feature Settings"
        }
      }
    },
    "PatchResourceGuardInput": {
      "type": "object",
      "description": "Patch Request content for Microsoft.DataProtection Resource Guard resources",
      "properties": {
        "tags": {
          "type": "object",
          "description": "Resource Guard tags.",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "PatchResourceRequestInput": {
      "type": "object",
      "description": "Patch Request content for Microsoft.DataProtection resources",
      "properties": {
        "identity": {
          "$ref": "#/definitions/DppIdentityDetails",
          "description": "Input Managed Identity Details"
        },
        "properties": {
          "$ref": "#/definitions/PatchBackupVaultInput",
          "description": "Resource properties."
        },
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "PersistentVolumeRestoreMode": {
      "type": "string",
      "description": "Gets or sets the PV (Persistent Volume) Restore Mode property. This property sets whether volumes needs to be restored.",
      "enum": [
        "RestoreWithVolumeData",
        "RestoreWithoutVolumeData"
      ],
      "x-ms-enum": {
        "name": "PersistentVolumeRestoreMode",
        "modelAsString": true
      }
    },
    "PolicyInfo": {
      "type": "object",
      "description": "Policy Info in backupInstance",
      "properties": {
        "policyId": {
          "type": "string"
        },
        "policyVersion": {
          "type": "string",
          "readOnly": true
        },
        "policyParameters": {
          "$ref": "#/definitions/PolicyParameters",
          "description": "Policy parameters for the backup instance"
        }
      },
      "required": [
        "policyId"
      ]
    },
    "PolicyParameters": {
      "type": "object",
      "description": "Parameters in Policy",
      "properties": {
        "dataStoreParametersList": {
          "type": "array",
          "description": "Gets or sets the DataStore Parameters",
          "items": {
            "$ref": "#/definitions/DataStoreParameters"
          },
          "x-ms-identifiers": []
        },
        "backupDatasourceParametersList": {
          "type": "array",
          "description": "Gets or sets the Backup Data Source Parameters",
          "items": {
            "$ref": "#/definitions/BackupDatasourceParameters"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "ProtectionStatusDetails": {
      "type": "object",
      "description": "Protection status details",
      "properties": {
        "errorDetails": {
          "$ref": "#/definitions/UserFacingError",
          "description": "Specifies the protection status error of the resource"
        },
        "status": {
          "$ref": "#/definitions/Status",
          "description": "Specifies the protection status of the resource"
        }
      }
    },
    "ProvisioningState": {
      "type": "string",
      "description": "Provisioning state of the BackupVault resource",
      "enum": [
        "Failed",
        "Provisioning",
        "Succeeded",
        "Unknown",
        "Updating"
      ],
      "x-ms-enum": {
        "name": "ProvisioningState",
        "modelAsString": true
      },
      "readOnly": true
    },
    "RangeBasedItemLevelRestoreCriteria": {
      "type": "object",
      "description": "Item Level target info for restore operation",
      "properties": {
        "minMatchingValue": {
          "type": "string",
          "description": "minimum value for range prefix match"
        },
        "maxMatchingValue": {
          "type": "string",
          "description": "maximum value for range prefix match"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ItemLevelRestoreCriteria"
        }
      ],
      "x-ms-discriminator-value": "RangeBasedItemLevelRestoreCriteria"
    },
    "RecoveryOption": {
      "type": "string",
      "description": "Recovery Option",
      "enum": [
        "FailIfExists"
      ],
      "x-ms-enum": {
        "name": "RecoveryOption",
        "modelAsString": true
      }
    },
    "RecoveryPointCompletionState": {
      "type": "string",
      "description": "Specifies recovery point completeness. Partial (i.e., only some of the intended items were backed up), or Completed (i.e., ALL intended items were backed up).",
      "enum": [
        "Completed",
        "Partial"
      ],
      "x-ms-enum": {
        "name": "RecoveryPointCompletionState",
        "modelAsString": true
      }
    },
    "RecoveryPointDataStoreDetails": {
      "type": "object",
      "description": "RecoveryPoint datastore details",
      "properties": {
        "creationTime": {
          "type": "string",
          "format": "date-time"
        },
        "expiryTime": {
          "type": "string",
          "format": "date-time"
        },
        "id": {
          "type": "string"
        },
        "metaData": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "visible": {
          "type": "boolean"
        },
        "rehydrationExpiryTime": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "rehydrationStatus": {
          "$ref": "#/definitions/RehydrationStatus",
          "readOnly": true
        }
      }
    },
    "RecoveryPointsFilters": {
      "type": "object",
      "properties": {
        "restorePointDataStoreId": {
          "type": "string"
        },
        "isVisible": {
          "type": "boolean"
        },
        "startDate": {
          "type": "string"
        },
        "endDate": {
          "type": "string"
        },
        "extendedInfo": {
          "type": "boolean"
        },
        "restorePointState": {
          "type": "string"
        }
      }
    },
    "RehydrationPriority": {
      "type": "string",
      "description": "Priority to be used for rehydration. Values High or Standard",
      "enum": [
        "Invalid",
        "High",
        "Standard"
      ],
      "x-ms-enum": {
        "name": "RehydrationPriority",
        "modelAsString": true
      }
    },
    "RehydrationStatus": {
      "type": "string",
      "enum": [
        "CREATE_IN_PROGRESS",
        "COMPLETED",
        "DELETE_IN_PROGRESS",
        "DELETED",
        "FAILED"
      ],
      "x-ms-enum": {
        "name": "RehydrationStatus",
        "modelAsString": true
      }
    },
    "ResourceData": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Resource Id represents the complete path to the resource.",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "Resource name associated with the resource.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "Resource type represents the complete path of the form Namespace/ResourceType/ResourceType/...",
          "readOnly": true
        }
      }
    },
    "ResourceGuard": {
      "type": "object",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "Provisioning state of the BackupVault resource",
          "readOnly": true
        },
        "allowAutoApprovals": {
          "type": "boolean",
          "description": "This flag indicates whether auto approval is allowed or not.",
          "readOnly": true
        },
        "resourceGuardOperations": {
          "type": "array",
          "description": "{readonly} List of operation details those are protected by the ResourceGuard resource",
          "items": {
            "$ref": "#/definitions/ResourceGuardOperation"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        },
        "vaultCriticalOperationExclusionList": {
          "type": "array",
          "description": "List of critical operations which are not protected by this resourceGuard",
          "items": {
            "type": "string"
          }
        },
        "description": {
          "type": "string",
          "description": "Description about the pre-req steps to perform all the critical operations.",
          "readOnly": true
        }
      }
    },
    "ResourceGuardOperation": {
      "type": "object",
      "description": "This class contains all the details about a critical operation.",
      "properties": {
        "vaultCriticalOperation": {
          "type": "string",
          "description": "Name of the critical operation.",
          "readOnly": true
        },
        "requestResourceType": {
          "type": "string",
          "description": "Type of resource request.",
          "readOnly": true
        }
      }
    },
    "ResourceGuardOperationDetail": {
      "type": "object",
      "description": "VaultCritical Operation protected by a resource guard",
      "properties": {
        "vaultCriticalOperation": {
          "type": "string"
        },
        "defaultResourceRequest": {
          "type": "string"
        }
      }
    },
    "ResourceGuardProtectedObjectData": {
      "type": "object",
      "description": "Base resource under Microsoft.DataProtection provider namespace",
      "allOf": [
        {
          "$ref": "#/definitions/ResourceData"
        }
      ]
    },
    "ResourceGuardProxyBase": {
      "type": "object",
      "description": "ResourceGuardProxyBase object, used in ResourceGuardProxyBaseResource",
      "properties": {
        "resourceGuardResourceId": {
          "type": "string"
        },
        "resourceGuardOperationDetails": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResourceGuardOperationDetail"
          },
          "x-ms-identifiers": []
        },
        "lastUpdatedTime": {
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      }
    },
    "ResourceGuardProxyBaseResource": {
      "type": "object",
      "description": "ResourceGuardProxyBaseResource object, used for response and request bodies for ResourceGuardProxy APIs",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ResourceGuardProxyBase",
          "description": "ResourceGuardProxyBaseResource properties",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "ResourceGuardProxyBaseResourceListResult": {
      "type": "object",
      "description": "The response of a ResourceGuardProxyBaseResource list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The ResourceGuardProxyBaseResource items on this page",
          "items": {
            "$ref": "#/definitions/ResourceGuardProxyBaseResource"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "ResourceGuardResource": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ResourceGuard",
          "description": "ResourceGuardResource properties",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "ResourceGuardResourceListResult": {
      "type": "object",
      "description": "The response of a ResourceGuardResource list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The ResourceGuardResource items on this page",
          "items": {
            "$ref": "#/definitions/ResourceGuardResource"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "ResourceMoveDetails": {
      "type": "object",
      "description": "ResourceMoveDetails will be returned in response to GetResource call from ARM",
      "properties": {
        "operationId": {
          "type": "string",
          "description": "CorrelationId of latest ResourceMove operation attempted"
        },
        "startTimeUtc": {
          "type": "string",
          "description": "Start time in UTC of latest ResourceMove operation attempted. ISO 8601 format."
        },
        "completionTimeUtc": {
          "type": "string",
          "description": "Completion time in UTC of latest ResourceMove operation attempted. ISO 8601 format."
        },
        "sourceResourcePath": {
          "type": "string",
          "description": "ARM resource path of source resource"
        },
        "targetResourcePath": {
          "type": "string",
          "description": "ARM resource path of target resource used in latest ResourceMove operation"
        }
      }
    },
    "ResourceMoveState": {
      "type": "string",
      "description": "Resource move state for backup vault",
      "enum": [
        "Unknown",
        "InProgress",
        "PrepareFailed",
        "CommitFailed",
        "Failed",
        "PrepareTimedout",
        "CommitTimedout",
        "CriticalFailure",
        "PartialSuccess",
        "MoveSucceeded"
      ],
      "x-ms-enum": {
        "name": "ResourceMoveState",
        "modelAsString": true
      }
    },
    "ResourcePropertiesObjectType": {
      "type": "string",
      "description": "Type of the specific object - used for deserializing",
      "enum": [
        "DefaultResourceProperties"
      ],
      "x-ms-enum": {
        "name": "ResourcePropertiesObjectType",
        "modelAsString": true
      }
    },
    "RestorableTimeRange": {
      "type": "object",
      "properties": {
        "startTime": {
          "type": "string",
          "description": "Start time for the available restore range"
        },
        "endTime": {
          "type": "string",
          "description": "End time for the available restore range"
        },
        "objectType": {
          "type": "string"
        }
      },
      "required": [
        "startTime",
        "endTime"
      ]
    },
    "RestoreFilesTargetInfo": {
      "type": "object",
      "description": "Class encapsulating restore as files target parameters",
      "properties": {
        "targetDetails": {
          "$ref": "#/definitions/TargetDetails",
          "description": "Destination of RestoreAsFiles operation, when destination is not a datasource"
        }
      },
      "required": [
        "targetDetails"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/RestoreTargetInfoBase"
        }
      ],
      "x-ms-discriminator-value": "RestoreFilesTargetInfo"
    },
    "RestoreJobRecoveryPointDetails": {
      "type": "object",
      "properties": {
        "recoveryPointID": {
          "type": "string"
        },
        "recoveryPointTime": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "RestoreSourceDataStoreType": {
      "type": "string",
      "description": "Gets or sets the type of the source data store.",
      "enum": [
        "OperationalStore",
        "VaultStore",
        "ArchiveStore"
      ],
      "x-ms-enum": {
        "name": "RestoreSourceDataStoreType",
        "modelAsString": true
      }
    },
    "RestoreTargetInfo": {
      "type": "object",
      "description": "Class encapsulating restore target parameters",
      "properties": {
        "datasourceInfo": {
          "$ref": "#/definitions/Datasource",
          "description": "Information of target DS"
        },
        "datasourceSetInfo": {
          "$ref": "#/definitions/DatasourceSet",
          "description": "Information of target DS Set"
        },
        "datasourceAuthCredentials": {
          "$ref": "#/definitions/AuthCredentials",
          "description": "Credentials to use to authenticate with data source provider."
        }
      },
      "required": [
        "datasourceInfo"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/RestoreTargetInfoBase"
        }
      ],
      "x-ms-discriminator-value": "RestoreTargetInfo"
    },
    "RestoreTargetInfoBase": {
      "type": "object",
      "description": "Base class common to RestoreTargetInfo and RestoreFilesTargetInfo",
      "properties": {
        "objectType": {
          "type": "string",
          "description": "Discriminator property for RestoreTargetInfoBase."
        },
        "recoveryOption": {
          "$ref": "#/definitions/RecoveryOption",
          "description": "Recovery Option"
        },
        "restoreLocation": {
          "type": "string",
          "description": "Target Restore region"
        }
      },
      "discriminator": "objectType",
      "required": [
        "objectType",
        "recoveryOption"
      ]
    },
    "RestoreTargetLocationType": {
      "type": "string",
      "description": "Denotes the target location where the data will be restored,\nstring value for the enum {Microsoft.Internal.AzureBackup.DataProtection.Common.Interface.RestoreTargetLocationType}",
      "enum": [
        "Invalid",
        "AzureBlobs",
        "AzureFiles"
      ],
      "x-ms-enum": {
        "name": "RestoreTargetLocationType",
        "modelAsString": true
      }
    },
    "RetentionTag": {
      "type": "object",
      "description": "Retention tag",
      "properties": {
        "eTag": {
          "type": "string",
          "description": "Retention Tag version.",
          "readOnly": true
        },
        "id": {
          "type": "string",
          "description": "Retention Tag version.",
          "readOnly": true
        },
        "tagName": {
          "type": "string",
          "description": "Retention Tag Name to relate it to retention rule."
        }
      },
      "required": [
        "tagName"
      ]
    },
    "ScheduleBasedBackupCriteria": {
      "type": "object",
      "description": "Schedule based backup criteria",
      "properties": {
        "absoluteCriteria": {
          "type": "array",
          "description": "it contains absolute values like \"AllBackup\" / \"FirstOfDay\" / \"FirstOfWeek\" / \"FirstOfMonth\"\nand should be part of AbsoluteMarker enum",
          "items": {
            "$ref": "#/definitions/AbsoluteMarker"
          }
        },
        "daysOfMonth": {
          "type": "array",
          "description": "This is day of the month from 1 to 28 other wise last of month",
          "items": {
            "$ref": "#/definitions/Day"
          },
          "x-ms-identifiers": []
        },
        "daysOfTheWeek": {
          "type": "array",
          "description": "It should be Sunday/Monday/T..../Saturday",
          "items": {
            "$ref": "#/definitions/DayOfWeek"
          }
        },
        "monthsOfYear": {
          "type": "array",
          "description": "It should be January/February/....../December",
          "items": {
            "$ref": "#/definitions/Month"
          }
        },
        "scheduleTimes": {
          "type": "array",
          "description": "List of schedule times for backup",
          "items": {
            "type": "string",
            "format": "date-time"
          }
        },
        "weeksOfTheMonth": {
          "type": "array",
          "description": "It should be First/Second/Third/Fourth/Last",
          "items": {
            "$ref": "#/definitions/WeekNumber"
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/BackupCriteria"
        }
      ],
      "x-ms-discriminator-value": "ScheduleBasedBackupCriteria"
    },
    "ScheduleBasedTriggerContext": {
      "type": "object",
      "description": "Schedule based trigger context",
      "properties": {
        "schedule": {
          "$ref": "#/definitions/BackupSchedule",
          "description": "Schedule for this backup"
        },
        "taggingCriteria": {
          "type": "array",
          "description": "List of tags that can be applicable for given schedule.",
          "items": {
            "$ref": "#/definitions/TaggingCriteria"
          },
          "x-ms-identifiers": []
        }
      },
      "required": [
        "schedule",
        "taggingCriteria"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/TriggerContext"
        }
      ],
      "x-ms-discriminator-value": "ScheduleBasedTriggerContext"
    },
    "SecretStoreBasedAuthCredentials": {
      "type": "object",
      "description": "Secret store based authentication credentials.",
      "properties": {
        "secretStoreResource": {
          "$ref": "#/definitions/SecretStoreResource",
          "description": "Secret store resource"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/AuthCredentials"
        }
      ],
      "x-ms-discriminator-value": "SecretStoreBasedAuthCredentials"
    },
    "SecretStoreResource": {
      "type": "object",
      "description": "Class representing a secret store resource.",
      "properties": {
        "uri": {
          "type": "string",
          "description": "Uri to get to the resource"
        },
        "secretStoreType": {
          "$ref": "#/definitions/SecretStoreType",
          "description": "Gets or sets the type of secret store"
        },
        "value": {
          "type": "string",
          "description": "Gets or sets value stored in secret store resource"
        }
      },
      "required": [
        "secretStoreType"
      ]
    },
    "SecretStoreType": {
      "type": "string",
      "description": "Gets or sets the type of secret store",
      "enum": [
        "Invalid",
        "AzureKeyVault"
      ],
      "x-ms-enum": {
        "name": "SecretStoreType",
        "modelAsString": true
      }
    },
    "SecureScoreLevel": {
      "type": "string",
      "description": "Secure Score of Backup Vault",
      "enum": [
        "None",
        "Minimum",
        "Adequate",
        "Maximum",
        "NotSupported"
      ],
      "x-ms-enum": {
        "name": "SecureScoreLevel",
        "modelAsString": true
      }
    },
    "SecuritySettings": {
      "type": "object",
      "description": "Class containing security settings of vault",
      "properties": {
        "softDeleteSettings": {
          "$ref": "#/definitions/SoftDeleteSettings",
          "description": "Soft delete related settings"
        },
        "immutabilitySettings": {
          "$ref": "#/definitions/ImmutabilitySettings",
          "description": "Immutability Settings at vault level"
        }
      }
    },
    "SoftDeleteSettings": {
      "type": "object",
      "description": "Soft delete related settings",
      "properties": {
        "state": {
          "$ref": "#/definitions/SoftDeleteState",
          "description": "State of soft delete"
        },
        "retentionDurationInDays": {
          "type": "number",
          "format": "double",
          "description": "Soft delete retention duration"
        }
      }
    },
    "SoftDeleteState": {
      "type": "string",
      "description": "State of soft delete",
      "enum": [
        "Off",
        "On",
        "AlwaysOn"
      ],
      "x-ms-enum": {
        "name": "SoftDeleteState",
        "modelAsString": true,
        "values": [
          {
            "name": "Off",
            "value": "Off",
            "description": "Soft Delete is turned off for the BackupVault"
          },
          {
            "name": "On",
            "value": "On",
            "description": "Soft Delete is enabled for the BackupVault but can be turned off"
          },
          {
            "name": "AlwaysOn",
            "value": "AlwaysOn",
            "description": "Soft Delete is permanently enabled for the BackupVault and the setting cannot be changed"
          }
        ]
      }
    },
    "SourceDataStoreType": {
      "type": "string",
      "description": "Gets or sets the type of the source data store.",
      "enum": [
        "ArchiveStore",
        "SnapshotStore",
        "OperationalStore",
        "VaultStore"
      ],
      "x-ms-enum": {
        "name": "SourceDataStoreType",
        "modelAsString": true
      }
    },
    "SourceLifeCycle": {
      "type": "object",
      "description": "Source LifeCycle",
      "properties": {
        "deleteAfter": {
          "$ref": "#/definitions/DeleteOption",
          "description": "Delete Option"
        },
        "sourceDataStore": {
          "$ref": "#/definitions/DataStoreInfoBase",
          "description": "DataStoreInfo base"
        },
        "targetDataStoreCopySettings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TargetCopySetting"
          },
          "x-ms-identifiers": []
        }
      },
      "required": [
        "deleteAfter",
        "sourceDataStore"
      ]
    },
    "Status": {
      "type": "string",
      "description": "Specifies the protection status of the resource",
      "enum": [
        "ConfiguringProtection",
        "ConfiguringProtectionFailed",
        "ProtectionConfigured",
        "ProtectionStopped",
        "SoftDeleted",
        "SoftDeleting"
      ],
      "x-ms-enum": {
        "name": "Status",
        "modelAsString": true
      }
    },
    "StorageSetting": {
      "type": "object",
      "description": "Storage setting",
      "properties": {
        "datastoreType": {
          "$ref": "#/definitions/StorageSettingStoreTypes",
          "description": "Gets or sets the type of the datastore."
        },
        "type": {
          "$ref": "#/definitions/StorageSettingTypes",
          "description": "Gets or sets the type."
        }
      }
    },
    "StorageSettingStoreTypes": {
      "type": "string",
      "description": "Gets or sets the type of the datastore.",
      "enum": [
        "ArchiveStore",
        "OperationalStore",
        "VaultStore"
      ],
      "x-ms-enum": {
        "name": "StorageSettingStoreTypes",
        "modelAsString": true
      }
    },
    "StorageSettingTypes": {
      "type": "string",
      "description": "Gets or sets the type.",
      "enum": [
        "GeoRedundant",
        "LocallyRedundant",
        "ZoneRedundant"
      ],
      "x-ms-enum": {
        "name": "StorageSettingTypes",
        "modelAsString": true
      }
    },
    "SupportedFeature": {
      "type": "object",
      "description": "Elements class for feature request",
      "properties": {
        "featureName": {
          "type": "string",
          "description": "support feature type."
        },
        "supportStatus": {
          "$ref": "#/definitions/FeatureSupportStatus",
          "description": "feature support status"
        },
        "exposureControlledFeatures": {
          "type": "array",
          "description": "support feature type.",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "SyncBackupInstanceRequest": {
      "type": "object",
      "description": "Sync BackupInstance Request",
      "properties": {
        "syncType": {
          "$ref": "#/definitions/SyncType",
          "description": "Field indicating sync type e.g. to sync only in case of failure or in all cases"
        }
      }
    },
    "SyncType": {
      "type": "string",
      "description": "Field indicating sync type e.g. to sync only in case of failure or in all cases",
      "enum": [
        "Default",
        "ForceResync"
      ],
      "x-ms-enum": {
        "name": "SyncType",
        "modelAsString": true
      }
    },
    "TaggingCriteria": {
      "type": "object",
      "description": "Tagging criteria",
      "properties": {
        "criteria": {
          "type": "array",
          "description": "Criteria which decides whether the tag can be applied to a triggered backup.",
          "items": {
            "$ref": "#/definitions/BackupCriteria"
          },
          "x-ms-identifiers": []
        },
        "isDefault": {
          "type": "boolean",
          "description": "Specifies if tag is default."
        },
        "taggingPriority": {
          "type": "integer",
          "format": "int64",
          "description": "Retention Tag priority."
        },
        "tagInfo": {
          "$ref": "#/definitions/RetentionTag",
          "description": "Retention tag information"
        }
      },
      "required": [
        "isDefault",
        "taggingPriority",
        "tagInfo"
      ]
    },
    "TargetCopySetting": {
      "type": "object",
      "description": "Target copy settings",
      "properties": {
        "copyAfter": {
          "$ref": "#/definitions/CopyOption",
          "description": "It can be CustomCopyOption or ImmediateCopyOption."
        },
        "dataStore": {
          "$ref": "#/definitions/DataStoreInfoBase",
          "description": "Info of target datastore"
        }
      },
      "required": [
        "copyAfter",
        "dataStore"
      ]
    },
    "TargetDetails": {
      "type": "object",
      "description": "Class encapsulating target details, used where the destination is not a datasource",
      "properties": {
        "filePrefix": {
          "type": "string",
          "description": "Restore operation may create multiple files inside location pointed by Url\nBelow will be the common prefix for all of them"
        },
        "restoreTargetLocationType": {
          "$ref": "#/definitions/RestoreTargetLocationType",
          "description": "Denotes the target location where the data will be restored,\nstring value for the enum {Microsoft.Internal.AzureBackup.DataProtection.Common.Interface.RestoreTargetLocationType}"
        },
        "url": {
          "type": "string",
          "description": "Url denoting the restore destination. It can point to container / file share etc"
        },
        "targetResourceArmId": {
          "type": "string",
          "description": "Full ARM Id denoting the restore destination. It is the ARM Id pointing to container / file share\nThis is optional if the target subscription can be identified with the URL field. If not\nthen this is needed if CrossSubscriptionRestore field of BackupVault is in any of the disabled states"
        }
      },
      "required": [
        "filePrefix",
        "restoreTargetLocationType",
        "url"
      ]
    },
    "TriggerBackupRequest": {
      "type": "object",
      "description": "Trigger backup request",
      "properties": {
        "backupRuleOptions": {
          "$ref": "#/definitions/AdHocBackupRuleOptions",
          "description": "Name for the Rule of the Policy which needs to be applied for this backup"
        }
      },
      "required": [
        "backupRuleOptions"
      ]
    },
    "TriggerContext": {
      "type": "object",
      "description": "Trigger context",
      "properties": {
        "objectType": {
          "type": "string",
          "description": "Discriminator property for TriggerContext."
        }
      },
      "discriminator": "objectType",
      "required": [
        "objectType"
      ]
    },
    "UnlockDeleteRequest": {
      "type": "object",
      "description": "Request body of unlock delete API.",
      "properties": {
        "resourceGuardOperationRequests": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "resourceToBeDeleted": {
          "type": "string"
        }
      }
    },
    "UnlockDeleteResponse": {
      "type": "object",
      "description": "Response of Unlock Delete API.",
      "properties": {
        "unlockDeleteExpiryTime": {
          "type": "string",
          "description": "This is the time when unlock delete privileges will get expired."
        }
      }
    },
    "UserFacingError": {
      "type": "object",
      "description": "Error object used by layers that have access to localized content, and propagate that to user",
      "properties": {
        "code": {
          "type": "string",
          "description": "Unique code for this error"
        },
        "details": {
          "type": "array",
          "description": "Additional related Errors",
          "items": {
            "$ref": "#/definitions/UserFacingError"
          },
          "x-ms-identifiers": []
        },
        "innerError": {
          "$ref": "#/definitions/InnerError",
          "description": "Inner Error"
        },
        "isRetryable": {
          "type": "boolean",
          "description": "Whether the operation will be retryable or not"
        },
        "isUserError": {
          "type": "boolean",
          "description": "Whether the operation is due to a user error or service error"
        },
        "properties": {
          "type": "object",
          "description": "Any key value pairs that can be injected inside error object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "message": {
          "type": "string"
        },
        "recommendedAction": {
          "type": "array",
          "description": "RecommendedAction � localized.",
          "items": {
            "type": "string"
          }
        },
        "target": {
          "type": "string",
          "description": "Target of the error."
        }
      }
    },
    "UserFacingWarningDetail": {
      "type": "object",
      "description": "Warning object used by layers that have access to localized content, and propagate that to user",
      "properties": {
        "resourceName": {
          "type": "string",
          "description": "Name of resource for which warning is raised."
        },
        "warning": {
          "$ref": "#/definitions/UserFacingError",
          "description": "Error details for the warning."
        }
      },
      "required": [
        "warning"
      ]
    },
    "ValidateCrossRegionRestoreRequestObject": {
      "type": "object",
      "description": "Cross Region Restore Request Object",
      "properties": {
        "restoreRequestObject": {
          "$ref": "#/definitions/AzureBackupRestoreRequest",
          "description": "Gets or sets the restore request object."
        },
        "crossRegionRestoreDetails": {
          "$ref": "#/definitions/CrossRegionRestoreDetails",
          "description": "Cross region restore details."
        }
      },
      "required": [
        "restoreRequestObject",
        "crossRegionRestoreDetails"
      ]
    },
    "ValidateForBackupRequest": {
      "type": "object",
      "description": "Validate for backup request",
      "properties": {
        "backupInstance": {
          "$ref": "#/definitions/BackupInstance",
          "description": "Backup Instance"
        }
      },
      "required": [
        "backupInstance"
      ]
    },
    "ValidateRestoreRequestObject": {
      "type": "object",
      "description": "Validate restore request object",
      "properties": {
        "restoreRequestObject": {
          "$ref": "#/definitions/AzureBackupRestoreRequest",
          "description": "Gets or sets the restore request object."
        }
      },
      "required": [
        "restoreRequestObject"
      ]
    },
    "ValidationType": {
      "type": "string",
      "description": "Specifies the type of validation. In case of DeepValidation, all validations from /validateForBackup API will run again.",
      "enum": [
        "ShallowValidation",
        "DeepValidation"
      ],
      "x-ms-enum": {
        "name": "ValidationType",
        "modelAsString": true
      }
    },
    "Versions": {
      "type": "string",
      "description": "The available API versions.",
      "enum": [
        "2023-11-01"
      ],
      "x-ms-enum": {
        "name": "Versions",
        "modelAsString": true,
        "values": [
          {
            "name": "v2023_11_01",
            "value": "2023-11-01",
            "description": "The 2023-11-01 API version."
          }
        ]
      }
    },
    "WeekNumber": {
      "type": "string",
      "enum": [
        "First",
        "Fourth",
        "Last",
        "Second",
        "Third"
      ],
      "x-ms-enum": {
        "name": "WeekNumber",
        "modelAsString": true
      }
    }
  },
  "parameters": {
    "Azure.Core.Foundations.ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "description": "The API version to use for this operation.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "x-ms-parameter-location": "method",
      "x-ms-client-name": "apiVersion"
    }
  }
}
