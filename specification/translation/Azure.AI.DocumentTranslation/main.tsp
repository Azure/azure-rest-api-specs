import "@typespec/rest";
import "@typespec/versioning";
import "@azure-tools/typespec-azure-core";

using TypeSpec.Http;
using TypeSpec.Rest;
using TypeSpec.Versioning;
using Azure.Core;

@useAuth(ApiKeyAuth<ApiKeyLocation.header, "Ocp-Apim-Subscription-Key">)
@service({
  title: "Azure.AI.DocumentTranslation",
})
@versioned(DocumentTranslation.Versions)
namespace DocumentTranslation;

/** The Azure.AI.DocumentTranslation versions. */
enum Versions {
  /** The 2023-11-01-preview version of the Azure.AI.DocumentTranslation. */
  @useDependency(Azure.Core.Versions.v1_0_Preview_1)
  `2023-11-01-preview`,
}

alias CommonParameters = {
  /** Mandatory API version parameter */
  @query("api-version")
  apiVersion: string;

  /** The value is the region of the translator resource. This value is optional if when custom endpoint is used.
   * The value can be found in Azure portal. Translator resource => Resource Management => Keys and Endpoint => Location/Region  */
  @header("Ocp-Apim-Subscription-Region")
  subscriptionRegion?: string;

  /** A client-generated GUID to uniquely identify the request. */
  @header("X-ClientTraceId")
  clientTraceId?: string;

  /** Etag comparison, if it is provided and its value matches the response then request will return Status => 304 (Not modified). */
  @header("If-None-Match")
  ifNoneMatch?: string;
};

alias CommonResultHeaders = {
  /** Value generated by the service to identify the request. It is used for troubleshooting purposes. */
  @header("X-RequestId")
  requestId: string;

  /** This will have value of response hash, customer can provide this value for any consecutive request as “If-None-Match” header. To make sure get response if the value is changed otherwise 304. */
  @header("ETag")
  eTag: string;
};

/** Representation of the Error Response from Translator Service. */
@error
model ErrorResponse {
  ...CommonResultHeaders;

  /** Error details. */
  error: ErrorDetails;
}

/** Error details as returned by Translator Service. */
model ErrorDetails {
  /** Enums containing high-level error codes. */
  code: string;

  /** Human readable error description. */
  message: string;
}

/** Request parameters for the Document Translate. */
model DocumentTranslateParameters {
  ...CommonParameters;

  /** Specifies the language of the input document. If the from parameter isn't specified, 
    automatic language detection is applied to determine the source language. */
  @query("SourceLanguage")
  sourceLanguage?: string;

  /** Specifies the language of the output document. The target language must be one of the supported languages included 
    in the translation scope. For example, use targetLanguage=de to translate to German. */
  @query("TargetLanguage")
  targetLanguage: string;

  /** A string specifying the category (domain) of the translation. This parameter is used to get translations 
    from a customized system built with Custom Translator. Add the Category ID from your Custom Translator 
    project details to this parameter to use your deployed customized system. Default value is: general. */
  @query("Category")
  category?: string = "general";

  /** Specifies that the service is allowed to fall back to a general system when a custom system doesn't exist. 
    Possible values are: true (default) or false.
    allowFallback=false specifies that the translation should only use systems trained for the category specified 
    by the request. If a translation for language X to language Y requires chaining through a pivot language E, 
    then all the systems in the chain (X → E and E → Y) will need to be custom and have the same category. 
    If no system is found with the specific category, the request will return a 400 status code. allowFallback=true 
    specifies that the service is allowed to fall back to a general system when a custom system doesn't exist. */
  @query("AllowFallback")
  allowFallback?: boolean;

  /** Content Type as multipart/form-data */
  @header contentType: "multipart/form-data";
}

/** Document Translate Request Body. */
model DocumentTranslateRequest {
  /** Document to be translated in the form */
  document: bytes;

  /** Glossary / translation memory will be used during translation in the form. */
  glossary?: bytes;
}

/** Successful request and the document is translated. The translated document is returned in the body. */
model DocumentTranslateResult {
  ...CommonResultHeaders;

  /** response conent type */
  @header
  contentType: "application/octet-stream";

  /** Request response is a document */
  @body
  document: bytes;
}

/** Defines Document Translation custom Operation */
op CustomOperation<TBody, TParams, TResponse, TError = ErrorResponse>(
  ...TParams,

  /** Defines the content of the request */
  #suppress "@azure-tools/typespec-azure-core/request-body-problem"
  @body
  requestBody: TBody,
): TResponse | TError;

/** Use this API to translate a single document.
 * All supported document formats can be obtained with formats API.
 * Single Glossary / Translation memory can be included in the request and applied by the service when the document is translated.
 */
#suppress "@azure-tools/typespec-azure-core/use-standard-operations"
#suppress "@azure-tools/typespec-azure-core/byos"
@post
@route("document:translate")
op singleTranslateDocument is CustomOperation<
  DocumentTranslateRequest,
  DocumentTranslateParameters,
  DocumentTranslateResult,
  ErrorResponse
>;
