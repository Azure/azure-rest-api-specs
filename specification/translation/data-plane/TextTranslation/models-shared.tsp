import "@typespec/rest";
import "@azure-tools/typespec-azure-core";

using TypeSpec.Http;
using TypeSpec.Rest;
using TypeSpec.Versioning;
using Azure.Core;

namespace TextTranslation;

alias CommonParameters = {
  @header("X-ClientTraceId")
  @doc("""
    A client-generated GUID to uniquely identify the request.
    """)
  clientTraceId?: string;
};

@doc("Element containing the text for translation.")
model InputTextItem {
  @doc("Text to translate.")
  text: string;
}

@doc("Element containing the text for translation.")
@added(APIVersion.v2025_05_01_preview)
model TranslateBody {
  @doc("Text to translate.")
  text: string;

  @added(APIVersion.v2025_05_01_preview)
  @doc("""
    Specifies the script of the input text.
    """)
  script?: string;

  @added(APIVersion.v2025_05_01_preview)
  @doc("""
    Specifies the language of the input text. Find which languages are available to translate by 
    looking up supported languages using the translation scope. If the language parameter isn't 
    specified, automatic language detection is applied to determine the source language.
    
    You must use the language parameter rather than autodetection when using the dynamic dictionary feature. 
    Note: the dynamic dictionary feature is case-sensitive.
    """)
  language?: string;

  @added(APIVersion.v2025_05_01_preview)
  @doc("""
    Defines whether the text being translated is plain text or HTML text. Any HTML needs to be a well-formed, 
    complete element. Possible values are: plain (default) or html.
    """)
  textType?: TextType = "Plain";

  @added(APIVersion.v2025_05_01_preview)
  @doc("""
    Translation target parameters.
    """)
  targets: TranslateTarget[];
}

alias CommonResultHeaders = {
  @header("X-RequestId")
  @doc("""
    Value generated by the service to identify the request. It is used for troubleshooting purposes.
    """)
  requestId: string;
};

@doc("Representation of the Error Response from Translator Service.")
@error
model ErrorResponse {
  ...CommonResultHeaders;

  @doc("Error details.")
  error: ErrorDetails;
}

@doc("Error details as returned by Translator Service.")
model ErrorDetails {
  @doc("Number identifier of the error.")
  code: int32;

  @doc("Human readable error description.")
  message: string;
}
