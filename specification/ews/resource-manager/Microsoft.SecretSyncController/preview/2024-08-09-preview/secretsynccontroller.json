{
  "swagger": "2.0",
  "info": {
    "title": "Microsoft.SecretSyncController",
    "version": "2024-08-09-preview",
    "description": "Microsoft.SecretSyncController resource provider.",
    "x-typespec-generated": [
      {
        "emitter": "@azure-tools/typespec-autorest"
      }
    ]
  },
  "schemes": [
    "https"
  ],
  "host": "management.azure.com",
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "description": "Azure Active Directory OAuth2 Flow.",
      "flow": "implicit",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "tags": [
    {
      "name": "Operations"
    },
    {
      "name": "AzureKeyVaultSecretProviderClasses"
    },
    {
      "name": "SecretSyncs"
    }
  ],
  "paths": {
    "/providers/Microsoft.SecretSyncController/operations": {
      "get": {
        "operationId": "Operations_List",
        "tags": [
          "Operations"
        ],
        "description": "List the operations for the provider",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/OperationListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Operations_List": {
            "$ref": "./examples/Operations_List_MaximumSet_Gen.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.SecretSyncController/azureKeyVaultSecretProviderClasses": {
      "get": {
        "operationId": "AzureKeyVaultSecretProviderClasses_ListBySubscription",
        "tags": [
          "AzureKeyVaultSecretProviderClasses"
        ],
        "description": "Lists the AzureKeyVaultSecretProviderClass instances within an Azure subscription.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/AzureKeyVaultSecretProviderClassListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "AzureKeyVaultSecretProviderClasses_ListBySubscription": {
            "$ref": "./examples/AzureKeyVaultSecretProviderClasses_ListBySubscription_MaximumSet_Gen.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.SecretSyncController/secretSyncs": {
      "get": {
        "operationId": "SecretSyncs_ListBySubscription",
        "tags": [
          "SecretSyncs"
        ],
        "description": "Lists the SecretSync instances within an Azure subscription.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/SecretSyncListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "SecretSyncs_ListBySubscription": {
            "$ref": "./examples/SecretSyncs_ListBySubscription_MaximumSet_Gen.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.SecretSyncController/azureKeyVaultSecretProviderClasses": {
      "get": {
        "operationId": "AzureKeyVaultSecretProviderClasses_ListByResourceGroup",
        "tags": [
          "AzureKeyVaultSecretProviderClasses"
        ],
        "description": "Lists the AzureKeyVaultSecretProviderClass instances within a resource group.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/AzureKeyVaultSecretProviderClassListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "AzureKeyVaultSecretProviderClasses_ListByResourceGroup": {
            "$ref": "./examples/AzureKeyVaultSecretProviderClasses_ListByResourceGroup_MaximumSet_Gen.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.SecretSyncController/azureKeyVaultSecretProviderClasses/{azureKeyVaultSecretProviderClassName}": {
      "get": {
        "operationId": "AzureKeyVaultSecretProviderClasses_Get",
        "tags": [
          "AzureKeyVaultSecretProviderClasses"
        ],
        "description": "Gets the properties of an AzureKeyVaultSecretProviderClass instance.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "azureKeyVaultSecretProviderClassName",
            "in": "path",
            "description": "The name of the AzureKeyVaultSecretProviderClass",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9-]{3,24}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/AzureKeyVaultSecretProviderClass"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "AzureKeyVaultSecretProviderClasses_Get": {
            "$ref": "./examples/AzureKeyVaultSecretProviderClasses_Get_MaximumSet_Gen.json"
          }
        }
      },
      "put": {
        "operationId": "AzureKeyVaultSecretProviderClasses_CreateOrUpdate",
        "tags": [
          "AzureKeyVaultSecretProviderClasses"
        ],
        "description": "Creates, or updates, an AzureKeyVaultSecretProviderClass instance.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "azureKeyVaultSecretProviderClassName",
            "in": "path",
            "description": "The name of the AzureKeyVaultSecretProviderClass",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9-]{3,24}$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AzureKeyVaultSecretProviderClass"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'AzureKeyVaultSecretProviderClass' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/AzureKeyVaultSecretProviderClass"
            }
          },
          "201": {
            "description": "Resource 'AzureKeyVaultSecretProviderClass' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/AzureKeyVaultSecretProviderClass"
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "AzureKeyVaultSecretProviderClasses_CreateOrUpdate": {
            "$ref": "./examples/AzureKeyVaultSecretProviderClasses_CreateOrUpdate_MaximumSet_Gen.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "AzureKeyVaultSecretProviderClasses_Update",
        "tags": [
          "AzureKeyVaultSecretProviderClasses"
        ],
        "description": "Updates an AzureKeyVaultSecretProviderClass instance.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "azureKeyVaultSecretProviderClassName",
            "in": "path",
            "description": "The name of the AzureKeyVaultSecretProviderClass",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9-]{3,24}$"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "The resource properties to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AzureKeyVaultSecretProviderClassUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/AzureKeyVaultSecretProviderClass"
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "AzureKeyVaultSecretProviderClasses_Update": {
            "$ref": "./examples/AzureKeyVaultSecretProviderClasses_Update_MaximumSet_Gen.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "AzureKeyVaultSecretProviderClasses_Delete",
        "tags": [
          "AzureKeyVaultSecretProviderClasses"
        ],
        "description": "Deletes an AzureKeyVaultSecretProviderClass instance.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "azureKeyVaultSecretProviderClassName",
            "in": "path",
            "description": "The name of the AzureKeyVaultSecretProviderClass",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9-]{3,24}$"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "AzureKeyVaultSecretProviderClasses_Delete": {
            "$ref": "./examples/AzureKeyVaultSecretProviderClasses_Delete_MaximumSet_Gen.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.SecretSyncController/secretSyncs": {
      "get": {
        "operationId": "SecretSyncs_ListByResourceGroup",
        "tags": [
          "SecretSyncs"
        ],
        "description": "Lists the SecretSync instances within a resource group.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/SecretSyncListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "SecretSyncs_ListByResourceGroup": {
            "$ref": "./examples/SecretSyncs_ListByResourceGroup_MaximumSet_Gen.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.SecretSyncController/secretSyncs/{secretSyncName}": {
      "get": {
        "operationId": "SecretSyncs_Get",
        "tags": [
          "SecretSyncs"
        ],
        "description": "Gets the properties of a SecretSync instance.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "secretSyncName",
            "in": "path",
            "description": "The name of the SecretSync",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9-]{3,24}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/SecretSync"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "SecretSyncs_Get": {
            "$ref": "./examples/SecretSyncs_Get_MaximumSet_Gen.json"
          }
        }
      },
      "put": {
        "operationId": "SecretSyncs_CreateOrUpdate",
        "tags": [
          "SecretSyncs"
        ],
        "description": "Creates new or updates a SecretSync instance.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "secretSyncName",
            "in": "path",
            "description": "The name of the SecretSync",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9-]{3,24}$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SecretSync"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'SecretSync' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/SecretSync"
            }
          },
          "201": {
            "description": "Resource 'SecretSync' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/SecretSync"
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "SecretSyncs_CreateOrUpdate": {
            "$ref": "./examples/SecretSyncs_CreateOrUpdate_MaximumSet_Gen.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "SecretSyncs_Update",
        "tags": [
          "SecretSyncs"
        ],
        "description": "Updates a SecretSync instance.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "secretSyncName",
            "in": "path",
            "description": "The name of the SecretSync",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9-]{3,24}$"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "The resource properties to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SecretSyncUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/SecretSync"
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "SecretSyncs_Update": {
            "$ref": "./examples/SecretSyncs_Update_MaximumSet_Gen.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "SecretSyncs_Delete",
        "tags": [
          "SecretSyncs"
        ],
        "description": "Deletes a SecretSync instance.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "secretSyncName",
            "in": "path",
            "description": "The name of the SecretSync",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9-]{3,24}$"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "SecretSyncs_Delete": {
            "$ref": "./examples/SecretSyncs_Delete_MaximumSet_Gen.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    }
  },
  "definitions": {
    "Azure.ResourceManager.CommonTypes.ExtendedLocation": {
      "type": "object",
      "description": "The complex type of the extended location.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the extended location."
        },
        "type": {
          "$ref": "#/definitions/Azure.ResourceManager.CommonTypes.ExtendedLocationType",
          "description": "The type of the extended location."
        }
      },
      "required": [
        "name",
        "type"
      ]
    },
    "Azure.ResourceManager.CommonTypes.ExtendedLocationType": {
      "type": "string",
      "description": "The supported ExtendedLocation types.",
      "enum": [
        "EdgeZone",
        "CustomLocation"
      ],
      "x-ms-enum": {
        "name": "ExtendedLocationType",
        "modelAsString": true,
        "values": [
          {
            "name": "EdgeZone",
            "value": "EdgeZone",
            "description": "Azure Edge Zones location type"
          },
          {
            "name": "CustomLocation",
            "value": "CustomLocation",
            "description": "Azure Custom Locations type"
          }
        ]
      }
    },
    "AzureKeyVaultObjectProperties": {
      "type": "object",
      "description": "The properties of an object to synchronize from an Azure Key Vault.",
      "properties": {
        "objectName": {
          "type": "string",
          "description": "The name of the object in Azure Key Vault."
        },
        "objectType": {
          "$ref": "#/definitions/AzureKeyVaultObjectType",
          "description": "The type of the object in Azure Key Vault."
        },
        "versionsToSync": {
          "type": "integer",
          "format": "int32",
          "description": "The number of versions of the object to synchronize."
        }
      },
      "required": [
        "objectName",
        "objectType"
      ]
    },
    "AzureKeyVaultObjectType": {
      "type": "string",
      "description": "Enumeration of types of object that can be synchronized from an Azure Key Vault.",
      "enum": [
        "Secret",
        "Key",
        "Cert"
      ],
      "x-ms-enum": {
        "name": "AzureKeyVaultObjectType",
        "modelAsString": true,
        "values": [
          {
            "name": "Secret",
            "value": "Secret",
            "description": "Azure Key Vault secret"
          },
          {
            "name": "Key",
            "value": "Key",
            "description": "Azure Key Vault key"
          },
          {
            "name": "Cert",
            "value": "Cert",
            "description": "Azure Key Vault certificate"
          }
        ]
      }
    },
    "AzureKeyVaultSecretProviderClass": {
      "type": "object",
      "description": "The AzureKeyVaultSecretProviderClass resource.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/AzureKeyVaultSecretProviderClassProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true
        },
        "extendedLocation": {
          "$ref": "#/definitions/Azure.ResourceManager.CommonTypes.ExtendedLocation",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "AzureKeyVaultSecretProviderClassListResult": {
      "type": "object",
      "description": "The response of a AzureKeyVaultSecretProviderClass list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The AzureKeyVaultSecretProviderClass items on this page",
          "items": {
            "$ref": "#/definitions/AzureKeyVaultSecretProviderClass"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "AzureKeyVaultSecretProviderClassProperties": {
      "type": "object",
      "description": "The properties of the AzureKeyVaultSecretProviderClass.",
      "properties": {
        "keyvaultName": {
          "type": "string",
          "description": "The name of the Azure Key Vault to sync secrets from."
        },
        "clientId": {
          "type": "string",
          "description": "The user assigned managed identity client ID that should be used to access the Azure Key Vault.",
          "pattern": "^[0-9a-fA-F]{8}-([0-9a-fA-F]{4}-){3}[0-9a-fA-F]{12}$"
        },
        "tenantId": {
          "type": "string",
          "description": "The Azure Active Directory tenant ID that should be used for authenticating requests to the Azure Key Vault.",
          "pattern": "^[0-9a-fA-F]{8}-([0-9a-fA-F]{4}-){3}[0-9a-fA-F]{12}$"
        },
        "objects": {
          "type": "array",
          "description": "List of objects to synchronize from the specified Azure Key Vault.",
          "items": {
            "$ref": "#/definitions/AzureKeyVaultObjectProperties"
          },
          "x-ms-identifiers": []
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "Provisioning state of the AzureKeyVaultSecretProviderClass instance.",
          "readOnly": true
        }
      },
      "required": [
        "keyvaultName",
        "clientId",
        "tenantId"
      ]
    },
    "AzureKeyVaultSecretProviderClassUpdate": {
      "type": "object",
      "description": "The type used for update operations of the AzureKeyVaultSecretProviderClass.",
      "properties": {
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "$ref": "#/definitions/AzureKeyVaultSecretProviderClassUpdateProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true
        }
      }
    },
    "AzureKeyVaultSecretProviderClassUpdateProperties": {
      "type": "object",
      "description": "The updatable properties of the AzureKeyVaultSecretProviderClass.",
      "properties": {
        "keyvaultName": {
          "type": "string",
          "description": "The name of the Azure Key Vault to sync secrets from."
        },
        "clientId": {
          "type": "string",
          "description": "The user assigned managed identity client ID that should be used to access the Azure Key Vault.",
          "pattern": "^[0-9a-fA-F]{8}-([0-9a-fA-F]{4}-){3}[0-9a-fA-F]{12}$"
        },
        "tenantId": {
          "type": "string",
          "description": "The Azure Active Directory tenant ID that should be used for authenticating requests to the Azure Key Vault.",
          "pattern": "^[0-9a-fA-F]{8}-([0-9a-fA-F]{4}-){3}[0-9a-fA-F]{12}$"
        },
        "objects": {
          "type": "array",
          "description": "List of objects to synchronize from the specified Azure Key Vault.",
          "items": {
            "$ref": "#/definitions/AzureKeyVaultObjectProperties"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "KubernetesSecretObjectMapping": {
      "type": "object",
      "description": "Properties defining the mapping between a cloud secret store object and a Kubernetes Secret.",
      "properties": {
        "sourcePath": {
          "type": "string",
          "description": "sourcePath is the data source value of the secret defined in the Secret Provider Class. This matches the path of a file in the MountResponse returned from the provider.",
          "minLength": 1,
          "maxLength": 253
        },
        "targetPath": {
          "type": "string",
          "description": "targetPath is the key in the Kubernetes secret's data field as described in the Kubernetes API reference: https://kubernetes.io/docs/reference/kubernetes-api/config-and-storage-resources/secret-v1/",
          "minLength": 1,
          "maxLength": 253
        }
      },
      "required": [
        "sourcePath",
        "targetPath"
      ]
    },
    "KubernetesSecretType": {
      "type": "string",
      "description": "Supported Kubernetes secret types.",
      "enum": [
        "Opaque",
        "kubernetes.io/tls"
      ],
      "x-ms-enum": {
        "name": "KubernetesSecretType",
        "modelAsString": true,
        "values": [
          {
            "name": "Opaque",
            "value": "Opaque",
            "description": "Opaque is the default secret type."
          },
          {
            "name": "Tls",
            "value": "kubernetes.io/tls",
            "description": "The kubernetes.io/tls secret type is for storing a certificate and its associated key that are typically used for TLS."
          }
        ]
      }
    },
    "ProvisioningState": {
      "type": "string",
      "description": "Provisioning state of the resource.",
      "enum": [
        "Succeeded",
        "Failed",
        "Canceled"
      ],
      "x-ms-enum": {
        "name": "ProvisioningState",
        "modelAsString": true,
        "values": [
          {
            "name": "Succeeded",
            "value": "Succeeded",
            "description": "Resource has been created."
          },
          {
            "name": "Failed",
            "value": "Failed",
            "description": "Resource creation failed."
          },
          {
            "name": "Canceled",
            "value": "Canceled",
            "description": "Resource creation was canceled."
          }
        ]
      },
      "readOnly": true
    },
    "SecretSync": {
      "type": "object",
      "description": "The SecretSync resource.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/SecretSyncProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true
        },
        "extendedLocation": {
          "$ref": "#/definitions/Azure.ResourceManager.CommonTypes.ExtendedLocation",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "SecretSyncCondition": {
      "type": "object",
      "description": "Condition contains details for one aspect of the current state of this SecretSync object.",
      "properties": {
        "lastTransitionTime": {
          "type": "string",
          "format": "date-time",
          "description": "lastTransitionTime is the last time the condition transitioned from one status to another. This should be when the underlying condition changed. If that is not known, then using the time when the API field changed is acceptable."
        },
        "message": {
          "type": "string",
          "description": "message is a human readable message indicating details about the transition. This may be an empty string."
        },
        "observedGeneration": {
          "type": "integer",
          "format": "int32",
          "description": "observedGeneration represents the .metadata.generation that the condition was set based upon. For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date with respect to the current state of the instance."
        },
        "reason": {
          "type": "string",
          "description": "reason contains a programmatic identifier indicating the reason for the condition's last transition. Producers of specific condition types may define expected values and meanings for this field, and whether the values are considered a guaranteed API. The value should be a CamelCase string. This field may not be empty."
        },
        "status": {
          "type": "string",
          "description": "status of the condition, one of True, False, Unknown."
        },
        "type": {
          "type": "string",
          "description": "type of condition in CamelCase or in foo.example.com/CamelCase. --- Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be useful (see .node.status.conditions), the ability to de-conflict is important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)"
        }
      },
      "required": [
        "message",
        "reason",
        "status",
        "type"
      ]
    },
    "SecretSyncListResult": {
      "type": "object",
      "description": "The response of a SecretSync list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The SecretSync items on this page",
          "items": {
            "$ref": "#/definitions/SecretSync"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "SecretSyncProperties": {
      "type": "object",
      "description": "The properties of the SecretSync instance.",
      "properties": {
        "secretProviderClassName": {
          "type": "string",
          "description": "The name of the matching secret provider class instance.",
          "minLength": 1,
          "maxLength": 253
        },
        "serviceAccountName": {
          "type": "string",
          "description": "The name of the Kubernetes service account used to access the cloud secret store.",
          "minLength": 1,
          "maxLength": 253
        },
        "kubernetesSecretType": {
          "$ref": "#/definitions/KubernetesSecretType",
          "description": "The type of Kubernetes secret to store the cloud secret store data as."
        },
        "forceSynchronization": {
          "type": "string",
          "description": "The ForceSynchronization field can be used to force a secret to synchronize. By changing the value in this field, a synchronization operation is triggered for this SecretSync instance.",
          "maxLength": 253,
          "pattern": "^[A-Za-z0-9]([-A-Za-z0-9]+([-._a-zA-Z0-9]?[A-Za-z0-9])*)?"
        },
        "objectSecretMapping": {
          "type": "array",
          "description": "List of mappings between objects in the cloud secret store and corresponding Kubernetes secrets.",
          "items": {
            "$ref": "#/definitions/KubernetesSecretObjectMapping"
          },
          "x-ms-identifiers": []
        },
        "status": {
          "$ref": "#/definitions/SecretSyncStatus",
          "description": "The status object contains the state of the secret synchronization process for this SecretSync instance.",
          "readOnly": true
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "Provisioning state of the SecretSync instance.",
          "readOnly": true
        }
      },
      "required": [
        "secretProviderClassName",
        "serviceAccountName",
        "kubernetesSecretType",
        "objectSecretMapping"
      ]
    },
    "SecretSyncStatus": {
      "type": "object",
      "description": "SecretSyncStatus defines the observed state of the secret synchronization process.",
      "properties": {
        "lastSuccessfulSyncTime": {
          "type": "string",
          "format": "date-time",
          "description": "LastSuccessfulSyncTime represents the last time the secret was retrieved from the Provider and updated."
        },
        "conditions": {
          "type": "array",
          "description": "Condition contains details for one aspect of the current state of this API Resource",
          "items": {
            "$ref": "#/definitions/SecretSyncCondition"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "SecretSyncUpdate": {
      "type": "object",
      "description": "The type used for update operations of the SecretSync.",
      "properties": {
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "$ref": "#/definitions/SecretSyncUpdateProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true
        }
      }
    },
    "SecretSyncUpdateProperties": {
      "type": "object",
      "description": "The updatable properties of the SecretSync.",
      "properties": {
        "secretProviderClassName": {
          "type": "string",
          "description": "The name of the matching secret provider class instance.",
          "minLength": 1,
          "maxLength": 253
        },
        "serviceAccountName": {
          "type": "string",
          "description": "The name of the Kubernetes service account used to access the cloud secret store.",
          "minLength": 1,
          "maxLength": 253
        },
        "kubernetesSecretType": {
          "$ref": "#/definitions/KubernetesSecretType",
          "description": "The type of Kubernetes secret to store the cloud secret store data as."
        },
        "forceSynchronization": {
          "type": "string",
          "description": "The ForceSynchronization field can be used to force a secret to synchronize. By changing the value in this field, a synchronization operation is triggered for this SecretSync instance.",
          "maxLength": 253,
          "pattern": "^[A-Za-z0-9]([-A-Za-z0-9]+([-._a-zA-Z0-9]?[A-Za-z0-9])*)?"
        },
        "objectSecretMapping": {
          "type": "array",
          "description": "List of mappings between objects in the cloud secret store and corresponding Kubernetes secrets.",
          "items": {
            "$ref": "#/definitions/KubernetesSecretObjectMapping"
          },
          "x-ms-identifiers": []
        }
      }
    }
  },
  "parameters": {}
}
