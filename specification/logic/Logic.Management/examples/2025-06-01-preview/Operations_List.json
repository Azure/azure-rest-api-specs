{
  "parameters": {
    "api-version": "2019-05-01"
  },
  "responses": {
    "200": {
      "body": {
        "value": [
          {
            "name": "Microsoft.Logic/operations/read",
            "display": {
              "description": "Gets the operation.",
              "operation": "Get Operation",
              "provider": "Microsoft Logic",
              "resource": "Operation"
            }
          },
          {
            "name": "Microsoft.Logic/register/action",
            "display": {
              "description": "Registers the Microsoft.Logic resource provider for a given subscription.",
              "operation": "Register Resource Provider",
              "provider": "Microsoft Logic",
              "resource": "Resource Provider"
            }
          },
          {
            "name": "Microsoft.Logic/locations/workflows/validate/action",
            "display": {
              "description": "Validates the workflow.",
              "operation": "Validate Workflow",
              "provider": "Microsoft Logic",
              "resource": "Workflow"
            }
          },
          {
            "name": "Microsoft.Logic/workflows/read",
            "display": {
              "description": "Reads the workflow.",
              "operation": "Get Workflow",
              "provider": "Microsoft Logic",
              "resource": "Workflow"
            }
          },
          {
            "name": "Microsoft.Logic/workflows/write",
            "display": {
              "description": "Creates or updates the workflow.",
              "operation": "Set Workflow",
              "provider": "Microsoft Logic",
              "resource": "Workflow"
            }
          },
          {
            "name": "Microsoft.Logic/workflows/delete",
            "display": {
              "description": "Deletes the workflow.",
              "operation": "Delete Workflow",
              "provider": "Microsoft Logic",
              "resource": "Workflow"
            }
          },
          {
            "name": "Microsoft.Logic/workflows/run/action",
            "display": {
              "description": "Starts a run of the workflow.",
              "operation": "Run Workflow",
              "provider": "Microsoft Logic",
              "resource": "Workflow"
            }
          },
          {
            "name": "Microsoft.Logic/workflows/disable/action",
            "display": {
              "description": "Disables the workflow.",
              "operation": "Disable Workflow",
              "provider": "Microsoft Logic",
              "resource": "Workflow"
            }
          },
          {
            "name": "Microsoft.Logic/workflows/enable/action",
            "display": {
              "description": "Enables the workflow.",
              "operation": "Enable Workflow",
              "provider": "Microsoft Logic",
              "resource": "Workflow"
            }
          },
          {
            "name": "Microsoft.Logic/workflows/suspend/action",
            "display": {
              "description": "Suspends the workflow.",
              "operation": "Suspend Workflow",
              "provider": "Microsoft Logic",
              "resource": "Workflow"
            }
          },
          {
            "name": "Microsoft.Logic/workflows/validate/action",
            "display": {
              "description": "Validates the workflow.",
              "operation": "Validate Workflow",
              "provider": "Microsoft Logic",
              "resource": "Workflow"
            }
          },
          {
            "name": "Microsoft.Logic/workflows/move/action",
            "display": {
              "description": "Moves Workflow from its existing subscription id, resource group, and/or name to a different subscription id, resource group, and/or name.",
              "operation": "Move Workflow",
              "provider": "Microsoft Logic",
              "resource": "Workflow"
            }
          },
          {
            "name": "Microsoft.Logic/workflows/listSwagger/action",
            "display": {
              "description": "Gets the workflow swagger definitions.",
              "operation": "Get workflow swagger",
              "provider": "Microsoft Logic",
              "resource": "Workflow"
            }
          },
          {
            "name": "Microsoft.Logic/workflows/versions/read",
            "display": {
              "description": "Reads the workflow version.",
              "operation": "Get Workflow Version",
              "provider": "Microsoft Logic",
              "resource": "Workflow Version"
            }
          },
          {
            "name": "Microsoft.Logic/workflows/versions/triggers/listCallbackUrl/action",
            "display": {
              "description": "Gets the callback URL for trigger.",
              "operation": "List Trigger Callback URL",
              "provider": "Microsoft Logic",
              "resource": "Trigger"
            }
          },
          {
            "name": "Microsoft.Logic/workflows/accessKeys/read",
            "display": {
              "description": "Reads the access key.",
              "operation": "Get Access Key",
              "provider": "Microsoft Logic",
              "resource": "Access Key"
            }
          },
          {
            "name": "Microsoft.Logic/workflows/accessKeys/write",
            "display": {
              "description": "Creates or updates the access key.",
              "operation": "Set Access Key",
              "provider": "Microsoft Logic",
              "resource": "Access Key"
            }
          },
          {
            "name": "Microsoft.Logic/workflows/accessKeys/delete",
            "display": {
              "description": "Deletes the access key.",
              "operation": "Delete Access Key",
              "provider": "Microsoft Logic",
              "resource": "Access Key"
            }
          },
          {
            "name": "Microsoft.Logic/workflows/accessKeys/list/action",
            "display": {
              "description": "Lists the access key secrets.",
              "operation": "List Access Key",
              "provider": "Microsoft Logic",
              "resource": "Access Key"
            }
          },
          {
            "name": "Microsoft.Logic/workflows/accessKeys/regenerate/action",
            "display": {
              "description": "Regenerates the access key secrets.",
              "operation": "Regenerate Access Key",
              "provider": "Microsoft Logic",
              "resource": "Access Key"
            }
          },
          {
            "name": "Microsoft.Logic/workflows/regenerateAccessKey/action",
            "display": {
              "description": "Regenerates the access key secrets.",
              "operation": "Regenerate Access Key",
              "provider": "Microsoft Logic",
              "resource": "Access Key"
            }
          },
          {
            "name": "Microsoft.Logic/workflows/listCallbackUrl/action",
            "display": {
              "description": "Gets the callback URL for workflow.",
              "operation": "List workflow callback URL",
              "provider": "Microsoft Logic",
              "resource": "Workflow"
            }
          },
          {
            "name": "Microsoft.Logic/workflows/triggers/read",
            "display": {
              "description": "Reads the trigger.",
              "operation": "Get Trigger",
              "provider": "Microsoft Logic",
              "resource": "Trigger"
            }
          },
          {
            "name": "Microsoft.Logic/workflows/triggers/run/action",
            "display": {
              "description": "Executes the trigger.",
              "operation": "Trigger Run",
              "provider": "Microsoft Logic",
              "resource": "Trigger"
            }
          },
          {
            "name": "Microsoft.Logic/workflows/triggers/reset/action",
            "display": {
              "description": "Resets the trigger.",
              "operation": "Trigger Reset",
              "provider": "Microsoft Logic",
              "resource": "Trigger"
            }
          },
          {
            "name": "Microsoft.Logic/workflows/triggers/setState/action",
            "display": {
              "description": "Sets the trigger state.",
              "operation": "Set Trigger State",
              "provider": "Microsoft Logic",
              "resource": "Trigger"
            }
          },
          {
            "name": "Microsoft.Logic/workflows/triggers/histories/read",
            "display": {
              "description": "Reads the trigger histories.",
              "operation": "Get Trigger Histories",
              "provider": "Microsoft Logic",
              "resource": "Trigger Histories"
            }
          },
          {
            "name": "Microsoft.Logic/workflows/triggers/histories/resubmit/action",
            "display": {
              "description": "Resubmits the workflow trigger.",
              "operation": "Resubmit trigger",
              "provider": "Microsoft Logic",
              "resource": "Trigger Histories"
            }
          },
          {
            "name": "Microsoft.Logic/workflows/triggers/listCallbackUrl/action",
            "display": {
              "description": "Gets the callback URL for trigger.",
              "operation": "List Trigger Callback URL",
              "provider": "Microsoft Logic",
              "resource": "Trigger"
            }
          },
          {
            "name": "Microsoft.Logic/workflows/runs/read",
            "display": {
              "description": "Reads the workflow run.",
              "operation": "Get Workflow Run",
              "provider": "Microsoft Logic",
              "resource": "Workflow Run"
            }
          },
          {
            "name": "Microsoft.Logic/workflows/runs/cancel/action",
            "display": {
              "description": "Cancels the run of a workflow.",
              "operation": "Cancel Workflow Run",
              "provider": "Microsoft Logic",
              "resource": "Workflow Run"
            }
          },
          {
            "name": "Microsoft.Logic/workflows/runs/operations/read",
            "display": {
              "description": "Reads the workflow run operation status.",
              "operation": "Get Workflow Run Operation Status",
              "provider": "Microsoft Logic",
              "resource": "Workflow Run Operation"
            }
          },
          {
            "name": "Microsoft.Logic/workflows/runs/actions/read",
            "display": {
              "description": "Reads the workflow run action.",
              "operation": "Get Workflow Run Action",
              "provider": "Microsoft Logic",
              "resource": "Workflow Run Action"
            }
          },
          {
            "name": "Microsoft.Logic/workflows/runs/actions/repetitions/read",
            "display": {
              "description": "Reads the workflow run action repetition.",
              "operation": "Get Workflow Run Action Repetition",
              "provider": "Microsoft Logic",
              "resource": "Workflow Run Action Repetition"
            }
          },
          {
            "name": "Microsoft.Logic/workflows/runs/actions/scoperepetitions/read",
            "display": {
              "description": "Reads the workflow run action scope repetition.",
              "operation": "Get Workflow Run Action Scope Repetition",
              "provider": "Microsoft Logic",
              "resource": "Workflow Run Action Scope Repetition"
            }
          },
          {
            "name": "Microsoft.Logic/workflows/runs/actions/requestHistories/read",
            "display": {
              "description": "Reads the workflow run action request history.",
              "operation": "Gets the workflow run action request history",
              "provider": "Microsoft Logic",
              "resource": "Workflow run action request history"
            }
          },
          {
            "name": "Microsoft.Logic/workflows/runs/actions/repetitions/requestHistories/read",
            "display": {
              "description": "Reads the workflow run repetition action request history.",
              "operation": "Gets the workflow run repetition action request history",
              "provider": "Microsoft Logic",
              "resource": "Workflow run repetition action request history"
            }
          },
          {
            "name": "Microsoft.Logic/workflows/providers/Microsoft.Insights/diagnosticSettings/read",
            "display": {
              "description": "Reads the workflow diagnostic settings.",
              "operation": "Get Workflow Diagnostic Setting",
              "provider": "Microsoft Logic",
              "resource": "Workflow Diagnostic Setting"
            },
            "origin": "system"
          },
          {
            "name": "Microsoft.Logic/workflows/providers/Microsoft.Insights/diagnosticSettings/write",
            "display": {
              "description": "Creates or updates the workflow diagnostic setting.",
              "operation": "Set Workflow Diagnostic Setting",
              "provider": "Microsoft Logic",
              "resource": "Workflow Diagnostic Setting"
            },
            "origin": "system"
          },
          {
            "name": "Microsoft.Logic/workflows/providers/Microsoft.Insights/metricDefinitions/read",
            "display": {
              "description": "Reads the workflow metric definitions.",
              "operation": "Get Workflow Metric Definition",
              "provider": "Microsoft Logic",
              "resource": "Workflow Metric Definition"
            },
            "origin": "system",
            "properties": {
              "serviceSpecification": {
                "metricSpecifications": [
                  {
                    "name": "RunsStarted",
                    "aggregationType": "Total",
                    "availabilities": [
                      {
                        "blobDuration": "PT1H",
                        "timeGrain": "PT1M"
                      }
                    ],
                    "dimensions": [],
                    "displayDescription": "Number of workflow runs started.",
                    "displayName": "Runs Started",
                    "fillGapWithZero": true,
                    "unit": "Count"
                  },
                  {
                    "name": "RunsCompleted",
                    "aggregationType": "Total",
                    "availabilities": [
                      {
                        "blobDuration": "PT1H",
                        "timeGrain": "PT1M"
                      }
                    ],
                    "dimensions": [],
                    "displayDescription": "Number of workflow runs completed.",
                    "displayName": "Runs Completed",
                    "fillGapWithZero": true,
                    "unit": "Count"
                  },
                  {
                    "name": "RunsSucceeded",
                    "aggregationType": "Total",
                    "availabilities": [
                      {
                        "blobDuration": "PT1H",
                        "timeGrain": "PT1M"
                      }
                    ],
                    "dimensions": [],
                    "displayDescription": "Number of workflow runs succeeded.",
                    "displayName": "Runs Succeeded",
                    "fillGapWithZero": true,
                    "unit": "Count"
                  },
                  {
                    "name": "RunsFailed",
                    "aggregationType": "Total",
                    "availabilities": [
                      {
                        "blobDuration": "PT1H",
                        "timeGrain": "PT1M"
                      }
                    ],
                    "dimensions": [],
                    "displayDescription": "Number of workflow runs failed.",
                    "displayName": "Runs Failed",
                    "fillGapWithZero": true,
                    "unit": "Count"
                  },
                  {
                    "name": "RunsCancelled",
                    "aggregationType": "Total",
                    "availabilities": [
                      {
                        "blobDuration": "PT1H",
                        "timeGrain": "PT1M"
                      }
                    ],
                    "dimensions": [],
                    "displayDescription": "Number of workflow runs cancelled.",
                    "displayName": "Runs Cancelled",
                    "fillGapWithZero": true,
                    "unit": "Count"
                  },
                  {
                    "name": "RunLatency",
                    "aggregationType": "Average",
                    "availabilities": [
                      {
                        "blobDuration": "PT1H",
                        "timeGrain": "PT1M"
                      }
                    ],
                    "dimensions": [],
                    "displayDescription": "Latency of completed workflow runs.",
                    "displayName": "Run Latency",
                    "fillGapWithZero": false,
                    "unit": "Seconds"
                  },
                  {
                    "name": "RunSuccessLatency",
                    "aggregationType": "Average",
                    "availabilities": [
                      {
                        "blobDuration": "PT1H",
                        "timeGrain": "PT1M"
                      }
                    ],
                    "dimensions": [],
                    "displayDescription": "Latency of succeeded workflow runs.",
                    "displayName": "Run Success Latency",
                    "fillGapWithZero": false,
                    "unit": "Seconds"
                  },
                  {
                    "name": "RunThrottledEvents",
                    "aggregationType": "Total",
                    "availabilities": [
                      {
                        "blobDuration": "PT1H",
                        "timeGrain": "PT1M"
                      }
                    ],
                    "dimensions": [],
                    "displayDescription": "Number of workflow action or trigger throttled events.",
                    "displayName": "Run Throttled Events",
                    "fillGapWithZero": true,
                    "unit": "Count"
                  },
                  {
                    "name": "RunFailurePercentage",
                    "aggregationType": "Total",
                    "availabilities": [
                      {
                        "blobDuration": "PT1H",
                        "timeGrain": "PT1M"
                      }
                    ],
                    "dimensions": [],
                    "displayDescription": "Percentage of workflow runs failed.",
                    "displayName": "Run Failure Percentage",
                    "fillGapWithZero": true,
                    "unit": "Percent"
                  },
                  {
                    "name": "ActionsStarted",
                    "aggregationType": "Total",
                    "availabilities": [
                      {
                        "blobDuration": "PT1H",
                        "timeGrain": "PT1M"
                      }
                    ],
                    "dimensions": [],
                    "displayDescription": "Number of workflow actions started.",
                    "displayName": "Actions Started ",
                    "fillGapWithZero": true,
                    "unit": "Count"
                  },
                  {
                    "name": "ActionsCompleted",
                    "aggregationType": "Total",
                    "availabilities": [
                      {
                        "blobDuration": "PT1H",
                        "timeGrain": "PT1M"
                      }
                    ],
                    "dimensions": [],
                    "displayDescription": "Number of workflow actions completed.",
                    "displayName": "Actions Completed ",
                    "fillGapWithZero": true,
                    "unit": "Count"
                  },
                  {
                    "name": "ActionsSucceeded",
                    "aggregationType": "Total",
                    "availabilities": [
                      {
                        "blobDuration": "PT1H",
                        "timeGrain": "PT1M"
                      }
                    ],
                    "dimensions": [],
                    "displayDescription": "Number of workflow actions succeeded.",
                    "displayName": "Actions Succeeded ",
                    "fillGapWithZero": true,
                    "unit": "Count"
                  },
                  {
                    "name": "ActionsFailed",
                    "aggregationType": "Total",
                    "availabilities": [
                      {
                        "blobDuration": "PT1H",
                        "timeGrain": "PT1M"
                      }
                    ],
                    "dimensions": [],
                    "displayDescription": "Number of workflow actions failed.",
                    "displayName": "Actions Failed ",
                    "fillGapWithZero": true,
                    "unit": "Count"
                  },
                  {
                    "name": "ActionsSkipped",
                    "aggregationType": "Total",
                    "availabilities": [
                      {
                        "blobDuration": "PT1H",
                        "timeGrain": "PT1M"
                      }
                    ],
                    "dimensions": [],
                    "displayDescription": "Number of workflow actions skipped.",
                    "displayName": "Actions Skipped ",
                    "fillGapWithZero": true,
                    "unit": "Count"
                  },
                  {
                    "name": "ActionLatency",
                    "aggregationType": "Average",
                    "availabilities": [
                      {
                        "blobDuration": "PT1H",
                        "timeGrain": "PT1M"
                      }
                    ],
                    "dimensions": [],
                    "displayDescription": "Latency of completed workflow actions.",
                    "displayName": "Action Latency ",
                    "fillGapWithZero": false,
                    "unit": "Seconds"
                  },
                  {
                    "name": "ActionSuccessLatency",
                    "aggregationType": "Average",
                    "availabilities": [
                      {
                        "blobDuration": "PT1H",
                        "timeGrain": "PT1M"
                      }
                    ],
                    "dimensions": [],
                    "displayDescription": "Latency of succeeded workflow actions.",
                    "displayName": "Action Success Latency ",
                    "fillGapWithZero": false,
                    "unit": "Seconds"
                  },
                  {
                    "name": "ActionThrottledEvents",
                    "aggregationType": "Total",
                    "availabilities": [
                      {
                        "blobDuration": "PT1H",
                        "timeGrain": "PT1M"
                      }
                    ],
                    "dimensions": [],
                    "displayDescription": "Number of workflow action throttled events..",
                    "displayName": "Action Throttled Events",
                    "fillGapWithZero": true,
                    "unit": "Count"
                  },
                  {
                    "name": "TriggersStarted",
                    "aggregationType": "Total",
                    "availabilities": [
                      {
                        "blobDuration": "PT1H",
                        "timeGrain": "PT1M"
                      }
                    ],
                    "dimensions": [],
                    "displayDescription": "Number of workflow triggers started.",
                    "displayName": "Triggers Started ",
                    "fillGapWithZero": true,
                    "unit": "Count"
                  },
                  {
                    "name": "TriggersCompleted",
                    "aggregationType": "Total",
                    "availabilities": [
                      {
                        "blobDuration": "PT1H",
                        "timeGrain": "PT1M"
                      }
                    ],
                    "dimensions": [],
                    "displayDescription": "Number of workflow triggers completed.",
                    "displayName": "Triggers Completed ",
                    "fillGapWithZero": true,
                    "unit": "Count"
                  },
                  {
                    "name": "TriggersSucceeded",
                    "aggregationType": "Total",
                    "availabilities": [
                      {
                        "blobDuration": "PT1H",
                        "timeGrain": "PT1M"
                      }
                    ],
                    "dimensions": [],
                    "displayDescription": "Number of workflow triggers succeeded.",
                    "displayName": "Triggers Succeeded ",
                    "fillGapWithZero": true,
                    "unit": "Count"
                  },
                  {
                    "name": "TriggersFailed",
                    "aggregationType": "Total",
                    "availabilities": [
                      {
                        "blobDuration": "PT1H",
                        "timeGrain": "PT1M"
                      }
                    ],
                    "dimensions": [],
                    "displayDescription": "Number of workflow triggers failed.",
                    "displayName": "Triggers Failed ",
                    "fillGapWithZero": true,
                    "unit": "Count"
                  },
                  {
                    "name": "TriggersSkipped",
                    "aggregationType": "Total",
                    "availabilities": [
                      {
                        "blobDuration": "PT1H",
                        "timeGrain": "PT1M"
                      }
                    ],
                    "dimensions": [],
                    "displayDescription": "Number of workflow triggers skipped.",
                    "displayName": "Triggers Skipped",
                    "fillGapWithZero": true,
                    "unit": "Count"
                  },
                  {
                    "name": "TriggersFired",
                    "aggregationType": "Total",
                    "availabilities": [
                      {
                        "blobDuration": "PT1H",
                        "timeGrain": "PT1M"
                      }
                    ],
                    "dimensions": [],
                    "displayDescription": "Number of workflow triggers fired.",
                    "displayName": "Triggers Fired ",
                    "fillGapWithZero": true,
                    "unit": "Count"
                  },
                  {
                    "name": "TriggerLatency",
                    "aggregationType": "Average",
                    "availabilities": [
                      {
                        "blobDuration": "PT1H",
                        "timeGrain": "PT1M"
                      }
                    ],
                    "dimensions": [],
                    "displayDescription": "Latency of completed workflow triggers.",
                    "displayName": "Trigger Latency ",
                    "fillGapWithZero": false,
                    "unit": "Seconds"
                  },
                  {
                    "name": "TriggerFireLatency",
                    "aggregationType": "Average",
                    "availabilities": [
                      {
                        "blobDuration": "PT1H",
                        "timeGrain": "PT1M"
                      }
                    ],
                    "dimensions": [],
                    "displayDescription": "Latency of fired workflow triggers.",
                    "displayName": "Trigger Fire Latency ",
                    "fillGapWithZero": false,
                    "unit": "Seconds"
                  },
                  {
                    "name": "TriggerSuccessLatency",
                    "aggregationType": "Average",
                    "availabilities": [
                      {
                        "blobDuration": "PT1H",
                        "timeGrain": "PT1M"
                      }
                    ],
                    "dimensions": [],
                    "displayDescription": "Latency of succeeded workflow triggers.",
                    "displayName": "Trigger Success Latency ",
                    "fillGapWithZero": false,
                    "unit": "Seconds"
                  },
                  {
                    "name": "TriggerThrottledEvents",
                    "aggregationType": "Total",
                    "availabilities": [
                      {
                        "blobDuration": "PT1H",
                        "timeGrain": "PT1M"
                      }
                    ],
                    "dimensions": [],
                    "displayDescription": "Number of workflow trigger throttled events.",
                    "displayName": "Trigger Throttled Events",
                    "fillGapWithZero": true,
                    "unit": "Count"
                  },
                  {
                    "name": "BillableActionExecutions",
                    "aggregationType": "Total",
                    "availabilities": [
                      {
                        "blobDuration": "PT1H",
                        "timeGrain": "PT1M"
                      }
                    ],
                    "dimensions": [],
                    "displayDescription": "Number of workflow action executions getting billed.",
                    "displayName": "Billable Action Executions",
                    "fillGapWithZero": true,
                    "unit": "Count"
                  },
                  {
                    "name": "BillableTriggerExecutions",
                    "aggregationType": "Total",
                    "availabilities": [
                      {
                        "blobDuration": "PT1H",
                        "timeGrain": "PT1M"
                      }
                    ],
                    "dimensions": [],
                    "displayDescription": "Number of workflow trigger executions getting billed.",
                    "displayName": "Billable Trigger Executions",
                    "fillGapWithZero": true,
                    "unit": "Count"
                  },
                  {
                    "name": "TotalBillableExecutions",
                    "aggregationType": "Total",
                    "availabilities": [
                      {
                        "blobDuration": "PT1H",
                        "timeGrain": "PT1M"
                      }
                    ],
                    "dimensions": [],
                    "displayDescription": "Number of workflow executions getting billed.",
                    "displayName": "Total Billable Executions",
                    "fillGapWithZero": true,
                    "unit": "Count"
                  },
                  {
                    "name": "BillableNativeActionExecutions",
                    "aggregationType": "Total",
                    "availabilities": [
                      {
                        "blobDuration": "PT1H",
                        "timeGrain": "PT1M"
                      }
                    ],
                    "dimensions": [],
                    "displayDescription": "Number of native workflow action executions getting billed.",
                    "displayName": "Billable Native Action Executions",
                    "fillGapWithZero": true,
                    "unit": "Count"
                  },
                  {
                    "name": "BillableNativeTriggerExecutions",
                    "aggregationType": "Total",
                    "availabilities": [
                      {
                        "blobDuration": "PT1H",
                        "timeGrain": "PT1M"
                      }
                    ],
                    "dimensions": [],
                    "displayDescription": "Number of native workflow trigger executions getting billed.",
                    "displayName": "Billable Native Trigger Executions",
                    "fillGapWithZero": true,
                    "unit": "Count"
                  },
                  {
                    "name": "TotalBillableNativeExecutions",
                    "aggregationType": "Total",
                    "availabilities": [
                      {
                        "blobDuration": "PT1H",
                        "timeGrain": "PT1M"
                      }
                    ],
                    "dimensions": [],
                    "displayDescription": "Number of native workflow executions getting billed.",
                    "displayName": "Total Native Billable Executions",
                    "fillGapWithZero": true,
                    "unit": "Count"
                  },
                  {
                    "name": "BillableStandardActionExecutions",
                    "aggregationType": "Total",
                    "availabilities": [
                      {
                        "blobDuration": "PT1H",
                        "timeGrain": "PT1M"
                      }
                    ],
                    "dimensions": [],
                    "displayDescription": "Number of standard workflow action executions getting billed.",
                    "displayName": "Billable Standard Action Executions",
                    "fillGapWithZero": true,
                    "unit": "Count"
                  },
                  {
                    "name": "BillableStandardTriggerExecutions",
                    "aggregationType": "Total",
                    "availabilities": [
                      {
                        "blobDuration": "PT1H",
                        "timeGrain": "PT1M"
                      }
                    ],
                    "dimensions": [],
                    "displayDescription": "Number of standard workflow trigger executions getting billed.",
                    "displayName": "Billable Standard Trigger Executions",
                    "fillGapWithZero": true,
                    "unit": "Count"
                  },
                  {
                    "name": "TotalBillableStandardExecutions",
                    "aggregationType": "Total",
                    "availabilities": [
                      {
                        "blobDuration": "PT1H",
                        "timeGrain": "PT1M"
                      }
                    ],
                    "dimensions": [],
                    "displayDescription": "Number of standard workflow executions getting billed.",
                    "displayName": "Total Standard Billable Executions",
                    "fillGapWithZero": true,
                    "unit": "Count"
                  }
                ]
              }
            }
          },
          {
            "name": "Microsoft.Logic/workflows/providers/Microsoft.Insights/logDefinitions/read",
            "display": {
              "description": "Reads the workflow log definitions.",
              "operation": "Get Workflow Log Definition",
              "provider": "Microsoft Logic",
              "resource": "Workflow Log Definition"
            },
            "origin": "system",
            "properties": {
              "serviceSpecification": {
                "logSpecifications": [
                  {
                    "name": "WorkflowRuntime",
                    "description": "Diagnostic events related to workflow runtime executions.",
                    "blobDuration": "PT1H",
                    "displayName": "Workflow runtime diagnostic events"
                  }
                ]
              }
            }
          },
          {
            "name": "Microsoft.Logic/workflows/runs/actions/listExpressionTraces/action",
            "display": {
              "description": "Gets the workflow run action expression traces.",
              "operation": "List Workflow Run Action Expression Traces",
              "provider": "Microsoft Logic",
              "resource": "Workflow Run Action"
            }
          },
          {
            "name": "Microsoft.Logic/workflows/runs/actions/repetitions/listExpressionTraces/action",
            "display": {
              "description": "Gets the workflow run action repetition expression traces.",
              "operation": "List Workflow Run Action Repetition Expression Traces",
              "provider": "Microsoft Logic",
              "resource": "Workflow Run Action Repetition"
            }
          },
          {
            "name": "Microsoft.Logic/integrationAccounts/providers/Microsoft.Insights/logDefinitions/read",
            "display": {
              "description": "Reads the Integration Account log definitions.",
              "operation": "Get Integration Account Log Definition",
              "provider": "Microsoft Logic",
              "resource": "Integration Account Log Definition"
            },
            "origin": "system",
            "properties": {
              "serviceSpecification": {
                "logSpecifications": [
                  {
                    "name": "IntegrationAccountTrackingEvents",
                    "description": "Track events related to Integration Account.",
                    "blobDuration": "PT1H",
                    "displayName": "Integration Account track events"
                  }
                ]
              }
            }
          },
          {
            "name": "Microsoft.Logic/integrationAccounts/read",
            "display": {
              "description": "Reads the integration account.",
              "operation": "Get Integration Account",
              "provider": "Microsoft Logic",
              "resource": "Integration Account"
            }
          },
          {
            "name": "Microsoft.Logic/integrationAccounts/write",
            "display": {
              "description": "Creates or updates the integration account.",
              "operation": "Set Integration Account",
              "provider": "Microsoft Logic",
              "resource": "Integration Account"
            }
          },
          {
            "name": "Microsoft.Logic/integrationAccounts/delete",
            "display": {
              "description": "Deletes the integration account.",
              "operation": "Delete Integration Account",
              "provider": "Microsoft Logic",
              "resource": "Integration Account"
            }
          },
          {
            "name": "Microsoft.Logic/integrationAccounts/regenerateAccessKey/action",
            "display": {
              "description": "Regenerates the access key secrets.",
              "operation": "Regenerate Access Key",
              "provider": "Microsoft Logic",
              "resource": "Integration Account"
            }
          },
          {
            "name": "Microsoft.Logic/integrationAccounts/listCallbackUrl/action",
            "display": {
              "description": "Gets the callback URL for integration account.",
              "operation": "List Integration Account Callback URL",
              "provider": "Microsoft Logic",
              "resource": "Integration Account"
            }
          },
          {
            "name": "Microsoft.Logic/integrationAccounts/listKeyVaultKeys/action",
            "display": {
              "description": "Gets the keys in the key vault.",
              "operation": "List Key Vault Keys",
              "provider": "Microsoft Logic",
              "resource": "Integration Account"
            }
          },
          {
            "name": "Microsoft.Logic/integrationAccounts/logTrackingEvents/action",
            "display": {
              "description": "Logs the tracking events in the integration account.",
              "operation": "Log Integration Account Tracking Events",
              "provider": "Microsoft Logic",
              "resource": "Integration Account"
            }
          },
          {
            "name": "Microsoft.Logic/integrationAccounts/join/action",
            "display": {
              "description": "Joins the Integration Account.",
              "operation": "Join Integration Account",
              "provider": "Microsoft Logic",
              "resource": "Integration Account"
            }
          },
          {
            "name": "Microsoft.Logic/integrationAccounts/partners/read",
            "display": {
              "description": "Reads the parter in integration account.",
              "operation": "Get Integration Account Partner",
              "provider": "Microsoft Logic",
              "resource": "Integration Account Partner"
            }
          },
          {
            "name": "Microsoft.Logic/integrationAccounts/partners/write",
            "display": {
              "description": "Creates or updates the partner in integration account.",
              "operation": "Set Integration Account Partner",
              "provider": "Microsoft Logic",
              "resource": "Integration Account Partner"
            }
          },
          {
            "name": "Microsoft.Logic/integrationAccounts/partners/delete",
            "display": {
              "description": "Deletes the partner in integration account.",
              "operation": "Delete Integration Account Partner",
              "provider": "Microsoft Logic",
              "resource": "Integration Account Partner"
            }
          },
          {
            "name": "Microsoft.Logic/integrationAccounts/partners/listContentCallbackUrl/action",
            "display": {
              "description": "Gets the callback URL for partner content in integration account.",
              "operation": "List Integration Account Partner Content Callback URL",
              "provider": "Microsoft Logic",
              "resource": "Integration Account Partner"
            }
          },
          {
            "name": "Microsoft.Logic/integrationAccounts/agreements/read",
            "display": {
              "description": "Reads the agreement in integration account.",
              "operation": "Get Integration Account Agreement",
              "provider": "Microsoft Logic",
              "resource": "Integration Account Agreement"
            }
          },
          {
            "name": "Microsoft.Logic/integrationAccounts/agreements/write",
            "display": {
              "description": "Creates or updates the agreement in integration account.",
              "operation": "Set Integration Account Agreement",
              "provider": "Microsoft Logic",
              "resource": "Integration Account Agreement"
            }
          },
          {
            "name": "Microsoft.Logic/integrationAccounts/agreements/delete",
            "display": {
              "description": "Deletes the agreement in integration account.",
              "operation": "Delete Integration Account Agreement",
              "provider": "Microsoft Logic",
              "resource": "Integration Account Agreement"
            }
          },
          {
            "name": "Microsoft.Logic/integrationAccounts/agreements/listContentCallbackUrl/action",
            "display": {
              "description": "Gets the callback URL for agreement content in integration account.",
              "operation": "List Integration Account Agreement Content Callback URL",
              "provider": "Microsoft Logic",
              "resource": "Integration Account Agreement"
            }
          },
          {
            "name": "Microsoft.Logic/integrationAccounts/certificates/read",
            "display": {
              "description": "Reads the certificate in integration account.",
              "operation": "Get Integration Account Certificate",
              "provider": "Microsoft Logic",
              "resource": "Integration Account Certificate"
            }
          },
          {
            "name": "Microsoft.Logic/integrationAccounts/certificates/write",
            "display": {
              "description": "Creates or updates the certificate in integration account.",
              "operation": "Set Integration Account Certificate",
              "provider": "Microsoft Logic",
              "resource": "Integration Account Certificate"
            }
          },
          {
            "name": "Microsoft.Logic/integrationAccounts/certificates/delete",
            "display": {
              "description": "Deletes the certificate in integration account.",
              "operation": "Delete Integration Account Certificate",
              "provider": "Microsoft Logic",
              "resource": "Integration Account Certificate"
            }
          },
          {
            "name": "Microsoft.Logic/integrationAccounts/schemas/read",
            "display": {
              "description": "Reads the schema in integration account.",
              "operation": "Get Integration Account Schema",
              "provider": "Microsoft Logic",
              "resource": "Integration Account Schema"
            }
          },
          {
            "name": "Microsoft.Logic/integrationAccounts/schemas/write",
            "display": {
              "description": "Creates or updates the schema in integration account.",
              "operation": "Set Integration Account Schema",
              "provider": "Microsoft Logic",
              "resource": "Integration Account Schema"
            }
          },
          {
            "name": "Microsoft.Logic/integrationAccounts/schemas/delete",
            "display": {
              "description": "Deletes the schema in integration account.",
              "operation": "Delete Integration Account Schema",
              "provider": "Microsoft Logic",
              "resource": "Integration Account Schema"
            }
          },
          {
            "name": "Microsoft.Logic/integrationAccounts/schemas/listContentCallbackUrl/action",
            "display": {
              "description": "Gets the callback URL for schema content in integration account.",
              "operation": "List Integration Account Schema Content Callback URL",
              "provider": "Microsoft Logic",
              "resource": "Integration Account Schema"
            }
          },
          {
            "name": "Microsoft.Logic/integrationAccounts/maps/read",
            "display": {
              "description": "Reads the map in integration account.",
              "operation": "Get Integration Account Map",
              "provider": "Microsoft Logic",
              "resource": "Integration Account Map"
            }
          },
          {
            "name": "Microsoft.Logic/integrationAccounts/maps/write",
            "display": {
              "description": "Creates or updates the map in integration account.",
              "operation": "Set Integration Account Map",
              "provider": "Microsoft Logic",
              "resource": "Integration Account Map"
            }
          },
          {
            "name": "Microsoft.Logic/integrationAccounts/maps/delete",
            "display": {
              "description": "Deletes the map in integration account.",
              "operation": "Delete Integration Account Map",
              "provider": "Microsoft Logic",
              "resource": "Integration Account Map"
            }
          },
          {
            "name": "Microsoft.Logic/integrationAccounts/maps/listContentCallbackUrl/action",
            "display": {
              "description": "Gets the callback URL for map content in integration account.",
              "operation": "List Integration Account Map Content Callback URL",
              "provider": "Microsoft Logic",
              "resource": "Integration Account Map"
            }
          },
          {
            "name": "Microsoft.Logic/integrationAccounts/assemblies/read",
            "display": {
              "description": "Reads the assembly in integration account.",
              "operation": "Get Integration Account Assembly",
              "provider": "Microsoft Logic",
              "resource": "Integration Account Assembly"
            }
          },
          {
            "name": "Microsoft.Logic/integrationAccounts/assemblies/write",
            "display": {
              "description": "Creates or updates the assembly in integration account.",
              "operation": "Set Integration Account Assembly",
              "provider": "Microsoft Logic",
              "resource": "Integration Account Assembly"
            }
          },
          {
            "name": "Microsoft.Logic/integrationAccounts/assemblies/delete",
            "display": {
              "description": "Deletes the assembly in integration account.",
              "operation": "Delete Integration Account Assembly",
              "provider": "Microsoft Logic",
              "resource": "Integration Account Assembly"
            }
          },
          {
            "name": "Microsoft.Logic/integrationAccounts/assemblies/listContentCallbackUrl/action",
            "display": {
              "description": "Gets the callback URL for assembly content in integration account.",
              "operation": "List Integration Account Assembly Content Callback URL",
              "provider": "Microsoft Logic",
              "resource": "Integration Account Assembly"
            }
          },
          {
            "name": "Microsoft.Logic/integrationAccounts/batchConfigurations/read",
            "display": {
              "description": "Reads the batch configuration in integration account.",
              "operation": "Get Integration Account Batch Configuration",
              "provider": "Microsoft Logic",
              "resource": "Integration Account Batch Configuration"
            }
          },
          {
            "name": "Microsoft.Logic/integrationAccounts/batchConfigurations/write",
            "display": {
              "description": "Creates or updates the batch configuration in integration account.",
              "operation": "Set Integration Account Batch Configuration",
              "provider": "Microsoft Logic",
              "resource": "Integration Account Batch Configuration"
            }
          },
          {
            "name": "Microsoft.Logic/integrationAccounts/batchConfigurations/delete",
            "display": {
              "description": "Deletes the batch configuration in integration account.",
              "operation": "Delete Integration Account Batch Configuration",
              "provider": "Microsoft Logic",
              "resource": "Integration Account Batch Configuration"
            }
          },
          {
            "name": "Microsoft.Logic/integrationAccounts/sessions/read",
            "display": {
              "description": "Reads the batch configuration in integration account.",
              "operation": "Get Integration Account Session",
              "provider": "Microsoft Logic",
              "resource": "Integration Account Session"
            }
          },
          {
            "name": "Microsoft.Logic/integrationAccounts/sessions/write",
            "display": {
              "description": "Creates or updates the session in integration account.",
              "operation": "Set Integration Account Session",
              "provider": "Microsoft Logic",
              "resource": "Integration Account Session"
            }
          },
          {
            "name": "Microsoft.Logic/integrationAccounts/sessions/delete",
            "display": {
              "description": "Deletes the session in integration account.",
              "operation": "Delete Integration Account Session",
              "provider": "Microsoft Logic",
              "resource": "Integration Account Session"
            }
          },
          {
            "name": "Microsoft.Logic/integrationServiceEnvironments/read",
            "display": {
              "description": "Reads the integration service environment.",
              "operation": "Get Integration Service Environment",
              "provider": "Microsoft Logic",
              "resource": "Integration Service Environment"
            }
          },
          {
            "name": "Microsoft.Logic/integrationServiceEnvironments/write",
            "display": {
              "description": "Creates or updates the integration service environment.",
              "operation": "Set Integration Service Environment",
              "provider": "Microsoft Logic",
              "resource": "Integration Service Environment"
            }
          },
          {
            "name": "Microsoft.Logic/integrationServiceEnvironments/delete",
            "display": {
              "description": "Deletes the integration service environment.",
              "operation": "Delete Integration Service Environment",
              "provider": "Microsoft Logic",
              "resource": "Integration Service Environment"
            }
          },
          {
            "name": "Microsoft.Logic/integrationServiceEnvironments/join/action",
            "display": {
              "description": "Joins the Integration Service Environment.",
              "operation": "Join Integration Service Environment",
              "provider": "Microsoft Logic",
              "resource": "Integration Service Environment"
            }
          }
        ]
      }
    }
  },
  "operationId": "Operations_List",
  "title": "List Microsoft.Logic operations"
}