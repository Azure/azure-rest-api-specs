{
  "swagger": "2.0",
  "info": {
    "title": "LogicManagementClient",
    "version": "2019-05-01",
    "description": "REST API for Azure Logic Apps.",
    "x-typespec-generated": [
      {
        "emitter": "@azure-tools/typespec-autorest"
      }
    ]
  },
  "schemes": [
    "https"
  ],
  "host": "management.azure.com",
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "description": "Azure Active Directory OAuth2 Flow.",
      "flow": "implicit",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "tags": [
    {
      "name": "Operations"
    },
    {
      "name": "Workflows"
    },
    {
      "name": "Templates"
    },
    {
      "name": "WorkflowVersions"
    },
    {
      "name": "WorkflowTriggers"
    },
    {
      "name": "WorkflowTriggerHistories"
    },
    {
      "name": "WorkflowRuns"
    },
    {
      "name": "WorkflowRunActions"
    },
    {
      "name": "WorkflowRunActionRepetitionDefinitions"
    },
    {
      "name": "RequestHistories"
    },
    {
      "name": "IntegrationAccounts"
    },
    {
      "name": "AssemblyDefinitions"
    },
    {
      "name": "BatchConfigurations"
    },
    {
      "name": "IntegrationAccountSchemas"
    },
    {
      "name": "IntegrationAccountMaps"
    },
    {
      "name": "IntegrationAccountPartners"
    },
    {
      "name": "IntegrationAccountAgreements"
    },
    {
      "name": "IntegrationAccountCertificates"
    },
    {
      "name": "IntegrationAccountSessions"
    },
    {
      "name": "IntegrationServiceEnvironments"
    },
    {
      "name": "ApiOperations"
    },
    {
      "name": "IntegrationServiceEnvironmentManagedApis"
    },
    {
      "name": "WorkflowsOperations"
    },
    {
      "name": "WorkflowRunsOperations"
    },
    {
      "name": "WorkflowRunActionRequestHistoriesOperations"
    },
    {
      "name": "WorkflowRunActionScopeRepetitionsOperations"
    },
    {
      "name": "WorkflowRunOperationsOperations"
    }
  ],
  "paths": {
    "/providers/Microsoft.Logic/operations": {
      "get": {
        "operationId": "Operations_List",
        "tags": [
          "Operations"
        ],
        "description": "List the operations for the provider",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/OperationListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List Microsoft.Logic operations": {
            "$ref": "./examples/Operations_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Logic/integrationAccounts": {
      "get": {
        "operationId": "IntegrationAccounts_ListBySubscription",
        "tags": [
          "IntegrationAccounts"
        ],
        "description": "Gets a list of integration accounts by subscription.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The number of items to be included in the result.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/IntegrationAccountListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List integration accounts by subscription": {
            "$ref": "./examples/IntegrationAccounts_ListBySubscription.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Logic/integrationServiceEnvironments": {
      "get": {
        "operationId": "IntegrationServiceEnvironments_ListBySubscription",
        "tags": [
          "IntegrationServiceEnvironments"
        ],
        "description": "Gets a list of integration service environments by subscription.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The number of items to be included in the result.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/IntegrationServiceEnvironmentListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List integration service environments by subscription": {
            "$ref": "./examples/IntegrationServiceEnvironments_ListBySubscription.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Logic/integrationServiceEnvironments/{integrationServiceEnvironmentName}": {
      "get": {
        "operationId": "IntegrationServiceEnvironments_Get",
        "tags": [
          "IntegrationServiceEnvironments"
        ],
        "description": "Gets an integration service environment.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "integrationServiceEnvironmentName",
            "in": "path",
            "description": "The integration service environment name.",
            "required": true,
            "type": "string",
            "pattern": "[a-zA-Z0-9_.()-]{0,79}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/IntegrationServiceEnvironment"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get integration service environment by name": {
            "$ref": "./examples/IntegrationServiceEnvironments_Get.json"
          }
        }
      },
      "put": {
        "operationId": "IntegrationServiceEnvironments_CreateOrUpdate",
        "tags": [
          "IntegrationServiceEnvironments"
        ],
        "description": "Creates or updates an integration service environment.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "integrationServiceEnvironmentName",
            "in": "path",
            "description": "The integration service environment name.",
            "required": true,
            "type": "string",
            "pattern": "[a-zA-Z0-9_.()-]{0,79}$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "The integration service environment.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/IntegrationServiceEnvironment"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'IntegrationServiceEnvironment' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/IntegrationServiceEnvironment"
            }
          },
          "201": {
            "description": "Resource 'IntegrationServiceEnvironment' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/IntegrationServiceEnvironment"
            },
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Create or update an integration service environment": {
            "$ref": "./examples/IntegrationServiceEnvironments_Put.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "IntegrationServiceEnvironments_Update",
        "tags": [
          "IntegrationServiceEnvironments"
        ],
        "description": "Updates an integration service environment.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "integrationServiceEnvironmentName",
            "in": "path",
            "description": "The integration service environment name.",
            "required": true,
            "type": "string",
            "pattern": "[a-zA-Z0-9_.()-]{0,79}$"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "The integration service environment.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/IntegrationServiceEnvironment"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/IntegrationServiceEnvironment"
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Patch an integration service environment": {
            "$ref": "./examples/IntegrationServiceEnvironments_Patch.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "IntegrationServiceEnvironments_Delete",
        "tags": [
          "IntegrationServiceEnvironments"
        ],
        "description": "Deletes an integration service environment.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "integrationServiceEnvironmentName",
            "in": "path",
            "description": "The integration service environment name.",
            "required": true,
            "type": "string",
            "pattern": "[a-zA-Z0-9_.()-]{0,79}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete an integration account": {
            "$ref": "./examples/IntegrationServiceEnvironments_Delete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Logic/integrationServiceEnvironments/{integrationServiceEnvironmentName}/managedApis": {
      "get": {
        "operationId": "IntegrationServiceEnvironmentManagedApis_List",
        "tags": [
          "IntegrationServiceEnvironmentManagedApis"
        ],
        "description": "Gets the integration service environment managed Apis.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "integrationServiceEnvironmentName",
            "in": "path",
            "description": "The integration service environment name.",
            "required": true,
            "type": "string",
            "pattern": "[a-zA-Z0-9_.()-]{0,79}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/IntegrationServiceEnvironmentManagedApiListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Gets the integration service environment managed Apis": {
            "$ref": "./examples/IntegrationServiceEnvironments_ManagedApis_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Logic/integrationServiceEnvironments/{integrationServiceEnvironmentName}/managedApis/{apiName}": {
      "get": {
        "operationId": "IntegrationServiceEnvironmentManagedApis_Get",
        "tags": [
          "IntegrationServiceEnvironmentManagedApis"
        ],
        "description": "Gets the integration service environment managed Api.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "integrationServiceEnvironmentName",
            "in": "path",
            "description": "The integration service environment name.",
            "required": true,
            "type": "string",
            "pattern": "[a-zA-Z0-9_.()-]{0,79}$"
          },
          {
            "name": "apiName",
            "in": "path",
            "description": "The api name.",
            "required": true,
            "type": "string",
            "pattern": "[a-zA-Z0-9_.()-]{0,79}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/IntegrationServiceEnvironmentManagedApi"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Gets the integration service environment managed Apis": {
            "$ref": "./examples/IntegrationServiceEnvironments_ManagedApis_Get.json"
          }
        }
      },
      "put": {
        "operationId": "IntegrationServiceEnvironmentManagedApis_Put",
        "tags": [
          "IntegrationServiceEnvironmentManagedApis"
        ],
        "description": "Puts the integration service environment managed Api.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "integrationServiceEnvironmentName",
            "in": "path",
            "description": "The integration service environment name.",
            "required": true,
            "type": "string",
            "pattern": "[a-zA-Z0-9_.()-]{0,79}$"
          },
          {
            "name": "apiName",
            "in": "path",
            "description": "The api name.",
            "required": true,
            "type": "string",
            "pattern": "[a-zA-Z0-9_.()-]{0,79}$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "The integration service environment managed api.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/IntegrationServiceEnvironmentManagedApi"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'IntegrationServiceEnvironmentManagedApi' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/IntegrationServiceEnvironmentManagedApi"
            }
          },
          "201": {
            "description": "Resource 'IntegrationServiceEnvironmentManagedApi' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/IntegrationServiceEnvironmentManagedApi"
            },
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Gets the integration service environment managed Apis": {
            "$ref": "./examples/IntegrationServiceEnvironments_ManagedApis_Put.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "IntegrationServiceEnvironmentManagedApis_Delete",
        "tags": [
          "IntegrationServiceEnvironmentManagedApis"
        ],
        "description": "Deletes the integration service environment managed Api.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "integrationServiceEnvironmentName",
            "in": "path",
            "description": "The integration service environment name.",
            "required": true,
            "type": "string",
            "pattern": "[a-zA-Z0-9_.()-]{0,79}$"
          },
          {
            "name": "apiName",
            "in": "path",
            "description": "The api name.",
            "required": true,
            "type": "string",
            "pattern": "[a-zA-Z0-9_.()-]{0,79}$"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Deletes the integration service environment managed Apis": {
            "$ref": "./examples/IntegrationServiceEnvironments_ManagedApis_Delete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Logic/integrationServiceEnvironments/{integrationServiceEnvironmentName}/managedApis/{apiName}/apiOperations": {
      "get": {
        "operationId": "ApiOperations_List",
        "tags": [
          "ApiOperations"
        ],
        "description": "List ApiOperation resources by IntegrationServiceEnvironmentManagedApi",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "integrationServiceEnvironmentName",
            "in": "path",
            "description": "The integration service environment name.",
            "required": true,
            "type": "string",
            "pattern": "[a-zA-Z0-9_.()-]{0,79}$"
          },
          {
            "name": "apiName",
            "in": "path",
            "description": "The api name.",
            "required": true,
            "type": "string",
            "pattern": "[a-zA-Z0-9_.()-]{0,79}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ApiOperationListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Logic/integrationServiceEnvironments/{integrationServiceEnvironmentName}/network": {
      "get": {
        "operationId": "IntegrationServiceEnvironments_IntegrationServiceEnvironmentNetworkHealthGet",
        "tags": [
          "IntegrationServiceEnvironments"
        ],
        "description": "Gets the integration service environment network health.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "integrationServiceEnvironmentName",
            "in": "path",
            "description": "The integration service environment name.",
            "required": true,
            "type": "string",
            "pattern": "[a-zA-Z0-9_.()-]{0,79}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/IntegrationServiceEnvironmentNetworkHealth"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Logic/integrationServiceEnvironments/{integrationServiceEnvironmentName}/restart": {
      "post": {
        "operationId": "IntegrationServiceEnvironments_Restart",
        "tags": [
          "IntegrationServiceEnvironments"
        ],
        "description": "Restarts an integration service environment.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "integrationServiceEnvironmentName",
            "in": "path",
            "description": "The integration service environment name.",
            "required": true,
            "type": "string",
            "pattern": "[a-zA-Z0-9_.()-]{0,79}$"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Restarts an integration service environment": {
            "$ref": "./examples/IntegrationServiceEnvironments_Restart.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Logic/integrationServiceEnvironments/{integrationServiceEnvironmentName}/skus": {
      "get": {
        "operationId": "IntegrationServiceEnvironments_List",
        "tags": [
          "IntegrationServiceEnvironments"
        ],
        "description": "Gets a list of integration service environment Skus.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "integrationServiceEnvironmentName",
            "in": "path",
            "description": "The integration service environment name.",
            "required": true,
            "type": "string",
            "pattern": "[a-zA-Z0-9_.()-]{0,79}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/IntegrationServiceEnvironmentSkuList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Logic/templates": {
      "get": {
        "operationId": "Templates_ListBySubscription",
        "tags": [
          "Templates"
        ],
        "description": "Gets a list of templates by subscription.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The number of items to be included in the result.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The filter to apply on the operation. Options for filters include: State, Trigger, and ReferencedResourceId.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/TemplateListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Logic/workflows": {
      "get": {
        "operationId": "Workflows_ListBySubscription",
        "tags": [
          "Workflows"
        ],
        "description": "Gets a list of workflows by subscription.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The number of items to be included in the result.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The filter to apply on the operation. Options for filters include: State, Trigger, and ReferencedResourceId.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/WorkflowListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List all workflows in a subscription": {
            "$ref": "./examples/Workflows_ListBySubscription.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/integrationAccounts": {
      "get": {
        "operationId": "IntegrationAccounts_ListByResourceGroup",
        "tags": [
          "IntegrationAccounts"
        ],
        "description": "Gets a list of integration accounts by resource group.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The number of items to be included in the result.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/IntegrationAccountListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List integration accounts by resource group name": {
            "$ref": "./examples/IntegrationAccounts_ListByResourceGroup.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/integrationAccounts/{integrationAccountName}": {
      "get": {
        "operationId": "IntegrationAccounts_Get",
        "tags": [
          "IntegrationAccounts"
        ],
        "description": "Gets an integration account.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "integrationAccountName",
            "in": "path",
            "description": "The integration account name.",
            "required": true,
            "type": "string",
            "pattern": "[a-zA-Z0-9_.()-]{0,79}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/IntegrationAccount"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get integration account by name": {
            "$ref": "./examples/IntegrationAccounts_Get.json"
          }
        }
      },
      "put": {
        "operationId": "IntegrationAccounts_CreateOrUpdate",
        "tags": [
          "IntegrationAccounts"
        ],
        "description": "Creates or updates an integration account.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "integrationAccountName",
            "in": "path",
            "description": "The integration account name.",
            "required": true,
            "type": "string",
            "pattern": "[a-zA-Z0-9_.()-]{0,79}$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "The integration account.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/IntegrationAccount"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'IntegrationAccount' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/IntegrationAccount"
            }
          },
          "201": {
            "description": "Resource 'IntegrationAccount' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/IntegrationAccount"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Create or update an integration account": {
            "$ref": "./examples/IntegrationAccounts_CreateOrUpdate.json"
          }
        }
      },
      "patch": {
        "operationId": "IntegrationAccounts_Update",
        "tags": [
          "IntegrationAccounts"
        ],
        "description": "Updates an integration account.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "integrationAccountName",
            "in": "path",
            "description": "The integration account name.",
            "required": true,
            "type": "string",
            "pattern": "[a-zA-Z0-9_.()-]{0,79}$"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "The integration account.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/IntegrationAccount"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/IntegrationAccount"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Patch an integration account": {
            "$ref": "./examples/IntegrationAccounts_Update.json"
          }
        }
      },
      "delete": {
        "operationId": "IntegrationAccounts_Delete",
        "tags": [
          "IntegrationAccounts"
        ],
        "description": "Deletes an integration account.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "integrationAccountName",
            "in": "path",
            "description": "The integration account name.",
            "required": true,
            "type": "string",
            "pattern": "[a-zA-Z0-9_.()-]{0,79}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete an integration account": {
            "$ref": "./examples/IntegrationAccounts_Delete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/integrationAccounts/{integrationAccountName}/agreements": {
      "get": {
        "operationId": "IntegrationAccountAgreements_List",
        "tags": [
          "IntegrationAccountAgreements"
        ],
        "description": "Gets a list of integration account agreements.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "integrationAccountName",
            "in": "path",
            "description": "The integration account name.",
            "required": true,
            "type": "string",
            "pattern": "[a-zA-Z0-9_.()-]{0,79}$"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The number of items to be included in the result.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The filter to apply on the operation. Options for filters include: AgreementType.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/IntegrationAccountAgreementListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get agreements by integration account name": {
            "$ref": "./examples/IntegrationAccountAgreements_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/integrationAccounts/{integrationAccountName}/agreements/{agreementName}": {
      "get": {
        "operationId": "IntegrationAccountAgreements_Get",
        "tags": [
          "IntegrationAccountAgreements"
        ],
        "description": "Gets an integration account agreement.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "integrationAccountName",
            "in": "path",
            "description": "The integration account name.",
            "required": true,
            "type": "string",
            "pattern": "[a-zA-Z0-9_.()-]{0,79}$"
          },
          {
            "name": "agreementName",
            "in": "path",
            "description": "The integration account agreement name.",
            "required": true,
            "type": "string",
            "pattern": "[a-zA-Z0-9_.()-]{0,79}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/IntegrationAccountAgreement"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get agreement by name": {
            "$ref": "./examples/IntegrationAccountAgreements_Get.json"
          }
        }
      },
      "put": {
        "operationId": "IntegrationAccountAgreements_CreateOrUpdate",
        "tags": [
          "IntegrationAccountAgreements"
        ],
        "description": "Creates or updates an integration account agreement.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "integrationAccountName",
            "in": "path",
            "description": "The integration account name.",
            "required": true,
            "type": "string",
            "pattern": "[a-zA-Z0-9_.()-]{0,79}$"
          },
          {
            "name": "agreementName",
            "in": "path",
            "description": "The integration account agreement name.",
            "required": true,
            "type": "string",
            "pattern": "[a-zA-Z0-9_.()-]{0,79}$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "The integration account agreement.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/IntegrationAccountAgreement"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'IntegrationAccountAgreement' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/IntegrationAccountAgreement"
            }
          },
          "201": {
            "description": "Resource 'IntegrationAccountAgreement' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/IntegrationAccountAgreement"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Create or update an agreement": {
            "$ref": "./examples/IntegrationAccountAgreements_CreateOrUpdate.json"
          }
        }
      },
      "delete": {
        "operationId": "IntegrationAccountAgreements_Delete",
        "tags": [
          "IntegrationAccountAgreements"
        ],
        "description": "Deletes an integration account agreement.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "integrationAccountName",
            "in": "path",
            "description": "The integration account name.",
            "required": true,
            "type": "string",
            "pattern": "[a-zA-Z0-9_.()-]{0,79}$"
          },
          {
            "name": "agreementName",
            "in": "path",
            "description": "The integration account agreement name.",
            "required": true,
            "type": "string",
            "pattern": "[a-zA-Z0-9_.()-]{0,79}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete an agreement": {
            "$ref": "./examples/IntegrationAccountAgreements_Delete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/integrationAccounts/{integrationAccountName}/agreements/{agreementName}/listContentCallbackUrl": {
      "post": {
        "operationId": "IntegrationAccountAgreements_ListContentCallbackUrl",
        "tags": [
          "IntegrationAccountAgreements"
        ],
        "description": "Get the content callback url.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "integrationAccountName",
            "in": "path",
            "description": "The integration account name.",
            "required": true,
            "type": "string",
            "pattern": "[a-zA-Z0-9_.()-]{0,79}$"
          },
          {
            "name": "agreementName",
            "in": "path",
            "description": "The integration account agreement name.",
            "required": true,
            "type": "string",
            "pattern": "[a-zA-Z0-9_.()-]{0,79}$"
          },
          {
            "name": "body",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetCallbackUrlParameters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/WorkflowTriggerCallbackUrl"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get the content callback url": {
            "$ref": "./examples/IntegrationAccountAgreements_ListContentCallbackUrl.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/integrationAccounts/{integrationAccountName}/assemblies": {
      "get": {
        "operationId": "AssemblyDefinitions_List",
        "tags": [
          "AssemblyDefinitions"
        ],
        "description": "List the assemblies for an integration account.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "integrationAccountName",
            "in": "path",
            "description": "The integration account name.",
            "required": true,
            "type": "string",
            "pattern": "[a-zA-Z0-9_.()-]{0,79}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/AssemblyCollection"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/integrationAccounts/{integrationAccountName}/assemblies/{assemblyArtifactName}": {
      "get": {
        "operationId": "AssemblyDefinitions_Get",
        "tags": [
          "AssemblyDefinitions"
        ],
        "description": "Get an assembly for an integration account.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "integrationAccountName",
            "in": "path",
            "description": "The integration account name.",
            "required": true,
            "type": "string",
            "pattern": "[a-zA-Z0-9_.()-]{0,79}$"
          },
          {
            "name": "assemblyArtifactName",
            "in": "path",
            "description": "The assembly artifact name.",
            "required": true,
            "type": "string",
            "pattern": "[a-zA-Z0-9_.()-]{0,79}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/AssemblyDefinition"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "operationId": "AssemblyDefinitions_CreateOrUpdate",
        "tags": [
          "AssemblyDefinitions"
        ],
        "description": "Create or update an assembly for an integration account.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "integrationAccountName",
            "in": "path",
            "description": "The integration account name.",
            "required": true,
            "type": "string",
            "pattern": "[a-zA-Z0-9_.()-]{0,79}$"
          },
          {
            "name": "assemblyArtifactName",
            "in": "path",
            "description": "The assembly artifact name.",
            "required": true,
            "type": "string",
            "pattern": "[a-zA-Z0-9_.()-]{0,79}$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "The assembly artifact.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AssemblyDefinition"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'AssemblyDefinition' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/AssemblyDefinition"
            }
          },
          "201": {
            "description": "Resource 'AssemblyDefinition' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/AssemblyDefinition"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "operationId": "AssemblyDefinitions_Delete",
        "tags": [
          "AssemblyDefinitions"
        ],
        "description": "Delete an assembly for an integration account.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "integrationAccountName",
            "in": "path",
            "description": "The integration account name.",
            "required": true,
            "type": "string",
            "pattern": "[a-zA-Z0-9_.()-]{0,79}$"
          },
          {
            "name": "assemblyArtifactName",
            "in": "path",
            "description": "The assembly artifact name.",
            "required": true,
            "type": "string",
            "pattern": "[a-zA-Z0-9_.()-]{0,79}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/integrationAccounts/{integrationAccountName}/assemblies/{assemblyArtifactName}/listContentCallbackUrl": {
      "post": {
        "operationId": "AssemblyDefinitions_ListContentCallbackUrl",
        "tags": [
          "AssemblyDefinitions"
        ],
        "description": "Get the content callback url for an integration account assembly.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "integrationAccountName",
            "in": "path",
            "description": "The integration account name.",
            "required": true,
            "type": "string",
            "pattern": "[a-zA-Z0-9_.()-]{0,79}$"
          },
          {
            "name": "assemblyArtifactName",
            "in": "path",
            "description": "The assembly artifact name.",
            "required": true,
            "type": "string",
            "pattern": "[a-zA-Z0-9_.()-]{0,79}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/WorkflowTriggerCallbackUrl"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/integrationAccounts/{integrationAccountName}/batchConfigurations": {
      "get": {
        "operationId": "BatchConfigurations_List",
        "tags": [
          "BatchConfigurations"
        ],
        "description": "List the batch configurations for an integration account.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "integrationAccountName",
            "in": "path",
            "description": "The integration account name.",
            "required": true,
            "type": "string",
            "pattern": "[a-zA-Z0-9_.()-]{0,79}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/BatchConfigurationCollection"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/integrationAccounts/{integrationAccountName}/batchConfigurations/{batchConfigurationName}": {
      "get": {
        "operationId": "BatchConfigurations_Get",
        "tags": [
          "BatchConfigurations"
        ],
        "description": "Get a batch configuration for an integration account.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "integrationAccountName",
            "in": "path",
            "description": "The integration account name.",
            "required": true,
            "type": "string",
            "pattern": "[a-zA-Z0-9_.()-]{0,79}$"
          },
          {
            "name": "batchConfigurationName",
            "in": "path",
            "description": "The batch configuration name.",
            "required": true,
            "type": "string",
            "pattern": "[a-zA-Z0-9_.()-]{0,79}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/BatchConfiguration"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "operationId": "BatchConfigurations_CreateOrUpdate",
        "tags": [
          "BatchConfigurations"
        ],
        "description": "Create or update a batch configuration for an integration account.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "integrationAccountName",
            "in": "path",
            "description": "The integration account name.",
            "required": true,
            "type": "string",
            "pattern": "[a-zA-Z0-9_.()-]{0,79}$"
          },
          {
            "name": "batchConfigurationName",
            "in": "path",
            "description": "The batch configuration name.",
            "required": true,
            "type": "string",
            "pattern": "[a-zA-Z0-9_.()-]{0,79}$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "The batch configuration.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BatchConfiguration"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'BatchConfiguration' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/BatchConfiguration"
            }
          },
          "201": {
            "description": "Resource 'BatchConfiguration' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/BatchConfiguration"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "operationId": "BatchConfigurations_Delete",
        "tags": [
          "BatchConfigurations"
        ],
        "description": "Delete a batch configuration for an integration account.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "integrationAccountName",
            "in": "path",
            "description": "The integration account name.",
            "required": true,
            "type": "string",
            "pattern": "[a-zA-Z0-9_.()-]{0,79}$"
          },
          {
            "name": "batchConfigurationName",
            "in": "path",
            "description": "The batch configuration name.",
            "required": true,
            "type": "string",
            "pattern": "[a-zA-Z0-9_.()-]{0,79}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/integrationAccounts/{integrationAccountName}/certificates": {
      "get": {
        "operationId": "IntegrationAccountCertificates_List",
        "tags": [
          "IntegrationAccountCertificates"
        ],
        "description": "Gets a list of integration account certificates.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "integrationAccountName",
            "in": "path",
            "description": "The integration account name.",
            "required": true,
            "type": "string",
            "pattern": "[a-zA-Z0-9_.()-]{0,79}$"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The number of items to be included in the result.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/IntegrationAccountCertificateListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get certificates by integration account name": {
            "$ref": "./examples/IntegrationAccountCertificates_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/integrationAccounts/{integrationAccountName}/certificates/{certificateName}": {
      "get": {
        "operationId": "IntegrationAccountCertificates_Get",
        "tags": [
          "IntegrationAccountCertificates"
        ],
        "description": "Gets an integration account certificate.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "integrationAccountName",
            "in": "path",
            "description": "The integration account name.",
            "required": true,
            "type": "string",
            "pattern": "[a-zA-Z0-9_.()-]{0,79}$"
          },
          {
            "name": "certificateName",
            "in": "path",
            "description": "The integration account certificate name.",
            "required": true,
            "type": "string",
            "pattern": "[a-zA-Z0-9_.()-]{0,79}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/IntegrationAccountCertificate"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get certificate by name": {
            "$ref": "./examples/IntegrationAccountCertificates_Get.json"
          }
        }
      },
      "put": {
        "operationId": "IntegrationAccountCertificates_CreateOrUpdate",
        "tags": [
          "IntegrationAccountCertificates"
        ],
        "description": "Creates or updates an integration account certificate.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "integrationAccountName",
            "in": "path",
            "description": "The integration account name.",
            "required": true,
            "type": "string",
            "pattern": "[a-zA-Z0-9_.()-]{0,79}$"
          },
          {
            "name": "certificateName",
            "in": "path",
            "description": "The integration account certificate name.",
            "required": true,
            "type": "string",
            "pattern": "[a-zA-Z0-9_.()-]{0,79}$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "The integration account certificate.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/IntegrationAccountCertificate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'IntegrationAccountCertificate' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/IntegrationAccountCertificate"
            }
          },
          "201": {
            "description": "Resource 'IntegrationAccountCertificate' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/IntegrationAccountCertificate"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Create or update a certificate": {
            "$ref": "./examples/IntegrationAccountCertificates_CreateOrUpdate.json"
          }
        }
      },
      "delete": {
        "operationId": "IntegrationAccountCertificates_Delete",
        "tags": [
          "IntegrationAccountCertificates"
        ],
        "description": "Deletes an integration account certificate.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "integrationAccountName",
            "in": "path",
            "description": "The integration account name.",
            "required": true,
            "type": "string",
            "pattern": "[a-zA-Z0-9_.()-]{0,79}$"
          },
          {
            "name": "certificateName",
            "in": "path",
            "description": "The integration account certificate name.",
            "required": true,
            "type": "string",
            "pattern": "[a-zA-Z0-9_.()-]{0,79}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete a certificate": {
            "$ref": "./examples/IntegrationAccountCertificates_Delete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/integrationAccounts/{integrationAccountName}/listCallbackUrl": {
      "post": {
        "operationId": "IntegrationAccounts_ListCallbackUrl",
        "tags": [
          "IntegrationAccounts"
        ],
        "description": "Gets the integration account callback URL.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "integrationAccountName",
            "in": "path",
            "description": "The integration account name.",
            "required": true,
            "type": "string",
            "pattern": "[a-zA-Z0-9_.()-]{0,79}$"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The callback URL parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetCallbackUrlParameters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/CallbackUrl"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List IntegrationAccount callback URL": {
            "$ref": "./examples/IntegrationAccounts_ListCallbackUrl.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/integrationAccounts/{integrationAccountName}/listKeyVaultKeys": {
      "post": {
        "operationId": "IntegrationAccounts_ListKeyVaultKeys",
        "tags": [
          "IntegrationAccounts"
        ],
        "description": "Gets the integration account's Key Vault keys.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "integrationAccountName",
            "in": "path",
            "description": "The integration account name.",
            "required": true,
            "type": "string",
            "pattern": "[a-zA-Z0-9_.()-]{0,79}$"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The key vault parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ListKeyVaultKeysDefinition"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/KeyVaultKeyCollection"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get Integration Account callback URL": {
            "$ref": "./examples/IntegrationAccounts_ListKeyVaultKeys.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/integrationAccounts/{integrationAccountName}/logTrackingEvents": {
      "post": {
        "operationId": "IntegrationAccounts_LogTrackingEvents",
        "tags": [
          "IntegrationAccounts"
        ],
        "description": "Logs the integration account's tracking events.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "integrationAccountName",
            "in": "path",
            "description": "The integration account name.",
            "required": true,
            "type": "string",
            "pattern": "[a-zA-Z0-9_.()-]{0,79}$"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The callback URL parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TrackingEventsDefinition"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Log a tracked event": {
            "$ref": "./examples/IntegrationAccounts_LogTrackingEvents.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/integrationAccounts/{integrationAccountName}/maps": {
      "get": {
        "operationId": "IntegrationAccountMaps_List",
        "tags": [
          "IntegrationAccountMaps"
        ],
        "description": "Gets a list of integration account maps.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "integrationAccountName",
            "in": "path",
            "description": "The integration account name.",
            "required": true,
            "type": "string",
            "pattern": "[a-zA-Z0-9_.()-]{0,79}$"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The number of items to be included in the result.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The filter to apply on the operation. Options for filters include: MapType.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/IntegrationAccountMapListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get maps by integration account name": {
            "$ref": "./examples/IntegrationAccountMaps_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/integrationAccounts/{integrationAccountName}/maps/{mapName}": {
      "get": {
        "operationId": "IntegrationAccountMaps_Get",
        "tags": [
          "IntegrationAccountMaps"
        ],
        "description": "Gets an integration account map.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "integrationAccountName",
            "in": "path",
            "description": "The integration account name.",
            "required": true,
            "type": "string",
            "pattern": "[a-zA-Z0-9_.()-]{0,79}$"
          },
          {
            "name": "mapName",
            "in": "path",
            "description": "The integration account map name.",
            "required": true,
            "type": "string",
            "pattern": "[a-zA-Z0-9_.()-]{0,79}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/IntegrationAccountMap"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get map by name": {
            "$ref": "./examples/IntegrationAccountMaps_Get.json"
          }
        }
      },
      "put": {
        "operationId": "IntegrationAccountMaps_CreateOrUpdate",
        "tags": [
          "IntegrationAccountMaps"
        ],
        "description": "Creates or updates an integration account map. If the map is larger than 4 MB, you need to store the map in an Azure blob and use the blob's Shared Access Signature (SAS) URL as the 'contentLink' property value.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "integrationAccountName",
            "in": "path",
            "description": "The integration account name.",
            "required": true,
            "type": "string",
            "pattern": "[a-zA-Z0-9_.()-]{0,79}$"
          },
          {
            "name": "mapName",
            "in": "path",
            "description": "The integration account map name.",
            "required": true,
            "type": "string",
            "pattern": "[a-zA-Z0-9_.()-]{0,79}$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "The integration account map.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/IntegrationAccountMap"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'IntegrationAccountMap' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/IntegrationAccountMap"
            }
          },
          "201": {
            "description": "Resource 'IntegrationAccountMap' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/IntegrationAccountMap"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Create or update a map": {
            "$ref": "./examples/IntegrationAccountMaps_CreateOrUpdate.json"
          },
          "Create or update a map larger than 4 MB": {
            "$ref": "./examples/IntegrationAccountLargeMaps_CreateOrUpdate.json"
          }
        }
      },
      "delete": {
        "operationId": "IntegrationAccountMaps_Delete",
        "tags": [
          "IntegrationAccountMaps"
        ],
        "description": "Deletes an integration account map.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "integrationAccountName",
            "in": "path",
            "description": "The integration account name.",
            "required": true,
            "type": "string",
            "pattern": "[a-zA-Z0-9_.()-]{0,79}$"
          },
          {
            "name": "mapName",
            "in": "path",
            "description": "The integration account map name.",
            "required": true,
            "type": "string",
            "pattern": "[a-zA-Z0-9_.()-]{0,79}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete a map": {
            "$ref": "./examples/IntegrationAccountMaps_Delete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/integrationAccounts/{integrationAccountName}/maps/{mapName}/listContentCallbackUrl": {
      "post": {
        "operationId": "IntegrationAccountMaps_ListContentCallbackUrl",
        "tags": [
          "IntegrationAccountMaps"
        ],
        "description": "Get the content callback url.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "integrationAccountName",
            "in": "path",
            "description": "The integration account name.",
            "required": true,
            "type": "string",
            "pattern": "[a-zA-Z0-9_.()-]{0,79}$"
          },
          {
            "name": "mapName",
            "in": "path",
            "description": "The integration account map name.",
            "required": true,
            "type": "string",
            "pattern": "[a-zA-Z0-9_.()-]{0,79}$"
          },
          {
            "name": "body",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetCallbackUrlParameters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/WorkflowTriggerCallbackUrl"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get the content callback url": {
            "$ref": "./examples/IntegrationAccountMaps_ListContentCallbackUrl.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/integrationAccounts/{integrationAccountName}/partners": {
      "get": {
        "operationId": "IntegrationAccountPartners_List",
        "tags": [
          "IntegrationAccountPartners"
        ],
        "description": "Gets a list of integration account partners.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "integrationAccountName",
            "in": "path",
            "description": "The integration account name.",
            "required": true,
            "type": "string",
            "pattern": "[a-zA-Z0-9_.()-]{0,79}$"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The number of items to be included in the result.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The filter to apply on the operation. Options for filters include: PartnerType.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/IntegrationAccountPartnerListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get partners by integration account name": {
            "$ref": "./examples/IntegrationAccountPartners_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/integrationAccounts/{integrationAccountName}/partners/{partnerName}": {
      "get": {
        "operationId": "IntegrationAccountPartners_Get",
        "tags": [
          "IntegrationAccountPartners"
        ],
        "description": "Gets an integration account partner.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "integrationAccountName",
            "in": "path",
            "description": "The integration account name.",
            "required": true,
            "type": "string",
            "pattern": "[a-zA-Z0-9_.()-]{0,79}$"
          },
          {
            "name": "partnerName",
            "in": "path",
            "description": "The integration account partner name.",
            "required": true,
            "type": "string",
            "pattern": "[a-zA-Z0-9_.()-]{0,79}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/IntegrationAccountPartner"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get partner by name": {
            "$ref": "./examples/IntegrationAccountPartners_Get.json"
          }
        }
      },
      "put": {
        "operationId": "IntegrationAccountPartners_CreateOrUpdate",
        "tags": [
          "IntegrationAccountPartners"
        ],
        "description": "Creates or updates an integration account partner.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "integrationAccountName",
            "in": "path",
            "description": "The integration account name.",
            "required": true,
            "type": "string",
            "pattern": "[a-zA-Z0-9_.()-]{0,79}$"
          },
          {
            "name": "partnerName",
            "in": "path",
            "description": "The integration account partner name.",
            "required": true,
            "type": "string",
            "pattern": "[a-zA-Z0-9_.()-]{0,79}$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "The integration account partner.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/IntegrationAccountPartner"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'IntegrationAccountPartner' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/IntegrationAccountPartner"
            }
          },
          "201": {
            "description": "Resource 'IntegrationAccountPartner' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/IntegrationAccountPartner"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Create or update a partner": {
            "$ref": "./examples/IntegrationAccountPartners_CreateOrUpdate.json"
          }
        }
      },
      "delete": {
        "operationId": "IntegrationAccountPartners_Delete",
        "tags": [
          "IntegrationAccountPartners"
        ],
        "description": "Deletes an integration account partner.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "integrationAccountName",
            "in": "path",
            "description": "The integration account name.",
            "required": true,
            "type": "string",
            "pattern": "[a-zA-Z0-9_.()-]{0,79}$"
          },
          {
            "name": "partnerName",
            "in": "path",
            "description": "The integration account partner name.",
            "required": true,
            "type": "string",
            "pattern": "[a-zA-Z0-9_.()-]{0,79}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete a partner": {
            "$ref": "./examples/IntegrationAccountPartners_Delete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/integrationAccounts/{integrationAccountName}/partners/{partnerName}/listContentCallbackUrl": {
      "post": {
        "operationId": "IntegrationAccountPartners_ListContentCallbackUrl",
        "tags": [
          "IntegrationAccountPartners"
        ],
        "description": "Get the content callback url.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "integrationAccountName",
            "in": "path",
            "description": "The integration account name.",
            "required": true,
            "type": "string",
            "pattern": "[a-zA-Z0-9_.()-]{0,79}$"
          },
          {
            "name": "partnerName",
            "in": "path",
            "description": "The integration account partner name.",
            "required": true,
            "type": "string",
            "pattern": "[a-zA-Z0-9_.()-]{0,79}$"
          },
          {
            "name": "body",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetCallbackUrlParameters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/WorkflowTriggerCallbackUrl"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get the content callback url": {
            "$ref": "./examples/IntegrationAccountPartners_ListContentCallbackUrl.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/integrationAccounts/{integrationAccountName}/regenerateAccessKey": {
      "post": {
        "operationId": "IntegrationAccounts_RegenerateAccessKey",
        "tags": [
          "IntegrationAccounts"
        ],
        "description": "Regenerates the integration account access key.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "integrationAccountName",
            "in": "path",
            "description": "The integration account name.",
            "required": true,
            "type": "string",
            "pattern": "[a-zA-Z0-9_.()-]{0,79}$"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The access key type.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RegenerateActionParameter"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/IntegrationAccount"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Regenerate access key": {
            "$ref": "./examples/IntegrationAccounts_RegenerateAccessKey.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/integrationAccounts/{integrationAccountName}/schemas": {
      "get": {
        "operationId": "IntegrationAccountSchemas_List",
        "tags": [
          "IntegrationAccountSchemas"
        ],
        "description": "Gets a list of integration account schemas.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "integrationAccountName",
            "in": "path",
            "description": "The integration account name.",
            "required": true,
            "type": "string",
            "pattern": "[a-zA-Z0-9_.()-]{0,79}$"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The number of items to be included in the result.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The filter to apply on the operation. Options for filters include: SchemaType.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/IntegrationAccountSchemaListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get schemas by integration account name": {
            "$ref": "./examples/IntegrationAccountSchemas_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/integrationAccounts/{integrationAccountName}/schemas/{schemaName}": {
      "get": {
        "operationId": "IntegrationAccountSchemas_Get",
        "tags": [
          "IntegrationAccountSchemas"
        ],
        "description": "Gets an integration account schema.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "integrationAccountName",
            "in": "path",
            "description": "The integration account name.",
            "required": true,
            "type": "string",
            "pattern": "[a-zA-Z0-9_.()-]{0,79}$"
          },
          {
            "name": "schemaName",
            "in": "path",
            "description": "The integration account schema name.",
            "required": true,
            "type": "string",
            "pattern": "[a-zA-Z0-9_.()-]{0,79}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/IntegrationAccountSchema"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get schema by name": {
            "$ref": "./examples/IntegrationAccountSchemas_Get.json"
          }
        }
      },
      "put": {
        "operationId": "IntegrationAccountSchemas_CreateOrUpdate",
        "tags": [
          "IntegrationAccountSchemas"
        ],
        "description": "Creates or updates an integration account schema.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "integrationAccountName",
            "in": "path",
            "description": "The integration account name.",
            "required": true,
            "type": "string",
            "pattern": "[a-zA-Z0-9_.()-]{0,79}$"
          },
          {
            "name": "schemaName",
            "in": "path",
            "description": "The integration account schema name.",
            "required": true,
            "type": "string",
            "pattern": "[a-zA-Z0-9_.()-]{0,79}$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "The integration account schema.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/IntegrationAccountSchema"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'IntegrationAccountSchema' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/IntegrationAccountSchema"
            }
          },
          "201": {
            "description": "Resource 'IntegrationAccountSchema' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/IntegrationAccountSchema"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Create or update schema": {
            "$ref": "./examples/IntegrationAccountSchemas_CreateOrUpdate.json"
          }
        }
      },
      "delete": {
        "operationId": "IntegrationAccountSchemas_Delete",
        "tags": [
          "IntegrationAccountSchemas"
        ],
        "description": "Deletes an integration account schema.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "integrationAccountName",
            "in": "path",
            "description": "The integration account name.",
            "required": true,
            "type": "string",
            "pattern": "[a-zA-Z0-9_.()-]{0,79}$"
          },
          {
            "name": "schemaName",
            "in": "path",
            "description": "The integration account schema name.",
            "required": true,
            "type": "string",
            "pattern": "[a-zA-Z0-9_.()-]{0,79}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete a schema by name": {
            "$ref": "./examples/IntegrationAccountSchemas_Delete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/integrationAccounts/{integrationAccountName}/schemas/{schemaName}/listContentCallbackUrl": {
      "post": {
        "operationId": "IntegrationAccountSchemas_ListContentCallbackUrl",
        "tags": [
          "IntegrationAccountSchemas"
        ],
        "description": "Get the content callback url.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "integrationAccountName",
            "in": "path",
            "description": "The integration account name.",
            "required": true,
            "type": "string",
            "pattern": "[a-zA-Z0-9_.()-]{0,79}$"
          },
          {
            "name": "schemaName",
            "in": "path",
            "description": "The integration account schema name.",
            "required": true,
            "type": "string",
            "pattern": "[a-zA-Z0-9_.()-]{0,79}$"
          },
          {
            "name": "body",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetCallbackUrlParameters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/WorkflowTriggerCallbackUrl"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get the content callback url": {
            "$ref": "./examples/IntegrationAccountSchemas_ListContentCallbackUrl.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/integrationAccounts/{integrationAccountName}/sessions": {
      "get": {
        "operationId": "IntegrationAccountSessions_List",
        "tags": [
          "IntegrationAccountSessions"
        ],
        "description": "Gets a list of integration account sessions.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "integrationAccountName",
            "in": "path",
            "description": "The integration account name.",
            "required": true,
            "type": "string",
            "pattern": "[a-zA-Z0-9_.()-]{0,79}$"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The number of items to be included in the result.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The filter to apply on the operation. Options for filters include: ChangedTime.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/IntegrationAccountSessionListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get a list of integration account sessions": {
            "$ref": "./examples/IntegrationAccountSessions_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/integrationAccounts/{integrationAccountName}/sessions/{sessionName}": {
      "get": {
        "operationId": "IntegrationAccountSessions_Get",
        "tags": [
          "IntegrationAccountSessions"
        ],
        "description": "Gets an integration account session.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "integrationAccountName",
            "in": "path",
            "description": "The integration account name.",
            "required": true,
            "type": "string",
            "pattern": "[a-zA-Z0-9_.()-]{0,79}$"
          },
          {
            "name": "sessionName",
            "in": "path",
            "description": "The integration account session name.",
            "required": true,
            "type": "string",
            "pattern": "[a-zA-Z0-9_.()-]{0,79}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/IntegrationAccountSession"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get an integration account session": {
            "$ref": "./examples/IntegrationAccountSessions_Get.json"
          }
        }
      },
      "put": {
        "operationId": "IntegrationAccountSessions_CreateOrUpdate",
        "tags": [
          "IntegrationAccountSessions"
        ],
        "description": "Creates or updates an integration account session.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "integrationAccountName",
            "in": "path",
            "description": "The integration account name.",
            "required": true,
            "type": "string",
            "pattern": "[a-zA-Z0-9_.()-]{0,79}$"
          },
          {
            "name": "sessionName",
            "in": "path",
            "description": "The integration account session name.",
            "required": true,
            "type": "string",
            "pattern": "[a-zA-Z0-9_.()-]{0,79}$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "The integration account session.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/IntegrationAccountSession"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'IntegrationAccountSession' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/IntegrationAccountSession"
            }
          },
          "201": {
            "description": "Resource 'IntegrationAccountSession' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/IntegrationAccountSession"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Create or update an integration account session": {
            "$ref": "./examples/IntegrationAccountSessions_CreateOrUpdate.json"
          }
        }
      },
      "delete": {
        "operationId": "IntegrationAccountSessions_Delete",
        "tags": [
          "IntegrationAccountSessions"
        ],
        "description": "Deletes an integration account session.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "integrationAccountName",
            "in": "path",
            "description": "The integration account name.",
            "required": true,
            "type": "string",
            "pattern": "[a-zA-Z0-9_.()-]{0,79}$"
          },
          {
            "name": "sessionName",
            "in": "path",
            "description": "The integration account session name.",
            "required": true,
            "type": "string",
            "pattern": "[a-zA-Z0-9_.()-]{0,79}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete an integration account session": {
            "$ref": "./examples/IntegrationAccountSessions_Delete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/integrationServiceEnvironments": {
      "get": {
        "operationId": "IntegrationServiceEnvironments_ListByResourceGroup",
        "tags": [
          "IntegrationServiceEnvironments"
        ],
        "description": "Gets a list of integration service environments by resource group.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The number of items to be included in the result.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/IntegrationServiceEnvironmentListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List integration service environments by resource group name": {
            "$ref": "./examples/IntegrationServiceEnvironments_ListByResourceGroup.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/locations/{location}/workflows/{workflowName}/validate/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/locations/{location}/{workflowName}/validateByLocation": {
      "post": {
        "operationId": "WorkflowsOperations_ValidateByLocation",
        "tags": [
          "WorkflowsOperations"
        ],
        "description": "Validates the workflow definition.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/LocationParameter"
          },
          {
            "name": "workflowName",
            "in": "path",
            "description": "The workflow name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "validate",
            "in": "body",
            "description": "The workflow.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Workflow"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/templates": {
      "get": {
        "operationId": "Templates_ListByResourceGroup",
        "tags": [
          "Templates"
        ],
        "description": "Gets a list of templates by resource group.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The number of items to be included in the result.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The filter to apply on the operation. Options for filters include: State, Trigger, and ReferencedResourceId.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/TemplateListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/templates/{templateName}": {
      "get": {
        "operationId": "Templates_Get",
        "tags": [
          "Templates"
        ],
        "description": "Gets a template.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "templateName",
            "in": "path",
            "description": "The template name.",
            "required": true,
            "type": "string",
            "pattern": "[a-zA-Z0-9_.()-]{0,79}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Template"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "operationId": "Templates_CreateOrUpdate",
        "tags": [
          "Templates"
        ],
        "description": "Creates or updates a template.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "templateName",
            "in": "path",
            "description": "The template name.",
            "required": true,
            "type": "string",
            "pattern": "[a-zA-Z0-9_.()-]{0,79}$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "The template.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Template"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'Template' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/Template"
            }
          },
          "201": {
            "description": "Resource 'Template' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/Template"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "patch": {
        "operationId": "Templates_Update",
        "tags": [
          "Templates"
        ],
        "description": "Updates a template.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "templateName",
            "in": "path",
            "description": "The template name.",
            "required": true,
            "type": "string",
            "pattern": "[a-zA-Z0-9_.()-]{0,79}$"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "The resource properties to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TemplateUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Template"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "operationId": "Templates_Delete",
        "tags": [
          "Templates"
        ],
        "description": "Deletes a template.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "templateName",
            "in": "path",
            "description": "The template name.",
            "required": true,
            "type": "string",
            "pattern": "[a-zA-Z0-9_.()-]{0,79}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/workflows": {
      "get": {
        "operationId": "Workflows_ListByResourceGroup",
        "tags": [
          "Workflows"
        ],
        "description": "Gets a list of workflows by resource group.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The number of items to be included in the result.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The filter to apply on the operation. Options for filters include: State, Trigger, and ReferencedResourceId.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/WorkflowListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List all workflows in a resource group": {
            "$ref": "./examples/Workflows_ListByResourceGroup.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/workflows/{workflowName}": {
      "get": {
        "operationId": "Workflows_Get",
        "tags": [
          "Workflows"
        ],
        "description": "Gets a workflow.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "workflowName",
            "in": "path",
            "description": "The workflow name.",
            "required": true,
            "type": "string",
            "pattern": "[a-zA-Z0-9_.()-]{0,79}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Workflow"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get a workflow": {
            "$ref": "./examples/Workflows_Get.json"
          }
        }
      },
      "put": {
        "operationId": "Workflows_CreateOrUpdate",
        "tags": [
          "Workflows"
        ],
        "description": "Creates or updates a workflow.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "workflowName",
            "in": "path",
            "description": "The workflow name.",
            "required": true,
            "type": "string",
            "pattern": "[a-zA-Z0-9_.()-]{0,79}$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "The workflow.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Workflow"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'Workflow' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/Workflow"
            }
          },
          "201": {
            "description": "Resource 'Workflow' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/Workflow"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Create or update a workflow": {
            "$ref": "./examples/Workflows_CreateOrUpdate.json"
          }
        }
      },
      "patch": {
        "operationId": "Workflows_Update",
        "tags": [
          "Workflows"
        ],
        "description": "Updates a workflow.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "workflowName",
            "in": "path",
            "description": "The workflow name.",
            "required": true,
            "type": "string",
            "pattern": "[a-zA-Z0-9_.()-]{0,79}$"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "The resource properties to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Azure.ResourceManager.Foundations.ArmTagsProperty"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Workflow"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Patch a workflow": {
            "$ref": "./examples/Workflows_Update.json"
          }
        }
      },
      "delete": {
        "operationId": "Workflows_Delete",
        "tags": [
          "Workflows"
        ],
        "description": "Deletes a workflow.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "workflowName",
            "in": "path",
            "description": "The workflow name.",
            "required": true,
            "type": "string",
            "pattern": "[a-zA-Z0-9_.()-]{0,79}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete a workflow": {
            "$ref": "./examples/Workflows_Delete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/workflows/{workflowName}/disable": {
      "post": {
        "operationId": "Workflows_Disable",
        "tags": [
          "Workflows"
        ],
        "description": "Disables a workflow.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "workflowName",
            "in": "path",
            "description": "The workflow name.",
            "required": true,
            "type": "string",
            "pattern": "[a-zA-Z0-9_.()-]{0,79}$"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Disable a workflow": {
            "$ref": "./examples/Workflows_Disable.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/workflows/{workflowName}/enable": {
      "post": {
        "operationId": "Workflows_Enable",
        "tags": [
          "Workflows"
        ],
        "description": "Enables a workflow.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "workflowName",
            "in": "path",
            "description": "The workflow name.",
            "required": true,
            "type": "string",
            "pattern": "[a-zA-Z0-9_.()-]{0,79}$"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Enable a workflow": {
            "$ref": "./examples/Workflows_Enable.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/workflows/{workflowName}/generateUpgradedDefinition": {
      "post": {
        "operationId": "Workflows_GenerateUpgradedDefinition",
        "tags": [
          "Workflows"
        ],
        "description": "Generates the upgraded definition for a workflow.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "workflowName",
            "in": "path",
            "description": "The workflow name.",
            "required": true,
            "type": "string",
            "pattern": "[a-zA-Z0-9_.()-]{0,79}$"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Parameters for generating an upgraded definition.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GenerateUpgradedDefinitionParameters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "additionalProperties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Generate an upgraded definition": {
            "$ref": "./examples/Workflows_GenerateUpgradedDefinition.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/workflows/{workflowName}/listCallbackUrl": {
      "post": {
        "operationId": "Workflows_ListCallbackUrl",
        "tags": [
          "Workflows"
        ],
        "description": "Get the workflow callback Url.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "workflowName",
            "in": "path",
            "description": "The workflow name.",
            "required": true,
            "type": "string",
            "pattern": "[a-zA-Z0-9_.()-]{0,79}$"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Which callback url to list.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetCallbackUrlParameters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/WorkflowTriggerCallbackUrl"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get callback url": {
            "$ref": "./examples/Workflows_ListCallbackUrl.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/workflows/{workflowName}/listSwagger": {
      "post": {
        "operationId": "Workflows_ListSwagger",
        "tags": [
          "Workflows"
        ],
        "description": "Gets an OpenAPI definition for the workflow.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "workflowName",
            "in": "path",
            "description": "The workflow name.",
            "required": true,
            "type": "string",
            "pattern": "[a-zA-Z0-9_.()-]{0,79}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "additionalProperties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get the swagger for a workflow": {
            "$ref": "./examples/Workflows_ListSwagger.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/workflows/{workflowName}/move": {
      "post": {
        "operationId": "Workflows_Move",
        "tags": [
          "Workflows"
        ],
        "description": "Moves an existing workflow.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "workflowName",
            "in": "path",
            "description": "The workflow name.",
            "required": true,
            "type": "string",
            "pattern": "[a-zA-Z0-9_.()-]{0,79}$"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The workflow to move.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WorkflowReference"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded."
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Move a workflow": {
            "$ref": "./examples/Workflows_Move.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/workflows/{workflowName}/regenerateAccessKey": {
      "post": {
        "operationId": "Workflows_RegenerateAccessKey",
        "tags": [
          "Workflows"
        ],
        "description": "Regenerates the callback URL access key for request triggers.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "workflowName",
            "in": "path",
            "description": "The workflow name.",
            "required": true,
            "type": "string",
            "pattern": "[a-zA-Z0-9_.()-]{0,79}$"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The access key type.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RegenerateActionParameter"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Regenerate the callback URL access key for request triggers": {
            "$ref": "./examples/Workflows_RegenerateAccessKey.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/workflows/{workflowName}/runs/{runName}": {
      "get": {
        "operationId": "WorkflowRuns_Get",
        "tags": [
          "WorkflowRuns"
        ],
        "description": "Gets a workflow run.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "workflowName",
            "in": "path",
            "description": "The workflow name.",
            "required": true,
            "type": "string",
            "pattern": "[a-zA-Z0-9_.()-]{0,79}$"
          },
          {
            "name": "runName",
            "in": "path",
            "description": "The workflow run name.",
            "required": true,
            "type": "string",
            "pattern": "[a-zA-Z0-9_.()-]{0,79}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/WorkflowRun"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get a run for a workflow": {
            "$ref": "./examples/WorkflowRuns_Get.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/workflows/{workflowName}/runs/{runName}/actions": {
      "get": {
        "operationId": "WorkflowRunActions_List",
        "tags": [
          "WorkflowRunActions"
        ],
        "description": "Gets a list of workflow run actions.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "workflowName",
            "in": "path",
            "description": "The workflow name.",
            "required": true,
            "type": "string",
            "pattern": "[a-zA-Z0-9_.()-]{0,79}$"
          },
          {
            "name": "runName",
            "in": "path",
            "description": "The workflow run name.",
            "required": true,
            "type": "string",
            "pattern": "[a-zA-Z0-9_.()-]{0,79}$"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The number of items to be included in the result.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The filter to apply on the operation. Options for filters include: Status.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/WorkflowRunActionListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List a workflow run actions": {
            "$ref": "./examples/WorkflowRunActions_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/workflows/{workflowName}/runs/{runName}/actions/{actionName}": {
      "get": {
        "operationId": "WorkflowRunActions_Get",
        "tags": [
          "WorkflowRunActions"
        ],
        "description": "Gets a workflow run action.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "workflowName",
            "in": "path",
            "description": "The workflow name.",
            "required": true,
            "type": "string",
            "pattern": "[a-zA-Z0-9_.()-]{0,79}$"
          },
          {
            "name": "runName",
            "in": "path",
            "description": "The workflow run name.",
            "required": true,
            "type": "string",
            "pattern": "[a-zA-Z0-9_.()-]{0,79}$"
          },
          {
            "name": "actionName",
            "in": "path",
            "description": "The workflow action name.",
            "required": true,
            "type": "string",
            "pattern": "[a-zA-Z0-9_.()-]{0,79}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/WorkflowRunAction"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get a workflow run action": {
            "$ref": "./examples/WorkflowRunActions_Get.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/workflows/{workflowName}/runs/{runName}/actions/{actionName}/listExpressionTraces": {
      "post": {
        "operationId": "WorkflowRunActions_ListExpressionTraces",
        "tags": [
          "WorkflowRunActions"
        ],
        "description": "Lists a workflow run expression trace.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "workflowName",
            "in": "path",
            "description": "The workflow name.",
            "required": true,
            "type": "string",
            "pattern": "[a-zA-Z0-9_.()-]{0,79}$"
          },
          {
            "name": "runName",
            "in": "path",
            "description": "The workflow run name.",
            "required": true,
            "type": "string",
            "pattern": "[a-zA-Z0-9_.()-]{0,79}$"
          },
          {
            "name": "actionName",
            "in": "path",
            "description": "The workflow action name.",
            "required": true,
            "type": "string",
            "pattern": "[a-zA-Z0-9_.()-]{0,79}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ExpressionTraces"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List expression traces": {
            "$ref": "./examples/WorkflowRunActions_ListExpressionTraces.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/workflows/{workflowName}/runs/{runName}/actions/{actionName}/repetitions": {
      "get": {
        "operationId": "WorkflowRunActionRepetitionDefinitions_List",
        "tags": [
          "WorkflowRunActionRepetitionDefinitions"
        ],
        "description": "Get all of a workflow run action repetitions.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "workflowName",
            "in": "path",
            "description": "The workflow name.",
            "required": true,
            "type": "string",
            "pattern": "[a-zA-Z0-9_.()-]{0,79}$"
          },
          {
            "name": "runName",
            "in": "path",
            "description": "The workflow run name.",
            "required": true,
            "type": "string",
            "pattern": "[a-zA-Z0-9_.()-]{0,79}$"
          },
          {
            "name": "actionName",
            "in": "path",
            "description": "The workflow action name.",
            "required": true,
            "type": "string",
            "pattern": "[a-zA-Z0-9_.()-]{0,79}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/WorkflowRunActionRepetitionDefinitionCollection"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/workflows/{workflowName}/runs/{runName}/actions/{actionName}/repetitions/{repetitionName}": {
      "get": {
        "operationId": "WorkflowRunActionRepetitionDefinitions_Get",
        "tags": [
          "WorkflowRunActionRepetitionDefinitions"
        ],
        "description": "Get a workflow run action repetition.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "workflowName",
            "in": "path",
            "description": "The workflow name.",
            "required": true,
            "type": "string",
            "pattern": "[a-zA-Z0-9_.()-]{0,79}$"
          },
          {
            "name": "runName",
            "in": "path",
            "description": "The workflow run name.",
            "required": true,
            "type": "string",
            "pattern": "[a-zA-Z0-9_.()-]{0,79}$"
          },
          {
            "name": "actionName",
            "in": "path",
            "description": "The workflow action name.",
            "required": true,
            "type": "string",
            "pattern": "[a-zA-Z0-9_.()-]{0,79}$"
          },
          {
            "name": "repetitionName",
            "in": "path",
            "description": "The workflow repetition.",
            "required": true,
            "type": "string",
            "pattern": "[a-zA-Z0-9_.()-]{0,79}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/WorkflowRunActionRepetitionDefinition"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/workflows/{workflowName}/runs/{runName}/actions/{actionName}/repetitions/{repetitionName}/listExpressionTraces": {
      "post": {
        "operationId": "WorkflowRunActionRepetitionDefinitions_ListExpressionTraces",
        "tags": [
          "WorkflowRunActionRepetitionDefinitions"
        ],
        "description": "Lists a workflow run expression trace.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "workflowName",
            "in": "path",
            "description": "The workflow name.",
            "required": true,
            "type": "string",
            "pattern": "[a-zA-Z0-9_.()-]{0,79}$"
          },
          {
            "name": "runName",
            "in": "path",
            "description": "The workflow run name.",
            "required": true,
            "type": "string",
            "pattern": "[a-zA-Z0-9_.()-]{0,79}$"
          },
          {
            "name": "actionName",
            "in": "path",
            "description": "The workflow action name.",
            "required": true,
            "type": "string",
            "pattern": "[a-zA-Z0-9_.()-]{0,79}$"
          },
          {
            "name": "repetitionName",
            "in": "path",
            "description": "The workflow repetition.",
            "required": true,
            "type": "string",
            "pattern": "[a-zA-Z0-9_.()-]{0,79}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ExpressionTraces"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/workflows/{workflowName}/runs/{runName}/actions/{actionName}/repetitions/{repetitionName}/requestHistories": {
      "get": {
        "operationId": "RequestHistories_List",
        "tags": [
          "RequestHistories"
        ],
        "description": "List a workflow run repetition request history.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "workflowName",
            "in": "path",
            "description": "The workflow name.",
            "required": true,
            "type": "string",
            "pattern": "[a-zA-Z0-9_.()-]{0,79}$"
          },
          {
            "name": "runName",
            "in": "path",
            "description": "The workflow run name.",
            "required": true,
            "type": "string",
            "pattern": "[a-zA-Z0-9_.()-]{0,79}$"
          },
          {
            "name": "actionName",
            "in": "path",
            "description": "The workflow action name.",
            "required": true,
            "type": "string",
            "pattern": "[a-zA-Z0-9_.()-]{0,79}$"
          },
          {
            "name": "repetitionName",
            "in": "path",
            "description": "The workflow repetition.",
            "required": true,
            "type": "string",
            "pattern": "[a-zA-Z0-9_.()-]{0,79}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/RequestHistoryListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/workflows/{workflowName}/runs/{runName}/actions/{actionName}/repetitions/{repetitionName}/requestHistories/{requestHistoryName}": {
      "get": {
        "operationId": "RequestHistories_Get",
        "tags": [
          "RequestHistories"
        ],
        "description": "Gets a workflow run repetition request history.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "workflowName",
            "in": "path",
            "description": "The workflow name.",
            "required": true,
            "type": "string",
            "pattern": "[a-zA-Z0-9_.()-]{0,79}$"
          },
          {
            "name": "runName",
            "in": "path",
            "description": "The workflow run name.",
            "required": true,
            "type": "string",
            "pattern": "[a-zA-Z0-9_.()-]{0,79}$"
          },
          {
            "name": "actionName",
            "in": "path",
            "description": "The workflow action name.",
            "required": true,
            "type": "string",
            "pattern": "[a-zA-Z0-9_.()-]{0,79}$"
          },
          {
            "name": "repetitionName",
            "in": "path",
            "description": "The workflow repetition.",
            "required": true,
            "type": "string",
            "pattern": "[a-zA-Z0-9_.()-]{0,79}$"
          },
          {
            "name": "requestHistoryName",
            "in": "path",
            "description": "The request history name.",
            "required": true,
            "type": "string",
            "pattern": "[a-zA-Z0-9_.()-]{0,79}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/RequestHistory"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/workflows/{workflowName}/runs/{runName}/actions/{actionName}/requestHistories/{requestHistoryName}/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/{workflowName}/{runName}/{actionName}/{requestHistoryName}": {
      "get": {
        "operationId": "WorkflowRunActionRequestHistoriesOperations_Get",
        "tags": [
          "WorkflowRunActionRequestHistoriesOperations"
        ],
        "description": "Gets a workflow run request history.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "workflowName",
            "in": "path",
            "description": "The workflow name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "runName",
            "in": "path",
            "description": "The workflow run name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "actionName",
            "in": "path",
            "description": "The workflow action name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "requestHistoryName",
            "in": "path",
            "description": "The request history name.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/RequestHistory"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/workflows/{workflowName}/runs/{runName}/actions/{actionName}/requestHistories/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/{workflowName}/{runName}/{actionName}": {
      "get": {
        "operationId": "WorkflowRunActionRequestHistoriesOperations_List",
        "tags": [
          "WorkflowRunActionRequestHistoriesOperations"
        ],
        "description": "List a workflow run request history.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "workflowName",
            "in": "path",
            "description": "The workflow name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "runName",
            "in": "path",
            "description": "The workflow run name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "actionName",
            "in": "path",
            "description": "The workflow action name.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/RequestHistoryListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/workflows/{workflowName}/runs/{runName}/actions/{actionName}/scopeRepetitions/{repetitionName}/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/{workflowName}/{runName}/{actionName}/{repetitionName}": {
      "get": {
        "operationId": "WorkflowRunActionScopeRepetitionsOperations_Get",
        "tags": [
          "WorkflowRunActionScopeRepetitionsOperations"
        ],
        "description": "Get a workflow run action scoped repetition.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "workflowName",
            "in": "path",
            "description": "The workflow name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "runName",
            "in": "path",
            "description": "The workflow run name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "actionName",
            "in": "path",
            "description": "The workflow action name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "repetitionName",
            "in": "path",
            "description": "The workflow repetition.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/WorkflowRunActionRepetitionDefinition"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/workflows/{workflowName}/runs/{runName}/actions/{actionName}/scopeRepetitions/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/{workflowName}/{runName}/{actionName}": {
      "get": {
        "operationId": "WorkflowRunActionScopeRepetitionsOperations_List",
        "tags": [
          "WorkflowRunActionScopeRepetitionsOperations"
        ],
        "description": "List the workflow run action scoped repetitions.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "workflowName",
            "in": "path",
            "description": "The workflow name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "runName",
            "in": "path",
            "description": "The workflow run name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "actionName",
            "in": "path",
            "description": "The workflow action name.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/WorkflowRunActionRepetitionDefinitionCollection"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/workflows/{workflowName}/runs/{runName}/cancel": {
      "post": {
        "operationId": "WorkflowRuns_Cancel",
        "tags": [
          "WorkflowRuns"
        ],
        "description": "Cancels a workflow run.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "workflowName",
            "in": "path",
            "description": "The workflow name.",
            "required": true,
            "type": "string",
            "pattern": "[a-zA-Z0-9_.()-]{0,79}$"
          },
          {
            "name": "runName",
            "in": "path",
            "description": "The workflow run name.",
            "required": true,
            "type": "string",
            "pattern": "[a-zA-Z0-9_.()-]{0,79}$"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Cancel a workflow run": {
            "$ref": "./examples/WorkflowRuns_Cancel.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/workflows/{workflowName}/runs/{runName}/operations/{operationId}/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/{workflowName}/{runName}/{operationId}": {
      "get": {
        "operationId": "WorkflowRunOperationsOperations_Get",
        "tags": [
          "WorkflowRunOperationsOperations"
        ],
        "description": "Gets an operation for a run.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "workflowName",
            "in": "path",
            "description": "The workflow name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "runName",
            "in": "path",
            "description": "The workflow run name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "operationId",
            "in": "path",
            "description": "The workflow operation id.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/WorkflowRun"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/workflows/{workflowName}/runs/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/{workflowName}": {
      "get": {
        "operationId": "WorkflowRunsOperations_List",
        "tags": [
          "WorkflowRunsOperations"
        ],
        "description": "Gets a list of workflow runs.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "workflowName",
            "in": "path",
            "description": "The workflow name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The number of items to be included in the result.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The filter to apply on the operation. Options for filters include: Status, StartTime, and ClientTrackingId.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/WorkflowRunListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/workflows/{workflowName}/triggers": {
      "get": {
        "operationId": "WorkflowTriggers_List",
        "tags": [
          "WorkflowTriggers"
        ],
        "description": "Gets a list of workflow triggers.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "workflowName",
            "in": "path",
            "description": "The workflow name.",
            "required": true,
            "type": "string",
            "pattern": "[a-zA-Z0-9_.()-]{0,79}$"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The number of items to be included in the result.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The filter to apply on the operation.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/WorkflowTriggerListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List workflow triggers": {
            "$ref": "./examples/WorkflowTriggers_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/workflows/{workflowName}/triggers/{triggerName}": {
      "get": {
        "operationId": "WorkflowTriggers_Get",
        "tags": [
          "WorkflowTriggers"
        ],
        "description": "Gets a workflow trigger.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "workflowName",
            "in": "path",
            "description": "The workflow name.",
            "required": true,
            "type": "string",
            "pattern": "[a-zA-Z0-9_.()-]{0,79}$"
          },
          {
            "name": "triggerName",
            "in": "path",
            "description": "The workflow trigger name.",
            "required": true,
            "type": "string",
            "pattern": "[a-zA-Z0-9_.()-]{0,79}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/WorkflowTrigger"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get a workflow trigger": {
            "$ref": "./examples/WorkflowTriggers_Get.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/workflows/{workflowName}/triggers/{triggerName}/histories": {
      "get": {
        "operationId": "WorkflowTriggerHistories_List",
        "tags": [
          "WorkflowTriggerHistories"
        ],
        "description": "Gets a list of workflow trigger histories.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "workflowName",
            "in": "path",
            "description": "The workflow name.",
            "required": true,
            "type": "string",
            "pattern": "[a-zA-Z0-9_.()-]{0,79}$"
          },
          {
            "name": "triggerName",
            "in": "path",
            "description": "The workflow trigger name.",
            "required": true,
            "type": "string",
            "pattern": "[a-zA-Z0-9_.()-]{0,79}$"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The number of items to be included in the result.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The filter to apply on the operation. Options for filters include: Status, StartTime, and ClientTrackingId.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/WorkflowTriggerHistoryListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List a workflow trigger history": {
            "$ref": "./examples/WorkflowTriggerHistories_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/workflows/{workflowName}/triggers/{triggerName}/histories/{historyName}": {
      "get": {
        "operationId": "WorkflowTriggerHistories_Get",
        "tags": [
          "WorkflowTriggerHistories"
        ],
        "description": "Gets a workflow trigger history.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "workflowName",
            "in": "path",
            "description": "The workflow name.",
            "required": true,
            "type": "string",
            "pattern": "[a-zA-Z0-9_.()-]{0,79}$"
          },
          {
            "name": "triggerName",
            "in": "path",
            "description": "The workflow trigger name.",
            "required": true,
            "type": "string",
            "pattern": "[a-zA-Z0-9_.()-]{0,79}$"
          },
          {
            "name": "historyName",
            "in": "path",
            "description": "The workflow trigger history name. Corresponds to the run name for triggers that resulted in a run.",
            "required": true,
            "type": "string",
            "pattern": "[a-zA-Z0-9_.()-]{0,79}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/WorkflowTriggerHistory"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get a workflow trigger history": {
            "$ref": "./examples/WorkflowTriggerHistories_Get.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/workflows/{workflowName}/triggers/{triggerName}/histories/{historyName}/resubmit": {
      "post": {
        "operationId": "WorkflowTriggerHistories_Resubmit",
        "tags": [
          "WorkflowTriggerHistories"
        ],
        "description": "Resubmits a workflow run based on the trigger history.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "workflowName",
            "in": "path",
            "description": "The workflow name.",
            "required": true,
            "type": "string",
            "pattern": "[a-zA-Z0-9_.()-]{0,79}$"
          },
          {
            "name": "triggerName",
            "in": "path",
            "description": "The workflow trigger name.",
            "required": true,
            "type": "string",
            "pattern": "[a-zA-Z0-9_.()-]{0,79}$"
          },
          {
            "name": "historyName",
            "in": "path",
            "description": "The workflow trigger history name. Corresponds to the run name for triggers that resulted in a run.",
            "required": true,
            "type": "string",
            "pattern": "[a-zA-Z0-9_.()-]{0,79}$"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Resubmit a workflow run based on the trigger history": {
            "$ref": "./examples/WorkflowTriggerHistories_Resubmit.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/workflows/{workflowName}/triggers/{triggerName}/json": {
      "get": {
        "operationId": "WorkflowTriggers_GetSchemaJson",
        "tags": [
          "WorkflowTriggers"
        ],
        "description": "Get the trigger schema as JSON.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "workflowName",
            "in": "path",
            "description": "The workflow name.",
            "required": true,
            "type": "string",
            "pattern": "[a-zA-Z0-9_.()-]{0,79}$"
          },
          {
            "name": "triggerName",
            "in": "path",
            "description": "The workflow trigger name.",
            "required": true,
            "type": "string",
            "pattern": "[a-zA-Z0-9_.()-]{0,79}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/JsonSchema"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get trigger schema": {
            "$ref": "./examples/WorkflowTriggers_GetSchemaJson.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/workflows/{workflowName}/triggers/{triggerName}/listCallbackUrl": {
      "post": {
        "operationId": "WorkflowTriggers_ListCallbackUrl",
        "tags": [
          "WorkflowTriggers"
        ],
        "description": "Get the callback URL for a workflow trigger.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "workflowName",
            "in": "path",
            "description": "The workflow name.",
            "required": true,
            "type": "string",
            "pattern": "[a-zA-Z0-9_.()-]{0,79}$"
          },
          {
            "name": "triggerName",
            "in": "path",
            "description": "The workflow trigger name.",
            "required": true,
            "type": "string",
            "pattern": "[a-zA-Z0-9_.()-]{0,79}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/WorkflowTriggerCallbackUrl"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get the callback URL for a trigger": {
            "$ref": "./examples/WorkflowTriggers_ListCallbackUrl.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/workflows/{workflowName}/triggers/{triggerName}/reset": {
      "post": {
        "operationId": "WorkflowTriggers_Reset",
        "tags": [
          "WorkflowTriggers"
        ],
        "description": "Resets a workflow trigger.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "workflowName",
            "in": "path",
            "description": "The workflow name.",
            "required": true,
            "type": "string",
            "pattern": "[a-zA-Z0-9_.()-]{0,79}$"
          },
          {
            "name": "triggerName",
            "in": "path",
            "description": "The workflow trigger name.",
            "required": true,
            "type": "string",
            "pattern": "[a-zA-Z0-9_.()-]{0,79}$"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Reset trigger": {
            "$ref": "./examples/WorkflowTriggers_Reset.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/workflows/{workflowName}/triggers/{triggerName}/run": {
      "post": {
        "operationId": "WorkflowTriggers_Run",
        "tags": [
          "WorkflowTriggers"
        ],
        "description": "Runs a workflow trigger.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "workflowName",
            "in": "path",
            "description": "The workflow name.",
            "required": true,
            "type": "string",
            "pattern": "[a-zA-Z0-9_.()-]{0,79}$"
          },
          {
            "name": "triggerName",
            "in": "path",
            "description": "The workflow trigger name.",
            "required": true,
            "type": "string",
            "pattern": "[a-zA-Z0-9_.()-]{0,79}$"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded."
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Run a workflow trigger": {
            "$ref": "./examples/WorkflowTriggers_Run.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/workflows/{workflowName}/triggers/{triggerName}/setState": {
      "post": {
        "operationId": "WorkflowTriggers_SetState",
        "tags": [
          "WorkflowTriggers"
        ],
        "description": "Sets the state of a workflow trigger.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "workflowName",
            "in": "path",
            "description": "The workflow name.",
            "required": true,
            "type": "string",
            "pattern": "[a-zA-Z0-9_.()-]{0,79}$"
          },
          {
            "name": "triggerName",
            "in": "path",
            "description": "The workflow trigger name.",
            "required": true,
            "type": "string",
            "pattern": "[a-zA-Z0-9_.()-]{0,79}$"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The workflow trigger state.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SetTriggerStateActionDefinition"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Set trigger state": {
            "$ref": "./examples/WorkflowTriggers_SetState.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/workflows/{workflowName}/validate": {
      "post": {
        "operationId": "Workflows_ValidateByResourceGroup",
        "tags": [
          "Workflows"
        ],
        "description": "Validates the workflow.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "workflowName",
            "in": "path",
            "description": "The workflow name.",
            "required": true,
            "type": "string",
            "pattern": "[a-zA-Z0-9_.()-]{0,79}$"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The workflow.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Workflow"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Validate a workflow": {
            "$ref": "./examples/Workflows_ValidateByResourceGroup.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/workflows/{workflowName}/versions": {
      "get": {
        "operationId": "WorkflowVersions_List",
        "tags": [
          "WorkflowVersions"
        ],
        "description": "Gets a list of workflow versions.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "workflowName",
            "in": "path",
            "description": "The workflow name.",
            "required": true,
            "type": "string",
            "pattern": "[a-zA-Z0-9_.()-]{0,79}$"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The number of items to be included in the result.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/WorkflowVersionListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List a workflows versions": {
            "$ref": "./examples/WorkflowVersions_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/workflows/{workflowName}/versions/{versionId}": {
      "get": {
        "operationId": "WorkflowVersions_Get",
        "tags": [
          "WorkflowVersions"
        ],
        "description": "Gets a workflow version.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "workflowName",
            "in": "path",
            "description": "The workflow name.",
            "required": true,
            "type": "string",
            "pattern": "[a-zA-Z0-9_.()-]{0,79}$"
          },
          {
            "name": "versionId",
            "in": "path",
            "description": "The workflow versionId.",
            "required": true,
            "type": "string",
            "pattern": "[a-zA-Z0-9_.()-]{0,79}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/WorkflowVersion"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get a workflow version": {
            "$ref": "./examples/WorkflowVersions_Get.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/workflows/{workflowName}/versions/{versionId}/{triggerName}/listCallbackUrl": {
      "post": {
        "operationId": "WorkflowVersions_ListCallbackUrl",
        "tags": [
          "WorkflowVersions"
        ],
        "description": "Get the callback url for a trigger of a workflow version.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "workflowName",
            "in": "path",
            "description": "The workflow name.",
            "required": true,
            "type": "string",
            "pattern": "[a-zA-Z0-9_.()-]{0,79}$"
          },
          {
            "name": "versionId",
            "in": "path",
            "description": "The workflow versionId.",
            "required": true,
            "type": "string",
            "pattern": "[a-zA-Z0-9_.()-]{0,79}$"
          },
          {
            "name": "triggerName",
            "in": "path",
            "description": "The workflow trigger name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "The callback URL parameters.",
            "required": false,
            "schema": {
              "$ref": "#/definitions/GetCallbackUrlParameters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/WorkflowTriggerCallbackUrl"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "AgreementContent": {
      "type": "object",
      "description": "The integration account agreement content.",
      "properties": {
        "aS2": {
          "$ref": "#/definitions/As2AgreementContent",
          "description": "The AS2 agreement content."
        },
        "x12": {
          "$ref": "#/definitions/X12AgreementContent",
          "description": "The X12 agreement content."
        },
        "edifact": {
          "$ref": "#/definitions/EdifactAgreementContent",
          "description": "The EDIFACT agreement content."
        }
      }
    },
    "AgreementType": {
      "type": "string",
      "description": "The agreement type.",
      "enum": [
        "NotSpecified",
        "AS2",
        "X12",
        "Edifact"
      ],
      "x-ms-enum": {
        "name": "AgreementType",
        "modelAsString": true,
        "values": [
          {
            "name": "NotSpecified",
            "value": "NotSpecified",
            "description": "Represents a not specified agreement type."
          },
          {
            "name": "AS2",
            "value": "AS2",
            "description": "Represents an AS2 agreement type."
          },
          {
            "name": "X12",
            "value": "X12",
            "description": "Represents an X12 agreement type."
          },
          {
            "name": "Edifact",
            "value": "Edifact",
            "description": "Represents an Edifact agreement type."
          }
        ]
      }
    },
    "ApiDeploymentParameterMetadata": {
      "type": "object",
      "description": "The API deployment parameter metadata.",
      "properties": {
        "type": {
          "type": "string",
          "description": "The type."
        },
        "isRequired": {
          "type": "boolean",
          "description": "Indicates whether its required."
        },
        "displayName": {
          "type": "string",
          "description": "The display name."
        },
        "description": {
          "type": "string",
          "description": "The description."
        },
        "visibility": {
          "$ref": "#/definitions/ApiDeploymentParameterVisibility",
          "description": "The visibility."
        }
      }
    },
    "ApiDeploymentParameterMetadataSet": {
      "type": "object",
      "description": "The API deployment parameters metadata.",
      "properties": {
        "packageContentLink": {
          "$ref": "#/definitions/ApiDeploymentParameterMetadata",
          "description": "The package content link parameter."
        },
        "redisCacheConnectionString": {
          "$ref": "#/definitions/ApiDeploymentParameterMetadata",
          "description": "The package content link parameter."
        }
      }
    },
    "ApiDeploymentParameterVisibility": {
      "type": "string",
      "description": "The Api deployment parameter visibility.",
      "enum": [
        "NotSpecified",
        "Default",
        "Internal"
      ],
      "x-ms-enum": {
        "name": "ApiDeploymentParameterVisibility",
        "modelAsString": true,
        "values": [
          {
            "name": "NotSpecified",
            "value": "NotSpecified",
            "description": "Represents a state where the value is not specified."
          },
          {
            "name": "Default",
            "value": "Default",
            "description": "Represents a default API deployment parameter visibility."
          },
          {
            "name": "Internal",
            "value": "Internal",
            "description": "Represents an internal API deployment parameter visibility."
          }
        ]
      }
    },
    "ApiOperation": {
      "type": "object",
      "description": "The integration service environment managed api's api operations.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ApiOperationPropertiesDefinition",
          "description": "The resource-specific properties for this resource."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "ApiOperationAnnotation": {
      "type": "object",
      "description": "The Api Operation Annotation.",
      "properties": {
        "status": {
          "$ref": "#/definitions/StatusAnnotation",
          "description": "The status annotation."
        },
        "family": {
          "type": "string",
          "description": "The family."
        },
        "revision": {
          "type": "integer",
          "format": "int32",
          "description": "The revision."
        }
      }
    },
    "ApiOperationListResult": {
      "type": "object",
      "description": "The response of a ApiOperation list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The ApiOperation items on this page",
          "items": {
            "$ref": "#/definitions/ApiOperation"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "ApiOperationPropertiesDefinition": {
      "type": "object",
      "description": "The api operations properties",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/WorkflowProvisioningState",
          "description": "The provisioning state.",
          "readOnly": true
        },
        "summary": {
          "type": "string",
          "description": "The summary of the api operation."
        },
        "description": {
          "type": "string",
          "description": "The description of the api operation."
        },
        "visibility": {
          "type": "string",
          "description": "The visibility of the api operation."
        },
        "trigger": {
          "type": "string",
          "description": "The trigger type of api operation."
        },
        "triggerHint": {
          "type": "string",
          "description": "The trigger hint for the api operation."
        },
        "pageable": {
          "type": "boolean",
          "description": "Indicates whether the api operation is pageable."
        },
        "annotation": {
          "$ref": "#/definitions/ApiOperationAnnotation",
          "description": "The annotation of api operation."
        },
        "api": {
          "$ref": "#/definitions/ApiReference",
          "description": "The api reference."
        },
        "inputsDefinition": {
          "$ref": "#/definitions/SwaggerSchema",
          "description": "The operation inputs definition schema."
        },
        "responsesDefinition": {
          "type": "object",
          "description": "The operation responses definition schemas.",
          "additionalProperties": {
            "$ref": "#/definitions/SwaggerSchema"
          }
        },
        "isWebhook": {
          "type": "boolean",
          "description": "Indicates whether the API operation is webhook or not."
        },
        "isNotification": {
          "type": "boolean",
          "description": "Indicates whether the API operation is notification or not."
        }
      }
    },
    "ApiReference": {
      "type": "object",
      "description": "The Api reference.",
      "properties": {
        "displayName": {
          "type": "string",
          "description": "The display name of the api."
        },
        "description": {
          "type": "string",
          "description": "The description of the api."
        },
        "iconUri": {
          "type": "string",
          "description": "The icon uri of the api."
        },
        "swagger": {
          "type": "object",
          "description": "The swagger of the api.",
          "additionalProperties": {}
        },
        "brandColor": {
          "type": "string",
          "description": "The brand color of the api."
        },
        "category": {
          "$ref": "#/definitions/ApiTier",
          "description": "The tier."
        },
        "integrationServiceEnvironment": {
          "$ref": "#/definitions/ResourceReference",
          "description": "The integration service environment reference."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ResourceReference"
        }
      ]
    },
    "ApiResourceBackendService": {
      "type": "object",
      "description": "The API backend service.",
      "properties": {
        "serviceUrl": {
          "type": "string",
          "description": "The service URL."
        }
      }
    },
    "ApiResourceDefinitions": {
      "type": "object",
      "description": "The Api resource definition.",
      "properties": {
        "originalSwaggerUrl": {
          "type": "string",
          "description": "The original swagger url."
        },
        "modifiedSwaggerUrl": {
          "type": "string",
          "description": "The modified swagger url."
        }
      }
    },
    "ApiResourceGeneralInformation": {
      "type": "object",
      "description": "The API general information.",
      "properties": {
        "iconUrl": {
          "type": "string",
          "description": "The icon url."
        },
        "displayName": {
          "type": "string",
          "description": "The display name."
        },
        "description": {
          "type": "string",
          "description": "The description."
        },
        "termsOfUseUrl": {
          "type": "string",
          "description": "The terms of use url."
        },
        "releaseTag": {
          "type": "string",
          "description": "The release tag."
        },
        "tier": {
          "$ref": "#/definitions/ApiTier",
          "description": "The tier."
        }
      }
    },
    "ApiResourceMetadata": {
      "type": "object",
      "description": "The api resource metadata.",
      "properties": {
        "source": {
          "type": "string",
          "description": "The source."
        },
        "brandColor": {
          "type": "string",
          "description": "The brand color."
        },
        "hideKey": {
          "type": "string",
          "description": "The hide key."
        },
        "tags": {
          "type": "object",
          "description": "The tags.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "apiType": {
          "$ref": "#/definitions/ApiType",
          "description": "The api type."
        },
        "wsdlService": {
          "$ref": "#/definitions/WsdlService",
          "description": "The WSDL service."
        },
        "wsdlImportMethod": {
          "$ref": "#/definitions/WsdlImportMethod",
          "description": "The WSDL import method."
        },
        "connectionType": {
          "type": "string",
          "description": "The connection type."
        },
        "provisioningState": {
          "$ref": "#/definitions/WorkflowProvisioningState",
          "description": "The provisioning state."
        },
        "deploymentParameters": {
          "$ref": "#/definitions/ApiDeploymentParameterMetadataSet",
          "description": "The connector deployment parameters metadata."
        }
      }
    },
    "ApiResourcePolicies": {
      "type": "object",
      "description": "The API resource policies.",
      "properties": {
        "content": {
          "type": "string",
          "description": "The API level only policies XML as embedded content."
        },
        "contentLink": {
          "type": "string",
          "description": "The content link to the policies."
        }
      }
    },
    "ApiResourceProperties": {
      "type": "object",
      "description": "The API resource properties.",
      "properties": {
        "connectionParameters": {
          "type": "object",
          "description": "The connection parameters.",
          "additionalProperties": {
            "additionalProperties": {},
            "type": "object"
          },
          "readOnly": true
        },
        "metadata": {
          "$ref": "#/definitions/ApiResourceMetadata",
          "description": "The metadata.",
          "readOnly": true
        },
        "runtimeUrls": {
          "type": "array",
          "description": "The runtime urls.",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "generalInformation": {
          "$ref": "#/definitions/ApiResourceGeneralInformation",
          "description": "The api general information.",
          "readOnly": true
        },
        "capabilities": {
          "type": "array",
          "description": "The capabilities.",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "backendService": {
          "$ref": "#/definitions/ApiResourceBackendService",
          "description": "The backend service.",
          "readOnly": true
        },
        "policies": {
          "$ref": "#/definitions/ApiResourcePolicies",
          "description": "The policies for the API.",
          "readOnly": true
        },
        "apiDefinitionUrl": {
          "type": "string",
          "description": "The API definition.",
          "readOnly": true
        },
        "apiDefinitions": {
          "$ref": "#/definitions/ApiResourceDefinitions",
          "description": "The api definitions.",
          "readOnly": true
        },
        "integrationServiceEnvironment": {
          "$ref": "#/definitions/ResourceReference",
          "description": "The integration service environment reference."
        },
        "provisioningState": {
          "$ref": "#/definitions/WorkflowProvisioningState",
          "description": "The provisioning state.",
          "readOnly": true
        },
        "category": {
          "$ref": "#/definitions/ApiTier",
          "description": "The category.",
          "readOnly": true
        }
      }
    },
    "ApiTier": {
      "type": "string",
      "description": "The Api tier.",
      "enum": [
        "NotSpecified",
        "Enterprise",
        "Standard",
        "Premium"
      ],
      "x-ms-enum": {
        "name": "ApiTier",
        "modelAsString": true,
        "values": [
          {
            "name": "NotSpecified",
            "value": "NotSpecified",
            "description": "Represents a state where the value is not specified."
          },
          {
            "name": "Enterprise",
            "value": "Enterprise",
            "description": "Represents an enterprise API tier."
          },
          {
            "name": "Standard",
            "value": "Standard",
            "description": "Represents a standard API tier."
          },
          {
            "name": "Premium",
            "value": "Premium",
            "description": "Represents a premium API tier."
          }
        ]
      }
    },
    "ApiType": {
      "type": "string",
      "description": "The API type.",
      "enum": [
        "NotSpecified",
        "Rest",
        "Soap"
      ],
      "x-ms-enum": {
        "name": "ApiType",
        "modelAsString": true,
        "values": [
          {
            "name": "NotSpecified",
            "value": "NotSpecified",
            "description": "Represents a state where the value is not specified."
          },
          {
            "name": "Rest",
            "value": "Rest",
            "description": "Represents a REST API type."
          },
          {
            "name": "Soap",
            "value": "Soap",
            "description": "Represents a SOAP API type."
          }
        ]
      }
    },
    "ArtifactContentPropertiesDefinition": {
      "type": "object",
      "description": "The artifact content properties definition.",
      "properties": {
        "content": {
          "type": "object",
          "description": "The artifact content",
          "additionalProperties": {}
        },
        "contentType": {
          "type": "string",
          "description": "The content type."
        },
        "contentLink": {
          "$ref": "#/definitions/ContentLink",
          "description": "The content link."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ArtifactProperties"
        }
      ]
    },
    "ArtifactProperties": {
      "type": "object",
      "description": "The artifact properties definition.",
      "properties": {
        "createdTime": {
          "type": "string",
          "format": "date-time",
          "description": "The artifact creation time."
        },
        "changedTime": {
          "type": "string",
          "format": "date-time",
          "description": "The artifact changed time."
        },
        "metadata": {
          "type": "object",
          "description": "The metadata",
          "additionalProperties": {}
        }
      }
    },
    "As2AcknowledgementConnectionSettings": {
      "type": "object",
      "description": "The AS2 agreement acknowledgement connection settings.",
      "properties": {
        "ignoreCertificateNameMismatch": {
          "type": "boolean",
          "description": "Indicates whether to ignore mismatch in certificate name."
        },
        "supportHttpStatusCodeContinue": {
          "type": "boolean",
          "description": "Indicates whether to support HTTP status code 'CONTINUE'."
        },
        "keepHttpConnectionAlive": {
          "type": "boolean",
          "description": "Indicates whether to keep the connection alive."
        },
        "unfoldHttpHeaders": {
          "type": "boolean",
          "description": "Indicates whether to unfold the HTTP headers."
        }
      },
      "required": [
        "ignoreCertificateNameMismatch",
        "supportHttpStatusCodeContinue",
        "keepHttpConnectionAlive",
        "unfoldHttpHeaders"
      ]
    },
    "As2AgreementContent": {
      "type": "object",
      "description": "The integration account AS2 agreement content.",
      "properties": {
        "receiveAgreement": {
          "$ref": "#/definitions/As2OneWayAgreement",
          "description": "The AS2 one-way receive agreement."
        },
        "sendAgreement": {
          "$ref": "#/definitions/As2OneWayAgreement",
          "description": "The AS2 one-way send agreement."
        }
      },
      "required": [
        "receiveAgreement",
        "sendAgreement"
      ]
    },
    "As2EnvelopeSettings": {
      "type": "object",
      "description": "The AS2 agreement envelope settings.",
      "properties": {
        "messageContentType": {
          "type": "string",
          "description": "The message content type."
        },
        "transmitFileNameInMimeHeader": {
          "type": "boolean",
          "description": "The value indicating whether to transmit file name in mime header."
        },
        "fileNameTemplate": {
          "type": "string",
          "description": "The template for file name."
        },
        "suspendMessageOnFileNameGenerationError": {
          "type": "boolean",
          "description": "The value indicating whether to suspend message on file name generation error."
        },
        "autogenerateFileName": {
          "type": "boolean",
          "description": "The value indicating whether to auto generate file name."
        }
      },
      "required": [
        "messageContentType",
        "transmitFileNameInMimeHeader",
        "fileNameTemplate",
        "suspendMessageOnFileNameGenerationError",
        "autogenerateFileName"
      ]
    },
    "As2ErrorSettings": {
      "type": "object",
      "description": "The AS2 agreement error settings.",
      "properties": {
        "suspendDuplicateMessage": {
          "type": "boolean",
          "description": "The value indicating whether to suspend duplicate message."
        },
        "resendIfMdnNotReceived": {
          "type": "boolean",
          "description": "The value indicating whether to resend message If MDN is not received."
        }
      },
      "required": [
        "suspendDuplicateMessage",
        "resendIfMdnNotReceived"
      ]
    },
    "As2MdnSettings": {
      "type": "object",
      "description": "The AS2 agreement mdn settings.",
      "properties": {
        "needMdn": {
          "type": "boolean",
          "description": "The value indicating whether to send or request a MDN."
        },
        "signMdn": {
          "type": "boolean",
          "description": "The value indicating whether the MDN needs to be signed or not."
        },
        "sendMdnAsynchronously": {
          "type": "boolean",
          "description": "The value indicating whether to send the asynchronous MDN."
        },
        "receiptDeliveryUrl": {
          "type": "string",
          "description": "The receipt delivery URL."
        },
        "dispositionNotificationTo": {
          "type": "string",
          "description": "The disposition notification to header value."
        },
        "signOutboundMdnIfOptional": {
          "type": "boolean",
          "description": "The value indicating whether to sign the outbound MDN if optional."
        },
        "mdnText": {
          "type": "string",
          "description": "The MDN text."
        },
        "sendInboundMdnToMessageBox": {
          "type": "boolean",
          "description": "The value indicating whether to send inbound MDN to message box."
        },
        "micHashingAlgorithm": {
          "$ref": "#/definitions/HashingAlgorithm",
          "description": "The signing or hashing algorithm."
        }
      },
      "required": [
        "needMdn",
        "signMdn",
        "sendMdnAsynchronously",
        "signOutboundMdnIfOptional",
        "sendInboundMdnToMessageBox",
        "micHashingAlgorithm"
      ]
    },
    "As2MessageConnectionSettings": {
      "type": "object",
      "description": "The AS2 agreement message connection settings.",
      "properties": {
        "ignoreCertificateNameMismatch": {
          "type": "boolean",
          "description": "The value indicating whether to ignore mismatch in certificate name."
        },
        "supportHttpStatusCodeContinue": {
          "type": "boolean",
          "description": "The value indicating whether to support HTTP status code 'CONTINUE'."
        },
        "keepHttpConnectionAlive": {
          "type": "boolean",
          "description": "The value indicating whether to keep the connection alive."
        },
        "unfoldHttpHeaders": {
          "type": "boolean",
          "description": "The value indicating whether to unfold the HTTP headers."
        }
      },
      "required": [
        "ignoreCertificateNameMismatch",
        "supportHttpStatusCodeContinue",
        "keepHttpConnectionAlive",
        "unfoldHttpHeaders"
      ]
    },
    "As2OneWayAgreement": {
      "type": "object",
      "description": "The integration account AS2 one-way agreement.",
      "properties": {
        "senderBusinessIdentity": {
          "$ref": "#/definitions/BusinessIdentity",
          "description": "The sender business identity"
        },
        "receiverBusinessIdentity": {
          "$ref": "#/definitions/BusinessIdentity",
          "description": "The receiver business identity"
        },
        "protocolSettings": {
          "$ref": "#/definitions/As2ProtocolSettings",
          "description": "The AS2 protocol settings."
        }
      },
      "required": [
        "senderBusinessIdentity",
        "receiverBusinessIdentity",
        "protocolSettings"
      ]
    },
    "As2ProtocolSettings": {
      "type": "object",
      "description": "The AS2 agreement protocol settings.",
      "properties": {
        "messageConnectionSettings": {
          "$ref": "#/definitions/As2MessageConnectionSettings",
          "description": "The message connection settings."
        },
        "acknowledgementConnectionSettings": {
          "$ref": "#/definitions/As2AcknowledgementConnectionSettings",
          "description": "The acknowledgement connection settings."
        },
        "mdnSettings": {
          "$ref": "#/definitions/As2MdnSettings",
          "description": "The MDN settings."
        },
        "securitySettings": {
          "$ref": "#/definitions/As2SecuritySettings",
          "description": "The security settings."
        },
        "validationSettings": {
          "$ref": "#/definitions/As2ValidationSettings",
          "description": "The validation settings."
        },
        "envelopeSettings": {
          "$ref": "#/definitions/As2EnvelopeSettings",
          "description": "The envelope settings."
        },
        "errorSettings": {
          "$ref": "#/definitions/As2ErrorSettings",
          "description": "The error settings."
        }
      },
      "required": [
        "messageConnectionSettings",
        "acknowledgementConnectionSettings",
        "mdnSettings",
        "securitySettings",
        "validationSettings",
        "envelopeSettings",
        "errorSettings"
      ]
    },
    "As2SecuritySettings": {
      "type": "object",
      "description": "The AS2 agreement security settings.",
      "properties": {
        "overrideGroupSigningCertificate": {
          "type": "boolean",
          "description": "The value indicating whether to send or request a MDN."
        },
        "signingCertificateName": {
          "type": "string",
          "description": "The name of the signing certificate."
        },
        "encryptionCertificateName": {
          "type": "string",
          "description": "The name of the encryption certificate."
        },
        "enableNrrForInboundEncodedMessages": {
          "type": "boolean",
          "description": "The value indicating whether to enable NRR for inbound encoded messages."
        },
        "enableNrrForInboundDecodedMessages": {
          "type": "boolean",
          "description": "The value indicating whether to enable NRR for inbound decoded messages."
        },
        "enableNrrForOutboundMdn": {
          "type": "boolean",
          "description": "The value indicating whether to enable NRR for outbound MDN."
        },
        "enableNrrForOutboundEncodedMessages": {
          "type": "boolean",
          "description": "The value indicating whether to enable NRR for outbound encoded messages."
        },
        "enableNrrForOutboundDecodedMessages": {
          "type": "boolean",
          "description": "The value indicating whether to enable NRR for outbound decoded messages."
        },
        "enableNrrForInboundMdn": {
          "type": "boolean",
          "description": "The value indicating whether to enable NRR for inbound MDN."
        },
        "sha2AlgorithmFormat": {
          "type": "string",
          "description": "The Sha2 algorithm format. Valid values are Sha2, ShaHashSize, ShaHyphenHashSize, Sha2UnderscoreHashSize."
        }
      },
      "required": [
        "overrideGroupSigningCertificate",
        "enableNrrForInboundEncodedMessages",
        "enableNrrForInboundDecodedMessages",
        "enableNrrForOutboundMdn",
        "enableNrrForOutboundEncodedMessages",
        "enableNrrForOutboundDecodedMessages",
        "enableNrrForInboundMdn"
      ]
    },
    "As2ValidationSettings": {
      "type": "object",
      "description": "The AS2 agreement validation settings.",
      "properties": {
        "overrideMessageProperties": {
          "type": "boolean",
          "description": "The value indicating whether to override incoming message properties with those in agreement."
        },
        "encryptMessage": {
          "type": "boolean",
          "description": "The value indicating whether the message has to be encrypted."
        },
        "signMessage": {
          "type": "boolean",
          "description": "The value indicating whether the message has to be signed."
        },
        "compressMessage": {
          "type": "boolean",
          "description": "The value indicating whether the message has to be compressed."
        },
        "checkDuplicateMessage": {
          "type": "boolean",
          "description": "The value indicating whether to check for duplicate message."
        },
        "interchangeDuplicatesValidityDays": {
          "type": "integer",
          "format": "int32",
          "description": "The number of days to look back for duplicate interchange."
        },
        "checkCertificateRevocationListOnSend": {
          "type": "boolean",
          "description": "The value indicating whether to check for certificate revocation list on send."
        },
        "checkCertificateRevocationListOnReceive": {
          "type": "boolean",
          "description": "The value indicating whether to check for certificate revocation list on receive."
        },
        "encryptionAlgorithm": {
          "$ref": "#/definitions/EncryptionAlgorithm",
          "description": "The encryption algorithm."
        },
        "signingAlgorithm": {
          "$ref": "#/definitions/SigningAlgorithm",
          "description": "The signing algorithm."
        }
      },
      "required": [
        "overrideMessageProperties",
        "encryptMessage",
        "signMessage",
        "compressMessage",
        "checkDuplicateMessage",
        "interchangeDuplicatesValidityDays",
        "checkCertificateRevocationListOnSend",
        "checkCertificateRevocationListOnReceive",
        "encryptionAlgorithm"
      ]
    },
    "AssemblyCollection": {
      "type": "object",
      "description": "A collection of assembly definitions.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The assembly definitions.",
          "items": {
            "$ref": "#/definitions/AssemblyDefinition"
          }
        }
      }
    },
    "AssemblyDefinition": {
      "type": "object",
      "description": "The assembly definition.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/AssemblyProperties",
          "description": "The assembly properties."
        }
      },
      "required": [
        "properties"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "AssemblyProperties": {
      "type": "object",
      "description": "The assembly properties definition.",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/WorkflowProvisioningState",
          "description": "The provisioning state.",
          "readOnly": true
        },
        "assemblyName": {
          "type": "string",
          "description": "The assembly name."
        },
        "assemblyVersion": {
          "type": "string",
          "description": "The assembly version."
        },
        "assemblyCulture": {
          "type": "string",
          "description": "The assembly culture."
        },
        "assemblyPublicKeyToken": {
          "type": "string",
          "description": "The assembly public key token."
        }
      },
      "required": [
        "assemblyName"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/ArtifactContentPropertiesDefinition"
        }
      ]
    },
    "Azure.ResourceManager.CommonTypes.TrackedResourceUpdate": {
      "type": "object",
      "description": "The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location'",
      "properties": {
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/Resource"
        }
      ]
    },
    "Azure.ResourceManager.Foundations.ArmTagsProperty": {
      "type": "object",
      "description": "Standard type definition for Azure Resource Manager Tags property.\n\nIt is included in the TrackedResource template definition.The Azure Resource Manager Resource tags.",
      "properties": {
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "AzureResourceErrorInfo": {
      "type": "object",
      "description": "The error info.",
      "properties": {
        "message": {
          "type": "string",
          "description": "The error message."
        },
        "details": {
          "type": "array",
          "description": "The error details.",
          "items": {
            "$ref": "#/definitions/AzureResourceErrorInfo"
          },
          "x-ms-identifiers": [
            "code"
          ]
        }
      },
      "required": [
        "message"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/ErrorInfo"
        }
      ]
    },
    "B2bPartnerContent": {
      "type": "object",
      "description": "The B2B partner content.",
      "properties": {
        "businessIdentities": {
          "type": "array",
          "description": "The list of partner business identities.",
          "items": {
            "$ref": "#/definitions/BusinessIdentity"
          },
          "x-ms-identifiers": [
            "qualifier"
          ]
        }
      }
    },
    "BatchConfiguration": {
      "type": "object",
      "description": "The batch configuration resource definition.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/BatchConfigurationProperties",
          "description": "The batch configuration properties."
        }
      },
      "required": [
        "properties"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "BatchConfigurationCollection": {
      "type": "object",
      "description": "A collection of batch configurations.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The batch configurations.",
          "items": {
            "$ref": "#/definitions/BatchConfiguration"
          }
        }
      }
    },
    "BatchConfigurationProperties": {
      "type": "object",
      "description": "The batch configuration properties definition.",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/WorkflowProvisioningState",
          "description": "The provisioning state.",
          "readOnly": true
        },
        "batchGroupName": {
          "type": "string",
          "description": "The name of the batch group."
        },
        "releaseCriteria": {
          "$ref": "#/definitions/BatchReleaseCriteria",
          "description": "The batch release criteria."
        }
      },
      "required": [
        "batchGroupName",
        "releaseCriteria"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/ArtifactProperties"
        }
      ]
    },
    "BatchReleaseCriteria": {
      "type": "object",
      "description": "The batch release criteria.",
      "properties": {
        "messageCount": {
          "type": "integer",
          "format": "int32",
          "description": "The message count."
        },
        "batchSize": {
          "type": "integer",
          "format": "int32",
          "description": "The batch size in bytes."
        },
        "recurrence": {
          "$ref": "#/definitions/WorkflowTriggerRecurrence",
          "description": "The recurrence."
        }
      }
    },
    "BusinessIdentity": {
      "type": "object",
      "description": "The integration account partner's business identity.",
      "properties": {
        "qualifier": {
          "type": "string",
          "description": "The business identity qualifier e.g. as2identity, ZZ, ZZZ, 31, 32"
        },
        "value": {
          "type": "string",
          "description": "The user defined business identity value."
        }
      },
      "required": [
        "qualifier",
        "value"
      ]
    },
    "CallbackUrl": {
      "type": "object",
      "description": "The callback url.",
      "properties": {
        "value": {
          "type": "string",
          "description": "The URL value."
        }
      }
    },
    "ContentHash": {
      "type": "object",
      "description": "The content hash.",
      "properties": {
        "algorithm": {
          "type": "string",
          "description": "The algorithm of the content hash."
        },
        "value": {
          "type": "string",
          "description": "The value of the content hash."
        }
      }
    },
    "ContentLink": {
      "type": "object",
      "description": "The content link.",
      "properties": {
        "uri": {
          "type": "string",
          "description": "The content link URI."
        },
        "contentVersion": {
          "type": "string",
          "description": "The content version.",
          "readOnly": true
        },
        "contentSize": {
          "type": "integer",
          "format": "int64",
          "description": "The content size.",
          "readOnly": true
        },
        "contentHash": {
          "$ref": "#/definitions/ContentHash",
          "description": "The content hash.",
          "readOnly": true
        },
        "metadata": {
          "type": "object",
          "description": "The metadata.",
          "additionalProperties": {},
          "readOnly": true
        }
      }
    },
    "Correlation": {
      "type": "object",
      "description": "The correlation property.",
      "properties": {
        "clientTrackingId": {
          "type": "string",
          "description": "The client tracking id."
        }
      }
    },
    "DayOfWeek": {
      "type": "string",
      "description": "The day of the week.",
      "enum": [
        "Sunday",
        "Monday",
        "Tuesday",
        "Wednesday",
        "Thursday",
        "Friday",
        "Saturday"
      ],
      "x-ms-enum": {
        "name": "DayOfWeek",
        "modelAsString": true,
        "values": [
          {
            "name": "Sunday",
            "value": "Sunday",
            "description": "Represents day of a week Sunday."
          },
          {
            "name": "Monday",
            "value": "Monday",
            "description": "Represents day of a week Monday."
          },
          {
            "name": "Tuesday",
            "value": "Tuesday",
            "description": "Represents day of a week Tuesday."
          },
          {
            "name": "Wednesday",
            "value": "Wednesday",
            "description": "Represents day of a week Wednesday."
          },
          {
            "name": "Thursday",
            "value": "Thursday",
            "description": "Represents day of a week Thursday."
          },
          {
            "name": "Friday",
            "value": "Friday",
            "description": "Represents day of a week Friday."
          },
          {
            "name": "Saturday",
            "value": "Saturday",
            "description": "Represents day of a week Saturday."
          }
        ]
      }
    },
    "DaysOfWeek": {
      "type": "string",
      "description": "The days of a week.",
      "enum": [
        "Sunday",
        "Monday",
        "Tuesday",
        "Wednesday",
        "Thursday",
        "Friday",
        "Saturday"
      ],
      "x-ms-enum": {
        "name": "DaysOfWeek",
        "modelAsString": true,
        "values": [
          {
            "name": "Sunday",
            "value": "Sunday",
            "description": "Represents day of a week Sunday."
          },
          {
            "name": "Monday",
            "value": "Monday",
            "description": "Represents day of a week Monday."
          },
          {
            "name": "Tuesday",
            "value": "Tuesday",
            "description": "Represents day of a week Tuesday."
          },
          {
            "name": "Wednesday",
            "value": "Wednesday",
            "description": "Represents day of a week Wednesday."
          },
          {
            "name": "Thursday",
            "value": "Thursday",
            "description": "Represents day of a week Thursday."
          },
          {
            "name": "Friday",
            "value": "Friday",
            "description": "Represents day of a week Friday."
          },
          {
            "name": "Saturday",
            "value": "Saturday",
            "description": "Represents day of a week Saturday."
          }
        ]
      }
    },
    "EdifactAcknowledgementSettings": {
      "type": "object",
      "description": "The Edifact agreement acknowledgement settings.",
      "properties": {
        "needTechnicalAcknowledgement": {
          "type": "boolean",
          "description": "The value indicating whether technical acknowledgement is needed."
        },
        "batchTechnicalAcknowledgements": {
          "type": "boolean",
          "description": "The value indicating whether to batch the technical acknowledgements."
        },
        "needFunctionalAcknowledgement": {
          "type": "boolean",
          "description": "The value indicating whether functional acknowledgement is needed."
        },
        "batchFunctionalAcknowledgements": {
          "type": "boolean",
          "description": "The value indicating whether to batch functional acknowledgements."
        },
        "needLoopForValidMessages": {
          "type": "boolean",
          "description": "The value indicating whether a loop is needed for valid messages."
        },
        "sendSynchronousAcknowledgement": {
          "type": "boolean",
          "description": "The value indicating whether to send synchronous acknowledgement."
        },
        "acknowledgementControlNumberPrefix": {
          "type": "string",
          "description": "The acknowledgement control number prefix."
        },
        "acknowledgementControlNumberSuffix": {
          "type": "string",
          "description": "The acknowledgement control number suffix."
        },
        "acknowledgementControlNumberLowerBound": {
          "type": "integer",
          "format": "int32",
          "description": "The acknowledgement control number lower bound."
        },
        "acknowledgementControlNumberUpperBound": {
          "type": "integer",
          "format": "int32",
          "description": "The acknowledgement control number upper bound."
        },
        "rolloverAcknowledgementControlNumber": {
          "type": "boolean",
          "description": "The value indicating whether to rollover acknowledgement control number."
        }
      },
      "required": [
        "needTechnicalAcknowledgement",
        "batchTechnicalAcknowledgements",
        "needFunctionalAcknowledgement",
        "batchFunctionalAcknowledgements",
        "needLoopForValidMessages",
        "sendSynchronousAcknowledgement",
        "acknowledgementControlNumberLowerBound",
        "acknowledgementControlNumberUpperBound",
        "rolloverAcknowledgementControlNumber"
      ]
    },
    "EdifactAgreementContent": {
      "type": "object",
      "description": "The Edifact agreement content.",
      "properties": {
        "receiveAgreement": {
          "$ref": "#/definitions/EdifactOneWayAgreement",
          "description": "The EDIFACT one-way receive agreement."
        },
        "sendAgreement": {
          "$ref": "#/definitions/EdifactOneWayAgreement",
          "description": "The EDIFACT one-way send agreement."
        }
      },
      "required": [
        "receiveAgreement",
        "sendAgreement"
      ]
    },
    "EdifactCharacterSet": {
      "type": "string",
      "description": "The edifact character set.",
      "enum": [
        "NotSpecified",
        "UNOB",
        "UNOA",
        "UNOC",
        "UNOD",
        "UNOE",
        "UNOF",
        "UNOG",
        "UNOH",
        "UNOI",
        "UNOJ",
        "UNOK",
        "UNOX",
        "UNOY",
        "KECA"
      ],
      "x-ms-enum": {
        "name": "EdifactCharacterSet",
        "modelAsString": true,
        "values": [
          {
            "name": "NotSpecified",
            "value": "NotSpecified",
            "description": "Represents a state where the value is not specified."
          },
          {
            "name": "UNOB",
            "value": "UNOB",
            "description": "Represents the UNOB Edifact character set."
          },
          {
            "name": "UNOA",
            "value": "UNOA",
            "description": "Represents the UNOA Edifact character set."
          },
          {
            "name": "UNOC",
            "value": "UNOC",
            "description": "Represents the UNOC Edifact character set."
          },
          {
            "name": "UNOD",
            "value": "UNOD",
            "description": "Represents the UNOD Edifact character set."
          },
          {
            "name": "UNOE",
            "value": "UNOE",
            "description": "Represents the UNOE Edifact character set."
          },
          {
            "name": "UNOF",
            "value": "UNOF",
            "description": "Represents the UNOF Edifact character set."
          },
          {
            "name": "UNOG",
            "value": "UNOG",
            "description": "Represents the UNOG Edifact character set."
          },
          {
            "name": "UNOH",
            "value": "UNOH",
            "description": "Represents the UNOH Edifact character set."
          },
          {
            "name": "UNOI",
            "value": "UNOI",
            "description": "Represents the UNOI Edifact character set."
          },
          {
            "name": "UNOJ",
            "value": "UNOJ",
            "description": "Represents the UNOJ Edifact character set."
          },
          {
            "name": "UNOK",
            "value": "UNOK",
            "description": "Represents the UNOK Edifact character set."
          },
          {
            "name": "UNOX",
            "value": "UNOX",
            "description": "Represents the UNOX Edifact character set."
          },
          {
            "name": "UNOY",
            "value": "UNOY",
            "description": "Represents the UNOY Edifact character set."
          },
          {
            "name": "KECA",
            "value": "KECA",
            "description": "Represents the KECA Edifact character set."
          }
        ]
      }
    },
    "EdifactDecimalIndicator": {
      "type": "string",
      "description": "The edifact decimal indicator.",
      "enum": [
        "NotSpecified",
        "Comma",
        "Decimal"
      ],
      "x-ms-enum": {
        "name": "EdifactDecimalIndicator",
        "modelAsString": true,
        "values": [
          {
            "name": "NotSpecified",
            "value": "NotSpecified",
            "description": "Represents a not specified edifact decimal indicator."
          },
          {
            "name": "Comma",
            "value": "Comma",
            "description": "Represents a comma edifact decimal indicator."
          },
          {
            "name": "Decimal",
            "value": "Decimal",
            "description": "Represents a decimal edifact decimal indicator."
          }
        ]
      }
    },
    "EdifactDelimiterOverride": {
      "type": "object",
      "description": "The Edifact delimiter override settings.",
      "properties": {
        "messageId": {
          "type": "string",
          "description": "The message id."
        },
        "messageVersion": {
          "type": "string",
          "description": "The message version."
        },
        "messageRelease": {
          "type": "string",
          "description": "The message release."
        },
        "dataElementSeparator": {
          "type": "integer",
          "format": "int32",
          "description": "The data element separator."
        },
        "componentSeparator": {
          "type": "integer",
          "format": "int32",
          "description": "The component separator."
        },
        "segmentTerminator": {
          "type": "integer",
          "format": "int32",
          "description": "The segment terminator."
        },
        "repetitionSeparator": {
          "type": "integer",
          "format": "int32",
          "description": "The repetition separator."
        },
        "segmentTerminatorSuffix": {
          "$ref": "#/definitions/SegmentTerminatorSuffix",
          "description": "The segment terminator suffix."
        },
        "decimalPointIndicator": {
          "$ref": "#/definitions/EdifactDecimalIndicator",
          "description": "The decimal point indicator."
        },
        "releaseIndicator": {
          "type": "integer",
          "format": "int32",
          "description": "The release indicator."
        },
        "messageAssociationAssignedCode": {
          "type": "string",
          "description": "The message association assigned code."
        },
        "targetNamespace": {
          "type": "string",
          "description": "The target namespace on which this delimiter settings has to be applied."
        }
      },
      "required": [
        "dataElementSeparator",
        "componentSeparator",
        "segmentTerminator",
        "repetitionSeparator",
        "segmentTerminatorSuffix",
        "decimalPointIndicator",
        "releaseIndicator"
      ]
    },
    "EdifactEnvelopeOverride": {
      "type": "object",
      "description": "The Edifact envelope override settings.",
      "properties": {
        "messageId": {
          "type": "string",
          "description": "The message id on which this envelope settings has to be applied."
        },
        "messageVersion": {
          "type": "string",
          "description": "The message version on which this envelope settings has to be applied."
        },
        "messageRelease": {
          "type": "string",
          "description": "The message release version on which this envelope settings has to be applied."
        },
        "messageAssociationAssignedCode": {
          "type": "string",
          "description": "The message association assigned code."
        },
        "targetNamespace": {
          "type": "string",
          "description": "The target namespace on which this envelope settings has to be applied."
        },
        "functionalGroupId": {
          "type": "string",
          "description": "The functional group id."
        },
        "senderApplicationQualifier": {
          "type": "string",
          "description": "The sender application qualifier."
        },
        "senderApplicationId": {
          "type": "string",
          "description": "The sender application id."
        },
        "receiverApplicationQualifier": {
          "type": "string",
          "description": "The receiver application qualifier."
        },
        "receiverApplicationId": {
          "type": "string",
          "description": "The receiver application id."
        },
        "controllingAgencyCode": {
          "type": "string",
          "description": "The controlling agency code."
        },
        "groupHeaderMessageVersion": {
          "type": "string",
          "description": "The group header message version."
        },
        "groupHeaderMessageRelease": {
          "type": "string",
          "description": "The group header message release."
        },
        "associationAssignedCode": {
          "type": "string",
          "description": "The association assigned code."
        },
        "applicationPassword": {
          "type": "string",
          "description": "The application password."
        }
      }
    },
    "EdifactEnvelopeSettings": {
      "type": "object",
      "description": "The Edifact agreement envelope settings.",
      "properties": {
        "groupAssociationAssignedCode": {
          "type": "string",
          "description": "The group association assigned code."
        },
        "communicationAgreementId": {
          "type": "string",
          "description": "The communication agreement id."
        },
        "applyDelimiterStringAdvice": {
          "type": "boolean",
          "description": "The value indicating whether to apply delimiter string advice."
        },
        "createGroupingSegments": {
          "type": "boolean",
          "description": "The value indicating whether to create grouping segments."
        },
        "enableDefaultGroupHeaders": {
          "type": "boolean",
          "description": "The value indicating whether to enable default group headers."
        },
        "recipientReferencePasswordValue": {
          "type": "string",
          "description": "The recipient reference password value."
        },
        "recipientReferencePasswordQualifier": {
          "type": "string",
          "description": "The recipient reference password qualifier."
        },
        "applicationReferenceId": {
          "type": "string",
          "description": "The application reference id."
        },
        "processingPriorityCode": {
          "type": "string",
          "description": "The processing priority code."
        },
        "interchangeControlNumberLowerBound": {
          "type": "integer",
          "format": "int64",
          "description": "The interchange control number lower bound."
        },
        "interchangeControlNumberUpperBound": {
          "type": "integer",
          "format": "int64",
          "description": "The interchange control number upper bound."
        },
        "rolloverInterchangeControlNumber": {
          "type": "boolean",
          "description": "The value indicating whether to rollover interchange control number."
        },
        "interchangeControlNumberPrefix": {
          "type": "string",
          "description": "The interchange control number prefix."
        },
        "interchangeControlNumberSuffix": {
          "type": "string",
          "description": "The interchange control number suffix."
        },
        "senderReverseRoutingAddress": {
          "type": "string",
          "description": "The sender reverse routing address."
        },
        "receiverReverseRoutingAddress": {
          "type": "string",
          "description": "The receiver reverse routing address."
        },
        "functionalGroupId": {
          "type": "string",
          "description": "The functional group id."
        },
        "groupControllingAgencyCode": {
          "type": "string",
          "description": "The group controlling agency code."
        },
        "groupMessageVersion": {
          "type": "string",
          "description": "The group message version."
        },
        "groupMessageRelease": {
          "type": "string",
          "description": "The group message release."
        },
        "groupControlNumberLowerBound": {
          "type": "integer",
          "format": "int64",
          "description": "The group control number lower bound."
        },
        "groupControlNumberUpperBound": {
          "type": "integer",
          "format": "int64",
          "description": "The group control number upper bound."
        },
        "rolloverGroupControlNumber": {
          "type": "boolean",
          "description": "The value indicating whether to rollover group control number."
        },
        "groupControlNumberPrefix": {
          "type": "string",
          "description": "The group control number prefix."
        },
        "groupControlNumberSuffix": {
          "type": "string",
          "description": "The group control number suffix."
        },
        "groupApplicationReceiverQualifier": {
          "type": "string",
          "description": "The group application receiver qualifier."
        },
        "groupApplicationReceiverId": {
          "type": "string",
          "description": "The group application receiver id."
        },
        "groupApplicationSenderQualifier": {
          "type": "string",
          "description": "The group application sender qualifier."
        },
        "groupApplicationSenderId": {
          "type": "string",
          "description": "The group application sender id."
        },
        "groupApplicationPassword": {
          "type": "string",
          "description": "The group application password."
        },
        "overwriteExistingTransactionSetControlNumber": {
          "type": "boolean",
          "description": "The value indicating whether to overwrite existing transaction set control number."
        },
        "transactionSetControlNumberPrefix": {
          "type": "string",
          "description": "The transaction set control number prefix."
        },
        "transactionSetControlNumberSuffix": {
          "type": "string",
          "description": "The transaction set control number suffix."
        },
        "transactionSetControlNumberLowerBound": {
          "type": "integer",
          "format": "int64",
          "description": "The transaction set control number lower bound."
        },
        "transactionSetControlNumberUpperBound": {
          "type": "integer",
          "format": "int64",
          "description": "The transaction set control number upper bound."
        },
        "rolloverTransactionSetControlNumber": {
          "type": "boolean",
          "description": "The value indicating whether to rollover transaction set control number."
        },
        "isTestInterchange": {
          "type": "boolean",
          "description": "The value indicating whether the message is a test interchange."
        },
        "senderInternalIdentification": {
          "type": "string",
          "description": "The sender internal identification."
        },
        "senderInternalSubIdentification": {
          "type": "string",
          "description": "The sender internal sub identification."
        },
        "receiverInternalIdentification": {
          "type": "string",
          "description": "The receiver internal identification."
        },
        "receiverInternalSubIdentification": {
          "type": "string",
          "description": "The receiver internal sub identification."
        }
      },
      "required": [
        "applyDelimiterStringAdvice",
        "createGroupingSegments",
        "enableDefaultGroupHeaders",
        "interchangeControlNumberLowerBound",
        "interchangeControlNumberUpperBound",
        "rolloverInterchangeControlNumber",
        "groupControlNumberLowerBound",
        "groupControlNumberUpperBound",
        "rolloverGroupControlNumber",
        "overwriteExistingTransactionSetControlNumber",
        "transactionSetControlNumberLowerBound",
        "transactionSetControlNumberUpperBound",
        "rolloverTransactionSetControlNumber",
        "isTestInterchange"
      ]
    },
    "EdifactFramingSettings": {
      "type": "object",
      "description": "The Edifact agreement framing settings.",
      "properties": {
        "serviceCodeListDirectoryVersion": {
          "type": "string",
          "description": "The service code list directory version."
        },
        "characterEncoding": {
          "type": "string",
          "description": "The character encoding."
        },
        "protocolVersion": {
          "type": "integer",
          "format": "int32",
          "description": "The protocol version."
        },
        "dataElementSeparator": {
          "type": "integer",
          "format": "int32",
          "description": "The data element separator."
        },
        "componentSeparator": {
          "type": "integer",
          "format": "int32",
          "description": "The component separator."
        },
        "segmentTerminator": {
          "type": "integer",
          "format": "int32",
          "description": "The segment terminator."
        },
        "releaseIndicator": {
          "type": "integer",
          "format": "int32",
          "description": "The release indicator."
        },
        "repetitionSeparator": {
          "type": "integer",
          "format": "int32",
          "description": "The repetition separator."
        },
        "characterSet": {
          "$ref": "#/definitions/EdifactCharacterSet",
          "description": "The EDIFACT frame setting characterSet."
        },
        "decimalPointIndicator": {
          "$ref": "#/definitions/EdifactDecimalIndicator",
          "description": "The EDIFACT frame setting decimal indicator."
        },
        "segmentTerminatorSuffix": {
          "$ref": "#/definitions/SegmentTerminatorSuffix",
          "description": "The EDIFACT frame setting segment terminator suffix."
        }
      },
      "required": [
        "protocolVersion",
        "dataElementSeparator",
        "componentSeparator",
        "segmentTerminator",
        "releaseIndicator",
        "repetitionSeparator",
        "characterSet",
        "decimalPointIndicator",
        "segmentTerminatorSuffix"
      ]
    },
    "EdifactMessageFilter": {
      "type": "object",
      "description": "The Edifact message filter for odata query.",
      "properties": {
        "messageFilterType": {
          "$ref": "#/definitions/MessageFilterType",
          "description": "The message filter type."
        }
      },
      "required": [
        "messageFilterType"
      ]
    },
    "EdifactMessageIdentifier": {
      "type": "object",
      "description": "The Edifact message identifier.",
      "properties": {
        "messageId": {
          "type": "string",
          "description": "The message id on which this envelope settings has to be applied."
        }
      },
      "required": [
        "messageId"
      ]
    },
    "EdifactOneWayAgreement": {
      "type": "object",
      "description": "The Edifact one way agreement.",
      "properties": {
        "senderBusinessIdentity": {
          "$ref": "#/definitions/BusinessIdentity",
          "description": "The sender business identity"
        },
        "receiverBusinessIdentity": {
          "$ref": "#/definitions/BusinessIdentity",
          "description": "The receiver business identity"
        },
        "protocolSettings": {
          "$ref": "#/definitions/EdifactProtocolSettings",
          "description": "The EDIFACT protocol settings."
        }
      },
      "required": [
        "senderBusinessIdentity",
        "receiverBusinessIdentity",
        "protocolSettings"
      ]
    },
    "EdifactProcessingSettings": {
      "type": "object",
      "description": "The Edifact agreement protocol settings.",
      "properties": {
        "maskSecurityInfo": {
          "type": "boolean",
          "description": "The value indicating whether to mask security information."
        },
        "preserveInterchange": {
          "type": "boolean",
          "description": "The value indicating whether to preserve interchange."
        },
        "suspendInterchangeOnError": {
          "type": "boolean",
          "description": "The value indicating whether to suspend interchange on error."
        },
        "createEmptyXmlTagsForTrailingSeparators": {
          "type": "boolean",
          "description": "The value indicating whether to create empty xml tags for trailing separators."
        },
        "useDotAsDecimalSeparator": {
          "type": "boolean",
          "description": "The value indicating whether to use dot as decimal separator."
        }
      },
      "required": [
        "maskSecurityInfo",
        "preserveInterchange",
        "suspendInterchangeOnError",
        "createEmptyXmlTagsForTrailingSeparators",
        "useDotAsDecimalSeparator"
      ]
    },
    "EdifactProtocolSettings": {
      "type": "object",
      "description": "The Edifact agreement protocol settings.",
      "properties": {
        "validationSettings": {
          "$ref": "#/definitions/EdifactValidationSettings",
          "description": "The EDIFACT validation settings."
        },
        "framingSettings": {
          "$ref": "#/definitions/EdifactFramingSettings",
          "description": "The EDIFACT framing settings."
        },
        "envelopeSettings": {
          "$ref": "#/definitions/EdifactEnvelopeSettings",
          "description": "The EDIFACT envelope settings."
        },
        "acknowledgementSettings": {
          "$ref": "#/definitions/EdifactAcknowledgementSettings",
          "description": "The EDIFACT acknowledgement settings."
        },
        "messageFilter": {
          "$ref": "#/definitions/EdifactMessageFilter",
          "description": "The EDIFACT message filter."
        },
        "processingSettings": {
          "$ref": "#/definitions/EdifactProcessingSettings",
          "description": "The EDIFACT processing Settings."
        },
        "envelopeOverrides": {
          "type": "array",
          "description": "The EDIFACT envelope override settings.",
          "items": {
            "$ref": "#/definitions/EdifactEnvelopeOverride"
          },
          "x-ms-identifiers": [
            "messageId"
          ]
        },
        "messageFilterList": {
          "type": "array",
          "description": "The EDIFACT message filter list.",
          "items": {
            "$ref": "#/definitions/EdifactMessageIdentifier"
          },
          "x-ms-identifiers": [
            "messageId"
          ]
        },
        "schemaReferences": {
          "type": "array",
          "description": "The EDIFACT schema references.",
          "items": {
            "$ref": "#/definitions/EdifactSchemaReference"
          },
          "x-ms-identifiers": [
            "messageId"
          ]
        },
        "validationOverrides": {
          "type": "array",
          "description": "The EDIFACT validation override settings.",
          "items": {
            "$ref": "#/definitions/EdifactValidationOverride"
          },
          "x-ms-identifiers": [
            "messageId"
          ]
        },
        "edifactDelimiterOverrides": {
          "type": "array",
          "description": "The EDIFACT delimiter override settings.",
          "items": {
            "$ref": "#/definitions/EdifactDelimiterOverride"
          },
          "x-ms-identifiers": [
            "messageId"
          ]
        }
      },
      "required": [
        "validationSettings",
        "framingSettings",
        "envelopeSettings",
        "acknowledgementSettings",
        "messageFilter",
        "processingSettings",
        "schemaReferences"
      ]
    },
    "EdifactSchemaReference": {
      "type": "object",
      "description": "The Edifact schema reference.",
      "properties": {
        "messageId": {
          "type": "string",
          "description": "The message id."
        },
        "messageVersion": {
          "type": "string",
          "description": "The message version."
        },
        "messageRelease": {
          "type": "string",
          "description": "The message release version."
        },
        "senderApplicationId": {
          "type": "string",
          "description": "The sender application id."
        },
        "senderApplicationQualifier": {
          "type": "string",
          "description": "The sender application qualifier."
        },
        "associationAssignedCode": {
          "type": "string",
          "description": "The association assigned code."
        },
        "schemaName": {
          "type": "string",
          "description": "The schema name."
        }
      },
      "required": [
        "messageId",
        "messageVersion",
        "messageRelease",
        "schemaName"
      ]
    },
    "EdifactValidationOverride": {
      "type": "object",
      "description": "The Edifact validation override settings.",
      "properties": {
        "messageId": {
          "type": "string",
          "description": "The message id on which the validation settings has to be applied."
        },
        "enforceCharacterSet": {
          "type": "boolean",
          "description": "The value indicating whether to validate character Set."
        },
        "validateEdiTypes": {
          "type": "boolean",
          "description": "The value indicating whether to validate EDI types."
        },
        "validateXsdTypes": {
          "type": "boolean",
          "description": "The value indicating whether to validate XSD types."
        },
        "allowLeadingAndTrailingSpacesAndZeroes": {
          "type": "boolean",
          "description": "The value indicating whether to allow leading and trailing spaces and zeroes."
        },
        "trailingSeparatorPolicy": {
          "$ref": "#/definitions/TrailingSeparatorPolicy",
          "description": "The trailing separator policy."
        },
        "trimLeadingAndTrailingSpacesAndZeroes": {
          "type": "boolean",
          "description": "The value indicating whether to trim leading and trailing spaces and zeroes."
        }
      },
      "required": [
        "messageId",
        "enforceCharacterSet",
        "validateEdiTypes",
        "validateXsdTypes",
        "allowLeadingAndTrailingSpacesAndZeroes",
        "trailingSeparatorPolicy",
        "trimLeadingAndTrailingSpacesAndZeroes"
      ]
    },
    "EdifactValidationSettings": {
      "type": "object",
      "description": "The Edifact agreement validation settings.",
      "properties": {
        "validateCharacterSet": {
          "type": "boolean",
          "description": "The value indicating whether to validate character set in the message."
        },
        "checkDuplicateInterchangeControlNumber": {
          "type": "boolean",
          "description": "The value indicating whether to check for duplicate interchange control number."
        },
        "interchangeControlNumberValidityDays": {
          "type": "integer",
          "format": "int32",
          "description": "The validity period of interchange control number."
        },
        "checkDuplicateGroupControlNumber": {
          "type": "boolean",
          "description": "The value indicating whether to check for duplicate group control number."
        },
        "checkDuplicateTransactionSetControlNumber": {
          "type": "boolean",
          "description": "The value indicating whether to check for duplicate transaction set control number."
        },
        "validateEdiTypes": {
          "type": "boolean",
          "description": "The value indicating whether to Whether to validate EDI types."
        },
        "validateXsdTypes": {
          "type": "boolean",
          "description": "The value indicating whether to Whether to validate XSD types."
        },
        "allowLeadingAndTrailingSpacesAndZeroes": {
          "type": "boolean",
          "description": "The value indicating whether to allow leading and trailing spaces and zeroes."
        },
        "trimLeadingAndTrailingSpacesAndZeroes": {
          "type": "boolean",
          "description": "The value indicating whether to trim leading and trailing spaces and zeroes."
        },
        "trailingSeparatorPolicy": {
          "$ref": "#/definitions/TrailingSeparatorPolicy",
          "description": "The trailing separator policy."
        }
      },
      "required": [
        "validateCharacterSet",
        "checkDuplicateInterchangeControlNumber",
        "interchangeControlNumberValidityDays",
        "checkDuplicateGroupControlNumber",
        "checkDuplicateTransactionSetControlNumber",
        "validateEdiTypes",
        "validateXsdTypes",
        "allowLeadingAndTrailingSpacesAndZeroes",
        "trimLeadingAndTrailingSpacesAndZeroes",
        "trailingSeparatorPolicy"
      ]
    },
    "EncryptionAlgorithm": {
      "type": "string",
      "description": "The encryption algorithm.",
      "enum": [
        "NotSpecified",
        "None",
        "DES3",
        "RC2",
        "AES128",
        "AES192",
        "AES256"
      ],
      "x-ms-enum": {
        "name": "EncryptionAlgorithm",
        "modelAsString": true,
        "values": [
          {
            "name": "NotSpecified",
            "value": "NotSpecified",
            "description": "Represents a state where the value is not specified."
          },
          {
            "name": "None",
            "value": "None",
            "description": "Represents no encryption algorithm."
          },
          {
            "name": "DES3",
            "value": "DES3",
            "description": "Represents the DES3 encryption algorithm."
          },
          {
            "name": "RC2",
            "value": "RC2",
            "description": "Represents the RC2 encryption algorithm."
          },
          {
            "name": "AES128",
            "value": "AES128",
            "description": "Represents the AES-128 encryption algorithm."
          },
          {
            "name": "AES192",
            "value": "AES192",
            "description": "Represents the AES-192 encryption algorithm."
          },
          {
            "name": "AES256",
            "value": "AES256",
            "description": "Represents the AES-256 encryption algorithm."
          }
        ]
      }
    },
    "ErrorInfo": {
      "type": "object",
      "description": "The error info.",
      "properties": {
        "code": {
          "type": "string",
          "description": "The error code."
        }
      },
      "required": [
        "code"
      ]
    },
    "EventLevel": {
      "type": "string",
      "description": "The event level.",
      "enum": [
        "LogAlways",
        "Critical",
        "Error",
        "Warning",
        "Informational",
        "Verbose"
      ],
      "x-ms-enum": {
        "name": "EventLevel",
        "modelAsString": true,
        "values": [
          {
            "name": "LogAlways",
            "value": "LogAlways",
            "description": "Represents a log always event level."
          },
          {
            "name": "Critical",
            "value": "Critical",
            "description": "Represents a critical event level."
          },
          {
            "name": "Error",
            "value": "Error",
            "description": "Represents an error event level."
          },
          {
            "name": "Warning",
            "value": "Warning",
            "description": "Represents a warning event level."
          },
          {
            "name": "Informational",
            "value": "Informational",
            "description": "Represents an information event level."
          },
          {
            "name": "Verbose",
            "value": "Verbose",
            "description": "Represents a verbose event level."
          }
        ]
      }
    },
    "Expression": {
      "type": "object",
      "description": "The expression.",
      "properties": {
        "text": {
          "type": "string",
          "description": "The text."
        },
        "value": {
          "type": "object",
          "description": "The expression value",
          "additionalProperties": {}
        },
        "subexpressions": {
          "type": "array",
          "description": "The sub expressions.",
          "items": {
            "$ref": "#/definitions/Expression"
          },
          "x-ms-identifiers": []
        },
        "error": {
          "$ref": "#/definitions/AzureResourceErrorInfo",
          "description": "The azure resource error info."
        }
      }
    },
    "ExpressionRoot": {
      "type": "object",
      "description": "The expression root.",
      "properties": {
        "path": {
          "type": "string",
          "description": "The path."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Expression"
        }
      ]
    },
    "ExpressionTraces": {
      "type": "object",
      "description": "The expression traces.",
      "properties": {
        "inputs": {
          "type": "array",
          "description": "The expression trace.",
          "items": {
            "$ref": "#/definitions/ExpressionRoot"
          },
          "x-ms-identifiers": [
            "path"
          ]
        }
      }
    },
    "FlowAccessControlConfiguration": {
      "type": "object",
      "description": "The access control configuration.",
      "properties": {
        "triggers": {
          "$ref": "#/definitions/FlowAccessControlConfigurationPolicy",
          "description": "The access control configuration for invoking workflow triggers."
        },
        "contents": {
          "$ref": "#/definitions/FlowAccessControlConfigurationPolicy",
          "description": "The access control configuration for accessing workflow run contents."
        },
        "actions": {
          "$ref": "#/definitions/FlowAccessControlConfigurationPolicy",
          "description": "The access control configuration for workflow actions."
        },
        "workflowManagement": {
          "$ref": "#/definitions/FlowAccessControlConfigurationPolicy",
          "description": "The access control configuration for workflow management."
        }
      }
    },
    "FlowAccessControlConfigurationPolicy": {
      "type": "object",
      "description": "The access control configuration policy.",
      "properties": {
        "allowedCallerIpAddresses": {
          "type": "array",
          "description": "The allowed caller IP address ranges.",
          "items": {
            "$ref": "#/definitions/IpAddressRange"
          },
          "x-ms-identifiers": []
        },
        "openAuthenticationPolicies": {
          "$ref": "#/definitions/OpenAuthenticationAccessPolicies",
          "description": "The authentication policies for workflow."
        }
      }
    },
    "FlowEndpoints": {
      "type": "object",
      "description": "The flow endpoints configuration.",
      "properties": {
        "outgoingIpAddresses": {
          "type": "array",
          "description": "The outgoing ip address.",
          "items": {
            "$ref": "#/definitions/IpAddress"
          },
          "x-ms-identifiers": [
            "address"
          ]
        },
        "accessEndpointIpAddresses": {
          "type": "array",
          "description": "The access endpoint ip address.",
          "items": {
            "$ref": "#/definitions/IpAddress"
          },
          "x-ms-identifiers": [
            "address"
          ]
        }
      }
    },
    "FlowEndpointsConfiguration": {
      "type": "object",
      "description": "The endpoints configuration.",
      "properties": {
        "workflow": {
          "$ref": "#/definitions/FlowEndpoints",
          "description": "The workflow endpoints."
        },
        "connector": {
          "$ref": "#/definitions/FlowEndpoints",
          "description": "The connector endpoints."
        }
      }
    },
    "FlowRunExecutionMode": {
      "type": "string",
      "description": "The flow run execution mode.",
      "enum": [
        "NotSpecified",
        "StaticResults",
        "ResubmittedResults"
      ],
      "x-ms-enum": {
        "name": "FlowRunExecutionMode",
        "modelAsString": true,
        "values": [
          {
            "name": "NotSpecified",
            "value": "NotSpecified",
            "description": "The flow run execution mode is not specified."
          },
          {
            "name": "StaticResults",
            "value": "StaticResults",
            "description": "The flow run execution mode is static results."
          },
          {
            "name": "ResubmittedResults",
            "value": "ResubmittedResults",
            "description": "The flow run execution mode is resubmitted results."
          }
        ]
      }
    },
    "FlowTemplateConnectorDetails": {
      "type": "object",
      "description": "The template properties.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The identifier."
        },
        "kind": {
          "type": "string",
          "description": "The kind."
        }
      }
    },
    "FlowTemplateDetails": {
      "type": "object",
      "description": "The template details.",
      "properties": {
        "by": {
          "type": "string",
          "description": "The template author."
        },
        "category": {
          "type": "string",
          "description": "The template category."
        }
      }
    },
    "FlowTemplateManifest": {
      "type": "object",
      "description": "The flow template manifest.",
      "properties": {
        "title": {
          "type": "string",
          "description": "The title."
        },
        "description": {
          "type": "string",
          "description": "The description."
        },
        "summary": {
          "type": "string",
          "description": "The summary."
        },
        "type": {
          "$ref": "#/definitions/FlowTemplateType",
          "description": "The flow template type."
        },
        "supportedSku": {
          "$ref": "#/definitions/FlowTemplateSku",
          "description": "The flow template supported sku."
        },
        "featuredConnectors": {
          "$ref": "#/definitions/FlowTemplateConnectorDetails",
          "description": "The flow template connector details."
        },
        "details": {
          "$ref": "#/definitions/FlowTemplateDetails",
          "description": "The flow template details."
        }
      }
    },
    "FlowTemplateSku": {
      "type": "string",
      "description": "The flow template sku.",
      "enum": [
        "None",
        "Consumption",
        "Standard"
      ],
      "x-ms-enum": {
        "name": "FlowTemplateSku",
        "modelAsString": true,
        "values": [
          {
            "name": "None",
            "value": "None",
            "description": "The flow template sku is none."
          },
          {
            "name": "Consumption",
            "value": "Consumption",
            "description": "The flow template sku is consumption."
          },
          {
            "name": "Standard",
            "value": "Standard",
            "description": "The flow template sku is standard."
          }
        ]
      }
    },
    "FlowTemplateState": {
      "type": "string",
      "description": "The flow template state.",
      "enum": [
        "NotSpecified",
        "Development",
        "Testing",
        "Production"
      ],
      "x-ms-enum": {
        "name": "FlowTemplateState",
        "modelAsString": true,
        "values": [
          {
            "name": "NotSpecified",
            "value": "NotSpecified",
            "description": "The flow template is in the draft state."
          },
          {
            "name": "Development",
            "value": "Development",
            "description": "The flow template is in the development state."
          },
          {
            "name": "Testing",
            "value": "Testing",
            "description": "The flow template is in the testing state."
          },
          {
            "name": "Production",
            "value": "Production",
            "description": "The flow template is in the production state."
          }
        ]
      }
    },
    "FlowTemplateType": {
      "type": "string",
      "description": "The flow template type.",
      "enum": [
        "NotSpecified",
        "Workflow",
        "Accelerator"
      ],
      "x-ms-enum": {
        "name": "FlowTemplateType",
        "modelAsString": true,
        "values": [
          {
            "name": "NotSpecified",
            "value": "NotSpecified",
            "description": "The flow template type is not specified."
          },
          {
            "name": "Workflow",
            "value": "Workflow",
            "description": "The flow template type is workflow."
          },
          {
            "name": "Accelerator",
            "value": "Accelerator",
            "description": "The flow template type is accelerator."
          }
        ]
      }
    },
    "GenerateUpgradedDefinitionParameters": {
      "type": "object",
      "description": "The parameters to generate upgraded definition.",
      "properties": {
        "targetSchemaVersion": {
          "type": "string",
          "description": "The target schema version."
        }
      }
    },
    "GetCallbackUrlParameters": {
      "type": "object",
      "description": "The callback url parameters.",
      "properties": {
        "notAfter": {
          "type": "string",
          "format": "date-time",
          "description": "The expiry time."
        },
        "keyType": {
          "$ref": "#/definitions/KeyType",
          "description": "The key type."
        }
      }
    },
    "HashingAlgorithm": {
      "type": "string",
      "description": "The signing or hashing algorithm.",
      "enum": [
        "NotSpecified",
        "None",
        "MD5",
        "SHA1",
        "SHA2256",
        "SHA2384",
        "SHA2512"
      ],
      "x-ms-enum": {
        "name": "HashingAlgorithm",
        "modelAsString": true,
        "values": [
          {
            "name": "NotSpecified",
            "value": "NotSpecified",
            "description": "Represents a state where the value is not specified."
          },
          {
            "name": "None",
            "value": "None",
            "description": "Represents no hashing algorithm."
          },
          {
            "name": "MD5",
            "value": "MD5",
            "description": "Represents the MD5 hashing algorithm."
          },
          {
            "name": "SHA1",
            "value": "SHA1",
            "description": "Represents the SHA1 hashing algorithm."
          },
          {
            "name": "SHA2256",
            "value": "SHA2256",
            "description": "Represents the SHA2-256 hashing algorithm."
          },
          {
            "name": "SHA2384",
            "value": "SHA2384",
            "description": "Represents the SHA2-384 hashing algorithm."
          },
          {
            "name": "SHA2512",
            "value": "SHA2512",
            "description": "Represents the SHA2-512 hashing algorithm."
          }
        ]
      }
    },
    "IntegrationAccount": {
      "type": "object",
      "description": "The integration account.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/IntegrationAccountProperties",
          "description": "The integration account properties."
        },
        "sku": {
          "$ref": "#/definitions/IntegrationAccountSku",
          "description": "The sku."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "IntegrationAccountAgreement": {
      "type": "object",
      "description": "The integration account agreement.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/IntegrationAccountAgreementProperties",
          "description": "The integration account agreement properties."
        }
      },
      "required": [
        "properties"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "IntegrationAccountAgreementListResult": {
      "type": "object",
      "description": "The response of a IntegrationAccountAgreement list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The IntegrationAccountAgreement items on this page",
          "items": {
            "$ref": "#/definitions/IntegrationAccountAgreement"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "IntegrationAccountAgreementProperties": {
      "type": "object",
      "description": "The integration account agreement properties.",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/WorkflowProvisioningState",
          "description": "The provisioning state.",
          "readOnly": true
        },
        "createdTime": {
          "type": "string",
          "format": "date-time",
          "description": "The created time.",
          "readOnly": true
        },
        "changedTime": {
          "type": "string",
          "format": "date-time",
          "description": "The changed time.",
          "readOnly": true
        },
        "metadata": {
          "type": "object",
          "description": "The metadata.",
          "additionalProperties": {}
        },
        "agreementType": {
          "$ref": "#/definitions/AgreementType",
          "description": "The agreement type."
        },
        "hostPartner": {
          "type": "string",
          "description": "The integration account partner that is set as host partner for this agreement."
        },
        "guestPartner": {
          "type": "string",
          "description": "The integration account partner that is set as guest partner for this agreement."
        },
        "hostIdentity": {
          "$ref": "#/definitions/BusinessIdentity",
          "description": "The business identity of the host partner."
        },
        "guestIdentity": {
          "$ref": "#/definitions/BusinessIdentity",
          "description": "The business identity of the guest partner."
        },
        "content": {
          "$ref": "#/definitions/AgreementContent",
          "description": "The agreement content."
        }
      },
      "required": [
        "agreementType",
        "hostPartner",
        "guestPartner",
        "hostIdentity",
        "guestIdentity",
        "content"
      ]
    },
    "IntegrationAccountCertificate": {
      "type": "object",
      "description": "The integration account certificate.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/IntegrationAccountCertificateProperties",
          "description": "The integration account certificate properties."
        }
      },
      "required": [
        "properties"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "IntegrationAccountCertificateListResult": {
      "type": "object",
      "description": "The response of a IntegrationAccountCertificate list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The IntegrationAccountCertificate items on this page",
          "items": {
            "$ref": "#/definitions/IntegrationAccountCertificate"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "IntegrationAccountCertificateProperties": {
      "type": "object",
      "description": "The integration account certificate properties.",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/WorkflowProvisioningState",
          "description": "The provisioning state.",
          "readOnly": true
        },
        "createdTime": {
          "type": "string",
          "format": "date-time",
          "description": "The created time.",
          "readOnly": true
        },
        "changedTime": {
          "type": "string",
          "format": "date-time",
          "description": "The changed time.",
          "readOnly": true
        },
        "metadata": {
          "type": "object",
          "description": "The metadata.",
          "additionalProperties": {}
        },
        "key": {
          "$ref": "#/definitions/KeyVaultKeyReference",
          "description": "The key details in the key vault."
        },
        "publicCertificate": {
          "type": "string",
          "description": "The public certificate."
        }
      }
    },
    "IntegrationAccountListResult": {
      "type": "object",
      "description": "The response of a IntegrationAccount list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The IntegrationAccount items on this page",
          "items": {
            "$ref": "#/definitions/IntegrationAccount"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "IntegrationAccountMap": {
      "type": "object",
      "description": "The integration account map.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/IntegrationAccountMapProperties",
          "description": "The integration account map properties."
        }
      },
      "required": [
        "properties"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "IntegrationAccountMapListResult": {
      "type": "object",
      "description": "The response of a IntegrationAccountMap list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The IntegrationAccountMap items on this page",
          "items": {
            "$ref": "#/definitions/IntegrationAccountMap"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "IntegrationAccountMapProperties": {
      "type": "object",
      "description": "The integration account map.",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/WorkflowProvisioningState",
          "description": "The provisioning state.",
          "readOnly": true
        },
        "mapType": {
          "$ref": "#/definitions/MapType",
          "description": "The map type."
        },
        "parametersSchema": {
          "$ref": "#/definitions/IntegrationAccountMapPropertiesParametersSchema",
          "description": "The parameters schema of integration account map."
        },
        "createdTime": {
          "type": "string",
          "format": "date-time",
          "description": "The created time.",
          "readOnly": true
        },
        "changedTime": {
          "type": "string",
          "format": "date-time",
          "description": "The changed time.",
          "readOnly": true
        },
        "content": {
          "type": "string",
          "description": "The content."
        },
        "contentType": {
          "type": "string",
          "description": "The content type."
        },
        "contentLink": {
          "$ref": "#/definitions/ContentLink",
          "description": "The content link.",
          "readOnly": true
        },
        "metadata": {
          "type": "object",
          "description": "The metadata.",
          "additionalProperties": {}
        }
      },
      "required": [
        "mapType"
      ]
    },
    "IntegrationAccountMapPropertiesParametersSchema": {
      "type": "object",
      "description": "The parameters schema of integration account map.",
      "properties": {
        "ref": {
          "type": "string",
          "description": "The reference name."
        }
      }
    },
    "IntegrationAccountPartner": {
      "type": "object",
      "description": "The integration account partner.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/IntegrationAccountPartnerProperties",
          "description": "The integration account partner properties."
        }
      },
      "required": [
        "properties"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "IntegrationAccountPartnerListResult": {
      "type": "object",
      "description": "The response of a IntegrationAccountPartner list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The IntegrationAccountPartner items on this page",
          "items": {
            "$ref": "#/definitions/IntegrationAccountPartner"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "IntegrationAccountPartnerProperties": {
      "type": "object",
      "description": "The integration account partner properties.",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/WorkflowProvisioningState",
          "description": "The provisioning state.",
          "readOnly": true
        },
        "partnerType": {
          "$ref": "#/definitions/PartnerType",
          "description": "The partner type."
        },
        "createdTime": {
          "type": "string",
          "format": "date-time",
          "description": "The created time.",
          "readOnly": true
        },
        "changedTime": {
          "type": "string",
          "format": "date-time",
          "description": "The changed time.",
          "readOnly": true
        },
        "metadata": {
          "type": "object",
          "description": "The metadata.",
          "additionalProperties": {}
        },
        "content": {
          "$ref": "#/definitions/PartnerContent",
          "description": "The partner content."
        }
      },
      "required": [
        "partnerType",
        "content"
      ]
    },
    "IntegrationAccountProperties": {
      "type": "object",
      "description": "The integration account properties.",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/WorkflowProvisioningState",
          "description": "The provisioning state.",
          "readOnly": true
        },
        "integrationServiceEnvironment": {
          "$ref": "#/definitions/ResourceReference",
          "description": "The integration service environment."
        },
        "state": {
          "$ref": "#/definitions/WorkflowState",
          "description": "The workflow state."
        }
      }
    },
    "IntegrationAccountSchema": {
      "type": "object",
      "description": "The integration account schema.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/IntegrationAccountSchemaProperties",
          "description": "The integration account schema properties."
        }
      },
      "required": [
        "properties"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "IntegrationAccountSchemaListResult": {
      "type": "object",
      "description": "The response of a IntegrationAccountSchema list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The IntegrationAccountSchema items on this page",
          "items": {
            "$ref": "#/definitions/IntegrationAccountSchema"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "IntegrationAccountSchemaProperties": {
      "type": "object",
      "description": "The integration account schema properties.",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/WorkflowProvisioningState",
          "description": "The provisioning state.",
          "readOnly": true
        },
        "schemaType": {
          "$ref": "#/definitions/SchemaType",
          "description": "The schema type."
        },
        "targetNamespace": {
          "type": "string",
          "description": "The target namespace of the schema."
        },
        "documentName": {
          "type": "string",
          "description": "The document name."
        },
        "fileName": {
          "type": "string",
          "description": "The file name."
        },
        "createdTime": {
          "type": "string",
          "format": "date-time",
          "description": "The created time.",
          "readOnly": true
        },
        "changedTime": {
          "type": "string",
          "format": "date-time",
          "description": "The changed time.",
          "readOnly": true
        },
        "metadata": {
          "type": "object",
          "description": "The metadata.",
          "additionalProperties": {}
        },
        "content": {
          "type": "string",
          "description": "The content."
        },
        "contentType": {
          "type": "string",
          "description": "The content type."
        },
        "contentLink": {
          "$ref": "#/definitions/ContentLink",
          "description": "The content link.",
          "readOnly": true
        }
      },
      "required": [
        "schemaType"
      ]
    },
    "IntegrationAccountSession": {
      "type": "object",
      "description": "The integration account session.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/IntegrationAccountSessionProperties",
          "description": "The integration account session properties."
        }
      },
      "required": [
        "properties"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "IntegrationAccountSessionListResult": {
      "type": "object",
      "description": "The response of a IntegrationAccountSession list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The IntegrationAccountSession items on this page",
          "items": {
            "$ref": "#/definitions/IntegrationAccountSession"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "IntegrationAccountSessionProperties": {
      "type": "object",
      "description": "The integration account session properties.",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/WorkflowProvisioningState",
          "description": "The provisioning state.",
          "readOnly": true
        },
        "createdTime": {
          "type": "string",
          "format": "date-time",
          "description": "The created time.",
          "readOnly": true
        },
        "changedTime": {
          "type": "string",
          "format": "date-time",
          "description": "The changed time.",
          "readOnly": true
        },
        "content": {
          "type": "object",
          "description": "The session content.",
          "additionalProperties": {}
        }
      }
    },
    "IntegrationAccountSku": {
      "type": "object",
      "description": "The integration account sku.",
      "properties": {
        "name": {
          "$ref": "#/definitions/IntegrationAccountSkuName",
          "description": "The sku name."
        }
      },
      "required": [
        "name"
      ]
    },
    "IntegrationAccountSkuName": {
      "type": "string",
      "description": "The integration account sku name.",
      "enum": [
        "NotSpecified",
        "Free",
        "Basic",
        "Standard"
      ],
      "x-ms-enum": {
        "name": "IntegrationAccountSkuName",
        "modelAsString": true,
        "values": [
          {
            "name": "NotSpecified",
            "value": "NotSpecified",
            "description": "Represents a state where the value is not specified."
          },
          {
            "name": "Free",
            "value": "Free",
            "description": "Represents a free integration account SKU."
          },
          {
            "name": "Basic",
            "value": "Basic",
            "description": "Represents a basic integration account SKU."
          },
          {
            "name": "Standard",
            "value": "Standard",
            "description": "Represents a standard integration account SKU."
          }
        ]
      }
    },
    "IntegrationServiceEnvironmenEncryptionConfiguration": {
      "type": "object",
      "description": "The encryption configuration for the integration service environment.",
      "properties": {
        "encryptionKeyReference": {
          "$ref": "#/definitions/IntegrationServiceEnvironmenEncryptionKeyReference",
          "description": "The encryption key reference."
        }
      }
    },
    "IntegrationServiceEnvironmenEncryptionKeyReference": {
      "type": "object",
      "description": "The encryption key details for the integration service environment.",
      "properties": {
        "keyVault": {
          "$ref": "#/definitions/ResourceReference",
          "description": "The key vault reference."
        },
        "keyName": {
          "type": "string",
          "description": "Gets the key name in the Key Vault."
        },
        "keyVersion": {
          "type": "string",
          "description": "Gets the version of the key specified in the keyName property."
        }
      }
    },
    "IntegrationServiceEnvironment": {
      "type": "object",
      "description": "The integration service environment.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/IntegrationServiceEnvironmentProperties",
          "description": "The integration service environment properties."
        },
        "sku": {
          "$ref": "#/definitions/IntegrationServiceEnvironmentSku",
          "description": "The sku."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "IntegrationServiceEnvironmentAccessEndpoint": {
      "type": "object",
      "description": "The integration service environment access endpoint.",
      "properties": {
        "type": {
          "$ref": "#/definitions/IntegrationServiceEnvironmentAccessEndpointType",
          "description": "The access endpoint type."
        }
      }
    },
    "IntegrationServiceEnvironmentAccessEndpointType": {
      "type": "string",
      "description": "The integration service environment access endpoint type.",
      "enum": [
        "NotSpecified",
        "External",
        "Internal"
      ],
      "x-ms-enum": {
        "name": "IntegrationServiceEnvironmentAccessEndpointType",
        "modelAsString": true,
        "values": [
          {
            "name": "NotSpecified",
            "value": "NotSpecified",
            "description": "Represents a state where the value is not specified."
          },
          {
            "name": "External",
            "value": "External",
            "description": "Represents an external access endpoint type."
          },
          {
            "name": "Internal",
            "value": "Internal",
            "description": "Represents an internal access endpoint type."
          }
        ]
      }
    },
    "IntegrationServiceEnvironmentListResult": {
      "type": "object",
      "description": "The response of a IntegrationServiceEnvironment list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The IntegrationServiceEnvironment items on this page",
          "items": {
            "$ref": "#/definitions/IntegrationServiceEnvironment"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "IntegrationServiceEnvironmentManagedApi": {
      "type": "object",
      "description": "The integration service environment managed api.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/IntegrationServiceEnvironmentManagedApiProperties",
          "description": "The integration service environment managed api properties."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "IntegrationServiceEnvironmentManagedApiDeploymentParameters": {
      "type": "object",
      "description": "The integration service environment managed api deployment parameters.",
      "properties": {
        "contentLinkDefinition": {
          "$ref": "#/definitions/ContentLink",
          "description": "The integration service environment managed api content link for deployment."
        }
      }
    },
    "IntegrationServiceEnvironmentManagedApiListResult": {
      "type": "object",
      "description": "The response of a IntegrationServiceEnvironmentManagedApi list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The IntegrationServiceEnvironmentManagedApi items on this page",
          "items": {
            "$ref": "#/definitions/IntegrationServiceEnvironmentManagedApi"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "IntegrationServiceEnvironmentManagedApiProperties": {
      "type": "object",
      "description": "The integration service environment managed api properties.",
      "properties": {
        "deploymentParameters": {
          "$ref": "#/definitions/IntegrationServiceEnvironmentManagedApiDeploymentParameters",
          "description": "The integration service environment managed api deployment parameters."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ApiResourceProperties"
        }
      ]
    },
    "IntegrationServiceEnvironmentNetworkDependency": {
      "type": "object",
      "description": "The azure async operation resource.",
      "properties": {
        "category": {
          "$ref": "#/definitions/IntegrationServiceEnvironmentNetworkDependencyCategoryType",
          "description": "The network dependency category type."
        },
        "displayName": {
          "type": "string",
          "description": "The display name."
        },
        "endpoints": {
          "type": "array",
          "description": "The endpoints.",
          "items": {
            "$ref": "#/definitions/IntegrationServiceEnvironmentNetworkEndpoint"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "IntegrationServiceEnvironmentNetworkDependencyCategoryType": {
      "type": "string",
      "description": "The integration service environment network dependency category type.",
      "enum": [
        "NotSpecified",
        "AzureStorage",
        "AzureManagement",
        "AzureActiveDirectory",
        "SSLCertificateVerification",
        "DiagnosticLogsAndMetrics",
        "IntegrationServiceEnvironmentConnectors",
        "RedisCache",
        "AccessEndpoints",
        "RecoveryService",
        "SQL",
        "RegionalService"
      ],
      "x-ms-enum": {
        "name": "IntegrationServiceEnvironmentNetworkDependencyCategoryType",
        "modelAsString": true,
        "values": [
          {
            "name": "NotSpecified",
            "value": "NotSpecified",
            "description": "Represents a state where the value is not specified."
          },
          {
            "name": "AzureStorage",
            "value": "AzureStorage",
            "description": "Represents an Azure Storage network dependency category type."
          },
          {
            "name": "AzureManagement",
            "value": "AzureManagement",
            "description": "Represents an Azure Management network dependency category type."
          },
          {
            "name": "AzureActiveDirectory",
            "value": "AzureActiveDirectory",
            "description": "Represents an Azure Active Directory network dependency category type."
          },
          {
            "name": "SSLCertificateVerification",
            "value": "SSLCertificateVerification",
            "description": "Represents an SSL Certificate Verification network dependency category type."
          },
          {
            "name": "DiagnosticLogsAndMetrics",
            "value": "DiagnosticLogsAndMetrics",
            "description": "Represents a Diagnostic Logs and Metrics network dependency category type."
          },
          {
            "name": "IntegrationServiceEnvironmentConnectors",
            "value": "IntegrationServiceEnvironmentConnectors",
            "description": "Represents an Integration Service Environment Connectors network dependency category type."
          },
          {
            "name": "RedisCache",
            "value": "RedisCache",
            "description": "Represents a Redis Cache network dependency category type."
          },
          {
            "name": "AccessEndpoints",
            "value": "AccessEndpoints",
            "description": "Represents an Access Endpoints network dependency category type."
          },
          {
            "name": "RecoveryService",
            "value": "RecoveryService",
            "description": "Represents a Recovery Service network dependency category type."
          },
          {
            "name": "SQL",
            "value": "SQL",
            "description": "Represents a SQL network dependency category type."
          },
          {
            "name": "RegionalService",
            "value": "RegionalService",
            "description": "Represents a Regional Service network dependency category type."
          }
        ]
      }
    },
    "IntegrationServiceEnvironmentNetworkEndPointAccessibilityState": {
      "type": "string",
      "description": "The integration service environment network endpoint accessibility state.",
      "enum": [
        "NotSpecified",
        "Unknown",
        "Available",
        "NotAvailable"
      ],
      "x-ms-enum": {
        "name": "IntegrationServiceEnvironmentNetworkEndPointAccessibilityState",
        "modelAsString": true,
        "values": [
          {
            "name": "NotSpecified",
            "value": "NotSpecified",
            "description": "Represents a state where the value is not specified."
          },
          {
            "name": "Unknown",
            "value": "Unknown",
            "description": "Represents an unknown network endpoint accessibility state."
          },
          {
            "name": "Available",
            "value": "Available",
            "description": "Represents an available network endpoint accessibility state."
          },
          {
            "name": "NotAvailable",
            "value": "NotAvailable",
            "description": "Represents a not available network endpoint accessibility state."
          }
        ]
      }
    },
    "IntegrationServiceEnvironmentNetworkEndpoint": {
      "type": "object",
      "description": "The network endpoint.",
      "properties": {
        "accessibility": {
          "$ref": "#/definitions/IntegrationServiceEnvironmentNetworkEndPointAccessibilityState",
          "description": "The accessibility state."
        },
        "domainName": {
          "type": "string",
          "description": "The domain name."
        },
        "ports": {
          "type": "array",
          "description": "The ports.",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "IntegrationServiceEnvironmentNetworkHealth": {
      "type": "object",
      "description": "The integration service environment network health.",
      "properties": {
        "outboundNetworkDependencies": {
          "type": "array",
          "description": "The outbound network dependencies.",
          "items": {
            "$ref": "#/definitions/IntegrationServiceEnvironmentNetworkDependency"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "IntegrationServiceEnvironmentProperties": {
      "type": "object",
      "description": "The integration service environment properties.",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/WorkflowProvisioningState",
          "description": "The provisioning state.",
          "readOnly": true
        },
        "state": {
          "$ref": "#/definitions/WorkflowState",
          "description": "The integration service environment state."
        },
        "integrationServiceEnvironmentId": {
          "type": "string",
          "description": "Gets the tracking id."
        },
        "endpointsConfiguration": {
          "$ref": "#/definitions/FlowEndpointsConfiguration",
          "description": "The endpoints configuration."
        },
        "networkConfiguration": {
          "$ref": "#/definitions/NetworkConfiguration",
          "description": "The network configuration."
        },
        "encryptionConfiguration": {
          "$ref": "#/definitions/IntegrationServiceEnvironmenEncryptionConfiguration",
          "description": "The encryption configuration."
        }
      }
    },
    "IntegrationServiceEnvironmentSku": {
      "type": "object",
      "description": "The integration service environment sku.",
      "properties": {
        "name": {
          "$ref": "#/definitions/IntegrationServiceEnvironmentSkuName",
          "description": "The sku name."
        },
        "capacity": {
          "type": "integer",
          "format": "int32",
          "description": "The sku capacity."
        }
      }
    },
    "IntegrationServiceEnvironmentSkuCapacity": {
      "type": "object",
      "description": "The integration service environment sku capacity.",
      "properties": {
        "minimum": {
          "type": "integer",
          "format": "int32",
          "description": "The minimum capacity."
        },
        "maximum": {
          "type": "integer",
          "format": "int32",
          "description": "The maximum capacity."
        },
        "default": {
          "type": "integer",
          "format": "int32",
          "description": "The default capacity."
        },
        "scaleType": {
          "$ref": "#/definitions/IntegrationServiceEnvironmentSkuScaleType",
          "description": "The sku scale type."
        }
      }
    },
    "IntegrationServiceEnvironmentSkuDefinition": {
      "type": "object",
      "description": "The integration service environment sku definition.",
      "properties": {
        "resourceType": {
          "type": "string",
          "description": "The resource type."
        },
        "sku": {
          "$ref": "#/definitions/IntegrationServiceEnvironmentSkuDefinitionSku",
          "description": "The sku."
        },
        "capacity": {
          "$ref": "#/definitions/IntegrationServiceEnvironmentSkuCapacity",
          "description": "The sku capacity."
        }
      }
    },
    "IntegrationServiceEnvironmentSkuDefinitionSku": {
      "type": "object",
      "description": "The sku.",
      "properties": {
        "name": {
          "$ref": "#/definitions/IntegrationServiceEnvironmentSkuName",
          "description": "The sku name."
        },
        "tier": {
          "type": "string",
          "description": "The sku tier."
        }
      }
    },
    "IntegrationServiceEnvironmentSkuList": {
      "type": "object",
      "description": "The list of integration service environment skus.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The IntegrationServiceEnvironmentSkuDefinition items on this page",
          "items": {
            "$ref": "#/definitions/IntegrationServiceEnvironmentSkuDefinition"
          },
          "x-ms-identifiers": []
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "IntegrationServiceEnvironmentSkuName": {
      "type": "string",
      "description": "The integration service environment sku name.",
      "enum": [
        "NotSpecified",
        "Premium",
        "Developer"
      ],
      "x-ms-enum": {
        "name": "IntegrationServiceEnvironmentSkuName",
        "modelAsString": true,
        "values": [
          {
            "name": "NotSpecified",
            "value": "NotSpecified",
            "description": "Represents a state where the value is not specified."
          },
          {
            "name": "Premium",
            "value": "Premium",
            "description": "Represents a premium integration service environment SKU."
          },
          {
            "name": "Developer",
            "value": "Developer",
            "description": "Represents a developer integration service environment SKU."
          }
        ]
      }
    },
    "IntegrationServiceEnvironmentSkuScaleType": {
      "type": "string",
      "description": "The integration service environment sku scale type.",
      "enum": [
        "Manual",
        "Automatic",
        "None"
      ],
      "x-ms-enum": {
        "name": "IntegrationServiceEnvironmentSkuScaleType",
        "modelAsString": true,
        "values": [
          {
            "name": "Manual",
            "value": "Manual",
            "description": "Represents a manual scale type."
          },
          {
            "name": "Automatic",
            "value": "Automatic",
            "description": "Represents an automatic scale type."
          },
          {
            "name": "None",
            "value": "None",
            "description": "Represents no scale type."
          }
        ]
      }
    },
    "IpAddress": {
      "type": "object",
      "description": "The ip address.",
      "properties": {
        "address": {
          "type": "string",
          "description": "The address."
        }
      }
    },
    "IpAddressRange": {
      "type": "object",
      "description": "The ip address range.",
      "properties": {
        "addressRange": {
          "type": "string",
          "description": "The IP address range."
        }
      }
    },
    "JsonSchema": {
      "type": "object",
      "description": "The JSON schema.",
      "properties": {
        "title": {
          "type": "string",
          "description": "The JSON title."
        },
        "content": {
          "type": "string",
          "description": "The JSON content."
        }
      }
    },
    "KeyType": {
      "type": "string",
      "description": "The key type.",
      "enum": [
        "NotSpecified",
        "Primary",
        "Secondary"
      ],
      "x-ms-enum": {
        "name": "KeyType",
        "modelAsString": true,
        "values": [
          {
            "name": "NotSpecified",
            "value": "NotSpecified",
            "description": "Represents a state where the value is not specified."
          },
          {
            "name": "Primary",
            "value": "Primary",
            "description": "Represents a primary key type."
          },
          {
            "name": "Secondary",
            "value": "Secondary",
            "description": "Represents a secondary key type."
          }
        ]
      }
    },
    "KeyVaultKey": {
      "type": "object",
      "description": "The key vault key.",
      "properties": {
        "kid": {
          "type": "string",
          "description": "The key id."
        },
        "attributes": {
          "$ref": "#/definitions/KeyVaultKeyAttributes",
          "description": "The key attributes."
        }
      }
    },
    "KeyVaultKeyAttributes": {
      "type": "object",
      "description": "The key attributes.",
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Whether the key is enabled or not."
        },
        "created": {
          "type": "integer",
          "format": "int64",
          "description": "When the key was created."
        },
        "updated": {
          "type": "integer",
          "format": "int64",
          "description": "When the key was updated."
        }
      }
    },
    "KeyVaultKeyCollection": {
      "type": "object",
      "description": "Collection of key vault keys.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The key vault keys.",
          "items": {
            "$ref": "#/definitions/KeyVaultKey"
          },
          "x-ms-identifiers": [
            "kid"
          ]
        },
        "skipToken": {
          "type": "string",
          "description": "The skip token."
        }
      }
    },
    "KeyVaultKeyReference": {
      "type": "object",
      "description": "The reference to the key vault key.",
      "properties": {
        "keyVault": {
          "$ref": "#/definitions/KeyVaultKeyReferenceKeyVault",
          "description": "The key vault reference."
        },
        "keyName": {
          "type": "string",
          "description": "The private key name in key vault."
        },
        "keyVersion": {
          "type": "string",
          "description": "The private key version in key vault."
        }
      },
      "required": [
        "keyVault",
        "keyName"
      ]
    },
    "KeyVaultKeyReferenceKeyVault": {
      "type": "object",
      "description": "The key vault reference.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The resource id."
        },
        "name": {
          "type": "string",
          "description": "The resource name.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The resource type.",
          "readOnly": true
        }
      }
    },
    "KeyVaultReference": {
      "type": "object",
      "description": "The key vault reference.",
      "allOf": [
        {
          "$ref": "#/definitions/ResourceReference"
        }
      ]
    },
    "ListKeyVaultKeysDefinition": {
      "type": "object",
      "description": "The list key vault keys definition.",
      "properties": {
        "keyVault": {
          "$ref": "#/definitions/KeyVaultReference",
          "description": "The key vault reference."
        },
        "skipToken": {
          "type": "string",
          "description": "The skip token."
        }
      },
      "required": [
        "keyVault"
      ]
    },
    "MapType": {
      "type": "string",
      "description": "The map type.",
      "enum": [
        "NotSpecified",
        "Xslt",
        "Xslt20",
        "Xslt30",
        "Liquid"
      ],
      "x-ms-enum": {
        "name": "MapType",
        "modelAsString": true,
        "values": [
          {
            "name": "NotSpecified",
            "value": "NotSpecified",
            "description": "Represents a state where the value is not specified."
          },
          {
            "name": "Xslt",
            "value": "Xslt",
            "description": "Represents an XSLT map type."
          },
          {
            "name": "Xslt20",
            "value": "Xslt20",
            "description": "Represents an XSLT 2.0 map type."
          },
          {
            "name": "Xslt30",
            "value": "Xslt30",
            "description": "Represents an XSLT 3.0 map type."
          },
          {
            "name": "Liquid",
            "value": "Liquid",
            "description": "Represents a Liquid map type."
          }
        ]
      }
    },
    "MessageFilterType": {
      "type": "string",
      "description": "The message filter type.",
      "enum": [
        "NotSpecified",
        "Include",
        "Exclude"
      ],
      "x-ms-enum": {
        "name": "MessageFilterType",
        "modelAsString": true,
        "values": [
          {
            "name": "NotSpecified",
            "value": "NotSpecified",
            "description": "Represents a state where the value is not specified."
          },
          {
            "name": "Include",
            "value": "Include",
            "description": "Represents an include message filter type."
          },
          {
            "name": "Exclude",
            "value": "Exclude",
            "description": "Represents an exclude message filter type."
          }
        ]
      }
    },
    "NetworkConfiguration": {
      "type": "object",
      "description": "The network configuration.",
      "properties": {
        "virtualNetworkAddressSpace": {
          "type": "string",
          "description": "Gets the virtual network address space."
        },
        "accessEndpoint": {
          "$ref": "#/definitions/IntegrationServiceEnvironmentAccessEndpoint",
          "description": "The access endpoint."
        },
        "subnets": {
          "type": "array",
          "description": "The subnets.",
          "items": {
            "$ref": "#/definitions/ResourceReference"
          }
        }
      }
    },
    "OpenAuthenticationAccessPolicies": {
      "type": "object",
      "description": "AuthenticationPolicy of type Open.",
      "properties": {
        "policies": {
          "type": "object",
          "description": "Open authentication policies.",
          "additionalProperties": {
            "$ref": "#/definitions/OpenAuthenticationAccessPolicy"
          }
        }
      }
    },
    "OpenAuthenticationAccessPolicy": {
      "type": "object",
      "description": "Open authentication access policy defined by user.",
      "properties": {
        "type": {
          "$ref": "#/definitions/OpenAuthenticationProviderType",
          "description": "Type of provider for OAuth."
        },
        "claims": {
          "type": "array",
          "description": "The access policy claims.",
          "items": {
            "$ref": "#/definitions/OpenAuthenticationPolicyClaim"
          },
          "x-ms-identifiers": [
            "name"
          ]
        }
      }
    },
    "OpenAuthenticationPolicyClaim": {
      "type": "object",
      "description": "Open authentication policy claim.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the claim."
        },
        "value": {
          "type": "string",
          "description": "The value of the claim."
        }
      }
    },
    "OpenAuthenticationProviderType": {
      "type": "string",
      "description": "Open authentication policy provider type.",
      "enum": [
        "AAD"
      ],
      "x-ms-enum": {
        "name": "OpenAuthenticationProviderType",
        "modelAsString": true,
        "values": [
          {
            "name": "AAD",
            "value": "AAD",
            "description": "Represents Azure Active Directory (AAD) provider type."
          }
        ]
      }
    },
    "OperationResult": {
      "type": "object",
      "description": "The operation result definition.",
      "properties": {
        "trackingId": {
          "type": "string",
          "description": "Gets the tracking id.",
          "readOnly": true
        },
        "inputs": {
          "type": "object",
          "description": "Gets the inputs.",
          "additionalProperties": {},
          "readOnly": true
        },
        "inputsLink": {
          "$ref": "#/definitions/ContentLink",
          "description": "Gets the link to inputs.",
          "readOnly": true
        },
        "outputs": {
          "type": "object",
          "description": "Gets the outputs.",
          "additionalProperties": {},
          "readOnly": true
        },
        "outputsLink": {
          "$ref": "#/definitions/ContentLink",
          "description": "Gets the link to outputs.",
          "readOnly": true
        },
        "trackedProperties": {
          "type": "object",
          "description": "Gets the tracked properties.",
          "additionalProperties": {},
          "readOnly": true
        },
        "retryHistory": {
          "type": "array",
          "description": "Gets the retry histories.",
          "items": {
            "$ref": "#/definitions/RetryHistory"
          },
          "x-ms-identifiers": []
        },
        "executionMode": {
          "$ref": "#/definitions/FlowRunExecutionMode",
          "description": "Gets flow run execution mode."
        },
        "canResubmit": {
          "type": "boolean",
          "description": "Indicates whether operation can be resubmitted."
        },
        "iterationCount": {
          "type": "integer",
          "format": "int32",
          "description": "Gets the iteration count."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/OperationResultProperties"
        }
      ]
    },
    "OperationResultProperties": {
      "type": "object",
      "description": "The run operation result properties.",
      "properties": {
        "startTime": {
          "type": "string",
          "format": "date-time",
          "description": "The start time of the workflow scope repetition."
        },
        "endTime": {
          "type": "string",
          "format": "date-time",
          "description": "The end time of the workflow scope repetition."
        },
        "correlation": {
          "$ref": "#/definitions/RunActionCorrelation",
          "description": "The correlation properties."
        },
        "status": {
          "$ref": "#/definitions/WorkflowStatus",
          "description": "The status of the workflow scope repetition."
        },
        "code": {
          "type": "string",
          "description": "The workflow scope repetition code."
        },
        "error": {
          "type": "object",
          "description": "The error",
          "additionalProperties": {}
        }
      }
    },
    "ParameterType": {
      "type": "string",
      "description": "The parameter type.",
      "enum": [
        "NotSpecified",
        "String",
        "SecureString",
        "Int",
        "Float",
        "Bool",
        "Array",
        "Object",
        "SecureObject"
      ],
      "x-ms-enum": {
        "name": "ParameterType",
        "modelAsString": true,
        "values": [
          {
            "name": "NotSpecified",
            "value": "NotSpecified",
            "description": "Represents a state where the value is not specified."
          },
          {
            "name": "String",
            "value": "String",
            "description": "Represents a string parameter type."
          },
          {
            "name": "SecureString",
            "value": "SecureString",
            "description": "Represents a secure string parameter type."
          },
          {
            "name": "Int",
            "value": "Int",
            "description": "Represents an integer parameter type."
          },
          {
            "name": "Float",
            "value": "Float",
            "description": "Represents a float parameter type."
          },
          {
            "name": "Bool",
            "value": "Bool",
            "description": "Represents a boolean parameter type."
          },
          {
            "name": "Array",
            "value": "Array",
            "description": "Represents an array parameter type."
          },
          {
            "name": "Object",
            "value": "Object",
            "description": "Represents an object parameter type."
          },
          {
            "name": "SecureObject",
            "value": "SecureObject",
            "description": "Represents a secure object parameter type."
          }
        ]
      }
    },
    "PartnerContent": {
      "type": "object",
      "description": "The integration account partner content.",
      "properties": {
        "b2b": {
          "$ref": "#/definitions/B2bPartnerContent",
          "description": "The B2B partner content."
        }
      }
    },
    "PartnerType": {
      "type": "string",
      "description": "The partner type.",
      "enum": [
        "NotSpecified",
        "B2B"
      ],
      "x-ms-enum": {
        "name": "PartnerType",
        "modelAsString": true,
        "values": [
          {
            "name": "NotSpecified",
            "value": "NotSpecified",
            "description": "Represents a state where the value is not specified."
          },
          {
            "name": "B2B",
            "value": "B2B",
            "description": "Represents a B2B partner type."
          }
        ]
      }
    },
    "RecurrenceFrequency": {
      "type": "string",
      "description": "The recurrence frequency.",
      "enum": [
        "NotSpecified",
        "Second",
        "Minute",
        "Hour",
        "Day",
        "Week",
        "Month",
        "Year"
      ],
      "x-ms-enum": {
        "name": "RecurrenceFrequency",
        "modelAsString": true,
        "values": [
          {
            "name": "NotSpecified",
            "value": "NotSpecified",
            "description": "Represents a state where the value is not specified."
          },
          {
            "name": "Second",
            "value": "Second",
            "description": "Represents a recurrence frequency of seconds."
          },
          {
            "name": "Minute",
            "value": "Minute",
            "description": "Represents a recurrence frequency of minutes."
          },
          {
            "name": "Hour",
            "value": "Hour",
            "description": "Represents a recurrence frequency of hours."
          },
          {
            "name": "Day",
            "value": "Day",
            "description": "Represents a recurrence frequency of days."
          },
          {
            "name": "Week",
            "value": "Week",
            "description": "Represents a recurrence frequency of weeks."
          },
          {
            "name": "Month",
            "value": "Month",
            "description": "Represents a recurrence frequency of months."
          },
          {
            "name": "Year",
            "value": "Year",
            "description": "Represents a recurrence frequency of years."
          }
        ]
      }
    },
    "RecurrenceSchedule": {
      "type": "object",
      "description": "The recurrence schedule.",
      "properties": {
        "minutes": {
          "type": "array",
          "description": "The minutes.",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "hours": {
          "type": "array",
          "description": "The hours.",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "weekDays": {
          "type": "array",
          "description": "The days of the week.",
          "items": {
            "$ref": "#/definitions/DaysOfWeek"
          }
        },
        "monthDays": {
          "type": "array",
          "description": "The month days.",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "monthlyOccurrences": {
          "type": "array",
          "description": "The monthly occurrences.",
          "items": {
            "$ref": "#/definitions/RecurrenceScheduleOccurrence"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "RecurrenceScheduleOccurrence": {
      "type": "object",
      "description": "The recurrence schedule occurrence.",
      "properties": {
        "day": {
          "$ref": "#/definitions/DayOfWeek",
          "description": "The day of the week."
        },
        "occurrence": {
          "type": "integer",
          "format": "int32",
          "description": "The occurrence."
        }
      }
    },
    "RegenerateActionParameter": {
      "type": "object",
      "description": "The access key regenerate action content.",
      "properties": {
        "keyType": {
          "$ref": "#/definitions/KeyType",
          "description": "The key type."
        }
      }
    },
    "RepetitionIndex": {
      "type": "object",
      "description": "The workflow run action repetition index.",
      "properties": {
        "scopeName": {
          "type": "string",
          "description": "The scope."
        },
        "itemIndex": {
          "type": "integer",
          "format": "int32",
          "description": "The index."
        }
      },
      "required": [
        "itemIndex"
      ]
    },
    "Request": {
      "type": "object",
      "description": "A request.",
      "properties": {
        "headers": {
          "type": "object",
          "description": "A list of all the headers attached to the request.",
          "additionalProperties": {}
        },
        "uri": {
          "type": "string",
          "description": "The destination for the request."
        },
        "method": {
          "type": "string",
          "description": "The HTTP method used for the request."
        }
      }
    },
    "RequestHistory": {
      "type": "object",
      "description": "The request history.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/RequestHistoryProperties",
          "description": "The request history properties."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "RequestHistoryListResult": {
      "type": "object",
      "description": "The response of a RequestHistory list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The RequestHistory items on this page",
          "items": {
            "$ref": "#/definitions/RequestHistory"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "RequestHistoryProperties": {
      "type": "object",
      "description": "The request history.",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/WorkflowProvisioningState",
          "description": "The provisioning state.",
          "readOnly": true
        },
        "startTime": {
          "type": "string",
          "format": "date-time",
          "description": "The time the request started."
        },
        "endTime": {
          "type": "string",
          "format": "date-time",
          "description": "The time the request ended."
        },
        "request": {
          "$ref": "#/definitions/Request",
          "description": "The request."
        },
        "response": {
          "$ref": "#/definitions/Response",
          "description": "The response."
        }
      }
    },
    "ResourceReference": {
      "type": "object",
      "description": "The resource reference.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The resource id."
        },
        "name": {
          "type": "string",
          "description": "Gets the resource name.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "Gets the resource type.",
          "readOnly": true
        }
      }
    },
    "Response": {
      "type": "object",
      "description": "A response.",
      "properties": {
        "headers": {
          "type": "object",
          "description": "A list of all the headers attached to the response.",
          "additionalProperties": {}
        },
        "statusCode": {
          "type": "integer",
          "format": "int32",
          "description": "The status code of the response."
        },
        "bodyLink": {
          "$ref": "#/definitions/ContentLink",
          "description": "Details on the location of the body content."
        }
      }
    },
    "RetryHistory": {
      "type": "object",
      "description": "The retry history.",
      "properties": {
        "startTime": {
          "type": "string",
          "format": "date-time",
          "description": "Gets the start time."
        },
        "endTime": {
          "type": "string",
          "format": "date-time",
          "description": "Gets the end time."
        },
        "code": {
          "type": "string",
          "description": "Gets the status code."
        },
        "clientRequestId": {
          "type": "string",
          "description": "Gets the client request Id."
        },
        "serviceRequestId": {
          "type": "string",
          "description": "Gets the service request Id."
        },
        "error": {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse",
          "description": "Gets the error response."
        }
      }
    },
    "RunActionCorrelation": {
      "type": "object",
      "description": "The workflow run action correlation properties.",
      "properties": {
        "actionTrackingId": {
          "type": "string",
          "description": "The action tracking identifier."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/RunCorrelation"
        }
      ]
    },
    "RunCorrelation": {
      "type": "object",
      "description": "The correlation properties.",
      "properties": {
        "clientTrackingId": {
          "type": "string",
          "description": "The client tracking identifier."
        },
        "clientKeywords": {
          "type": "array",
          "description": "The client keywords.",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "SchemaType": {
      "type": "string",
      "description": "The schema type.",
      "enum": [
        "NotSpecified",
        "Xml"
      ],
      "x-ms-enum": {
        "name": "SchemaType",
        "modelAsString": true,
        "values": [
          {
            "name": "NotSpecified",
            "value": "NotSpecified",
            "description": "Represents a state where the value is not specified."
          },
          {
            "name": "Xml",
            "value": "Xml",
            "description": "Represents an XML schema type."
          }
        ]
      }
    },
    "SegmentTerminatorSuffix": {
      "type": "string",
      "description": "The segment terminator suffix.",
      "enum": [
        "NotSpecified",
        "None",
        "CR",
        "LF",
        "CRLF"
      ],
      "x-ms-enum": {
        "name": "SegmentTerminatorSuffix",
        "modelAsString": true,
        "values": [
          {
            "name": "NotSpecified",
            "value": "NotSpecified",
            "description": "Represents a not specified segment terminator suffix."
          },
          {
            "name": "None",
            "value": "None",
            "description": "Represents a none segment terminator suffix."
          },
          {
            "name": "CR",
            "value": "CR",
            "description": "Represents a CR segment terminator suffix."
          },
          {
            "name": "LF",
            "value": "LF",
            "description": "Represents a LF segment terminator suffix."
          },
          {
            "name": "CRLF",
            "value": "CRLF",
            "description": "Represents a CRLF segment terminator suffix."
          }
        ]
      }
    },
    "SetTriggerStateActionDefinition": {
      "type": "object",
      "description": "The set trigger state action definition.",
      "properties": {
        "source": {
          "$ref": "#/definitions/WorkflowTriggerReference",
          "description": "The source."
        }
      },
      "required": [
        "source"
      ]
    },
    "SigningAlgorithm": {
      "type": "string",
      "description": "The signing or hashing algorithm.",
      "enum": [
        "NotSpecified",
        "Default",
        "SHA1",
        "SHA2256",
        "SHA2384",
        "SHA2512"
      ],
      "x-ms-enum": {
        "name": "SigningAlgorithm",
        "modelAsString": true,
        "values": [
          {
            "name": "NotSpecified",
            "value": "NotSpecified",
            "description": "Represents a state where the value is not specified."
          },
          {
            "name": "Default",
            "value": "Default",
            "description": "Represents the default signing algorithm."
          },
          {
            "name": "SHA1",
            "value": "SHA1",
            "description": "Represents the SHA1 signing algorithm."
          },
          {
            "name": "SHA2256",
            "value": "SHA2256",
            "description": "Represents the SHA2-256 signing algorithm."
          },
          {
            "name": "SHA2384",
            "value": "SHA2384",
            "description": "Represents the SHA2-384 signing algorithm."
          },
          {
            "name": "SHA2512",
            "value": "SHA2512",
            "description": "Represents the SHA2-512 signing algorithm."
          }
        ]
      }
    },
    "Sku": {
      "type": "object",
      "description": "The sku type.",
      "properties": {
        "name": {
          "$ref": "#/definitions/SkuName",
          "description": "The name."
        },
        "plan": {
          "$ref": "#/definitions/ResourceReference",
          "description": "The reference to plan."
        }
      },
      "required": [
        "name"
      ]
    },
    "SkuName": {
      "type": "string",
      "description": "The sku name.",
      "enum": [
        "NotSpecified",
        "Free",
        "Shared",
        "Basic",
        "Standard",
        "Premium"
      ],
      "x-ms-enum": {
        "name": "SkuName",
        "modelAsString": true,
        "values": [
          {
            "name": "NotSpecified",
            "value": "NotSpecified",
            "description": "Represents a state where the value is not specified."
          },
          {
            "name": "Free",
            "value": "Free",
            "description": "Represents a free SKU."
          },
          {
            "name": "Shared",
            "value": "Shared",
            "description": "Represents a shared SKU."
          },
          {
            "name": "Basic",
            "value": "Basic",
            "description": "Represents a basic SKU."
          },
          {
            "name": "Standard",
            "value": "Standard",
            "description": "Represents a standard SKU."
          },
          {
            "name": "Premium",
            "value": "Premium",
            "description": "Represents a premium SKU."
          }
        ]
      }
    },
    "StatusAnnotation": {
      "type": "string",
      "description": "The status annotation.",
      "enum": [
        "NotSpecified",
        "Preview",
        "Production"
      ],
      "x-ms-enum": {
        "name": "StatusAnnotation",
        "modelAsString": true,
        "values": [
          {
            "name": "NotSpecified",
            "value": "NotSpecified",
            "description": "Represents a state where the value is not specified."
          },
          {
            "name": "Preview",
            "value": "Preview",
            "description": "Represents a preview status annotation."
          },
          {
            "name": "Production",
            "value": "Production",
            "description": "Represents a production status annotation."
          }
        ]
      }
    },
    "SwaggerCustomDynamicList": {
      "type": "object",
      "description": "The swagger custom dynamic list.",
      "properties": {
        "operationId": {
          "type": "string",
          "description": "The operation id to fetch dynamic schema."
        },
        "builtInOperation": {
          "type": "string",
          "description": "The built in operation."
        },
        "itemsPath": {
          "type": "string",
          "description": "The path to a response property (relative to the response object, not the response body) which contains an array of dynamic value items."
        },
        "itemValuePath": {
          "type": "string",
          "description": "The path to a property which defines the value which should be used."
        },
        "itemTitlePath": {
          "type": "string",
          "description": "The path to an item property which defines the display name of the item."
        },
        "parameters": {
          "type": "object",
          "description": "The parameters.",
          "additionalProperties": {
            "$ref": "#/definitions/SwaggerCustomDynamicProperties"
          }
        }
      }
    },
    "SwaggerCustomDynamicProperties": {
      "type": "object",
      "description": "The swagger custom dynamic properties.",
      "properties": {
        "operationId": {
          "type": "string",
          "description": "The operation id to fetch dynamic schema."
        },
        "valuePath": {
          "type": "string",
          "description": "Json pointer to the dynamic schema on the response body."
        },
        "parameters": {
          "type": "object",
          "description": "The operation parameters.",
          "additionalProperties": {
            "$ref": "#/definitions/SwaggerCustomDynamicProperties"
          }
        }
      }
    },
    "SwaggerCustomDynamicSchema": {
      "type": "object",
      "description": "The swagger custom dynamic schema.",
      "properties": {
        "operationId": {
          "type": "string",
          "description": "The operation id to fetch dynamic schema."
        },
        "valuePath": {
          "type": "string",
          "description": "Json pointer to the dynamic schema on the response body."
        },
        "parameters": {
          "type": "object",
          "description": "The operation parameters.",
          "additionalProperties": {
            "additionalProperties": {},
            "type": "object"
          }
        }
      }
    },
    "SwaggerCustomDynamicTree": {
      "type": "object",
      "description": "The swagger custom dynamic tree.",
      "properties": {
        "settings": {
          "$ref": "#/definitions/SwaggerCustomDynamicTreeSettings",
          "description": "The tree settings"
        },
        "open": {
          "$ref": "#/definitions/SwaggerCustomDynamicTreeCommand",
          "description": "The tree on-open configuration"
        },
        "browse": {
          "$ref": "#/definitions/SwaggerCustomDynamicTreeCommand",
          "description": "The tree on-browse configuration"
        }
      }
    },
    "SwaggerCustomDynamicTreeCommand": {
      "type": "object",
      "description": "The swagger tree command.",
      "properties": {
        "operationId": {
          "type": "string",
          "description": "The path to an item property which defines the display name of the item."
        },
        "itemsPath": {
          "type": "string",
          "description": "The path to an item property which defines the display name of the item."
        },
        "itemValuePath": {
          "type": "string",
          "description": "The path to an item property which defines the display name of the item."
        },
        "itemTitlePath": {
          "type": "string",
          "description": "The path to an item property which defines the display name of the item."
        },
        "itemFullTitlePath": {
          "type": "string",
          "description": "The path to an item property which defines the display name of the item."
        },
        "itemIsParent": {
          "type": "string",
          "description": "The path to an item property which defines the display name of the item."
        },
        "selectableFilter": {
          "type": "string",
          "description": "The path to an item property which defines the display name of the item."
        },
        "parameters": {
          "type": "object",
          "description": "Dictionary of <SwaggerCustomDynamicTreeParameter>",
          "additionalProperties": {
            "$ref": "#/definitions/SwaggerCustomDynamicTreeParameter"
          }
        }
      }
    },
    "SwaggerCustomDynamicTreeParameter": {
      "type": "object",
      "description": "The swagger custom dynamic tree parameter.",
      "properties": {
        "selectedItemValuePath": {
          "type": "string",
          "description": "Gets or sets a path to a property in the currently selected item to pass as a value to a parameter for the given operation."
        },
        "value": {
          "type": "object",
          "description": "The parameter value.",
          "additionalProperties": {}
        },
        "parameterReference": {
          "type": "string",
          "description": "The parameter reference."
        },
        "required": {
          "type": "boolean",
          "description": "Indicates whether the parameter is required."
        }
      }
    },
    "SwaggerCustomDynamicTreeSettings": {
      "type": "object",
      "description": "The swagger custom dynamic tree settings.",
      "properties": {
        "canSelectParentNodes": {
          "type": "boolean",
          "description": "Indicates whether parent nodes can be selected."
        },
        "canSelectLeafNodes": {
          "type": "boolean",
          "description": "Indicates whether leaf nodes can be selected."
        }
      }
    },
    "SwaggerExternalDocumentation": {
      "type": "object",
      "description": "The swagger external documentation",
      "properties": {
        "description": {
          "type": "string",
          "description": "The document description."
        },
        "uri": {
          "type": "string",
          "description": "The documentation Uri."
        },
        "extensions": {
          "type": "object",
          "description": "The vendor extensions.",
          "additionalProperties": {
            "additionalProperties": {},
            "type": "object"
          }
        }
      }
    },
    "SwaggerSchema": {
      "type": "object",
      "description": "The swagger schema.",
      "properties": {
        "ref": {
          "type": "string",
          "description": "The reference."
        },
        "type": {
          "$ref": "#/definitions/SwaggerSchemaType",
          "description": "The type"
        },
        "title": {
          "type": "string",
          "description": "The title."
        },
        "items": {
          "$ref": "#/definitions/SwaggerSchema",
          "description": "The items schema."
        },
        "properties": {
          "type": "object",
          "description": "The object properties",
          "additionalProperties": {
            "$ref": "#/definitions/SwaggerSchema"
          }
        },
        "additionalProperties": {
          "type": "object",
          "description": "The additional properties.",
          "additionalProperties": {}
        },
        "required": {
          "type": "array",
          "description": "The object required properties.",
          "items": {
            "type": "string"
          }
        },
        "maxProperties": {
          "type": "integer",
          "format": "int32",
          "description": "The maximum number of allowed properties."
        },
        "minProperties": {
          "type": "integer",
          "format": "int32",
          "description": "The minimum number of allowed properties."
        },
        "allOf": {
          "type": "array",
          "description": "The schemas which must pass validation when this schema is used.",
          "items": {
            "$ref": "#/definitions/SwaggerSchema"
          },
          "x-ms-identifiers": []
        },
        "discriminator": {
          "type": "string",
          "description": "The discriminator."
        },
        "readOnly": {
          "type": "boolean",
          "description": "Indicates whether this property must be present in the a request."
        },
        "xml": {
          "$ref": "#/definitions/SwaggerXml",
          "description": "The xml representation format for a property."
        },
        "externalDocs": {
          "$ref": "#/definitions/SwaggerExternalDocumentation",
          "description": "The external documentation."
        },
        "example": {
          "type": "object",
          "description": "The example value.",
          "additionalProperties": {}
        },
        "notificationUrlExtension": {
          "type": "boolean",
          "description": "Indicates the notification url extension. If this is set, the property's value should be a callback url for a webhook."
        },
        "dynamicSchemaOld": {
          "$ref": "#/definitions/SwaggerCustomDynamicSchema",
          "description": "The dynamic schema configuration."
        },
        "dynamicSchemaNew": {
          "$ref": "#/definitions/SwaggerCustomDynamicProperties",
          "description": "The dynamic schema configuration."
        },
        "dynamicListNew": {
          "$ref": "#/definitions/SwaggerCustomDynamicList",
          "description": "The dynamic list."
        },
        "dynamicTree": {
          "$ref": "#/definitions/SwaggerCustomDynamicTree",
          "description": "The dynamic values tree configuration."
        }
      }
    },
    "SwaggerSchemaType": {
      "type": "string",
      "description": "The swagger schema type.",
      "enum": [
        "String",
        "Number",
        "Integer",
        "Boolean",
        "Array",
        "File",
        "Object",
        "Null"
      ],
      "x-ms-enum": {
        "name": "SwaggerSchemaType",
        "modelAsString": true,
        "values": [
          {
            "name": "String",
            "value": "String",
            "description": "Represents a string schema type."
          },
          {
            "name": "Number",
            "value": "Number",
            "description": "Represents a number schema type."
          },
          {
            "name": "Integer",
            "value": "Integer",
            "description": "Represents an integer schema type."
          },
          {
            "name": "Boolean",
            "value": "Boolean",
            "description": "Represents a boolean schema type."
          },
          {
            "name": "Array",
            "value": "Array",
            "description": "Represents an array schema type."
          },
          {
            "name": "File",
            "value": "File",
            "description": "Represents a file schema type."
          },
          {
            "name": "Object",
            "value": "Object",
            "description": "Represents an object schema type."
          },
          {
            "name": "Null",
            "value": "Null",
            "description": "Represents a null schema type."
          }
        ]
      }
    },
    "SwaggerXml": {
      "type": "object",
      "description": "The Swagger XML.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The xml element or attribute name."
        },
        "namespace": {
          "type": "string",
          "description": "The xml namespace."
        },
        "prefix": {
          "type": "string",
          "description": "The name prefix."
        },
        "attribute": {
          "type": "boolean",
          "description": "Indicates whether the property should be an attribute instead of an element."
        },
        "wrapped": {
          "type": "boolean",
          "description": "Indicates whether the array elements are wrapped in a container element."
        },
        "extensions": {
          "type": "object",
          "description": "The vendor extensions.",
          "additionalProperties": {
            "additionalProperties": {},
            "type": "object"
          }
        }
      }
    },
    "Template": {
      "type": "object",
      "description": "The template type.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/TemplateProperties",
          "description": "The template properties."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "TemplateListResult": {
      "type": "object",
      "description": "The response of a Template list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The Template items on this page",
          "items": {
            "$ref": "#/definitions/Template"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "TemplateProperties": {
      "type": "object",
      "description": "The flow template connector details.",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/WorkflowProvisioningState",
          "description": "The provisioning state.",
          "readOnly": true
        },
        "state": {
          "$ref": "#/definitions/FlowTemplateState",
          "description": "The flow template state."
        },
        "manifest": {
          "$ref": "#/definitions/FlowTemplateManifest",
          "description": "The flow template type."
        }
      }
    },
    "TemplateUpdate": {
      "type": "object",
      "description": "The template type.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/TemplateProperties",
          "description": "The template properties."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Azure.ResourceManager.CommonTypes.TrackedResourceUpdate"
        }
      ]
    },
    "TrackEventsOperationOptions": {
      "type": "string",
      "description": "The track events operation options.",
      "enum": [
        "None",
        "DisableSourceInfoEnrich"
      ],
      "x-ms-enum": {
        "name": "TrackEventsOperationOptions",
        "modelAsString": true,
        "values": [
          {
            "name": "None",
            "value": "None",
            "description": "Represents no track events operation options."
          },
          {
            "name": "DisableSourceInfoEnrich",
            "value": "DisableSourceInfoEnrich",
            "description": "Represents disabling source info enrichment for track events operation."
          }
        ]
      }
    },
    "TrackingEvent": {
      "type": "object",
      "description": "The tracking event.",
      "properties": {
        "eventLevel": {
          "$ref": "#/definitions/EventLevel",
          "description": "The event level."
        },
        "eventTime": {
          "type": "string",
          "format": "date-time",
          "description": "The event time."
        },
        "recordType": {
          "$ref": "#/definitions/TrackingRecordType",
          "description": "The record type."
        },
        "record": {
          "type": "object",
          "description": "The record.",
          "additionalProperties": {}
        },
        "error": {
          "$ref": "#/definitions/TrackingEventErrorInfo",
          "description": "The error."
        }
      },
      "required": [
        "eventLevel",
        "eventTime",
        "recordType"
      ]
    },
    "TrackingEventErrorInfo": {
      "type": "object",
      "description": "The tracking event error info.",
      "properties": {
        "message": {
          "type": "string",
          "description": "The message."
        },
        "code": {
          "type": "string",
          "description": "The code."
        }
      }
    },
    "TrackingEventsDefinition": {
      "type": "object",
      "description": "The tracking events definition.",
      "properties": {
        "sourceType": {
          "type": "string",
          "description": "The source type."
        },
        "trackEventsOptions": {
          "$ref": "#/definitions/TrackEventsOperationOptions",
          "description": "The track events options."
        },
        "events": {
          "type": "array",
          "description": "The events.",
          "items": {
            "$ref": "#/definitions/TrackingEvent"
          },
          "x-ms-identifiers": []
        }
      },
      "required": [
        "sourceType",
        "events"
      ]
    },
    "TrackingRecordType": {
      "type": "string",
      "description": "The tracking record type.",
      "enum": [
        "NotSpecified",
        "Custom",
        "AS2Message",
        "AS2MDN",
        "X12Interchange",
        "X12FunctionalGroup",
        "X12TransactionSet",
        "X12InterchangeAcknowledgment",
        "X12FunctionalGroupAcknowledgment",
        "X12TransactionSetAcknowledgment",
        "EdifactInterchange",
        "EdifactFunctionalGroup",
        "EdifactTransactionSet",
        "EdifactInterchangeAcknowledgment",
        "EdifactFunctionalGroupAcknowledgment",
        "EdifactTransactionSetAcknowledgment"
      ],
      "x-ms-enum": {
        "name": "TrackingRecordType",
        "modelAsString": true,
        "values": [
          {
            "name": "NotSpecified",
            "value": "NotSpecified",
            "description": "Represents a state where the value is not specified."
          },
          {
            "name": "Custom",
            "value": "Custom",
            "description": "Represents a custom tracking record type."
          },
          {
            "name": "AS2Message",
            "value": "AS2Message",
            "description": "Represents an AS2 message tracking record type."
          },
          {
            "name": "AS2MDN",
            "value": "AS2MDN",
            "description": "Represents an AS2 MDN tracking record type."
          },
          {
            "name": "X12Interchange",
            "value": "X12Interchange",
            "description": "Represents an X12 interchange tracking record type."
          },
          {
            "name": "X12FunctionalGroup",
            "value": "X12FunctionalGroup",
            "description": "Represents an X12 functional group tracking record type."
          },
          {
            "name": "X12TransactionSet",
            "value": "X12TransactionSet",
            "description": "Represents an X12 transaction set tracking record type."
          },
          {
            "name": "X12InterchangeAcknowledgment",
            "value": "X12InterchangeAcknowledgment",
            "description": "Represents an X12 interchange acknowledgment tracking record type."
          },
          {
            "name": "X12FunctionalGroupAcknowledgment",
            "value": "X12FunctionalGroupAcknowledgment",
            "description": "Represents an X12 functional group acknowledgment tracking record type."
          },
          {
            "name": "X12TransactionSetAcknowledgment",
            "value": "X12TransactionSetAcknowledgment",
            "description": "Represents an X12 transaction set acknowledgment tracking record type."
          },
          {
            "name": "EdifactInterchange",
            "value": "EdifactInterchange",
            "description": "Represents an Edifact interchange tracking record type."
          },
          {
            "name": "EdifactFunctionalGroup",
            "value": "EdifactFunctionalGroup",
            "description": "Represents an Edifact functional group tracking record type."
          },
          {
            "name": "EdifactTransactionSet",
            "value": "EdifactTransactionSet",
            "description": "Represents an Edifact transaction set tracking record type."
          },
          {
            "name": "EdifactInterchangeAcknowledgment",
            "value": "EdifactInterchangeAcknowledgment",
            "description": "Represents an Edifact interchange acknowledgment tracking record type."
          },
          {
            "name": "EdifactFunctionalGroupAcknowledgment",
            "value": "EdifactFunctionalGroupAcknowledgment",
            "description": "Represents an Edifact functional group acknowledgment tracking record type."
          },
          {
            "name": "EdifactTransactionSetAcknowledgment",
            "value": "EdifactTransactionSetAcknowledgment",
            "description": "Represents an Edifact transaction set acknowledgment tracking record type."
          }
        ]
      }
    },
    "TrailingSeparatorPolicy": {
      "type": "string",
      "description": "The trailing separator policy.",
      "enum": [
        "NotSpecified",
        "NotAllowed",
        "Optional",
        "Mandatory"
      ],
      "x-ms-enum": {
        "name": "TrailingSeparatorPolicy",
        "modelAsString": true,
        "values": [
          {
            "name": "NotSpecified",
            "value": "NotSpecified",
            "description": "Represents a state where the value is not specified."
          },
          {
            "name": "NotAllowed",
            "value": "NotAllowed",
            "description": "Represents a policy where trailing separators are not allowed."
          },
          {
            "name": "Optional",
            "value": "Optional",
            "description": "Represents a policy where trailing separators are optional."
          },
          {
            "name": "Mandatory",
            "value": "Mandatory",
            "description": "Represents a policy where trailing separators are mandatory."
          }
        ]
      }
    },
    "TypeSpec.Http.OkResponse": {
      "type": "object",
      "description": "The request has succeeded."
    },
    "UsageIndicator": {
      "type": "string",
      "description": "The usage indicator.",
      "enum": [
        "NotSpecified",
        "Test",
        "Information",
        "Production"
      ],
      "x-ms-enum": {
        "name": "UsageIndicator",
        "modelAsString": true,
        "values": [
          {
            "name": "NotSpecified",
            "value": "NotSpecified",
            "description": "Represents a state where the value is not specified."
          },
          {
            "name": "Test",
            "value": "Test",
            "description": "Represents a test usage indicator."
          },
          {
            "name": "Information",
            "value": "Information",
            "description": "Represents an information usage indicator."
          },
          {
            "name": "Production",
            "value": "Production",
            "description": "Represents a production usage indicator."
          }
        ]
      }
    },
    "Workflow": {
      "type": "object",
      "description": "The workflow type.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/WorkflowProperties",
          "description": "The workflow properties."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "WorkflowListResult": {
      "type": "object",
      "description": "The response of a Workflow list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The Workflow items on this page",
          "items": {
            "$ref": "#/definitions/Workflow"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "WorkflowOutputParameter": {
      "type": "object",
      "description": "The workflow output parameter.",
      "properties": {
        "error": {
          "type": "object",
          "description": "Gets the error.",
          "additionalProperties": {},
          "readOnly": true
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/WorkflowParameter"
        }
      ]
    },
    "WorkflowParameter": {
      "type": "object",
      "description": "The workflow parameters.",
      "properties": {
        "type": {
          "$ref": "#/definitions/ParameterType",
          "description": "The type."
        },
        "value": {
          "type": "object",
          "description": "The value.",
          "additionalProperties": {}
        },
        "metadata": {
          "type": "object",
          "description": "The metadata.",
          "additionalProperties": {}
        },
        "description": {
          "type": "string",
          "description": "The description."
        }
      }
    },
    "WorkflowProperties": {
      "type": "object",
      "description": "The workflow properties.",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/WorkflowProvisioningState",
          "description": "Gets the provisioning state.",
          "readOnly": true
        },
        "createdTime": {
          "type": "string",
          "format": "date-time",
          "description": "Gets the created time.",
          "readOnly": true
        },
        "changedTime": {
          "type": "string",
          "format": "date-time",
          "description": "Gets the changed time.",
          "readOnly": true
        },
        "state": {
          "$ref": "#/definitions/WorkflowState",
          "description": "The state."
        },
        "version": {
          "type": "string",
          "description": "Gets the version.",
          "readOnly": true
        },
        "accessEndpoint": {
          "type": "string",
          "description": "Gets the access endpoint.",
          "readOnly": true
        },
        "endpointsConfiguration": {
          "$ref": "#/definitions/FlowEndpointsConfiguration",
          "description": "The endpoints configuration."
        },
        "accessControl": {
          "$ref": "#/definitions/FlowAccessControlConfiguration",
          "description": "The access control configuration."
        },
        "sku": {
          "$ref": "#/definitions/Sku",
          "description": "The sku.",
          "readOnly": true
        },
        "integrationAccount": {
          "$ref": "#/definitions/ResourceReference",
          "description": "The integration account."
        },
        "integrationServiceEnvironment": {
          "$ref": "#/definitions/ResourceReference",
          "description": "The integration service environment."
        },
        "definition": {
          "type": "object",
          "description": "The definition.",
          "additionalProperties": {}
        },
        "parameters": {
          "type": "object",
          "description": "The parameters.",
          "additionalProperties": {
            "$ref": "#/definitions/WorkflowParameter"
          }
        }
      }
    },
    "WorkflowProvisioningState": {
      "type": "string",
      "description": "The workflow provisioning state.",
      "enum": [
        "NotSpecified",
        "Accepted",
        "Running",
        "Ready",
        "Creating",
        "Created",
        "Deleting",
        "Deleted",
        "Canceled",
        "Failed",
        "Succeeded",
        "Moving",
        "Updating",
        "Registering",
        "Registered",
        "Unregistering",
        "Unregistered",
        "Completed",
        "Renewing",
        "Pending",
        "Waiting",
        "InProgress"
      ],
      "x-ms-enum": {
        "name": "WorkflowProvisioningState",
        "modelAsString": true,
        "values": [
          {
            "name": "NotSpecified",
            "value": "NotSpecified",
            "description": "Represents a state where the value is not specified."
          },
          {
            "name": "Accepted",
            "value": "Accepted",
            "description": "Represents a state where the workflow is accepted."
          },
          {
            "name": "Running",
            "value": "Running",
            "description": "Represents a state where the workflow is running."
          },
          {
            "name": "Ready",
            "value": "Ready",
            "description": "Represents a state where the workflow is ready."
          },
          {
            "name": "Creating",
            "value": "Creating",
            "description": "Represents a state where the workflow is creating."
          },
          {
            "name": "Created",
            "value": "Created",
            "description": "Represents a state where the workflow is created."
          },
          {
            "name": "Deleting",
            "value": "Deleting",
            "description": "Represents a state where the workflow is deleting."
          },
          {
            "name": "Deleted",
            "value": "Deleted",
            "description": "Represents a state where the workflow is deleted."
          },
          {
            "name": "Canceled",
            "value": "Canceled",
            "description": "Represents a state where the workflow is canceled."
          },
          {
            "name": "Failed",
            "value": "Failed",
            "description": "Represents a state where the workflow is failed."
          },
          {
            "name": "Succeeded",
            "value": "Succeeded",
            "description": "Represents a state where the workflow is succeeded."
          },
          {
            "name": "Moving",
            "value": "Moving",
            "description": "Represents a state where the workflow is moving."
          },
          {
            "name": "Updating",
            "value": "Updating",
            "description": "Represents a state where the workflow is updating."
          },
          {
            "name": "Registering",
            "value": "Registering",
            "description": "Represents a state where the workflow is registering."
          },
          {
            "name": "Registered",
            "value": "Registered",
            "description": "Represents a state where the workflow is registered."
          },
          {
            "name": "Unregistering",
            "value": "Unregistering",
            "description": "Represents a state where the workflow is unregistering."
          },
          {
            "name": "Unregistered",
            "value": "Unregistered",
            "description": "Represents a state where the workflow is unregistered."
          },
          {
            "name": "Completed",
            "value": "Completed",
            "description": "Represents a state where the workflow is completed."
          },
          {
            "name": "Renewing",
            "value": "Renewing",
            "description": "Represents a state where the workflow is renewing."
          },
          {
            "name": "Pending",
            "value": "Pending",
            "description": "Represents a state where the workflow is pending."
          },
          {
            "name": "Waiting",
            "value": "Waiting",
            "description": "Represents a state where the workflow is waiting."
          },
          {
            "name": "InProgress",
            "value": "InProgress",
            "description": "Represents a state where the workflow is in progress."
          }
        ]
      },
      "readOnly": true
    },
    "WorkflowReference": {
      "type": "object",
      "description": "The workflow reference.",
      "allOf": [
        {
          "$ref": "#/definitions/ResourceReference"
        }
      ]
    },
    "WorkflowRun": {
      "type": "object",
      "description": "The workflow run.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/WorkflowRunProperties",
          "description": "The workflow run properties."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "WorkflowRunAction": {
      "type": "object",
      "description": "The workflow run action.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/WorkflowRunActionProperties",
          "description": "The workflow run action properties."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "WorkflowRunActionListResult": {
      "type": "object",
      "description": "The response of a WorkflowRunAction list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The WorkflowRunAction items on this page",
          "items": {
            "$ref": "#/definitions/WorkflowRunAction"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "WorkflowRunActionProperties": {
      "type": "object",
      "description": "The workflow run action properties.",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/WorkflowProvisioningState",
          "description": "The provisioning state.",
          "readOnly": true
        },
        "startTime": {
          "type": "string",
          "format": "date-time",
          "description": "Gets the start time.",
          "readOnly": true
        },
        "endTime": {
          "type": "string",
          "format": "date-time",
          "description": "Gets the end time.",
          "readOnly": true
        },
        "status": {
          "$ref": "#/definitions/WorkflowStatus",
          "description": "Gets the status.",
          "readOnly": true
        },
        "code": {
          "type": "string",
          "description": "Gets the code.",
          "readOnly": true
        },
        "error": {
          "type": "object",
          "description": "Gets the error.",
          "additionalProperties": {},
          "readOnly": true
        },
        "trackingId": {
          "type": "string",
          "description": "Gets the tracking id.",
          "readOnly": true
        },
        "correlation": {
          "$ref": "#/definitions/RunActionCorrelation",
          "description": "The correlation properties."
        },
        "inputsLink": {
          "$ref": "#/definitions/ContentLink",
          "description": "Gets the link to inputs.",
          "readOnly": true
        },
        "outputsLink": {
          "$ref": "#/definitions/ContentLink",
          "description": "Gets the link to outputs.",
          "readOnly": true
        },
        "trackedProperties": {
          "type": "object",
          "description": "Gets the tracked properties.",
          "additionalProperties": {},
          "readOnly": true
        },
        "retryHistory": {
          "type": "array",
          "description": "Gets the retry histories.",
          "items": {
            "$ref": "#/definitions/RetryHistory"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "WorkflowRunActionRepetitionDefinition": {
      "type": "object",
      "description": "The workflow run action repetition definition.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/WorkflowRunActionRepetitionProperties",
          "description": "The workflow run action repetition properties definition."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "WorkflowRunActionRepetitionDefinitionCollection": {
      "type": "object",
      "description": "A collection of workflow run action repetitions.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The WorkflowRunActionRepetitionDefinition items on this page",
          "items": {
            "$ref": "#/definitions/WorkflowRunActionRepetitionDefinition"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "WorkflowRunActionRepetitionProperties": {
      "type": "object",
      "description": "The workflow run action repetition properties definition.",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/WorkflowProvisioningState",
          "description": "The provisioning state.",
          "readOnly": true
        },
        "repetitionIndexes": {
          "type": "array",
          "description": "The repetition indexes.",
          "items": {
            "$ref": "#/definitions/RepetitionIndex"
          },
          "x-ms-identifiers": [
            "itemIndex"
          ]
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/OperationResult"
        }
      ]
    },
    "WorkflowRunListResult": {
      "type": "object",
      "description": "The response of a WorkflowRun list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The WorkflowRun items on this page",
          "items": {
            "$ref": "#/definitions/WorkflowRun"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "WorkflowRunProperties": {
      "type": "object",
      "description": "The workflow run properties.",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/WorkflowProvisioningState",
          "description": "The provisioning state.",
          "readOnly": true
        },
        "waitEndTime": {
          "type": "string",
          "format": "date-time",
          "description": "Gets the wait end time.",
          "readOnly": true
        },
        "startTime": {
          "type": "string",
          "format": "date-time",
          "description": "Gets the start time.",
          "readOnly": true
        },
        "endTime": {
          "type": "string",
          "format": "date-time",
          "description": "Gets the end time.",
          "readOnly": true
        },
        "status": {
          "$ref": "#/definitions/WorkflowStatus",
          "description": "Gets the status.",
          "readOnly": true
        },
        "code": {
          "type": "string",
          "description": "Gets the code.",
          "readOnly": true
        },
        "error": {
          "type": "object",
          "description": "Gets the error.",
          "additionalProperties": {},
          "readOnly": true
        },
        "correlationId": {
          "type": "string",
          "description": "Gets the correlation id.",
          "readOnly": true
        },
        "correlation": {
          "$ref": "#/definitions/Correlation",
          "description": "The run correlation."
        },
        "workflow": {
          "$ref": "#/definitions/ResourceReference",
          "description": "Gets the reference to workflow version.",
          "readOnly": true
        },
        "trigger": {
          "$ref": "#/definitions/WorkflowRunTrigger",
          "description": "Gets the fired trigger.",
          "readOnly": true
        },
        "outputs": {
          "type": "object",
          "description": "Gets the outputs.",
          "additionalProperties": {
            "$ref": "#/definitions/WorkflowOutputParameter"
          },
          "readOnly": true
        },
        "response": {
          "$ref": "#/definitions/WorkflowRunTrigger",
          "description": "Gets the response of the flow run.",
          "readOnly": true
        }
      }
    },
    "WorkflowRunTrigger": {
      "type": "object",
      "description": "The workflow run trigger.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Gets the name.",
          "readOnly": true
        },
        "inputs": {
          "type": "object",
          "description": "Gets the inputs.",
          "additionalProperties": {},
          "readOnly": true
        },
        "inputsLink": {
          "$ref": "#/definitions/ContentLink",
          "description": "Gets the link to inputs.",
          "readOnly": true
        },
        "outputs": {
          "type": "object",
          "description": "Gets the outputs.",
          "additionalProperties": {},
          "readOnly": true
        },
        "outputsLink": {
          "$ref": "#/definitions/ContentLink",
          "description": "Gets the link to outputs.",
          "readOnly": true
        },
        "scheduledTime": {
          "type": "string",
          "format": "date-time",
          "description": "Gets the scheduled time.",
          "readOnly": true
        },
        "startTime": {
          "type": "string",
          "format": "date-time",
          "description": "Gets the start time.",
          "readOnly": true
        },
        "endTime": {
          "type": "string",
          "format": "date-time",
          "description": "Gets the end time.",
          "readOnly": true
        },
        "trackingId": {
          "type": "string",
          "description": "Gets the tracking id.",
          "readOnly": true
        },
        "correlation": {
          "$ref": "#/definitions/Correlation",
          "description": "The run correlation."
        },
        "code": {
          "type": "string",
          "description": "Gets the code.",
          "readOnly": true
        },
        "status": {
          "$ref": "#/definitions/WorkflowStatus",
          "description": "Gets the status.",
          "readOnly": true
        },
        "error": {
          "type": "object",
          "description": "Gets the error.",
          "additionalProperties": {},
          "readOnly": true
        },
        "trackedProperties": {
          "type": "object",
          "description": "Gets the tracked properties.",
          "additionalProperties": {},
          "readOnly": true
        }
      }
    },
    "WorkflowState": {
      "type": "string",
      "description": "The workflow state.",
      "enum": [
        "NotSpecified",
        "Completed",
        "Enabled",
        "Disabled",
        "Deleted",
        "Suspended"
      ],
      "x-ms-enum": {
        "name": "WorkflowState",
        "modelAsString": true,
        "values": [
          {
            "name": "NotSpecified",
            "value": "NotSpecified",
            "description": "Represents a state where the value is not specified."
          },
          {
            "name": "Completed",
            "value": "Completed",
            "description": "Represents a state where the workflow is completed."
          },
          {
            "name": "Enabled",
            "value": "Enabled",
            "description": "Represents a state where the workflow is enabled."
          },
          {
            "name": "Disabled",
            "value": "Disabled",
            "description": "Represents a state where the workflow is disabled."
          },
          {
            "name": "Deleted",
            "value": "Deleted",
            "description": "Represents a state where the workflow is deleted."
          },
          {
            "name": "Suspended",
            "value": "Suspended",
            "description": "Represents a state where the workflow is suspended."
          }
        ]
      }
    },
    "WorkflowStatus": {
      "type": "string",
      "description": "The workflow status.",
      "enum": [
        "NotSpecified",
        "Paused",
        "Running",
        "Waiting",
        "Succeeded",
        "Skipped",
        "Suspended",
        "Cancelled",
        "Failed",
        "Faulted",
        "TimedOut",
        "Aborted",
        "Ignored"
      ],
      "x-ms-enum": {
        "name": "WorkflowStatus",
        "modelAsString": true,
        "values": [
          {
            "name": "NotSpecified",
            "value": "NotSpecified",
            "description": "Represents a state where the value is not specified."
          },
          {
            "name": "Paused",
            "value": "Paused",
            "description": "Represents a paused workflow status."
          },
          {
            "name": "Running",
            "value": "Running",
            "description": "Represents a running workflow status."
          },
          {
            "name": "Waiting",
            "value": "Waiting",
            "description": "Represents a waiting workflow status."
          },
          {
            "name": "Succeeded",
            "value": "Succeeded",
            "description": "Represents a succeeded workflow status."
          },
          {
            "name": "Skipped",
            "value": "Skipped",
            "description": "Represents a skipped workflow status."
          },
          {
            "name": "Suspended",
            "value": "Suspended",
            "description": "Represents a suspended workflow status."
          },
          {
            "name": "Cancelled",
            "value": "Cancelled",
            "description": "Represents a cancelled workflow status."
          },
          {
            "name": "Failed",
            "value": "Failed",
            "description": "Represents a failed workflow status."
          },
          {
            "name": "Faulted",
            "value": "Faulted",
            "description": "Represents a faulted workflow status."
          },
          {
            "name": "TimedOut",
            "value": "TimedOut",
            "description": "Represents a timed out workflow status."
          },
          {
            "name": "Aborted",
            "value": "Aborted",
            "description": "Represents an aborted workflow status."
          },
          {
            "name": "Ignored",
            "value": "Ignored",
            "description": "Represents an ignored workflow status."
          }
        ]
      },
      "readOnly": true
    },
    "WorkflowTrigger": {
      "type": "object",
      "description": "The workflow trigger.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/WorkflowTriggerProperties",
          "description": "The workflow trigger properties."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "WorkflowTriggerCallbackUrl": {
      "type": "object",
      "description": "The workflow trigger callback URL.",
      "properties": {
        "value": {
          "type": "string",
          "description": "Gets the workflow trigger callback URL.",
          "readOnly": true
        },
        "method": {
          "type": "string",
          "description": "Gets the workflow trigger callback URL HTTP method.",
          "readOnly": true
        },
        "basePath": {
          "type": "string",
          "description": "Gets the workflow trigger callback URL base path.",
          "readOnly": true
        },
        "relativePath": {
          "type": "string",
          "description": "Gets the workflow trigger callback URL relative path.",
          "readOnly": true
        },
        "relativePathParameters": {
          "type": "array",
          "description": "Gets the workflow trigger callback URL relative path parameters.",
          "items": {
            "type": "string"
          }
        },
        "queries": {
          "$ref": "#/definitions/WorkflowTriggerListCallbackUrlQueries",
          "description": "Gets the workflow trigger callback URL query parameters."
        }
      }
    },
    "WorkflowTriggerHistory": {
      "type": "object",
      "description": "The workflow trigger history.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/WorkflowTriggerHistoryProperties",
          "description": "Gets the workflow trigger history properties."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "WorkflowTriggerHistoryListResult": {
      "type": "object",
      "description": "The response of a WorkflowTriggerHistory list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The WorkflowTriggerHistory items on this page",
          "items": {
            "$ref": "#/definitions/WorkflowTriggerHistory"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "WorkflowTriggerHistoryProperties": {
      "type": "object",
      "description": "The workflow trigger history properties.",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/WorkflowProvisioningState",
          "description": "The provisioning state.",
          "readOnly": true
        },
        "startTime": {
          "type": "string",
          "format": "date-time",
          "description": "Gets the start time.",
          "readOnly": true
        },
        "endTime": {
          "type": "string",
          "format": "date-time",
          "description": "Gets the end time.",
          "readOnly": true
        },
        "scheduledTime": {
          "type": "string",
          "format": "date-time",
          "description": "The scheduled time.",
          "readOnly": true
        },
        "status": {
          "$ref": "#/definitions/WorkflowStatus",
          "description": "Gets the status.",
          "readOnly": true
        },
        "code": {
          "type": "string",
          "description": "Gets the code.",
          "readOnly": true
        },
        "error": {
          "type": "object",
          "description": "Gets the error.",
          "additionalProperties": {},
          "readOnly": true
        },
        "trackingId": {
          "type": "string",
          "description": "Gets the tracking id.",
          "readOnly": true
        },
        "correlation": {
          "$ref": "#/definitions/Correlation",
          "description": "The run correlation."
        },
        "inputsLink": {
          "$ref": "#/definitions/ContentLink",
          "description": "Gets the link to input parameters.",
          "readOnly": true
        },
        "outputsLink": {
          "$ref": "#/definitions/ContentLink",
          "description": "Gets the link to output parameters.",
          "readOnly": true
        },
        "fired": {
          "type": "boolean",
          "description": "The value indicating whether trigger was fired.",
          "readOnly": true
        },
        "run": {
          "$ref": "#/definitions/ResourceReference",
          "description": "Gets the reference to workflow run.",
          "readOnly": true
        }
      }
    },
    "WorkflowTriggerListCallbackUrlQueries": {
      "type": "object",
      "description": "Gets the workflow trigger callback URL query parameters.",
      "properties": {
        "api-version": {
          "type": "string",
          "description": "The api version."
        },
        "sp": {
          "type": "string",
          "description": "The SAS permissions."
        },
        "sv": {
          "type": "string",
          "description": "The SAS version."
        },
        "sig": {
          "type": "string",
          "description": "The SAS signature."
        },
        "se": {
          "type": "string",
          "description": "The SAS timestamp."
        }
      }
    },
    "WorkflowTriggerListResult": {
      "type": "object",
      "description": "The response of a WorkflowTrigger list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The WorkflowTrigger items on this page",
          "items": {
            "$ref": "#/definitions/WorkflowTrigger"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "WorkflowTriggerProperties": {
      "type": "object",
      "description": "The workflow trigger properties.",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/WorkflowTriggerProvisioningState",
          "description": "Gets the provisioning state.",
          "readOnly": true
        },
        "createdTime": {
          "type": "string",
          "format": "date-time",
          "description": "Gets the created time.",
          "readOnly": true
        },
        "changedTime": {
          "type": "string",
          "format": "date-time",
          "description": "Gets the changed time.",
          "readOnly": true
        },
        "state": {
          "$ref": "#/definitions/WorkflowState",
          "description": "Gets the state.",
          "readOnly": true
        },
        "status": {
          "$ref": "#/definitions/WorkflowStatus",
          "description": "Gets the status.",
          "readOnly": true
        },
        "lastExecutionTime": {
          "type": "string",
          "format": "date-time",
          "description": "Gets the last execution time.",
          "readOnly": true
        },
        "nextExecutionTime": {
          "type": "string",
          "format": "date-time",
          "description": "Gets the next execution time.",
          "readOnly": true
        },
        "recurrence": {
          "$ref": "#/definitions/WorkflowTriggerRecurrence",
          "description": "Gets the workflow trigger recurrence.",
          "readOnly": true
        },
        "workflow": {
          "$ref": "#/definitions/ResourceReference",
          "description": "Gets the reference to workflow.",
          "readOnly": true
        }
      }
    },
    "WorkflowTriggerProvisioningState": {
      "type": "string",
      "description": "The workflow trigger provisioning state.",
      "enum": [
        "NotSpecified",
        "Accepted",
        "Running",
        "Ready",
        "Creating",
        "Created",
        "Deleting",
        "Deleted",
        "Canceled",
        "Failed",
        "Succeeded",
        "Moving",
        "Updating",
        "Registering",
        "Registered",
        "Unregistering",
        "Unregistered",
        "Completed"
      ],
      "x-ms-enum": {
        "name": "WorkflowTriggerProvisioningState",
        "modelAsString": true,
        "values": [
          {
            "name": "NotSpecified",
            "value": "NotSpecified",
            "description": "Represents a state where the value is not specified."
          },
          {
            "name": "Accepted",
            "value": "Accepted",
            "description": "Represents a state where the workflow trigger is accepted."
          },
          {
            "name": "Running",
            "value": "Running",
            "description": "Represents a state where the workflow trigger is running."
          },
          {
            "name": "Ready",
            "value": "Ready",
            "description": "Represents a state where the workflow trigger is ready."
          },
          {
            "name": "Creating",
            "value": "Creating",
            "description": "Represents a state where the workflow trigger is creating."
          },
          {
            "name": "Created",
            "value": "Created",
            "description": "Represents a state where the workflow trigger is created."
          },
          {
            "name": "Deleting",
            "value": "Deleting",
            "description": "Represents a state where the workflow trigger is deleting."
          },
          {
            "name": "Deleted",
            "value": "Deleted",
            "description": "Represents a state where the workflow trigger is deleted."
          },
          {
            "name": "Canceled",
            "value": "Canceled",
            "description": "Represents a state where the workflow trigger is canceled."
          },
          {
            "name": "Failed",
            "value": "Failed",
            "description": "Represents a state where the workflow trigger is failed."
          },
          {
            "name": "Succeeded",
            "value": "Succeeded",
            "description": "Represents a state where the workflow trigger is succeeded."
          },
          {
            "name": "Moving",
            "value": "Moving",
            "description": "Represents a state where the workflow trigger is moving."
          },
          {
            "name": "Updating",
            "value": "Updating",
            "description": "Represents a state where the workflow trigger is updating."
          },
          {
            "name": "Registering",
            "value": "Registering",
            "description": "Represents a state where the workflow trigger is registering."
          },
          {
            "name": "Registered",
            "value": "Registered",
            "description": "Represents a state where the workflow trigger is registered."
          },
          {
            "name": "Unregistering",
            "value": "Unregistering",
            "description": "Represents a state where the workflow trigger is unregistering."
          },
          {
            "name": "Unregistered",
            "value": "Unregistered",
            "description": "Represents a state where the workflow trigger is unregistered."
          },
          {
            "name": "Completed",
            "value": "Completed",
            "description": "Represents a state where the workflow trigger is completed."
          }
        ]
      },
      "readOnly": true
    },
    "WorkflowTriggerRecurrence": {
      "type": "object",
      "description": "The workflow trigger recurrence.",
      "properties": {
        "frequency": {
          "$ref": "#/definitions/RecurrenceFrequency",
          "description": "The frequency."
        },
        "interval": {
          "type": "integer",
          "format": "int32",
          "description": "The interval."
        },
        "startTime": {
          "type": "string",
          "description": "The start time."
        },
        "endTime": {
          "type": "string",
          "description": "The end time."
        },
        "timeZone": {
          "type": "string",
          "description": "The time zone."
        },
        "schedule": {
          "$ref": "#/definitions/RecurrenceSchedule",
          "description": "The recurrence schedule."
        }
      }
    },
    "WorkflowTriggerReference": {
      "type": "object",
      "description": "The workflow trigger reference.",
      "properties": {
        "flowName": {
          "type": "string",
          "description": "The workflow name."
        },
        "triggerName": {
          "type": "string",
          "description": "The workflow trigger name."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ResourceReference"
        }
      ]
    },
    "WorkflowVersion": {
      "type": "object",
      "description": "The workflow version.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/WorkflowVersionProperties",
          "description": "The workflow version properties."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "WorkflowVersionListResult": {
      "type": "object",
      "description": "The response of a WorkflowVersion list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The WorkflowVersion items on this page",
          "items": {
            "$ref": "#/definitions/WorkflowVersion"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "WorkflowVersionProperties": {
      "type": "object",
      "description": "The workflow version properties.",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/WorkflowProvisioningState",
          "description": "The provisioning state.",
          "readOnly": true
        },
        "createdTime": {
          "type": "string",
          "format": "date-time",
          "description": "Gets the created time.",
          "readOnly": true
        },
        "changedTime": {
          "type": "string",
          "format": "date-time",
          "description": "Gets the changed time.",
          "readOnly": true
        },
        "state": {
          "$ref": "#/definitions/WorkflowState",
          "description": "The state."
        },
        "version": {
          "type": "string",
          "description": "Gets the version.",
          "readOnly": true
        },
        "accessEndpoint": {
          "type": "string",
          "description": "Gets the access endpoint.",
          "readOnly": true
        },
        "endpointsConfiguration": {
          "$ref": "#/definitions/FlowEndpointsConfiguration",
          "description": "The endpoints configuration."
        },
        "accessControl": {
          "$ref": "#/definitions/FlowAccessControlConfiguration",
          "description": "The access control configuration."
        },
        "sku": {
          "$ref": "#/definitions/Sku",
          "description": "The sku.",
          "readOnly": true
        },
        "integrationAccount": {
          "$ref": "#/definitions/ResourceReference",
          "description": "The integration account."
        },
        "definition": {
          "type": "object",
          "description": "The definition.",
          "additionalProperties": {}
        },
        "parameters": {
          "type": "object",
          "description": "The parameters.",
          "additionalProperties": {
            "$ref": "#/definitions/WorkflowParameter"
          }
        }
      }
    },
    "WsdlImportMethod": {
      "type": "string",
      "description": "The WSDL import method.",
      "enum": [
        "NotSpecified",
        "SoapToRest",
        "SoapPassThrough"
      ],
      "x-ms-enum": {
        "name": "WsdlImportMethod",
        "modelAsString": true,
        "values": [
          {
            "name": "NotSpecified",
            "value": "NotSpecified",
            "description": "Represents a state where the value is not specified."
          },
          {
            "name": "SoapToRest",
            "value": "SoapToRest",
            "description": "Represents a SOAP to REST WSDL import method."
          },
          {
            "name": "SoapPassThrough",
            "value": "SoapPassThrough",
            "description": "Represents a SOAP Pass Through WSDL import method."
          }
        ]
      }
    },
    "WsdlService": {
      "type": "object",
      "description": "The WSDL service.",
      "properties": {
        "qualifiedName": {
          "type": "string",
          "description": "The qualified name."
        },
        "endpointQualifiedNames": {
          "type": "array",
          "description": "The list of endpoints' qualified names.",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "X12AcknowledgementSettings": {
      "type": "object",
      "description": "The X12 agreement acknowledgement settings.",
      "properties": {
        "needTechnicalAcknowledgement": {
          "type": "boolean",
          "description": "The value indicating whether technical acknowledgement is needed."
        },
        "batchTechnicalAcknowledgements": {
          "type": "boolean",
          "description": "The value indicating whether to batch the technical acknowledgements."
        },
        "needFunctionalAcknowledgement": {
          "type": "boolean",
          "description": "The value indicating whether functional acknowledgement is needed."
        },
        "functionalAcknowledgementVersion": {
          "type": "string",
          "description": "The functional acknowledgement version."
        },
        "batchFunctionalAcknowledgements": {
          "type": "boolean",
          "description": "The value indicating whether to batch functional acknowledgements."
        },
        "needImplementationAcknowledgement": {
          "type": "boolean",
          "description": "The value indicating whether implementation acknowledgement is needed."
        },
        "implementationAcknowledgementVersion": {
          "type": "string",
          "description": "The implementation acknowledgement version."
        },
        "batchImplementationAcknowledgements": {
          "type": "boolean",
          "description": "The value indicating whether to batch implementation acknowledgements."
        },
        "needLoopForValidMessages": {
          "type": "boolean",
          "description": "The value indicating whether a loop is needed for valid messages."
        },
        "sendSynchronousAcknowledgement": {
          "type": "boolean",
          "description": "The value indicating whether to send synchronous acknowledgement."
        },
        "acknowledgementControlNumberPrefix": {
          "type": "string",
          "description": "The acknowledgement control number prefix."
        },
        "acknowledgementControlNumberSuffix": {
          "type": "string",
          "description": "The acknowledgement control number suffix."
        },
        "acknowledgementControlNumberLowerBound": {
          "type": "integer",
          "format": "int32",
          "description": "The acknowledgement control number lower bound."
        },
        "acknowledgementControlNumberUpperBound": {
          "type": "integer",
          "format": "int32",
          "description": "The acknowledgement control number upper bound."
        },
        "rolloverAcknowledgementControlNumber": {
          "type": "boolean",
          "description": "The value indicating whether to rollover acknowledgement control number."
        }
      },
      "required": [
        "needTechnicalAcknowledgement",
        "batchTechnicalAcknowledgements",
        "needFunctionalAcknowledgement",
        "batchFunctionalAcknowledgements",
        "needImplementationAcknowledgement",
        "batchImplementationAcknowledgements",
        "needLoopForValidMessages",
        "sendSynchronousAcknowledgement",
        "acknowledgementControlNumberLowerBound",
        "acknowledgementControlNumberUpperBound",
        "rolloverAcknowledgementControlNumber"
      ]
    },
    "X12AgreementContent": {
      "type": "object",
      "description": "The X12 agreement content.",
      "properties": {
        "receiveAgreement": {
          "$ref": "#/definitions/X12OneWayAgreement",
          "description": "The X12 one-way receive agreement."
        },
        "sendAgreement": {
          "$ref": "#/definitions/X12OneWayAgreement",
          "description": "The X12 one-way send agreement."
        }
      },
      "required": [
        "receiveAgreement",
        "sendAgreement"
      ]
    },
    "X12CharacterSet": {
      "type": "string",
      "description": "The X12 character set.",
      "enum": [
        "NotSpecified",
        "Basic",
        "Extended",
        "UTF8"
      ],
      "x-ms-enum": {
        "name": "X12CharacterSet",
        "modelAsString": true,
        "values": [
          {
            "name": "NotSpecified",
            "value": "NotSpecified",
            "description": "Represents a state where the value is not specified."
          },
          {
            "name": "Basic",
            "value": "Basic",
            "description": "Represents the basic X12 character set."
          },
          {
            "name": "Extended",
            "value": "Extended",
            "description": "Represents the extended X12 character set."
          },
          {
            "name": "UTF8",
            "value": "UTF8",
            "description": "Represents the UTF-8 X12 character set."
          }
        ]
      }
    },
    "X12DateFormat": {
      "type": "string",
      "description": "The x12 date format.",
      "enum": [
        "NotSpecified",
        "CCYYMMDD",
        "YYMMDD"
      ],
      "x-ms-enum": {
        "name": "X12DateFormat",
        "modelAsString": true,
        "values": [
          {
            "name": "NotSpecified",
            "value": "NotSpecified",
            "description": "Represents a state where the value is not specified."
          },
          {
            "name": "CCYYMMDD",
            "value": "CCYYMMDD",
            "description": "Represents the CCYYMMDD date format."
          },
          {
            "name": "YYMMDD",
            "value": "YYMMDD",
            "description": "Represents the YYMMDD date format."
          }
        ]
      }
    },
    "X12DelimiterOverrides": {
      "type": "object",
      "description": "The X12 delimiter override settings.",
      "properties": {
        "protocolVersion": {
          "type": "string",
          "description": "The protocol version."
        },
        "messageId": {
          "type": "string",
          "description": "The message id."
        },
        "dataElementSeparator": {
          "type": "integer",
          "format": "int32",
          "description": "The data element separator."
        },
        "componentSeparator": {
          "type": "integer",
          "format": "int32",
          "description": "The component separator."
        },
        "segmentTerminator": {
          "type": "integer",
          "format": "int32",
          "description": "The segment terminator."
        },
        "segmentTerminatorSuffix": {
          "$ref": "#/definitions/SegmentTerminatorSuffix",
          "description": "The segment terminator suffix."
        },
        "replaceCharacter": {
          "type": "integer",
          "format": "int32",
          "description": "The replacement character."
        },
        "replaceSeparatorsInPayload": {
          "type": "boolean",
          "description": "The value indicating whether to replace separators in payload."
        },
        "targetNamespace": {
          "type": "string",
          "description": "The target namespace on which this delimiter settings has to be applied."
        }
      },
      "required": [
        "dataElementSeparator",
        "componentSeparator",
        "segmentTerminator",
        "segmentTerminatorSuffix",
        "replaceCharacter",
        "replaceSeparatorsInPayload"
      ]
    },
    "X12EnvelopeOverride": {
      "type": "object",
      "description": "The X12 envelope override settings.",
      "properties": {
        "targetNamespace": {
          "type": "string",
          "description": "The target namespace on which this envelope settings has to be applied."
        },
        "protocolVersion": {
          "type": "string",
          "description": "The protocol version on which this envelope settings has to be applied."
        },
        "messageId": {
          "type": "string",
          "description": "The message id on which this envelope settings has to be applied."
        },
        "responsibleAgencyCode": {
          "type": "string",
          "description": "The responsible agency code."
        },
        "headerVersion": {
          "type": "string",
          "description": "The header version."
        },
        "senderApplicationId": {
          "type": "string",
          "description": "The sender application id."
        },
        "receiverApplicationId": {
          "type": "string",
          "description": "The receiver application id."
        },
        "functionalIdentifierCode": {
          "type": "string",
          "description": "The functional identifier code."
        },
        "dateFormat": {
          "$ref": "#/definitions/X12DateFormat",
          "description": "The date format."
        },
        "timeFormat": {
          "$ref": "#/definitions/X12TimeFormat",
          "description": "The time format."
        }
      },
      "required": [
        "targetNamespace",
        "protocolVersion",
        "messageId",
        "responsibleAgencyCode",
        "headerVersion",
        "senderApplicationId",
        "receiverApplicationId",
        "dateFormat",
        "timeFormat"
      ]
    },
    "X12EnvelopeSettings": {
      "type": "object",
      "description": "The X12 agreement envelope settings.",
      "properties": {
        "controlStandardsId": {
          "type": "integer",
          "format": "int32",
          "description": "The controls standards id."
        },
        "useControlStandardsIdAsRepetitionCharacter": {
          "type": "boolean",
          "description": "The value indicating whether to use control standards id as repetition character."
        },
        "senderApplicationId": {
          "type": "string",
          "description": "The sender application id."
        },
        "receiverApplicationId": {
          "type": "string",
          "description": "The receiver application id."
        },
        "controlVersionNumber": {
          "type": "string",
          "description": "The control version number."
        },
        "interchangeControlNumberLowerBound": {
          "type": "integer",
          "format": "int32",
          "description": "The interchange  control number lower bound."
        },
        "interchangeControlNumberUpperBound": {
          "type": "integer",
          "format": "int32",
          "description": "The interchange  control number upper bound."
        },
        "rolloverInterchangeControlNumber": {
          "type": "boolean",
          "description": "The value indicating whether to rollover interchange control number."
        },
        "enableDefaultGroupHeaders": {
          "type": "boolean",
          "description": "The value indicating whether to enable default group headers."
        },
        "functionalGroupId": {
          "type": "string",
          "description": "The functional group id."
        },
        "groupControlNumberLowerBound": {
          "type": "integer",
          "format": "int32",
          "description": "The group control number lower bound."
        },
        "groupControlNumberUpperBound": {
          "type": "integer",
          "format": "int32",
          "description": "The group control number upper bound."
        },
        "rolloverGroupControlNumber": {
          "type": "boolean",
          "description": "The value indicating whether to rollover group control number."
        },
        "groupHeaderAgencyCode": {
          "type": "string",
          "description": "The group header agency code."
        },
        "groupHeaderVersion": {
          "type": "string",
          "description": "The group header version."
        },
        "transactionSetControlNumberLowerBound": {
          "type": "integer",
          "format": "int32",
          "description": "The transaction set control number lower bound."
        },
        "transactionSetControlNumberUpperBound": {
          "type": "integer",
          "format": "int32",
          "description": "The transaction set control number upper bound."
        },
        "rolloverTransactionSetControlNumber": {
          "type": "boolean",
          "description": "The value indicating whether to rollover transaction set control number."
        },
        "transactionSetControlNumberPrefix": {
          "type": "string",
          "description": "The transaction set control number prefix."
        },
        "transactionSetControlNumberSuffix": {
          "type": "string",
          "description": "The transaction set control number suffix."
        },
        "overwriteExistingTransactionSetControlNumber": {
          "type": "boolean",
          "description": "The value indicating whether to overwrite existing transaction set control number."
        },
        "groupHeaderDateFormat": {
          "$ref": "#/definitions/X12DateFormat",
          "description": "The group header date format."
        },
        "groupHeaderTimeFormat": {
          "$ref": "#/definitions/X12TimeFormat",
          "description": "The group header time format."
        },
        "usageIndicator": {
          "$ref": "#/definitions/UsageIndicator",
          "description": "The usage indicator."
        }
      },
      "required": [
        "controlStandardsId",
        "useControlStandardsIdAsRepetitionCharacter",
        "senderApplicationId",
        "receiverApplicationId",
        "controlVersionNumber",
        "interchangeControlNumberLowerBound",
        "interchangeControlNumberUpperBound",
        "rolloverInterchangeControlNumber",
        "enableDefaultGroupHeaders",
        "groupControlNumberLowerBound",
        "groupControlNumberUpperBound",
        "rolloverGroupControlNumber",
        "groupHeaderAgencyCode",
        "groupHeaderVersion",
        "transactionSetControlNumberLowerBound",
        "transactionSetControlNumberUpperBound",
        "rolloverTransactionSetControlNumber",
        "overwriteExistingTransactionSetControlNumber",
        "groupHeaderDateFormat",
        "groupHeaderTimeFormat",
        "usageIndicator"
      ]
    },
    "X12FramingSettings": {
      "type": "object",
      "description": "The X12 agreement framing settings.",
      "properties": {
        "dataElementSeparator": {
          "type": "integer",
          "format": "int32",
          "description": "The data element separator."
        },
        "componentSeparator": {
          "type": "integer",
          "format": "int32",
          "description": "The component separator."
        },
        "replaceSeparatorsInPayload": {
          "type": "boolean",
          "description": "The value indicating whether to replace separators in payload."
        },
        "replaceCharacter": {
          "type": "integer",
          "format": "int32",
          "description": "The replacement character."
        },
        "segmentTerminator": {
          "type": "integer",
          "format": "int32",
          "description": "The segment terminator."
        },
        "characterSet": {
          "$ref": "#/definitions/X12CharacterSet",
          "description": "The X12 character set."
        },
        "segmentTerminatorSuffix": {
          "$ref": "#/definitions/SegmentTerminatorSuffix",
          "description": "The segment terminator suffix."
        }
      },
      "required": [
        "dataElementSeparator",
        "componentSeparator",
        "replaceSeparatorsInPayload",
        "replaceCharacter",
        "segmentTerminator",
        "characterSet",
        "segmentTerminatorSuffix"
      ]
    },
    "X12MessageFilter": {
      "type": "object",
      "description": "The X12 message filter for odata query.",
      "properties": {
        "messageFilterType": {
          "$ref": "#/definitions/MessageFilterType",
          "description": "The message filter type."
        }
      },
      "required": [
        "messageFilterType"
      ]
    },
    "X12MessageIdentifier": {
      "type": "object",
      "description": "The X12 message identifier.",
      "properties": {
        "messageId": {
          "type": "string",
          "description": "The message id."
        }
      },
      "required": [
        "messageId"
      ]
    },
    "X12OneWayAgreement": {
      "type": "object",
      "description": "The X12 one-way agreement.",
      "properties": {
        "senderBusinessIdentity": {
          "$ref": "#/definitions/BusinessIdentity",
          "description": "The sender business identity"
        },
        "receiverBusinessIdentity": {
          "$ref": "#/definitions/BusinessIdentity",
          "description": "The receiver business identity"
        },
        "protocolSettings": {
          "$ref": "#/definitions/X12ProtocolSettings",
          "description": "The X12 protocol settings."
        }
      },
      "required": [
        "senderBusinessIdentity",
        "receiverBusinessIdentity",
        "protocolSettings"
      ]
    },
    "X12ProcessingSettings": {
      "type": "object",
      "description": "The X12 processing settings.",
      "properties": {
        "maskSecurityInfo": {
          "type": "boolean",
          "description": "The value indicating whether to mask security information."
        },
        "convertImpliedDecimal": {
          "type": "boolean",
          "description": "The value indicating whether to convert numerical type to implied decimal."
        },
        "preserveInterchange": {
          "type": "boolean",
          "description": "The value indicating whether to preserve interchange."
        },
        "suspendInterchangeOnError": {
          "type": "boolean",
          "description": "The value indicating whether to suspend interchange on error."
        },
        "createEmptyXmlTagsForTrailingSeparators": {
          "type": "boolean",
          "description": "The value indicating whether to create empty xml tags for trailing separators."
        },
        "useDotAsDecimalSeparator": {
          "type": "boolean",
          "description": "The value indicating whether to use dot as decimal separator."
        }
      },
      "required": [
        "maskSecurityInfo",
        "convertImpliedDecimal",
        "preserveInterchange",
        "suspendInterchangeOnError",
        "createEmptyXmlTagsForTrailingSeparators",
        "useDotAsDecimalSeparator"
      ]
    },
    "X12ProtocolSettings": {
      "type": "object",
      "description": "The X12 agreement protocol settings.",
      "properties": {
        "validationSettings": {
          "$ref": "#/definitions/X12ValidationSettings",
          "description": "The X12 validation settings."
        },
        "framingSettings": {
          "$ref": "#/definitions/X12FramingSettings",
          "description": "The X12 framing settings."
        },
        "envelopeSettings": {
          "$ref": "#/definitions/X12EnvelopeSettings",
          "description": "The X12 envelope settings."
        },
        "acknowledgementSettings": {
          "$ref": "#/definitions/X12AcknowledgementSettings",
          "description": "The X12 acknowledgment settings."
        },
        "messageFilter": {
          "$ref": "#/definitions/X12MessageFilter",
          "description": "The X12 message filter."
        },
        "securitySettings": {
          "$ref": "#/definitions/X12SecuritySettings",
          "description": "The X12 security settings."
        },
        "processingSettings": {
          "$ref": "#/definitions/X12ProcessingSettings",
          "description": "The X12 processing settings."
        },
        "envelopeOverrides": {
          "type": "array",
          "description": "The X12 envelope override settings.",
          "items": {
            "$ref": "#/definitions/X12EnvelopeOverride"
          },
          "x-ms-identifiers": [
            "messageId"
          ]
        },
        "validationOverrides": {
          "type": "array",
          "description": "The X12 validation override settings.",
          "items": {
            "$ref": "#/definitions/X12ValidationOverride"
          },
          "x-ms-identifiers": [
            "messageId"
          ]
        },
        "messageFilterList": {
          "type": "array",
          "description": "The X12 message filter list.",
          "items": {
            "$ref": "#/definitions/X12MessageIdentifier"
          },
          "x-ms-identifiers": [
            "messageId"
          ]
        },
        "schemaReferences": {
          "type": "array",
          "description": "The X12 schema references.",
          "items": {
            "$ref": "#/definitions/X12SchemaReference"
          },
          "x-ms-identifiers": [
            "messageId"
          ]
        },
        "x12DelimiterOverrides": {
          "type": "array",
          "description": "The X12 delimiter override settings.",
          "items": {
            "$ref": "#/definitions/X12DelimiterOverrides"
          },
          "x-ms-identifiers": []
        }
      },
      "required": [
        "validationSettings",
        "framingSettings",
        "envelopeSettings",
        "acknowledgementSettings",
        "messageFilter",
        "securitySettings",
        "processingSettings",
        "schemaReferences"
      ]
    },
    "X12SchemaReference": {
      "type": "object",
      "description": "The X12 schema reference.",
      "properties": {
        "messageId": {
          "type": "string",
          "description": "The message id."
        },
        "senderApplicationId": {
          "type": "string",
          "description": "The sender application id."
        },
        "schemaVersion": {
          "type": "string",
          "description": "The schema version."
        },
        "schemaName": {
          "type": "string",
          "description": "The schema name."
        }
      },
      "required": [
        "messageId",
        "schemaVersion",
        "schemaName"
      ]
    },
    "X12SecuritySettings": {
      "type": "object",
      "description": "The X12 agreement security settings.",
      "properties": {
        "authorizationQualifier": {
          "type": "string",
          "description": "The authorization qualifier."
        },
        "authorizationValue": {
          "type": "string",
          "description": "The authorization value."
        },
        "securityQualifier": {
          "type": "string",
          "description": "The security qualifier."
        },
        "passwordValue": {
          "type": "string",
          "description": "The password value."
        }
      },
      "required": [
        "authorizationQualifier",
        "securityQualifier"
      ]
    },
    "X12TimeFormat": {
      "type": "string",
      "description": "The x12 time format.",
      "enum": [
        "NotSpecified",
        "HHMM",
        "HHMMSS",
        "HHMMSSdd",
        "HHMMSSd"
      ],
      "x-ms-enum": {
        "name": "X12TimeFormat",
        "modelAsString": true,
        "values": [
          {
            "name": "NotSpecified",
            "value": "NotSpecified",
            "description": "Represents a state where the value is not specified."
          },
          {
            "name": "HHMM",
            "value": "HHMM",
            "description": "Represents the HHMM time format."
          },
          {
            "name": "HHMMSS",
            "value": "HHMMSS",
            "description": "Represents the HHMMSS time format."
          },
          {
            "name": "HHMMSSdd",
            "value": "HHMMSSdd",
            "description": "Represents the HHMMSSdd time format."
          },
          {
            "name": "HHMMSSd",
            "value": "HHMMSSd",
            "description": "Represents the HHMMSSd time format."
          }
        ]
      }
    },
    "X12ValidationOverride": {
      "type": "object",
      "description": "The X12 validation override settings.",
      "properties": {
        "messageId": {
          "type": "string",
          "description": "The message id on which the validation settings has to be applied."
        },
        "validateEdiTypes": {
          "type": "boolean",
          "description": "The value indicating whether to validate EDI types."
        },
        "validateXsdTypes": {
          "type": "boolean",
          "description": "The value indicating whether to validate XSD types."
        },
        "allowLeadingAndTrailingSpacesAndZeroes": {
          "type": "boolean",
          "description": "The value indicating whether to allow leading and trailing spaces and zeroes."
        },
        "validateCharacterSet": {
          "type": "boolean",
          "description": "The value indicating whether to validate character Set."
        },
        "trimLeadingAndTrailingSpacesAndZeroes": {
          "type": "boolean",
          "description": "The value indicating whether to trim leading and trailing spaces and zeroes."
        },
        "trailingSeparatorPolicy": {
          "$ref": "#/definitions/TrailingSeparatorPolicy",
          "description": "The trailing separator policy."
        }
      },
      "required": [
        "messageId",
        "validateEdiTypes",
        "validateXsdTypes",
        "allowLeadingAndTrailingSpacesAndZeroes",
        "validateCharacterSet",
        "trimLeadingAndTrailingSpacesAndZeroes",
        "trailingSeparatorPolicy"
      ]
    },
    "X12ValidationSettings": {
      "type": "object",
      "description": "The X12 agreement validation settings.",
      "properties": {
        "validateCharacterSet": {
          "type": "boolean",
          "description": "The value indicating whether to validate character set in the message."
        },
        "checkDuplicateInterchangeControlNumber": {
          "type": "boolean",
          "description": "The value indicating whether to check for duplicate interchange control number."
        },
        "interchangeControlNumberValidityDays": {
          "type": "integer",
          "format": "int32",
          "description": "The validity period of interchange control number."
        },
        "checkDuplicateGroupControlNumber": {
          "type": "boolean",
          "description": "The value indicating whether to check for duplicate group control number."
        },
        "checkDuplicateTransactionSetControlNumber": {
          "type": "boolean",
          "description": "The value indicating whether to check for duplicate transaction set control number."
        },
        "validateEdiTypes": {
          "type": "boolean",
          "description": "The value indicating whether to Whether to validate EDI types."
        },
        "validateXsdTypes": {
          "type": "boolean",
          "description": "The value indicating whether to Whether to validate XSD types."
        },
        "allowLeadingAndTrailingSpacesAndZeroes": {
          "type": "boolean",
          "description": "The value indicating whether to allow leading and trailing spaces and zeroes."
        },
        "trimLeadingAndTrailingSpacesAndZeroes": {
          "type": "boolean",
          "description": "The value indicating whether to trim leading and trailing spaces and zeroes."
        },
        "trailingSeparatorPolicy": {
          "$ref": "#/definitions/TrailingSeparatorPolicy",
          "description": "The trailing separator policy."
        }
      },
      "required": [
        "validateCharacterSet",
        "checkDuplicateInterchangeControlNumber",
        "interchangeControlNumberValidityDays",
        "checkDuplicateGroupControlNumber",
        "checkDuplicateTransactionSetControlNumber",
        "validateEdiTypes",
        "validateXsdTypes",
        "allowLeadingAndTrailingSpacesAndZeroes",
        "trimLeadingAndTrailingSpacesAndZeroes",
        "trailingSeparatorPolicy"
      ]
    }
  },
  "parameters": {}
}
