{
  "swagger": "2.0",
  "info": {
    "version": "2025-05-25-preview",
    "title": "Azure Alerts Management Service Resource Provider",
    "description": "Azure Alerts Management Service provides a single pane of glass of alerts across Azure Monitor."
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Azure Active Directory OAuth2 Flow",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "paths": {
    "/providers/Microsoft.AlertsManagement/operations": {
      "get": {
        "operationId": "Operations_List",
        "description": "List all operations available through Azure Alerts Management Resource Provider.",
        "parameters": [
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK. Successfully retrieved operations list.",
            "schema": {
              "$ref": "#/definitions/operationsList"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "ListOperations": {
            "$ref": "./examples/Operations_List.json"
          }
        }
      }
    },
    "/providers/Microsoft.AlertsManagement/alertsMetaData": {
      "get": {
        "operationId": "Alerts_MetaData",
        "description": "List alerts meta data information based on value of identifier parameter.",
        "parameters": [
          {
            "$ref": "#/parameters/api-version"
          },
          {
            "$ref": "#/parameters/identifier"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK. Successfully listed alert meta data.",
            "schema": {
              "$ref": "#/definitions/alertsMetaData"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/AlertsManagementErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "MonService": {
            "$ref": "./examples/AlertsMetaData_MonitorService.json"
          }
        }
      }
    },
    "/{scope}/providers/Microsoft.AlertsManagement/alerts": {
      "get": {
        "operationId": "Alerts_GetAll",
        "description": "List all existing alerts, where the results can be filtered on the basis of multiple parameters (e.g. time range). The results can then be sorted on the basis specific fields, with the default being lastModifiedDateTime. ",
        "parameters": [
          {
            "$ref": "#/parameters/scope"
          },
          {
            "$ref": "#/parameters/targetResource"
          },
          {
            "$ref": "#/parameters/targetResourceType"
          },
          {
            "$ref": "#/parameters/targetResourceGroup"
          },
          {
            "$ref": "#/parameters/monitorService"
          },
          {
            "$ref": "#/parameters/monitorCondition"
          },
          {
            "$ref": "#/parameters/severity"
          },
          {
            "$ref": "#/parameters/alertState"
          },
          {
            "$ref": "#/parameters/alertRule"
          },
          {
            "$ref": "#/parameters/smartGroupIdFilter"
          },
          {
            "$ref": "#/parameters/includeContext"
          },
          {
            "$ref": "#/parameters/includeEgressConfig"
          },
          {
            "$ref": "#/parameters/pageCount"
          },
          {
            "$ref": "#/parameters/alertsSortBy"
          },
          {
            "$ref": "#/parameters/sortOrder"
          },
          {
            "$ref": "#/parameters/select"
          },
          {
            "$ref": "#/parameters/timeRange"
          },
          {
            "$ref": "#/parameters/customTimeRange"
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK. Successfully listed alert objects.",
            "schema": {
              "$ref": "#/definitions/alertsList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/AlertsManagementErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "ListAlerts": {
            "$ref": "./examples/Alerts_List.json"
          }
        }
      }
    },
    "/{scope}/providers/Microsoft.AlertsManagement/alerts/{alertId}": {
      "get": {
        "operationId": "Alerts_GetById",
        "summary": "Get a specific alert.",
        "description": "Get information related to a specific alert.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/scope"
          },
          {
            "$ref": "#/parameters/alertId"
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. Returns the alert with the specified ID.",
            "schema": {
              "$ref": "#/definitions/alert"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/AlertsManagementErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "GetById": {
            "$ref": "./examples/Alerts_GetById.json"
          }
        }
      }
    },
    "/{scope}/providers/Microsoft.AlertsManagement/alerts/{alertId}/changestate": {
      "post": {
        "operationId": "Alerts_ChangeState",
        "description": "Change the state of an alert.",
        "parameters": [
          {
            "$ref": "#/parameters/scope"
          },
          {
            "$ref": "#/parameters/alertId"
          },
          {
            "$ref": "#/parameters/api-version"
          },
          {
            "$ref": "#/parameters/newState"
          },
          {
            "$ref": "#/parameters/comment"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. Alert state updated.",
            "schema": {
              "$ref": "#/definitions/alert"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/AlertsManagementErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Resolve": {
            "$ref": "./examples/Alerts_ChangeState.json"
          }
        }
      }
    }
  },
  "parameters": {
    "api-version": {
      "name": "api-version",
      "description": "API version.",
      "type": "string",
      "in": "query",
      "required": true,
      "enum": [
        "2025-05-25-preview"
      ],
      "x-ms-enum": {
        "name": "api-version",
        "modelAsString": true
      }
    },
    "scope": {
      "name": "scope",
      "description": "scope here is resourceId for which alert is created.",
      "type": "string",
      "in": "path",
      "required": true,
      "x-ms-skip-url-encoding": true,
      "x-ms-parameter-location": "client"
    },
    "alertId": {
      "name": "alertId",
      "description": "Unique ID of an alert instance.",
      "type": "string",
      "in": "path",
      "required": true,
      "x-ms-parameter-location": "method"
    },
    "targetResourceGroup": {
      "description": "Filter by target resource group name. Default value is select all.",
      "name": "targetResourceGroup",
      "type": "string",
      "in": "query",
      "required": false,
      "x-ms-parameter-location": "method"
    },
    "targetResource": {
      "description": "Filter by target resource( which is full ARM ID) Default value is select all.",
      "name": "targetResource",
      "type": "string",
      "in": "query",
      "required": false,
      "x-ms-parameter-location": "method"
    },
    "targetResourceType": {
      "description": "Filter by target resource type. Default value is select all.",
      "name": "targetResourceType",
      "type": "string",
      "in": "query",
      "required": false,
      "x-ms-parameter-location": "method"
    },
    "monitorService": {
      "description": "Filter by monitor service which generates the alert instance. Default value is select all.",
      "name": "monitorService",
      "type": "string",
      "in": "query",
      "required": false,
      "x-ms-parameter-location": "method",
      "enum": [
        "Application Insights",
        "ActivityLog Administrative",
        "ActivityLog Security",
        "ActivityLog Recommendation",
        "ActivityLog Policy",
        "ActivityLog Autoscale",
        "Log Analytics",
        "Nagios",
        "Platform",
        "SCOM",
        "ServiceHealth",
        "SmartDetector",
        "VM Insights",
        "Zabbix",
        "Resource Health"
      ],
      "x-ms-enum": {
        "name": "MonitorService",
        "modelAsString": true
      }
    },
    "severity": {
      "description": "Filter by severity. Default value is select all.",
      "name": "severity",
      "type": "string",
      "in": "query",
      "required": false,
      "x-ms-parameter-location": "method",
      "enum": [
        "Sev0",
        "Sev1",
        "Sev2",
        "Sev3",
        "Sev4"
      ],
      "x-ms-enum": {
        "name": "Severity",
        "modelAsString": true
      }
    },
    "alertState": {
      "description": "Filter by state of the alert instance. Default value is to select all.",
      "name": "alertState",
      "type": "string",
      "in": "query",
      "required": false,
      "x-ms-parameter-location": "method",
      "enum": [
        "New",
        "Acknowledged",
        "Closed"
      ],
      "x-ms-enum": {
        "name": "AlertState",
        "modelAsString": true
      }
    },
    "smartGroupIdFilter": {
      "description": "Filter the alerts list by the Smart Group Id. Default value is none.",
      "name": "smartGroupId",
      "type": "string",
      "in": "query",
      "required": false,
      "x-ms-parameter-location": "method"
    },
    "newState": {
      "description": "New state of the alert.",
      "name": "newState",
      "type": "string",
      "in": "query",
      "required": true,
      "x-ms-parameter-location": "method",
      "enum": [
        "New",
        "Acknowledged",
        "Closed"
      ],
      "x-ms-enum": {
        "name": "AlertState",
        "modelAsString": true
      }
    },
    "comment": {
      "description": "reason of change alert state",
      "name": "comment",
      "in": "body",
      "x-ms-parameter-location": "method",
      "required": false,
      "schema": {
        "$ref": "#/definitions/comments"
      }
    },
    "monitorCondition": {
      "description": "Filter by monitor condition which is either 'Fired' or 'Resolved'. Default value is to select all.",
      "name": "monitorCondition",
      "type": "string",
      "in": "query",
      "required": false,
      "x-ms-parameter-location": "method",
      "enum": [
        "Fired",
        "Resolved"
      ],
      "x-ms-enum": {
        "name": "MonitorCondition",
        "modelAsString": true
      }
    },
    "alertRule": {
      "description": "Filter by specific alert rule. Default value is to select all.",
      "name": "alertRule",
      "type": "string",
      "in": "query",
      "required": false,
      "x-ms-parameter-location": "method"
    },
    "timeRange": {
      "description": "Filter by time range by below listed values. Default value is 1 day.",
      "name": "timeRange",
      "type": "string",
      "in": "query",
      "required": false,
      "x-ms-parameter-location": "method",
      "enum": [
        "1h",
        "1d",
        "7d",
        "30d"
      ],
      "x-ms-enum": {
        "name": "TimeRange",
        "modelAsString": true
      }
    },
    "customTimeRange": {
      "description": "Filter by custom time range in the format <start-time>/<end-time> where time is in (ISO-8601 format)'.",
      "name": "customTimeRange",
      "type": "string",
      "in": "query",
      "required": false,
      "x-ms-parameter-location": "method"
    },
    "includeContext": {
      "description": "Include context which has contextual data specific to the monitor service. Default value is false'",
      "name": "includeContext",
      "type": "boolean",
      "in": "query",
      "required": false,
      "x-ms-parameter-location": "method"
    },
    "includeEgressConfig": {
      "description": "Include egress config which would be used for displaying the content in portal. Default value is 'false'.",
      "name": "includeEgressConfig",
      "type": "boolean",
      "in": "query",
      "required": false,
      "x-ms-parameter-location": "method"
    },
    "pageCount": {
      "description": "Determines number of alerts returned per page in response.",
      "name": "pageCount",
      "type": "integer",
      "in": "query",
      "required": false,
      "x-ms-parameter-location": "method"
    },
    "alertsSortBy": {
      "description": "Sort the query results by input field. Default value is 'lastModifiedDateTime'.",
      "name": "sortBy",
      "type": "string",
      "in": "query",
      "required": false,
      "x-ms-parameter-location": "method",
      "enum": [
        "name",
        "severity",
        "alertState",
        "monitorCondition",
        "targetResource",
        "targetResourceName",
        "targetResourceGroup",
        "targetResourceType",
        "startDateTime",
        "lastModifiedDateTime"
      ],
      "x-ms-enum": {
        "name": "AlertsSortByFields",
        "modelAsString": true
      }
    },
    "sortOrder": {
      "description": "Sort the query results order in either ascending or descending.",
      "name": "sortOrder",
      "type": "string",
      "in": "query",
      "required": false,
      "x-ms-parameter-location": "method",
      "enum": [
        "asc",
        "desc"
      ]
    },
    "select": {
      "description": "This filter allows to selection of the fields(comma separated) which would be part of the essential section.",
      "name": "select",
      "type": "string",
      "in": "query",
      "required": false,
      "x-ms-parameter-location": "method"
    },
    "identifier": {
      "name": "identifier",
      "description": "Identification of the information to be retrieved by API call.",
      "type": "string",
      "in": "query",
      "required": true,
      "enum": [
        "MonitorServiceList"
      ],
      "x-ms-enum": {
        "name": "identifier",
        "modelAsString": true
      },
      "x-ms-parameter-location": "method"
    }
  },
  "definitions": {
    "operation": {
      "description": "Operation provided by provider",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the operation"
        },
        "display": {
          "type": "object",
          "description": "Properties of the operation",
          "properties": {
            "provider": {
              "type": "string",
              "description": "Provider name"
            },
            "resource": {
              "type": "string",
              "description": "Resource name"
            },
            "operation": {
              "type": "string",
              "description": "Operation name"
            },
            "description": {
              "type": "string",
              "description": "Description of the operation"
            }
          }
        }
      }
    },
    "operationsList": {
      "description": "Lists the operations available in the AlertsManagement RP.",
      "properties": {
        "nextLink": {
          "description": "URL to fetch the next set of alerts.",
          "type": "string"
        },
        "value": {
          "description": "Array of operations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/operation"
          }
        }
      },
      "required": [
        "value"
      ]
    },
    "ProxyResource": {
      "description": "An azure resource object",
      "properties": {
        "id": {
          "type": "string",
          "readOnly": true,
          "description": "Azure resource Id"
        },
        "type": {
          "type": "string",
          "readOnly": true,
          "description": "Azure resource type"
        },
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "Azure resource name"
        }
      },
      "x-ms-azure-resource": true
    },
    "alert": {
      "description": "An alert created in alert management service.",
      "allOf": [
        {
          "$ref": "#/definitions/ProxyResource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/alertProperties"
        }
      }
    },
    "alertsList": {
      "description": "List the alerts.",
      "properties": {
        "nextLink": {
          "description": "URL to fetch the next set of alerts.",
          "type": "string"
        },
        "value": {
          "description": "List of alerts",
          "type": "array",
          "items": {
            "$ref": "#/definitions/alert"
          }
        }
      }
    },
    "alertProperties": {
      "type": "object",
      "description": "Alert property bag",
      "properties": {
        "essentials": {
          "$ref": "#/definitions/essentials"
        },
        "context": {
          "$ref": "#/definitions/alertContext"
        },
        "egressConfig": {
          "$ref": "#/definitions/egressConfig"
        }
      }
    },
    "essentials": {
      "type": "object",
      "description": "This object contains consistent fields across different monitor services.",
      "properties": {
        "severity": {
          "type": "string",
          "description": "Severity of alert Sev0 being highest and Sev4 being lowest.",
          "readOnly": true,
          "enum": [
            "Sev0",
            "Sev1",
            "Sev2",
            "Sev3",
            "Sev4"
          ],
          "x-ms-enum": {
            "name": "Severity",
            "modelAsString": true
          }
        },
        "signalType": {
          "type": "string",
          "description": "The type of signal the alert is based on.",
          "readOnly": true,
          "enum": [
            "Metric",
            "Log",
            "Unknown"
          ],
          "x-ms-enum": {
            "name": "SignalType",
            "modelAsString": true
          }
        },
        "alertState": {
          "type": "string",
          "description": "Alert object state, which can be modified by the user.",
          "readOnly": true,
          "enum": [
            "New",
            "Acknowledged",
            "Closed"
          ],
          "x-ms-enum": {
            "name": "AlertState",
            "modelAsString": true
          }
        },
        "monitorCondition": {
          "type": "string",
          "description": "Can be 'Fired' or 'Resolved'.",
          "readOnly": true,
          "enum": [
            "Fired",
            "Resolved"
          ],
          "x-ms-enum": {
            "name": "MonitorCondition",
            "modelAsString": true
          }
        },
        "targetResource": {
          "type": "string",
          "description": "Target ARM resource, on which alert got created."
        },
        "targetResourceName": {
          "type": "string",
          "description": "Name of the target ARM resource name."
        },
        "targetResourceGroup": {
          "type": "string",
          "description": "Resource group of target ARM resource."
        },
        "targetResourceType": {
          "type": "string",
          "description": "Resource type of target ARM resource."
        },
        "startDateTime": {
          "type": "string",
          "format": "date-time",
          "description": "Creation time(ISO-8601 format) of alert instance.",
          "readOnly": true
        },
        "lastModifiedDateTime": {
          "type": "string",
          "format": "date-time",
          "description": "Last modification time(ISO-8601 format) of alert instance.",
          "readOnly": true
        },
        "monitorService": {
          "type": "string",
          "description": "Monitor service on which the rule is set.",
          "readOnly": true,
          "enum": [
            "Application Insights",
            "ActivityLog Administrative",
            "ActivityLog Security",
            "ActivityLog Recommendation",
            "ActivityLog Policy",
            "ActivityLog Autoscale",
            "Log Analytics",
            "Nagios",
            "Platform",
            "SCOM",
            "ServiceHealth",
            "SmartDetector",
            "VM Insights",
            "Zabbix",
            "Resource Health"
          ],
          "x-ms-enum": {
            "name": "MonitorService",
            "modelAsString": true
          }
        }
      }
    },
    "alertContext": {
      "type": "object",
      "description": "Information specific to the monitor service.",
      "readOnly": true
    },
    "egressConfig": {
      "type": "object",
      "description": "Config which would be used for displaying the data in portal.",
      "readOnly": true
    },
    "comments": {
      "type": "object",
      "description": "Change alert state reason",
      "properties": {
        "comments": {
          "type": "string"
        }
      }
    },
    "alertsMetaData": {
      "description": "alert meta data information.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/alertsMetaDataProperties"
        }
      }
    },
    "alertsMetaDataProperties": {
      "description": "alert meta data property bag",
      "discriminator": "metadataIdentifier",
      "required": [
        "metadataIdentifier"
      ],
      "properties": {
        "metadataIdentifier": {
          "type": "string",
          "description": "Identification of the information to be retrieved by API call",
          "enum": [
            "MonitorServiceList"
          ],
          "x-ms-enum": {
            "name": "metadataIdentifier",
            "modelAsString": true
          }
        }
      }
    },
    "MonitorServiceList": {
      "title": "Monitor service details",
      "description": "Monitor service details",
      "required": [
        "data"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/alertsMetaDataProperties"
        },
        {
          "type": "object"
        }
      ],
      "properties": {
        "data": {
          "description": "Array of operations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/MonitorServiceDetails"
          }
        }
      }
    },
    "MonitorServiceDetails": {
      "description": "Details of a monitor service",
      "properties": {
        "name": {
          "type": "string",
          "description": "Monitor service name"
        },
        "displayName": {
          "type": "string",
          "description": "Monitor service display name"
        }
      }
    }
  }
}
