{
  "swagger": "2.0",
  "info": {
    "version": "2025-05-25-preview",
    "title": "Azure Alerts Management Service Resource Provider",
    "description": "Azure Alerts Management Service provides a single pane of glass of alerts across Azure Monitor."
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Azure Active Directory OAuth2 Flow",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "paths": {
    "/providers/Microsoft.AlertsManagement/operations": {
      "get": {
        "operationId": "Operations_List",
        "description": "List all operations available through Azure Alerts Management Resource Provider.",
        "parameters": [
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK. Successfully retrieved operations list.",
            "schema": {
              "$ref": "#/definitions/operationsList"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "ListOperations": {
            "$ref": "./examples/Operations_List.json"
          }
        }
      }
    },
    "/providers/Microsoft.AlertsManagement/alertsMetaData": {
      "get": {
        "operationId": "Alerts_MetaData",
        "description": "List alerts meta data information based on value of identifier parameter.",
        "parameters": [
          {
            "$ref": "#/parameters/api-version"
          },
          {
            "$ref": "#/parameters/identifier"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK. Successfully listed alert meta data.",
            "schema": {
              "$ref": "#/definitions/alertsMetaData"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/AlertsManagementErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "MonService": {
            "$ref": "./examples/AlertsMetaData_MonitorService.json"
          }
        }
      }
    },
    "/{scope}/providers/Microsoft.AlertsManagement/alerts": {
      "get": {
        "operationId": "Alerts_GetAll",
        "description": "List all existing alerts, where the results can be filtered on the basis of multiple parameters (e.g. time range). The results can then be sorted on the basis specific fields, with the default being lastModifiedDateTime. ",
        "parameters": [
          {
            "$ref": "#/parameters/scope"
          },
          {
            "$ref": "#/parameters/targetResource"
          },
          {
            "$ref": "#/parameters/targetResourceType"
          },
          {
            "$ref": "#/parameters/targetResourceGroup"
          },
          {
            "$ref": "#/parameters/monitorService"
          },
          {
            "$ref": "#/parameters/monitorCondition"
          },
          {
            "$ref": "#/parameters/severity"
          },
          {
            "$ref": "#/parameters/alertState"
          },
          {
            "$ref": "#/parameters/alertRule"
          },
          {
            "$ref": "#/parameters/smartGroupIdFilter"
          },
          {
            "$ref": "#/parameters/includeContext"
          },
          {
            "$ref": "#/parameters/includeEgressConfig"
          },
          {
            "$ref": "#/parameters/pageCount"
          },
          {
            "$ref": "#/parameters/alertsSortBy"
          },
          {
            "$ref": "#/parameters/sortOrder"
          },
          {
            "$ref": "#/parameters/select"
          },
          {
            "$ref": "#/parameters/timeRange"
          },
          {
            "$ref": "#/parameters/customTimeRange"
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK. Successfully listed alert objects.",
            "schema": {
              "$ref": "#/definitions/alertsList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/AlertsManagementErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "ListAlerts": {
            "$ref": "./examples/Alerts_List.json"
          }
        }
      }
    },
    "/{scope}/providers/Microsoft.AlertsManagement/alerts/{alertId}": {
      "get": {
        "operationId": "Alerts_GetById",
        "summary": "Get a specific alert.",
        "description": "Get information related to a specific alert. If scope is a deleted resource then please use scope as parent resource of the delete resource. For example if my alert id is '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Compute/virtualMachines/vm1/providers/Microsoft.AlertsManagement/alerts/{alertId}' and 'vm1' is deleted then if you want to get alert by id then use parent resource of scope. So in this example get alert by id call will look like this: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.AlertsManagement/alerts/{alertId}'.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/scope"
          },
          {
            "$ref": "#/parameters/alertId"
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. Returns the alert with the specified ID.",
            "schema": {
              "$ref": "#/definitions/alert"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/AlertsManagementErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "GetById": {
            "$ref": "./examples/Alerts_GetById.json"
          }
        }
      }
    }
  },
  "parameters": {
    "api-version": {
      "name": "api-version",
      "description": "API version.",
      "type": "string",
      "in": "query",
      "required": true,
      "enum": [
        "2025-05-25-preview"
      ],
      "x-ms-enum": {
        "name": "api-version",
        "modelAsString": true
      }
    },
    "scope": {
      "name": "scope",
      "description": "scope here is resourceId for which alert is created.",
      "type": "string",
      "in": "path",
      "required": true,
      "x-ms-skip-url-encoding": true,
      "x-ms-parameter-location": "client"
    },
    "alertId": {
      "name": "alertId",
      "description": "Unique ID of an alert instance.",
      "type": "string",
      "in": "path",
      "required": true,
      "x-ms-parameter-location": "method"
    },
    "identifier": {
      "name": "identifier",
      "description": "Identification of the information to be retrieved by API call.",
      "type": "string",
      "in": "query",
      "required": true,
      "enum": [
        "MonitorServiceList"
      ],
      "x-ms-enum": {
        "name": "identifier",
        "modelAsString": true
      },
      "x-ms-parameter-location": "method"
    }
  },
  "definitions": {
    "operation": {
      "description": "Operation provided by provider",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the operation"
        },
        "display": {
          "type": "object",
          "description": "Properties of the operation",
          "properties": {
            "provider": {
              "type": "string",
              "description": "Provider name"
            },
            "resource": {
              "type": "string",
              "description": "Resource name"
            },
            "operation": {
              "type": "string",
              "description": "Operation name"
            },
            "description": {
              "type": "string",
              "description": "Description of the operation"
            }
          }
        }
      }
    },
    "operationsList": {
      "description": "Lists the operations available in the AlertsManagement RP.",
      "properties": {
        "nextLink": {
          "description": "URL to fetch the next set of alerts.",
          "type": "string"
        },
        "value": {
          "description": "Array of operations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/operation"
          }
        }
      },
      "required": [
        "value"
      ]
    },
    "alertsMetaData": {
      "description": "alert meta data information.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/alertsMetaDataProperties"
        }
      }
    },
    "alertsMetaDataProperties": {
      "description": "alert meta data property bag",
      "discriminator": "metadataIdentifier",
      "required": [
        "metadataIdentifier"
      ],
      "properties": {
        "metadataIdentifier": {
          "type": "string",
          "description": "Identification of the information to be retrieved by API call",
          "enum": [
            "MonitorServiceList"
          ],
          "x-ms-enum": {
            "name": "metadataIdentifier",
            "modelAsString": true
          }
        }
      }
    },
    "MonitorServiceList": {
      "title": "Monitor service details",
      "description": "Monitor service details",
      "required": [
        "data"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/alertsMetaDataProperties"
        },
        {
          "type": "object"
        }
      ],
      "properties": {
        "data": {
          "description": "Array of operations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/MonitorServiceDetails"
          }
        }
      }
    },
    "MonitorServiceDetails": {
      "description": "Details of a monitor service",
      "properties": {
        "name": {
          "type": "string",
          "description": "Monitor service name"
        },
        "displayName": {
          "type": "string",
          "description": "Monitor service display name"
        }
      }
    },
    "AlertsManagementErrorResponse": {
      "description": "An error response from the service.",
      "x-ms-external": true,
      "properties": {
        "error": {
          "$ref": "#/definitions/errorResponseBody"
        }
      }
    },
    "errorResponseBody": {
      "description": "Details of error response.",
      "x-ms-external": true,
      "properties": {
        "code": {
          "type": "string",
          "description": "Error code, intended to be consumed programmatically."
        },
        "message": {
          "type": "string",
          "description": "Description of the error, intended for display in user interface."
        },
        "target": {
          "type": "string",
          "description": "Target of the particular error, for example name of the property."
        },
        "details": {
          "type": "array",
          "description": "A list of additional details about the error.",
          "items": {
            "$ref": "#/definitions/errorResponseBody"
          }
        }
      }
    }
  }
}
