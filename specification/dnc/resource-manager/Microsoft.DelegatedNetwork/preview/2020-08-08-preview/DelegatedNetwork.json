{
  "swagger": "2.0",
  "info": {
    "version": "2020-08-08-preview",
    "title": "DNC",
    "description": "DNC web api provides way to create, get and delete dnc controller"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Azure Active Directory OAuth2 Flow",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "paths": {
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DelegatedNetwork/controller/{resourceName}": {
      "get": {
        "description": "Gets details about the specified dnc controller.",
        "x-ms-examples": {
          "Get details of a controller": {
            "$ref": "./examples/getController.json"
          }
        },
        "tags": [
          "Controller"
        ],
        "operationId": "Controller_GetDetails",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/resourceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The operation was successful.",
            "schema": {
              "$ref": "#/definitions/DelegatedController"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "Create a dnc controller",
        "x-ms-examples": {
          "Create controller": {
            "$ref": "./examples/putController.json"
          }
        },
        "tags": [
          "Controller"
        ],
        "operationId": "Controller_Create",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/resourceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "controllerParameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ControllerTypeParameters"
            },
            "description": "controller type parameters"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DelegatedController"
            }
          },
          "201": {
            "description": "InProgress. The operation is still in progress.",
            "schema": {
              "$ref": "#/definitions/DelegatedController"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "description": "Deletes the DNC controller",
        "x-ms-examples": {
          "Delete controller": {
            "$ref": "./examples/deleteController.json"
          }
        },
        "tags": [
          "Controller"
        ],
        "operationId": "Controller_Delete",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/resourceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK."
          },
          "202": {
            "description": "Accepted."
          },
          "204": {
            "description": "No Content."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "description": "Update dnc controller",
        "x-ms-examples": {
          "update controller": {
            "$ref": "./examples/patchController.json"
          }
        },
        "tags": [
          "Controller"
        ],
        "operationId": "Controller_Patch",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/resourceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "controllerParameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ControllerTypeParameters"
            },
            "description": "controller type parameters"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DelegatedController"
            }
          },
          "201": {
            "description": "InProgress. The operation is still in progress.",
            "schema": {
              "$ref": "#/definitions/DelegatedController"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{vnetName}/subnets/{subnetName}/providers/Microsoft.DelegatedNetwork/delegatedSubnets/{resourceName}": {
      "get": {
        "description": "Gets details about the specified dnc DelegatedSubnet Link.",
        "x-ms-examples": {
          "Get details of a delegated subnet": {
            "$ref": "./examples/getDelegatedSubnet.json"
          }
        },
        "tags": [
          "DNCDelegatedSubnet"
        ],
        "operationId": "DelegatedSubnetService_GetDetails",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/resourceNameParameter"
          },
          {
            "$ref": "#/parameters/vnetNameParameter"
          },
          {
            "$ref": "#/parameters/subnetNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The operation was successful.",
            "schema": {
              "$ref": "#/definitions/DelegatedSubnet"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "Put delegated subnet resource",
        "x-ms-examples": {
          "put delegated subnet": {
            "$ref": "./examples/putDelegatedSubnet.json"
          }
        },
        "tags": [
          "DNCDelegatedSubnet"
        ],
        "operationId": "DelegatedSubnetService_PutDetails",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/resourceNameParameter"
          },
          {
            "$ref": "#/parameters/vnetNameParameter"
          },
          {
            "$ref": "#/parameters/subnetNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "delegatedSubnetParameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DelegatedSubnetParameters"
            },
            "description": "Delegated subnet details."
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The operation was successful.",
            "schema": {
              "$ref": "#/definitions/DelegatedSubnet"
            }
          },
          "201": {
            "description": "InProgress. The operation is still in progress",
            "schema": {
              "$ref": "#/definitions/DelegatedSubnet"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "description": "Patch delegated subnet resource",
        "x-ms-examples": {
          "patch delegated subnet": {
            "$ref": "./examples/patchDelegatedSubnet.json"
          }
        },
        "tags": [
          "DNCDelegatedSubnet"
        ],
        "operationId": "DelegatedSubnetService_PatchDetails",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/resourceNameParameter"
          },
          {
            "$ref": "#/parameters/vnetNameParameter"
          },
          {
            "$ref": "#/parameters/subnetNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "delegatedSubnetParameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DelegatedSubnetParameters"
            },
            "description": "Delegated subnet details."
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The operation was successful.",
            "schema": {
              "$ref": "#/definitions/DelegatedSubnet"
            }
          },
          "201": {
            "description": "InProgress. The operation is still in progress",
            "schema": {
              "$ref": "#/definitions/DelegatedSubnet"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "description": "Delete dnc DelegatedSubnet.",
        "x-ms-examples": {
          "delete delegated subnet": {
            "$ref": "./examples/deleteDelegatedSubnet.json"
          }
        },
        "tags": [
          "DNCDelegatedSubnet"
        ],
        "operationId": "DelegatedSubnetService_DeleteDetails",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/resourceNameParameter"
          },
          {
            "$ref": "#/parameters/vnetNameParameter"
          },
          {
            "$ref": "#/parameters/subnetNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK."
          },
          "202": {
            "description": "Accepted."
          },
          "204": {
            "description": "No Content."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.DelegatedNetwork/delegatedControllers": {
      "get": {
        "tags": [
          "DelegatedControllers"
        ],
        "description": "Get all the delegatedController resources in a subscription.",
        "operationId": "DelegatedNetwork_ListBySubscription",
        "x-ms-examples": {
          "Get DelegatedController resources by subscription": {
            "$ref": "./examples/delegatedNetworkControllerListBySub.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "This is a synchronous operation. The body contains a JSON-serialized array of the metadata from all the DelegatedControllers in the subscription.",
            "schema": {
              "$ref": "#/definitions/DelegatedControllers"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DelegatedNetwork/delegatedControllers": {
      "get": {
        "tags": [
          "DelegatedControllers"
        ],
        "description": "Get all the delegatedController resources in a resource group.",
        "operationId": "DelegatedNetwork_ListByResourceGroup",
        "x-ms-examples": {
          "Get DelegatedNetwork resources by resource group": {
            "$ref": "./examples/delegatedNetworkControllerListByRG.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "This is a synchronous operation. The body contains a JSON-serialized array of the metadata from all the delegatedControllers in the resource group.",
            "schema": {
              "$ref": "#/definitions/DelegatedControllers"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.DelegatedNetwork/delegatedSubnetInstances": {
      "get": {
        "tags": [
          "DelegatedSubnets"
        ],
        "description": "Get all the DelegatedSubnets resources in a subscription.",
        "operationId": "DelegatedSubnetService_ListBySubscription",
        "x-ms-examples": {
          "Get DelegatedSubnets resources by subscription": {
            "$ref": "./examples/delegatedSubnetListBySub.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "This is a synchronous operation. The body contains a JSON-serialized array of the metadata from all the DelegatedSubnets in the subscription.",
            "schema": {
              "$ref": "#/definitions/DelegatedSubnetList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DelegatedNetwork/delegatedSubnetInstances": {
      "get": {
        "tags": [
          "DelegatedSubnets"
        ],
        "description": "Get all the DelegatedSubnets resources in a resource group.",
        "operationId": "DelegatedSubnetService_ListByResourceGroup",
        "x-ms-examples": {
          "Get DelegatedSubnets resources by resource group": {
            "$ref": "./examples/delegatedSubnetListByRG.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "This is a synchronous operation. The body contains a JSON-serialized array of the metadata from all the DelegatedSubnets in the resource group.",
            "schema": {
              "$ref": "#/definitions/DelegatedSubnetList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/providers/Microsoft.DelegatedNetwork/operations": {
      "get": {
        "tags": [
          "Operations"
        ],
        "description": "Lists all of the available DelegatedNetwork service REST API operations.",
        "operationId": "Operations_List",
        "x-ms-examples": {
          "Get available operations": {
            "$ref": "./examples/delegatedNetworkOperationsList.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/OperationListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "OperationListResult": {
      "description": "Result of request to list controller operations.It contains a list of operations and a URL link to get the next set of results",
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "uniqueItems": false,
          "readOnly": true,
          "description": "List of operations supported by the Microsoft.DelegatedNetwork resource provider.",
          "items": {
            "$ref": "#/definitions/Operation"
          }
        },
        "nextLink": {
          "description": "URL to get the next set of operation list results if there are any.",
          "type": "string"
        }
      }
    },
    "Operation": {
      "description": "Microsoft.DelegatedNetwork REST API operation definition",
      "type": "object",
      "properties": {
        "name": {
          "description": "Operation name: {provider}/{resource}/{operation}.",
          "type": "string",
          "readOnly": true
        },
        "origin": {
          "description": "Origin of the operation",
          "type": "string"
        },
        "isDataAction": {
          "description": "Gets or sets a value indicating whether the operation is a data action or not.",
          "type": "boolean"
        },
        "display": {
          "description": "Operation properties display",
          "$ref": "#/definitions/OperationDisplay"
        },
        "properties": {
          "$ref": "#/definitions/OperationProperties",
          "description": "Properties of the operation"
        }
      }
    },
    "OperationDisplay": {
      "description": "The object that represents the operation.",
      "type": "object",
      "properties": {
        "provider": {
          "description": "Service provider: Microsoft.DelegatedNetwork.",
          "type": "string",
          "readOnly": true
        },
        "resource": {
          "description": "Resource on which the operation is performed: controller, etc.",
          "type": "string",
          "readOnly": true
        },
        "operation": {
          "description": "Operation type: create, get, delete, etc.",
          "type": "string",
          "readOnly": true
        },
        "description": {
          "readOnly": true,
          "type": "string",
          "description": "Friendly description for the operation,"
        }
      }
    },
    "OperationProperties": {
      "description": "Operation properties.",
      "type": "object",
      "properties": {}
    },
    "ControllerResource": {
      "description": "Represents an instance of an DNC controller resource.",
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "readOnly": true,
          "description": "An identifier that represents the DNC controller resource."
        },
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "The name of the DNC controller resource."
        },
        "type": {
          "type": "string",
          "readOnly": true,
          "description": "The type of the DNC controller  resource.(Microsoft.DelegatedNetwork/controller)"
        },
        "location": {
          "type": "string",
          "description": "Location of the DNC controller resource."
        }
      },
      "x-ms-azure-resource": true
    },
    "DelegatedSubnetResource": {
      "description": "Represents an instance of a DelegatedSubnet resource.",
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "readOnly": true,
          "description": "An identifier that represents the DelegatedSubnet resource."
        },
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "The name of the DelegatedSubnet resource."
        },
        "type": {
          "type": "string",
          "readOnly": true,
          "description": "The type of the DelegatedSubnet  resource.(Microsoft.DelegatedNetwork/delegatedSubnet)"
        },
        "location": {
          "type": "string",
          "description": "Location of the DelegatedSubnet resource."
        }
      },
      "x-ms-azure-resource": true
    },
    "DelegatedSubnetParameters": {
      "description": "DelegatedSubnet Parameters",
      "type": "object",
      "properties": {
        "controllerID": {
          "type": "string",
          "description": "Delegated Network Controller ID"
        }
      }
    },
    "DelegatedControllers": {
      "description": "An array of Delegated controller resources.",
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DelegatedController"
          },
          "description": "An array of Delegated controller resources."
        }
      },
      "required": [
        "value"
      ]
    },
    "DelegatedSubnetList": {
      "description": "An array of Delegated subnets resources.",
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DelegatedSubnet"
          },
          "description": "An array of Delegated subnets resources."
        }
      },
      "required": [
        "value"
      ]
    },
    "ControllerTypeParameters": {
      "description": "Details of controller type.",
      "type": "object",
      "properties": {
        "controllerType": {
          "type": "string",
          "description": "Type of Delegated controller."
        },
        "kubernetesProperties": {
          "type": "array",
          "description": "properties of kubernetes clusters",
          "items": {
            "$ref": "#/definitions/KubernetesProperties"
          }
        }
      }
    },
    "DelegatedController": {
      "description": "Represents an instance of a DNC controller.",
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ControllerProperties",
          "description": "Properties of the provision operation request."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ControllerResource"
        }
      ]
    },
    "ControllerProperties": {
      "description": "Properties of Delegated controller resource.",
      "type": "object",
      "properties": {
        "state": {
          "type": "string",
          "enum": [
            "Deleting",
            "Succeeded",
            "Failed",
            "Provisioning"
          ],
          "x-ms-enum": {
            "name": "ControllerState",
            "modelAsString": true
          },
          "readOnly": true,
          "description": "The current state of dnc controller resource."
        },
        "type": {
          "type": "string",
          "description": "Type of dnc controller."
        },
        "resourceGuid": {
          "type": "string",
          "description": "Gets or sets resource GUID property of the controller resource."
        },
        "dncAppID": {
          "type": "string",
          "description": "Get controller AAD ID."
        },
        "dncEndpoint": {
          "type": "string",
          "description": "Dnc Endpoint url."
        }
      }
    },
    "KubernetesProperties": {
      "description": "Properties of kubernetes cluster",
      "type": "object",
      "properties": {
        "serverAppID": {
          "description": "AAD ID used with apiserver",
          "type": "string"
        },
        "serverTenantID": {
          "description": "TenantID of server App ID",
          "type": "string"
        },
        "clusterRootCA": {
          "description": "RootCA certificate of kubernetes cluster",
          "type": "string"
        },
        "apiServerEndpoint": {
          "description": "APIServer url",
          "type": "string"
        }
      }
    },
    "DelegatedSubnet": {
      "description": "Delegated subnet details",
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/DelegatedSubnetProperties",
          "description": "Properties of the delegated subnet request"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/DelegatedSubnetResource"
        }
      ]
    },
    "DelegatedSubnetProperties": {
      "description": "Properties of delegated subnet resource.",
      "type": "object",
      "properties": {
        "state": {
          "type": "string",
          "enum": [
            "Deleting",
            "Succeeded",
            "Failed",
            "Provisioning"
          ],
          "x-ms-enum": {
            "name": "DelegatedSubnetState",
            "modelAsString": true
          },
          "readOnly": true,
          "description": "The current state of delegated subnet resource."
        }
      }
    },
    "ErrorResponse": {
      "description": "Error response.",
      "properties": {
        "error": {
          "description": "Error description",
          "$ref": "#/definitions/ErrorDefinition"
        }
      }
    },
    "ErrorDefinition": {
      "description": "Error definition.",
      "properties": {
        "code": {
          "description": "Service specific error code which serves as the substatus for the HTTP error code.",
          "type": "string",
          "readOnly": true
        },
        "message": {
          "description": "Description of the error.",
          "type": "string",
          "readOnly": true
        },
        "details": {
          "description": "Internal error details.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ErrorDefinition"
          },
          "readOnly": true
        }
      }
    }
  },
  "parameters": {
    "SubscriptionIdParameter": {
      "name": "subscriptionId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "A unique identifier for a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
    },
    "ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "required": true,
      "type": "string",
      "description": "The client API version."
    },
    "ResourceGroupNameParameter": {
      "name": "resourceGroupName",
      "in": "path",
      "required": true,
      "type": "string",
      "pattern": "^[-\\w\\._\\(\\)]+$",
      "minLength": 1,
      "maxLength": 90,
      "x-ms-parameter-location": "method",
      "description": "The name of the Azure Resource group of which a given DelegatedNetwork resource is part. This name must be at least 1 character in length, and no more than 90."
    },
    "resourceNameParameter": {
      "name": "resourceName",
      "in": "path",
      "required": true,
      "type": "string",
      "pattern": "^[a-z][a-z0-9]*$",
      "minLength": 3,
      "maxLength": 63,
      "x-ms-parameter-location": "method",
      "description": "The name of the resource. It must be a minimum of 3 characters, and a maximum of 63."
    },
    "vnetNameParameter": {
      "name": "vnetName",
      "in": "path",
      "required": true,
      "type": "string",
      "pattern": "^[-\\w\\._\\(\\)]+$",
      "minLength": 1,
      "maxLength": 90,
      "x-ms-parameter-location": "method",
      "description": "The name of the virtual network. This name must be at least 1 character in length, and no more than 90."
    },
    "subnetNameParameter": {
      "name": "subnetName",
      "in": "path",
      "required": true,
      "type": "string",
      "pattern": "^[-\\w\\._\\(\\)]+$",
      "minLength": 1,
      "maxLength": 90,
      "x-ms-parameter-location": "method",
      "description": "The name of the delegated subnet. This name must be at least 1 character in length, and no more than 90."
    }
  }
}
