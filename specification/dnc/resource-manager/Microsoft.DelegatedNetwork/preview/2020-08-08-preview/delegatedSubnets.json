{
  "swagger": "2.0",
  "info": {
    "version": "2020-08-08-preview",
    "title": "DNC",
    "description": "DNC web api provides way to create, get and delete dnc controller"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Azure Active Directory OAuth2 Flow",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "paths": {
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DelegatedNetwork/delegatedSubnets/{resourceName}": {
      "get": {
        "description": "Gets details about the specified dnc DelegatedSubnet Link.",
        "x-ms-examples": {
          "Get details of a delegated subnet": {
            "$ref": "./examples/getDelegatedSubnet.json"
          }
        },
        "tags": [
          "DNCDelegatedSubnet"
        ],
        "operationId": "DelegatedSubnetService_GetDetails",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/resourceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The operation was successful.",
            "schema": {
              "$ref": "#/definitions/DelegatedSubnet"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "Put delegated subnet resource",
        "x-ms-examples": {
          "put delegated subnet": {
            "$ref": "./examples/putDelegatedSubnet.json"
          }
        },
        "tags": [
          "DNCDelegatedSubnet"
        ],
        "operationId": "DelegatedSubnetService_PutDetails",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/resourceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DelegatedSubnet"
            },
            "description": "Delegated subnet details."
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The operation was successful.",
            "schema": {
              "$ref": "#/definitions/DelegatedSubnet"
            }
          },
          "201": {
            "description": "InProgress. The operation is still in progress",
            "schema": {
              "$ref": "#/definitions/DelegatedSubnet"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "description": "Patch delegated subnet resource",
        "x-ms-examples": {
          "patch delegated subnet": {
            "$ref": "./examples/patchDelegatedSubnet.json"
          }
        },
        "tags": [
          "DNCDelegatedSubnet"
        ],
        "operationId": "DelegatedSubnetService_PatchDetails",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/resourceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ResourceUpdateParameters"
            },
            "description": "Delegated subnet details."
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The operation was successful.",
            "schema": {
              "$ref": "#/definitions/DelegatedSubnet"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "description": "Delete dnc DelegatedSubnet.",
        "x-ms-examples": {
          "delete delegated subnet": {
            "$ref": "./examples/deleteDelegatedSubnet.json"
          }
        },
        "tags": [
          "DNCDelegatedSubnet"
        ],
        "operationId": "DelegatedSubnetService_DeleteDetails",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/resourceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK."
          },
          "202": {
            "description": "Accepted."
          },
          "204": {
            "description": "No Content."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.DelegatedNetwork/delegatedSubnets": {
      "get": {
        "tags": [
          "DelegatedSubnets"
        ],
        "description": "Get all the DelegatedSubnets resources in a subscription.",
        "operationId": "DelegatedSubnetService_ListBySubscription",
        "x-ms-examples": {
          "Get DelegatedSubnets resources by subscription": {
            "$ref": "./examples/delegatedSubnetListBySub.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "This is a synchronous operation. The body contains a JSON-serialized array of the metadata from all the DelegatedSubnets in the subscription.",
            "schema": {
              "$ref": "#/definitions/DelegatedSubnets"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DelegatedNetwork/delegatedSubnets": {
      "get": {
        "tags": [
          "DelegatedSubnets"
        ],
        "description": "Get all the DelegatedSubnets resources in a resource group.",
        "operationId": "DelegatedSubnetService_ListByResourceGroup",
        "x-ms-examples": {
          "Get DelegatedSubnets resources by resource group": {
            "$ref": "./examples/delegatedSubnetListByRG.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "This is a synchronous operation. The body contains a JSON-serialized array of the metadata from all the DelegatedSubnets in the resource group.",
            "schema": {
              "$ref": "#/definitions/DelegatedSubnets"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "DelegatedSubnetResource": {
      "description": "Represents an instance of a resource.",
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "readOnly": true,
          "description": "An identifier that represents the resource."
        },
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "The name of the resource."
        },
        "type": {
          "type": "string",
          "readOnly": true,
          "description": "The type of resource."
        },
        "location": {
          "type": "string",
          "description": "Location of the resource."
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "The resource tags."
        }
      },
      "x-ms-azure-resource": true
    },
    "ResourceUpdateParameters": {
      "description": "Parameters for updating a resource.",
      "properties": {
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "The resource tags."
        }
      }
    },
    "DelegatedSubnets": {
      "description": "An array of DelegatedSubnet resources.",
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DelegatedSubnet"
          },
          "description": "An array of DelegatedSubnet resources."
        },
        "nextLink": {
          "type": "string",
          "description": "The URL to get the next set of DelegatedSubnet resources.",
          "readOnly": true
        }
      },
      "required": [
        "value"
      ]
    },
    "DelegatedSubnet": {
      "description": "Represents an instance of a orchestrator.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DelegatedSubnetResource"
        }
      ],
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "readOnly": true,
          "$ref": "#/definitions/DelegatedSubnetProperties",
          "description": "Properties of the provision operation request."
        }
      }
    },
    "DelegatedSubnetProperties": {
      "description": "Properties of delegated subnet",
      "type": "object",
      "properties": {
        "resourceGuid": {
          "type": "string",
          "readOnly": true,
          "description": "Resource guid."
        },
        "provisioningState": {
          "type": "string",
          "enum": [
            "Deleting",
            "Succeeded",
            "Failed",
            "Provisioning"
          ],
          "x-ms-enum": {
            "name": "DelegatedSubnetState",
            "modelAsString": true
          },
          "readOnly": true,
          "description": "The current state of dnc delegated subnet resource."
        },
        "subnetDetails": {
          "description": "orchestrator details",
          "$ref": "#/definitions/subnetDetails"
        },
        "controllerDetails": {
          "description": "controller details",
          "$ref": "#/definitions/controllerDetails"
        }
      }
    },
    "subnetDetails": {
      "description": "Properties of orchestrator",
      "type": "object",
      "properties": {
        "id": {
          "description": "subnet arm resource id",
          "type": "string"
        }
      }
    },
    "controllerDetails": {
      "description": "controller details",
      "type": "object",
      "properties": {
        "id": {
          "description": "controller arm resource id",
          "type": "string"
        }
      }
    },
    "ErrorResponse": {
      "description": "Error response.",
      "properties": {
        "error": {
          "description": "Error description",
          "$ref": "#/definitions/ErrorDefinition"
        }
      }
    },
    "ErrorDefinition": {
      "description": "Error definition.",
      "properties": {
        "code": {
          "description": "Service specific error code which serves as the substatus for the HTTP error code.",
          "type": "string",
          "readOnly": true
        },
        "message": {
          "description": "Description of the error.",
          "type": "string",
          "readOnly": true
        },
        "details": {
          "description": "Internal error details.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ErrorDefinition"
          },
          "readOnly": true
        }
      }
    }
  },
  "parameters": {
    "SubscriptionIdParameter": {
      "name": "subscriptionId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "A unique identifier for a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
    },
    "ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "required": true,
      "type": "string",
      "description": "The client API version."
    },
    "ResourceGroupNameParameter": {
      "name": "resourceGroupName",
      "in": "path",
      "required": true,
      "type": "string",
      "pattern": "^[-\\w\\._\\(\\)]+$",
      "minLength": 1,
      "maxLength": 90,
      "x-ms-parameter-location": "method",
      "description": "The name of the Azure Resource group of which a given DelegatedNetwork resource is part. This name must be at least 1 character in length, and no more than 90."
    },
    "resourceNameParameter": {
      "name": "resourceName",
      "in": "path",
      "required": true,
      "type": "string",
      "pattern": "^[a-z][a-z0-9]*$",
      "minLength": 3,
      "maxLength": 63,
      "x-ms-parameter-location": "method",
      "description": "The name of the resource. It must be a minimum of 3 characters, and a maximum of 63."
    }
  }
}
