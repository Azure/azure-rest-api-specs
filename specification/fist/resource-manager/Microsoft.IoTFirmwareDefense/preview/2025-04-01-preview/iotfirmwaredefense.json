{
  "swagger": "2.0",
  "info": {
    "title": "Iot Firmware Defense",
    "version": "2025-04-01-preview",
    "description": "Firmware & IoT Security REST API",
    "x-typespec-generated": [
      {
        "emitter": "@azure-tools/typespec-autorest"
      }
    ]
  },
  "schemes": [
    "https"
  ],
  "host": "management.azure.com",
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "description": "Azure Active Directory OAuth2 Flow.",
      "flow": "implicit",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "tags": [
    {
      "name": "Operations"
    },
    {
      "name": "Firmwares"
    },
    {
      "name": "Workspaces"
    },
    {
      "name": "BinaryHardening"
    },
    {
      "name": "CryptoCertificates"
    },
    {
      "name": "CryptoKeys"
    },
    {
      "name": "Cves"
    },
    {
      "name": "PasswordHashes"
    },
    {
      "name": "SbomComponents"
    },
    {
      "name": "Summaries"
    },
    {
      "name": "UsageMetrics"
    }
  ],
  "paths": {
    "/providers/Microsoft.IoTFirmwareDefense/operations": {
      "get": {
        "operationId": "Operations_List",
        "tags": [
          "Operations"
        ],
        "description": "List the operations for the provider",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/OperationListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Operations_List_MaximumSet_Gen - generated by [MaximumSet] rule": {
            "$ref": "./examples/Operations_List_MaximumSet_Gen.json"
          },
          "Operations_List_MaximumSet_Gen - generated by [MinimumSet] rule": {
            "$ref": "./examples/Operations_List_MinimumSet_Gen.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.IoTFirmwareDefense/workspaces": {
      "get": {
        "operationId": "Workspaces_ListBySubscription",
        "tags": [
          "Workspaces"
        ],
        "description": "Lists all of the firmware analysis workspaces in the specified subscription.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/WorkspaceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Workspaces_ListBySubscription_MaximumSet_Gen - generated by [MaximumSet] rule": {
            "$ref": "./examples/Workspaces_ListBySubscription_MaximumSet_Gen.json"
          },
          "Workspaces_ListBySubscription_MaximumSet_Gen - generated by [MinimumSet] rule": {
            "$ref": "./examples/Workspaces_ListBySubscription_MinimumSet_Gen.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.IoTFirmwareDefense/workspaces": {
      "get": {
        "operationId": "Workspaces_ListByResourceGroup",
        "tags": [
          "Workspaces"
        ],
        "description": "Lists all of the firmware analysis workspaces in the specified resource group.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/WorkspaceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Workspaces_ListByResourceGroup_MaximumSet_Gen - generated by [MaximumSet] rule - generated by [MaximumSet] rule": {
            "$ref": "./examples/Workspaces_ListByResourceGroup_MaximumSet_Gen.json"
          },
          "Workspaces_ListByResourceGroup_MaximumSet_Gen - generated by [MaximumSet] rule - generated by [MinimumSet] rule": {
            "$ref": "./examples/Workspaces_ListByResourceGroup_MinimumSet_Gen.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.IoTFirmwareDefense/workspaces/{workspaceName}": {
      "get": {
        "operationId": "Workspaces_Get",
        "tags": [
          "Workspaces"
        ],
        "description": "Get firmware analysis workspace.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the firmware analysis workspace.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Workspace"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Workspaces_Get_MaximumSet_Gen - generated by [MaximumSet] rule": {
            "$ref": "./examples/Workspaces_Get_MaximumSet_Gen.json"
          },
          "Workspaces_Get_MinimumSet_Gen": {
            "$ref": "./examples/Workspaces_Get_MinimumSet_Gen.json"
          }
        }
      },
      "put": {
        "operationId": "Workspaces_Create",
        "tags": [
          "Workspaces"
        ],
        "description": "The operation to create or update a firmware analysis workspace.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the firmware analysis workspace.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Parameters when creating a firmware analysis workspace.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Workspace"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'Workspace' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/Workspace"
            }
          },
          "201": {
            "description": "Resource 'Workspace' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/Workspace"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Workspaces_Create_MaximumSet_Gen - generated by [MaximumSet] rule": {
            "$ref": "./examples/Workspaces_Create_MaximumSet_Gen.json"
          },
          "Workspaces_Create_MinimumSet_Gen": {
            "$ref": "./examples/Workspaces_Create_MinimumSet_Gen.json"
          }
        }
      },
      "patch": {
        "operationId": "Workspaces_Update",
        "tags": [
          "Workspaces"
        ],
        "description": "The operation to update a firmware analysis workspaces.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the firmware analysis workspace.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "Parameters when updating a firmware analysis workspace.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WorkspaceUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Workspace"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Workspaces_Update_MaximumSet_Gen - generated by [MaximumSet] rule": {
            "$ref": "./examples/Workspaces_Update_MaximumSet_Gen.json"
          },
          "Workspaces_Update_MinimumSet_Gen": {
            "$ref": "./examples/Workspaces_Update_MinimumSet_Gen.json"
          }
        }
      },
      "delete": {
        "operationId": "Workspaces_Delete",
        "tags": [
          "Workspaces"
        ],
        "description": "The operation to delete a firmware analysis workspace.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the firmware analysis workspace.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Workspaces_Delete_MaximumSet_Gen - generated by [MaximumSet] rule": {
            "$ref": "./examples/Workspaces_Delete_MaximumSet_Gen.json"
          },
          "Workspaces_Delete_MinimumSet_Gen": {
            "$ref": "./examples/Workspaces_Delete_MinimumSet_Gen.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.IoTFirmwareDefense/workspaces/{workspaceName}/firmwares": {
      "get": {
        "operationId": "Firmwares_ListByWorkspace",
        "tags": [
          "Firmwares"
        ],
        "description": "Lists all of firmwares inside a workspace.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the firmware analysis workspace.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/FirmwareListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Firmwares_ListByWorkspace_MaximumSet_Gen - generated by [MaximumSet] rule": {
            "$ref": "./examples/Firmwares_ListByWorkspace_MaximumSet_Gen.json"
          },
          "Firmwares_ListByWorkspace_MinimumSet_Gen": {
            "$ref": "./examples/Firmwares_ListByWorkspace_MinimumSet_Gen.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.IoTFirmwareDefense/workspaces/{workspaceName}/firmwares/{firmwareId}": {
      "get": {
        "operationId": "Firmwares_Get",
        "tags": [
          "Firmwares"
        ],
        "description": "Get firmware.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the firmware analysis workspace.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$"
          },
          {
            "name": "firmwareId",
            "in": "path",
            "description": "The id of the firmware.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Firmware"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Firmwares_Get_MaximumSet_Gen - generated by [MaximumSet] rule": {
            "$ref": "./examples/Firmwares_Get_MaximumSet_Gen.json"
          },
          "Firmwares_Get_MinimumSet_Gen": {
            "$ref": "./examples/Firmwares_Get_MinimumSet_Gen.json"
          }
        }
      },
      "put": {
        "operationId": "Firmwares_Create",
        "tags": [
          "Firmwares"
        ],
        "description": "The operation to create a firmware.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the firmware analysis workspace.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$"
          },
          {
            "name": "firmwareId",
            "in": "path",
            "description": "The id of the firmware.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Details of the firmware being created or updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Firmware"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'Firmware' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/Firmware"
            }
          },
          "201": {
            "description": "Resource 'Firmware' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/Firmware"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Firmwares_Create_MaximumSet_Gen - generated by [MaximumSet] rule": {
            "$ref": "./examples/Firmwares_Create_MaximumSet_Gen.json"
          },
          "Firmwares_Create_MinimumSet_Gen": {
            "$ref": "./examples/Firmwares_Create_MinimumSet_Gen.json"
          }
        }
      },
      "patch": {
        "operationId": "Firmwares_Update",
        "tags": [
          "Firmwares"
        ],
        "description": "The operation to update firmware.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the firmware analysis workspace.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$"
          },
          {
            "name": "firmwareId",
            "in": "path",
            "description": "The id of the firmware.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "Details of the firmware being created or updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FirmwareUpdateDefinition"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Firmware"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Firmwares_Update_MaximumSet_Gen - generated by [MaximumSet] rule": {
            "$ref": "./examples/Firmwares_Update_MaximumSet_Gen.json"
          },
          "Firmwares_Update_MinimumSet_Gen": {
            "$ref": "./examples/Firmwares_Update_MinimumSet_Gen.json"
          }
        }
      },
      "delete": {
        "operationId": "Firmwares_Delete",
        "tags": [
          "Firmwares"
        ],
        "description": "The operation to delete a firmware.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the firmware analysis workspace.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$"
          },
          {
            "name": "firmwareId",
            "in": "path",
            "description": "The id of the firmware.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Firmwares_Delete_MaximumSet_Gen - generated by [MaximumSet] rule": {
            "$ref": "./examples/Firmwares_Delete_MaximumSet_Gen.json"
          },
          "Firmwares_Delete_MinimumSet_Gen": {
            "$ref": "./examples/Firmwares_Delete_MinimumSet_Gen.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.IoTFirmwareDefense/workspaces/{workspaceName}/firmwares/{firmwareId}/binaryHardeningResults": {
      "get": {
        "operationId": "BinaryHardening_ListByFirmware",
        "tags": [
          "BinaryHardening"
        ],
        "description": "Lists binary hardening analysis results of a firmware.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the firmware analysis workspace.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$"
          },
          {
            "name": "firmwareId",
            "in": "path",
            "description": "The id of the firmware.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/BinaryHardeningResourceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "BinaryHardening_ListByFirmware_MaximumSet_Gen - generated by [MaximumSet] rule": {
            "$ref": "./examples/BinaryHardening_ListByFirmware_MaximumSet_Gen.json"
          },
          "BinaryHardening_ListByFirmware_MinimumSet_Gen": {
            "$ref": "./examples/BinaryHardening_ListByFirmware_MinimumSet_Gen.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.IoTFirmwareDefense/workspaces/{workspaceName}/firmwares/{firmwareId}/commonVulnerabilitiesAndExposures": {
      "get": {
        "operationId": "Cves_ListByFirmware",
        "tags": [
          "Cves"
        ],
        "description": "Lists CVE analysis results of a firmware.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the firmware analysis workspace.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$"
          },
          {
            "name": "firmwareId",
            "in": "path",
            "description": "The id of the firmware.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/CveResourceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Cves_ListByFirmware_MaximumSet_Gen - generated by [MaximumSet] rule": {
            "$ref": "./examples/Cves_ListByFirmware_MaximumSet_Gen.json"
          },
          "Cves_ListByFirmware_MinimumSet_Gen": {
            "$ref": "./examples/Cves_ListByFirmware_MinimumSet_Gen.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.IoTFirmwareDefense/workspaces/{workspaceName}/firmwares/{firmwareId}/cryptoCertificates": {
      "get": {
        "operationId": "CryptoCertificates_ListByFirmware",
        "tags": [
          "CryptoCertificates"
        ],
        "description": "Lists crypto certificate analysis results of a firmware.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the firmware analysis workspace.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$"
          },
          {
            "name": "firmwareId",
            "in": "path",
            "description": "The id of the firmware.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/CryptoCertificateResourceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CryptoCertificates_ListByFirmware_MaximumSet_Gen - generated by [MaximumSet] rule": {
            "$ref": "./examples/CryptoCertificates_ListByFirmware_MaximumSet_Gen.json"
          },
          "CryptoCertificates_ListByFirmware_MinimumSet_Gen": {
            "$ref": "./examples/CryptoCertificates_ListByFirmware_MinimumSet_Gen.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.IoTFirmwareDefense/workspaces/{workspaceName}/firmwares/{firmwareId}/cryptoKeys": {
      "get": {
        "operationId": "CryptoKeys_ListByFirmware",
        "tags": [
          "CryptoKeys"
        ],
        "description": "Lists crypto key analysis results of a firmware.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the firmware analysis workspace.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$"
          },
          {
            "name": "firmwareId",
            "in": "path",
            "description": "The id of the firmware.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/CryptoKeyResourceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CryptoKeys_ListByFirmware_MaximumSet_Gen - generated by [MaximumSet] rule": {
            "$ref": "./examples/CryptoKeys_ListByFirmware_MaximumSet_Gen.json"
          },
          "CryptoKeys_ListByFirmware_MinimumSet_Gen": {
            "$ref": "./examples/CryptoKeys_ListByFirmware_MinimumSet_Gen.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.IoTFirmwareDefense/workspaces/{workspaceName}/firmwares/{firmwareId}/passwordHashes": {
      "get": {
        "operationId": "PasswordHashes_ListByFirmware",
        "tags": [
          "PasswordHashes"
        ],
        "description": "Lists password hash analysis results of a firmware.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the firmware analysis workspace.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$"
          },
          {
            "name": "firmwareId",
            "in": "path",
            "description": "The id of the firmware.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/PasswordHashResourceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "PasswordHashes_ListByFirmware_MaximumSet_Gen - generated by [MaximumSet] rule": {
            "$ref": "./examples/PasswordHashes_ListByFirmware_MaximumSet_Gen.json"
          },
          "PasswordHashes_ListByFirmware_MinimumSet_Gen": {
            "$ref": "./examples/PasswordHashes_ListByFirmware_MinimumSet_Gen.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.IoTFirmwareDefense/workspaces/{workspaceName}/firmwares/{firmwareId}/sbomComponents": {
      "get": {
        "operationId": "SbomComponents_ListByFirmware",
        "tags": [
          "SbomComponents"
        ],
        "description": "Lists sbom analysis results of a firmware.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the firmware analysis workspace.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$"
          },
          {
            "name": "firmwareId",
            "in": "path",
            "description": "The id of the firmware.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/SbomComponentResourceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "SbomComponents_ListByFirmware_MaximumSet_Gen - generated by [MaximumSet] rule": {
            "$ref": "./examples/SbomComponents_ListByFirmware_MaximumSet_Gen.json"
          },
          "SbomComponents_ListByFirmware_MinimumSet_Gen": {
            "$ref": "./examples/SbomComponents_ListByFirmware_MinimumSet_Gen.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.IoTFirmwareDefense/workspaces/{workspaceName}/firmwares/{firmwareId}/summaries": {
      "get": {
        "operationId": "Summaries_ListByFirmware",
        "tags": [
          "Summaries"
        ],
        "description": "Lists analysis result summary names of a firmware. To fetch the full summary data, get that summary by name.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the firmware analysis workspace.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$"
          },
          {
            "name": "firmwareId",
            "in": "path",
            "description": "The id of the firmware.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/SummaryResourceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Summaries_ListByFirmware_MaximumSet_Gen - generated by [MaximumSet] rule": {
            "$ref": "./examples/Summaries_ListByFirmware_MaximumSet_Gen.json"
          },
          "Summaries_ListByFirmware_MinimumSet_Gen": {
            "$ref": "./examples/Summaries_ListByFirmware_MinimumSet_Gen.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.IoTFirmwareDefense/workspaces/{workspaceName}/firmwares/{firmwareId}/summaries/{summaryType}": {
      "get": {
        "operationId": "Summaries_Get",
        "tags": [
          "Summaries"
        ],
        "description": "Get an analysis result summary of a firmware by name.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the firmware analysis workspace.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$"
          },
          {
            "name": "firmwareId",
            "in": "path",
            "description": "The id of the firmware.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$"
          },
          {
            "name": "summaryType",
            "in": "path",
            "description": "The Firmware analysis summary name describing the type of summary.",
            "required": true,
            "type": "string",
            "enum": [
              "Firmware",
              "CommonVulnerabilitiesAndExposures",
              "BinaryHardening",
              "CryptoCertificate",
              "CryptoKey"
            ],
            "x-ms-enum": {
              "name": "SummaryType",
              "modelAsString": true,
              "values": [
                {
                  "name": "Firmware",
                  "value": "Firmware",
                  "description": "The summary contains information about the submitted firmware"
                },
                {
                  "name": "CommonVulnerabilitiesAndExposures",
                  "value": "CommonVulnerabilitiesAndExposures",
                  "description": "The summary contains information about the Common Vulnerabilities and Exposures analysis results"
                },
                {
                  "name": "BinaryHardening",
                  "value": "BinaryHardening",
                  "description": "The summary contains information about the binary hardening analysis results"
                },
                {
                  "name": "CryptoCertificate",
                  "value": "CryptoCertificate",
                  "description": "The summary contains information about the cryptographic certificate analysis results"
                },
                {
                  "name": "CryptoKey",
                  "value": "CryptoKey",
                  "description": "The summary contains information about the cryptographic key analysis results"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/SummaryResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Summaries_Get_MaximumSet_Gen - generated by [MaximumSet] rule": {
            "$ref": "./examples/Summaries_Get_MaximumSet_Gen.json"
          },
          "Summaries_Get_MinimumSet_Gen": {
            "$ref": "./examples/Summaries_Get_MinimumSet_Gen.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.IoTFirmwareDefense/workspaces/{workspaceName}/generateUploadUrl": {
      "post": {
        "operationId": "Workspaces_GenerateUploadUrl",
        "tags": [
          "Workspaces"
        ],
        "description": "Generate a URL for uploading a firmware image.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the firmware analysis workspace.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Parameters when requesting a URL to upload firmware.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GenerateUploadUrlRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/UrlToken"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Workspaces_GenerateUploadUrl_MaximumSet_Gen - generated by [MaximumSet] rule": {
            "$ref": "./examples/Workspaces_GenerateUploadUrl_MaximumSet_Gen.json"
          },
          "Workspaces_GenerateUploadUrl_MinimumSet_Gen": {
            "$ref": "./examples/Workspaces_GenerateUploadUrl_MinimumSet_Gen.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.IoTFirmwareDefense/workspaces/{workspaceName}/usageMetrics": {
      "get": {
        "operationId": "UsageMetrics_ListByWorkspace",
        "tags": [
          "UsageMetrics"
        ],
        "description": "Lists monthly usage information for a workspace.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the firmware analysis workspace.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/UsageMetricListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "UsageMetrics_ListByWorkspace - generated by [MaximumSet] rule": {
            "$ref": "./examples/UsageMetrics_ListByWorkspace_MaximumSet_Gen.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.IoTFirmwareDefense/workspaces/{workspaceName}/usageMetrics/{name}": {
      "get": {
        "operationId": "UsageMetrics_Get",
        "tags": [
          "UsageMetrics"
        ],
        "description": "Gets monthly usage information for a workspace.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "workspaceName",
            "in": "path",
            "description": "The name of the firmware analysis workspace.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$"
          },
          {
            "name": "name",
            "in": "path",
            "description": "The Firmware analysis summary name describing the type of summary.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_.-]*$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/UsageMetric"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "UsageMetrics_Get - generated by [MaximumSet] rule": {
            "$ref": "./examples/UsageMetrics_Get_MaximumSet_Gen.json"
          }
        }
      }
    }
  },
  "definitions": {
    "Azure.ResourceManager.CommonTypes.SkuUpdate": {
      "type": "object",
      "description": "The resource model definition representing SKU",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the SKU. Ex - P3. It is typically a letter+number code"
        },
        "tier": {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/SkuTier",
          "description": "This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT."
        },
        "size": {
          "type": "string",
          "description": "The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code."
        },
        "family": {
          "type": "string",
          "description": "If the service has different generations of hardware, for the same SKU, then that can be captured here."
        },
        "capacity": {
          "type": "integer",
          "format": "int32",
          "description": "If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted."
        }
      }
    },
    "BinaryHardeningFeatures": {
      "type": "object",
      "description": "Binary hardening features.",
      "properties": {
        "noExecute": {
          "type": "boolean",
          "description": "Flag indicating the binary's stack is set to NX (no-execute)."
        },
        "positionIndependentExecutable": {
          "type": "boolean",
          "description": "Flag indicating the binary was compiled to be a position independent executable."
        },
        "relocationReadOnly": {
          "type": "boolean",
          "description": "Flag indicating the binary has enabled relocation read-only protections."
        },
        "canary": {
          "type": "boolean",
          "description": "Flag indicating if the binary was compiled with stack canaries enabled."
        },
        "stripped": {
          "type": "boolean",
          "description": "Flag indicating if debug symbols have been stripped from the binary."
        }
      }
    },
    "BinaryHardeningResource": {
      "type": "object",
      "description": "The object representing a firmware analysis binary hardening result resource",
      "properties": {
        "properties": {
          "$ref": "#/definitions/BinaryHardeningResult",
          "description": "The resource-specific properties for this resource."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "BinaryHardeningResourceListResult": {
      "type": "object",
      "description": "The response of a BinaryHardeningResource list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The BinaryHardeningResource items on this page",
          "items": {
            "$ref": "#/definitions/BinaryHardeningResource"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "BinaryHardeningResult": {
      "type": "object",
      "description": "Binary hardening of a firmware.",
      "properties": {
        "binaryHardeningId": {
          "type": "string",
          "description": "ID for the binary hardening result."
        },
        "securityHardeningFeatures": {
          "$ref": "#/definitions/BinaryHardeningFeatures",
          "description": "The security hardening features of the binary."
        },
        "executableArchitecture": {
          "type": "string",
          "description": "The architecture of the binary being reported on."
        },
        "filePath": {
          "type": "string",
          "description": "The path to the binary in the firmware."
        },
        "executableClass": {
          "$ref": "#/definitions/ExecutableClass",
          "description": "The executable class to indicate 32 or 64 bit."
        },
        "runpath": {
          "type": "string",
          "description": "The runpath property of the uploaded binary, which is a method of specifying additional paths to load objects at runtime."
        },
        "rpath": {
          "type": "string",
          "description": "The rpath property of the uploaded binary, which is a deprecated method of specifying additional paths to load objects at runtime."
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "The status of the last operation.",
          "readOnly": true
        }
      }
    },
    "BinaryHardeningSummaryResource": {
      "type": "object",
      "description": "Properties for a binary hardening analysis summary.",
      "properties": {
        "totalFiles": {
          "type": "integer",
          "format": "int64",
          "description": "Total number of binaries that were analyzed"
        },
        "notExecutableStackCount": {
          "type": "integer",
          "format": "int64",
          "description": "Total number of analyzed files that were found to have a nonexecutable stack"
        },
        "positionIndependentExecutableCount": {
          "type": "integer",
          "format": "int64",
          "description": "Total number of analyzed files that were compiled to be a position independent executable"
        },
        "relocationReadOnlyCount": {
          "type": "integer",
          "format": "int64",
          "description": "Total number of analyzed files that have enabled relocation read-only protections"
        },
        "stackCanaryCount": {
          "type": "integer",
          "format": "int64",
          "description": "Total number of analyzed files that have stack canaries enabled"
        },
        "strippedBinaryCount": {
          "type": "integer",
          "format": "int64",
          "description": "Total number of analyzed files that have debug symbols stripped"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/SummaryResourceProperties"
        }
      ],
      "x-ms-discriminator-value": "BinaryHardening"
    },
    "CertificateUsage": {
      "type": "string",
      "description": "Activities for which the cryptographic certificate can be used.",
      "enum": [
        "digitalSignature",
        "nonRepudiation",
        "contentCommitment",
        "keyEncipherment",
        "dataEncipherment",
        "keyAgreement",
        "keyCertSign",
        "crlSign",
        "encipherOnly",
        "decipherOnly",
        "serverAuth",
        "clientAuth",
        "codeSigning",
        "emailProtection",
        "timeStamping",
        "ocspSigning"
      ],
      "x-ms-enum": {
        "name": "CertificateUsage",
        "modelAsString": true,
        "values": [
          {
            "name": "DigitalSignature",
            "value": "digitalSignature",
            "description": "This certificate can be used to add a signature to a message"
          },
          {
            "name": "NonRepudiation",
            "value": "nonRepudiation",
            "description": "This certificates provides a non-repudiation service that protects against false denial of a message"
          },
          {
            "name": "ContentCommitment",
            "value": "contentCommitment",
            "description": "A synonym for NonRepudiation used in newer x509 certificates"
          },
          {
            "name": "KeyEncipherment",
            "value": "keyEncipherment",
            "description": "This certificate can be used to encrypt a private or secret key"
          },
          {
            "name": "DataEncipherment",
            "value": "dataEncipherment",
            "description": "This certificate can be used to decrypt a private or secret key"
          },
          {
            "name": "KeyAgreement",
            "value": "keyAgreement",
            "description": "This certificate can be used to perform a key agreement, such as with a Diffie-Hellman key exchange"
          },
          {
            "name": "KeyCertSign",
            "value": "keyCertSign",
            "description": "This certificate can be used to verify a other public keys"
          },
          {
            "name": "CRLSign",
            "value": "crlSign",
            "description": "This certificate can be used to verify a certificate revocation list"
          },
          {
            "name": "EncipherOnly",
            "value": "encipherOnly",
            "description": "This certificate can be only be used to encrypt data"
          },
          {
            "name": "DecipherOnly",
            "value": "decipherOnly",
            "description": "This certificate can only be used to decrypt data"
          },
          {
            "name": "ServerAuthentication",
            "value": "serverAuth",
            "description": "This certificate can be used to authenticate a server in a TLS/SSL connection"
          },
          {
            "name": "ClientAuthentication",
            "value": "clientAuth",
            "description": "This certificate can be used to authenticate a client in a TLS/SSL connection"
          },
          {
            "name": "CodeSigning",
            "value": "codeSigning",
            "description": "This certificate can be used to authenticate a code object"
          },
          {
            "name": "EmailProtection",
            "value": "emailProtection",
            "description": "This certificate can be used to authenticate an email address"
          },
          {
            "name": "TimeStamping",
            "value": "timeStamping",
            "description": "This certificate binds the hash of an object to a time"
          },
          {
            "name": "OCSPSigning",
            "value": "ocspSigning",
            "description": "This certificate can be used to sign OCSP responses"
          }
        ]
      }
    },
    "CryptoCertificate": {
      "type": "object",
      "description": "Crypto certificate properties",
      "properties": {
        "cryptoCertId": {
          "type": "string",
          "description": "ID for the certificate result."
        },
        "certificateName": {
          "type": "string",
          "description": "Name of the certificate."
        },
        "subject": {
          "$ref": "#/definitions/CryptoCertificateEntity",
          "description": "Subject information of the certificate."
        },
        "issuer": {
          "$ref": "#/definitions/CryptoCertificateEntity",
          "description": "Issuer information of the certificate."
        },
        "issuedDate": {
          "type": "string",
          "format": "date-time",
          "description": "Issue date for the certificate."
        },
        "expirationDate": {
          "type": "string",
          "format": "date-time",
          "description": "Expiration date for the certificate."
        },
        "certificateRole": {
          "type": "string",
          "description": "Role of the certificate (Root CA, etc)"
        },
        "signatureAlgorithm": {
          "type": "string",
          "description": "The signature algorithm used in the certificate."
        },
        "certificateKeySize": {
          "type": "integer",
          "format": "int64",
          "description": "Size of the certificate's key in bits"
        },
        "certificateKeyAlgorithm": {
          "type": "string",
          "description": "Key algorithm used in the certificate."
        },
        "encoding": {
          "type": "string",
          "description": "Encoding used for the certificate."
        },
        "serialNumber": {
          "type": "string",
          "description": "Serial number of the certificate."
        },
        "fingerprint": {
          "type": "string",
          "description": "Fingerprint of the certificate."
        },
        "certificateUsage": {
          "type": "array",
          "description": "List of functions the certificate can fulfill.",
          "items": {
            "$ref": "#/definitions/CertificateUsage"
          }
        },
        "filePaths": {
          "type": "array",
          "description": "List of files where this certificate was found.",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "pairedKey": {
          "$ref": "#/definitions/PairedKey",
          "description": "A matching paired private key."
        },
        "isExpired": {
          "type": "boolean",
          "description": "Indicates if the certificate is expired."
        },
        "isSelfSigned": {
          "type": "boolean",
          "description": "Indicates if the certificate is self-signed."
        },
        "isWeakSignature": {
          "type": "boolean",
          "description": "Indicates the signature algorithm used is insecure according to NIST guidance."
        },
        "isShortKeySize": {
          "type": "boolean",
          "description": "Indicates the certificate's key size is considered too small to be secure for the key algorithm according to NIST guidance."
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "The status of the last operation.",
          "readOnly": true
        }
      }
    },
    "CryptoCertificateEntity": {
      "type": "object",
      "description": "Information on an entity (distinguished name) in a cryptographic certificate.",
      "properties": {
        "commonName": {
          "type": "string",
          "description": "Common name of the certificate entity."
        },
        "organization": {
          "type": "string",
          "description": "Organization of the certificate entity."
        },
        "organizationalUnit": {
          "type": "string",
          "description": "The organizational unit of the certificate entity."
        },
        "state": {
          "type": "string",
          "description": "Geographical state or province of the certificate entity."
        },
        "country": {
          "type": "string",
          "description": "Country code of the certificate entity."
        }
      }
    },
    "CryptoCertificateResource": {
      "type": "object",
      "description": "The object representing a firmware analysis crypto certificate resource",
      "properties": {
        "properties": {
          "$ref": "#/definitions/CryptoCertificate",
          "description": "The resource-specific properties for this resource."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "CryptoCertificateResourceListResult": {
      "type": "object",
      "description": "The response of a CryptoCertificateResource list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The CryptoCertificateResource items on this page",
          "items": {
            "$ref": "#/definitions/CryptoCertificateResource"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "CryptoCertificateSummaryResource": {
      "type": "object",
      "description": "Properties for cryptographic certificate summary.",
      "properties": {
        "totalCertificateCount": {
          "type": "integer",
          "format": "int64",
          "description": "Total number of certificates found."
        },
        "pairedKeyCount": {
          "type": "integer",
          "format": "int64",
          "description": "Total number of paired private keys found for the certificates."
        },
        "expiredCertificateCount": {
          "type": "integer",
          "format": "int64",
          "description": "Total number of expired certificates found."
        },
        "expiringSoonCertificateCount": {
          "type": "integer",
          "format": "int64",
          "description": "Total number of nearly expired certificates found."
        },
        "weakSignatureCount": {
          "type": "integer",
          "format": "int64",
          "description": "Total number of certificates found using a weak signature algorithm."
        },
        "selfSignedCertificateCount": {
          "type": "integer",
          "format": "int64",
          "description": "Total number of certificates found that are self-signed."
        },
        "shortKeySizeCount": {
          "type": "integer",
          "format": "int64",
          "description": "Total number of certificates found that have an insecure key size for the key algorithm."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/SummaryResourceProperties"
        }
      ],
      "x-ms-discriminator-value": "CryptoCertificate"
    },
    "CryptoKey": {
      "type": "object",
      "description": "Crypto key properties",
      "properties": {
        "cryptoKeyId": {
          "type": "string",
          "description": "ID for the key result."
        },
        "keyType": {
          "$ref": "#/definitions/CryptoKeyType",
          "description": "Type of the key (public or private)."
        },
        "cryptoKeySize": {
          "type": "integer",
          "format": "int64",
          "description": "Size of the key in bits."
        },
        "keyAlgorithm": {
          "type": "string",
          "description": "Key algorithm name."
        },
        "usage": {
          "type": "array",
          "description": "Functions the key can fulfill.",
          "items": {
            "type": "string"
          }
        },
        "filePaths": {
          "type": "array",
          "description": "List of files where this key was found.",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "pairedKey": {
          "$ref": "#/definitions/PairedKey",
          "description": "A matching paired key or certificate."
        },
        "isShortKeySize": {
          "type": "boolean",
          "description": "Indicates the key size is considered too small to be secure for the algorithm according to NIST guidance."
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "The status of the last operation.",
          "readOnly": true
        }
      }
    },
    "CryptoKeyResource": {
      "type": "object",
      "description": "The object representing a firmware analysis crypto key resource",
      "properties": {
        "properties": {
          "$ref": "#/definitions/CryptoKey",
          "description": "The resource-specific properties for this resource."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "CryptoKeyResourceListResult": {
      "type": "object",
      "description": "The response of a CryptoKeyResource list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The CryptoKeyResource items on this page",
          "items": {
            "$ref": "#/definitions/CryptoKeyResource"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "CryptoKeySummaryResource": {
      "type": "object",
      "description": "Properties for cryptographic key summary.",
      "properties": {
        "totalKeyCount": {
          "type": "integer",
          "format": "int64",
          "description": "Total number of cryptographic keys found."
        },
        "publicKeyCount": {
          "type": "integer",
          "format": "int64",
          "description": "Total number of (non-certificate) public keys found."
        },
        "privateKeyCount": {
          "type": "integer",
          "format": "int64",
          "description": "Total number of private keys found."
        },
        "pairedKeyCount": {
          "type": "integer",
          "format": "int64",
          "description": "Total number of keys found that have a matching paired key or certificate."
        },
        "shortKeySizeCount": {
          "type": "integer",
          "format": "int64",
          "description": "Total number of keys found that have an insecure key size for the algorithm."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/SummaryResourceProperties"
        }
      ],
      "x-ms-discriminator-value": "CryptoKey"
    },
    "CryptoKeyType": {
      "type": "string",
      "description": "Different types of cryptographic keys.",
      "enum": [
        "Public",
        "Private"
      ],
      "x-ms-enum": {
        "name": "CryptoKeyType",
        "modelAsString": true,
        "values": [
          {
            "name": "Public",
            "value": "Public",
            "description": "The key is an asymmetric public key."
          },
          {
            "name": "Private",
            "value": "Private",
            "description": "The key is an asymmetric private key."
          }
        ]
      }
    },
    "CveLink": {
      "type": "object",
      "description": "Properties of a reference link for a CVE.",
      "properties": {
        "href": {
          "type": "string",
          "format": "uri",
          "description": "The destination of the reference link."
        },
        "label": {
          "type": "string",
          "description": "The label of the reference link."
        }
      }
    },
    "CveResource": {
      "type": "object",
      "description": "The object representing a firmware analysis CVE result resource",
      "properties": {
        "properties": {
          "$ref": "#/definitions/CveResult",
          "description": "The resource-specific properties for this resource."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "CveResourceListResult": {
      "type": "object",
      "description": "The response of a CveResource list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The CveResource items on this page",
          "items": {
            "$ref": "#/definitions/CveResource"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "CveResult": {
      "type": "object",
      "description": "Details of a CVE detected in firmware.",
      "properties": {
        "cveId": {
          "type": "string",
          "description": "ID of the CVE result."
        },
        "componentId": {
          "type": "string",
          "description": "ID of the affected SBOM component."
        },
        "componentName": {
          "type": "string",
          "description": "Name of the affected SBOM component."
        },
        "componentVersion": {
          "type": "string",
          "description": "Version of the affected SBOM component."
        },
        "severity": {
          "type": "string",
          "description": "Severity of the CVE."
        },
        "cveName": {
          "type": "string",
          "description": "Name of the CVE."
        },
        "effectiveCvssScore": {
          "type": "number",
          "format": "float",
          "description": "The most recent CVSS score of the CVE."
        },
        "effectiveCvssVersion": {
          "type": "integer",
          "format": "int32",
          "description": "The version of the effectiveCvssScore property."
        },
        "cvssScores": {
          "type": "array",
          "description": "All known CVSS scores for the CVE.",
          "items": {
            "$ref": "#/definitions/CvssScore"
          },
          "x-ms-identifiers": []
        },
        "links": {
          "type": "array",
          "description": "The list of reference links for the CVE.",
          "items": {
            "$ref": "#/definitions/CveLink"
          },
          "readOnly": true,
          "x-ms-identifiers": [
            "href"
          ]
        },
        "description": {
          "type": "string",
          "description": "The CVE description."
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "The status of the last operation.",
          "readOnly": true
        }
      }
    },
    "CveSummary": {
      "type": "object",
      "description": "Properties for a CVE analysis summary.",
      "properties": {
        "criticalCveCount": {
          "type": "integer",
          "format": "int64",
          "description": "The total number of critical severity CVEs detected"
        },
        "highCveCount": {
          "type": "integer",
          "format": "int64",
          "description": "The total number of high severity CVEs detected"
        },
        "mediumCveCount": {
          "type": "integer",
          "format": "int64",
          "description": "The total number of medium severity CVEs detected"
        },
        "lowCveCount": {
          "type": "integer",
          "format": "int64",
          "description": "The total number of low severity CVEs detected"
        },
        "unknownCveCount": {
          "type": "integer",
          "format": "int64",
          "description": "The total number of unknown severity CVEs detected"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/SummaryResourceProperties"
        }
      ],
      "x-ms-discriminator-value": "CommonVulnerabilitiesAndExposures"
    },
    "CvssScore": {
      "type": "object",
      "description": "Common Vulnerability Scoring System values.",
      "properties": {
        "version": {
          "type": "integer",
          "format": "int32",
          "description": "The version of the Common Vulnerability Scoring System (CVSS)."
        },
        "score": {
          "type": "number",
          "format": "float",
          "description": "The score of the CVE according to the CVSS specified."
        }
      },
      "required": [
        "version"
      ]
    },
    "ExecutableClass": {
      "type": "string",
      "description": "String to indicate if the executable is 32 or 64 bit.",
      "enum": [
        "x86",
        "x64"
      ],
      "x-ms-enum": {
        "name": "ExecutableClass",
        "modelAsString": true,
        "values": [
          {
            "name": "x86",
            "value": "x86",
            "description": "The binary is 32-bit."
          },
          {
            "name": "x64",
            "value": "x64",
            "description": "The binary is 64-bit."
          }
        ]
      }
    },
    "Firmware": {
      "type": "object",
      "description": "Firmware definition",
      "properties": {
        "properties": {
          "$ref": "#/definitions/FirmwareProperties",
          "description": "The resource-specific properties for this resource."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "FirmwareListResult": {
      "type": "object",
      "description": "The response of a Firmware list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The Firmware items on this page",
          "items": {
            "$ref": "#/definitions/Firmware"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "FirmwareProperties": {
      "type": "object",
      "description": "Firmware properties.",
      "properties": {
        "fileName": {
          "type": "string",
          "description": "File name for a firmware that user uploaded."
        },
        "vendor": {
          "type": "string",
          "description": "Firmware vendor.",
          "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-_. ,'\"~=(){}:]*$"
        },
        "model": {
          "type": "string",
          "description": "Firmware model.",
          "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-_. ,'\"~=(){}:]*$"
        },
        "version": {
          "type": "string",
          "description": "Firmware version.",
          "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-_. ,'\"~=(){}:]*$"
        },
        "description": {
          "type": "string",
          "description": "User-specified description of the firmware."
        },
        "fileSize": {
          "type": "integer",
          "format": "int64",
          "description": "File size of the uploaded firmware image."
        },
        "status": {
          "$ref": "#/definitions/Status",
          "description": "The status of firmware scan."
        },
        "statusMessages": {
          "type": "array",
          "description": "A list of errors or other messages generated during firmware analysis",
          "items": {
            "$ref": "#/definitions/StatusMessage"
          },
          "x-ms-identifiers": []
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "Provisioning state of the resource.",
          "readOnly": true
        }
      }
    },
    "FirmwareSummary": {
      "type": "object",
      "description": "Properties for high level summary of firmware analysis results.",
      "properties": {
        "extractedSize": {
          "type": "integer",
          "format": "int64",
          "description": "Total extracted size of the firmware in bytes."
        },
        "fileSize": {
          "type": "integer",
          "format": "int64",
          "description": "Firmware file size in bytes."
        },
        "extractedFileCount": {
          "type": "integer",
          "format": "int64",
          "description": "Extracted file count."
        },
        "componentCount": {
          "type": "integer",
          "format": "int64",
          "description": "Components count."
        },
        "binaryCount": {
          "type": "integer",
          "format": "int64",
          "description": "Binary count"
        },
        "analysisTimeSeconds": {
          "type": "integer",
          "format": "int64",
          "description": "Time used for analysis"
        },
        "rootFileSystems": {
          "type": "integer",
          "format": "int64",
          "description": "The number of root file systems found."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/SummaryResourceProperties"
        }
      ],
      "x-ms-discriminator-value": "Firmware"
    },
    "FirmwareUpdateDefinition": {
      "type": "object",
      "description": "Firmware definition",
      "properties": {
        "properties": {
          "$ref": "#/definitions/FirmwareProperties",
          "description": "The editable properties of a firmware"
        }
      }
    },
    "GenerateUploadUrlRequest": {
      "type": "object",
      "description": "Properties for generating an upload URL",
      "properties": {
        "firmwareId": {
          "type": "string",
          "description": "A unique ID for the firmware to be uploaded."
        }
      }
    },
    "PairedKey": {
      "type": "object",
      "description": "Details of a matching paired key or certificate.",
      "properties": {
        "pairedKeyId": {
          "type": "string",
          "description": "ID of the paired key or certificate."
        },
        "type": {
          "type": "string",
          "description": "The type indicating whether the paired object is a key or certificate."
        }
      }
    },
    "PasswordHash": {
      "type": "object",
      "description": "Password hash properties",
      "properties": {
        "passwordHashId": {
          "type": "string",
          "description": "ID for password hash"
        },
        "filePath": {
          "type": "string",
          "description": "File path of the password hash"
        },
        "salt": {
          "type": "string",
          "description": "Salt of the password hash"
        },
        "hash": {
          "type": "string",
          "description": "Hash of the password"
        },
        "context": {
          "type": "string",
          "description": "Context of password hash"
        },
        "username": {
          "type": "string",
          "description": "User name of password hash"
        },
        "algorithm": {
          "type": "string",
          "description": "Algorithm of the password hash"
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "The status of the last operation.",
          "readOnly": true
        }
      }
    },
    "PasswordHashResource": {
      "type": "object",
      "description": "The object representing a firmware analysis password hash result resource",
      "properties": {
        "properties": {
          "$ref": "#/definitions/PasswordHash",
          "description": "The resource-specific properties for this resource."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "PasswordHashResourceListResult": {
      "type": "object",
      "description": "The response of a PasswordHashResource list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The PasswordHashResource items on this page",
          "items": {
            "$ref": "#/definitions/PasswordHashResource"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "ProvisioningState": {
      "type": "string",
      "description": "The status of a firmware analysis job.",
      "enum": [
        "Succeeded",
        "Failed",
        "Canceled",
        "Pending",
        "Extracting",
        "Analyzing"
      ],
      "x-ms-enum": {
        "name": "ProvisioningState",
        "modelAsString": true,
        "values": [
          {
            "name": "Succeeded",
            "value": "Succeeded",
            "description": "The request has successfully completed."
          },
          {
            "name": "Failed",
            "value": "Failed",
            "description": "There was an error during the request."
          },
          {
            "name": "Canceled",
            "value": "Canceled",
            "description": "The request was canceled."
          },
          {
            "name": "Pending",
            "value": "Pending",
            "description": "The request is queued and awaiting execution"
          },
          {
            "name": "Extracting",
            "value": "Extracting",
            "description": "The Firmware is currently being extracted."
          },
          {
            "name": "Analyzing",
            "value": "Analyzing",
            "description": "Analysis is being run on the firmware"
          }
        ]
      },
      "readOnly": true
    },
    "SbomComponent": {
      "type": "object",
      "description": "SBOM component of a firmware.",
      "properties": {
        "componentId": {
          "type": "string",
          "description": "ID for the component."
        },
        "componentName": {
          "type": "string",
          "description": "Name for the component."
        },
        "version": {
          "type": "string",
          "description": "Version for the component."
        },
        "license": {
          "type": "string",
          "description": "License for the component."
        },
        "filePaths": {
          "type": "array",
          "description": "File paths related to the component. Note, relatedFiles should be used instead of this property.",
          "items": {
            "type": "string"
          }
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "The status of the last operation.",
          "readOnly": true
        }
      }
    },
    "SbomComponentResource": {
      "type": "object",
      "description": "The object representing a firmware analysis SBOM component result resource",
      "properties": {
        "properties": {
          "$ref": "#/definitions/SbomComponent",
          "description": "The resource-specific properties for this resource."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "SbomComponentResourceListResult": {
      "type": "object",
      "description": "The response of a SbomComponentResource list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The SbomComponentResource items on this page",
          "items": {
            "$ref": "#/definitions/SbomComponentResource"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "Status": {
      "type": "string",
      "description": "The status of a firmware analysis job.",
      "enum": [
        "Pending",
        "Extracting",
        "Analyzing",
        "Ready",
        "Error"
      ],
      "x-ms-enum": {
        "name": "Status",
        "modelAsString": true,
        "values": [
          {
            "name": "Pending",
            "value": "Pending",
            "description": "The analysis job is queued"
          },
          {
            "name": "Extracting",
            "value": "Extracting",
            "description": "The firmware is currently being extracted"
          },
          {
            "name": "Analyzing",
            "value": "Analyzing",
            "description": "Analysis is being run on the firmware"
          },
          {
            "name": "Ready",
            "value": "Ready",
            "description": "Analysis job results are ready"
          },
          {
            "name": "Error",
            "value": "Error",
            "description": "An error occurred while running firmware analysis"
          }
        ]
      }
    },
    "StatusMessage": {
      "type": "object",
      "description": "Error and status message",
      "properties": {
        "errorCode": {
          "type": "integer",
          "format": "int64",
          "description": "The error code"
        },
        "message": {
          "type": "string",
          "description": "The error or status message"
        }
      }
    },
    "SummaryResource": {
      "type": "object",
      "description": "The object representing a firmware analysis summary resource.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/SummaryResourceProperties",
          "description": "The resource-specific properties for this resource."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "SummaryResourceListResult": {
      "type": "object",
      "description": "The response of a SummaryResource list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The SummaryResource items on this page",
          "items": {
            "$ref": "#/definitions/SummaryResource"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "SummaryResourceProperties": {
      "type": "object",
      "description": "Properties of an analysis summary.",
      "properties": {
        "summaryType": {
          "$ref": "#/definitions/SummaryType",
          "description": "The type of summary."
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "The status of the last operation.",
          "readOnly": true
        }
      },
      "discriminator": "summaryType",
      "required": [
        "summaryType"
      ]
    },
    "SummaryType": {
      "type": "string",
      "description": "Describes the type of summary.",
      "enum": [
        "Firmware",
        "CommonVulnerabilitiesAndExposures",
        "BinaryHardening",
        "CryptoCertificate",
        "CryptoKey"
      ],
      "x-ms-enum": {
        "name": "SummaryType",
        "modelAsString": true,
        "values": [
          {
            "name": "Firmware",
            "value": "Firmware",
            "description": "The summary contains information about the submitted firmware"
          },
          {
            "name": "CommonVulnerabilitiesAndExposures",
            "value": "CommonVulnerabilitiesAndExposures",
            "description": "The summary contains information about the Common Vulnerabilities and Exposures analysis results"
          },
          {
            "name": "BinaryHardening",
            "value": "BinaryHardening",
            "description": "The summary contains information about the binary hardening analysis results"
          },
          {
            "name": "CryptoCertificate",
            "value": "CryptoCertificate",
            "description": "The summary contains information about the cryptographic certificate analysis results"
          },
          {
            "name": "CryptoKey",
            "value": "CryptoKey",
            "description": "The summary contains information about the cryptographic key analysis results"
          }
        ]
      }
    },
    "UrlToken": {
      "type": "object",
      "description": "Url data for creating or accessing a blob file.",
      "properties": {
        "url": {
          "type": "string",
          "format": "uri",
          "description": "SAS URL for creating or accessing a blob file.",
          "readOnly": true
        }
      }
    },
    "UsageMetric": {
      "type": "object",
      "description": "The object representing how many firmwares the user has uploaded to the workspace.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/UsageMetricProperties",
          "description": "The resource-specific properties for this resource."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "UsageMetricListResult": {
      "type": "object",
      "description": "The response of a UsageMetric list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The UsageMetric items on this page",
          "items": {
            "$ref": "#/definitions/UsageMetric"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "UsageMetricProperties": {
      "type": "object",
      "description": "Properties of a workspaces usage metrics.",
      "properties": {
        "monthlyFirmwareUploadCount": {
          "type": "integer",
          "format": "int64",
          "description": "The number of firmware analysis jobs that have been submitted in the current month.",
          "readOnly": true
        },
        "totalFirmwareCount": {
          "type": "integer",
          "format": "int64",
          "description": "The total number of firmwares that are in the workspace.",
          "readOnly": true
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "The status of the last operation.",
          "readOnly": true
        }
      },
      "required": [
        "monthlyFirmwareUploadCount",
        "totalFirmwareCount"
      ]
    },
    "Workspace": {
      "type": "object",
      "description": "Firmware analysis workspace.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/WorkspaceProperties",
          "description": "The resource-specific properties for this resource."
        },
        "sku": {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/Sku",
          "description": "The SKU (Stock Keeping Unit) assigned to this resource."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "WorkspaceListResult": {
      "type": "object",
      "description": "The response of a Workspace list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The Workspace items on this page",
          "items": {
            "$ref": "#/definitions/Workspace"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "WorkspaceProperties": {
      "type": "object",
      "description": "Workspace properties.",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "Provisioning state of the resource.",
          "readOnly": true
        }
      }
    },
    "WorkspaceUpdate": {
      "type": "object",
      "description": "The type used for update operations of the Workspace.",
      "properties": {
        "sku": {
          "$ref": "#/definitions/Azure.ResourceManager.CommonTypes.SkuUpdate",
          "description": "The SKU (Stock Keeping Unit) assigned to this resource."
        },
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    }
  },
  "parameters": {}
}
