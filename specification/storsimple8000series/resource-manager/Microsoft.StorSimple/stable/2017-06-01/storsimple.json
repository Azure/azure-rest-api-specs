{
  "swagger": "2.0",
  "info": {
    "version": "2017-06-01",
    "title": "StorSimple8000SeriesManagementClient"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/providers/Microsoft.StorSimple/operations": {
      "get": {
        "tags": [
          "Operations"
        ],
        "description": "Lists all of the available REST API operations of the Microsoft.StorSimple provider",
        "operationId": "Operations_List",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The collection of available provider operations.",
            "schema": {
              "$ref": "#/definitions/AvailableProviderOperationList"
            }
          }
        },
        "deprecated": false,
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "OperationsList": {
            "$ref": "./examples/OperationsList.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.StorSimple/managers": {
      "get": {
        "tags": [
          "Managers"
        ],
        "description": "Retrieves all the managers in a subscription.",
        "operationId": "Managers_List",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The collection of StorSimple managers.",
            "schema": {
              "$ref": "#/definitions/ManagerList"
            }
          }
        },
        "deprecated": false,
        "x-ms-pageable": {
          "nextLinkName": null
        },
        "x-ms-examples": {
          "ManagersList": {
            "$ref": "./examples/ManagersList.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers": {
      "get": {
        "tags": [
          "Managers"
        ],
        "description": "Retrieves all the managers in a resource group.",
        "operationId": "Managers_ListByResourceGroup",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The collection of StorSimple managers.",
            "schema": {
              "$ref": "#/definitions/ManagerList"
            }
          }
        },
        "deprecated": false,
        "x-ms-pageable": {
          "nextLinkName": null
        },
        "x-ms-examples": {
          "ManagersListByResourceGroup": {
            "$ref": "./examples/ManagersListByResourceGroup.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}": {
      "get": {
        "tags": [
          "Managers"
        ],
        "description": "Returns the properties of the specified manager name.",
        "operationId": "Managers_Get",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/managerNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The StorSimple manager.",
            "schema": {
              "$ref": "#/definitions/Manager"
            }
          }
        },
        "deprecated": false,
        "x-ms-examples": {
          "ManagersGet": {
            "$ref": "./examples/ManagersGet.json"
          }
        }
      },
      "put": {
        "tags": [
          "Managers"
        ],
        "description": "Creates or updates the manager.",
        "operationId": "Managers_CreateOrUpdate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "parameters",
            "in": "body",
            "description": "The manager.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Manager"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/managerNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The StorSimple manager has been successfully updated",
            "schema": {
              "$ref": "#/definitions/Manager"
            }
          },
          "201": {
            "description": "The StorSimple manager has been successfully created",
            "schema": {
              "$ref": "#/definitions/Manager"
            }
          }
        },
        "deprecated": false,
        "x-ms-examples": {
          "ManagersCreateOrUpdate": {
            "$ref": "./examples/ManagersCreateOrUpdate.json"
          }
        }
      },
      "delete": {
        "tags": [
          "Managers"
        ],
        "description": "Deletes the manager.",
        "operationId": "Managers_Delete",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/managerNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The StorSimple manager has been successfully deleted"
          },
          "204": {
            "description": "The StorSimple manager is already in a deleted state"
          }
        },
        "deprecated": false,
        "x-ms-examples": {
          "ManagersDelete": {
            "$ref": "./examples/ManagersDelete.json"
          }
        }
      },
      "patch": {
        "tags": [
          "Managers"
        ],
        "description": "Updates the StorSimple Manager.",
        "operationId": "Managers_Update",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "parameters",
            "in": "body",
            "description": "The manager update parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ManagerPatch"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/managerNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The StorSimple manager has been successfully updated",
            "schema": {
              "$ref": "#/definitions/Manager"
            }
          }
        },
        "deprecated": false,
        "x-ms-examples": {
          "ManagersUpdate": {
            "$ref": "./examples/ManagersUpdate.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/accessControlRecords": {
      "get": {
        "tags": [
          "AccessControlRecords"
        ],
        "description": "Retrieves all the access control records in a manager.",
        "operationId": "AccessControlRecords_ListByManager",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/managerNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The collection of access control records.",
            "schema": {
              "$ref": "#/definitions/AccessControlRecordList"
            }
          }
        },
        "deprecated": false,
        "x-ms-pageable": {
          "nextLinkName": null
        },
        "x-ms-examples": {
          "AccessControlRecordsListByManager": {
            "$ref": "./examples/AccessControlRecordsListByManager.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/accessControlRecords/{accessControlRecordName}": {
      "get": {
        "tags": [
          "AccessControlRecords"
        ],
        "description": "Returns the properties of the specified access control record name.",
        "operationId": "AccessControlRecords_Get",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "accessControlRecordName",
            "in": "path",
            "description": "Name of access control record to be fetched.",
            "required": true,
            "type": "string",
            "x-ms-skip-url-encoding": true
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/managerNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The access control record.",
            "schema": {
              "$ref": "#/definitions/AccessControlRecord"
            }
          }
        },
        "deprecated": false,
        "x-ms-examples": {
          "AccessControlRecordsGet": {
            "$ref": "./examples/AccessControlRecordsGet.json"
          }
        }
      },
      "put": {
        "tags": [
          "AccessControlRecords"
        ],
        "description": "Creates or Updates an access control record.",
        "operationId": "AccessControlRecords_CreateOrUpdate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "accessControlRecordName",
            "in": "path",
            "description": "The name of the access control record.",
            "required": true,
            "type": "string",
            "x-ms-skip-url-encoding": true
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "The access control record to be added or updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AccessControlRecord"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/managerNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully created or updated the access control record.",
            "schema": {
              "$ref": "#/definitions/AccessControlRecord"
            }
          },
          "202": {
            "description": "Accepted the request to create or update the access control record."
          }
        },
        "deprecated": false,
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "AccessControlRecordsCreateOrUpdate": {
            "$ref": "./examples/AccessControlRecordsCreateOrUpdate.json"
          }
        }
      },
      "delete": {
        "tags": [
          "AccessControlRecords"
        ],
        "description": "Deletes the access control record.",
        "operationId": "AccessControlRecords_Delete",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "accessControlRecordName",
            "in": "path",
            "description": "The name of the access control record to delete.",
            "required": true,
            "type": "string",
            "x-ms-skip-url-encoding": true
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/managerNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted the request to delete the access control record."
          },
          "204": {
            "description": "Successfully deleted the access control record."
          }
        },
        "deprecated": false,
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "AccessControlRecordsDelete": {
            "$ref": "./examples/AccessControlRecordsDelete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/alerts": {
      "get": {
        "tags": [
          "Alerts"
        ],
        "description": "Retrieves all the alerts in a manager.",
        "operationId": "Alerts_ListByManager",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/managerNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "OData Filter options",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The collection of alerts.",
            "schema": {
              "$ref": "#/definitions/AlertList"
            }
          }
        },
        "deprecated": false,
        "x-ms-odata": "#/definitions/AlertFilter",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "AlertsListByManager": {
            "$ref": "./examples/AlertsListByManager.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/bandwidthSettings": {
      "get": {
        "tags": [
          "BandwidthSettings"
        ],
        "description": "Retrieves all the bandwidth setting in a manager.",
        "operationId": "BandwidthSettings_ListByManager",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/managerNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The collection of bandwidth settings.",
            "schema": {
              "$ref": "#/definitions/BandwidthSettingList"
            }
          }
        },
        "deprecated": false,
        "x-ms-pageable": {
          "nextLinkName": null
        },
        "x-ms-examples": {
          "BandwidthSettingsListByManager": {
            "$ref": "./examples/BandwidthSettingsListByManager.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/bandwidthSettings/{bandwidthSettingName}": {
      "get": {
        "tags": [
          "BandwidthSettings"
        ],
        "description": "Returns the properties of the specified bandwidth setting name.",
        "operationId": "BandwidthSettings_Get",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "bandwidthSettingName",
            "in": "path",
            "description": "The name of bandwidth setting to be fetched.",
            "required": true,
            "type": "string",
            "x-ms-skip-url-encoding": true
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/managerNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The bandwidth setting.",
            "schema": {
              "$ref": "#/definitions/BandwidthSetting"
            }
          }
        },
        "deprecated": false,
        "x-ms-examples": {
          "BandwidthSettingsGet": {
            "$ref": "./examples/BandwidthSettingsGet.json"
          }
        }
      },
      "put": {
        "tags": [
          "BandwidthSettings"
        ],
        "description": "Creates or updates the bandwidth setting",
        "operationId": "BandwidthSettings_CreateOrUpdate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "bandwidthSettingName",
            "in": "path",
            "description": "The bandwidth setting name.",
            "required": true,
            "type": "string",
            "x-ms-skip-url-encoding": true
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "The bandwidth setting to be added or updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BandwidthSetting"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/managerNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully created or updated the bandwidth setting.",
            "schema": {
              "$ref": "#/definitions/BandwidthSetting"
            }
          },
          "202": {
            "description": "Accepted the request to create or update the bandwidth setting."
          }
        },
        "deprecated": false,
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "BandwidthSettingsCreateOrUpdate": {
            "$ref": "./examples/BandwidthSettingsCreateOrUpdate.json"
          }
        }
      },
      "delete": {
        "tags": [
          "BandwidthSettings"
        ],
        "description": "Deletes the bandwidth setting",
        "operationId": "BandwidthSettings_Delete",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "bandwidthSettingName",
            "in": "path",
            "description": "The name of the bandwidth setting.",
            "required": true,
            "type": "string",
            "x-ms-skip-url-encoding": true
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/managerNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted the request to delete the bandwidth setting."
          },
          "204": {
            "description": "Successfully deleted the bandwidth setting."
          }
        },
        "deprecated": false,
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "BandwidthSettingsDelete": {
            "$ref": "./examples/BandwidthSettingsDelete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/clearAlerts": {
      "post": {
        "tags": [
          "Alerts"
        ],
        "description": "Clear the alerts.",
        "operationId": "Alerts_Clear",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "parameters",
            "in": "body",
            "description": "The clear alert request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ClearAlertRequest"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/managerNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully cleared the alerts."
          }
        },
        "deprecated": false,
        "x-ms-examples": {
          "AlertsClear": {
            "$ref": "./examples/AlertsClear.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/cloudApplianceConfigurations": {
      "get": {
        "tags": [
          "CloudAppliances"
        ],
        "description": "Lists supported cloud appliance models and supported configurations.",
        "operationId": "CloudAppliances_ListSupportedConfigurations",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/managerNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The collection of cloud appliance configuration.",
            "schema": {
              "$ref": "#/definitions/CloudApplianceConfigurationList"
            }
          }
        },
        "deprecated": false,
        "x-ms-pageable": {
          "nextLinkName": null
        },
        "x-ms-examples": {
          "CloudAppliancesListSupportedConfigurations": {
            "$ref": "./examples/CloudAppliancesListSupportedConfigurations.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/configureDevice": {
      "post": {
        "tags": [
          "Devices"
        ],
        "description": "Complete minimal setup before using the device.",
        "operationId": "Devices_Configure",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "parameters",
            "in": "body",
            "description": "The minimal properties to configure a device.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ConfigureDeviceRequest"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/managerNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted the request to configure device."
          },
          "204": {
            "description": "Successfully configured the device."
          }
        },
        "deprecated": false,
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "DevicesConfigure": {
            "$ref": "./examples/DevicesConfigure.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices": {
      "get": {
        "tags": [
          "Devices"
        ],
        "description": "Returns the list of devices for the specified manager.",
        "operationId": "Devices_ListByManager",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/managerNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify $expand=details to populate additional fields related to the device or $expand=rolloverdetails to populate additional fields related to the service data encryption key rollover on device",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The collection of devices.",
            "schema": {
              "$ref": "#/definitions/DeviceList"
            }
          }
        },
        "deprecated": false,
        "x-ms-pageable": {
          "nextLinkName": null
        },
        "x-ms-examples": {
          "DevicesListByManager": {
            "$ref": "./examples/DevicesListByManager.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}": {
      "get": {
        "tags": [
          "Devices"
        ],
        "description": "Returns the properties of the specified device.",
        "operationId": "Devices_Get",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/deviceNameParameter"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/managerNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify $expand=details to populate additional fields related to the device or $expand=rolloverdetails to populate additional fields related to the service data encryption key rollover on device",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The device.",
            "schema": {
              "$ref": "#/definitions/Device"
            }
          }
        },
        "deprecated": false,
        "x-ms-examples": {
          "DevicesGet": {
            "$ref": "./examples/DevicesGet.json"
          }
        }
      },
      "delete": {
        "tags": [
          "Devices"
        ],
        "description": "Deletes the device.",
        "operationId": "Devices_Delete",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/deviceNameParameter"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/managerNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted the request to delete the device."
          },
          "204": {
            "description": "Successfully deleted the device."
          }
        },
        "deprecated": false,
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "DevicesDelete": {
            "$ref": "./examples/DevicesDelete.json"
          }
        }
      },
      "patch": {
        "tags": [
          "Devices"
        ],
        "description": "Patches the device.",
        "operationId": "Devices_Update",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/deviceNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Patch representation of the device.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DevicePatch"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/managerNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully patched the device.",
            "schema": {
              "$ref": "#/definitions/Device"
            }
          }
        },
        "deprecated": false,
        "x-ms-examples": {
          "DevicesUpdate": {
            "$ref": "./examples/DevicesUpdate.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/alertSettings/default": {
      "get": {
        "tags": [
          "DeviceSettings"
        ],
        "description": "Gets the alert settings of the specified device.",
        "operationId": "DeviceSettings_GetAlertSettings",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/deviceNameParameter"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/managerNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The Alert settings.",
            "schema": {
              "$ref": "#/definitions/AlertSettings"
            }
          }
        },
        "deprecated": false,
        "x-ms-examples": {
          "DeviceSettingsGetAlertSettings": {
            "$ref": "./examples/DeviceSettingsGetAlertSettings.json"
          }
        }
      },
      "put": {
        "tags": [
          "DeviceSettings"
        ],
        "description": "Creates or updates the alert settings of the specified device.",
        "operationId": "DeviceSettings_CreateOrUpdateAlertSettings",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/deviceNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "The alert settings to be added or updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AlertSettings"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/managerNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully created or updated the alert settings.",
            "schema": {
              "$ref": "#/definitions/AlertSettings"
            }
          },
          "202": {
            "description": "Accepted the request to create or update the alert settings."
          }
        },
        "deprecated": false,
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "DeviceSettingsCreateOrUpdateAlertSettings": {
            "$ref": "./examples/DeviceSettingsCreateOrUpdateAlertSettings.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/authorizeForServiceEncryptionKeyRollover": {
      "post": {
        "tags": [
          "Devices"
        ],
        "description": "Authorizes the specified device for service data encryption key rollover.",
        "operationId": "Devices_AuthorizeForServiceEncryptionKeyRollover",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/deviceNameParameter"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/managerNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully authorized the device for service encryption key rollover"
          }
        },
        "deprecated": false,
        "x-ms-examples": {
          "DevicesAuthorizeForServiceEncryptionKeyRollover": {
            "$ref": "./examples/DevicesAuthorizeForServiceEncryptionKeyRollover.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/backupPolicies": {
      "get": {
        "tags": [
          "BackupPolicies"
        ],
        "description": "Gets all the backup policies in a device.",
        "operationId": "BackupPolicies_ListByDevice",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/deviceNameParameter"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/managerNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The collection of backup policies.",
            "schema": {
              "$ref": "#/definitions/BackupPolicyList"
            }
          }
        },
        "deprecated": false,
        "x-ms-pageable": {
          "nextLinkName": null
        },
        "x-ms-examples": {
          "BackupPoliciesListByDevice": {
            "$ref": "./examples/BackupPoliciesListByDevice.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/backupPolicies/{backupPolicyName}": {
      "get": {
        "tags": [
          "BackupPolicies"
        ],
        "description": "Gets the properties of the specified backup policy name.",
        "operationId": "BackupPolicies_Get",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/deviceNameParameter"
          },
          {
            "name": "backupPolicyName",
            "in": "path",
            "description": "The name of backup policy to be fetched.",
            "required": true,
            "type": "string",
            "x-ms-skip-url-encoding": true
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/managerNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The backup policy.",
            "schema": {
              "$ref": "#/definitions/BackupPolicy"
            }
          }
        },
        "deprecated": false,
        "x-ms-examples": {
          "BackupPoliciesGet": {
            "$ref": "./examples/BackupPoliciesGet.json"
          }
        }
      },
      "put": {
        "tags": [
          "BackupPolicies"
        ],
        "description": "Creates or updates the backup policy.",
        "operationId": "BackupPolicies_CreateOrUpdate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/deviceNameParameter"
          },
          {
            "name": "backupPolicyName",
            "in": "path",
            "description": "The name of the backup policy to be created/updated.",
            "required": true,
            "type": "string",
            "x-ms-skip-url-encoding": true
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "The backup policy.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BackupPolicy"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/managerNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully created or updated the backup policy.",
            "schema": {
              "$ref": "#/definitions/BackupPolicy"
            }
          },
          "202": {
            "description": "Accepted the request to create or update the backup policy."
          }
        },
        "deprecated": false,
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "BackupPoliciesCreateOrUpdate": {
            "$ref": "./examples/BackupPoliciesCreateOrUpdate.json"
          }
        }
      },
      "delete": {
        "tags": [
          "BackupPolicies"
        ],
        "description": "Deletes the backup policy.",
        "operationId": "BackupPolicies_Delete",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/deviceNameParameter"
          },
          {
            "name": "backupPolicyName",
            "in": "path",
            "description": "The name of the backup policy.",
            "required": true,
            "type": "string",
            "x-ms-skip-url-encoding": true
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/managerNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted the request to delete the backup policy."
          },
          "204": {
            "description": "Successfully deleted the backup policy."
          }
        },
        "deprecated": false,
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "BackupPoliciesDelete": {
            "$ref": "./examples/BackupPoliciesDelete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/backupPolicies/{backupPolicyName}/backup": {
      "post": {
        "tags": [
          "BackupPolicies"
        ],
        "description": "Backup the backup policy now.",
        "operationId": "BackupPolicies_BackupNow",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/deviceNameParameter"
          },
          {
            "name": "backupPolicyName",
            "in": "path",
            "description": "The backup policy name.",
            "required": true,
            "type": "string",
            "x-ms-skip-url-encoding": true
          },
          {
            "name": "backupType",
            "in": "query",
            "description": "The backup Type. This can be cloudSnapshot or localSnapshot.",
            "required": true,
            "type": "string",
            "x-ms-skip-url-encoding": true
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/managerNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted the request to backup the backup policy."
          },
          "204": {
            "description": "Successfully completed backup of the backup policy."
          }
        },
        "deprecated": false,
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "BackupPoliciesBackupNow": {
            "$ref": "./examples/BackupPoliciesBackupNow.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/backupPolicies/{backupPolicyName}/schedules": {
      "get": {
        "tags": [
          "BackupSchedules"
        ],
        "description": "Gets all the backup schedules in a backup policy.",
        "operationId": "BackupSchedules_ListByBackupPolicy",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/deviceNameParameter"
          },
          {
            "name": "backupPolicyName",
            "in": "path",
            "description": "The backup policy name.",
            "required": true,
            "type": "string",
            "x-ms-skip-url-encoding": true
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/managerNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The collection of backup schedules.",
            "schema": {
              "$ref": "#/definitions/BackupScheduleList"
            }
          }
        },
        "deprecated": false,
        "x-ms-pageable": {
          "nextLinkName": null
        },
        "x-ms-examples": {
          "BackupSchedulesListByBackupPolicy": {
            "$ref": "./examples/BackupSchedulesListByBackupPolicy.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/backupPolicies/{backupPolicyName}/schedules/{backupScheduleName}": {
      "get": {
        "tags": [
          "BackupSchedules"
        ],
        "description": "Gets the properties of the specified backup schedule name.",
        "operationId": "BackupSchedules_Get",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/deviceNameParameter"
          },
          {
            "name": "backupPolicyName",
            "in": "path",
            "description": "The backup policy name.",
            "required": true,
            "type": "string",
            "x-ms-skip-url-encoding": true
          },
          {
            "name": "backupScheduleName",
            "in": "path",
            "description": "The name of the backup schedule to be fetched",
            "required": true,
            "type": "string",
            "x-ms-skip-url-encoding": true
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/managerNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The backup schedule.",
            "schema": {
              "$ref": "#/definitions/BackupSchedule"
            }
          }
        },
        "deprecated": false,
        "x-ms-examples": {
          "BackupSchedulesGet": {
            "$ref": "./examples/BackupSchedulesGet.json"
          }
        }
      },
      "put": {
        "tags": [
          "BackupSchedules"
        ],
        "description": "Creates or updates the backup schedule.",
        "operationId": "BackupSchedules_CreateOrUpdate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/deviceNameParameter"
          },
          {
            "name": "backupPolicyName",
            "in": "path",
            "description": "The backup policy name.",
            "required": true,
            "type": "string",
            "x-ms-skip-url-encoding": true
          },
          {
            "name": "backupScheduleName",
            "in": "path",
            "description": "The backup schedule name.",
            "required": true,
            "type": "string",
            "x-ms-skip-url-encoding": true
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "The backup schedule.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BackupSchedule"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/managerNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully created or updated the backup schedule.",
            "schema": {
              "$ref": "#/definitions/BackupSchedule"
            }
          },
          "202": {
            "description": "Accepted the request to create or update the backup schedule."
          }
        },
        "deprecated": false,
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "BackupSchedulesCreateOrUpdate": {
            "$ref": "./examples/BackupSchedulesCreateOrUpdate.json"
          }
        }
      },
      "delete": {
        "tags": [
          "BackupSchedules"
        ],
        "description": "Deletes the backup schedule.",
        "operationId": "BackupSchedules_Delete",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/deviceNameParameter"
          },
          {
            "name": "backupPolicyName",
            "in": "path",
            "description": "The backup policy name.",
            "required": true,
            "type": "string",
            "x-ms-skip-url-encoding": true
          },
          {
            "name": "backupScheduleName",
            "in": "path",
            "description": "The name the backup schedule.",
            "required": true,
            "type": "string",
            "x-ms-skip-url-encoding": true
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/managerNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted the request to delete the backup schedule."
          },
          "204": {
            "description": "Successfully deleted the backup schedule."
          }
        },
        "deprecated": false,
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "BackupSchedulesDelete": {
            "$ref": "./examples/BackupSchedulesDelete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/backups": {
      "get": {
        "tags": [
          "Backups"
        ],
        "description": "Retrieves all the backups in a device.",
        "operationId": "Backups_ListByDevice",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/deviceNameParameter"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/managerNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "OData Filter options",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The collection of backups.",
            "schema": {
              "$ref": "#/definitions/BackupList"
            }
          }
        },
        "deprecated": false,
        "x-ms-odata": "#/definitions/BackupFilter",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "BackupsListByDevice": {
            "$ref": "./examples/BackupsListByDevice.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/backups/{backupName}": {
      "delete": {
        "tags": [
          "Backups"
        ],
        "description": "Deletes the backup.",
        "operationId": "Backups_Delete",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/deviceNameParameter"
          },
          {
            "name": "backupName",
            "in": "path",
            "description": "The backup name.",
            "required": true,
            "type": "string",
            "x-ms-skip-url-encoding": true
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/managerNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted the request to delete the backup."
          },
          "204": {
            "description": "Successfully deleted the backup."
          }
        },
        "deprecated": false,
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "BackupsDelete": {
            "$ref": "./examples/BackupsDelete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/backups/{backupName}/elements/{backupElementName}/clone": {
      "post": {
        "tags": [
          "Backups"
        ],
        "description": "Clones the backup element as a new volume.",
        "operationId": "Backups_Clone",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/deviceNameParameter"
          },
          {
            "name": "backupName",
            "in": "path",
            "description": "The backup name.",
            "required": true,
            "type": "string",
            "x-ms-skip-url-encoding": true
          },
          {
            "name": "backupElementName",
            "in": "path",
            "description": "The backup element name.",
            "required": true,
            "type": "string",
            "x-ms-skip-url-encoding": true
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "The clone request object.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CloneRequest"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/managerNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully cloned the backup."
          },
          "202": {
            "description": "Accepted the request to clone."
          }
        },
        "deprecated": false,
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "BackupsClone": {
            "$ref": "./examples/BackupsClone.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/backups/{backupName}/restore": {
      "post": {
        "tags": [
          "Backups"
        ],
        "description": "Restores the backup on the device.",
        "operationId": "Backups_Restore",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/deviceNameParameter"
          },
          {
            "name": "backupName",
            "in": "path",
            "description": "The backupSet name",
            "required": true,
            "type": "string",
            "x-ms-skip-url-encoding": true
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/managerNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully restored the backup."
          },
          "202": {
            "description": "Accepted the request to restore."
          }
        },
        "deprecated": false,
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "BackupsRestore": {
            "$ref": "./examples/BackupsRestore.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/deactivate": {
      "post": {
        "tags": [
          "Devices"
        ],
        "description": "Deactivates the device.",
        "operationId": "Devices_Deactivate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/deviceNameParameter"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/managerNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted the request to deactivate the device."
          },
          "204": {
            "description": "Successfully deactivated the device."
          }
        },
        "deprecated": false,
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "DevicesDeactivate": {
            "$ref": "./examples/DevicesDeactivate.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/hardwareComponentGroups": {
      "get": {
        "tags": [
          "HardwareComponentGroups"
        ],
        "description": "Lists the hardware component groups at device-level.",
        "operationId": "HardwareComponentGroups_ListByDevice",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/deviceNameParameter"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/managerNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully fetched hardware component groups.",
            "schema": {
              "$ref": "#/definitions/HardwareComponentGroupList"
            }
          }
        },
        "deprecated": false,
        "x-ms-pageable": {
          "nextLinkName": null
        },
        "x-ms-examples": {
          "HardwareComponentGroupsListByDevice": {
            "$ref": "./examples/HardwareComponentGroupsListByDevice.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/hardwareComponentGroups/{hardwareComponentGroupName}/changeControllerPowerState": {
      "post": {
        "tags": [
          "HardwareComponentGroups"
        ],
        "description": "Changes the power state of the controller.",
        "operationId": "HardwareComponentGroups_ChangeControllerPowerState",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/deviceNameParameter"
          },
          {
            "name": "hardwareComponentGroupName",
            "in": "path",
            "description": "The hardware component group name.",
            "required": true,
            "type": "string",
            "x-ms-skip-url-encoding": true
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "The controller power state change request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ControllerPowerStateChangeRequest"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/managerNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted the request to change power state of the controller."
          },
          "204": {
            "description": "Successfully changed the power state of the controller."
          }
        },
        "deprecated": false,
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "HardwareComponentGroupsChangeControllerPowerState": {
            "$ref": "./examples/HardwareComponentGroupsChangeControllerPowerState.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/installUpdates": {
      "post": {
        "tags": [
          "Devices"
        ],
        "description": "Downloads and installs the updates on the device.",
        "operationId": "Devices_InstallUpdates",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/deviceNameParameter"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/managerNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted the request to download and install updates."
          },
          "204": {
            "description": "Successfully installed updates."
          }
        },
        "deprecated": false,
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "DevicesInstallUpdates": {
            "$ref": "./examples/DevicesInstallUpdates.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/jobs": {
      "get": {
        "tags": [
          "Jobs"
        ],
        "description": "Gets all the jobs for specified device. With optional OData query parameters, a filtered set of jobs is returned.",
        "operationId": "Jobs_ListByDevice",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/deviceNameParameter"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/managerNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "OData Filter options",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The collection of jobs for the specified manager and device name.",
            "schema": {
              "$ref": "#/definitions/JobList"
            }
          }
        },
        "deprecated": false,
        "x-ms-odata": "#/definitions/JobFilter",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "JobsListByDevice": {
            "$ref": "./examples/JobsListByDevice.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/jobs/{jobName}": {
      "get": {
        "tags": [
          "Jobs"
        ],
        "description": "Gets the details of the specified job name.",
        "operationId": "Jobs_Get",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/deviceNameParameter"
          },
          {
            "name": "jobName",
            "in": "path",
            "description": "The job Name.",
            "required": true,
            "type": "string",
            "x-ms-skip-url-encoding": true
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/managerNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The job.",
            "schema": {
              "$ref": "#/definitions/Job"
            }
          }
        },
        "deprecated": false,
        "x-ms-examples": {
          "JobsGet": {
            "$ref": "./examples/JobsGet.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/jobs/{jobName}/cancel": {
      "post": {
        "tags": [
          "Jobs"
        ],
        "description": "Cancels a job on the device.",
        "operationId": "Jobs_Cancel",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/deviceNameParameter"
          },
          {
            "name": "jobName",
            "in": "path",
            "description": "The jobName.",
            "required": true,
            "type": "string",
            "x-ms-skip-url-encoding": true
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/managerNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted the request to cancel a deviceJob"
          },
          "204": {
            "description": "Successfully cancelled the deviceJob"
          }
        },
        "deprecated": false,
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "JobsCancel": {
            "$ref": "./examples/JobsCancel.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/listFailoverSets": {
      "post": {
        "tags": [
          "Devices"
        ],
        "description": "Returns all failover sets for a given device and their eligibility for participating in a failover. A failover set refers to a set of volume containers that need to be failed-over as a single unit to maintain data integrity.",
        "operationId": "Devices_ListFailoverSets",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/deviceNameParameter"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/managerNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the list of failover sets on the given device.",
            "schema": {
              "$ref": "#/definitions/FailoverSetsList"
            }
          }
        },
        "deprecated": false,
        "x-ms-pageable": {
          "nextLinkName": null
        },
        "x-ms-examples": {
          "DevicesListFailoverSets": {
            "$ref": "./examples/DevicesListFailoverSets.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/metrics": {
      "get": {
        "tags": [
          "Devices"
        ],
        "description": "Gets the metrics for the specified device.",
        "operationId": "Devices_ListMetrics",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/deviceNameParameter"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/managerNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "OData Filter options",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The collection of metrics.",
            "schema": {
              "$ref": "#/definitions/MetricList"
            }
          }
        },
        "deprecated": false,
        "x-ms-odata": "#/definitions/MetricFilter",
        "x-ms-pageable": {
          "nextLinkName": null
        },
        "x-ms-examples": {
          "DevicesListMetrics": {
            "$ref": "./examples/DevicesListMetrics.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/metricsDefinitions": {
      "get": {
        "tags": [
          "Devices"
        ],
        "description": "Gets the metric definitions for the specified device.",
        "operationId": "Devices_ListMetricDefinition",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/deviceNameParameter"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/managerNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The collection of metric definitions.",
            "schema": {
              "$ref": "#/definitions/MetricDefinitionList"
            }
          }
        },
        "deprecated": false,
        "x-ms-pageable": {
          "nextLinkName": null
        },
        "x-ms-examples": {
          "DevicesListMetricDefinition": {
            "$ref": "./examples/DevicesListMetricDefinition.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/networkSettings/default": {
      "get": {
        "tags": [
          "DeviceSettings"
        ],
        "description": "Gets the network settings of the specified device.",
        "operationId": "DeviceSettings_GetNetworkSettings",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/deviceNameParameter"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/managerNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The Network settings.",
            "schema": {
              "$ref": "#/definitions/NetworkSettings"
            }
          }
        },
        "deprecated": false,
        "x-ms-examples": {
          "DeviceSettingsGetNetworkSettings": {
            "$ref": "./examples/DeviceSettingsGetNetworkSettings.json"
          }
        }
      },
      "patch": {
        "tags": [
          "DeviceSettings"
        ],
        "description": "Updates the network settings on the specified device.",
        "operationId": "DeviceSettings_UpdateNetworkSettings",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/deviceNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "The network settings to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NetworkSettingsPatch"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/managerNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The Network settings.",
            "schema": {
              "$ref": "#/definitions/NetworkSettings"
            }
          },
          "202": {
            "description": "Accepted the request to update network settings."
          }
        },
        "deprecated": false,
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "DeviceSettingsUpdateNetworkSettings": {
            "$ref": "./examples/DeviceSettingsUpdateNetworkSettings.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/publicEncryptionKey": {
      "post": {
        "tags": [
          "Managers"
        ],
        "description": "Returns the public encryption key of the device.",
        "operationId": "Managers_GetDevicePublicEncryptionKey",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/deviceNameParameter"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/managerNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The public key.",
            "schema": {
              "$ref": "#/definitions/PublicKey"
            }
          }
        },
        "deprecated": false,
        "x-ms-examples": {
          "ManagersGetDevicePublicEncryptionKey": {
            "$ref": "./examples/ManagersGetDevicePublicEncryptionKey.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/scanForUpdates": {
      "post": {
        "tags": [
          "Devices"
        ],
        "description": "Scans for updates on the device.",
        "operationId": "Devices_ScanForUpdates",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/deviceNameParameter"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/managerNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted the request to scan for updates."
          },
          "204": {
            "description": "Successfully scanned for updates."
          }
        },
        "deprecated": false,
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "DevicesScanForUpdates": {
            "$ref": "./examples/DevicesScanForUpdates.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/securitySettings/default": {
      "get": {
        "tags": [
          "DeviceSettings"
        ],
        "description": "Returns the Security properties of the specified device name.",
        "operationId": "DeviceSettings_GetSecuritySettings",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/deviceNameParameter"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/managerNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Device Security settings.",
            "schema": {
              "$ref": "#/definitions/SecuritySettings"
            }
          }
        },
        "deprecated": false,
        "x-ms-examples": {
          "DeviceSettingsGetSecuritySettings": {
            "$ref": "./examples/DeviceSettingsGetSecuritySettings.json"
          }
        }
      },
      "patch": {
        "tags": [
          "DeviceSettings"
        ],
        "description": "Patch Security properties of the specified device name.",
        "operationId": "DeviceSettings_UpdateSecuritySettings",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/deviceNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "The security settings properties to be patched.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SecuritySettingsPatch"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/managerNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The device Security settings.",
            "schema": {
              "$ref": "#/definitions/SecuritySettings"
            }
          },
          "202": {
            "description": "Accepted the request to update device security settings."
          }
        },
        "deprecated": false,
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "DeviceSettingsUpdateSecuritySettings": {
            "$ref": "./examples/DeviceSettingsUpdateSecuritySettings.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/securitySettings/default/syncRemoteManagementCertificate": {
      "post": {
        "tags": [
          "DeviceSettings"
        ],
        "description": "sync Remote management Certificate between appliance and Service",
        "operationId": "DeviceSettings_SyncRemotemanagementCertificate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/deviceNameParameter"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/managerNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted the request to sync Remote Management certificate settings."
          },
          "204": {
            "description": "Successfully synced Remote Management certificate settings."
          }
        },
        "deprecated": false,
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "DeviceSettingsSyncRemotemanagementCertificate": {
            "$ref": "./examples/DeviceSettingsSyncRemotemanagementCertificate.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/sendTestAlertEmail": {
      "post": {
        "tags": [
          "Alerts"
        ],
        "description": "Sends a test alert email.",
        "operationId": "Alerts_SendTestEmail",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/deviceNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "The send test alert email request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SendTestAlertEmailRequest"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/managerNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully sent the test email."
          }
        },
        "deprecated": false,
        "x-ms-examples": {
          "AlertsSendTestEmail": {
            "$ref": "./examples/AlertsSendTestEmail.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/timeSettings/default": {
      "get": {
        "tags": [
          "DeviceSettings"
        ],
        "description": "Gets the time settings of the specified device.",
        "operationId": "DeviceSettings_GetTimeSettings",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/deviceNameParameter"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/managerNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The time settings.",
            "schema": {
              "$ref": "#/definitions/TimeSettings"
            }
          }
        },
        "deprecated": false,
        "x-ms-examples": {
          "DeviceSettingsGetTimeSettings": {
            "$ref": "./examples/DeviceSettingsGetTimeSettings.json"
          }
        }
      },
      "put": {
        "tags": [
          "DeviceSettings"
        ],
        "description": "Creates or updates the time settings of the specified device.",
        "operationId": "DeviceSettings_CreateOrUpdateTimeSettings",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/deviceNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "The time settings to be added or updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TimeSettings"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/managerNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully created or updated the time settings.",
            "schema": {
              "$ref": "#/definitions/TimeSettings"
            }
          },
          "202": {
            "description": "Accepted the request to create or update the time settings."
          }
        },
        "deprecated": false,
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "DeviceSettingsCreateOrUpdateTimeSettings": {
            "$ref": "./examples/DeviceSettingsCreateOrUpdateTimeSettings.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/updateSummary/default": {
      "get": {
        "tags": [
          "Devices"
        ],
        "description": "Returns the update summary of the specified device name.",
        "operationId": "Devices_GetUpdateSummary",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/deviceNameParameter"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/managerNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The update summary.",
            "schema": {
              "$ref": "#/definitions/Updates"
            }
          }
        },
        "deprecated": false,
        "x-ms-examples": {
          "DevicesGetUpdateSummary": {
            "$ref": "./examples/DevicesGetUpdateSummary.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/volumeContainers": {
      "get": {
        "tags": [
          "VolumeContainers"
        ],
        "description": "Gets all the volume containers in a device.",
        "operationId": "VolumeContainers_ListByDevice",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/deviceNameParameter"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/managerNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The VolumeContainer List",
            "schema": {
              "$ref": "#/definitions/VolumeContainerList"
            }
          }
        },
        "deprecated": false,
        "x-ms-pageable": {
          "nextLinkName": null
        },
        "x-ms-examples": {
          "VolumeContainersListByDevice": {
            "$ref": "./examples/VolumeContainersListByDevice.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/volumeContainers/{volumeContainerName}": {
      "get": {
        "tags": [
          "VolumeContainers"
        ],
        "description": "Gets the properties of the specified volume container name.",
        "operationId": "VolumeContainers_Get",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/deviceNameParameter"
          },
          {
            "name": "volumeContainerName",
            "in": "path",
            "description": "The name of the volume container.",
            "required": true,
            "type": "string",
            "x-ms-skip-url-encoding": true
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/managerNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The VolumeContainer.",
            "schema": {
              "$ref": "#/definitions/VolumeContainer"
            }
          }
        },
        "deprecated": false,
        "x-ms-examples": {
          "VolumeContainersGet": {
            "$ref": "./examples/VolumeContainersGet.json"
          }
        }
      },
      "put": {
        "tags": [
          "VolumeContainers"
        ],
        "description": "Creates or updates the volume container.",
        "operationId": "VolumeContainers_CreateOrUpdate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/deviceNameParameter"
          },
          {
            "name": "volumeContainerName",
            "in": "path",
            "description": "The name of the volume container.",
            "required": true,
            "type": "string",
            "x-ms-skip-url-encoding": true
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "The volume container to be added or updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VolumeContainer"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/managerNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully created or updated the Volume Container.",
            "schema": {
              "$ref": "#/definitions/VolumeContainer"
            }
          },
          "202": {
            "description": "Accepted the request to create or update the Volume Container"
          }
        },
        "deprecated": false,
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "VolumeContainersCreateOrUpdate": {
            "$ref": "./examples/VolumeContainersCreateOrUpdate.json"
          }
        }
      },
      "delete": {
        "tags": [
          "VolumeContainers"
        ],
        "description": "Deletes the volume container.",
        "operationId": "VolumeContainers_Delete",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/deviceNameParameter"
          },
          {
            "name": "volumeContainerName",
            "in": "path",
            "description": "The name of the volume container.",
            "required": true,
            "type": "string",
            "x-ms-skip-url-encoding": true
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/managerNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted the request to delete the Volume Container."
          },
          "204": {
            "description": "Successfully deleted Volume Container."
          }
        },
        "deprecated": false,
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "VolumeContainersDelete": {
            "$ref": "./examples/VolumeContainersDelete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/volumeContainers/{volumeContainerName}/metrics": {
      "get": {
        "tags": [
          "VolumeContainers"
        ],
        "description": "Gets the metrics for the specified volume container.",
        "operationId": "VolumeContainers_ListMetrics",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/deviceNameParameter"
          },
          {
            "name": "volumeContainerName",
            "in": "path",
            "description": "The volume container name.",
            "required": true,
            "type": "string",
            "x-ms-skip-url-encoding": true
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/managerNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "OData Filter options",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The collection of metrics.",
            "schema": {
              "$ref": "#/definitions/MetricList"
            }
          }
        },
        "deprecated": false,
        "x-ms-odata": "#/definitions/MetricFilter",
        "x-ms-pageable": {
          "nextLinkName": null
        },
        "x-ms-examples": {
          "VolumeContainersListMetrics": {
            "$ref": "./examples/VolumeContainersListMetrics.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/volumeContainers/{volumeContainerName}/metricsDefinitions": {
      "get": {
        "tags": [
          "VolumeContainers"
        ],
        "description": "Gets the metric definitions for the specified volume container.",
        "operationId": "VolumeContainers_ListMetricDefinition",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/deviceNameParameter"
          },
          {
            "name": "volumeContainerName",
            "in": "path",
            "description": "The volume container name.",
            "required": true,
            "type": "string",
            "x-ms-skip-url-encoding": true
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/managerNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The collection of metric definitions.",
            "schema": {
              "$ref": "#/definitions/MetricDefinitionList"
            }
          }
        },
        "deprecated": false,
        "x-ms-pageable": {
          "nextLinkName": null
        },
        "x-ms-examples": {
          "VolumeContainersListMetricDefinition": {
            "$ref": "./examples/VolumeContainersListMetricDefinition.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/volumeContainers/{volumeContainerName}/volumes": {
      "get": {
        "tags": [
          "Volumes"
        ],
        "description": "Retrieves all the volumes in a volume container.",
        "operationId": "Volumes_ListByVolumeContainer",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/deviceNameParameter"
          },
          {
            "name": "volumeContainerName",
            "in": "path",
            "description": "The volume container name.",
            "required": true,
            "type": "string",
            "x-ms-skip-url-encoding": true
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/managerNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The collection of volumes.",
            "schema": {
              "$ref": "#/definitions/VolumeList"
            }
          }
        },
        "deprecated": false,
        "x-ms-pageable": {
          "nextLinkName": null
        },
        "x-ms-examples": {
          "VolumesListByVolumeContainer": {
            "$ref": "./examples/VolumesListByVolumeContainer.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/volumeContainers/{volumeContainerName}/volumes/{volumeName}": {
      "get": {
        "tags": [
          "Volumes"
        ],
        "description": "Returns the properties of the specified volume name.",
        "operationId": "Volumes_Get",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/deviceNameParameter"
          },
          {
            "name": "volumeContainerName",
            "in": "path",
            "description": "The volume container name.",
            "required": true,
            "type": "string",
            "x-ms-skip-url-encoding": true
          },
          {
            "name": "volumeName",
            "in": "path",
            "description": "The volume name.",
            "required": true,
            "type": "string",
            "x-ms-skip-url-encoding": true
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/managerNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The volume.",
            "schema": {
              "$ref": "#/definitions/Volume"
            }
          }
        },
        "deprecated": false,
        "x-ms-examples": {
          "VolumesGet": {
            "$ref": "./examples/VolumesGet.json"
          }
        }
      },
      "put": {
        "tags": [
          "Volumes"
        ],
        "description": "Creates or updates the volume.",
        "operationId": "Volumes_CreateOrUpdate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/deviceNameParameter"
          },
          {
            "name": "volumeContainerName",
            "in": "path",
            "description": "The volume container name.",
            "required": true,
            "type": "string",
            "x-ms-skip-url-encoding": true
          },
          {
            "name": "volumeName",
            "in": "path",
            "description": "The volume name.",
            "required": true,
            "type": "string",
            "x-ms-skip-url-encoding": true
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Volume to be created or updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Volume"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/managerNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully created or updated the volume.",
            "schema": {
              "$ref": "#/definitions/Volume"
            }
          },
          "202": {
            "description": "Accepted the request to create or update the volume."
          }
        },
        "deprecated": false,
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "VolumesCreateOrUpdate": {
            "$ref": "./examples/VolumesCreateOrUpdate.json"
          }
        }
      },
      "delete": {
        "tags": [
          "Volumes"
        ],
        "description": "Deletes the volume.",
        "operationId": "Volumes_Delete",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/deviceNameParameter"
          },
          {
            "name": "volumeContainerName",
            "in": "path",
            "description": "The volume container name.",
            "required": true,
            "type": "string",
            "x-ms-skip-url-encoding": true
          },
          {
            "name": "volumeName",
            "in": "path",
            "description": "The volume name.",
            "required": true,
            "type": "string",
            "x-ms-skip-url-encoding": true
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/managerNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted the request to create or update the volume."
          },
          "204": {
            "description": "Successfully deleted the volume."
          }
        },
        "deprecated": false,
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "VolumesDelete": {
            "$ref": "./examples/VolumesDelete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/volumeContainers/{volumeContainerName}/volumes/{volumeName}/metrics": {
      "get": {
        "tags": [
          "Volumes"
        ],
        "description": "Gets the metrics for the specified volume.",
        "operationId": "Volumes_ListMetrics",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/deviceNameParameter"
          },
          {
            "name": "volumeContainerName",
            "in": "path",
            "description": "The volume container name.",
            "required": true,
            "type": "string",
            "x-ms-skip-url-encoding": true
          },
          {
            "name": "volumeName",
            "in": "path",
            "description": "The volume name.",
            "required": true,
            "type": "string",
            "x-ms-skip-url-encoding": true
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/managerNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "OData Filter options",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The collection of metrics",
            "schema": {
              "$ref": "#/definitions/MetricList"
            }
          }
        },
        "deprecated": false,
        "x-ms-odata": "#/definitions/MetricFilter",
        "x-ms-pageable": {
          "nextLinkName": null
        },
        "x-ms-examples": {
          "VolumesListMetrics": {
            "$ref": "./examples/VolumesListMetrics.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/volumeContainers/{volumeContainerName}/volumes/{volumeName}/metricsDefinitions": {
      "get": {
        "tags": [
          "Volumes"
        ],
        "description": "Gets the metric definitions for the specified volume.",
        "operationId": "Volumes_ListMetricDefinition",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/deviceNameParameter"
          },
          {
            "name": "volumeContainerName",
            "in": "path",
            "description": "The volume container name.",
            "required": true,
            "type": "string",
            "x-ms-skip-url-encoding": true
          },
          {
            "name": "volumeName",
            "in": "path",
            "description": "The volume name.",
            "required": true,
            "type": "string",
            "x-ms-skip-url-encoding": true
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/managerNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The collection of metric definitions.",
            "schema": {
              "$ref": "#/definitions/MetricDefinitionList"
            }
          }
        },
        "deprecated": false,
        "x-ms-pageable": {
          "nextLinkName": null
        },
        "x-ms-examples": {
          "VolumesListMetricDefinition": {
            "$ref": "./examples/VolumesListMetricDefinition.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/volumes": {
      "get": {
        "tags": [
          "Volumes"
        ],
        "description": "Retrieves all the volumes in a device.",
        "operationId": "Volumes_ListByDevice",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/deviceNameParameter"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/managerNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The collection of volumes.",
            "schema": {
              "$ref": "#/definitions/VolumeList"
            }
          }
        },
        "deprecated": false,
        "x-ms-pageable": {
          "nextLinkName": null
        },
        "x-ms-examples": {
          "VolumesListByDevice": {
            "$ref": "./examples/VolumesListByDevice.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{sourceDeviceName}/failover": {
      "post": {
        "tags": [
          "Devices"
        ],
        "description": "Failovers a set of volume containers from a specified source device to a target device.",
        "operationId": "Devices_Failover",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "sourceDeviceName",
            "in": "path",
            "description": "The source device name on which failover is performed.",
            "required": true,
            "type": "string",
            "x-ms-skip-url-encoding": true
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "FailoverRequest containing the source device and the list of volume containers to be failed over.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FailoverRequest"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/managerNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted the request to failover the device."
          },
          "204": {
            "description": "Successfully completed failover of the device."
          }
        },
        "deprecated": false,
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "DevicesFailover": {
            "$ref": "./examples/DevicesFailover.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{sourceDeviceName}/listFailoverTargets": {
      "post": {
        "tags": [
          "Devices"
        ],
        "description": "Given a list of volume containers to be failed over from a source device, this method returns the eligibility result, as a failover target, for all devices under that resource.",
        "operationId": "Devices_ListFailoverTargets",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "sourceDeviceName",
            "in": "path",
            "description": "The source device name on which failover is performed.",
            "required": true,
            "type": "string",
            "x-ms-skip-url-encoding": true
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "ListFailoverTargetsRequest containing the list of volume containers to be failed over.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ListFailoverTargetsRequest"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/managerNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The list of target devices and their eligibility for failover.",
            "schema": {
              "$ref": "#/definitions/FailoverTargetsList"
            }
          }
        },
        "deprecated": false,
        "x-ms-pageable": {
          "nextLinkName": null
        },
        "x-ms-examples": {
          "DevicesListFailoverTargets": {
            "$ref": "./examples/DevicesListFailoverTargets.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/encryptionSettings/default": {
      "get": {
        "tags": [
          "Managers"
        ],
        "description": "Returns the encryption settings of the manager.",
        "operationId": "Managers_GetEncryptionSettings",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/managerNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The encryption settings.",
            "schema": {
              "$ref": "#/definitions/EncryptionSettings"
            }
          }
        },
        "deprecated": false,
        "x-ms-examples": {
          "ManagersGetEncryptionSettings": {
            "$ref": "./examples/ManagersGetEncryptionSettings.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/extendedInformation/vaultExtendedInfo": {
      "get": {
        "tags": [
          "Managers"
        ],
        "description": "Returns the extended information of the specified manager name.",
        "operationId": "Managers_GetExtendedInfo",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/managerNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The manager extended information.",
            "schema": {
              "$ref": "#/definitions/ManagerExtendedInfo"
            }
          }
        },
        "deprecated": false,
        "x-ms-examples": {
          "ManagersGetExtendedInfo": {
            "$ref": "./examples/ManagersGetExtendedInfo.json"
          }
        }
      },
      "put": {
        "tags": [
          "Managers"
        ],
        "description": "Creates the extended info of the manager.",
        "operationId": "Managers_CreateExtendedInfo",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "parameters",
            "in": "body",
            "description": "The manager extended information.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ManagerExtendedInfo"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/managerNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The extended information on the manager has been successfully created",
            "schema": {
              "$ref": "#/definitions/ManagerExtendedInfo"
            }
          }
        },
        "deprecated": false,
        "x-ms-examples": {
          "ManagersCreateExtendedInfo": {
            "$ref": "./examples/ManagersCreateExtendedInfo.json"
          }
        }
      },
      "delete": {
        "tags": [
          "Managers"
        ],
        "description": "Deletes the extended info of the manager.",
        "operationId": "Managers_DeleteExtendedInfo",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/managerNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "204": {
            "description": "The extended information on the manager has been successfully deleted"
          }
        },
        "deprecated": false,
        "x-ms-examples": {
          "ManagersDeleteExtendedInfo": {
            "$ref": "./examples/ManagersDeleteExtendedInfo.json"
          }
        }
      },
      "patch": {
        "tags": [
          "Managers"
        ],
        "description": "Updates the extended info of the manager.",
        "operationId": "Managers_UpdateExtendedInfo",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "parameters",
            "in": "body",
            "description": "The manager extended information.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ManagerExtendedInfo"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/managerNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "Pass the ETag of ExtendedInfo fetched from GET call",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The extended information on the manager has been successfully created",
            "schema": {
              "$ref": "#/definitions/ManagerExtendedInfo"
            }
          }
        },
        "deprecated": false,
        "x-ms-examples": {
          "ManagersUpdateExtendedInfo": {
            "$ref": "./examples/ManagersUpdateExtendedInfo.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/features": {
      "get": {
        "tags": [
          "Managers"
        ],
        "description": "Lists the features and their support status",
        "operationId": "Managers_ListFeatureSupportStatus",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/managerNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "OData Filter options",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The collection of features.",
            "schema": {
              "$ref": "#/definitions/FeatureList"
            }
          }
        },
        "deprecated": false,
        "x-ms-odata": "#/definitions/FeatureFilter",
        "x-ms-pageable": {
          "nextLinkName": null
        },
        "x-ms-examples": {
          "ManagersListFeatureSupportStatus": {
            "$ref": "./examples/ManagersListFeatureSupportStatus.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/jobs": {
      "get": {
        "tags": [
          "Jobs"
        ],
        "description": "Gets all the jobs for the specified manager. With optional OData query parameters, a filtered set of jobs is returned.",
        "operationId": "Jobs_ListByManager",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/managerNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "OData Filter options",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The collection of device jobs on all devices under the specified manager.",
            "schema": {
              "$ref": "#/definitions/JobList"
            }
          }
        },
        "deprecated": false,
        "x-ms-odata": "#/definitions/JobFilter",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "JobsListByManager": {
            "$ref": "./examples/JobsListByManager.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/listActivationKey": {
      "post": {
        "tags": [
          "Managers"
        ],
        "description": "Returns the activation key of the manager.",
        "operationId": "Managers_GetActivationKey",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/managerNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The activation key.",
            "schema": {
              "$ref": "#/definitions/Key"
            }
          }
        },
        "deprecated": false,
        "x-ms-examples": {
          "ManagersGetActivationKey": {
            "$ref": "./examples/ManagersGetActivationKey.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/listPublicEncryptionKey": {
      "post": {
        "tags": [
          "Managers"
        ],
        "description": "Returns the symmetric encrypted public encryption key of the manager.",
        "operationId": "Managers_GetPublicEncryptionKey",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/managerNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The encryption key.",
            "schema": {
              "$ref": "#/definitions/SymmetricEncryptedSecret"
            }
          }
        },
        "deprecated": false,
        "x-ms-examples": {
          "ManagersGetPublicEncryptionKey": {
            "$ref": "./examples/ManagersGetPublicEncryptionKey.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/metrics": {
      "get": {
        "tags": [
          "Managers"
        ],
        "description": "Gets the metrics for the specified manager.",
        "operationId": "Managers_ListMetrics",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/managerNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "OData Filter options",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The collection of metrics.",
            "schema": {
              "$ref": "#/definitions/MetricList"
            }
          }
        },
        "deprecated": false,
        "x-ms-odata": "#/definitions/MetricFilter",
        "x-ms-pageable": {
          "nextLinkName": null
        },
        "x-ms-examples": {
          "ManagersListMetrics": {
            "$ref": "./examples/ManagersListMetrics.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/metricsDefinitions": {
      "get": {
        "tags": [
          "Managers"
        ],
        "description": "Gets the metric definitions for the specified manager.",
        "operationId": "Managers_ListMetricDefinition",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/managerNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The collection of metric definitions.",
            "schema": {
              "$ref": "#/definitions/MetricDefinitionList"
            }
          }
        },
        "deprecated": false,
        "x-ms-pageable": {
          "nextLinkName": null
        },
        "x-ms-examples": {
          "ManagersListMetricDefinition": {
            "$ref": "./examples/ManagersListMetricDefinition.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/provisionCloudAppliance": {
      "post": {
        "tags": [
          "CloudAppliances"
        ],
        "description": "Provisions cloud appliance.",
        "operationId": "CloudAppliances_Provision",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "parameters",
            "in": "body",
            "description": "The cloud appliance",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CloudAppliance"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/managerNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully created job for provision cloud appliance."
          },
          "202": {
            "description": "Accepted the request to provision cloud appliance."
          }
        },
        "deprecated": false,
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "CloudAppliancesProvision": {
            "$ref": "./examples/CloudAppliancesProvision.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/regenerateActivationKey": {
      "post": {
        "tags": [
          "Managers"
        ],
        "description": "Re-generates and returns the activation key of the manager.",
        "operationId": "Managers_RegenerateActivationKey",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/managerNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The regenerated activation key.",
            "schema": {
              "$ref": "#/definitions/Key"
            }
          }
        },
        "deprecated": false,
        "x-ms-examples": {
          "ManagersRegenerateActivationKey": {
            "$ref": "./examples/ManagersRegenerateActivationKey.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/storageAccountCredentials": {
      "get": {
        "tags": [
          "StorageAccountCredentials"
        ],
        "description": "Gets all the storage account credentials in a manager.",
        "operationId": "StorageAccountCredentials_ListByManager",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/managerNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The collection of storage account credentials.",
            "schema": {
              "$ref": "#/definitions/StorageAccountCredentialList"
            }
          }
        },
        "deprecated": false,
        "x-ms-pageable": {
          "nextLinkName": null
        },
        "x-ms-examples": {
          "StorageAccountCredentialsListByManager": {
            "$ref": "./examples/StorageAccountCredentialsListByManager.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/storageAccountCredentials/{storageAccountCredentialName}": {
      "get": {
        "tags": [
          "StorageAccountCredentials"
        ],
        "description": "Gets the properties of the specified storage account credential name.",
        "operationId": "StorageAccountCredentials_Get",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "storageAccountCredentialName",
            "in": "path",
            "description": "The name of storage account credential to be fetched.",
            "required": true,
            "type": "string",
            "x-ms-skip-url-encoding": true
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/managerNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The storage account credential.",
            "schema": {
              "$ref": "#/definitions/StorageAccountCredential"
            }
          }
        },
        "deprecated": false,
        "x-ms-examples": {
          "StorageAccountCredentialsGet": {
            "$ref": "./examples/StorageAccountCredentialsGet.json"
          }
        }
      },
      "put": {
        "tags": [
          "StorageAccountCredentials"
        ],
        "description": "Creates or updates the storage account credential.",
        "operationId": "StorageAccountCredentials_CreateOrUpdate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "storageAccountCredentialName",
            "in": "path",
            "description": "The storage account credential name.",
            "required": true,
            "type": "string",
            "x-ms-skip-url-encoding": true
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "The storage account credential to be added or updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/StorageAccountCredential"
            }
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/managerNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully created or updated the storage account credential.",
            "schema": {
              "$ref": "#/definitions/StorageAccountCredential"
            }
          },
          "202": {
            "description": "Accepted the request to create or update the storage account credential."
          }
        },
        "deprecated": false,
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "StorageAccountCredentialsCreateOrUpdate": {
            "$ref": "./examples/StorageAccountCredentialsCreateOrUpdate.json"
          }
        }
      },
      "delete": {
        "tags": [
          "StorageAccountCredentials"
        ],
        "description": "Deletes the storage account credential.",
        "operationId": "StorageAccountCredentials_Delete",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "storageAccountCredentialName",
            "in": "path",
            "description": "The name of the storage account credential.",
            "required": true,
            "type": "string",
            "x-ms-skip-url-encoding": true
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/managerNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted the request to delete the storage account credential."
          },
          "204": {
            "description": "Successfully deleted the storage account credential."
          }
        },
        "deprecated": false,
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "StorageAccountCredentialsDelete": {
            "$ref": "./examples/StorageAccountCredentialsDelete.json"
          }
        }
      }
    }
  },
  "definitions": {
    "AccessControlRecord": {
      "description": "The access control record.",
      "required": [
        "properties"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BaseModel"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/AccessControlRecordProperties",
          "description": "The properties of access control record.",
          "x-ms-client-flatten": true
        }
      }
    },
    "AccessControlRecordList": {
      "description": "The collection of access control records.",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "The value.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AccessControlRecord"
          }
        }
      }
    },
    "AccessControlRecordProperties": {
      "description": "The properties of access control record.",
      "required": [
        "initiatorName"
      ],
      "type": "object",
      "properties": {
        "initiatorName": {
          "description": "The iSCSI initiator name (IQN).",
          "type": "string"
        },
        "volumeCount": {
          "format": "int32",
          "description": "The number of volumes using the access control record.",
          "type": "integer",
          "readOnly": true
        }
      }
    },
    "AcsConfiguration": {
      "description": "The ACS configuration.",
      "required": [
        "namespace",
        "realm",
        "serviceUrl"
      ],
      "type": "object",
      "properties": {
        "namespace": {
          "description": "The namespace.",
          "type": "string"
        },
        "realm": {
          "description": "The realm.",
          "type": "string"
        },
        "serviceUrl": {
          "description": "The service URL.",
          "type": "string"
        }
      }
    },
    "Alert": {
      "description": "The alert.",
      "required": [
        "properties"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BaseModel"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/AlertProperties",
          "description": "The properties of the alert.",
          "x-ms-client-flatten": true
        }
      }
    },
    "AlertErrorDetails": {
      "description": "The details of the error for which the alert was raised",
      "type": "object",
      "properties": {
        "errorCode": {
          "description": "The error code",
          "type": "string"
        },
        "errorMessage": {
          "description": "The error message",
          "type": "string"
        },
        "occurences": {
          "format": "int32",
          "description": "The number of occurrences",
          "type": "integer"
        }
      }
    },
    "AlertFilter": {
      "description": "The OData filters to be used for Alert",
      "type": "object",
      "properties": {
        "status": {
          "description": "Specifies the status of the alerts to be filtered. Only 'Equality' operator is supported for this property.",
          "enum": [
            "Active",
            "Cleared"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "AlertStatus",
            "modelAsString": false
          }
        },
        "severity": {
          "description": "Specifies the severity of the alerts to be filtered. Only 'Equality' operator is supported for this property.",
          "enum": [
            "Informational",
            "Warning",
            "Critical"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "AlertSeverity",
            "modelAsString": false
          }
        },
        "sourceType": {
          "description": "Specifies the source type of the alerts to be filtered. Only 'Equality' operator is supported for this property.",
          "enum": [
            "Resource",
            "Device"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "AlertSourceType",
            "modelAsString": false
          }
        },
        "sourceName": {
          "description": "Specifies the source name of the alerts to be filtered. Only 'Equality' operator is supported for this property.",
          "type": "string"
        },
        "appearedOnTime": {
          "format": "date-time",
          "description": "Specifies the appeared time (in UTC) of the alerts to be filtered. Only 'Greater-Than' and 'Lesser-Than' operators are supported for this property.",
          "type": "string"
        }
      }
    },
    "AlertList": {
      "description": "The collection of alerts.",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "The value.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Alert"
          }
        },
        "nextLink": {
          "description": "The URI of the next page of alerts.",
          "type": "string"
        }
      }
    },
    "AlertNotificationProperties": {
      "description": "The properties of the alert notification settings.",
      "required": [
        "emailNotification"
      ],
      "type": "object",
      "properties": {
        "emailNotification": {
          "description": "Indicates whether email notification enabled or not.",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "AlertEmailNotificationStatus",
            "modelAsString": false
          }
        },
        "alertNotificationCulture": {
          "description": "The alert notification culture.",
          "type": "string"
        },
        "notificationToServiceOwners": {
          "description": "The value indicating whether alert notification enabled for admin or not.",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "AlertEmailNotificationStatus",
            "modelAsString": false
          }
        },
        "additionalRecipientEmailList": {
          "description": "The alert notification email list.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "AlertProperties": {
      "description": "The properties of alert",
      "required": [
        "title",
        "scope",
        "alertType",
        "appearedAtTime",
        "appearedAtSourceTime",
        "source",
        "severity",
        "status"
      ],
      "type": "object",
      "properties": {
        "title": {
          "description": "The title of the alert",
          "type": "string"
        },
        "scope": {
          "description": "The scope of the alert",
          "enum": [
            "Resource",
            "Device"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "AlertScope",
            "modelAsString": false
          }
        },
        "alertType": {
          "description": "The type of the alert",
          "type": "string"
        },
        "appearedAtTime": {
          "format": "date-time",
          "description": "The UTC time at which the alert was raised",
          "type": "string"
        },
        "appearedAtSourceTime": {
          "format": "date-time",
          "description": "The source time at which the alert was raised",
          "type": "string"
        },
        "clearedAtTime": {
          "format": "date-time",
          "description": "The UTC time at which the alert was cleared",
          "type": "string"
        },
        "clearedAtSourceTime": {
          "format": "date-time",
          "description": "The source time at which the alert was cleared",
          "type": "string"
        },
        "source": {
          "$ref": "#/definitions/AlertSource",
          "description": "The source at which the alert was raised"
        },
        "recommendation": {
          "description": "The recommended action for the issue raised in the alert",
          "type": "string"
        },
        "resolutionReason": {
          "description": "The reason for resolving the alert",
          "type": "string"
        },
        "severity": {
          "description": "The severity of the alert",
          "enum": [
            "Informational",
            "Warning",
            "Critical"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "AlertSeverity",
            "modelAsString": false
          }
        },
        "status": {
          "description": "The current status of the alert",
          "enum": [
            "Active",
            "Cleared"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "AlertStatus",
            "modelAsString": false
          }
        },
        "errorDetails": {
          "$ref": "#/definitions/AlertErrorDetails",
          "description": "The details of the error for which the alert was raised"
        },
        "detailedInformation": {
          "description": "More details about the alert",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "AlertSettings": {
      "description": "The alert settings.",
      "required": [
        "properties"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BaseModel"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/AlertNotificationProperties",
          "description": "The properties of the alert notification settings.",
          "x-ms-client-flatten": true
        }
      }
    },
    "AlertSource": {
      "description": "The source details at which the alert was raised",
      "type": "object",
      "properties": {
        "name": {
          "description": "The name of the source",
          "type": "string"
        },
        "timeZone": {
          "description": "The time zone of the source",
          "type": "string"
        },
        "alertSourceType": {
          "description": "The source type of the alert",
          "enum": [
            "Resource",
            "Device"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "AlertSourceType",
            "modelAsString": false
          }
        }
      }
    },
    "AsymmetricEncryptedSecret": {
      "description": "Represent the secrets intended for encryption with asymmetric key pair.",
      "required": [
        "value",
        "encryptionAlgorithm"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "The value of the secret.",
          "type": "string"
        },
        "encryptionCertThumbprint": {
          "description": "Thumbprint certificate that was used to encrypt \"Value\". If the value in unencrypted, it will be null.",
          "type": "string"
        },
        "encryptionAlgorithm": {
          "description": "The algorithm used to encrypt \"Value\".",
          "enum": [
            "None",
            "AES256",
            "RSAES_PKCS1_v_1_5"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "EncryptionAlgorithm",
            "modelAsString": false
          }
        }
      }
    },
    "AvailableProviderOperation": {
      "description": "Represents available provider operation.",
      "type": "object",
      "properties": {
        "name": {
          "description": "The name of the operation being performed on a particular object. Name format: \"{resourceProviderNamespace}/{resourceType}/{read|write|delete|action}\". Eg. Microsoft.StorSimple/managers/devices/volumeContainers/read, Microsoft.StorSimple/managers/devices/alerts/clearAlerts/action",
          "type": "string"
        },
        "display": {
          "$ref": "#/definitions/AvailableProviderOperationDisplay",
          "description": "Contains the localized display information for this particular operation/action."
        },
        "origin": {
          "description": "The intended executor of the operation; governs the display of the operation in the RBAC UX and the audit logs UX. Default value is \"user,system\"",
          "type": "string"
        },
        "properties": {
          "$ref": "#/definitions/AvailableProviderOperationProperties",
          "description": "Reserved for future use.",
          "x-ms-client-flatten": true
        }
      }
    },
    "AvailableProviderOperationDisplay": {
      "description": "Contains the localized display information for this particular operation/action. These value will be used by several clients for (a) custom role definitions for RBAC, (b) complex query filters for the event service and (c) audit history/records for management operations.",
      "type": "object",
      "properties": {
        "provider": {
          "description": "The localized friendly form of the resource provider name - it is expected to also include the publisher/company responsible. It should use Title Casing and begin with 'Microsoft' for 1st party services.",
          "type": "string"
        },
        "resource": {
          "description": "The localized friendly form of the resource type related to this action/operation - it should match the public documentation for the resource provider. It should use Title Casing - for examples, please refer to the 'name' section.",
          "type": "string"
        },
        "operation": {
          "description": "The localized friendly name for the operation, as it should be shown to the user. It should be concise (to fit in drop downs) but clear (i.e. self-documenting). It should use Title Casing and include the entity/resource to which it applies.",
          "type": "string"
        },
        "description": {
          "description": "The localized friendly description for the operation, as it should be shown to the user. It should be thorough, yet concise - it will be used in tool tips and detailed views.",
          "type": "string"
        }
      }
    },
    "AvailableProviderOperationList": {
      "description": "List of available provider operations.",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "The value.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AvailableProviderOperation"
          }
        },
        "nextLink": {
          "description": "The NextLink.",
          "type": "string"
        }
      }
    },
    "AvailableProviderOperationProperties": {
      "description": "Represents properties of AvailableProviderOperation",
      "type": "object",
      "properties": {}
    },
    "Backup": {
      "description": "The backup.",
      "required": [
        "properties"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BaseModel"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/BackupProperties",
          "description": "The properties of the backup.",
          "x-ms-client-flatten": true
        }
      }
    },
    "BackupElement": {
      "description": "The backup element.",
      "required": [
        "elementId",
        "elementName",
        "elementType",
        "sizeInBytes",
        "volumeName",
        "volumeContainerId"
      ],
      "type": "object",
      "properties": {
        "elementId": {
          "description": "The path ID that uniquely identifies the backup element.",
          "type": "string"
        },
        "elementName": {
          "description": "The name of the backup element.",
          "type": "string"
        },
        "elementType": {
          "description": "The hierarchical type of the backup element.",
          "type": "string"
        },
        "sizeInBytes": {
          "format": "int64",
          "description": "The size in bytes.",
          "type": "integer"
        },
        "volumeName": {
          "description": "The name of the volume.",
          "type": "string"
        },
        "volumeContainerId": {
          "description": "The path ID of the volume container.",
          "type": "string"
        },
        "volumeType": {
          "description": "The volume type.",
          "enum": [
            "Tiered",
            "Archival",
            "LocallyPinned"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "VolumeType",
            "modelAsString": false
          }
        }
      }
    },
    "BackupFilter": {
      "description": "The OData filters to be used for backups.",
      "type": "object",
      "properties": {
        "backupPolicyId": {
          "description": "Specifies the backupPolicyId of the backups to be filtered. Only 'Equality' operator is supported for this property.",
          "type": "string"
        },
        "volumeId": {
          "description": "Specifies the volumeId of the backups to be filtered. Only 'Equality' operator is supported for this property.",
          "type": "string"
        },
        "createdTime": {
          "format": "date-time",
          "description": "Specifies the creation time of the backups to be filtered. Only 'Greater Than or Equal To' and 'Lesser Than or Equal To' operators are supported for this property.",
          "type": "string"
        }
      }
    },
    "BackupList": {
      "description": "The collection of backups.",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "The value.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Backup"
          }
        },
        "nextLink": {
          "description": "The NextLink.",
          "type": "string"
        }
      }
    },
    "BackupPolicy": {
      "description": "The backup policy.",
      "required": [
        "properties"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BaseModel"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/BackupPolicyProperties",
          "description": "The properties of the backup policy.",
          "x-ms-client-flatten": true
        }
      }
    },
    "BackupPolicyList": {
      "description": "The collection of backup policies.",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "The value.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/BackupPolicy"
          }
        }
      }
    },
    "BackupPolicyProperties": {
      "description": "The properties of the backup policy.",
      "required": [
        "volumeIds"
      ],
      "type": "object",
      "properties": {
        "volumeIds": {
          "description": "The path IDs of the volumes which are part of the backup policy.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "nextBackupTime": {
          "format": "date-time",
          "description": "The time of the next backup for the backup policy.",
          "type": "string",
          "readOnly": true
        },
        "lastBackupTime": {
          "format": "date-time",
          "description": "The time of the last backup for the backup policy.",
          "type": "string",
          "readOnly": true
        },
        "schedulesCount": {
          "format": "int64",
          "description": "The count of schedules the backup policy contains.",
          "type": "integer",
          "readOnly": true
        },
        "scheduledBackupStatus": {
          "description": "Indicates whether at least one of the schedules in the backup policy is active or not.",
          "enum": [
            "Disabled",
            "Enabled"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "ScheduledBackupStatus",
            "modelAsString": false
          }
        },
        "backupPolicyCreationType": {
          "description": "The backup policy creation type. Indicates whether this was created through SaaS or through StorSimple Snapshot Manager.",
          "enum": [
            "BySaaS",
            "BySSM"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "BackupPolicyCreationType",
            "modelAsString": false
          }
        },
        "ssmHostName": {
          "description": "If the backup policy was created by StorSimple Snapshot Manager, then this field indicates the hostname of the StorSimple Snapshot Manager.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "BackupProperties": {
      "description": "The properties of the backup.",
      "required": [
        "createdOn",
        "sizeInBytes",
        "elements"
      ],
      "type": "object",
      "properties": {
        "createdOn": {
          "format": "date-time",
          "description": "The time when the backup was created.",
          "type": "string"
        },
        "sizeInBytes": {
          "format": "int64",
          "description": "The backup size in bytes.",
          "type": "integer"
        },
        "backupType": {
          "description": "The type of the backup.",
          "enum": [
            "LocalSnapshot",
            "CloudSnapshot"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "BackupType",
            "modelAsString": false
          }
        },
        "backupJobCreationType": {
          "description": "The backup job creation type.",
          "enum": [
            "Adhoc",
            "BySchedule",
            "BySSM"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "BackupJobCreationType",
            "modelAsString": false
          }
        },
        "backupPolicyId": {
          "description": "The path ID of the backup policy.",
          "type": "string"
        },
        "ssmHostName": {
          "description": "The StorSimple Snapshot Manager host name.",
          "type": "string"
        },
        "elements": {
          "description": "The backup elements.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/BackupElement"
          }
        }
      }
    },
    "BackupSchedule": {
      "description": "The backup schedule.",
      "required": [
        "properties"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BaseModel"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/BackupScheduleProperties",
          "description": "The properties of the backup schedule.",
          "x-ms-client-flatten": true
        }
      }
    },
    "BackupScheduleList": {
      "description": "The backup schedule list.",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "The value.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/BackupSchedule"
          }
        }
      }
    },
    "BackupScheduleProperties": {
      "description": "The properties of the backup schedule.",
      "required": [
        "scheduleRecurrence",
        "backupType",
        "retentionCount",
        "startTime",
        "scheduleStatus"
      ],
      "type": "object",
      "properties": {
        "scheduleRecurrence": {
          "$ref": "#/definitions/ScheduleRecurrence",
          "description": "The schedule recurrence."
        },
        "backupType": {
          "description": "The type of backup which needs to be taken.",
          "enum": [
            "LocalSnapshot",
            "CloudSnapshot"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "BackupType",
            "modelAsString": false
          }
        },
        "retentionCount": {
          "format": "int64",
          "description": "The number of backups to be retained.",
          "type": "integer"
        },
        "startTime": {
          "format": "date-time",
          "description": "The start time of the schedule.",
          "type": "string"
        },
        "scheduleStatus": {
          "description": "The schedule status.",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "ScheduleStatus",
            "modelAsString": false
          }
        },
        "lastSuccessfulRun": {
          "format": "date-time",
          "description": "The last successful backup run which was triggered for the schedule.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "BandwidthRateSettingProperties": {
      "description": "The properties of the bandwidth setting.",
      "required": [
        "schedules"
      ],
      "type": "object",
      "properties": {
        "schedules": {
          "description": "The schedules.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/BandwidthSchedule"
          }
        },
        "volumeCount": {
          "format": "int32",
          "description": "The number of volumes that uses the bandwidth setting.",
          "type": "integer",
          "readOnly": true
        }
      }
    },
    "BandwidthSchedule": {
      "description": "The schedule for bandwidth setting.",
      "required": [
        "start",
        "stop",
        "rateInMbps",
        "days"
      ],
      "type": "object",
      "properties": {
        "start": {
          "$ref": "#/definitions/Time",
          "description": "The start time of the schedule."
        },
        "stop": {
          "$ref": "#/definitions/Time",
          "description": "The stop time of the schedule."
        },
        "rateInMbps": {
          "format": "int32",
          "description": "The rate in Mbps.",
          "type": "integer"
        },
        "days": {
          "description": "The days of the week when this schedule is applicable.",
          "type": "array",
          "items": {
            "enum": [
              "Sunday",
              "Monday",
              "Tuesday",
              "Wednesday",
              "Thursday",
              "Friday",
              "Saturday"
            ],
            "type": "string",
            "x-ms-enum": {
              "name": "DayOfWeek",
              "modelAsString": false
            }
          }
        }
      }
    },
    "BandwidthSetting": {
      "description": "The bandwidth setting.",
      "required": [
        "properties"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BaseModel"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/BandwidthRateSettingProperties",
          "description": "The properties of the bandwidth setting.",
          "x-ms-client-flatten": true
        }
      }
    },
    "BandwidthSettingList": {
      "description": "The collection of bandwidth setting entities.",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "The value.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/BandwidthSetting"
          }
        }
      }
    },
    "BaseModel": {
      "description": "Represents the base class for all other ARM object models",
      "type": "object",
      "properties": {
        "id": {
          "description": "The path ID that uniquely identifies the object.",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "description": "The name of the object.",
          "type": "string",
          "readOnly": true
        },
        "type": {
          "description": "The hierarchical type of the object.",
          "type": "string",
          "readOnly": true
        },
        "kind": {
          "description": "The Kind of the object. Currently only Series8000 is supported",
          "enum": [
            "Series8000"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "Kind",
            "modelAsString": false
          }
        }
      }
    },
    "ChapSettings": {
      "description": "The Challenge-Handshake Authentication Protocol (CHAP) settings.",
      "type": "object",
      "properties": {
        "initiatorUser": {
          "description": "The CHAP initiator user.",
          "type": "string"
        },
        "initiatorSecret": {
          "$ref": "#/definitions/AsymmetricEncryptedSecret",
          "description": "The CHAP initiator secret."
        },
        "targetUser": {
          "description": "The CHAP target user.",
          "type": "string"
        },
        "targetSecret": {
          "$ref": "#/definitions/AsymmetricEncryptedSecret",
          "description": "The target secret."
        }
      }
    },
    "ClearAlertRequest": {
      "description": "The request for clearing the alert",
      "required": [
        "alerts"
      ],
      "type": "object",
      "properties": {
        "resolutionMessage": {
          "description": "The resolution message while clearing the alert",
          "type": "string"
        },
        "alerts": {
          "description": "The list of alert IDs to be cleared",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "CloneRequest": {
      "description": "The clone job request.",
      "required": [
        "targetDeviceId",
        "targetVolumeName",
        "targetAccessControlRecordIds",
        "backupElement"
      ],
      "type": "object",
      "properties": {
        "targetDeviceId": {
          "description": "The path ID of the device which will act as the clone target.",
          "type": "string"
        },
        "targetVolumeName": {
          "description": "The name of the new volume which will be created and the backup will be cloned into.",
          "type": "string"
        },
        "targetAccessControlRecordIds": {
          "description": "The list of path IDs of the access control records to be associated to the new cloned volume.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "backupElement": {
          "$ref": "#/definitions/BackupElement",
          "description": "The backup element that is cloned."
        }
      }
    },
    "CloudAppliance": {
      "description": "The cloud appliance.",
      "required": [
        "name",
        "vnetRegion"
      ],
      "type": "object",
      "properties": {
        "name": {
          "description": "The name.",
          "type": "string"
        },
        "vnetName": {
          "description": "The name of the virtual network.",
          "type": "string"
        },
        "vnetRegion": {
          "description": "The virtual network region.",
          "type": "string"
        },
        "isVnetDnsConfigured": {
          "description": "Indicates whether virtual network used is configured with DNS or not.",
          "type": "boolean"
        },
        "isVnetExpressConfigured": {
          "description": "Indicates whether virtual network used is configured with express route or not.",
          "type": "boolean"
        },
        "subnetName": {
          "description": "The name of the subnet.",
          "type": "string"
        },
        "storageAccountName": {
          "description": "The name of the storage account.",
          "type": "string"
        },
        "storageAccountType": {
          "description": "The type of the storage account.",
          "type": "string"
        },
        "vmType": {
          "description": "The type of the virtual machine.",
          "type": "string"
        },
        "vmImageName": {
          "description": "The name of the virtual machine image.",
          "type": "string"
        },
        "modelNumber": {
          "description": "The model number.",
          "type": "string"
        }
      }
    },
    "CloudApplianceConfiguration": {
      "description": "The cloud appliance configuration",
      "required": [
        "properties"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BaseModel"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/CloudApplianceConfigurationProperties",
          "description": "The properties.",
          "x-ms-client-flatten": true
        }
      }
    },
    "CloudApplianceConfigurationList": {
      "description": "The cloud appliance configuration list",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "The value.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CloudApplianceConfiguration"
          }
        }
      }
    },
    "CloudApplianceConfigurationProperties": {
      "description": "The properties of cloud appliance configuration.",
      "required": [
        "modelNumber",
        "cloudPlatform",
        "acsConfiguration",
        "supportedStorageAccountTypes",
        "supportedRegions",
        "supportedVmTypes",
        "supportedVmImages"
      ],
      "type": "object",
      "properties": {
        "modelNumber": {
          "description": "The model number.",
          "type": "string"
        },
        "cloudPlatform": {
          "description": "The cloud platform.",
          "type": "string"
        },
        "acsConfiguration": {
          "$ref": "#/definitions/AcsConfiguration",
          "description": "The ACS configuration."
        },
        "supportedStorageAccountTypes": {
          "description": "The supported storage account types.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "supportedRegions": {
          "description": "The supported regions.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "supportedVmTypes": {
          "description": "The supported virtual machine types.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "supportedVmImages": {
          "description": "The supported virtual machine images.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/VmImage"
          }
        }
      }
    },
    "CloudApplianceSettings": {
      "description": "The cloud appliance settings.",
      "type": "object",
      "properties": {
        "serviceDataEncryptionKey": {
          "$ref": "#/definitions/AsymmetricEncryptedSecret",
          "description": "The service data encryption key (encrypted with DAK)."
        },
        "channelIntegrityKey": {
          "$ref": "#/definitions/AsymmetricEncryptedSecret",
          "description": "The channel integrity key (encrypted with DAK)."
        }
      }
    },
    "ConfigureDeviceRequest": {
      "description": "The mandatory device configuration request.",
      "required": [
        "properties"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BaseModel"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/ConfigureDeviceRequestProperties",
          "description": "The properties of the configure device request.",
          "x-ms-client-flatten": true
        }
      }
    },
    "ConfigureDeviceRequestProperties": {
      "description": "The properties of the configure device request.",
      "required": [
        "friendlyName",
        "currentDeviceName",
        "timeZone"
      ],
      "type": "object",
      "properties": {
        "friendlyName": {
          "description": "The friendly name for the device.",
          "type": "string"
        },
        "currentDeviceName": {
          "description": "The current name of the device.",
          "type": "string"
        },
        "timeZone": {
          "description": "The device time zone. For eg: \"Pacific Standard Time\"",
          "type": "string"
        },
        "dnsSettings": {
          "$ref": "#/definitions/SecondaryDNSSettings",
          "description": "The secondary DNS Settings of the device."
        },
        "networkInterfaceData0Settings": {
          "$ref": "#/definitions/NetworkInterfaceData0Settings",
          "description": "The 'Data 0' network interface card settings."
        }
      }
    },
    "ControllerPowerStateChangeRequest": {
      "description": "The controller power state change request.",
      "required": [
        "properties"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BaseModel"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/ControllerPowerStateChangeRequestProperties",
          "description": "The properties of the controller power state change request.",
          "x-ms-client-flatten": true
        }
      }
    },
    "ControllerPowerStateChangeRequestProperties": {
      "description": "The properties of the controller power state change request.",
      "required": [
        "action",
        "activeController",
        "controller0State",
        "controller1State"
      ],
      "type": "object",
      "properties": {
        "action": {
          "description": "The power state that the request is expecting for the controller of the device.",
          "enum": [
            "Start",
            "Restart",
            "Shutdown"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "ControllerPowerStateAction",
            "modelAsString": false
          }
        },
        "activeController": {
          "description": "The active controller that the request is expecting on the device.",
          "enum": [
            "Unknown",
            "None",
            "Controller0",
            "Controller1"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "ControllerId",
            "modelAsString": false
          }
        },
        "controller0State": {
          "description": "The controller 0's status that the request is expecting on the device.",
          "enum": [
            "NotPresent",
            "PoweredOff",
            "Ok",
            "Recovering",
            "Warning",
            "Failure"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "ControllerStatus",
            "modelAsString": false
          }
        },
        "controller1State": {
          "description": "The controller 1's status that the request is expecting on the device.",
          "enum": [
            "NotPresent",
            "PoweredOff",
            "Ok",
            "Recovering",
            "Warning",
            "Failure"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "ControllerStatus",
            "modelAsString": false
          }
        }
      }
    },
    "DataStatistics": {
      "description": "The additional details related to the data related statistics of a job. Currently applicable only for Backup, Clone and Restore jobs.",
      "type": "object",
      "properties": {
        "totalData": {
          "format": "int64",
          "description": "The total bytes of data to be processed, as part of the job.",
          "type": "integer"
        },
        "processedData": {
          "format": "int64",
          "description": "The number of bytes of data processed till now, as part of the job.",
          "type": "integer"
        },
        "cloudData": {
          "format": "int64",
          "description": "The number of bytes of data written to cloud, as part of the job.",
          "type": "integer"
        },
        "throughput": {
          "format": "int64",
          "description": "The average throughput of data processed(bytes/sec), as part of the job.",
          "type": "integer"
        }
      }
    },
    "Device": {
      "description": "The StorSimple device.",
      "required": [
        "properties"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BaseModel"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/DeviceProperties",
          "description": "The properties of the StorSimple device.",
          "x-ms-client-flatten": true
        }
      }
    },
    "DeviceDetails": {
      "description": "The additional device details regarding the end point count and volume container count.",
      "type": "object",
      "properties": {
        "endpointCount": {
          "format": "int32",
          "description": "The total number of endpoints that are currently on the device ( i.e. number of volumes).",
          "type": "integer"
        },
        "volumeContainerCount": {
          "format": "int32",
          "description": "The total number of volume containers on the device.",
          "type": "integer"
        }
      }
    },
    "DeviceList": {
      "description": "The collection of devices.",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "The value.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Device"
          }
        }
      }
    },
    "DevicePatch": {
      "description": "The device patch.",
      "required": [
        "properties"
      ],
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/DevicePatchProperties",
          "description": "The properties of the device patch.",
          "x-ms-client-flatten": true
        }
      }
    },
    "DevicePatchProperties": {
      "description": "The properties of the device patch.",
      "type": "object",
      "properties": {
        "deviceDescription": {
          "description": "Short description given for the device",
          "type": "string"
        }
      }
    },
    "DeviceProperties": {
      "description": "The properties of the StorSimple device.",
      "required": [
        "friendlyName",
        "activationTime",
        "culture",
        "deviceDescription",
        "deviceSoftwareVersion",
        "deviceConfigurationStatus",
        "targetIqn",
        "modelDescription",
        "status",
        "serialNumber",
        "deviceType",
        "activeController",
        "friendlySoftwareVersion"
      ],
      "type": "object",
      "properties": {
        "friendlyName": {
          "description": "The friendly name of the device.",
          "type": "string"
        },
        "activationTime": {
          "format": "date-time",
          "description": "The UTC time at which the device was activated",
          "type": "string"
        },
        "culture": {
          "description": "The language culture setting on the device. For eg: \"en-US\"",
          "type": "string"
        },
        "deviceDescription": {
          "description": "The device description.",
          "type": "string"
        },
        "deviceSoftwareVersion": {
          "description": "The version number of the software running on the device.",
          "type": "string"
        },
        "friendlySoftwareName": {
          "description": "The friendly name of the software running on the device.",
          "type": "string"
        },
        "deviceConfigurationStatus": {
          "description": "The current configuration status of the device.",
          "enum": [
            "Complete",
            "Pending"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "DeviceConfigurationStatus",
            "modelAsString": false
          }
        },
        "targetIqn": {
          "description": "The target IQN.",
          "type": "string"
        },
        "modelDescription": {
          "description": "The device model.",
          "type": "string"
        },
        "status": {
          "description": "The current status of the device.",
          "enum": [
            "Unknown",
            "Online",
            "Offline",
            "Deactivated",
            "RequiresAttention",
            "MaintenanceMode",
            "Creating",
            "Provisioning",
            "Deactivating",
            "Deleted",
            "ReadyToSetup"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "DeviceStatus",
            "modelAsString": false
          }
        },
        "serialNumber": {
          "description": "The serial number.",
          "type": "string"
        },
        "deviceType": {
          "description": "The type of the device.",
          "enum": [
            "Invalid",
            "Series8000VirtualAppliance",
            "Series8000PhysicalAppliance"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "DeviceType",
            "modelAsString": false
          }
        },
        "activeController": {
          "description": "The identifier of the active controller of the device.",
          "enum": [
            "Unknown",
            "None",
            "Controller0",
            "Controller1"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "ControllerId",
            "modelAsString": false
          }
        },
        "friendlySoftwareVersion": {
          "description": "The device friendly software version.",
          "type": "string"
        },
        "availableLocalStorageInBytes": {
          "format": "int64",
          "description": "The storage in bytes that is available locally on the device.",
          "type": "integer"
        },
        "availableTieredStorageInBytes": {
          "format": "int64",
          "description": "The storage in bytes that is available on the device for tiered volumes.",
          "type": "integer"
        },
        "provisionedTieredStorageInBytes": {
          "format": "int64",
          "description": "The storage in bytes that has been provisioned on the device for tiered volumes.",
          "type": "integer"
        },
        "provisionedLocalStorageInBytes": {
          "format": "int64",
          "description": "The storage in bytes used for locally pinned volumes on the device (including additional local reservation).",
          "type": "integer"
        },
        "provisionedVolumeSizeInBytes": {
          "format": "int64",
          "description": "Total capacity in bytes of tiered and locally pinned volumes on the device",
          "type": "integer"
        },
        "usingStorageInBytes": {
          "format": "int64",
          "description": "The storage in bytes that is currently being used on the device, including both local and cloud.",
          "type": "integer"
        },
        "totalTieredStorageInBytes": {
          "format": "int64",
          "description": "The total tiered storage available on the device in bytes.",
          "type": "integer"
        },
        "agentGroupVersion": {
          "format": "int32",
          "description": "The device agent group version.",
          "type": "integer"
        },
        "networkInterfaceCardCount": {
          "format": "int32",
          "description": "The number of network interface cards",
          "type": "integer"
        },
        "deviceLocation": {
          "description": "The location of the virtual appliance.",
          "type": "string"
        },
        "virtualMachineApiType": {
          "description": "The virtual machine API type.",
          "enum": [
            "Classic",
            "Arm"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "VirtualMachineApiType",
            "modelAsString": false
          }
        },
        "details": {
          "$ref": "#/definitions/DeviceDetails",
          "description": "The additional device details regarding the end point count and volume container count."
        },
        "rolloverDetails": {
          "$ref": "#/definitions/DeviceRolloverDetails",
          "description": "The additional device details for the service data encryption key rollover."
        }
      }
    },
    "DeviceRolloverDetails": {
      "description": "The additional device details for the service data encryption key rollover.",
      "type": "object",
      "properties": {
        "authorizationEligibility": {
          "description": "The eligibility status of device for service data encryption key rollover.",
          "enum": [
            "InEligible",
            "Eligible"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "AuthorizationEligibility",
            "modelAsString": false
          }
        },
        "authorizationStatus": {
          "description": "The authorization status of the device for service data encryption key rollover.",
          "enum": [
            "Disabled",
            "Enabled"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "AuthorizationStatus",
            "modelAsString": false
          }
        },
        "inEligibilityReason": {
          "description": "The reason for inEligibility of device, in case it's not eligible for service data encryption key rollover.",
          "enum": [
            "DeviceNotOnline",
            "NotSupportedAppliance",
            "RolloverPending"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "InEligibilityCategory",
            "modelAsString": false
          }
        }
      }
    },
    "DimensionFilter": {
      "description": "The dimension filter.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Specifies the dimension name. E.g., NetworkInterface. Valid values are the ones specified in the field \"dimensions\" in the ListMetricDefinitions call. Only 'Equality' operator is supported for this property.",
          "type": "string"
        },
        "values": {
          "description": "Specifies the dimension value. E.g., Data0. Valid values are the ones returned in the field \"dimensions\" in the ListMetricDefinitions call. Only 'Equality' operator is supported for this property.",
          "type": "string"
        }
      }
    },
    "DNSSettings": {
      "description": "The DNS(Domain Name Server) settings of a device.",
      "type": "object",
      "properties": {
        "primaryDnsServer": {
          "description": "The primary IPv4 DNS server for the device",
          "type": "string"
        },
        "primaryIpv6DnsServer": {
          "description": "The primary IPv6 DNS server for the device",
          "type": "string"
        },
        "secondaryDnsServers": {
          "description": "The secondary IPv4 DNS server for the device",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "secondaryIpv6DnsServers": {
          "description": "The secondary IPv6 DNS server for the device",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "EncryptionSettings": {
      "description": "The encryption settings.",
      "required": [
        "properties"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BaseModel"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/EncryptionSettingsProperties",
          "description": "The properties of the encryption settings.",
          "x-ms-client-flatten": true
        }
      }
    },
    "EncryptionSettingsProperties": {
      "description": "The properties of encryption settings.",
      "required": [
        "encryptionStatus",
        "keyRolloverStatus"
      ],
      "type": "object",
      "properties": {
        "encryptionStatus": {
          "description": "The encryption status to indicates if encryption is enabled or not.",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "EncryptionStatus",
            "modelAsString": false
          }
        },
        "keyRolloverStatus": {
          "description": "The key rollover status to indicates if key rollover is required or not. If secret's encryption has been upgraded, then it requires key rollover.",
          "enum": [
            "Required",
            "NotRequired"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "KeyRolloverStatus",
            "modelAsString": false
          }
        }
      }
    },
    "FailoverRequest": {
      "description": "The request object for triggering a failover of volume containers, from a source device to a target device.",
      "type": "object",
      "properties": {
        "targetDeviceId": {
          "description": "The ARM path ID of the device which will act as the failover target.",
          "type": "string"
        },
        "volumeContainers": {
          "description": "The list of path IDs of the volume containers which needs to be failed-over to the target device.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "FailoverSet": {
      "description": "The failover set on a device.",
      "type": "object",
      "properties": {
        "volumeContainers": {
          "description": "The list of meta data of volume containers, which are part of the failover set.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/VolumeContainerFailoverMetadata"
          }
        },
        "eligibilityResult": {
          "$ref": "#/definitions/FailoverSetEligibilityResult",
          "description": "The eligibility result of the failover set, for failover."
        }
      }
    },
    "FailoverSetEligibilityResult": {
      "description": "The eligibility result of failover set, for failover.",
      "type": "object",
      "properties": {
        "isEligibleForFailover": {
          "description": "Represents if this failover set is eligible for failover or not.",
          "type": "boolean"
        },
        "errorMessage": {
          "description": "The error message, if the failover set is not eligible for failover.",
          "type": "string"
        }
      }
    },
    "FailoverSetsList": {
      "description": "The list of failover sets.",
      "type": "object",
      "properties": {
        "value": {
          "description": "The list of failover sets.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/FailoverSet"
          }
        }
      }
    },
    "FailoverTarget": {
      "description": "Represents the eligibility of a device as a failover target device.",
      "type": "object",
      "properties": {
        "deviceId": {
          "description": "The path ID of the device.",
          "type": "string"
        },
        "deviceStatus": {
          "description": "The status of the device.",
          "enum": [
            "Unknown",
            "Online",
            "Offline",
            "Deactivated",
            "RequiresAttention",
            "MaintenanceMode",
            "Creating",
            "Provisioning",
            "Deactivating",
            "Deleted",
            "ReadyToSetup"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "DeviceStatus",
            "modelAsString": false
          }
        },
        "modelDescription": {
          "description": "The model number of the device.",
          "type": "string"
        },
        "deviceSoftwareVersion": {
          "description": "The software version of the device.",
          "type": "string"
        },
        "dataContainersCount": {
          "format": "int32",
          "description": "The count of data containers on the device.",
          "type": "integer"
        },
        "volumesCount": {
          "format": "int32",
          "description": "The count of volumes on the device.",
          "type": "integer"
        },
        "availableLocalStorageInBytes": {
          "format": "int64",
          "description": "The amount of free local storage available on the device in bytes.",
          "type": "integer"
        },
        "availableTieredStorageInBytes": {
          "format": "int64",
          "description": "The amount of free tiered storage available for the device in bytes.",
          "type": "integer"
        },
        "deviceLocation": {
          "description": "The geo location (applicable only for cloud appliances) of the device.",
          "type": "string"
        },
        "friendlyDeviceSoftwareVersion": {
          "description": "The friendly name for the current version of software on the device.",
          "type": "string"
        },
        "eligibilityResult": {
          "$ref": "#/definitions/TargetEligibilityResult",
          "description": "The eligibility result of the device, as a failover target device."
        }
      }
    },
    "FailoverTargetsList": {
      "description": "The list of all devices in a resource and their eligibility status as a failover target device.",
      "type": "object",
      "properties": {
        "value": {
          "description": "The list of all the failover targets.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/FailoverTarget"
          }
        }
      }
    },
    "Feature": {
      "description": "The feature.",
      "required": [
        "name",
        "status"
      ],
      "type": "object",
      "properties": {
        "name": {
          "description": "The name of the feature.",
          "type": "string"
        },
        "status": {
          "description": "The feature support status.",
          "enum": [
            "NotAvailable",
            "UnsupportedDeviceVersion",
            "Supported"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "FeatureSupportStatus",
            "modelAsString": false
          }
        }
      }
    },
    "FeatureFilter": {
      "description": "The OData filter to be used for features.",
      "type": "object",
      "properties": {
        "deviceId": {
          "description": "Specifies the device ID for which the features are required. Only 'Equality' operator is supported for this property.",
          "type": "string"
        }
      }
    },
    "FeatureList": {
      "description": "The collections of features.",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "The value.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Feature"
          }
        }
      }
    },
    "HardwareComponent": {
      "description": "The hardware component.",
      "required": [
        "componentId",
        "displayName",
        "status",
        "statusDisplayName"
      ],
      "type": "object",
      "properties": {
        "componentId": {
          "description": "The component ID.",
          "type": "string"
        },
        "displayName": {
          "description": "The display name of the hardware component.",
          "type": "string"
        },
        "status": {
          "description": "The status of the hardware component.",
          "enum": [
            "Unknown",
            "NotPresent",
            "PoweredOff",
            "Ok",
            "Recovering",
            "Warning",
            "Failure"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "HardwareComponentStatus",
            "modelAsString": false
          }
        },
        "statusDisplayName": {
          "description": "The display name of the status of hardware component.",
          "type": "string"
        }
      }
    },
    "HardwareComponentGroup": {
      "description": "The hardware component group.",
      "required": [
        "properties"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BaseModel"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/HardwareComponentGroupProperties",
          "description": "The properties of the hardware component group.",
          "x-ms-client-flatten": true
        }
      }
    },
    "HardwareComponentGroupList": {
      "description": "The collection of hardware component groups.",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "The value.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/HardwareComponentGroup"
          }
        }
      }
    },
    "HardwareComponentGroupProperties": {
      "description": "The properties of hardware component group.",
      "required": [
        "displayName",
        "lastUpdatedTime",
        "components"
      ],
      "type": "object",
      "properties": {
        "displayName": {
          "description": "The display name the hardware component group.",
          "type": "string"
        },
        "lastUpdatedTime": {
          "format": "date-time",
          "description": "The last updated time.",
          "type": "string"
        },
        "components": {
          "description": "The list of hardware components.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/HardwareComponent"
          }
        }
      }
    },
    "Job": {
      "description": "The job.",
      "required": [
        "status",
        "percentComplete"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BaseModel"
        }
      ],
      "properties": {
        "status": {
          "description": "The current status of the job.",
          "enum": [
            "Running",
            "Succeeded",
            "Failed",
            "Canceled"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "JobStatus",
            "modelAsString": false
          }
        },
        "startTime": {
          "format": "date-time",
          "description": "The UTC time at which the job was started.",
          "type": "string"
        },
        "endTime": {
          "format": "date-time",
          "description": "The UTC time at which the job completed.",
          "type": "string"
        },
        "percentComplete": {
          "format": "int32",
          "description": "The percentage of the job that is already complete.",
          "type": "integer"
        },
        "error": {
          "$ref": "#/definitions/JobErrorDetails",
          "description": "The error details, if any, for the job."
        },
        "properties": {
          "$ref": "#/definitions/JobProperties",
          "description": "The properties of the job.",
          "x-ms-client-flatten": true
        }
      }
    },
    "JobErrorDetails": {
      "description": "The job error details. Contains list of job error items.",
      "required": [
        "code",
        "message"
      ],
      "type": "object",
      "properties": {
        "errorDetails": {
          "description": "The error details.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/JobErrorItem"
          }
        },
        "code": {
          "description": "The error code intended for programmatic access.",
          "type": "string"
        },
        "message": {
          "description": "The error message intended to describe the error in detail.",
          "type": "string"
        }
      }
    },
    "JobErrorItem": {
      "description": "The job error items.",
      "required": [
        "code",
        "message"
      ],
      "type": "object",
      "properties": {
        "recommendations": {
          "description": "The recommended actions.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "code": {
          "description": "The error code intended for programmatic access.",
          "type": "string"
        },
        "message": {
          "description": "The error message intended to describe the error in detail.",
          "type": "string"
        }
      }
    },
    "JobFilter": {
      "description": "The OData filter to be used for jobs.",
      "type": "object",
      "properties": {
        "status": {
          "description": "Specifies the status of the jobs to be filtered. For e.g., \"Running\", \"Succeeded\", \"Failed\" or \"Canceled\". Only 'Equality' operator is supported for this property.",
          "type": "string"
        },
        "jobType": {
          "description": "Specifies the type of the jobs to be filtered. For e.g., \"ScheduledBackup\", \"ManualBackup\", \"RestoreBackup\", \"CloneVolume\", \"FailoverVolumeContainers\", \"CreateLocallyPinnedVolume\", \"ModifyVolume\", \"InstallUpdates\", \"SupportPackageLogs\", or \"CreateCloudAppliance\". Only 'Equality' operator can be used for this property.",
          "type": "string"
        },
        "startTime": {
          "format": "date-time",
          "description": "Specifies the start time of the jobs to be filtered.  Only 'Greater Than or Equal To' and 'Lesser Than or Equal To' operators are supported for this property.",
          "type": "string"
        }
      }
    },
    "JobList": {
      "description": "The collection of jobs.",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "The value.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Job"
          }
        },
        "nextLink": {
          "description": "The NextLink.",
          "type": "string"
        }
      }
    },
    "JobProperties": {
      "description": "The properties of the job.",
      "required": [
        "jobType"
      ],
      "type": "object",
      "properties": {
        "jobType": {
          "description": "The type of the job.",
          "enum": [
            "ScheduledBackup",
            "ManualBackup",
            "RestoreBackup",
            "CloneVolume",
            "FailoverVolumeContainers",
            "CreateLocallyPinnedVolume",
            "ModifyVolume",
            "InstallUpdates",
            "SupportPackageLogs",
            "CreateCloudAppliance"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "JobType",
            "modelAsString": false
          }
        },
        "dataStats": {
          "$ref": "#/definitions/DataStatistics",
          "description": "The data statistics properties of the job."
        },
        "entityLabel": {
          "description": "The entity identifier for which the job ran.",
          "type": "string"
        },
        "entityType": {
          "description": "The entity type for which the job ran.",
          "type": "string"
        },
        "jobStages": {
          "description": "The job stages.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/JobStage"
          }
        },
        "deviceId": {
          "description": "The device ID in which the job ran.",
          "type": "string"
        },
        "isCancellable": {
          "description": "Represents whether the job is cancellable or not.",
          "type": "boolean"
        },
        "backupType": {
          "description": "The backup type (CloudSnapshot | LocalSnapshot). Applicable only for backup jobs.",
          "enum": [
            "LocalSnapshot",
            "CloudSnapshot"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "BackupType",
            "modelAsString": false
          }
        },
        "sourceDeviceId": {
          "description": "The source device ID of the failover job.",
          "type": "string"
        },
        "backupPointInTime": {
          "format": "date-time",
          "description": "The time of the backup used for the failover.",
          "type": "string"
        }
      }
    },
    "JobStage": {
      "description": "The details about the specific stage of a job.",
      "required": [
        "stageStatus"
      ],
      "type": "object",
      "properties": {
        "message": {
          "description": "The message of the job stage.",
          "type": "string"
        },
        "stageStatus": {
          "description": "The stage status.",
          "enum": [
            "Running",
            "Succeeded",
            "Failed",
            "Canceled"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "JobStatus",
            "modelAsString": false
          }
        },
        "detail": {
          "description": "The details of the stage.",
          "type": "string"
        },
        "errorCode": {
          "description": "The error code of the stage if any.",
          "type": "string"
        }
      }
    },
    "Key": {
      "description": "The key.",
      "required": [
        "activationKey"
      ],
      "type": "object",
      "properties": {
        "activationKey": {
          "description": "The activation key for the device.",
          "type": "string"
        }
      }
    },
    "ListFailoverTargetsRequest": {
      "description": "The request object for fetching the list of failover targets (eligible devices for failover).",
      "type": "object",
      "properties": {
        "volumeContainers": {
          "description": "The list of path IDs of the volume containers that needs to be failed-over, for which we want to fetch the eligible targets.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "Manager": {
      "description": "The StorSimple Manager.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/ManagerProperties",
          "description": "The properties of the StorSimple Manager.",
          "x-ms-client-flatten": true
        },
        "etag": {
          "description": "The etag of the manager.",
          "type": "string"
        }
      }
    },
    "ManagerExtendedInfo": {
      "description": "The extended info of the manager.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BaseModel"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/ManagerExtendedInfoProperties",
          "description": "The extended info properties.",
          "x-ms-client-flatten": true
        },
        "etag": {
          "description": "The etag of the resource.",
          "type": "string"
        }
      }
    },
    "ManagerExtendedInfoProperties": {
      "description": "The properties of the manager extended info.",
      "required": [
        "integrityKey",
        "algorithm"
      ],
      "type": "object",
      "properties": {
        "version": {
          "description": "The version of the extended info being persisted.",
          "type": "string"
        },
        "integrityKey": {
          "description": "Represents the CIK of the resource.",
          "type": "string"
        },
        "encryptionKey": {
          "description": "Represents the CEK of the resource.",
          "type": "string"
        },
        "encryptionKeyThumbprint": {
          "description": "Represents the Cert thumbprint that was used to encrypt the CEK.",
          "type": "string"
        },
        "portalCertificateThumbprint": {
          "description": "Represents the portal thumbprint which can be used optionally to encrypt the entire data before storing it.",
          "type": "string"
        },
        "algorithm": {
          "description": "Represents the encryption algorithm used to encrypt the keys. None - if Key is saved in plain text format. Algorithm name - if key is encrypted",
          "type": "string"
        }
      }
    },
    "ManagerIntrinsicSettings": {
      "description": "Intrinsic settings which refers to the type of the StorSimple Manager.",
      "required": [
        "type"
      ],
      "type": "object",
      "properties": {
        "type": {
          "description": "The type of StorSimple Manager.",
          "enum": [
            "GardaV1",
            "HelsinkiV1"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "ManagerType",
            "modelAsString": false
          }
        }
      }
    },
    "ManagerList": {
      "description": "The list of StorSimple Managers.",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "The list of StorSimple managers.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Manager"
          }
        }
      }
    },
    "ManagerPatch": {
      "description": "The StorSimple Manager patch.",
      "type": "object",
      "properties": {
        "tags": {
          "description": "The tags attached to the Manager.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "ManagerProperties": {
      "description": "The properties of the StorSimple Manager.",
      "type": "object",
      "properties": {
        "cisIntrinsicSettings": {
          "$ref": "#/definitions/ManagerIntrinsicSettings",
          "description": "Represents the type of StorSimple Manager."
        },
        "sku": {
          "$ref": "#/definitions/ManagerSku",
          "description": "Specifies the Sku."
        },
        "provisioningState": {
          "description": "Specifies the state of the resource as it is getting provisioned. Value of \"Succeeded\" means the Manager was successfully created.",
          "type": "string"
        }
      }
    },
    "ManagerSku": {
      "description": "The Sku.",
      "required": [
        "name"
      ],
      "type": "object",
      "properties": {
        "name": {
          "description": "Refers to the sku name which should be \"Standard\"",
          "enum": [
            "Standard"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "ManagerSkuType",
            "modelAsString": false
          }
        }
      }
    },
    "MetricAvailablity": {
      "description": "The metric availability.",
      "type": "object",
      "properties": {
        "timeGrain": {
          "description": "The aggregation interval for the metric.",
          "type": "string"
        },
        "retention": {
          "description": "The retention period for the metric at the specified timegrain.",
          "type": "string"
        }
      }
    },
    "MetricData": {
      "description": "The metric data.",
      "type": "object",
      "properties": {
        "timeStamp": {
          "format": "date-time",
          "description": "The time stamp of the metric data.",
          "type": "string"
        },
        "sum": {
          "format": "double",
          "description": "The sum of all samples at the time stamp.",
          "type": "number"
        },
        "count": {
          "format": "int32",
          "description": "The count of all samples at the time stamp.",
          "type": "integer"
        },
        "average": {
          "format": "double",
          "description": "The average of all samples at the time stamp.",
          "type": "number"
        },
        "minimum": {
          "format": "double",
          "description": "The minimum of all samples at the time stamp.",
          "type": "number"
        },
        "maximum": {
          "format": "double",
          "description": "The maximum of all samples at the time stamp.",
          "type": "number"
        }
      }
    },
    "MetricDefinition": {
      "description": "The monitoring metric definition.",
      "type": "object",
      "properties": {
        "name": {
          "$ref": "#/definitions/MetricName",
          "description": "The metric name."
        },
        "unit": {
          "description": "The metric unit.",
          "enum": [
            "Bytes",
            "BytesPerSecond",
            "Count",
            "CountPerSecond",
            "Percent",
            "Seconds"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "MetricUnit",
            "modelAsString": false
          }
        },
        "primaryAggregationType": {
          "description": "The metric aggregation type.",
          "enum": [
            "Average",
            "Last",
            "Maximum",
            "Minimum",
            "None",
            "Total"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "MetricAggregationType",
            "modelAsString": false
          }
        },
        "resourceId": {
          "description": "The metric source ID.",
          "type": "string"
        },
        "metricAvailabilities": {
          "description": "The available metric granularities.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/MetricAvailablity"
          }
        },
        "dimensions": {
          "description": "The available metric dimensions.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/MetricDimension"
          }
        },
        "category": {
          "description": "The category of the metric.",
          "type": "string"
        },
        "type": {
          "description": "The metric definition type.",
          "type": "string"
        }
      }
    },
    "MetricDefinitionList": {
      "description": "The list of metric definitions.",
      "type": "object",
      "properties": {
        "value": {
          "description": "The list of metric definitions.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/MetricDefinition"
          }
        }
      }
    },
    "MetricDimension": {
      "description": "The metric dimension. It indicates the source of the metric.",
      "type": "object",
      "properties": {
        "name": {
          "description": "The metric dimension name.",
          "type": "string"
        },
        "value": {
          "description": "The metric dimension values.",
          "type": "string"
        }
      }
    },
    "MetricFilter": {
      "description": "The OData filters to be used for metrics.",
      "required": [
        "category"
      ],
      "type": "object",
      "properties": {
        "name": {
          "$ref": "#/definitions/MetricNameFilter",
          "description": "Specifies the metric name filter specifying the name of the metric to be filtered on. Only 'Equality' operator is supported for this property."
        },
        "startTime": {
          "format": "date-time",
          "description": "Specifies the start time of the time range to be queried. Only 'Greater Than Or Equal To' operator is supported for this property.",
          "type": "string"
        },
        "endTime": {
          "format": "date-time",
          "description": "Specifies the end time of the time range to be queried. Only 'Less Than Or Equal To' operator is supported for this property.",
          "type": "string"
        },
        "timeGrain": {
          "description": "Specifies the time granularity of the metrics to be returned. E.g., \"P1D\". Valid values are the ones returned as the field \"timeGrain\" in the ListMetricDefinitions call. Only 'Equality' operator is supported for this property.",
          "type": "string"
        },
        "category": {
          "description": "Specifies the category of the metrics to be filtered. E.g., \"CapacityUtilization\". Valid values are the ones returned as the field \"category\" in the ListMetricDefinitions call. Only 'Equality' operator is supported for this property.",
          "type": "string"
        },
        "dimensions": {
          "$ref": "#/definitions/DimensionFilter",
          "description": "Specifies the source(the dimension) of the metrics to be filtered. Only 'Equality' operator is supported for this property."
        }
      }
    },
    "MetricList": {
      "description": "The metric list.",
      "type": "object",
      "properties": {
        "value": {
          "description": "The value.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Metrics"
          }
        }
      }
    },
    "MetricName": {
      "description": "The metric name.",
      "type": "object",
      "properties": {
        "value": {
          "description": "The metric name.",
          "type": "string"
        },
        "localizedValue": {
          "description": "The localized metric name.",
          "type": "string"
        }
      }
    },
    "MetricNameFilter": {
      "description": "The metric name filter, specifying the name of the metric to be filtered on.",
      "type": "object",
      "properties": {
        "value": {
          "description": "Specifies the metric name to be filtered on. E.g., CloudStorageUsed. Valid values are the ones returned in the field \"name\" in the ListMetricDefinitions call. Only 'Equality' operator is supported for this property.",
          "type": "string"
        }
      }
    },
    "Metrics": {
      "description": "The monitoring metric.",
      "type": "object",
      "properties": {
        "resourceId": {
          "description": "The ID of metric source.",
          "type": "string"
        },
        "startTime": {
          "format": "date-time",
          "description": "The start time of the metric data.",
          "type": "string"
        },
        "endTime": {
          "format": "date-time",
          "description": "The end time of the metric data.",
          "type": "string"
        },
        "timeGrain": {
          "description": "The time granularity of the metric data.",
          "type": "string"
        },
        "primaryAggregation": {
          "description": "The metric aggregation type.",
          "enum": [
            "Average",
            "Last",
            "Maximum",
            "Minimum",
            "None",
            "Total"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "MetricAggregationType",
            "modelAsString": false
          }
        },
        "name": {
          "$ref": "#/definitions/MetricName",
          "description": "The name of the metric."
        },
        "dimensions": {
          "description": "The metric dimensions.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/MetricDimension"
          }
        },
        "unit": {
          "description": "The unit of the metric data.",
          "enum": [
            "Bytes",
            "BytesPerSecond",
            "Count",
            "CountPerSecond",
            "Percent",
            "Seconds"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "MetricUnit",
            "modelAsString": false
          }
        },
        "type": {
          "description": "The type of the metric data.",
          "type": "string"
        },
        "values": {
          "description": "The list of the metric data.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/MetricData"
          }
        }
      }
    },
    "NetworkAdapterList": {
      "description": "The collection of network adapters on the device.",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "The value.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/NetworkAdapters"
          }
        }
      }
    },
    "NetworkAdapters": {
      "description": "Represents the network adapter on device.",
      "required": [
        "interfaceId",
        "netInterfaceStatus",
        "iscsiAndCloudStatus",
        "mode"
      ],
      "type": "object",
      "properties": {
        "interfaceId": {
          "description": "The ID of the network adapter.",
          "enum": [
            "Invalid",
            "Data0",
            "Data1",
            "Data2",
            "Data3",
            "Data4",
            "Data5"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "NetInterfaceId",
            "modelAsString": false
          }
        },
        "netInterfaceStatus": {
          "description": "Value indicating status of network adapter.",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "NetInterfaceStatus",
            "modelAsString": false
          }
        },
        "isDefault": {
          "description": "Value indicating whether this instance is default.",
          "type": "boolean"
        },
        "iscsiAndCloudStatus": {
          "description": "Value indicating cloud and ISCSI status of network adapter.",
          "enum": [
            "Disabled",
            "IscsiEnabled",
            "CloudEnabled",
            "IscsiAndCloudEnabled"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "ISCSIAndCloudStatus",
            "modelAsString": false
          }
        },
        "speed": {
          "format": "int64",
          "description": "The speed of the network adapter.",
          "type": "integer"
        },
        "mode": {
          "description": "The mode of network adapter, either IPv4, IPv6 or both.",
          "enum": [
            "Invalid",
            "IPV4",
            "IPV6",
            "BOTH"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "NetworkMode",
            "modelAsString": false
          }
        },
        "nicIpv4Settings": {
          "$ref": "#/definitions/NicIPv4",
          "description": "The IPv4 configuration of the network adapter."
        },
        "nicIpv6Settings": {
          "$ref": "#/definitions/NicIPv6",
          "description": "The IPv6 configuration of the network adapter."
        }
      }
    },
    "NetworkInterfaceData0Settings": {
      "description": "The 'Data 0' network interface card settings.",
      "type": "object",
      "properties": {
        "controllerZeroIp": {
          "description": "The controller 0's IPv4 address.",
          "type": "string"
        },
        "controllerOneIp": {
          "description": "The controller 1's IPv4 address.",
          "type": "string"
        }
      }
    },
    "NetworkSettings": {
      "description": "Represents the network settings of a device.",
      "required": [
        "properties"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BaseModel"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/NetworkSettingsProperties",
          "description": "The properties of network settings of a device.",
          "x-ms-client-flatten": true
        }
      }
    },
    "NetworkSettingsPatch": {
      "description": "Represents the patch request for the network settings of a device.",
      "required": [
        "properties"
      ],
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/NetworkSettingsPatchProperties",
          "description": "The properties of the network settings patch.",
          "x-ms-client-flatten": true
        }
      }
    },
    "NetworkSettingsPatchProperties": {
      "description": "The properties of the network settings patch.",
      "type": "object",
      "properties": {
        "dnsSettings": {
          "$ref": "#/definitions/DNSSettings",
          "description": "The DNS (Domain Name System) settings of device."
        },
        "networkAdapters": {
          "$ref": "#/definitions/NetworkAdapterList",
          "description": "The network adapter list of device."
        }
      }
    },
    "NetworkSettingsProperties": {
      "description": "The properties of the network settings of device.",
      "required": [
        "dnsSettings",
        "networkAdapters",
        "webproxySettings"
      ],
      "type": "object",
      "properties": {
        "dnsSettings": {
          "$ref": "#/definitions/DNSSettings",
          "description": "The DNS (Domain Name System) settings of device."
        },
        "networkAdapters": {
          "$ref": "#/definitions/NetworkAdapterList",
          "description": "The network adapter list of device."
        },
        "webproxySettings": {
          "$ref": "#/definitions/WebproxySettings",
          "description": "The webproxy settings of device."
        }
      }
    },
    "NicIPv4": {
      "description": "Details related to the IPv4 address configuration.",
      "type": "object",
      "properties": {
        "ipv4Address": {
          "description": "The IPv4 address of the network adapter.",
          "type": "string"
        },
        "ipv4Netmask": {
          "description": "The IPv4 netmask of the network adapter.",
          "type": "string"
        },
        "ipv4Gateway": {
          "description": "The IPv4 gateway of the network adapter.",
          "type": "string"
        },
        "controller0Ipv4Address": {
          "description": "The IPv4 address of Controller0.",
          "type": "string"
        },
        "controller1Ipv4Address": {
          "description": "The IPv4 address of Controller1.",
          "type": "string"
        }
      }
    },
    "NicIPv6": {
      "description": "Details related to the IPv6 address configuration.",
      "type": "object",
      "properties": {
        "ipv6Address": {
          "description": "The IPv6 address of the network adapter.",
          "type": "string"
        },
        "ipv6Prefix": {
          "description": "The IPv6 prefix of the network adapter.",
          "type": "string"
        },
        "ipv6Gateway": {
          "description": "The IPv6 gateway of the network adapter.",
          "type": "string"
        },
        "controller0Ipv6Address": {
          "description": "The IPv6 address of Controller0.",
          "type": "string"
        },
        "controller1Ipv6Address": {
          "description": "The IPv6 address of Controller1.",
          "type": "string"
        }
      }
    },
    "PublicKey": {
      "description": "The public key.",
      "required": [
        "key"
      ],
      "type": "object",
      "properties": {
        "key": {
          "description": "The key.",
          "type": "string"
        }
      }
    },
    "RemoteManagementSettings": {
      "description": "The settings for remote management of a device.",
      "required": [
        "remoteManagementMode"
      ],
      "type": "object",
      "properties": {
        "remoteManagementMode": {
          "description": "The remote management mode.",
          "enum": [
            "Unknown",
            "Disabled",
            "HttpsEnabled",
            "HttpsAndHttpEnabled"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "RemoteManagementModeConfiguration",
            "modelAsString": false
          }
        },
        "remoteManagementCertificate": {
          "description": "The remote management certificates.",
          "type": "string"
        }
      }
    },
    "RemoteManagementSettingsPatch": {
      "description": "The settings for updating remote management mode of the device.",
      "required": [
        "remoteManagementMode"
      ],
      "type": "object",
      "properties": {
        "remoteManagementMode": {
          "description": "The remote management mode.",
          "enum": [
            "Unknown",
            "Disabled",
            "HttpsEnabled",
            "HttpsAndHttpEnabled"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "RemoteManagementModeConfiguration",
            "modelAsString": false
          }
        }
      }
    },
    "Resource": {
      "description": "The Azure Resource.",
      "required": [
        "location"
      ],
      "type": "object",
      "properties": {
        "id": {
          "description": "The resource ID.",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "description": "The resource name.",
          "type": "string",
          "readOnly": true
        },
        "type": {
          "description": "The resource type.",
          "type": "string",
          "readOnly": true
        },
        "location": {
          "description": "The geo location of the resource.",
          "type": "string"
        },
        "tags": {
          "description": "The tags attached to the resource.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "x-ms-azure-resource": true
    },
    "ScheduleRecurrence": {
      "description": "The schedule recurrence.",
      "required": [
        "recurrenceType",
        "recurrenceValue"
      ],
      "type": "object",
      "properties": {
        "recurrenceType": {
          "description": "The recurrence type.",
          "enum": [
            "Minutes",
            "Hourly",
            "Daily",
            "Weekly"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "RecurrenceType",
            "modelAsString": false
          }
        },
        "recurrenceValue": {
          "format": "int32",
          "description": "The recurrence value.",
          "type": "integer"
        },
        "weeklyDaysList": {
          "description": "The week days list. Applicable only for schedules of recurrence type 'weekly'.",
          "type": "array",
          "items": {
            "enum": [
              "Sunday",
              "Monday",
              "Tuesday",
              "Wednesday",
              "Thursday",
              "Friday",
              "Saturday"
            ],
            "type": "string",
            "x-ms-enum": {
              "name": "DayOfWeek",
              "modelAsString": false
            }
          }
        }
      }
    },
    "SecondaryDNSSettings": {
      "description": "The secondary DNS settings.",
      "type": "object",
      "properties": {
        "secondaryDnsServers": {
          "description": "The list of secondary DNS Server IP addresses.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "SecuritySettings": {
      "description": "The security settings of a device.",
      "required": [
        "properties"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BaseModel"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/SecuritySettingsProperties",
          "description": "The properties of the security settings of a device.",
          "x-ms-client-flatten": true
        }
      }
    },
    "SecuritySettingsPatch": {
      "description": "Represents the patch request for the security settings of a device.",
      "required": [
        "properties"
      ],
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/SecuritySettingsPatchProperties",
          "description": "The properties of the security settings patch.",
          "x-ms-client-flatten": true
        }
      }
    },
    "SecuritySettingsPatchProperties": {
      "description": "The properties of the security settings patch.",
      "type": "object",
      "properties": {
        "remoteManagementSettings": {
          "$ref": "#/definitions/RemoteManagementSettingsPatch",
          "description": "The remote management settings."
        },
        "deviceAdminPassword": {
          "$ref": "#/definitions/AsymmetricEncryptedSecret",
          "description": "The device administrator password."
        },
        "snapshotPassword": {
          "$ref": "#/definitions/AsymmetricEncryptedSecret",
          "description": "The snapshot manager password."
        },
        "chapSettings": {
          "$ref": "#/definitions/ChapSettings",
          "description": "The device CHAP and reverse-CHAP settings."
        },
        "cloudApplianceSettings": {
          "$ref": "#/definitions/CloudApplianceSettings",
          "description": "The cloud appliance settings."
        }
      }
    },
    "SecuritySettingsProperties": {
      "description": "The properties of security settings of a device.",
      "required": [
        "remoteManagementSettings",
        "chapSettings"
      ],
      "type": "object",
      "properties": {
        "remoteManagementSettings": {
          "$ref": "#/definitions/RemoteManagementSettings",
          "description": "The settings for remote management of a device."
        },
        "chapSettings": {
          "$ref": "#/definitions/ChapSettings",
          "description": "The Challenge-Handshake Authentication Protocol (CHAP) settings."
        }
      }
    },
    "SendTestAlertEmailRequest": {
      "description": "The request for sending test alert email",
      "required": [
        "emailList"
      ],
      "type": "object",
      "properties": {
        "emailList": {
          "description": "The list of email IDs to send the test alert email",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "StorageAccountCredential": {
      "description": "The storage account credential.",
      "required": [
        "properties"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BaseModel"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/StorageAccountCredentialProperties",
          "description": "The storage account credential properties.",
          "x-ms-client-flatten": true
        }
      }
    },
    "StorageAccountCredentialList": {
      "description": "The collection of storage account credential entities.",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "The value.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/StorageAccountCredential"
          }
        }
      }
    },
    "StorageAccountCredentialProperties": {
      "description": "The storage account credential properties.",
      "required": [
        "endPoint",
        "sslStatus"
      ],
      "type": "object",
      "properties": {
        "endPoint": {
          "description": "The storage endpoint",
          "type": "string"
        },
        "sslStatus": {
          "description": "Signifies whether SSL needs to be enabled or not.",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "SslStatus",
            "modelAsString": false
          }
        },
        "accessKey": {
          "$ref": "#/definitions/AsymmetricEncryptedSecret",
          "description": "The details of the storage account password."
        },
        "volumesCount": {
          "format": "int32",
          "description": "The count of volumes using this storage account credential.",
          "type": "integer",
          "readOnly": true
        }
      }
    },
    "SymmetricEncryptedSecret": {
      "description": "Represents the secrets encrypted using Symmetric Encryption Key.",
      "required": [
        "value",
        "encryptionAlgorithm"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "The value of the secret itself. If the secret is in plaintext or null then EncryptionAlgorithm will be none.",
          "type": "string"
        },
        "valueCertificateThumbprint": {
          "description": "The thumbprint of the cert that was used to encrypt \"Value\".",
          "type": "string"
        },
        "encryptionAlgorithm": {
          "description": "The algorithm used to encrypt the \"Value\".",
          "enum": [
            "None",
            "AES256",
            "RSAES_PKCS1_v_1_5"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "EncryptionAlgorithm",
            "modelAsString": false
          }
        }
      }
    },
    "TargetEligibilityErrorMessage": {
      "description": "The error/warning message due to which the device is ineligible as a failover target device.",
      "type": "object",
      "properties": {
        "message": {
          "description": "The localized error message stating the reason why the device is not eligible as a target device.",
          "type": "string"
        },
        "resolution": {
          "description": "The localized resolution message for the error.",
          "type": "string"
        },
        "resultCode": {
          "description": "The result code for the error, due to which the device does not qualify as a failover target device.",
          "enum": [
            "TargetAndSourceCannotBeSameError",
            "TargetIsNotOnlineError",
            "TargetSourceIncompatibleVersionError",
            "LocalToTieredVolumesConversionWarning",
            "TargetInsufficientCapacityError",
            "TargetInsufficientLocalVolumeMemoryError",
            "TargetInsufficientTieredVolumeMemoryError"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "TargetEligibilityResultCode",
            "modelAsString": false
          }
        }
      }
    },
    "TargetEligibilityResult": {
      "description": "The eligibility result of device, as a failover target device.",
      "type": "object",
      "properties": {
        "eligibilityStatus": {
          "description": "The eligibility status of device, as a failover target device.",
          "enum": [
            "NotEligible",
            "Eligible"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "TargetEligibilityStatus",
            "modelAsString": false
          }
        },
        "messages": {
          "description": "The list of error messages, if a device does not qualify as a failover target device.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TargetEligibilityErrorMessage"
          }
        }
      }
    },
    "Time": {
      "description": "The time.",
      "required": [
        "hours",
        "minutes",
        "seconds"
      ],
      "type": "object",
      "properties": {
        "hours": {
          "format": "int32",
          "description": "The hour.",
          "maximum": 23,
          "minimum": 0,
          "type": "integer"
        },
        "minutes": {
          "format": "int32",
          "description": "The minute.",
          "maximum": 59,
          "minimum": 0,
          "type": "integer"
        },
        "seconds": {
          "format": "int32",
          "description": "The second.",
          "maximum": 59,
          "minimum": 0,
          "type": "integer"
        }
      }
    },
    "TimeSettings": {
      "description": "The time settings of a device.",
      "required": [
        "properties"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BaseModel"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/TimeSettingsProperties",
          "description": "The properties of the time settings of a device.",
          "x-ms-client-flatten": true
        }
      }
    },
    "TimeSettingsProperties": {
      "description": "The properties of time settings of a device.",
      "required": [
        "timeZone"
      ],
      "type": "object",
      "properties": {
        "timeZone": {
          "description": "The timezone of device, like '(UTC -06:00) Central America'",
          "type": "string"
        },
        "primaryTimeServer": {
          "description": "The primary Network Time Protocol (NTP) server name, like 'time.windows.com'.",
          "type": "string"
        },
        "secondaryTimeServer": {
          "description": "The secondary Network Time Protocol (NTP) server name, like 'time.contoso.com'. It's optional.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "Updates": {
      "description": "The updates profile of a device.",
      "required": [
        "properties"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BaseModel"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/UpdatesProperties",
          "description": "The properties of the updates profile.",
          "x-ms-client-flatten": true
        }
      }
    },
    "UpdatesProperties": {
      "description": "The properties of the updates profile.",
      "type": "object",
      "properties": {
        "regularUpdatesAvailable": {
          "description": "Set to 'true' if regular updates are available for the device.",
          "type": "boolean"
        },
        "maintenanceModeUpdatesAvailable": {
          "description": "Set to 'true' if maintenance mode update available.",
          "type": "boolean"
        },
        "isUpdateInProgress": {
          "description": "Indicates whether an update is in progress or not.",
          "type": "boolean"
        },
        "lastUpdatedTime": {
          "format": "date-time",
          "description": "The time when the last update was completed.",
          "type": "string"
        }
      }
    },
    "VmImage": {
      "description": "The virtual machine image.",
      "required": [
        "name",
        "version",
        "offer",
        "publisher",
        "sku"
      ],
      "type": "object",
      "properties": {
        "name": {
          "description": "The name.",
          "type": "string"
        },
        "version": {
          "description": "The version.",
          "type": "string"
        },
        "offer": {
          "description": "The offer.",
          "type": "string"
        },
        "publisher": {
          "description": "The publisher.",
          "type": "string"
        },
        "sku": {
          "description": "The SKU.",
          "type": "string"
        }
      }
    },
    "Volume": {
      "description": "The volume.",
      "required": [
        "properties"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BaseModel"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/VolumeProperties",
          "description": "The properties of the volume.",
          "x-ms-client-flatten": true
        }
      }
    },
    "VolumeContainer": {
      "description": "The volume container.",
      "required": [
        "properties"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BaseModel"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/VolumeContainerProperties",
          "description": "The volume container properties.",
          "x-ms-client-flatten": true
        }
      }
    },
    "VolumeContainerFailoverMetadata": {
      "description": "The metadata of the volume container, that is being considered as part of a failover set.",
      "type": "object",
      "properties": {
        "volumeContainerId": {
          "description": "The path ID of the volume container.",
          "type": "string"
        },
        "volumes": {
          "description": "The list of metadata of volumes inside the volume container, which contains valid cloud snapshots.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/VolumeFailoverMetadata"
          }
        }
      }
    },
    "VolumeContainerList": {
      "description": "The collection of volume container entities.",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "The value.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/VolumeContainer"
          }
        }
      }
    },
    "VolumeContainerProperties": {
      "description": "The properties of volume container.",
      "required": [
        "storageAccountCredentialId"
      ],
      "type": "object",
      "properties": {
        "encryptionKey": {
          "$ref": "#/definitions/AsymmetricEncryptedSecret",
          "description": "The key used to encrypt data in the volume container. It is required when property 'EncryptionStatus' is \"Enabled\"."
        },
        "encryptionStatus": {
          "description": "The flag to denote whether encryption is enabled or not.",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "EncryptionStatus",
            "modelAsString": false
          }
        },
        "volumeCount": {
          "format": "int32",
          "description": "The number of volumes in the volume Container.",
          "type": "integer",
          "readOnly": true
        },
        "storageAccountCredentialId": {
          "description": "The path ID of storage account associated with the volume container.",
          "type": "string"
        },
        "ownerShipStatus": {
          "description": "The owner ship status of the volume container. Only when the status is \"NotOwned\", the delete operation on the volume container is permitted.",
          "enum": [
            "Owned",
            "NotOwned"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "OwnerShipStatus",
            "modelAsString": false
          }
        },
        "bandWidthRateInMbps": {
          "format": "int32",
          "description": "The bandwidth-rate set on the volume container.",
          "type": "integer"
        },
        "bandwidthSettingId": {
          "description": "The ID of the bandwidth setting associated with the volume container.",
          "type": "string"
        },
        "totalCloudStorageUsageInBytes": {
          "format": "int64",
          "description": "The total cloud storage for the volume container.",
          "type": "integer",
          "readOnly": true
        }
      }
    },
    "VolumeFailoverMetadata": {
      "description": "The metadata of a volume that has valid cloud snapshot.",
      "type": "object",
      "properties": {
        "volumeId": {
          "description": "The path ID of the volume.",
          "type": "string"
        },
        "volumeType": {
          "description": "The type of the volume.",
          "enum": [
            "Tiered",
            "Archival",
            "LocallyPinned"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "VolumeType",
            "modelAsString": false
          }
        },
        "sizeInBytes": {
          "format": "int64",
          "description": "The size of the volume in bytes at the time the snapshot was taken.",
          "type": "integer"
        },
        "backupCreatedDate": {
          "format": "date-time",
          "description": "The date at which the snapshot was taken.",
          "type": "string"
        },
        "backupElementId": {
          "description": "The path ID of the backup-element for this volume, inside the backup set.",
          "type": "string"
        },
        "backupId": {
          "description": "The path ID of the backup set.",
          "type": "string"
        },
        "backupPolicyId": {
          "description": "The path ID of the backup policy using which the snapshot was taken.",
          "type": "string"
        }
      }
    },
    "VolumeList": {
      "description": "The collection of volumes.",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "The value.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Volume"
          }
        }
      }
    },
    "VolumeProperties": {
      "description": "The properties of volume.",
      "required": [
        "sizeInBytes",
        "volumeType",
        "accessControlRecordIds",
        "volumeStatus",
        "monitoringStatus"
      ],
      "type": "object",
      "properties": {
        "sizeInBytes": {
          "format": "int64",
          "description": "The size of the volume in bytes.",
          "type": "integer"
        },
        "volumeType": {
          "description": "The type of the volume.",
          "enum": [
            "Tiered",
            "Archival",
            "LocallyPinned"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "VolumeType",
            "modelAsString": false
          }
        },
        "volumeContainerId": {
          "description": "The ID of the volume container, in which this volume is created.",
          "type": "string",
          "readOnly": true
        },
        "accessControlRecordIds": {
          "description": "The IDs of the access control records, associated with the volume.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "volumeStatus": {
          "description": "The volume status.",
          "enum": [
            "Online",
            "Offline"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "VolumeStatus",
            "modelAsString": false
          }
        },
        "operationStatus": {
          "description": "The operation status on the volume.",
          "enum": [
            "None",
            "Updating",
            "Deleting",
            "Restoring"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "OperationStatus",
            "modelAsString": false
          }
        },
        "backupStatus": {
          "description": "The backup status of the volume.",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "BackupStatus",
            "modelAsString": false
          }
        },
        "monitoringStatus": {
          "description": "The monitoring status of the volume.",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "MonitoringStatus",
            "modelAsString": false
          }
        },
        "backupPolicyIds": {
          "description": "The IDs of the backup policies, in which this volume is part of.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "readOnly": true
        }
      }
    },
    "WebproxySettings": {
      "description": "The web proxy settings on the device.",
      "required": [
        "authentication",
        "username"
      ],
      "type": "object",
      "properties": {
        "connectionUri": {
          "description": "The connection URI.",
          "type": "string"
        },
        "authentication": {
          "description": "The authentication type.",
          "enum": [
            "Invalid",
            "None",
            "Basic",
            "NTLM"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "AuthenticationType",
            "modelAsString": false
          }
        },
        "username": {
          "description": "The webproxy username.",
          "type": "string"
        }
      }
    }
  },
  "parameters": {
    "apiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "description": "The api version",
      "required": true,
      "type": "string",
      "x-ms-skip-url-encoding": true
    },
    "deviceNameParameter": {
      "name": "deviceName",
      "in": "path",
      "description": "The device name",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method",
      "x-ms-skip-url-encoding": true
    },
    "managerNameParameter": {
      "name": "managerName",
      "in": "path",
      "description": "The manager name",
      "required": true,
      "type": "string",
      "maxLength": 50,
      "minLength": 2,
      "x-ms-parameter-location": "method",
      "x-ms-skip-url-encoding": true
    },
    "resourceGroupNameParameter": {
      "name": "resourceGroupName",
      "in": "path",
      "description": "The resource group name",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method",
      "x-ms-skip-url-encoding": true
    },
    "subscriptionIdParameter": {
      "name": "subscriptionId",
      "in": "path",
      "description": "The subscription id",
      "required": true,
      "type": "string",
      "x-ms-skip-url-encoding": true
    }
  },
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "description": "Azure Active Directory OAuth2 Flow",
      "flow": "implicit",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ]
}
