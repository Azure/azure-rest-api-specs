{
  "swagger": "2.0",
  "info": {
    "title": "Microsoft.ConnectedCredentials",
    "version": "2023-06-12-preview",
    "description": "Connected Credentials Provider management API.",
    "x-typespec-generated": [
      {
        "emitter": "@azure-tools/typespec-autorest"
      }
    ]
  },
  "schemes": [
    "https"
  ],
  "host": "management.azure.com",
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "description": "Azure Active Directory OAuth2 Flow.",
      "flow": "implicit",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "tags": [
    {
      "name": "Operations"
    },
    {
      "name": "Credentials"
    }
  ],
  "paths": {
    "/providers/Microsoft.ConnectedCredentials/operations": {
      "get": {
        "operationId": "Operations_List",
        "tags": [
          "Operations"
        ],
        "description": "List the operations for the provider",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/OperationListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Operations_List example": {
            "$ref": "./examples/Operations_List_MaximumSet_Gen.json"
          },
          "Operations_List min example": {
            "$ref": "./examples/Operations_List_MinimumSet_Gen.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ConnectedCredentials/credentials": {
      "get": {
        "operationId": "Credentials_ListBySubscription",
        "tags": [
          "Credentials"
        ],
        "description": "List Credential resources by subscription ID",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/CredentialListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Credentials_ListBySubscription example": {
            "$ref": "./examples/Credentials_ListBySubscription_MaximumSet_Gen.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ConnectedCredentials/credentials": {
      "get": {
        "operationId": "Credentials_ListByResourceGroup",
        "tags": [
          "Credentials"
        ],
        "description": "List Credential resources by resource group",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/CredentialListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Credentials_ListByResourceGroup example": {
            "$ref": "./examples/Credentials_ListByResourceGroup_MaximumSet_Gen.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ConnectedCredentials/credentials/{credentialName}": {
      "get": {
        "operationId": "Credentials_Get",
        "tags": [
          "Credentials"
        ],
        "description": "Get a Credential",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "credentialName",
            "in": "path",
            "description": "The resource name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9-]{3,24}$"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Credential"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Credentials_Get max example": {
            "$ref": "./examples/Credentials_Get_MaximumSet_Gen.json"
          }
        }
      },
      "put": {
        "operationId": "Credentials_CreateOrUpdate",
        "tags": [
          "Credentials"
        ],
        "description": "Create a Credential",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "credentialName",
            "in": "path",
            "description": "The resource name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9-]{3,24}$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Credential"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Credential"
            }
          },
          "201": {
            "description": "ARM create operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Credential"
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Credentials_CreateOrUpdate example": {
            "$ref": "./examples/Credentials_CreateOrUpdate_MaximumSet_Gen.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "Credentials_Update",
        "tags": [
          "Credentials"
        ],
        "description": "Update a Credential",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "credentialName",
            "in": "path",
            "description": "The resource name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9-]{3,24}$"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "The resource properties to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CredentialUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Credential"
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Credentials_Update example": {
            "$ref": "./examples/Credentials_Update_MaximumSet_Gen.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "Credentials_Delete",
        "tags": [
          "Credentials"
        ],
        "description": "Delete a Credential",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "credentialName",
            "in": "path",
            "description": "The resource name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9-]{3,24}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Credentials_Delete max example": {
            "$ref": "./examples/Credentials_Delete_MaximumSet_Gen.json"
          },
          "Credentials_Delete min example": {
            "$ref": "./examples/Credentials_Delete_MinimumSet_Gen.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    }
  },
  "definitions": {
    "AzureKvProvider": {
      "type": "object",
      "description": "Provider specific settings.",
      "properties": {
        "vaultUrl": {
          "type": "string",
          "description": "Vault Url from which the secrets to be fetched from.",
          "x-ms-mutability": [
            "read",
            "update",
            "create"
          ]
        },
        "deleteOption": {
          "type": "string",
          "description": "Whether to delete the secret from the source or other delete behavior customizations.",
          "x-ms-mutability": [
            "read",
            "update",
            "create"
          ]
        }
      }
    },
    "Credential": {
      "type": "object",
      "description": "A ConnectedCredentialsProviderHub resource",
      "properties": {
        "properties": {
          "$ref": "#/definitions/CredentialProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "extendedLocation": {
          "$ref": "#/definitions/ExtendedLocation",
          "description": "The extended location."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "CredentialListResult": {
      "type": "object",
      "description": "The response of a Credential list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The Credential items on this page",
          "items": {
            "$ref": "#/definitions/Credential"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "CredentialProperties": {
      "type": "object",
      "description": "Details of the ConnectedCredentials Credential.",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "The status of the last operation.",
          "readOnly": true
        },
        "providerType": {
          "type": "string",
          "description": "Used to configure the provider.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "friendlyName": {
          "type": "string",
          "description": "The friendly name of the credential.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "azureKvProvider": {
          "$ref": "#/definitions/AzureKvProvider",
          "description": "Provider specific settings.",
          "x-ms-mutability": [
            "read",
            "update",
            "create"
          ]
        },
        "target": {
          "$ref": "#/definitions/Target",
          "description": "Details of the target K8s secret.",
          "x-ms-mutability": [
            "read",
            "update",
            "create"
          ]
        },
        "data": {
          "type": "array",
          "description": " Data defines the connection between the Kubernetes Secret keys and the Provider data, Array.",
          "items": {
            "$ref": "#/definitions/Data"
          },
          "x-ms-identifiers": [
            "remoteRef"
          ],
          "x-ms-mutability": [
            "read",
            "update",
            "create"
          ]
        }
      }
    },
    "CredentialUpdate": {
      "type": "object",
      "description": "The type used for update operations of the Credential.",
      "properties": {
        "extendedLocation": {
          "$ref": "#/definitions/ExtendedLocation",
          "description": "The extended location."
        },
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "$ref": "#/definitions/CredentialUpdateProperties",
          "x-ms-client-flatten": true
        }
      }
    },
    "CredentialUpdateProperties": {
      "type": "object",
      "description": "The updatable properties of the Credential.",
      "properties": {
        "azureKvProvider": {
          "$ref": "#/definitions/AzureKvProvider",
          "description": "Provider specific settings.",
          "x-ms-mutability": [
            "read",
            "update",
            "create"
          ]
        },
        "target": {
          "$ref": "#/definitions/Target",
          "description": "Details of the target K8s secret.",
          "x-ms-mutability": [
            "read",
            "update",
            "create"
          ]
        },
        "data": {
          "type": "array",
          "description": " Data defines the connection between the Kubernetes Secret keys and the Provider data, Array.",
          "items": {
            "$ref": "#/definitions/Data"
          },
          "x-ms-identifiers": [
            "remoteRef"
          ],
          "x-ms-mutability": [
            "read",
            "update",
            "create"
          ]
        }
      }
    },
    "Data": {
      "type": "object",
      "description": "The data defines the connection between the Kubernetes Secret keys and the Provider data.",
      "properties": {
        "secretKey": {
          "type": "string",
          "description": "SecretKey defines the key in which the controller stores the value.",
          "x-ms-mutability": [
            "read",
            "update",
            "create"
          ]
        },
        "remoteRef": {
          "$ref": "#/definitions/RemoteRef",
          "description": "Identifier of the secret in the provider.",
          "x-ms-mutability": [
            "read",
            "update",
            "create"
          ]
        }
      }
    },
    "ExtendedLocation": {
      "type": "object",
      "description": "The extended location.",
      "properties": {
        "type": {
          "type": "string",
          "description": "The extended location type.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "name": {
          "type": "string",
          "description": "The extended location name.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      }
    },
    "Metadata": {
      "type": "object",
      "description": "Metadata of credential resource.",
      "properties": {
        "annotations": {
          "type": "object",
          "description": "Annotations of credential resource.",
          "additionalProperties": {
            "type": "string"
          },
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "labels": {
          "type": "object",
          "description": "Labels of credential resource.",
          "additionalProperties": {
            "type": "string"
          },
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      }
    },
    "ProvisioningState": {
      "type": "string",
      "description": "The status of the current operation.",
      "enum": [
        "Succeeded",
        "Failed",
        "Canceled",
        "Provisioning",
        "Updating",
        "Deleting",
        "Accepted"
      ],
      "x-ms-enum": {
        "name": "ProvisioningState",
        "modelAsString": true,
        "values": [
          {
            "name": "Succeeded",
            "value": "Succeeded",
            "description": "Resource has been created."
          },
          {
            "name": "Failed",
            "value": "Failed",
            "description": "Resource creation failed."
          },
          {
            "name": "Canceled",
            "value": "Canceled",
            "description": "Resource creation was canceled."
          },
          {
            "name": "Provisioning",
            "value": "Provisioning",
            "description": "The provisioning resource state."
          },
          {
            "name": "Updating",
            "value": "Updating",
            "description": "The updating resource state."
          },
          {
            "name": "Deleting",
            "value": "Deleting",
            "description": "The deleting resource state."
          },
          {
            "name": "Accepted",
            "value": "Accepted",
            "description": "The accepted resource state."
          }
        ]
      }
    },
    "RemoteRef": {
      "type": "object",
      "description": "Identifier of the secret in the provider.",
      "properties": {
        "key": {
          "type": "string",
          "description": "The key of the secret identifier.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      }
    },
    "Target": {
      "type": "object",
      "description": "Details of the target K8s secret.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name defines the name of the Secret resource to be managed. Defaults to the name of the credentials CR name.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "type": {
          "type": "string",
          "description": "Secret type, Defaults to Opaque",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "namespace": {
          "type": "string",
          "description": "Secret resource namespace, should be same as CL namespace.",
          "readOnly": true
        },
        "metadata": {
          "$ref": "#/definitions/Metadata",
          "description": "Metadata associated with credentials.",
          "x-ms-mutability": [
            "read",
            "update",
            "create"
          ]
        }
      }
    }
  },
  "parameters": {}
}
