{
  "swagger": "2.0",
  "info": {
    "title": "AutomationManagement",
    "version": "2019-06-01",
    "x-ms-code-generation-settings": {
      "useDateTimeOffset": true
    }
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json",
    "text/plain"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Azure Active Directory OAuth2 Flow",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "paths": {
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/agentRegistrationInformation": {
      "get": {
        "tags": [
          "AgentRegistrationInformation"
        ],
        "operationId": "AgentRegistrationInformation_Get",
        "description": "Retrieve the automation agent registration information.",
        "externalDocs": {
          "url": "http://aka.ms/azureautomationsdk/agentregistrationoperations"
        },
        "x-ms-examples": {
          "Get the agent registration information": {
            "$ref": "./examples/getAgentRegistration.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../common/v1/definitions.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../common/v1/definitions.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../common/v1/definitions.json#/parameters/AutomationAccountNameParameter"
          },
          {
            "$ref": "../../common/v1/definitions.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AgentRegistration"
            }
          },
          "default": {
            "description": "Automation error response describing why the operation failed.",
            "schema": {
              "$ref": "../../common/v1/definitions.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/agentRegistrationInformation/regenerateKey": {
      "post": {
        "tags": [
          "AgentRegistrationInformation"
        ],
        "operationId": "AgentRegistrationInformation_RegenerateKey",
        "description": "Regenerate a primary or secondary agent registration key",
        "x-ms-examples": {
          "Regenerate registration key": {
            "$ref": "./examples/regenerateAgentRegistrationKey.json"
          }
        },
        "externalDocs": {
          "url": "http://aka.ms/azureautomationsdk/agentregistrationoperations"
        },
        "parameters": [
          {
            "$ref": "../../common/v1/definitions.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../common/v1/definitions.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../common/v1/definitions.json#/parameters/AutomationAccountNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AgentRegistrationRegenerateKeyParameter"
            },
            "description": "The name of the agent registration key to be regenerated"
          },
          {
            "$ref": "../../common/v1/definitions.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AgentRegistration"
            }
          },
          "default": {
            "description": "Automation error response describing why the operation failed.",
            "schema": {
              "$ref": "../../common/v1/definitions.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/nodes/{nodeId}": {
      "delete": {
        "tags": [
          "DscNode"
        ],
        "operationId": "DscNode_Delete",
        "description": "Delete the dsc node identified by node id.",
        "x-ms-examples": {
          "Delete a DSC Node": {
            "$ref": "./examples/deleteDscNode.json"
          }
        },
        "externalDocs": {
          "url": "http://aka.ms/azureautomationsdk/dscnodeoperations"
        },
        "parameters": [
          {
            "$ref": "../../common/v1/definitions.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../common/v1/definitions.json#/parameters/AutomationAccountNameParameter"
          },
          {
            "name": "nodeId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The node id."
          },
          {
            "$ref": "../../common/v1/definitions.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../common/v1/definitions.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "default": {
            "description": "Automation error response describing why the operation failed.",
            "schema": {
              "$ref": "../../common/v1/definitions.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "get": {
        "tags": [
          "DscNode"
        ],
        "operationId": "DscNode_Get",
        "description": "Retrieve the dsc node identified by node id.",
        "externalDocs": {
          "url": "http://aka.ms/azureautomationsdk/dscnodeoperations"
        },
        "x-ms-examples": {
          "Get a node": {
            "$ref": "./examples/getDscNode.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../common/v1/definitions.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../common/v1/definitions.json#/parameters/AutomationAccountNameParameter"
          },
          {
            "name": "nodeId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The node id."
          },
          {
            "$ref": "../../common/v1/definitions.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../common/v1/definitions.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DscNode"
            }
          },
          "default": {
            "description": "Automation error response describing why the operation failed.",
            "schema": {
              "$ref": "../../common/v1/definitions.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "DscNode"
        ],
        "operationId": "DscNode_Update",
        "description": "Update the dsc node.",
        "externalDocs": {
          "url": "http://aka.ms/azureautomationsdk/dscnodeoperations"
        },
        "x-ms-examples": {
          "Update a node": {
            "$ref": "./examples/updateDscNode.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../common/v1/definitions.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../common/v1/definitions.json#/parameters/AutomationAccountNameParameter"
          },
          {
            "name": "nodeId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Parameters supplied to the update dsc node."
          },
          {
            "name": "dscNodeUpdateParameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DscNodeUpdateParameters"
            },
            "description": "Parameters supplied to the update dsc node."
          },
          {
            "$ref": "../../common/v1/definitions.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../common/v1/definitions.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DscNode"
            }
          },
          "default": {
            "description": "Automation error response describing why the operation failed.",
            "schema": {
              "$ref": "../../common/v1/definitions.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/nodes": {
      "get": {
        "tags": [
          "DscNode"
        ],
        "operationId": "DscNode_ListByAutomationAccount",
        "description": "Retrieve a list of dsc nodes.",
        "externalDocs": {
          "url": "http://aka.ms/azureautomationsdk/dscnodeoperations"
        },
        "x-ms-examples": {
          "List DSC nodes by Automation Account": {
            "$ref": "./examples/listAllDscNodesByAutomationAccount.json"
          },
          "List Paged DSC nodes by Automation Account with no filters": {
            "$ref": "./examples/listPagedDscNodesByAutomationAccountWithNoFilter.json"
          },
          "List Paged DSC nodes by Automation Account with name filter": {
            "$ref": "./examples/listPagedDscNodesByAutomationAccountWithNameFilter.json"
          },
          "List Paged DSC nodes by Automation Account with node status filter": {
            "$ref": "./examples/listPagedDscNodesByAutomationAccountWithStatusFilter.json"
          },
          "List Paged DSC nodes by Automation Account with Node Configuration Custom filter": {
            "$ref": "./examples/listPagedDscNodesByAutomationAccountWithNodeConfigurationCustomFilter.json"
          },
          "List Paged DSC nodes by Automation Account where Node Configurations are not assigned filter": {
            "$ref": "./examples/listPagedDscNodesByAutomationAccountWithNodeConfigurationNotAssignedFilter.json"
          },
          "List Paged DSC nodes by Automation Account with version filter": {
            "$ref": "./examples/listPagedDscNodesByAutomationAccountWithVersionFilter.json"
          },
          "List Paged DSC nodes with filters separated by 'and'": {
            "$ref": "./examples/listPagedDscNodesByAutomationAccountWithCompositeFilter.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../common/v1/definitions.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../common/v1/definitions.json#/parameters/AutomationAccountNameParameter"
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The filter to apply on the operation."
          },
          {
            "name": "$skip",
            "in": "query",
            "required": false,
            "type": "integer",
            "description": "The number of rows to skip."
          },
          {
            "name": "$top",
            "in": "query",
            "required": false,
            "type": "integer",
            "description": "The number of rows to take."
          },
          {
            "name": "$inlinecount",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Return total rows."
          },
          {
            "$ref": "../../common/v1/definitions.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../common/v1/definitions.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DscNodeListResult"
            }
          },
          "default": {
            "description": "Automation error response describing why the operation failed.",
            "schema": {
              "$ref": "../../common/v1/definitions.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-odata": "#/definitions/DscNode"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/nodes/{nodeId}/reports": {
      "get": {
        "tags": [
          "NodeReports"
        ],
        "operationId": "NodeReports_ListByNode",
        "description": "Retrieve the Dsc node report list by node id.",
        "externalDocs": {
          "url": "http://aka.ms/azureautomationsdk/dscnodereportoperations"
        },
        "x-ms-examples": {
          "List DSC reports by node id.": {
            "$ref": "./examples/listDscNodeReportsByNode.json"
          },
          "List Paged DSC reports by node id.": {
            "$ref": "./examples/listPagedDscNodeReportsByNode.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../common/v1/definitions.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../common/v1/definitions.json#/parameters/AutomationAccountNameParameter"
          },
          {
            "name": "nodeId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The parameters supplied to the list operation."
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The filter to apply on the operation."
          },
          {
            "$ref": "../../common/v1/definitions.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../common/v1/definitions.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DscNodeReportListResult"
            }
          },
          "default": {
            "description": "Automation error response describing why the operation failed.",
            "schema": {
              "$ref": "../../common/v1/definitions.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-odata": "#/definitions/DscNodeReport"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/nodes/{nodeId}/reports/{reportId}": {
      "get": {
        "tags": [
          "NodeReports"
        ],
        "operationId": "NodeReports_Get",
        "description": "Retrieve the Dsc node report data by node id and report id.",
        "externalDocs": {
          "url": "http://aka.ms/azureautomationsdk/dscnodereportoperations"
        },
        "x-ms-examples": {
          "Get Dsc node report data by node id and report id. ": {
            "$ref": "./examples/getDscNodeReport.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../common/v1/definitions.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../common/v1/definitions.json#/parameters/AutomationAccountNameParameter"
          },
          {
            "name": "nodeId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The Dsc node id."
          },
          {
            "name": "reportId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The report id."
          },
          {
            "$ref": "../../common/v1/definitions.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../common/v1/definitions.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DscNodeReport"
            }
          },
          "default": {
            "description": "Automation error response describing why the operation failed.",
            "schema": {
              "$ref": "../../common/v1/definitions.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/nodes/{nodeId}/reports/{reportId}/content": {
      "get": {
        "tags": [
          "NodeReports"
        ],
        "operationId": "NodeReports_GetContent",
        "description": "Retrieve the Dsc node reports by node id and report id.",
        "externalDocs": {
          "url": "http://aka.ms/azureautomationsdk/dscnodereportoperations"
        },
        "x-ms-examples": {
          "Get content of node": {
            "$ref": "./examples/getDscNodeReportContent.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../common/v1/definitions.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../common/v1/definitions.json#/parameters/AutomationAccountNameParameter"
          },
          {
            "name": "nodeId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The Dsc node id."
          },
          {
            "name": "reportId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The report id."
          },
          {
            "$ref": "../../common/v1/definitions.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../common/v1/definitions.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "default": {
            "description": "Automation error response describing why the operation failed.",
            "schema": {
              "$ref": "../../common/v1/definitions.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "DscNodeReportListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DscNodeReport"
          },
          "description": "Gets or sets a list of dsc node reports."
        },
        "nextLink": {
          "type": "string",
          "description": "Gets or sets the next link."
        }
      },
      "description": "The response model for the list dsc nodes operation."
    },
    "DscReportResourceNavigation": {
      "properties": {
        "resourceId": {
          "type": "string",
          "description": "Gets or sets the ID of the resource to navigate to."
        }
      },
      "description": "Navigation for DSC Report Resource."
    },
    "DscMetaConfiguration": {
      "properties": {
        "configurationModeFrequencyMins": {
          "type": "integer",
          "format": "int32",
          "description": "Gets or sets the ConfigurationModeFrequencyMins value of the meta configuration."
        },
        "rebootNodeIfNeeded": {
          "type": "boolean",
          "description": "Gets or sets the RebootNodeIfNeeded value of the meta configuration."
        },
        "configurationMode": {
          "type": "string",
          "description": "Gets or sets the ConfigurationMode value of the meta configuration."
        },
        "actionAfterReboot": {
          "type": "string",
          "description": "Gets or sets the ActionAfterReboot value of the meta configuration."
        },
        "certificateId": {
          "type": "string",
          "description": "Gets or sets the CertificateId value of the meta configuration."
        },
        "refreshFrequencyMins": {
          "type": "integer",
          "format": "int32",
          "description": "Gets or sets the RefreshFrequencyMins value of the meta configuration."
        },
        "allowModuleOverwrite": {
          "type": "boolean",
          "description": "Gets or sets the AllowModuleOverwrite value of the meta configuration."
        }
      },
      "description": "Definition of the DSC Meta Configuration."
    },
    "DscNodeReport": {
      "properties": {
        "endTime": {
          "type": "string",
          "format": "date-time",
          "description": "Gets or sets the end time of the node report.",
          "x-nullable": true
        },
        "lastModifiedTime": {
          "type": "string",
          "format": "date-time",
          "description": "Gets or sets the lastModifiedTime of the node report.",
          "x-nullable": false
        },
        "startTime": {
          "type": "string",
          "format": "date-time",
          "description": "Gets or sets the start time of the node report.",
          "x-nullable": true
        },
        "type": {
          "type": "string",
          "description": "Gets or sets the type of the node report."
        },
        "reportId": {
          "type": "string",
          "description": "Gets or sets the id of the node report."
        },
        "status": {
          "type": "string",
          "description": "Gets or sets the status of the node report."
        },
        "refreshMode": {
          "type": "string",
          "description": "Gets or sets the refreshMode of the node report."
        },
        "rebootRequested": {
          "type": "string",
          "description": "Gets or sets the rebootRequested of the node report."
        },
        "reportFormatVersion": {
          "type": "string",
          "description": "Gets or sets the reportFormatVersion of the node report."
        },
        "configurationVersion": {
          "type": "string",
          "description": "Gets or sets the configurationVersion of the node report."
        },
        "id": {
          "type": "string",
          "description": "Gets or sets the id."
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DscReportError"
          },
          "description": "Gets or sets the errors for the node report."
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DscReportResource"
          },
          "description": "Gets or sets the resource for the node report."
        },
        "metaConfiguration": {
          "$ref": "#/definitions/DscMetaConfiguration",
          "description": "Gets or sets the metaConfiguration of the node at the time of the report."
        },
        "hostName": {
          "type": "string",
          "description": "Gets or sets the hostname of the node that sent the report."
        },
        "iPV4Addresses": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Gets or sets the IPv4 address of the node that sent the report."
        },
        "iPV6Addresses": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Gets or sets the IPv6 address of the node that sent the report."
        },
        "numberOfResources": {
          "type": "integer",
          "format": "int32",
          "description": "Gets or sets the number of resource in the node report."
        },
        "rawErrors": {
          "type": "string",
          "description": "Gets or sets the unparsed errors for the node report."
        }
      },
      "description": "Definition of the dsc node report type."
    },
    "DscReportResource": {
      "properties": {
        "resourceId": {
          "type": "string",
          "description": "Gets or sets the ID of the resource."
        },
        "sourceInfo": {
          "type": "string",
          "description": "Gets or sets the source info of the resource."
        },
        "dependsOn": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DscReportResourceNavigation"
          },
          "description": "Gets or sets the Resource Navigation values for resources the resource depends on."
        },
        "moduleName": {
          "type": "string",
          "description": "Gets or sets the module name of the resource."
        },
        "moduleVersion": {
          "type": "string",
          "description": "Gets or sets the module version of the resource."
        },
        "resourceName": {
          "type": "string",
          "description": "Gets or sets the name of the resource."
        },
        "error": {
          "type": "string",
          "description": "Gets or sets the error of the resource."
        },
        "status": {
          "type": "string",
          "description": "Gets or sets the status of the resource."
        },
        "durationInSeconds": {
          "type": "number",
          "format": "double",
          "description": "Gets or sets the duration in seconds for the resource."
        },
        "startDate": {
          "type": "string",
          "format": "date-time",
          "description": "Gets or sets the start date of the resource.",
          "x-nullable": false
        }
      },
      "description": "Definition of the DSC Report Resource."
    },
    "DscReportError": {
      "properties": {
        "errorSource": {
          "type": "string",
          "description": "Gets or sets the source of the error."
        },
        "resourceId": {
          "type": "string",
          "description": "Gets or sets the resource ID which generated the error."
        },
        "errorCode": {
          "type": "string",
          "description": "Gets or sets the error code."
        },
        "errorMessage": {
          "type": "string",
          "description": "Gets or sets the error message."
        },
        "locale": {
          "type": "string",
          "description": "Gets or sets the locale of the error."
        },
        "errorDetails": {
          "type": "string",
          "description": "Gets or sets the error details."
        }
      },
      "description": "Definition of the dsc node report error type."
    },
    "AgentRegistration": {
      "properties": {
        "dscMetaConfiguration": {
          "type": "string",
          "description": "Gets or sets the dsc meta configuration."
        },
        "endpoint": {
          "type": "string",
          "description": "Gets or sets the dsc server endpoint."
        },
        "keys": {
          "$ref": "#/definitions/AgentRegistrationKeys",
          "description": "Gets or sets the agent registration keys."
        },
        "id": {
          "type": "string",
          "description": "Gets or sets the id."
        }
      },
      "description": "Definition of the agent registration information type."
    },
    "AgentRegistrationKeys": {
      "properties": {
        "primary": {
          "type": "string",
          "description": "Gets or sets the primary key."
        },
        "secondary": {
          "type": "string",
          "description": "Gets or sets the secondary key."
        }
      },
      "description": "Definition of the agent registration keys."
    },
    "DscNode": {
      "description": "Definition of a DscNode",
      "properties": {
        "properties": {
          "$ref": "#/definitions/DscNodeProperties",
          "x-ms-client-flatten": true,
          "description": "The properties of a DscNode."
        }
      },
      "allOf": [
        {
          "$ref": "../../common/v1/definitions.json#/definitions/ProxyResource"
        }
      ]
    },
    "DscNodeProperties": {
      "description": "The properties of a DscNode",
      "properties": {
        "lastSeen": {
          "type": "string",
          "format": "date-time",
          "description": "Gets or sets the last seen time of the node.",
          "x-nullable": false
        },
        "registrationTime": {
          "type": "string",
          "format": "date-time",
          "description": "Gets or sets the registration time of the node.",
          "x-nullable": false
        },
        "ip": {
          "type": "string",
          "description": "Gets or sets the ip of the node."
        },
        "accountId": {
          "type": "string",
          "description": "Gets or sets the account id of the node."
        },
        "nodeConfiguration": {
          "x-nullable": true,
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/DscNodeConfigurationAssociationProperty",
          "description": "Gets or sets the configuration of the node."
        },
        "status": {
          "type": "string",
          "description": "Gets or sets the status of the node."
        },
        "nodeId": {
          "type": "string",
          "description": "Gets or sets the node id."
        },
        "etag": {
          "type": "string",
          "description": "Gets or sets the etag of the resource."
        },
        "totalCount": {
          "type": "integer",
          "description": "Gets the total number of records matching filter criteria."
        },
        "extensionHandler": {
          "type": "array",
          "description": "Gets or sets the list of extensionHandler properties for a Node.",
          "items": {
            "$ref": "#/definitions/DscNodeExtensionHandlerAssociationProperty"
          }
        }
      }
    },
    "DscNodeExtensionHandlerAssociationProperty": {
      "properties": {
        "name": {
          "type": "string",
          "description": "Gets or sets the name of the extension handler."
        },
        "version": {
          "type": "string",
          "description": "Gets or sets the version of the extension handler."
        }
      },
      "description": "The dsc extensionHandler property associated with the node"
    },
    "DscNodeConfigurationAssociationProperty": {
      "properties": {
        "name": {
          "type": "string",
          "description": "Gets or sets the name of the dsc node configuration."
        }
      },
      "description": "The dsc node configuration property associated with the entity."
    },
    "AgentRegistrationRegenerateKeyParameter": {
      "properties": {
        "keyName": {
          "type": "string",
          "description": "Gets or sets the agent registration key name - primary or secondary.",
          "enum": [
            "primary",
            "secondary"
          ],
          "x-ms-enum": {
            "name": "AgentRegistrationKeyName",
            "modelAsString": true
          }
        }
      },
      "required": [
        "keyName"
      ],
      "description": "The parameters supplied to the regenerate keys operation."
    },
    "DscNodeUpdateParameters": {
      "properties": {
        "nodeId": {
          "type": "string",
          "description": "Gets or sets the id of the dsc node."
        },
        "properties": {
          "properties": {
            "nodeConfiguration": {
              "x-ms-client-flatten": true,
              "$ref": "#/definitions/DscNodeConfigurationAssociationProperty",
              "description": "Gets or sets the configuration of the node."
            }
          }
        }
      },
      "description": "The parameters supplied to the update dsc node operation."
    },
    "DscNodeListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DscNode"
          },
          "description": "Gets or sets a list of dsc nodes."
        },
        "nextLink": {
          "type": "string",
          "description": "Gets or sets the next link."
        },
        "totalCount": {
          "type": "integer",
          "description": "Gets the total number of nodes matching filter criteria."
        }
      },
      "description": "The response model for the list dsc nodes operation."
    }
  },
  "parameters": {}
}
