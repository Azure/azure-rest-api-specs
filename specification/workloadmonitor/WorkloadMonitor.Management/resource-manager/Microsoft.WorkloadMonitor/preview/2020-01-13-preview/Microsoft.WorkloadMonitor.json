{
  "swagger": "2.0",
  "info": {
    "title": "Workload Monitor API",
    "version": "2020-01-13-preview",
    "description": "Workload Monitor API",
    "x-typespec-generated": [
      {
        "emitter": "@azure-tools/typespec-autorest"
      }
    ]
  },
  "schemes": [
    "https"
  ],
  "host": "management.azure.com",
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "description": "Azure Active Directory OAuth2 Flow.",
      "flow": "implicit",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "tags": [
    {
      "name": "Operations"
    },
    {
      "name": "HealthMonitors"
    },
    {
      "name": "HealthMonitorStateChanges"
    }
  ],
  "paths": {
    "/providers/Microsoft.WorkloadMonitor/operations": {
      "get": {
        "operationId": "Operations_List",
        "tags": [
          "Operations"
        ],
        "description": "List the operations for the provider",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/OperationListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.WorkloadMonitor/monitors": {
      "get": {
        "operationId": "HealthMonitors_List",
        "tags": [
          "HealthMonitors"
        ],
        "description": "Get the current health status of all monitors of a virtual machine. Optional parameters: $expand (retrieve the monitor's evidence and configuration) and $filter (filter by monitor name).",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Optionally filter by monitor name. Example: $filter=monitorName eq 'logical-disks|C:|disk-free-space-mb.'",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Optionally expand the monitor’s evidence and/or configuration. Example: $expand=evidence,configuration.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/HealthMonitorListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get monitor list with default values": {
            "$ref": "./examples/HealthMonitors_List_Get_Monitor_List_With_Default_Values.json"
          },
          "Get monitor list with expanded values": {
            "$ref": "./examples/HealthMonitors_List_Get_Monitor_List_With_Expanded_Values.json"
          },
          "Get monitor list with filtered values": {
            "$ref": "./examples/HealthMonitors_List_Get_Monitor_List_With_Filtered_Values.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.WorkloadMonitor/monitors/{monitorId}": {
      "get": {
        "operationId": "HealthMonitors_Get",
        "tags": [
          "HealthMonitors"
        ],
        "description": "Get the current health status of a monitor of a virtual machine. Optional parameter: $expand (retrieve the monitor's evidence and configuration).",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Optionally expand the monitor’s evidence and/or configuration. Example: $expand=evidence,configuration.",
            "required": false,
            "type": "string"
          },
          {
            "name": "monitorId",
            "in": "path",
            "description": "The monitor Id of the virtual machine.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/HealthMonitor"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get monitor with default values": {
            "$ref": "./examples/HealthMonitors_Get_Get_Monitor_With_Default_Values.json"
          },
          "Get monitor with expanded values": {
            "$ref": "./examples/HealthMonitors_Get_Get_Monitor_With_Expanded_Values.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.WorkloadMonitor/monitors/{monitorId}/history": {
      "get": {
        "operationId": "HealthMonitors_ListStateChanges",
        "tags": [
          "HealthMonitorStateChanges"
        ],
        "description": "Get the health state changes of a monitor of a virtual machine within the provided time window (default is the last 24 hours). Optional parameters: $expand (retrieve the monitor's evidence and configuration) and $filter (filter by heartbeat condition).",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Optionally filter by heartbeat condition. Example: $filter=isHeartbeat eq false.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Optionally expand the monitor’s evidence and/or configuration. Example: $expand=evidence,configuration.",
            "required": false,
            "type": "string"
          },
          {
            "name": "startTimestampUtc",
            "in": "query",
            "description": "The start of the time window.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "endTimestampUtc",
            "in": "query",
            "description": "The end of the time window.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "monitorId",
            "in": "path",
            "description": "The monitor Id of the virtual machine.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/HealthMonitorStateChangeListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get monitor state changes with default values": {
            "$ref": "./examples/HealthMonitors_ListStateChanges_Get_Monitor_State_Changes_With_Default_Values.json"
          },
          "Get monitor state changes with expanded values": {
            "$ref": "./examples/HealthMonitors_ListStateChanges_Get_Monitor_State_Changes_With_Expanded_Values.json"
          },
          "Get monitor state changes with filtered values": {
            "$ref": "./examples/HealthMonitors_ListStateChanges_Get_Monitor_State_Changes_With_Filtered_Values.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.WorkloadMonitor/monitors/{monitorId}/history/{timestampUnix}": {
      "get": {
        "operationId": "HealthMonitors_GetStateChange",
        "tags": [
          "HealthMonitorStateChanges"
        ],
        "description": "Get the health state change of a monitor of a virtual machine at the provided timestamp. Optional parameter: $expand (retrieve the monitor's evidence and configuration).",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Optionally expand the monitor’s evidence and/or configuration. Example: $expand=evidence,configuration.",
            "required": false,
            "type": "string"
          },
          {
            "name": "monitorId",
            "in": "path",
            "description": "The monitor Id of the virtual machine.",
            "required": true,
            "type": "string"
          },
          {
            "name": "timestampUnix",
            "in": "path",
            "description": "The timestamp of the state change (unix format).",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/HealthMonitorStateChange"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get monitor state change with default values": {
            "$ref": "./examples/HealthMonitors_GetStateChange_Get_Monitor_State_Change_With_Default_Values.json"
          },
          "Get monitor state change with expanded values": {
            "$ref": "./examples/HealthMonitors_GetStateChange_Get_Monitor_State_Change_With_Expanded_Values.json"
          }
        }
      }
    }
  },
  "definitions": {
    "ErrorDetails": {
      "type": "object",
      "description": "Error details",
      "properties": {
        "code": {
          "type": "string",
          "description": "Error code identifying the specific error."
        },
        "message": {
          "type": "string",
          "description": "A human-readable error message."
        }
      }
    },
    "ErrorResponseError": {
      "type": "object",
      "description": "Error info.",
      "properties": {
        "code": {
          "type": "string",
          "description": "Service-defined error code. This code serves as a sub-status for the HTTP error code specified in the response."
        },
        "message": {
          "type": "string",
          "description": "Human-readable representation of the error."
        },
        "details": {
          "type": "array",
          "description": "Error details.",
          "items": {
            "$ref": "#/definitions/ErrorDetails"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "HealthMonitor": {
      "type": "object",
      "description": "Information about the monitor’s current health status.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/HealthMonitorProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "HealthMonitorListResult": {
      "type": "object",
      "description": "The response of a HealthMonitor list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The HealthMonitor items on this page",
          "items": {
            "$ref": "#/definitions/HealthMonitor"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "HealthMonitorProperties": {
      "type": "object",
      "description": "Properties of the monitor.",
      "properties": {
        "monitorName": {
          "type": "string",
          "description": "Human-readable name of the monitor."
        },
        "monitorType": {
          "type": "string",
          "description": "Type of the monitor."
        },
        "monitoredObject": {
          "type": "string",
          "description": "Dynamic monitored object of the monitor."
        },
        "parentMonitorName": {
          "type": "string",
          "description": "Name of the parent monitor."
        },
        "previousMonitorState": {
          "$ref": "#/definitions/HealthState",
          "description": "Previous health state of the monitor.",
          "readOnly": true
        },
        "currentMonitorState": {
          "$ref": "#/definitions/HealthState",
          "description": "Current health state of the monitor.",
          "readOnly": true
        },
        "evaluationTimestamp": {
          "type": "string",
          "description": "Timestamp of the monitor's last health evaluation."
        },
        "currentStateFirstObservedTimestamp": {
          "type": "string",
          "description": "Timestamp of the monitor's last health state change."
        },
        "lastReportedTimestamp": {
          "type": "string",
          "description": "Timestamp of the monitor's last reported health state."
        },
        "evidence": {
          "type": "object",
          "description": "Evidence validating the monitor's current health state.",
          "additionalProperties": {}
        },
        "monitorConfiguration": {
          "type": "object",
          "description": "The configuration settings at the time of the monitor's health evaluation.",
          "additionalProperties": {}
        }
      }
    },
    "HealthMonitorStateChange": {
      "type": "object",
      "description": "Information about the monitor’s health state change at the provided timestamp.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/HealthMonitorStateChangeProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "HealthMonitorStateChangeListResult": {
      "type": "object",
      "description": "The response of a HealthMonitorStateChange list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The HealthMonitorStateChange items on this page",
          "items": {
            "$ref": "#/definitions/HealthMonitorStateChange"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "HealthMonitorStateChangeProperties": {
      "type": "object",
      "description": "Properties of the monitor.",
      "properties": {
        "monitorName": {
          "type": "string",
          "description": "Human-readable name of the monitor."
        },
        "monitorType": {
          "type": "string",
          "description": "Type of the monitor."
        },
        "monitoredObject": {
          "type": "string",
          "description": "Dynamic monitored object of the monitor."
        },
        "evaluationTimestamp": {
          "type": "string",
          "description": "Timestamp of the monitor's last health evaluation."
        },
        "currentStateFirstObservedTimestamp": {
          "type": "string",
          "description": "Timestamp of the monitor's last health state change."
        },
        "previousMonitorState": {
          "$ref": "#/definitions/HealthState",
          "description": "Previous health state of the monitor.",
          "readOnly": true
        },
        "currentMonitorState": {
          "$ref": "#/definitions/HealthState",
          "description": "Current health state of the monitor.",
          "readOnly": true
        },
        "evidence": {
          "type": "object",
          "description": "Evidence validating the monitor's current health state.",
          "additionalProperties": {}
        },
        "monitorConfiguration": {
          "type": "object",
          "description": "The configuration settings at the time of the monitor's health evaluation.",
          "additionalProperties": {}
        }
      }
    },
    "HealthState": {
      "type": "string",
      "description": "One of health states - healthy, critical, warning, unknown, none, disabled.",
      "enum": [
        "Healthy",
        "Critical",
        "Warning",
        "Unknown",
        "Disabled",
        "None"
      ],
      "x-ms-enum": {
        "name": "HealthState",
        "modelAsString": true
      }
    },
    "Resource": {
      "type": "object",
      "description": "The resource model definition for the ARM proxy resource, 'microsoft.workloadmonitor/monitors'.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The resource Id.",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The resource name.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The resource type.",
          "readOnly": true
        }
      }
    },
    "Versions": {
      "type": "string",
      "description": "The available API versions.",
      "enum": [
        "2020-01-13-preview"
      ],
      "x-ms-enum": {
        "name": "Versions",
        "modelAsString": true,
        "values": [
          {
            "name": "v2020_01_13_preview",
            "value": "2020-01-13-preview",
            "description": "The 2020-01-13-preview API version."
          }
        ]
      }
    }
  },
  "parameters": {}
}
