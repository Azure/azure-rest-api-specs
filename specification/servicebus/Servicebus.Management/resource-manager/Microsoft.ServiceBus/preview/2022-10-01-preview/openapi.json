{
  "swagger": "2.0",
  "info": {
    "title": "ServiceBusManagementClient",
    "version": "2022-10-01-preview",
    "description": "Azure Service Bus client for managing Namespace",
    "x-typespec-generated": [
      {
        "emitter": "@azure-tools/typespec-autorest"
      }
    ]
  },
  "schemes": [
    "https"
  ],
  "host": "management.azure.com",
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "description": "Azure Active Directory OAuth2 Flow.",
      "flow": "implicit",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "tags": [
    {
      "name": "Operations"
    },
    {
      "name": "Namespaces"
    },
    {
      "name": "PrivateLinkResources"
    },
    {
      "name": "PrivateEndpointConnections"
    },
    {
      "name": "DisasterRecoveryConfigs"
    },
    {
      "name": "MigrationConfigs"
    },
    {
      "name": "NamespaceAuthorizationRules"
    },
    {
      "name": "Queues"
    },
    {
      "name": "Topics"
    },
    {
      "name": "Rules"
    },
    {
      "name": "Subscriptions"
    }
  ],
  "paths": {
    "/providers/Microsoft.ServiceBus/operations": {
      "get": {
        "operationId": "Operations_List",
        "tags": [
          "Operations"
        ],
        "description": "List the operations for the provider",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/OperationListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ServiceBus/namespaces": {
      "get": {
        "operationId": "Namespaces_List",
        "tags": [
          "Namespaces"
        ],
        "description": "Gets all the available namespaces within the subscription, irrespective of the resource groups.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ServiceBusNamespaceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceBus": {
      "get": {
        "operationId": "PrivateEndpointConnections_Get",
        "tags": [
          "PrivateEndpointConnections"
        ],
        "description": "Gets a description for the specified Private Endpoint Connection.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnection"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "operationId": "PrivateEndpointConnections_CreateOrUpdate",
        "tags": [
          "PrivateEndpointConnections"
        ],
        "description": "Creates or updates PrivateEndpointConnections of service namespace.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnection"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'PrivateEndpointConnection' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnection"
            }
          },
          "201": {
            "description": "Resource 'PrivateEndpointConnection' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnection"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "patch": {
        "operationId": "Namespaces_Update",
        "tags": [
          "Namespaces"
        ],
        "description": "Updates a service namespace. Once created, this namespace's resource manifest is immutable. This operation is idempotent.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "The resource properties to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ServiceBusNamespaceUpdateParametersUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ServiceBusNamespace"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "operationId": "PrivateEndpointConnections_Delete",
        "tags": [
          "PrivateEndpointConnections"
        ],
        "description": "Deletes an existing Private Endpoint Connection.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceBus/AuthorizationRules": {
      "get": {
        "operationId": "NamespaceAuthorizationRules_ListByServiceBusNamespace",
        "tags": [
          "NamespaceAuthorizationRules"
        ],
        "description": "Gets the authorization rules for a namespace.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ServiceBusAuthorizationRuleListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceBus/breakPairing": {
      "post": {
        "operationId": "DisasterRecoveryConfigs_BreakPairing",
        "tags": [
          "DisasterRecoveryConfigs"
        ],
        "description": "This operation disables the Disaster Recovery and stops replicating changes from primary to secondary namespaces",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "204": {
            "description": "ARM operation completed successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceBus/completeMigration": {
      "post": {
        "operationId": "MigrationConfigs_CompleteMigration",
        "tags": [
          "MigrationConfigs"
        ],
        "description": "This operation Completes Migration of entities by pointing the connection strings to Premium namespace and any entities created after the operation will be under Premium Namespace. CompleteMigration operation will fail when entity migration is in-progress.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "204": {
            "description": "ARM operation completed successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceBus/disasterRecoveryConfigs": {
      "get": {
        "operationId": "DisasterRecoveryConfigs_ListByServiceBusNamespace",
        "tags": [
          "DisasterRecoveryConfigs"
        ],
        "description": "Gets all Alias(Disaster Recovery configurations)",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ServiceBusDisasterRecoveryListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceBus/failOver": {
      "post": {
        "operationId": "DisasterRecoveryConfigs_FailOver",
        "tags": [
          "DisasterRecoveryConfigs"
        ],
        "description": "Invokes GEO DR failover and reconfigure the alias to point to the secondary namespace",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The content of the action request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FailoverProperties"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "ARM operation completed successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceBus/listKeys": {
      "post": {
        "operationId": "NamespaceAuthorizationRules_ListKeys",
        "tags": [
          "NamespaceAuthorizationRules"
        ],
        "description": "Gets the primary and secondary connection strings for the namespace.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ServiceBusAccessKeys"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceBus/migrationConfigurations": {
      "get": {
        "operationId": "MigrationConfigs_ListByServiceBusNamespace",
        "tags": [
          "MigrationConfigs"
        ],
        "description": "Gets all migrationConfigurations",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/MigrationConfigurationListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceBus/namespaces": {
      "get": {
        "operationId": "Namespaces_ListByResourceGroup",
        "tags": [
          "Namespaces"
        ],
        "description": "Gets the available namespaces within a resource group.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ServiceBusNamespaceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceBus/namespaces/{namespaceName}/disasterRecoveryConfigs/{alias}/authorizationRules": {
      "get": {
        "operationId": "DisasterRecoveryAuthorizationRulesOperations_List",
        "description": "Gets the authorization rules for a namespace.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Name of the Resource group within the Azure subscription.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "The namespace name",
            "required": true,
            "type": "string",
            "minLength": 6,
            "maxLength": 50
          },
          {
            "name": "alias",
            "in": "path",
            "description": "The Disaster Recovery configuration name",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/ServiceBusAuthorizationRuleListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceBus/namespaces/{namespaceName}/disasterRecoveryConfigs/{alias}/authorizationRules/{authorizationRuleName}": {
      "get": {
        "operationId": "DisasterRecoveryAuthorizationRulesOperations_Get",
        "description": "Gets an authorization rule for a namespace by rule name.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Name of the Resource group within the Azure subscription.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "The namespace name",
            "required": true,
            "type": "string",
            "minLength": 6,
            "maxLength": 50
          },
          {
            "name": "alias",
            "in": "path",
            "description": "The Disaster Recovery configuration name",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50
          },
          {
            "name": "authorizationRuleName",
            "in": "path",
            "description": "The authorization rule name.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/ServiceBusAuthorizationRule"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceBus/namespaces/{namespaceName}/disasterRecoveryConfigs/{alias}/authorizationRules/{authorizationRuleName}/listKeys": {
      "post": {
        "operationId": "DisasterRecoveryAuthorizationRulesOperations_ListKeys",
        "description": "Gets the primary and secondary connection strings for the namespace.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Name of the Resource group within the Azure subscription.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "The namespace name",
            "required": true,
            "type": "string",
            "minLength": 6,
            "maxLength": 50
          },
          {
            "name": "alias",
            "in": "path",
            "description": "The Disaster Recovery configuration name",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50
          },
          {
            "name": "authorizationRuleName",
            "in": "path",
            "description": "The authorization rule name.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/ServiceBusAccessKeys"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceBus/namespaces/{namespaceName}/privateLinkResources/{resourceGroupName}/{namespaceName}/{subscriptionId}": {
      "get": {
        "operationId": "PrivateLinkResources_Get",
        "tags": [
          "PrivateLinkResources"
        ],
        "description": "Gets lists of resources that supports Privatelinks.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Name of the Resource group within the Azure subscription.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "The namespace name",
            "required": true,
            "type": "string",
            "minLength": 6,
            "maxLength": 50
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/PrivateLinkResourcesListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceBus/namespaces/{namespaceName}/queues/{queueName}/authorizationRules": {
      "get": {
        "operationId": "QueueAuthorizationRulesOperations_List",
        "description": "Gets all authorization rules for a queue.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Name of the Resource group within the Azure subscription.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "The namespace name",
            "required": true,
            "type": "string",
            "minLength": 6,
            "maxLength": 50
          },
          {
            "name": "queueName",
            "in": "path",
            "description": "The queue name.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/ServiceBusAuthorizationRuleListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceBus/namespaces/{namespaceName}/queues/{queueName}/authorizationRules/{authorizationRuleName}": {
      "get": {
        "operationId": "QueueAuthorizationRulesOperations_Get",
        "description": "Gets an authorization rule for a queue by rule name.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Name of the Resource group within the Azure subscription.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "The namespace name",
            "required": true,
            "type": "string",
            "minLength": 6,
            "maxLength": 50
          },
          {
            "name": "queueName",
            "in": "path",
            "description": "The queue name.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "authorizationRuleName",
            "in": "path",
            "description": "The authorization rule name.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/ServiceBusAuthorizationRule"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        }
      },
      "put": {
        "operationId": "QueueAuthorizationRulesOperations_CreateOrUpdate",
        "description": "Creates an authorization rule for a queue.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Name of the Resource group within the Azure subscription.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "The namespace name",
            "required": true,
            "type": "string",
            "minLength": 6,
            "maxLength": 50
          },
          {
            "name": "queueName",
            "in": "path",
            "description": "The queue name.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "authorizationRuleName",
            "in": "path",
            "description": "The authorization rule name.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "The shared access authorization rule.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ServiceBusAuthorizationRule"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/ServiceBusAuthorizationRule"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "QueueAuthorizationRulesOperations_Delete",
        "description": "Deletes a queue authorization rule.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Name of the Resource group within the Azure subscription.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "The namespace name",
            "required": true,
            "type": "string",
            "minLength": 6,
            "maxLength": 50
          },
          {
            "name": "queueName",
            "in": "path",
            "description": "The queue name.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "authorizationRuleName",
            "in": "path",
            "description": "The authorization rule name.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful. "
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceBus/namespaces/{namespaceName}/queues/{queueName}/authorizationRules/{authorizationRuleName}/ListKeys": {
      "post": {
        "operationId": "QueueAuthorizationRulesOperations_ListKeys",
        "description": "Primary and secondary connection strings to the queue.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Name of the Resource group within the Azure subscription.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "The namespace name",
            "required": true,
            "type": "string",
            "minLength": 6,
            "maxLength": 50
          },
          {
            "name": "queueName",
            "in": "path",
            "description": "The queue name.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "authorizationRuleName",
            "in": "path",
            "description": "The authorization rule name.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/ServiceBusAccessKeys"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceBus/namespaces/{namespaceName}/queues/{queueName}/authorizationRules/{authorizationRuleName}/regenerateKeys": {
      "post": {
        "operationId": "QueueAuthorizationRulesOperations_RegenerateKeys",
        "description": "Regenerates the primary or secondary connection strings to the queue.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Name of the Resource group within the Azure subscription.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "The namespace name",
            "required": true,
            "type": "string",
            "minLength": 6,
            "maxLength": 50
          },
          {
            "name": "queueName",
            "in": "path",
            "description": "The queue name.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "authorizationRuleName",
            "in": "path",
            "description": "The authorization rule name.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Parameters supplied to regenerate the authorization rule.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ServiceBusRegenerateAccessKeyContent"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/ServiceBusAccessKeys"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceBus/namespaces/{namespaceName}/topics/{topicName}/authorizationRules": {
      "get": {
        "operationId": "TopicAuthorizationRulesOperations_List",
        "description": "Gets authorization rules for a topic.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Name of the Resource group within the Azure subscription.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "The namespace name",
            "required": true,
            "type": "string",
            "minLength": 6,
            "maxLength": 50
          },
          {
            "name": "topicName",
            "in": "path",
            "description": "The topic name.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/ServiceBusAuthorizationRuleListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceBus/namespaces/{namespaceName}/topics/{topicName}/authorizationRules/{authorizationRuleName}": {
      "get": {
        "operationId": "TopicAuthorizationRulesOperations_Get",
        "description": "Returns the specified authorization rule.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Name of the Resource group within the Azure subscription.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "The namespace name",
            "required": true,
            "type": "string",
            "minLength": 6,
            "maxLength": 50
          },
          {
            "name": "topicName",
            "in": "path",
            "description": "The topic name.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "authorizationRuleName",
            "in": "path",
            "description": "The authorization rule name.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/ServiceBusAuthorizationRule"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        }
      },
      "put": {
        "operationId": "TopicAuthorizationRulesOperations_CreateOrUpdate",
        "description": "Creates an authorization rule for the specified topic.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Name of the Resource group within the Azure subscription.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "The namespace name",
            "required": true,
            "type": "string",
            "minLength": 6,
            "maxLength": 50
          },
          {
            "name": "topicName",
            "in": "path",
            "description": "The topic name.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "authorizationRuleName",
            "in": "path",
            "description": "The authorization rule name.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "The shared access authorization rule.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ServiceBusAuthorizationRule"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/ServiceBusAuthorizationRule"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "TopicAuthorizationRulesOperations_Delete",
        "description": "Deletes a topic authorization rule.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Name of the Resource group within the Azure subscription.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "The namespace name",
            "required": true,
            "type": "string",
            "minLength": 6,
            "maxLength": 50
          },
          {
            "name": "topicName",
            "in": "path",
            "description": "The topic name.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "authorizationRuleName",
            "in": "path",
            "description": "The authorization rule name.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful. "
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceBus/namespaces/{namespaceName}/topics/{topicName}/authorizationRules/{authorizationRuleName}/ListKeys": {
      "post": {
        "operationId": "TopicAuthorizationRulesOperations_ListKeys",
        "description": "Gets the primary and secondary connection strings for the topic.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Name of the Resource group within the Azure subscription.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "The namespace name",
            "required": true,
            "type": "string",
            "minLength": 6,
            "maxLength": 50
          },
          {
            "name": "topicName",
            "in": "path",
            "description": "The topic name.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "authorizationRuleName",
            "in": "path",
            "description": "The authorization rule name.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/ServiceBusAccessKeys"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceBus/namespaces/{namespaceName}/topics/{topicName}/authorizationRules/{authorizationRuleName}/regenerateKeys": {
      "post": {
        "operationId": "TopicAuthorizationRulesOperations_RegenerateKeys",
        "description": "Regenerates primary or secondary connection strings for the topic.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Name of the Resource group within the Azure subscription.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "namespaceName",
            "in": "path",
            "description": "The namespace name",
            "required": true,
            "type": "string",
            "minLength": 6,
            "maxLength": 50
          },
          {
            "name": "topicName",
            "in": "path",
            "description": "The topic name.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "authorizationRuleName",
            "in": "path",
            "description": "The authorization rule name.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Parameters supplied to regenerate the authorization rule.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ServiceBusRegenerateAccessKeyContent"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/ServiceBusAccessKeys"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceBus/privateEndpointConnections": {
      "get": {
        "operationId": "PrivateEndpointConnections_ListByServiceBusNamespace",
        "tags": [
          "PrivateEndpointConnections"
        ],
        "description": "Gets the available PrivateEndpointConnections within a namespace.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnectionListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceBus/queues": {
      "get": {
        "operationId": "Queues_ListByServiceBusNamespace",
        "tags": [
          "Queues"
        ],
        "description": "Gets the queues within a namespace.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skip is only used if a previous operation returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skip parameter that specifies a starting point to use for subsequent calls.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "maximum": 1000
          },
          {
            "name": "$top",
            "in": "query",
            "description": "May be used to limit the number of results to the most recent N usageDetails.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 1,
            "maximum": 1000
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ServiceBusQueueListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceBus/regenerateKeys": {
      "post": {
        "operationId": "NamespaceAuthorizationRules_RegenerateKeys",
        "tags": [
          "NamespaceAuthorizationRules"
        ],
        "description": "Regenerates the primary or secondary connection strings for the namespace.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The content of the action request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ServiceBusRegenerateAccessKeyContent"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ServiceBusAccessKeys"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceBus/revert": {
      "post": {
        "operationId": "MigrationConfigs_Revert",
        "tags": [
          "MigrationConfigs"
        ],
        "description": "This operation reverts Migration",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "204": {
            "description": "ARM operation completed successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceBus/rules": {
      "get": {
        "operationId": "Rules_ListByServiceBusSubscription",
        "tags": [
          "Rules"
        ],
        "description": "List all the rules within given topic-subscription",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skip is only used if a previous operation returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skip parameter that specifies a starting point to use for subsequent calls.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "maximum": 1000
          },
          {
            "name": "$top",
            "in": "query",
            "description": "May be used to limit the number of results to the most recent N usageDetails.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 1,
            "maximum": 1000
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ServiceBusRuleListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceBus/subscriptions": {
      "get": {
        "operationId": "Subscriptions_ListByServiceBusTopic",
        "tags": [
          "Subscriptions"
        ],
        "description": "List all the subscriptions under a specified topic.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skip is only used if a previous operation returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skip parameter that specifies a starting point to use for subsequent calls.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "maximum": 1000
          },
          {
            "name": "$top",
            "in": "query",
            "description": "May be used to limit the number of results to the most recent N usageDetails.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 1,
            "maximum": 1000
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ServiceBusSubscriptionListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceBus/topics": {
      "get": {
        "operationId": "Topics_ListByServiceBusNamespace",
        "tags": [
          "Topics"
        ],
        "description": "Gets all the topics in a namespace.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skip is only used if a previous operation returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skip parameter that specifies a starting point to use for subsequent calls.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "maximum": 1000
          },
          {
            "name": "$top",
            "in": "query",
            "description": "May be used to limit the number of results to the most recent N usageDetails.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 1,
            "maximum": 1000
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ServiceBusTopicListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    }
  },
  "definitions": {
    "ArmDisasterRecoveryProperties": {
      "type": "object",
      "description": "Properties required to the Create Or Update Alias(Disaster Recovery configurations)",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/ServiceBusDisasterRecoveryProvisioningState",
          "description": "Provisioning state of the Alias(Disaster Recovery configuration) - possible values 'Accepted' or 'Succeeded' or 'Failed'",
          "readOnly": true
        },
        "pendingReplicationOperationsCount": {
          "type": "integer",
          "format": "int32",
          "description": "Number of entities pending to be replicated.",
          "readOnly": true
        },
        "partnerNamespace": {
          "type": "string",
          "description": "ARM Id of the Primary/Secondary eventhub namespace name, which is part of GEO DR pairing"
        },
        "alternateName": {
          "type": "string",
          "description": "Primary/Secondary eventhub namespace name, which is part of GEO DR pairing"
        },
        "role": {
          "$ref": "#/definitions/ServiceBusDisasterRecoveryRole",
          "description": "role of namespace in GEO DR - possible values 'Primary' or 'PrimaryNotReplicating' or 'Secondary'",
          "readOnly": true
        }
      }
    },
    "Azure.Core.Foundations.Error": {
      "type": "object",
      "description": "The error object.",
      "properties": {
        "code": {
          "type": "string",
          "description": "One of a server-defined set of error codes."
        },
        "message": {
          "type": "string",
          "description": "A human-readable representation of the error."
        },
        "target": {
          "type": "string",
          "description": "The target of the error."
        },
        "details": {
          "type": "array",
          "description": "An array of details about specific errors that led to this reported error.",
          "items": {
            "$ref": "#/definitions/Azure.Core.Foundations.Error"
          },
          "x-ms-identifiers": []
        },
        "innererror": {
          "$ref": "#/definitions/Azure.Core.Foundations.InnerError",
          "description": "An object containing more specific information than the current object about the error."
        }
      },
      "required": [
        "code",
        "message"
      ]
    },
    "Azure.Core.Foundations.ErrorResponse": {
      "type": "object",
      "description": "A response containing error details.",
      "properties": {
        "error": {
          "$ref": "#/definitions/Azure.Core.Foundations.Error",
          "description": "The error object."
        }
      },
      "required": [
        "error"
      ]
    },
    "Azure.Core.Foundations.InnerError": {
      "type": "object",
      "description": "An object containing more specific information about the error. As per Microsoft One API guidelines - https://github.com/Microsoft/api-guidelines/blob/vNext/Guidelines.md#7102-error-condition-responses.",
      "properties": {
        "code": {
          "type": "string",
          "description": "One of a server-defined set of error codes."
        },
        "innererror": {
          "$ref": "#/definitions/Azure.Core.Foundations.InnerError",
          "description": "Inner error."
        }
      }
    },
    "Azure.ResourceManager.Foundations.UserAssignedIdentity": {
      "type": "object",
      "description": "A managed identity assigned by the user.",
      "properties": {
        "clientId": {
          "type": "string",
          "description": "The active directory client identifier for this principal."
        },
        "principalId": {
          "type": "string",
          "description": "The active directory identifier for this principal."
        }
      }
    },
    "CorrelationFilter": {
      "type": "object",
      "description": "Represents the correlation filter expression.",
      "properties": {
        "properties": {
          "type": "object",
          "description": "dictionary object for custom filters",
          "additionalProperties": {
            "type": "string"
          }
        },
        "correlationId": {
          "type": "string",
          "description": "Identifier of the correlation."
        },
        "messageId": {
          "type": "string",
          "description": "Identifier of the message."
        },
        "to": {
          "type": "string",
          "description": "Address to send to.",
          "x-ms-client-name": "sendTo"
        },
        "replyTo": {
          "type": "string",
          "description": "Address of the queue to reply to."
        },
        "label": {
          "type": "string",
          "description": "Application specific label."
        },
        "sessionId": {
          "type": "string",
          "description": "Session identifier."
        },
        "replyToSessionId": {
          "type": "string",
          "description": "Session identifier to reply to."
        },
        "contentType": {
          "type": "string",
          "description": "Content type of the message."
        },
        "requiresPreprocessing": {
          "type": "boolean",
          "description": "Value that indicates whether the rule action requires preprocessing."
        }
      }
    },
    "CreatedByType": {
      "type": "string",
      "enum": [
        "User",
        "Application",
        "ManagedIdentity",
        "Key"
      ],
      "x-ms-enum": {
        "name": "CreatedByType",
        "modelAsString": true
      }
    },
    "EntityStatus": {
      "type": "string",
      "enum": [
        "Active",
        "Disabled",
        "Restoring",
        "SendDisabled",
        "ReceiveDisabled",
        "Creating",
        "Deleting",
        "Renaming",
        "Unknown"
      ],
      "x-ms-enum": {
        "name": "EntityStatus",
        "modelAsString": false
      }
    },
    "ErrorResponseError": {
      "type": "object",
      "description": "The error object.",
      "properties": {
        "code": {
          "type": "string",
          "description": "The error code.",
          "readOnly": true
        },
        "message": {
          "type": "string",
          "description": "The error message.",
          "readOnly": true
        },
        "target": {
          "type": "string",
          "description": "The error target.",
          "readOnly": true
        },
        "details": {
          "type": "array",
          "description": "The error details.",
          "items": {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        },
        "additionalInfo": {
          "type": "array",
          "description": "The error additional info.",
          "items": {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorAdditionalInfo"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        }
      }
    },
    "FailoverProperties": {
      "type": "object",
      "description": "Safe failover is to indicate the service should wait for pending replication to finish before switching to the secondary.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/FailoverPropertiesProperties",
          "description": "Safe failover is to indicate the service should wait for pending replication to finish before switching to the secondary."
        }
      }
    },
    "FailoverPropertiesProperties": {
      "type": "object",
      "description": "Safe failover is to indicate the service should wait for pending replication to finish before switching to the secondary.",
      "properties": {
        "IsSafeFailover": {
          "type": "boolean",
          "description": "Safe failover is to indicate the service should wait for pending replication to finish before switching to the secondary."
        }
      }
    },
    "FilterAction": {
      "type": "object",
      "description": "Represents the filter actions which are allowed for the transformation of a message that have been matched by a filter expression.",
      "properties": {
        "sqlExpression": {
          "type": "string",
          "description": "SQL expression. e.g. MyProperty='ABC'"
        },
        "compatibilityLevel": {
          "type": "integer",
          "format": "int32",
          "description": "This property is reserved for future use. An integer value showing the compatibility level, currently hard-coded to 20."
        },
        "requiresPreprocessing": {
          "type": "boolean",
          "description": "Value that indicates whether the rule action requires preprocessing."
        }
      }
    },
    "FilterType": {
      "type": "string",
      "enum": [
        "SqlFilter",
        "CorrelationFilter"
      ],
      "x-ms-enum": {
        "name": "FilterType",
        "modelAsString": false
      }
    },
    "Identity": {
      "type": "object",
      "description": "Properties to configure User Assigned Identities for Bring your Own Keys",
      "properties": {
        "principalId": {
          "type": "string",
          "description": "ObjectId from the KeyVault",
          "readOnly": true
        },
        "tenantId": {
          "type": "string",
          "description": "TenantId from the KeyVault",
          "readOnly": true
        },
        "type": {
          "$ref": "#/definitions/ManagedServiceIdentityType",
          "description": "Type of managed service identity."
        },
        "userAssignedIdentities": {
          "type": "object",
          "description": "Properties for User Assigned Identities",
          "additionalProperties": {
            "$ref": "#/definitions/Azure.ResourceManager.Foundations.UserAssignedIdentity"
          }
        }
      }
    },
    "ManagedServiceIdentityType": {
      "type": "string",
      "enum": [
        "SystemAssigned",
        "UserAssigned",
        "SystemAssigned, UserAssigned",
        "None"
      ],
      "x-ms-enum": {
        "name": "ManagedServiceIdentityType",
        "modelAsString": false
      }
    },
    "MessageCountDetails": {
      "type": "object",
      "description": "Message Count Details.",
      "properties": {
        "activeMessageCount": {
          "type": "integer",
          "format": "int32",
          "description": "Number of active messages in the queue, topic, or subscription.",
          "readOnly": true
        },
        "deadLetterMessageCount": {
          "type": "integer",
          "format": "int32",
          "description": "Number of messages that are dead lettered.",
          "readOnly": true
        },
        "scheduledMessageCount": {
          "type": "integer",
          "format": "int32",
          "description": "Number of scheduled messages.",
          "readOnly": true
        },
        "transferMessageCount": {
          "type": "integer",
          "format": "int32",
          "description": "Number of messages transferred to another queue, topic, or subscription.",
          "readOnly": true
        },
        "transferDeadLetterMessageCount": {
          "type": "integer",
          "format": "int32",
          "description": "Number of messages transferred into dead letters.",
          "readOnly": true
        }
      }
    },
    "MigrationConfigPropertiesProperties": {
      "type": "object",
      "description": "Properties required to the Create Migration Configuration",
      "properties": {
        "provisioningState": {
          "type": "string",
          "description": "Provisioning state of Migration Configuration ",
          "readOnly": true
        },
        "pendingReplicationOperationsCount": {
          "type": "integer",
          "format": "int32",
          "description": "Number of entities pending to be replicated.",
          "readOnly": true
        },
        "targetNamespace": {
          "type": "string",
          "description": "Existing premium Namespace ARM Id name which has no entities, will be used for migration",
          "x-ms-client-name": "targetServiceBusNamespace"
        },
        "postMigrationName": {
          "type": "string",
          "description": "Name to access Standard Namespace after migration"
        },
        "migrationState": {
          "type": "string",
          "description": "State in which Standard to Premium Migration is, possible values : Unknown, Reverting, Completing, Initiating, Syncing, Active",
          "readOnly": true
        }
      },
      "required": [
        "targetNamespace",
        "postMigrationName"
      ]
    },
    "MigrationConfiguration": {
      "type": "object",
      "description": "Single item in List or Get Migration Config operation",
      "properties": {
        "properties": {
          "$ref": "#/definitions/MigrationConfigPropertiesProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "name": {
          "$ref": "#/definitions/MigrationConfigurationName",
          "description": "The configuration name. Should always be \"$default\".",
          "readOnly": true
        }
      },
      "required": [
        "name"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "MigrationConfigurationListResult": {
      "type": "object",
      "description": "The response of a MigrationConfiguration list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The MigrationConfiguration items on this page",
          "items": {
            "$ref": "#/definitions/MigrationConfiguration"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "MigrationConfigurationName": {
      "type": "string",
      "enum": [
        "$default"
      ],
      "x-ms-enum": {
        "name": "MigrationConfigurationName",
        "modelAsString": true
      }
    },
    "NetworkRuleSetProperties": {
      "type": "object",
      "description": "NetworkRuleSet properties",
      "properties": {
        "trustedServiceAccessEnabled": {
          "type": "boolean",
          "description": "Value that indicates whether Trusted Service Access is Enabled or not."
        },
        "defaultAction": {
          "$ref": "#/definitions/ServiceBusNetworkRuleSetDefaultAction",
          "description": "Default Action for Network Rule Set"
        },
        "virtualNetworkRules": {
          "type": "array",
          "description": "List VirtualNetwork Rules",
          "items": {
            "$ref": "#/definitions/ServiceBusNetworkRuleSetVirtualNetworkRules"
          },
          "x-ms-identifiers": []
        },
        "ipRules": {
          "type": "array",
          "description": "List of IpRules",
          "items": {
            "$ref": "#/definitions/ServiceBusNetworkRuleSetIPRules"
          },
          "x-ms-identifiers": []
        },
        "publicNetworkAccess": {
          "$ref": "#/definitions/ServiceBusPublicNetworkAccessFlag",
          "description": "This determines if traffic is allowed over public network. By default it is enabled."
        }
      }
    },
    "PrivateEndpoint": {
      "type": "object",
      "description": "PrivateEndpoint information.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The ARM identifier for Private Endpoint."
        }
      }
    },
    "PrivateEndpointConnection": {
      "type": "object",
      "description": "Properties of the PrivateEndpointConnection.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/PrivateEndpointConnectionProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "name": {
          "type": "string",
          "description": "The PrivateEndpointConnection name",
          "readOnly": true
        }
      },
      "required": [
        "name"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "PrivateEndpointConnectionListResult": {
      "type": "object",
      "description": "The response of a PrivateEndpointConnection list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The PrivateEndpointConnection items on this page",
          "items": {
            "$ref": "#/definitions/PrivateEndpointConnection"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "PrivateEndpointConnectionProperties": {
      "type": "object",
      "description": "Properties of the private endpoint connection resource.",
      "properties": {
        "privateEndpoint": {
          "$ref": "#/definitions/PrivateEndpoint",
          "description": "The Private Endpoint resource for this Connection."
        },
        "privateLinkServiceConnectionState": {
          "$ref": "#/definitions/ServiceBusPrivateLinkServiceConnectionState",
          "description": "Details about the state of the connection."
        },
        "provisioningState": {
          "$ref": "#/definitions/ServiceBusPrivateEndpointConnectionProvisioningState",
          "description": "Provisioning state of the Private Endpoint Connection."
        }
      }
    },
    "PrivateLinkResource": {
      "type": "object",
      "description": "Information of the private link resource.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/PrivateLinkResourceProperties",
          "description": "Properties of the private link resource."
        },
        "id": {
          "type": "string",
          "description": "Fully qualified identifier of the resource."
        },
        "name": {
          "type": "string",
          "description": "Name of the resource"
        },
        "type": {
          "type": "string",
          "description": "Type of the resource"
        }
      }
    },
    "PrivateLinkResourceProperties": {
      "type": "object",
      "description": "Properties of PrivateLinkResource",
      "properties": {
        "groupId": {
          "type": "string"
        },
        "requiredMembers": {
          "type": "array",
          "description": "Required Members",
          "items": {
            "type": "string"
          }
        },
        "requiredZoneNames": {
          "type": "array",
          "description": "Required Zone Names",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "PrivateLinkResourcesListResult": {
      "type": "object",
      "description": "Result of the List private link resources operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "A collection of private link resources",
          "items": {
            "$ref": "#/definitions/PrivateLinkResource"
          }
        },
        "nextLink": {
          "type": "string",
          "description": "A link for the next page of private link resources."
        }
      }
    },
    "PublicNetworkAccess": {
      "type": "string",
      "enum": [
        "Enabled",
        "Disabled",
        "SecuredByPerimeter"
      ],
      "x-ms-enum": {
        "name": "PublicNetworkAccess",
        "modelAsString": true
      }
    },
    "Resource": {
      "type": "object",
      "description": "The Resource definition for other than namespace.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Resource Id",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "Resource name",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "Resource type",
          "readOnly": true
        }
      }
    },
    "ResourceNamespacePatch": {
      "type": "object",
      "description": "The Resource definition.",
      "properties": {
        "location": {
          "type": "string",
          "description": "Resource location"
        },
        "tags": {
          "type": "object",
          "description": "Resource tags",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ]
    },
    "Ruleproperties": {
      "type": "object",
      "description": "Description of Rule Resource.",
      "properties": {
        "action": {
          "$ref": "#/definitions/FilterAction",
          "description": "Represents the filter actions which are allowed for the transformation of a message that have been matched by a filter expression."
        },
        "filterType": {
          "$ref": "#/definitions/FilterType",
          "description": "Filter type that is evaluated against a BrokeredMessage."
        },
        "sqlFilter": {
          "$ref": "#/definitions/SqlFilter",
          "description": "Properties of sqlFilter"
        },
        "correlationFilter": {
          "$ref": "#/definitions/CorrelationFilter",
          "description": "Properties of correlationFilter"
        }
      }
    },
    "SBAuthorizationRuleProperties": {
      "type": "object",
      "description": "AuthorizationRule properties.",
      "properties": {
        "rights": {
          "type": "array",
          "description": "The rights associated with the rule.",
          "items": {
            "$ref": "#/definitions/ServiceBusAccessRight"
          }
        }
      },
      "required": [
        "rights"
      ]
    },
    "SBNamespaceProperties": {
      "type": "object",
      "description": "Properties of the namespace.",
      "properties": {
        "minimumTlsVersion": {
          "$ref": "#/definitions/TlsVersion",
          "description": "The minimum TLS version for the cluster to support, e.g. '1.2'"
        },
        "provisioningState": {
          "type": "string",
          "description": "Provisioning state of the namespace.",
          "readOnly": true
        },
        "status": {
          "type": "string",
          "description": "Status of the namespace.",
          "readOnly": true
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "The time the namespace was created",
          "readOnly": true
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time",
          "description": "The time the namespace was updated.",
          "readOnly": true
        },
        "serviceBusEndpoint": {
          "type": "string",
          "description": "Endpoint you can use to perform Service Bus operations.",
          "readOnly": true
        },
        "metricId": {
          "type": "string",
          "description": "Identifier for Azure Insights metrics",
          "readOnly": true
        },
        "zoneRedundant": {
          "type": "boolean",
          "description": "Enabling this property creates a Premium Service Bus Namespace in regions supported availability zones.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "encryption": {
          "$ref": "#/definitions/ServiceBusEncryption",
          "description": "Properties of BYOK Encryption description"
        },
        "privateEndpointConnections": {
          "type": "array",
          "description": "List of private endpoint connections.",
          "items": {
            "$ref": "#/definitions/PrivateEndpointConnection"
          }
        },
        "disableLocalAuth": {
          "type": "boolean",
          "description": "This property disables SAS authentication for the Service Bus namespace."
        },
        "alternateName": {
          "type": "string",
          "description": "Alternate name for namespace"
        },
        "publicNetworkAccess": {
          "$ref": "#/definitions/PublicNetworkAccess",
          "description": "This determines if traffic is allowed over public network. By default it is enabled."
        },
        "premiumMessagingPartitions": {
          "type": "integer",
          "format": "int32",
          "description": "The number of partitions of a Service Bus namespace. This property is only applicable to Premium SKU namespaces. The default value is 1 and possible values are 1, 2 and 4"
        }
      }
    },
    "SBNamespaceUpdateProperties": {
      "type": "object",
      "description": "Properties of the namespace.",
      "properties": {
        "provisioningState": {
          "type": "string",
          "description": "Provisioning state of the namespace.",
          "readOnly": true
        },
        "status": {
          "type": "string",
          "description": "Status of the namespace.",
          "readOnly": true
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "The time the namespace was created",
          "readOnly": true
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time",
          "description": "The time the namespace was updated.",
          "readOnly": true
        },
        "serviceBusEndpoint": {
          "type": "string",
          "description": "Endpoint you can use to perform Service Bus operations.",
          "readOnly": true
        },
        "metricId": {
          "type": "string",
          "description": "Identifier for Azure Insights metrics",
          "readOnly": true
        },
        "encryption": {
          "$ref": "#/definitions/ServiceBusEncryption",
          "description": "Properties of BYOK Encryption description"
        },
        "privateEndpointConnections": {
          "type": "array",
          "description": "List of private endpoint connections.",
          "items": {
            "$ref": "#/definitions/PrivateEndpointConnection"
          }
        },
        "disableLocalAuth": {
          "type": "boolean",
          "description": "This property disables SAS authentication for the Service Bus namespace."
        },
        "alternateName": {
          "type": "string",
          "description": "Alternate name for namespace"
        }
      }
    },
    "SBQueueProperties": {
      "type": "object",
      "description": "The Queue Properties definition.",
      "properties": {
        "countDetails": {
          "$ref": "#/definitions/MessageCountDetails",
          "description": "Message Count Details.",
          "readOnly": true
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "The exact time the message was created.",
          "readOnly": true
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time",
          "description": "The exact time the message was updated.",
          "readOnly": true
        },
        "accessedAt": {
          "type": "string",
          "format": "date-time",
          "description": "Last time a message was sent, or the last time there was a receive request to this queue.",
          "readOnly": true
        },
        "sizeInBytes": {
          "type": "integer",
          "format": "int32",
          "description": "The size of the queue, in bytes.",
          "readOnly": true
        },
        "messageCount": {
          "type": "integer",
          "format": "int32",
          "description": "The number of messages in the queue.",
          "readOnly": true
        },
        "lockDuration": {
          "type": "string",
          "format": "duration",
          "description": "ISO 8601 timespan duration of a peek-lock; that is, the amount of time that the message is locked for other receivers. The maximum value for LockDuration is 5 minutes; the default value is 1 minute."
        },
        "maxSizeInMegabytes": {
          "type": "integer",
          "format": "int32",
          "description": "The maximum size of the queue in megabytes, which is the size of memory allocated for the queue. Default is 1024."
        },
        "maxMessageSizeInKilobytes": {
          "type": "integer",
          "format": "int32",
          "description": "Maximum size (in KB) of the message payload that can be accepted by the queue. This property is only used in Premium today and default is 1024."
        },
        "requiresDuplicateDetection": {
          "type": "boolean",
          "description": "A value indicating if this queue requires duplicate detection."
        },
        "requiresSession": {
          "type": "boolean",
          "description": "A value that indicates whether the queue supports the concept of sessions."
        },
        "defaultMessageTimeToLive": {
          "type": "string",
          "format": "duration",
          "description": "ISO 8601 default message timespan to live value. This is the duration after which the message expires, starting from when the message is sent to Service Bus. This is the default value used when TimeToLive is not set on a message itself."
        },
        "deadLetteringOnMessageExpiration": {
          "type": "boolean",
          "description": "A value that indicates whether this queue has dead letter support when a message expires."
        },
        "duplicateDetectionHistoryTimeWindow": {
          "type": "string",
          "format": "duration",
          "description": "ISO 8601 timeSpan structure that defines the duration of the duplicate detection history. The default value is 10 minutes."
        },
        "maxDeliveryCount": {
          "type": "integer",
          "format": "int32",
          "description": "The maximum delivery count. A message is automatically deadlettered after this number of deliveries. default value is 10."
        },
        "status": {
          "$ref": "#/definitions/EntityStatus",
          "description": "Enumerates the possible values for the status of a messaging entity."
        },
        "enableBatchedOperations": {
          "type": "boolean",
          "description": "Value that indicates whether server-side batched operations are enabled."
        },
        "autoDeleteOnIdle": {
          "type": "string",
          "format": "duration",
          "description": "ISO 8061 timeSpan idle interval after which the queue is automatically deleted. The minimum duration is 5 minutes."
        },
        "enablePartitioning": {
          "type": "boolean",
          "description": "A value that indicates whether the queue is to be partitioned across multiple message brokers."
        },
        "enableExpress": {
          "type": "boolean",
          "description": "A value that indicates whether Express Entities are enabled. An express queue holds a message in memory temporarily before writing it to persistent storage."
        },
        "forwardTo": {
          "type": "string",
          "description": "Queue/Topic name to forward the messages"
        },
        "forwardDeadLetteredMessagesTo": {
          "type": "string",
          "description": "Queue/Topic name to forward the Dead Letter message"
        }
      }
    },
    "SBSubscriptionProperties": {
      "type": "object",
      "description": "Description of Subscription Resource.",
      "properties": {
        "messageCount": {
          "type": "integer",
          "format": "int32",
          "description": "Number of messages.",
          "readOnly": true
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "Exact time the message was created.",
          "readOnly": true
        },
        "accessedAt": {
          "type": "string",
          "format": "date-time",
          "description": "Last time there was a receive request to this subscription.",
          "readOnly": true
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time",
          "description": "The exact time the message was updated.",
          "readOnly": true
        },
        "countDetails": {
          "$ref": "#/definitions/MessageCountDetails",
          "description": "Message count details",
          "readOnly": true
        },
        "lockDuration": {
          "type": "string",
          "format": "duration",
          "description": "ISO 8061 lock duration timespan for the subscription. The default value is 1 minute."
        },
        "requiresSession": {
          "type": "boolean",
          "description": "Value indicating if a subscription supports the concept of sessions."
        },
        "defaultMessageTimeToLive": {
          "type": "string",
          "format": "duration",
          "description": "ISO 8061 Default message timespan to live value. This is the duration after which the message expires, starting from when the message is sent to Service Bus. This is the default value used when TimeToLive is not set on a message itself."
        },
        "deadLetteringOnFilterEvaluationExceptions": {
          "type": "boolean",
          "description": "Value that indicates whether a subscription has dead letter support on filter evaluation exceptions."
        },
        "deadLetteringOnMessageExpiration": {
          "type": "boolean",
          "description": "Value that indicates whether a subscription has dead letter support when a message expires."
        },
        "duplicateDetectionHistoryTimeWindow": {
          "type": "string",
          "format": "duration",
          "description": "ISO 8601 timeSpan structure that defines the duration of the duplicate detection history. The default value is 10 minutes."
        },
        "maxDeliveryCount": {
          "type": "integer",
          "format": "int32",
          "description": "Number of maximum deliveries."
        },
        "status": {
          "$ref": "#/definitions/EntityStatus",
          "description": "Enumerates the possible values for the status of a messaging entity."
        },
        "enableBatchedOperations": {
          "type": "boolean",
          "description": "Value that indicates whether server-side batched operations are enabled."
        },
        "autoDeleteOnIdle": {
          "type": "string",
          "format": "duration",
          "description": "ISO 8061 timeSpan idle interval after which the topic is automatically deleted. The minimum duration is 5 minutes."
        },
        "forwardTo": {
          "type": "string",
          "description": "Queue/Topic name to forward the messages"
        },
        "forwardDeadLetteredMessagesTo": {
          "type": "string",
          "description": "Queue/Topic name to forward the Dead Letter message"
        },
        "isClientAffine": {
          "type": "boolean",
          "description": "Value that indicates whether the subscription has an affinity to the client id."
        },
        "clientAffineProperties": {
          "$ref": "#/definitions/ServiceBusClientAffineProperties",
          "description": "Properties specific to client affine subscriptions."
        }
      }
    },
    "SBTopicProperties": {
      "type": "object",
      "description": "The Topic Properties definition.",
      "properties": {
        "sizeInBytes": {
          "type": "integer",
          "format": "int32",
          "description": "Size of the topic, in bytes.",
          "readOnly": true
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "Exact time the message was created.",
          "readOnly": true
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time",
          "description": "The exact time the message was updated.",
          "readOnly": true
        },
        "accessedAt": {
          "type": "string",
          "format": "date-time",
          "description": "Last time the message was sent, or a request was received, for this topic.",
          "readOnly": true
        },
        "subscriptionCount": {
          "type": "integer",
          "format": "int32",
          "description": "Number of subscriptions.",
          "readOnly": true
        },
        "countDetails": {
          "$ref": "#/definitions/MessageCountDetails",
          "description": "Message count details",
          "readOnly": true
        },
        "defaultMessageTimeToLive": {
          "type": "string",
          "format": "duration",
          "description": "ISO 8601 Default message timespan to live value. This is the duration after which the message expires, starting from when the message is sent to Service Bus. This is the default value used when TimeToLive is not set on a message itself."
        },
        "maxSizeInMegabytes": {
          "type": "integer",
          "format": "int32",
          "description": "Maximum size of the topic in megabytes, which is the size of the memory allocated for the topic. Default is 1024."
        },
        "maxMessageSizeInKilobytes": {
          "type": "integer",
          "format": "int32",
          "description": "Maximum size (in KB) of the message payload that can be accepted by the topic. This property is only used in Premium today and default is 1024."
        },
        "requiresDuplicateDetection": {
          "type": "boolean",
          "description": "Value indicating if this topic requires duplicate detection."
        },
        "duplicateDetectionHistoryTimeWindow": {
          "type": "string",
          "format": "duration",
          "description": "ISO8601 timespan structure that defines the duration of the duplicate detection history. The default value is 10 minutes."
        },
        "enableBatchedOperations": {
          "type": "boolean",
          "description": "Value that indicates whether server-side batched operations are enabled."
        },
        "status": {
          "$ref": "#/definitions/EntityStatus",
          "description": "Enumerates the possible values for the status of a messaging entity."
        },
        "supportOrdering": {
          "type": "boolean",
          "description": "Value that indicates whether the topic supports ordering."
        },
        "autoDeleteOnIdle": {
          "type": "string",
          "format": "duration",
          "description": "ISO 8601 timespan idle interval after which the topic is automatically deleted. The minimum duration is 5 minutes."
        },
        "enablePartitioning": {
          "type": "boolean",
          "description": "Value that indicates whether the topic to be partitioned across multiple message brokers is enabled."
        },
        "enableExpress": {
          "type": "boolean",
          "description": "Value that indicates whether Express Entities are enabled. An express topic holds a message in memory temporarily before writing it to persistent storage."
        }
      }
    },
    "ServiceBusAccessKeyType": {
      "type": "string",
      "enum": [
        "PrimaryKey",
        "SecondaryKey"
      ],
      "x-ms-enum": {
        "name": "ServiceBusAccessKeyType",
        "modelAsString": false
      }
    },
    "ServiceBusAccessKeys": {
      "type": "object",
      "description": "Namespace/ServiceBus Connection String",
      "properties": {
        "primaryConnectionString": {
          "type": "string",
          "description": "Primary connection string of the created namespace authorization rule.",
          "readOnly": true
        },
        "secondaryConnectionString": {
          "type": "string",
          "description": "Secondary connection string of the created namespace authorization rule.",
          "readOnly": true
        },
        "aliasPrimaryConnectionString": {
          "type": "string",
          "description": "Primary connection string of the alias if GEO DR is enabled",
          "readOnly": true
        },
        "aliasSecondaryConnectionString": {
          "type": "string",
          "description": "Secondary  connection string of the alias if GEO DR is enabled",
          "readOnly": true
        },
        "primaryKey": {
          "type": "string",
          "description": "A base64-encoded 256-bit primary key for signing and validating the SAS token.",
          "readOnly": true
        },
        "secondaryKey": {
          "type": "string",
          "description": "A base64-encoded 256-bit primary key for signing and validating the SAS token.",
          "readOnly": true
        },
        "keyName": {
          "type": "string",
          "description": "A string that describes the authorization rule.",
          "readOnly": true
        }
      }
    },
    "ServiceBusAccessRight": {
      "type": "string",
      "enum": [
        "Manage",
        "Send",
        "Listen"
      ],
      "x-ms-enum": {
        "name": "ServiceBusAccessRight",
        "modelAsString": false
      }
    },
    "ServiceBusAuthorizationRule": {
      "type": "object",
      "description": "Description of a namespace authorization rule.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/SBAuthorizationRuleProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "name": {
          "type": "string",
          "description": "The authorization rule name.",
          "minLength": 1,
          "maxLength": 50,
          "readOnly": true
        }
      },
      "required": [
        "name"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "ServiceBusAuthorizationRuleListResult": {
      "type": "object",
      "description": "The response of a ServiceBusAuthorizationRule list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The ServiceBusAuthorizationRule items on this page",
          "items": {
            "$ref": "#/definitions/ServiceBusAuthorizationRule"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "ServiceBusClientAffineProperties": {
      "type": "object",
      "description": "Properties specific to client affine subscriptions.",
      "properties": {
        "clientId": {
          "type": "string",
          "description": "Indicates the Client ID of the application that created the client-affine subscription."
        },
        "isDurable": {
          "type": "boolean",
          "description": "For client-affine subscriptions, this value indicates whether the subscription is durable or not."
        },
        "isShared": {
          "type": "boolean",
          "description": "For client-affine subscriptions, this value indicates whether the subscription is shared or not."
        }
      }
    },
    "ServiceBusDisasterRecovery": {
      "type": "object",
      "description": "Single item in List or Get Alias(Disaster Recovery configuration) operation",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ArmDisasterRecoveryProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "name": {
          "type": "string",
          "description": "The Disaster Recovery configuration name",
          "minLength": 1,
          "maxLength": 50,
          "readOnly": true
        }
      },
      "required": [
        "name"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "ServiceBusDisasterRecoveryListResult": {
      "type": "object",
      "description": "The response of a ServiceBusDisasterRecovery list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The ServiceBusDisasterRecovery items on this page",
          "items": {
            "$ref": "#/definitions/ServiceBusDisasterRecovery"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "ServiceBusDisasterRecoveryProvisioningState": {
      "type": "string",
      "enum": [
        "Accepted",
        "Succeeded",
        "Failed"
      ],
      "x-ms-enum": {
        "name": "ServiceBusDisasterRecoveryProvisioningState",
        "modelAsString": false
      }
    },
    "ServiceBusDisasterRecoveryRole": {
      "type": "string",
      "enum": [
        "Primary",
        "PrimaryNotReplicating",
        "Secondary"
      ],
      "x-ms-enum": {
        "name": "ServiceBusDisasterRecoveryRole",
        "modelAsString": false
      }
    },
    "ServiceBusEncryption": {
      "type": "object",
      "description": "Properties to configure Encryption",
      "properties": {
        "keyVaultProperties": {
          "type": "array",
          "description": "Properties of KeyVault",
          "items": {
            "$ref": "#/definitions/ServiceBusKeyVaultProperties"
          },
          "x-ms-identifiers": []
        },
        "keySource": {
          "type": "string",
          "description": "Enumerates the possible value of keySource for Encryption",
          "enum": [
            "Microsoft.KeyVault"
          ],
          "x-ms-enum": {
            "modelAsString": false
          }
        },
        "requireInfrastructureEncryption": {
          "type": "boolean",
          "description": "Enable Infrastructure Encryption (Double Encryption)"
        }
      }
    },
    "ServiceBusKeyVaultProperties": {
      "type": "object",
      "description": "Properties to configure keyVault Properties",
      "properties": {
        "keyName": {
          "type": "string",
          "description": "Name of the Key from KeyVault"
        },
        "keyVaultUri": {
          "type": "string",
          "description": "Uri of KeyVault"
        },
        "keyVersion": {
          "type": "string",
          "description": "Version of KeyVault"
        },
        "identity": {
          "$ref": "#/definitions/UserAssignedIdentityProperties"
        }
      }
    },
    "ServiceBusNameAvailabilityContent": {
      "type": "object",
      "description": "Description of a Check Name availability request properties.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The Name to check the namespace name availability and The namespace name can contain only letters, numbers, and hyphens. The namespace must start with a letter, and it must end with a letter or number."
        }
      },
      "required": [
        "name"
      ]
    },
    "ServiceBusNameAvailabilityResult": {
      "type": "object",
      "description": "Description of a Check Name availability request properties.",
      "properties": {
        "message": {
          "type": "string",
          "description": "The detailed info regarding the reason associated with the namespace.",
          "readOnly": true
        },
        "nameAvailable": {
          "type": "boolean",
          "description": "Value indicating namespace is availability, true if the namespace is available; otherwise, false."
        },
        "reason": {
          "$ref": "#/definitions/UnavailableReason",
          "description": "The reason for unavailability of a namespace."
        }
      }
    },
    "ServiceBusNamespace": {
      "type": "object",
      "description": "Description of a namespace resource.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/SBNamespaceProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "name": {
          "type": "string",
          "description": "The namespace name",
          "minLength": 6,
          "maxLength": 50,
          "readOnly": true
        },
        "identity": {
          "$ref": "../../../../../common-types/resource-management/v4/managedidentity.json#/definitions/ManagedServiceIdentity",
          "description": "The managed service identities assigned to this resource."
        },
        "sku": {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/Sku",
          "description": "The SKU (Stock Keeping Unit) assigned to this resource."
        }
      },
      "required": [
        "name"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "ServiceBusNamespaceListResult": {
      "type": "object",
      "description": "The response of a ServiceBusNamespace list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The ServiceBusNamespace items on this page",
          "items": {
            "$ref": "#/definitions/ServiceBusNamespace"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "ServiceBusNamespaceUpdateParameters": {
      "type": "object",
      "description": "Description of a namespace resource.",
      "properties": {
        "sku": {
          "$ref": "#/definitions/Sku",
          "description": "Properties of SKU"
        },
        "properties": {
          "$ref": "#/definitions/SBNamespaceUpdateProperties",
          "description": "Properties of the namespace."
        },
        "identity": {
          "$ref": "#/definitions/Identity",
          "description": "Properties of BYOK Identity description"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ResourceNamespacePatch"
        }
      ]
    },
    "ServiceBusNamespaceUpdateParametersUpdate": {
      "type": "object",
      "description": "Description of a namespace resource.",
      "properties": {
        "sku": {
          "$ref": "#/definitions/SkuUpdate",
          "description": "Properties of SKU"
        },
        "properties": {
          "$ref": "#/definitions/SBNamespaceUpdateProperties",
          "description": "Properties of the namespace."
        },
        "identity": {
          "$ref": "#/definitions/Identity",
          "description": "Properties of BYOK Identity description"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ResourceNamespacePatch"
        }
      ]
    },
    "ServiceBusNetworkRuleIPAction": {
      "type": "string",
      "enum": [
        "Allow"
      ],
      "x-ms-enum": {
        "name": "ServiceBusNetworkRuleIPAction",
        "modelAsString": true
      }
    },
    "ServiceBusNetworkRuleSet": {
      "type": "object",
      "description": "Description of NetworkRuleSet resource.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/NetworkRuleSetProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "name": {
          "type": "string",
          "readOnly": true
        }
      },
      "required": [
        "name"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "ServiceBusNetworkRuleSetDefaultAction": {
      "type": "string",
      "enum": [
        "Allow",
        "Deny"
      ],
      "x-ms-enum": {
        "name": "ServiceBusNetworkRuleSetDefaultAction",
        "modelAsString": true
      }
    },
    "ServiceBusNetworkRuleSetIPRules": {
      "type": "object",
      "description": "Description of NetWorkRuleSet - IpRules resource.",
      "properties": {
        "ipMask": {
          "type": "string",
          "description": "IP Mask"
        },
        "action": {
          "$ref": "#/definitions/ServiceBusNetworkRuleIPAction",
          "description": "The IP Filter Action"
        }
      }
    },
    "ServiceBusNetworkRuleSetVirtualNetworkRules": {
      "type": "object",
      "description": "Description of VirtualNetworkRules - NetworkRules resource.",
      "properties": {
        "subnet": {
          "$ref": "#/definitions/Subnet",
          "description": "Subnet properties"
        },
        "ignoreMissingVnetServiceEndpoint": {
          "type": "boolean",
          "description": "Value that indicates whether to ignore missing VNet Service Endpoint"
        }
      }
    },
    "ServiceBusPrivateEndpointConnectionProvisioningState": {
      "type": "string",
      "enum": [
        "Creating",
        "Updating",
        "Deleting",
        "Succeeded",
        "Canceled",
        "Failed"
      ],
      "x-ms-enum": {
        "name": "ServiceBusPrivateEndpointConnectionProvisioningState",
        "modelAsString": true
      }
    },
    "ServiceBusPrivateLinkConnectionStatus": {
      "type": "string",
      "enum": [
        "Pending",
        "Approved",
        "Rejected",
        "Disconnected"
      ],
      "x-ms-enum": {
        "name": "ServiceBusPrivateLinkConnectionStatus",
        "modelAsString": true
      }
    },
    "ServiceBusPrivateLinkServiceConnectionState": {
      "type": "object",
      "description": "ConnectionState information.",
      "properties": {
        "status": {
          "$ref": "#/definitions/ServiceBusPrivateLinkConnectionStatus",
          "description": "Status of the connection."
        },
        "description": {
          "type": "string",
          "description": "Description of the connection state."
        }
      }
    },
    "ServiceBusPublicNetworkAccessFlag": {
      "type": "string",
      "enum": [
        "Enabled",
        "Disabled"
      ],
      "x-ms-enum": {
        "name": "ServiceBusPublicNetworkAccessFlag",
        "modelAsString": true
      }
    },
    "ServiceBusQueue": {
      "type": "object",
      "description": "Description of queue Resource.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/SBQueueProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "name": {
          "type": "string",
          "description": "The queue name.",
          "minLength": 1,
          "readOnly": true
        }
      },
      "required": [
        "name"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "ServiceBusQueueListResult": {
      "type": "object",
      "description": "The response of a ServiceBusQueue list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The ServiceBusQueue items on this page",
          "items": {
            "$ref": "#/definitions/ServiceBusQueue"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "ServiceBusRegenerateAccessKeyContent": {
      "type": "object",
      "description": "Parameters supplied to the Regenerate Authorization Rule operation, specifies which key needs to be reset.",
      "properties": {
        "keyType": {
          "$ref": "#/definitions/ServiceBusAccessKeyType",
          "description": "The access key to regenerate."
        },
        "key": {
          "type": "string",
          "description": "Optional, if the key value provided, is reset for KeyType value or autogenerate Key value set for keyType"
        }
      },
      "required": [
        "keyType"
      ]
    },
    "ServiceBusRule": {
      "type": "object",
      "description": "Description of Rule Resource.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/Ruleproperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "name": {
          "type": "string",
          "description": "The rule name.",
          "minLength": 1,
          "maxLength": 50,
          "readOnly": true
        }
      },
      "required": [
        "name"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "ServiceBusRuleListResult": {
      "type": "object",
      "description": "The response of a ServiceBusRule list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The ServiceBusRule items on this page",
          "items": {
            "$ref": "#/definitions/ServiceBusRule"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "ServiceBusSubscription": {
      "type": "object",
      "description": "Description of subscription resource.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/SBSubscriptionProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "name": {
          "type": "string",
          "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "readOnly": true
        }
      },
      "required": [
        "name"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "ServiceBusSubscriptionListResult": {
      "type": "object",
      "description": "The response of a ServiceBusSubscription list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The ServiceBusSubscription items on this page",
          "items": {
            "$ref": "#/definitions/ServiceBusSubscription"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "ServiceBusTopic": {
      "type": "object",
      "description": "Description of topic resource.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/SBTopicProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "name": {
          "type": "string",
          "description": "The topic name.",
          "minLength": 1,
          "readOnly": true
        }
      },
      "required": [
        "name"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "ServiceBusTopicListResult": {
      "type": "object",
      "description": "The response of a ServiceBusTopic list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The ServiceBusTopic items on this page",
          "items": {
            "$ref": "#/definitions/ServiceBusTopic"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "Sku": {
      "type": "object",
      "description": "SKU of the namespace.",
      "properties": {
        "name": {
          "$ref": "#/definitions/SkuName",
          "description": "Name of this SKU."
        },
        "tier": {
          "$ref": "#/definitions/SkuTier",
          "description": "The billing tier of this particular SKU."
        },
        "capacity": {
          "type": "integer",
          "format": "int32",
          "description": "Messaging units for your service bus premium namespace. Valid capacities are {1, 2, 4, 8, 16} multiples of your properties.premiumMessagingPartitions setting. For example, If properties.premiumMessagingPartitions is 1 then possible capacity values are 1, 2, 4, 8, and 16. If properties.premiumMessagingPartitions is 4 then possible capacity values are 4, 8, 16, 32 and 64"
        }
      },
      "required": [
        "name"
      ]
    },
    "SkuName": {
      "type": "string",
      "enum": [
        "Basic",
        "Standard",
        "Premium"
      ],
      "x-ms-enum": {
        "name": "SkuName",
        "modelAsString": false
      }
    },
    "SkuTier": {
      "type": "string",
      "enum": [
        "Basic",
        "Standard",
        "Premium"
      ],
      "x-ms-enum": {
        "name": "SkuTier",
        "modelAsString": false
      }
    },
    "SkuUpdate": {
      "type": "object",
      "description": "SKU of the namespace.",
      "properties": {
        "name": {
          "$ref": "#/definitions/SkuName",
          "description": "Name of this SKU."
        },
        "tier": {
          "$ref": "#/definitions/SkuTier",
          "description": "The billing tier of this particular SKU."
        },
        "capacity": {
          "type": "integer",
          "format": "int32",
          "description": "Messaging units for your service bus premium namespace. Valid capacities are {1, 2, 4, 8, 16} multiples of your properties.premiumMessagingPartitions setting. For example, If properties.premiumMessagingPartitions is 1 then possible capacity values are 1, 2, 4, 8, and 16. If properties.premiumMessagingPartitions is 4 then possible capacity values are 4, 8, 16, 32 and 64"
        }
      }
    },
    "SqlFilter": {
      "type": "object",
      "description": "Represents a filter which is a composition of an expression and an action that is executed in the pub/sub pipeline.",
      "properties": {
        "sqlExpression": {
          "type": "string",
          "description": "The SQL expression. e.g. MyProperty='ABC'"
        },
        "compatibilityLevel": {
          "type": "integer",
          "format": "int32",
          "description": "This property is reserved for future use. An integer value showing the compatibility level, currently hard-coded to 20."
        },
        "requiresPreprocessing": {
          "type": "boolean",
          "description": "Value that indicates whether the rule action requires preprocessing."
        }
      }
    },
    "SqlRuleAction": {
      "type": "object",
      "description": "Represents set of actions written in SQL language-based syntax that is performed against a ServiceBus.Messaging.BrokeredMessage ",
      "allOf": [
        {
          "$ref": "#/definitions/FilterAction"
        }
      ]
    },
    "Subnet": {
      "type": "object",
      "description": "Properties supplied for Subnet",
      "properties": {
        "id": {
          "type": "string",
          "description": "Resource ID of Virtual Network Subnet"
        }
      },
      "required": [
        "id"
      ]
    },
    "TlsVersion": {
      "type": "string",
      "enum": [
        "1.0",
        "1.1",
        "1.2"
      ],
      "x-ms-enum": {
        "name": "TlsVersion",
        "modelAsString": true
      }
    },
    "UnavailableReason": {
      "type": "string",
      "enum": [
        "None",
        "InvalidName",
        "SubscriptionIsDisabled",
        "NameInUse",
        "NameInLockdown",
        "TooManyNamespaceInCurrentSubscription"
      ],
      "x-ms-enum": {
        "name": "UnavailableReason",
        "modelAsString": false
      }
    },
    "UserAssignedIdentityProperties": {
      "type": "object",
      "properties": {
        "userAssignedIdentity": {
          "type": "string",
          "description": "ARM ID of user Identity selected for encryption"
        }
      }
    },
    "Versions": {
      "type": "string",
      "description": "The available API versions.",
      "enum": [
        "2022-10-01-preview"
      ],
      "x-ms-enum": {
        "name": "Versions",
        "modelAsString": true,
        "values": [
          {
            "name": "v2022_10_01_preview",
            "value": "2022-10-01-preview"
          }
        ]
      }
    }
  },
  "parameters": {
    "Azure.Core.Foundations.ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "description": "The API version to use for this operation.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "x-ms-parameter-location": "method",
      "x-ms-client-name": "apiVersion"
    }
  }
}
