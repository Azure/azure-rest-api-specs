{
  "swagger": "2.0",
  "info": {
    "title": "ServiceBusManagementClient",
    "description": "Azure Service Bus client for managing Namespace, IPFilter Rules, VirtualNetworkRules and Zone Redundant",
    "version": "2018-01-01-preview"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Azure Active Directory OAuth2 Flow",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "paths": {
    "/subscriptions/{subscriptionId}/providers/Microsoft.ServiceBus/namespaces": {
      "get": {
        "tags": [
          "Namespaces"
        ],
        "operationId": "Namespaces_List",
        "x-ms-examples": {
          "NameSpaceList": {
            "$ref": "./examples/NameSpaces/SBNameSpaceList.json"
          }
        },
        "description": "Gets all the available namespaces within the subscription, irrespective of the resource groups.",
        "externalDocs": {
          "url": "https://msdn.microsoft.com/en-us/library/azure/mt639412.aspx"
        },
        "parameters": [
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Namespaces successfully returned.",
            "schema": {
              "$ref": "#/definitions/SBNamespaceListResult"
            }
          },
          "default": {
            "description": "ServiceBus error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../common/v1/definitions.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceBus/namespaces": {
      "get": {
        "tags": [
          "Namespaces"
        ],
        "operationId": "Namespaces_ListByResourceGroup",
        "x-ms-examples": {
          "NameSpaceListByResourceGroup": {
            "$ref": "./examples/NameSpaces/SBNameSpaceListByResourceGroup.json"
          }
        },
        "description": "Gets the available namespaces within a resource group.",
        "externalDocs": {
          "url": "https://msdn.microsoft.com/en-us/library/azure/mt639412.aspx"
        },
        "parameters": [
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Namespaces successfully returned.",
            "schema": {
              "$ref": "#/definitions/SBNamespaceListResult"
            }
          },
          "default": {
            "description": "ServiceBus error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../common/v1/definitions.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceBus/namespaces/{namespaceName}": {
      "put": {
        "tags": [
          "Namespaces"
        ],
        "operationId": "Namespaces_CreateOrUpdate",
        "x-ms-examples": {
          "NameSpaceCreate": {
            "$ref": "./examples/NameSpaces/SBNameSpaceCreate.json"
          }
        },
        "description": "Creates or updates a service namespace. Once created, this namespace's resource manifest is immutable. This operation is idempotent.",
        "externalDocs": {
          "url": "https://msdn.microsoft.com/en-us/library/azure/mt639408.aspx"
        },
        "parameters": [
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "namespaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The namespace name."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SBNamespace"
            },
            "description": "Parameters supplied to create a namespace resource."
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Namespace created successfully.",
            "schema": {
              "$ref": "#/definitions/SBNamespace"
            }
          },
          "201": {
            "description": "Namespace create request accepted.",
            "schema": {
              "$ref": "#/definitions/SBNamespace"
            }
          },
          "202": {
            "description": "Namespace create or update request accepted."
          },
          "default": {
            "description": "ServiceBus error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../common/v1/definitions.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "tags": [
          "Namespaces"
        ],
        "operationId": "Namespaces_Delete",
        "x-ms-examples": {
          "NameSpaceDelete": {
            "$ref": "./examples/NameSpaces/SBNameSpaceDelete.json"
          }
        },
        "description": "Deletes an existing namespace. This operation also removes all associated resources under the namespace.",
        "externalDocs": {
          "url": "https://msdn.microsoft.com/en-us/library/azure/mt639389.aspx"
        },
        "parameters": [
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/NamespaceNameParameter"
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Namespace successfully deleted."
          },
          "202": {
            "description": "Namespace delete request accepted."
          },
          "204": {
            "description": "No content."
          },
          "default": {
            "description": "ServiceBus error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../common/v1/definitions.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true
      },
      "get": {
        "tags": [
          "Namespaces"
        ],
        "operationId": "Namespaces_Get",
        "x-ms-examples": {
          "NameSpaceGet": {
            "$ref": "./examples/NameSpaces/SBNameSpaceGet.json"
          }
        },
        "description": "Gets a description for the specified namespace.",
        "externalDocs": {
          "url": "https://msdn.microsoft.com/en-us/library/azure/mt639379.aspx"
        },
        "parameters": [
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/NamespaceNameParameter"
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Namespace successfully returned.",
            "schema": {
              "$ref": "#/definitions/SBNamespace"
            }
          },
          "default": {
            "description": "ServiceBus error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../common/v1/definitions.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Namespaces"
        ],
        "operationId": "Namespaces_Update",
        "x-ms-examples": {
          "NameSpaceUpdate": {
            "$ref": "./examples/NameSpaces/SBNameSpaceUpdate.json"
          }
        },
        "description": "Updates a service namespace. Once created, this namespace's resource manifest is immutable. This operation is idempotent.",
        "parameters": [
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/NamespaceNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SBNamespaceUpdateParameters"
            },
            "description": "Parameters supplied to update a namespace resource."
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Namespace updated successfully.",
            "schema": {
              "$ref": "#/definitions/SBNamespace"
            }
          },
          "201": {
            "description": "Namespace update request accepted.",
            "schema": {
              "$ref": "#/definitions/SBNamespace"
            }
          },
          "202": {
            "description": "Namespace update request accepted."
          },
          "default": {
            "description": "ServiceBus error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../common/v1/definitions.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceBus/namespaces/{namespaceName}/privateEndpointConnections": {
      "get": {
        "tags": [
          "Namespaces PrivateEndpointConnections"
        ],
        "operationId": "PrivateEndpointConnections_List",
        "x-ms-examples": {
          "NameSpaceCreate": {
            "$ref": "./examples/NameSpaces/PrivateEndPointConnectionList.json"
          }
        },
        "description": "Gets the available PrivateEndpointConnections within a namespace.",
        "externalDocs": {
          "url": "https://msdn.microsoft.com/en-us/library/azure/mt639412.aspx"
        },
        "parameters": [
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/NamespaceNameParameter"
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "PrivateEndpointConnections successfully returned.",
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnectionListResult"
            }
          },
          "default": {
            "description": "ServiceBus error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../common/v1/definitions.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceBus/namespaces/{namespaceName}/privateEndpointConnections/{privateEndpointConnectionName}": {
      "put": {
        "tags": [
          "Namespaces PrivateEndpointConnections"
        ],
        "operationId": "PrivateEndpointConnections_CreateOrUpdate",
        "x-ms-examples": {
          "NameSpacePrivateEndPointConnectionCreate": {
            "$ref": "./examples/NameSpaces/PrivateEndPointConnectionCreate.json"
          }
        },
        "description": "Creates or updates PrivateEndpointConnections of service namespace.",
        "externalDocs": {
          "url": "https://msdn.microsoft.com/en-us/library/azure/mt639408.aspx"
        },
        "parameters": [
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/NamespaceNameParameter"
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/PrivateEndpointConnectionNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnection"
            },
            "description": "Parameters supplied to update Status of PrivateEndPoint Connection to namespace resource."
          }
        ],
        "responses": {
          "200": {
            "description": "Status of PrivateEndPoint Connection Created successfully.",
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnection"
            }
          },
          "201": {
            "description": "Request to update Status of PrivateEndPoint Connection accepted.",
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnection"
            }
          },
          "default": {
            "description": "ServiceBus error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../common/v1/definitions.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Namespaces PrivateEndpointConnections"
        ],
        "operationId": "PrivateEndpointConnections_Delete",
        "x-ms-examples": {
          "NameSpacePrivateEndPointConnectionDelete": {
            "$ref": "./examples/NameSpaces/PrivateEndPointConnectionDelete.json"
          }
        },
        "description": "Deletes an existing Private Endpoint Connection.",
        "externalDocs": {
          "url": "https://msdn.microsoft.com/en-us/library/azure/mt639389.aspx"
        },
        "parameters": [
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/NamespaceNameParameter"
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/PrivateEndpointConnectionNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Private Endpoint Connection successfully deleted."
          },
          "202": {
            "description": "Private Endpoint Connection  delete request accepted."
          },
          "204": {
            "description": "No content."
          },
          "default": {
            "description": "ServiceBus error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../common/v1/definitions.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true
      },
      "get": {
        "tags": [
          "Namespaces PrivateEndpointConnections"
        ],
        "operationId": "PrivateEndpointConnections_Get",
        "x-ms-examples": {
          "NameSpacePrivateEndPointConnectionGet": {
            "$ref": "./examples/NameSpaces/PrivateEndPointConnectionGet.json"
          }
        },
        "description": "Gets a description for the specified Private Endpoint Connection.",
        "externalDocs": {
          "url": "https://msdn.microsoft.com/en-us/library/azure/mt639379.aspx"
        },
        "parameters": [
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/NamespaceNameParameter"
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/PrivateEndpointConnectionNameParameter"
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Description of Private Endpoint Connection returned successfully.",
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnection"
            }
          },
          "default": {
            "description": "ServiceBus error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../common/v1/definitions.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceBus/namespaces/{namespaceName}/privateLinkResources": {
      "get": {
        "tags": [
          "Namespaces PrivateLinkResources"
        ],
        "operationId": "PrivateLinkResources_Get",
        "x-ms-examples": {
          "NameSpacePrivateLinkResourcesGet": {
            "$ref": "./examples/NameSpaces/PrivateLinkResourcesGet.json"
          }
        },
        "description": "Gets lists of resources that supports Privatelinks.",
        "externalDocs": {
          "url": "https://msdn.microsoft.com/en-us/library/azure/mt639379.aspx"
        },
        "parameters": [
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/NamespaceNameParameter"
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Private Link resource List",
            "schema": {
              "$ref": "#/definitions/PrivateLinkResourcesListResult"
            }
          },
          "default": {
            "description": "ServiceBus error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../common/v1/definitions.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceBus/namespaces/{namespaceName}/AuthorizationRules": {
      "get": {
        "tags": [
          "Namespaces AuthorizationRule"
        ],
        "operationId": "Namespaces_ListAuthorizationRules",
        "x-ms-examples": {
          "NameSpaceAuthorizationRuleListAll": {
            "$ref": "./examples/NameSpaces/SBNameSpaceAuthorizationRuleListAll.json"
          }
        },
        "description": "Gets the authorization rules for a namespace.",
        "externalDocs": {
          "url": "https://msdn.microsoft.com/en-us/library/azure/mt639376.aspx"
        },
        "parameters": [
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/NamespaceNameParameter"
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Namespace authorization rules returned successfully.",
            "schema": {
              "$ref": "#/definitions/SBAuthorizationRuleListResult"
            }
          },
          "default": {
            "description": "ServiceBus error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../common/v1/definitions.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceBus/namespaces/{namespaceName}/AuthorizationRules/{authorizationRuleName}": {
      "put": {
        "tags": [
          "Namespaces AuthorizationRule"
        ],
        "operationId": "Namespaces_CreateOrUpdateAuthorizationRule",
        "x-ms-examples": {
          "NameSpaceAuthorizationRuleCreate": {
            "$ref": "./examples/NameSpaces/SBNameSpaceAuthorizationRuleCreate.json"
          }
        },
        "description": "Creates or updates an authorization rule for a namespace.",
        "externalDocs": {
          "url": "https://msdn.microsoft.com/en-us/library/azure/mt639410.aspx"
        },
        "parameters": [
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/NamespaceNameParameter"
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/AuthorizationRuleNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SBAuthorizationRule"
            },
            "description": "The shared access authorization rule."
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Namespace authorization rule created.",
            "schema": {
              "$ref": "#/definitions/SBAuthorizationRule"
            }
          },
          "default": {
            "description": "ServiceBus error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../common/v1/definitions.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Namespaces AuthorizationRule"
        ],
        "operationId": "Namespaces_DeleteAuthorizationRule",
        "x-ms-examples": {
          "NameSpaceAuthorizationRuleDelete": {
            "$ref": "./examples/NameSpaces/SBNameSpaceAuthorizationRuleDelete.json"
          }
        },
        "description": "Deletes a namespace authorization rule.",
        "externalDocs": {
          "url": "https://msdn.microsoft.com/en-us/library/azure/mt639417.aspx"
        },
        "parameters": [
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/NamespaceNameParameter"
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/AuthorizationRuleNameParameter"
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Namespace authorization rule successfully deleted."
          },
          "204": {
            "description": "No content."
          },
          "default": {
            "description": "ServiceBus error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../common/v1/definitions.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "get": {
        "tags": [
          "Namespaces AuthorizationRule"
        ],
        "operationId": "Namespaces_GetAuthorizationRule",
        "x-ms-examples": {
          "NameSpaceAuthorizationRuleGet": {
            "$ref": "./examples/NameSpaces/SBNameSpaceAuthorizationRuleGet.json"
          }
        },
        "description": "Gets an authorization rule for a namespace by rule name.",
        "externalDocs": {
          "url": "https://msdn.microsoft.com/en-us/library/azure/mt639392.aspx"
        },
        "parameters": [
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/NamespaceNameParameter"
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/AuthorizationRuleNameParameter"
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Namespace authorization rule returned successfully.",
            "schema": {
              "$ref": "#/definitions/SBAuthorizationRule"
            }
          },
          "default": {
            "description": "ServiceBus error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../common/v1/definitions.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceBus/namespaces/{namespaceName}/AuthorizationRules/{authorizationRuleName}/listKeys": {
      "post": {
        "tags": [
          "Namespaces AuthorizationRule"
        ],
        "operationId": "Namespaces_ListKeys",
        "x-ms-examples": {
          "NameSpaceAuthorizationRuleListKey": {
            "$ref": "./examples/NameSpaces/SBNameSpaceAuthorizationRuleListKey.json"
          }
        },
        "description": "Gets the primary and secondary connection strings for the namespace.",
        "externalDocs": {
          "url": "https://msdn.microsoft.com/en-us/library/azure/mt639398.aspx"
        },
        "parameters": [
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/NamespaceNameParameter"
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/AuthorizationRuleNameParameter"
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Connection strings successfully returned.",
            "schema": {
              "$ref": "#/definitions/AccessKeys"
            }
          },
          "default": {
            "description": "ServiceBus error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../common/v1/definitions.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceBus/namespaces/{namespaceName}/AuthorizationRules/{authorizationRuleName}/regenerateKeys": {
      "post": {
        "tags": [
          "Namespaces AuthorizationRule"
        ],
        "operationId": "Namespaces_RegenerateKeys",
        "x-ms-examples": {
          "NameSpaceAuthorizationRuleRegenerateKey": {
            "$ref": "./examples/NameSpaces/SBNameSpaceAuthorizationRuleRegenerateKey.json"
          }
        },
        "description": "Regenerates the primary or secondary connection strings for the namespace.",
        "externalDocs": {
          "url": "https://msdn.microsoft.com/en-us/library/azure/mt718977.aspx"
        },
        "parameters": [
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/NamespaceNameParameter"
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/AuthorizationRuleNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RegenerateAccessKeyParameters"
            },
            "description": "Parameters supplied to regenerate the authorization rule."
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Authorization rule successfully regenerated.",
            "schema": {
              "$ref": "#/definitions/AccessKeys"
            }
          },
          "default": {
            "description": "ServiceBus error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../common/v1/definitions.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceBus/namespaces/{namespaceName}/queues/{queueName}/authorizationRules": {
      "get": {
        "tags": [
          "Queues AuthorizationRule"
        ],
        "operationId": "Queues_ListAuthorizationRules",
        "x-ms-examples": {
          "QueueAuthorizationRuleListAll": {
            "$ref": "./examples/Queues/SBQueueAuthorizationRuleListAll.json"
          }
        },
        "description": "Gets all authorization rules for a queue.",
        "externalDocs": {
          "url": "https://msdn.microsoft.com/en-us/library/azure/mt705607.aspx"
        },
        "parameters": [
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/NamespaceNameParameter"
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/QueueNameParameter"
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Authorization rules successfully returned.",
            "schema": {
              "$ref": "#/definitions/SBAuthorizationRuleListResult"
            }
          },
          "default": {
            "description": "ServiceBus error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../common/v1/definitions.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceBus/namespaces/{namespaceName}/queues/{queueName}/authorizationRules/{authorizationRuleName}": {
      "put": {
        "tags": [
          "Queues AuthorizationRule"
        ],
        "operationId": "Queues_CreateOrUpdateAuthorizationRule",
        "x-ms-examples": {
          "QueueAuthorizationRuleCreate": {
            "$ref": "./examples/Queues/SBQueueAuthorizationRuleCreate.json"
          }
        },
        "description": "Creates an authorization rule for a queue.",
        "parameters": [
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/NamespaceNameParameter"
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/QueueNameParameter"
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/AuthorizationRuleNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SBAuthorizationRule"
            },
            "description": "The shared access authorization rule."
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Authorization rule successfully created.",
            "schema": {
              "$ref": "#/definitions/SBAuthorizationRule"
            }
          },
          "default": {
            "description": "ServiceBus error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../common/v1/definitions.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Queues AuthorizationRule"
        ],
        "operationId": "Queues_DeleteAuthorizationRule",
        "x-ms-examples": {
          "QueueAuthorizationRuleDelete": {
            "$ref": "./examples/Queues/SBQueueAuthorizationRuleDelete.json"
          }
        },
        "description": "Deletes a queue authorization rule.",
        "externalDocs": {
          "url": "https://msdn.microsoft.com/en-us/library/azure/mt705609.aspx"
        },
        "parameters": [
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/NamespaceNameParameter"
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/QueueNameParameter"
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/AuthorizationRuleNameParameter"
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Authorization rule successfully deleted."
          },
          "204": {
            "description": "No content."
          },
          "default": {
            "description": "ServiceBus error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../common/v1/definitions.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "get": {
        "tags": [
          "Queues AuthorizationRule"
        ],
        "operationId": "Queues_GetAuthorizationRule",
        "x-ms-examples": {
          "QueueAuthorizationRuleGet": {
            "$ref": "./examples/Queues/SBQueueAuthorizationRuleGet.json"
          }
        },
        "description": "Gets an authorization rule for a queue by rule name.",
        "externalDocs": {
          "url": "https://msdn.microsoft.com/en-us/library/azure/mt705611.aspx"
        },
        "parameters": [
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/NamespaceNameParameter"
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/QueueNameParameter"
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/AuthorizationRuleNameParameter"
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Authorization rule successfully returned.",
            "schema": {
              "$ref": "#/definitions/SBAuthorizationRule"
            }
          },
          "default": {
            "description": "ServiceBus error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../common/v1/definitions.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceBus/namespaces/{namespaceName}/queues/{queueName}/authorizationRules/{authorizationRuleName}/ListKeys": {
      "post": {
        "tags": [
          "Queues AuthorizationRule"
        ],
        "operationId": "Queues_ListKeys",
        "x-ms-examples": {
          "QueueAuthorizationRuleListKey": {
            "$ref": "./examples/Queues/SBQueueAuthorizationRuleListKey.json"
          }
        },
        "description": "Primary and secondary connection strings to the queue.",
        "externalDocs": {
          "url": "https://msdn.microsoft.com/en-us/library/azure/mt705608.aspx"
        },
        "parameters": [
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/NamespaceNameParameter"
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/QueueNameParameter"
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/AuthorizationRuleNameParameter"
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Connection strings successfully returned.",
            "schema": {
              "$ref": "#/definitions/AccessKeys"
            }
          },
          "default": {
            "description": "ServiceBus error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../common/v1/definitions.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceBus/namespaces/{namespaceName}/queues/{queueName}/authorizationRules/{authorizationRuleName}/regenerateKeys": {
      "post": {
        "tags": [
          "Queues AuthorizationRule"
        ],
        "operationId": "Queues_RegenerateKeys",
        "x-ms-examples": {
          "QueueAuthorizationRuleRegenerateKey": {
            "$ref": "./examples/Queues/SBQueueAuthorizationRuleRegenerateKey.json"
          }
        },
        "description": "Regenerates the primary or secondary connection strings to the queue.",
        "externalDocs": {
          "url": "https://msdn.microsoft.com/en-us/library/azure/mt705606.aspx"
        },
        "parameters": [
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/NamespaceNameParameter"
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/QueueNameParameter"
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/AuthorizationRuleNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RegenerateAccessKeyParameters"
            },
            "description": "Parameters supplied to regenerate the authorization rule."
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Connection strings successfully regenerated.",
            "schema": {
              "$ref": "#/definitions/AccessKeys"
            }
          },
          "default": {
            "description": "ServiceBus error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../common/v1/definitions.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceBus/namespaces/{namespaceName}/topics/{topicName}/authorizationRules": {
      "get": {
        "tags": [
          "Topics AuthorizationRule"
        ],
        "operationId": "Topics_ListAuthorizationRules",
        "x-ms-examples": {
          "TopicAuthorizationRuleListAll": {
            "$ref": "./examples/Topics/SBTopicAuthorizationRuleListAll.json"
          }
        },
        "description": "Gets authorization rules for a topic.",
        "externalDocs": {
          "url": "https://msdn.microsoft.com/en-us/library/azure/mt720681.aspx"
        },
        "parameters": [
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/NamespaceNameParameter"
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/TopicNameParameter"
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Authorization rules successfully returned.",
            "schema": {
              "$ref": "#/definitions/SBAuthorizationRuleListResult"
            }
          },
          "default": {
            "description": "ServiceBus error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../common/v1/definitions.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceBus/namespaces/{namespaceName}/topics/{topicName}/authorizationRules/{authorizationRuleName}": {
      "put": {
        "tags": [
          "Topics AuthorizationRule"
        ],
        "operationId": "Topics_CreateOrUpdateAuthorizationRule",
        "x-ms-examples": {
          "TopicAuthorizationRuleCreate": {
            "$ref": "./examples/Topics/SBTopicAuthorizationRuleCreate.json"
          }
        },
        "description": "Creates an authorization rule for the specified topic.",
        "externalDocs": {
          "url": "https://msdn.microsoft.com/en-us/library/azure/mt720678.aspx"
        },
        "parameters": [
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/NamespaceNameParameter"
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/TopicNameParameter"
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/AuthorizationRuleNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SBAuthorizationRule"
            },
            "description": "The shared access authorization rule."
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Topic authorization rule successfully created.",
            "schema": {
              "$ref": "#/definitions/SBAuthorizationRule"
            }
          },
          "default": {
            "description": "ServiceBus error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../common/v1/definitions.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "get": {
        "tags": [
          "Topics AuthorizationRule"
        ],
        "operationId": "Topics_GetAuthorizationRule",
        "x-ms-examples": {
          "TopicAuthorizationRuleGet": {
            "$ref": "./examples/Topics/SBTopicAuthorizationRuleGet.json"
          }
        },
        "description": "Returns the specified authorization rule.",
        "externalDocs": {
          "url": "https://msdn.microsoft.com/en-us/library/azure/mt720676.aspx"
        },
        "parameters": [
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/NamespaceNameParameter"
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/TopicNameParameter"
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/AuthorizationRuleNameParameter"
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Topic authorization rule returned successfully.",
            "schema": {
              "$ref": "#/definitions/SBAuthorizationRule"
            }
          },
          "default": {
            "description": "ServiceBus error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../common/v1/definitions.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Topics AuthorizationRule"
        ],
        "operationId": "Topics_DeleteAuthorizationRule",
        "x-ms-examples": {
          "TopicAuthorizationRuleDelete": {
            "$ref": "./examples/Topics/SBTopicAuthorizationRuleDelete.json"
          }
        },
        "description": "Deletes a topic authorization rule.",
        "externalDocs": {
          "url": "https://msdn.microsoft.com/en-us/library/azure/mt720681.aspx"
        },
        "parameters": [
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/NamespaceNameParameter"
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/TopicNameParameter"
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/AuthorizationRuleNameParameter"
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Topic authorization rule successfully deleted."
          },
          "204": {
            "description": "No content."
          },
          "default": {
            "description": "ServiceBus error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../common/v1/definitions.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceBus/namespaces/{namespaceName}/topics/{topicName}/authorizationRules/{authorizationRuleName}/ListKeys": {
      "post": {
        "tags": [
          "Topics AuthorizationRule"
        ],
        "operationId": "Topics_ListKeys",
        "x-ms-examples": {
          "TopicAuthorizationRuleListKey": {
            "$ref": "./examples/Topics/SBTopicAuthorizationRuleListKey.json"
          }
        },
        "description": "Gets the primary and secondary connection strings for the topic.",
        "externalDocs": {
          "url": "https://msdn.microsoft.com/en-us/library/azure/mt720677.aspx"
        },
        "parameters": [
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/NamespaceNameParameter"
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/TopicNameParameter"
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/AuthorizationRuleNameParameter"
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Connection strings successfully retrieved.",
            "schema": {
              "$ref": "#/definitions/AccessKeys"
            }
          },
          "default": {
            "description": "ServiceBus error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../common/v1/definitions.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceBus/namespaces/{namespaceName}/topics/{topicName}/authorizationRules/{authorizationRuleName}/regenerateKeys": {
      "post": {
        "tags": [
          "Topics AuthorizationRule"
        ],
        "operationId": "Topics_RegenerateKeys",
        "x-ms-examples": {
          "TopicAuthorizationRuleRegenerateKey": {
            "$ref": "./examples/Topics/SBTopicAuthorizationRuleRegenerateKey.json"
          }
        },
        "description": "Regenerates primary or secondary connection strings for the topic.",
        "externalDocs": {
          "url": "https://msdn.microsoft.com/en-us/library/azure/mt720679.aspx"
        },
        "parameters": [
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/NamespaceNameParameter"
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/TopicNameParameter"
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/AuthorizationRuleNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RegenerateAccessKeyParameters"
            },
            "description": "Parameters supplied to regenerate the authorization rule."
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Connection strings successfully regenerated.",
            "schema": {
              "$ref": "#/definitions/AccessKeys"
            }
          },
          "default": {
            "description": "ServiceBus error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../common/v1/definitions.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ServiceBus/CheckNameAvailability": {
      "post": {
        "tags": [
          "Namespaces"
        ],
        "operationId": "Namespaces_CheckNameAvailability",
        "x-ms-examples": {
          "NameSpaceCheckNameAvailability": {
            "$ref": "./examples/NameSpaces/SBNameSpaceCheckNameAvailability.json"
          }
        },
        "description": "Check the give namespace name availability.",
        "parameters": [
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CheckNameAvailability"
            },
            "description": "Parameters to check availability of the given namespace name"
          }
        ],
        "responses": {
          "200": {
            "description": "check availability returned successfully.",
            "schema": {
              "$ref": "#/definitions/CheckNameAvailabilityResult"
            }
          },
          "default": {
            "description": "ServiceBus error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../common/v1/definitions.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceBus/namespaces/{namespaceName}/ipfilterrules": {
      "get": {
        "tags": [
          "Namespaces"
        ],
        "operationId": "Namespaces_ListIpFilterRules",
        "x-ms-examples": {
          "ListIpFilterRules": {
            "$ref": "./examples/NameSpaces/IPFilterRule/SBNameSpaceIPFilterRuleListAll.json"
          }
        },
        "description": "Gets a list of IP Filter rules for a Namespace.",
        "parameters": [
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/NamespaceNameParameter"
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Namespace IpFilterRule successfully returned.",
            "schema": {
              "$ref": "#/definitions/IpFilterRuleListResult"
            }
          },
          "default": {
            "description": "ServiceBus error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../common/v1/definitions.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceBus/namespaces/{namespaceName}/ipfilterrules/{ipFilterRuleName}": {
      "put": {
        "tags": [
          "Namespaces"
        ],
        "operationId": "Namespaces_CreateOrUpdateIpFilterRule",
        "x-ms-examples": {
          "NameSpaceIpFilterRuleCreate": {
            "$ref": "./examples/NameSpaces/IPFilterRule/SBNameSpaceIpFilterRuleCreateorUpdate.json"
          }
        },
        "description": "Creates or updates an IpFilterRule for a Namespace.",
        "parameters": [
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/NamespaceNameParameter"
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/IpFilterRuleNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/IpFilterRule"
            },
            "description": "The Namespace IpFilterRule."
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Namespace IpFilterRule created",
            "schema": {
              "$ref": "#/definitions/IpFilterRule"
            }
          },
          "default": {
            "description": "ServiceBus error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../common/v1/definitions.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Namespaces"
        ],
        "operationId": "Namespaces_DeleteIpFilterRule",
        "x-ms-examples": {
          "NameSpaceIpFilterRuleDelete": {
            "$ref": "./examples/NameSpaces/IPFilterRule/SBNameSpaceIpFilterRuleDelete.json"
          }
        },
        "description": "Deletes an IpFilterRule for a Namespace.",
        "parameters": [
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/NamespaceNameParameter"
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/IpFilterRuleNameParameter"
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Namespace IpFilterRule successfully deleted."
          },
          "204": {
            "description": "No content."
          },
          "default": {
            "description": "ServiceBus error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../common/v1/definitions.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "get": {
        "tags": [
          "Namespaces"
        ],
        "operationId": "Namespaces_GetIpFilterRule",
        "x-ms-examples": {
          "NameSpaceIpFilterRuleGet": {
            "$ref": "./examples/NameSpaces/IPFilterRule/SBNameSpaceIpFilterRuleGet.json"
          }
        },
        "description": "Gets an IpFilterRule for a Namespace by rule name.",
        "parameters": [
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/NamespaceNameParameter"
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/IpFilterRuleNameParameter"
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Namespace IpFilterRule returned successfully.",
            "schema": {
              "$ref": "#/definitions/IpFilterRule"
            }
          },
          "default": {
            "description": "ServiceBus error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../common/v1/definitions.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceBus/namespaces/{namespaceName}/migrate": {
      "post": {
        "tags": [
          "Namespaces"
        ],
        "operationId": "Namespaces_Migrate",
        "x-ms-examples": {
          "NameSpaceUpdate": {
            "$ref": "./examples/NameSpaces/SBNamespaceMigrate.json"
          }
        },
        "description": "This operation Migrate the given namespace to provided name type",
        "parameters": [
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/NamespaceNameParameter"
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SBNamespaceMigrate"
            },
            "description": "Parameters supplied to migrate namespace type."
          }
        ],
        "responses": {
          "200": {
            "description": "Migrate Namespace type is successful."
          },
          "default": {
            "description": "ServiceBus error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../common/v1/definitions.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceBus/namespaces/{namespaceName}/networkRuleSets/default": {
      "put": {
        "tags": [
          "Namespaces"
        ],
        "x-ms-examples": {
          "NameSpaceNetworkRuleSetCreate": {
            "$ref": "./examples/NameSpaces/VirtualNetworkRule/SBNetworkRuleSetCreate.json"
          }
        },
        "operationId": "Namespaces_CreateOrUpdateNetworkRuleSet",
        "description": "Create or update NetworkRuleSet for a Namespace.",
        "parameters": [
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/NamespaceNameParameter"
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NetworkRuleSet"
            },
            "description": "The Namespace IpFilterRule."
          }
        ],
        "responses": {
          "200": {
            "description": "Namespace NetworkRuleSet successfully returned.",
            "schema": {
              "$ref": "#/definitions/NetworkRuleSet"
            }
          },
          "default": {
            "description": "ServiceBus error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../common/v1/definitions.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "get": {
        "tags": [
          "Namespaces"
        ],
        "x-ms-examples": {
          "NameSpaceNetworkRuleSetGet": {
            "$ref": "./examples/NameSpaces/VirtualNetworkRule/SBNetworkRuleSetGet.json"
          }
        },
        "operationId": "Namespaces_GetNetworkRuleSet",
        "description": "Gets NetworkRuleSet for a Namespace.",
        "parameters": [
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/NamespaceNameParameter"
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Namespace NetworkRuleSet successfully returned.",
            "schema": {
              "$ref": "#/definitions/NetworkRuleSet"
            }
          },
          "default": {
            "description": "ServiceBus error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../common/v1/definitions.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceBus/namespaces/{namespaceName}/networkRuleSets": {
      "get": {
        "tags": [
          "Namespaces"
        ],
        "x-ms-examples": {
          "NameSpaceNetworkRuleSetList": {
            "$ref": "./examples/NameSpaces/VirtualNetworkRule/SBNetworkRuleSetList.json"
          }
        },
        "operationId": "Namespaces_ListNetworkRuleSets",
        "description": "Gets list of NetworkRuleSet for a Namespace.",
        "parameters": [
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/NamespaceNameParameter"
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "List of NetworkRuleSets for Namespace successfully returned.",
            "schema": {
              "$ref": "#/definitions/NetworkRuleSetListResult"
            }
          },
          "default": {
            "description": "ServiceBus error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../common/v1/definitions.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceBus/namespaces/{namespaceName}/virtualnetworkrules": {
      "get": {
        "tags": [
          "Namespaces"
        ],
        "operationId": "Namespaces_ListVirtualNetworkRules",
        "x-ms-examples": {
          "ListIpFilterRules": {
            "$ref": "./examples/NameSpaces/VirtualNetworkRule/SBNameSpaceVirtualNetworkRuleListAll.json"
          }
        },
        "description": "Gets a list of VirtualNetwork rules for a Namespace.",
        "parameters": [
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/NamespaceNameParameter"
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Namespace VirtualNetworkRule successfully returned.",
            "schema": {
              "$ref": "#/definitions/VirtualNetworkRuleListResult"
            }
          },
          "default": {
            "description": "ServiceBus error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../common/v1/definitions.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceBus/namespaces/{namespaceName}/virtualnetworkrules/{virtualNetworkRuleName}": {
      "put": {
        "tags": [
          "Namespaces"
        ],
        "operationId": "Namespaces_CreateOrUpdateVirtualNetworkRule",
        "x-ms-examples": {
          "NameSpaceVirtualNetworkRuleCreate": {
            "$ref": "./examples/NameSpaces/VirtualNetworkRule/SBNameSpaceVirtualNetworkRuleCreateorUpdate.json"
          }
        },
        "description": "Creates or updates an VirtualNetworkRule for a Namespace.",
        "parameters": [
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/NamespaceNameParameter"
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/VirtualNetworkRuleNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VirtualNetworkRule"
            },
            "description": "The Namespace VirtualNetworkRule."
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Namespace VirtualNetworkRule created",
            "schema": {
              "$ref": "#/definitions/VirtualNetworkRule"
            }
          },
          "default": {
            "description": "ServiceBus error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../common/v1/definitions.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Namespaces"
        ],
        "operationId": "Namespaces_DeleteVirtualNetworkRule",
        "x-ms-examples": {
          "NameSpaceVirtualNetworkRuleDelete": {
            "$ref": "./examples/NameSpaces/VirtualNetworkRule/SBNameSpaceVirtualNetworkRuleDelete.json"
          }
        },
        "description": "Deletes an VirtualNetworkRule for a Namespace.",
        "parameters": [
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/NamespaceNameParameter"
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/VirtualNetworkRuleNameParameter"
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Namespace VirtualNetworkRule successfully deleted."
          },
          "204": {
            "description": "No content."
          },
          "default": {
            "description": "ServiceBus error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../common/v1/definitions.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "get": {
        "tags": [
          "Namespaces"
        ],
        "operationId": "Namespaces_GetVirtualNetworkRule",
        "x-ms-examples": {
          "NameSpaceVirtualNetworkRuleGet": {
            "$ref": "./examples/NameSpaces/VirtualNetworkRule/SBNameSpaceVirtualNetworkRuleGet.json"
          }
        },
        "description": "Gets an VirtualNetworkRule for a Namespace by rule name.",
        "parameters": [
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/NamespaceNameParameter"
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/VirtualNetworkRuleNameParameter"
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../common/v1/definitions.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Namespace VirtualNetworkRule returned successfully.",
            "schema": {
              "$ref": "#/definitions/VirtualNetworkRule"
            }
          },
          "default": {
            "description": "ServiceBus error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../common/v1/definitions.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "ResourceNamespacePatch": {
      "properties": {
        "location": {
          "type": "string",
          "description": "Resource location"
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Resource tags"
        }
      },
      "allOf": [
        {
          "$ref": "../../../common/v1/definitions.json#/definitions/Resource"
        }
      ],
      "description": "The Resource definition."
    },
    "SBNamespaceListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SBNamespace"
          },
          "description": "Result of the List Namespace operation."
        },
        "nextLink": {
          "type": "string",
          "description": "Link to the next set of results. Not empty if Value contains incomplete list of Namespaces."
        }
      },
      "description": "The response of the List Namespace operation."
    },
    "SBNamespace": {
      "properties": {
        "sku": {
          "$ref": "#/definitions/SBSku",
          "description": "Properties of SKU"
        },
        "identity": {
          "$ref": "#/definitions/Identity",
          "description": "Properties of BYOK Identity description"
        },
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/SBNamespaceProperties",
          "description": "Properties of the namespace."
        }
      },
      "allOf": [
        {
          "$ref": "../../../common/v1/definitions.json#/definitions/TrackedResource"
        }
      ],
      "description": "Description of a namespace resource."
    },
    "SBNamespaceUpdateParameters": {
      "properties": {
        "sku": {
          "$ref": "#/definitions/SBSku",
          "description": "Properties of SKU"
        },
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/SBNamespaceProperties",
          "description": "Properties of the namespace."
        },
        "identity": {
          "$ref": "#/definitions/Identity",
          "description": "Properties of BYOK Identity description"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ResourceNamespacePatch"
        }
      ],
      "description": "Description of a namespace resource."
    },
    "SBNamespaceProperties": {
      "properties": {
        "provisioningState": {
          "readOnly": true,
          "type": "string",
          "description": "Provisioning state of the namespace."
        },
        "createdAt": {
          "readOnly": true,
          "format": "date-time",
          "type": "string",
          "description": "The time the namespace was created"
        },
        "updatedAt": {
          "readOnly": true,
          "format": "date-time",
          "type": "string",
          "description": "The time the namespace was updated."
        },
        "serviceBusEndpoint": {
          "readOnly": true,
          "type": "string",
          "description": "Endpoint you can use to perform Service Bus operations."
        },
        "metricId": {
          "readOnly": true,
          "type": "string",
          "description": "Identifier for Azure Insights metrics"
        },
        "zoneRedundant": {
          "type": "boolean",
          "description": "Enabling this property creates a Premium Service Bus Namespace in regions supported availability zones."
        },
        "encryption": {
          "$ref": "#/definitions/Encryption",
          "description": "Properties of BYOK Encryption description"
        }
      },
      "description": "Properties of the namespace."
    },
    "SBSku": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of this SKU.",
          "enum": [
            "Basic",
            "Standard",
            "Premium"
          ],
          "x-ms-enum": {
            "name": "SkuName",
            "modelAsString": false
          }
        },
        "tier": {
          "type": "string",
          "description": "The billing tier of this particular SKU.",
          "enum": [
            "Basic",
            "Standard",
            "Premium"
          ],
          "x-ms-enum": {
            "name": "SkuTier",
            "modelAsString": false
          }
        },
        "capacity": {
          "format": "int32",
          "type": "integer",
          "description": "The specified messaging units for the tier. For Premium tier, capacity are 1,2 and 4."
        }
      },
      "required": [
        "name"
      ],
      "description": "SKU of the namespace."
    },
    "Identity": {
      "x-ms-client-flatten": true,
      "properties": {
        "principalId": {
          "type": "string",
          "description": "ObjectId from the KeyVault"
        },
        "tenantId": {
          "type": "string",
          "description": "TenantId from the KeyVault"
        },
        "type": {
          "type": "string",
          "description": "Enumerates the possible value Identity type, which currently supports only 'SystemAssigned'",
          "default": "SystemAssigned",
          "enum": [
            "SystemAssigned"
          ],
          "x-ms-enum": {
            "name": "IdentityType",
            "modelAsString": false
          }
        }
      },
      "description": "Properties to configure Identity for Bring your Own Keys"
    },
    "Encryption": {
      "x-ms-client-flatten": true,
      "properties": {
        "keyVaultProperties": {
          "$ref": "#/definitions/KeyVaultProperties",
          "description": "Properties of KeyVault"
        },
        "keySource": {
          "type": "string",
          "description": "Enumerates the possible value of keySource for Encryption",
          "default": "Microsoft.KeyVault",
          "enum": [
            "Microsoft.KeyVault"
          ],
          "x-ms-enum": {
            "name": "keySource",
            "modelAsString": false
          }
        }
      },
      "description": "Properties to configure Encryption"
    },
    "KeyVaultProperties": {
      "properties": {
        "keyName": {
          "type": "string",
          "description": "Name of the Key from KeyVault"
        },
        "keyVaultUri": {
          "type": "string",
          "description": "Uri of KeyVault"
        }
      },
      "description": "Properties to configure keyVault Properties"
    },
    "PrivateEndpointConnection": {
      "description": "Properties of the PrivateEndpointConnection.",
      "allOf": [
        {
          "$ref": "../../../common/v1/definitions.json#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/PrivateEndpointConnectionProperties",
          "description": "Properties of the PrivateEndpointConnection.",
          "x-ms-client-flatten": true
        }
      }
    },
    "PrivateEndpointConnectionProperties": {
      "description": "Properties of the private endpoint connection resource.",
      "properties": {
        "privateEndpoint": {
          "$ref": "#/definitions/PrivateEndpoint",
          "description": "The Private Endpoint resource for this Connection."
        },
        "privateLinkServiceConnectionState": {
          "$ref": "#/definitions/ConnectionState",
          "description": "Details about the state of the connection."
        },
        "provisioningState": {
          "description": "Provisioning state of the Private Endpoint Connection.",
          "enum": [
            "Creating",
            "Updating",
            "Deleting",
            "Succeeded",
            "Canceled",
            "Failed"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "EndPointProvisioningState",
            "modelAsString": true
          }
        }
      }
    },
    "PrivateEndpoint": {
      "description": "PrivateEndpoint information.",
      "properties": {
        "id": {
          "description": "The ARM identifier for Private Endpoint.",
          "type": "string"
        }
      }
    },
    "ConnectionState": {
      "description": "ConnectionState information.",
      "properties": {
        "status": {
          "description": "Status of the connection.",
          "enum": [
            "Pending",
            "Approved",
            "Rejected",
            "Disconnected"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "PrivateLinkConnectionStatus",
            "modelAsString": true
          }
        },
        "description": {
          "description": "Description of the connection state.",
          "type": "string"
        }
      }
    },
    "PrivateEndpointConnectionListResult": {
      "description": "Result of the list of all private endpoint connections operation.",
      "properties": {
        "value": {
          "description": "A collection of private endpoint connection resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PrivateEndpointConnection"
          }
        },
        "nextLink": {
          "description": "A link for the next page of private endpoint connection resources.",
          "type": "string"
        }
      }
    },
    "PrivateLinkResource": {
      "description": "Information of the private link resource.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/PrivateLinkResourceProperties",
          "description": "Properties of the private link resource.",
          "x-ms-client-flatten": true
        },
        "id": {
          "description": "Fully qualified identifier of the resource.",
          "type": "string"
        },
        "name": {
          "description": "Name of the resource",
          "type": "string"
        },
        "type": {
          "description": "Type of the resource",
          "type": "string"
        }
      }
    },
    "PrivateLinkResourceProperties": {
      "description": "Properties of PrivateLinkResource",
      "properties": {
        "groupId": {
          "type": "string"
        },
        "requiredMembers": {
          "type": "array",
          "description": "Required Members",
          "items": {
            "type": "string"
          }
        },
        "requiredZoneNames": {
          "type": "array",
          "description": "Required Zone Names",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "PrivateLinkResourcesListResult": {
      "description": "Result of the List private link resources operation.",
      "properties": {
        "value": {
          "description": "A collection of private link resources",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PrivateLinkResource"
          }
        },
        "nextLink": {
          "description": "A link for the next page of private link resources.",
          "type": "string"
        }
      }
    },
    "SBAuthorizationRuleListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SBAuthorizationRule"
          },
          "description": "Result of the List Authorization Rules operation."
        },
        "nextLink": {
          "type": "string",
          "description": "Link to the next set of results. Not empty if Value contains incomplete list of Authorization Rules."
        }
      },
      "description": "The response to the List Namespace operation."
    },
    "SBAuthorizationRule": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "properties": {
            "rights": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "Manage",
                  "Send",
                  "Listen"
                ],
                "x-ms-enum": {
                  "name": "AccessRights",
                  "modelAsString": false
                }
              },
              "description": "The rights associated with the rule."
            }
          },
          "required": [
            "rights"
          ],
          "description": "AuthorizationRule properties."
        }
      },
      "allOf": [
        {
          "$ref": "../../../common/v1/definitions.json#/definitions/Resource"
        }
      ],
      "description": "Description of a namespace authorization rule."
    },
    "AccessKeys": {
      "properties": {
        "primaryConnectionString": {
          "readOnly": true,
          "type": "string",
          "description": "Primary connection string of the created namespace authorization rule."
        },
        "secondaryConnectionString": {
          "readOnly": true,
          "type": "string",
          "description": "Secondary connection string of the created namespace authorization rule."
        },
        "aliasPrimaryConnectionString": {
          "readOnly": true,
          "type": "string",
          "description": "Primary connection string of the alias if GEO DR is enabled"
        },
        "aliasSecondaryConnectionString": {
          "readOnly": true,
          "type": "string",
          "description": "Secondary  connection string of the alias if GEO DR is enabled"
        },
        "primaryKey": {
          "readOnly": true,
          "type": "string",
          "description": "A base64-encoded 256-bit primary key for signing and validating the SAS token."
        },
        "secondaryKey": {
          "readOnly": true,
          "type": "string",
          "description": "A base64-encoded 256-bit primary key for signing and validating the SAS token."
        },
        "keyName": {
          "readOnly": true,
          "type": "string",
          "description": "A string that describes the authorization rule."
        }
      },
      "description": "Namespace/ServiceBus Connection String"
    },
    "RegenerateAccessKeyParameters": {
      "properties": {
        "keyType": {
          "type": "string",
          "description": "The access key to regenerate.",
          "enum": [
            "PrimaryKey",
            "SecondaryKey"
          ],
          "x-ms-enum": {
            "name": "KeyType",
            "modelAsString": false
          }
        },
        "key": {
          "type": "string",
          "description": "Optional, if the key value provided, is reset for KeyType value or autogenerate Key value set for keyType"
        }
      },
      "required": [
        "keyType"
      ],
      "description": "Parameters supplied to the Regenerate Authorization Rule operation, specifies which key needs to be reset."
    },
    "CheckNameAvailability": {
      "properties": {
        "name": {
          "type": "string",
          "description": "The Name to check the namespace name availability and The namespace name can contain only letters, numbers, and hyphens. The namespace must start with a letter, and it must end with a letter or number."
        }
      },
      "required": [
        "name"
      ],
      "description": "Description of a Check Name availability request properties."
    },
    "CheckNameAvailabilityResult": {
      "properties": {
        "message": {
          "readOnly": true,
          "type": "string",
          "description": "The detailed info regarding the reason associated with the namespace."
        },
        "nameAvailable": {
          "type": "boolean",
          "description": "Value indicating namespace is availability, true if the namespace is available; otherwise, false."
        },
        "reason": {
          "$ref": "#/definitions/UnavailableReason",
          "description": "The reason for unavailability of a namespace."
        }
      },
      "description": "Description of a Check Name availability request properties."
    },
    "UnavailableReason": {
      "type": "string",
      "enum": [
        "None",
        "InvalidName",
        "SubscriptionIsDisabled",
        "NameInUse",
        "NameInLockdown",
        "TooManyNamespaceInCurrentSubscription"
      ],
      "x-ms-enum": {
        "name": "UnavailableReason",
        "modelAsString": false
      },
      "description": "Specifies the reason for the unavailability of the service."
    },
    "IpFilterRule": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "properties": {
            "ipMask": {
              "type": "string",
              "description": "IP Mask"
            },
            "action": {
              "type": "string",
              "description": "The IP Filter Action",
              "enum": [
                "Accept",
                "Reject"
              ],
              "x-ms-enum": {
                "name": "IPAction",
                "modelAsString": true
              }
            },
            "filterName": {
              "type": "string",
              "description": "IP Filter name"
            }
          },
          "description": "Properties supplied to create or update IpFilterRules"
        }
      },
      "allOf": [
        {
          "$ref": "../../../common/v1/definitions.json#/definitions/Resource"
        }
      ],
      "description": "Single item in a List or Get IpFilterRules operation"
    },
    "IpFilterRuleListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/IpFilterRule"
          },
          "description": "Result of the List IpFilter Rules operation."
        },
        "nextLink": {
          "type": "string",
          "description": "Link to the next set of results. Not empty if Value contains an incomplete list of IpFilter Rules"
        }
      },
      "description": "The response from the List namespace operation."
    },
    "SBNamespaceMigrate": {
      "type": "object",
      "properties": {
        "targetNamespaceType": {
          "type": "string",
          "description": "Type of namespaces",
          "enum": [
            "Messaging",
            "NotificationHub",
            "Mixed",
            "EventHub",
            "Relay"
          ],
          "x-ms-enum": {
            "name": "NameSpaceType",
            "modelAsString": false
          }
        }
      },
      "required": [
        "targetNamespaceType"
      ],
      "description": "Namespace Migrate Object"
    },
    "NWRuleSetIpRules": {
      "x-ms-client-flatten": true,
      "properties": {
        "ipMask": {
          "type": "string",
          "description": "IP Mask"
        },
        "action": {
          "type": "string",
          "description": "The IP Filter Action",
          "enum": [
            "Allow"
          ],
          "x-ms-enum": {
            "name": "NetworkRuleIPAction",
            "modelAsString": true
          },
          "default": "Allow"
        }
      },
      "description": "Description of NetWorkRuleSet - IpRules resource."
    },
    "Subnet": {
      "properties": {
        "id": {
          "type": "string",
          "description": "Resource ID of Virtual Network Subnet"
        }
      },
      "required": [
        "id"
      ],
      "description": "Properties supplied for Subnet"
    },
    "NWRuleSetVirtualNetworkRules": {
      "x-ms-client-flatten": true,
      "properties": {
        "subnet": {
          "$ref": "#/definitions/Subnet",
          "description": "Subnet properties"
        },
        "ignoreMissingVnetServiceEndpoint": {
          "type": "boolean",
          "description": "Value that indicates whether to ignore missing VNet Service Endpoint"
        }
      },
      "description": "Description of VirtualNetworkRules - NetworkRules resource."
    },
    "NetworkRuleSet": {
      "properties": {
        "properties": {
          "description": "NetworkRuleSet properties",
          "x-ms-client-flatten": true,
          "properties": {
            "trustedServiceAccessEnabled": {
              "type": "boolean",
              "description": "Value that indicates whether Trusted Service Access is Enabled or not."
            },
            "defaultAction": {
              "type": "string",
              "description": "Default Action for Network Rule Set",
              "enum": [
                "Allow",
                "Deny"
              ],
              "x-ms-enum": {
                "name": "DefaultAction",
                "modelAsString": true
              }
            },
            "virtualNetworkRules": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/NWRuleSetVirtualNetworkRules"
              },
              "description": "List VirtualNetwork Rules"
            },
            "ipRules": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/NWRuleSetIpRules"
              },
              "description": "List of IpRules"
            }
          }
        }
      },
      "allOf": [
        {
          "$ref": "../../../common/v1/definitions.json#/definitions/Resource"
        }
      ],
      "description": "Description of NetworkRuleSet resource."
    },
    "NetworkRuleSetListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NetworkRuleSet"
          },
          "description": "Result of the List NetworkRuleSet operation."
        },
        "nextLink": {
          "type": "string",
          "description": "Link to the next set of results. Not empty if Value contains incomplete list of NetworkRuleSet."
        }
      },
      "description": "The response of the List NetworkRuleSet operation."
    },
    "VirtualNetworkRule": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "properties": {
            "virtualNetworkSubnetId": {
              "type": "string",
              "description": "Resource ID of Virtual Network Subnet"
            }
          },
          "description": "Properties supplied to create or update VirtualNetworkRules"
        }
      },
      "allOf": [
        {
          "$ref": "../../../common/v1/definitions.json#/definitions/Resource"
        }
      ],
      "description": "Single item in a List or Get VirtualNetworkRules operation"
    },
    "VirtualNetworkRuleListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VirtualNetworkRule"
          },
          "description": "Result of the List VirtualNetwork Rules operation."
        },
        "nextLink": {
          "type": "string",
          "description": "Link to the next set of results. Not empty if Value contains an incomplete list of VirtualNetwork Rules"
        }
      },
      "description": "The response from the List namespace operation."
    }
  },
  "parameters": {}
}
