{
  "swagger": "2.0",
  "info": {
    "title": "Azure Load Testing",
    "version": "2022-11-01",
    "description": "These APIs allow end users to create, view and run load tests using Azure Load\nTest Service.",
    "x-typespec-generated": [
      {
        "emitter": "@azure-tools/typespec-autorest"
      }
    ]
  },
  "schemes": [
    "https"
  ],
  "x-ms-parameterized-host": {
    "hostTemplate": "https://{endpoint}",
    "useSchemePrefix": false,
    "parameters": [
      {
        "name": "endpoint",
        "in": "path",
        "required": true,
        "type": "string"
      }
    ]
  },
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "security": [
    {
      "Oauth2": [
        "https://cnt-prod.loadtesting.azure.com/.default"
      ]
    }
  ],
  "securityDefinitions": {
    "Oauth2": {
      "type": "oauth2",
      "description": "The Azure Active Directory OAuth2 Flow",
      "flow": "implicit",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/v2.0/authorize",
      "scopes": {
        "https://cnt-prod.loadtesting.azure.com/.default": ""
      }
    }
  },
  "tags": [
    {
      "name": "Test"
    },
    {
      "name": "TestRun"
    }
  ],
  "paths": {
    "/test-runs": {
      "get": {
        "operationId": "LoadTestRun_ListTestRuns",
        "tags": [
          "TestRun"
        ],
        "summary": "Get test run file by file name.",
        "description": "Get test run file by file name.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "type": "object",
              "description": "Paged collection of TestRun items",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "The TestRun items on this page",
                  "items": {
                    "$ref": "#/definitions/TestRun"
                  },
                  "x-ms-identifiers": []
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "The link to the next page of items"
                }
              },
              "required": [
                "value"
              ]
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "description": "String error code indicating what went wrong.",
                "type": "string"
              }
            }
          }
        },
        "x-ms-examples": {
          "GetTestRunFile": {
            "$ref": "./examples/GetTestRunFile.json"
          },
          "List test runs.": {
            "$ref": "./examples/ListTestRuns.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/test-runs/{testRunId}": {
      "get": {
        "operationId": "LoadTestRun_GetTestRun",
        "tags": [
          "TestRun"
        ],
        "summary": "Get test run details by name.",
        "description": "Get test run details by name.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "testRunId",
            "in": "path",
            "description": "Unique test run name as identifier",
            "required": true,
            "type": "string",
            "minLength": 2,
            "maxLength": 50
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/TestRun"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "description": "String error code indicating what went wrong.",
                "type": "string"
              }
            }
          }
        },
        "x-ms-examples": {
          "GetTestRun": {
            "$ref": "./examples/GetTestRun.json"
          },
          "Get a load test run.": {
            "$ref": "./examples/GetTestRun.json"
          }
        }
      },
      "patch": {
        "operationId": "LoadTestRun_CreateOrUpdateTestRun",
        "tags": [
          "TestRun"
        ],
        "summary": "Create and start a new test run with the given name.",
        "description": "Create and start a new test run with the given name.",
        "consumes": [
          "application/merge-patch+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "testRunId",
            "in": "path",
            "description": "Unique name for the load test run, must contain only lower-case alphabetic,\nnumeric, underscore or hyphen characters.",
            "required": true,
            "type": "string"
          },
          {
            "name": "oldTestRunId",
            "in": "query",
            "description": "Existing test run identifier that should be rerun, if this is provided, the\ntest will run with the JMX file, configuration and app components from the\nexisting test run. You can override the configuration values for new test run\nin the request body.",
            "required": false,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Load test run model",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TestRunUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/TestRun"
            }
          },
          "201": {
            "description": "The request has succeeded and a new resource has been created as a result.",
            "schema": {
              "$ref": "#/definitions/TestRun"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponseBody"
            },
            "headers": {
              "x-ms-error-code": {
                "description": "The error code for specific error that occurred.",
                "type": "string"
              }
            }
          }
        },
        "x-ms-examples": {
          "CreateOrUpdateTestRun": {
            "$ref": "./examples/CreateOrUpdateTestRun.json"
          },
          "Create/update and start a load test run": {
            "$ref": "./examples/CreateOrUpdateTestRun.json"
          }
        }
      },
      "delete": {
        "operationId": "LoadTestRun_DeleteTestRun",
        "tags": [
          "TestRun"
        ],
        "summary": "Delete a test run by its name.",
        "description": "Delete a test run by its name.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "testRunId",
            "in": "path",
            "description": "Unique test run name as identifier",
            "required": true,
            "type": "string",
            "minLength": 2,
            "maxLength": 50
          }
        ],
        "responses": {
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful. "
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "description": "String error code indicating what went wrong.",
                "type": "string"
              }
            }
          }
        },
        "x-ms-examples": {
          "DeleteTestRun": {
            "$ref": "./examples/DeleteTestRun.json"
          },
          "Delete a load test run": {
            "$ref": "./examples/DeleteTestRun.json"
          }
        }
      }
    },
    "/test-runs/{testRunId}:stop": {
      "post": {
        "operationId": "LoadTestRun_Stop",
        "tags": [
          "TestRun"
        ],
        "summary": "Stop test run by name.",
        "description": "Stop test run by name.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "testRunId",
            "in": "path",
            "description": "Unique test run name as identifier",
            "required": true,
            "type": "string",
            "minLength": 2,
            "maxLength": 50
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/TestRun"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "description": "String error code indicating what went wrong.",
                "type": "string"
              }
            }
          }
        },
        "x-ms-examples": {
          "StopTestRun": {
            "$ref": "./examples/StopTestRun.json"
          }
        }
      }
    },
    "/test-runs/{testRunId}/app-components": {
      "get": {
        "operationId": "LoadTestRun_GetAppComponents",
        "tags": [
          "TestRun"
        ],
        "summary": "Get associated app component (collection of azure resources) for the given test\nrun.",
        "description": "Get associated app component (collection of azure resources) for the given test\nrun.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "testRunId",
            "in": "path",
            "description": "Unique name for the load test run, must contain only lower-case alphabetic,\nnumeric, underscore or hyphen characters.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/TestRunAppComponents"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponseBody"
            },
            "headers": {
              "x-ms-error-code": {
                "description": "The error code for specific error that occurred.",
                "type": "string"
              }
            }
          }
        },
        "x-ms-examples": {
          "ListTestRunAppComponents": {
            "$ref": "./examples/ListTestRunAppComponents.json"
          },
          "Get associated app component for the given test run.": {
            "$ref": "./examples/ListTestRunAppComponents.json"
          }
        }
      },
      "patch": {
        "operationId": "LoadTestRun_CreateOrUpdateAppComponents",
        "tags": [
          "TestRun"
        ],
        "summary": "Associate an app component (collection of azure resources) to a test run",
        "description": "Associate an app component (collection of azure resources) to a test run",
        "consumes": [
          "application/merge-patch+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "testRunId",
            "in": "path",
            "description": "Unique name for the load test run, must contain only lower-case alphabetic,\nnumeric, underscore or hyphen characters.",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "App Component model.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TestRunAppComponentsUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/TestRunAppComponents"
            }
          },
          "201": {
            "description": "The request has succeeded and a new resource has been created as a result.",
            "schema": {
              "$ref": "#/definitions/TestRunAppComponents"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponseBody"
            },
            "headers": {
              "x-ms-error-code": {
                "description": "The error code for specific error that occurred.",
                "type": "string"
              }
            }
          }
        },
        "x-ms-examples": {
          "CreateOrUpdateTestRunAppComponents": {
            "$ref": "./examples/CreateOrUpdateTestRunAppComponents.json"
          },
          "Add or update app components to a load test run": {
            "$ref": "./examples/CreateOrUpdateTestRunAppComponents.json"
          }
        }
      }
    },
    "/test-runs/{testRunId}/files/{fileName}": {
      "get": {
        "operationId": "LoadTestRun_GetTestRunFile",
        "tags": [
          "TestRun"
        ],
        "summary": "Get test run file by file name.",
        "description": "Get test run file by file name.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "testRunId",
            "in": "path",
            "description": "Unique test run name as identifier",
            "required": true,
            "type": "string",
            "minLength": 2,
            "maxLength": 50
          },
          {
            "name": "fileName",
            "in": "path",
            "description": "Name of the file.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/TestRunFileInfo"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "description": "String error code indicating what went wrong.",
                "type": "string"
              }
            }
          }
        },
        "x-ms-examples": {
          "GetTestRunFile": {
            "$ref": "./examples/GetTestRunFile.json"
          },
          "Get a file associated to a load test run.": {
            "$ref": "./examples/GetTestRunFile.json"
          }
        }
      }
    },
    "/test-runs/{testRunId}/metric-definitions": {
      "get": {
        "operationId": "LoadTestRun_ListMetricDefinitions",
        "tags": [
          "TestRun"
        ],
        "summary": "List the metric definitions for a load test run.",
        "description": "List the metric definitions for a load test run.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "testRunId",
            "in": "path",
            "description": "Unique name for the load test run, must contain only lower-case alphabetic,\nnumeric, underscore or hyphen characters.",
            "required": true,
            "type": "string"
          },
          {
            "name": "metricNamespace",
            "in": "query",
            "description": "Metric namespace to query metric definitions for.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/MetricDefinitionCollection"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponseBody"
            },
            "headers": {
              "x-ms-error-code": {
                "description": "The error code for specific error that occurred.",
                "type": "string"
              }
            }
          }
        },
        "x-ms-examples": {
          "ListTestRunMetricsDefinitions": {
            "$ref": "./examples/ListTestRunMetricsDefinitions.json"
          },
          "List the metric definitions for a load test run.": {
            "$ref": "./examples/ListTestRunMetricsDefinitions.json"
          }
        }
      }
    },
    "/test-runs/{testRunId}/metric-namespaces": {
      "get": {
        "operationId": "LoadTestRun_ListMetricNamespaces",
        "tags": [
          "TestRun"
        ],
        "summary": "List the metric namespaces for a load test run.",
        "description": "List the metric namespaces for a load test run.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "testRunId",
            "in": "path",
            "description": "Unique name for the load test run, must contain only lower-case alphabetic,\nnumeric, underscore or hyphen characters.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/MetricNamespaceCollection"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponseBody"
            },
            "headers": {
              "x-ms-error-code": {
                "description": "The error code for specific error that occurred.",
                "type": "string"
              }
            }
          }
        },
        "x-ms-examples": {
          "ListTestRunMetricsNamespaces": {
            "$ref": "./examples/ListTestRunMetricsNamespaces.json"
          },
          "List the metric namespaces for a load test run.": {
            "$ref": "./examples/ListTestRunMetricsNamespaces.json"
          }
        }
      }
    },
    "/test-runs/{testRunId}/metrics": {
      "post": {
        "operationId": "LoadTestRun_ListMetrics",
        "tags": [
          "TestRun"
        ],
        "summary": "List the metric values for a load test run.",
        "description": "List the metric values for a load test run.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "testRunId",
            "in": "path",
            "description": "Unique name for the load test run, must contain only lower-case alphabetic,\nnumeric, underscore or hyphen characters.",
            "required": true,
            "type": "string"
          },
          {
            "name": "aggregation",
            "in": "query",
            "description": "The aggregation",
            "required": false,
            "type": "string"
          },
          {
            "name": "interval",
            "in": "query",
            "description": "The interval (i.e. timegrain) of the query.",
            "required": false,
            "type": "string",
            "default": "PT1M",
            "enum": [
              "PT5S",
              "PT10S",
              "PT1M",
              "PT5M",
              "PT1H"
            ],
            "x-ms-enum": {
              "name": "Interval",
              "modelAsString": true,
              "values": [
                {
                  "name": "PT5S",
                  "value": "PT5S",
                  "description": "5 seconds, available only if test run duration is less than 10 minutes"
                },
                {
                  "name": "PT10S",
                  "value": "PT10S",
                  "description": "10 seconds, available only if test run duration is less than 10 minutes"
                },
                {
                  "name": "PT1M",
                  "value": "PT1M",
                  "description": "1 minute"
                },
                {
                  "name": "PT5M",
                  "value": "PT5M",
                  "description": "5 minutes, available only if test run duration is greater than 1 minute"
                },
                {
                  "name": "PT1H",
                  "value": "PT1H",
                  "description": "1 hour, available only if test run duration is greater than 1 minute"
                }
              ]
            }
          },
          {
            "name": "metricName",
            "in": "query",
            "description": "Metric name",
            "required": true,
            "type": "string"
          },
          {
            "name": "metricNamespace",
            "in": "query",
            "description": "Metric namespace to query metric definitions for.",
            "required": true,
            "type": "string"
          },
          {
            "name": "timespan",
            "in": "query",
            "description": "The timespan of the query. It is a string with the following format 'startDateTime_ISO/endDateTime_ISO'.",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Metric dimension filter ",
            "required": false,
            "schema": {
              "$ref": "#/definitions/MetricRequestPayload"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/Metrics"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponseBody"
            },
            "headers": {
              "x-ms-error-code": {
                "description": "The error code for specific error that occurred.",
                "type": "string"
              }
            }
          }
        },
        "x-ms-examples": {
          "ListTestRunMetrics": {
            "$ref": "./examples/ListTestRunMetrics.json"
          },
          "List the metric values for a load test run.": {
            "$ref": "./examples/ListTestRunMetrics.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/test-runs/{testRunId}/metrics/dimensions/{name}/values": {
      "get": {
        "operationId": "LoadTestRun_ListMetricDimensionValues",
        "tags": [
          "TestRun"
        ],
        "summary": "List the dimension values for the given metric dimension name.",
        "description": "List the dimension values for the given metric dimension name.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "testRunId",
            "in": "path",
            "description": "Unique name for the load test run, must contain only lower-case alphabetic,\nnumeric, underscore or hyphen characters.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Dimension name",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/MetricDimensions.interval"
          },
          {
            "$ref": "#/parameters/MetricDimensions.metricName"
          },
          {
            "$ref": "#/parameters/MetricDimensions.metricNamespace"
          },
          {
            "$ref": "#/parameters/MetricDimensions.timespan"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/DimensionValueList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponseBody"
            },
            "headers": {
              "x-ms-error-code": {
                "description": "The error code for specific error that occurred.",
                "type": "string"
              }
            }
          }
        },
        "x-ms-examples": {
          "ListMetricDimensionValues": {
            "$ref": "./examples/ListMetricDimensionValues.json"
          },
          "List the dimension values for the given metric dimension name.": {
            "$ref": "./examples/ListMetricDimensionValues.json"
          }
        }
      }
    },
    "/test-runs/{testRunId}/server-metrics-config": {
      "get": {
        "operationId": "LoadTestRun_GetServerMetricsConfig",
        "tags": [
          "TestRun"
        ],
        "summary": "List server metrics configuration for the given test run.",
        "description": "List server metrics configuration for the given test run.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "testRunId",
            "in": "path",
            "description": "Unique name for the load test run, must contain only lower-case alphabetic,\nnumeric, underscore or hyphen characters.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/TestRunServerMetricConfig"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponseBody"
            },
            "headers": {
              "x-ms-error-code": {
                "description": "The error code for specific error that occurred.",
                "type": "string"
              }
            }
          }
        },
        "x-ms-examples": {
          "ListTestRunServerMetricsConfig": {
            "$ref": "./examples/ListTestRunServerMetricsConfig.json"
          },
          "List server metrics configuration for the given test run.": {
            "$ref": "./examples/ListTestRunServerMetricsConfig.json"
          }
        }
      },
      "patch": {
        "operationId": "LoadTestRun_CreateOrUpdateServerMetricsConfig",
        "tags": [
          "TestRun"
        ],
        "summary": "Configure server metrics for a test run",
        "description": "Configure server metrics for a test run",
        "consumes": [
          "application/merge-patch+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "testRunId",
            "in": "path",
            "description": "Unique name for the load test run, must contain only lower-case alphabetic,\nnumeric, underscore or hyphen characters.",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Server metric configuration model.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TestRunServerMetricConfig"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/TestRunServerMetricConfig"
            }
          },
          "201": {
            "description": "The request has succeeded and a new resource has been created as a result.",
            "schema": {
              "$ref": "#/definitions/TestRunServerMetricConfig"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponseBody"
            },
            "headers": {
              "x-ms-error-code": {
                "description": "The error code for specific error that occurred.",
                "type": "string"
              }
            }
          }
        },
        "x-ms-examples": {
          "CreateOrUpdateTestRunServerMetricsConfig": {
            "$ref": "./examples/CreateOrUpdateTestRunServerMetricsConfig.json"
          },
          "Add or update server metrics configuration for a load test run": {
            "$ref": "./examples/CreateOrUpdateTestRunServerMetricsConfig.json"
          }
        }
      }
    },
    "/tests": {
      "get": {
        "operationId": "LoadTestAdministration_ListTests",
        "tags": [
          "Test"
        ],
        "summary": "Get all load tests by the fully qualified resource Id e.g\nsubscriptions/{subId}/resourceGroups/{rg}/providers/Microsoft.LoadTestService/loadtests/{resName}.",
        "description": "Get all load tests by the fully qualified resource Id e.g\nsubscriptions/{subId}/resourceGroups/{rg}/providers/Microsoft.LoadTestService/loadtests/{resName}.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "type": "object",
              "description": "Paged collection of Test items",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "The Test items on this page",
                  "items": {
                    "$ref": "#/definitions/Test"
                  },
                  "x-ms-identifiers": []
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "The link to the next page of items"
                }
              },
              "required": [
                "value"
              ]
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "description": "String error code indicating what went wrong.",
                "type": "string"
              }
            }
          }
        },
        "x-ms-examples": {
          "ListTests": {
            "$ref": "./examples/ListTests.json"
          },
          "Get all load tests.": {
            "$ref": "./examples/ListTests.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/tests/{testId}": {
      "get": {
        "operationId": "LoadTestAdministration_GetTest",
        "tags": [
          "Test"
        ],
        "summary": "Get load test details by test name",
        "description": "Get load test details by test name",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "testId",
            "in": "path",
            "description": "Unique test name as identifier.",
            "required": true,
            "type": "string",
            "minLength": 2,
            "maxLength": 50
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/Test"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "description": "String error code indicating what went wrong.",
                "type": "string"
              }
            }
          }
        },
        "x-ms-examples": {
          "GetTest": {
            "$ref": "./examples/GetTest.json"
          },
          "Get a load test.": {
            "$ref": "./examples/GetTest.json"
          }
        }
      },
      "patch": {
        "operationId": "LoadTestAdministration_CreateOrUpdateTest",
        "tags": [
          "Test"
        ],
        "summary": "Create a new test or update an existing test.",
        "description": "Create a new test or update an existing test.",
        "consumes": [
          "application/merge-patch+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "testId",
            "in": "path",
            "description": "Unique name for the load test, must contain only lower-case alphabetic,\nnumeric, underscore or hyphen characters.",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Load test model",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TestUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/Test"
            }
          },
          "201": {
            "description": "The request has succeeded and a new resource has been created as a result.",
            "schema": {
              "$ref": "#/definitions/Test"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponseBody"
            },
            "headers": {
              "x-ms-error-code": {
                "description": "The error code for specific error that occurred.",
                "type": "string"
              }
            }
          }
        },
        "x-ms-examples": {
          "CreateOrUpdateTest": {
            "$ref": "./examples/CreateOrUpdateTest.json"
          },
          "Create or update a load test": {
            "$ref": "./examples/CreateOrUpdateTest.json"
          }
        }
      },
      "delete": {
        "operationId": "LoadTestAdministration_DeleteTest",
        "tags": [
          "Test"
        ],
        "summary": "Delete a test by its name.",
        "description": "Delete a test by its name.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "testId",
            "in": "path",
            "description": "Unique test name as identifier.",
            "required": true,
            "type": "string",
            "minLength": 2,
            "maxLength": 50
          }
        ],
        "responses": {
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful. "
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "description": "String error code indicating what went wrong.",
                "type": "string"
              }
            }
          }
        },
        "x-ms-examples": {
          "DeleteTest": {
            "$ref": "./examples/DeleteTest.json"
          },
          "Delete a load test": {
            "$ref": "./examples/DeleteTest.json"
          }
        }
      }
    },
    "/tests/{testId}/app-components": {
      "get": {
        "operationId": "LoadTestAdministration_GetAppComponents",
        "tags": [
          "Test"
        ],
        "summary": "Get associated app component (collection of azure resources) for the given test.",
        "description": "Get associated app component (collection of azure resources) for the given test.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "testId",
            "in": "path",
            "description": "Unique name for the load test, must contain only lower-case alphabetic,\nnumeric, underscore or hyphen characters.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/TestAppComponents"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponseBody"
            },
            "headers": {
              "x-ms-error-code": {
                "description": "The error code for specific error that occurred.",
                "type": "string"
              }
            }
          }
        },
        "x-ms-examples": {
          "ListTestAppComponents": {
            "$ref": "./examples/ListTestAppComponents.json"
          },
          "Get associated app component for the given test.": {
            "$ref": "./examples/ListTestAppComponents.json"
          }
        }
      },
      "patch": {
        "operationId": "LoadTestAdministration_CreateOrUpdateAppComponents",
        "tags": [
          "Test"
        ],
        "summary": "Associate an app component (collection of azure resources) to a test",
        "description": "Associate an app component (collection of azure resources) to a test",
        "consumes": [
          "application/merge-patch+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "testId",
            "in": "path",
            "description": "Unique name for the load test, must contain only lower-case alphabetic,\nnumeric, underscore or hyphen characters.",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "App Component model.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TestAppComponentsUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/TestAppComponents"
            }
          },
          "201": {
            "description": "The request has succeeded and a new resource has been created as a result.",
            "schema": {
              "$ref": "#/definitions/TestAppComponents"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponseBody"
            },
            "headers": {
              "x-ms-error-code": {
                "description": "The error code for specific error that occurred.",
                "type": "string"
              }
            }
          }
        },
        "x-ms-examples": {
          "CreateOrUpdateTestAppComponents": {
            "$ref": "./examples/CreateOrUpdateTestAppComponents.json"
          },
          "Add or update app components to a load test": {
            "$ref": "./examples/CreateOrUpdateTestAppComponents.json"
          }
        }
      }
    },
    "/tests/{testId}/files": {
      "get": {
        "operationId": "LoadTestAdministration_ListTestFiles",
        "tags": [
          "Test"
        ],
        "summary": "Get all test files.",
        "description": "Get all test files.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "testId",
            "in": "path",
            "description": "Unique test name as identifier.",
            "required": true,
            "type": "string",
            "minLength": 2,
            "maxLength": 50
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "type": "object",
              "description": "Paged collection of TestFileInfo items",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "The TestFileInfo items on this page",
                  "items": {
                    "$ref": "#/definitions/TestFileInfo"
                  },
                  "x-ms-identifiers": []
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "The link to the next page of items"
                }
              },
              "required": [
                "value"
              ]
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "description": "String error code indicating what went wrong.",
                "type": "string"
              }
            }
          }
        },
        "x-ms-examples": {
          "ListTestFiles": {
            "$ref": "./examples/ListTestFiles.json"
          },
          "Get all test files.": {
            "$ref": "./examples/ListTestFiles.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/tests/{testId}/files/{fileName}": {
      "get": {
        "operationId": "LoadTestAdministration_GetTestFile",
        "tags": [
          "Test"
        ],
        "summary": "Get test file by the file name.",
        "description": "Get test file by the file name.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "testId",
            "in": "path",
            "description": "Unique test name as identifier.",
            "required": true,
            "type": "string",
            "minLength": 2,
            "maxLength": 50
          },
          {
            "name": "fileName",
            "in": "path",
            "description": "Name of the file.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/TestFileInfo"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "description": "String error code indicating what went wrong.",
                "type": "string"
              }
            }
          }
        },
        "x-ms-examples": {
          "GetTestFile": {
            "$ref": "./examples/GetTestFile.json"
          },
          "Get a file from a load test": {
            "$ref": "./examples/GetTestFile.json"
          }
        }
      },
      "put": {
        "operationId": "LoadTestAdministration_UploadTestFile",
        "tags": [
          "Test"
        ],
        "summary": "Upload input file for a given test name. File size can't be more than 50 MB.\nExisting file with same name for the given test will be overwritten. File\nshould be provided in the request body as application/octet-stream.",
        "description": "Upload input file for a given test name. File size can't be more than 50 MB.\nExisting file with same name for the given test will be overwritten. File\nshould be provided in the request body as application/octet-stream.",
        "consumes": [
          "application/octet-stream"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "testId",
            "in": "path",
            "description": "Unique name for the load test, must contain only lower-case alphabetic,\nnumeric, underscore or hyphen characters.",
            "required": true,
            "type": "string"
          },
          {
            "name": "fileName",
            "in": "path",
            "description": "Unique name for test file with file extension like : App.jmx",
            "required": true,
            "type": "string"
          },
          {
            "name": "fileType",
            "in": "query",
            "description": "File type",
            "required": false,
            "type": "string",
            "enum": [
              "JMX_FILE",
              "USER_PROPERTIES",
              "ADDITIONAL_ARTIFACTS",
              "ZIPPED_ARTIFACTS"
            ],
            "x-ms-enum": {
              "name": "FileType",
              "modelAsString": true,
              "values": [
                {
                  "name": "JMX_FILE",
                  "value": "JMX_FILE",
                  "description": "If file is jmx script."
                },
                {
                  "name": "USER_PROPERTIES",
                  "value": "USER_PROPERTIES",
                  "description": "If file is user properties."
                },
                {
                  "name": "ADDITIONAL_ARTIFACTS",
                  "value": "ADDITIONAL_ARTIFACTS",
                  "description": "If file is not any of other supported type."
                },
                {
                  "name": "ZIPPED_ARTIFACTS",
                  "value": "ZIPPED_ARTIFACTS",
                  "description": "If the file is a compressed archive containing a collection of various artifacts or resources."
                }
              ]
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "The file content as application/octet-stream.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "binary"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "The request has succeeded and a new resource has been created as a result.",
            "schema": {
              "$ref": "#/definitions/FileInfo"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponseBody"
            },
            "headers": {
              "x-ms-error-code": {
                "description": "The error code for specific error that occurred.",
                "type": "string"
              }
            }
          }
        },
        "x-ms-examples": {
          "UploadTestFile": {
            "$ref": "./examples/UploadTestFile.json"
          },
          "Upload input file for a given test name.": {
            "$ref": "./examples/UploadTestFile.json"
          }
        }
      },
      "delete": {
        "operationId": "LoadTestAdministration_DeleteTestFile",
        "tags": [
          "Test"
        ],
        "summary": "Delete file by the file name for a test",
        "description": "Delete file by the file name for a test",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "testId",
            "in": "path",
            "description": "Unique test name as identifier.",
            "required": true,
            "type": "string",
            "minLength": 2,
            "maxLength": 50
          },
          {
            "name": "fileName",
            "in": "path",
            "description": "Name of the file.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful. "
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "description": "String error code indicating what went wrong.",
                "type": "string"
              }
            }
          }
        },
        "x-ms-examples": {
          "DeleteTestFile": {
            "$ref": "./examples/DeleteTestFile.json"
          },
          "Delete a file from a load test": {
            "$ref": "./examples/DeleteTestFile.json"
          }
        }
      }
    },
    "/tests/{testId}/server-metrics-config": {
      "get": {
        "operationId": "LoadTestAdministration_GetServerMetricsConfig",
        "tags": [
          "Test"
        ],
        "summary": "List server metrics configuration for the given test.",
        "description": "List server metrics configuration for the given test.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "testId",
            "in": "path",
            "description": "Unique name for the load test, must contain only lower-case alphabetic,\nnumeric, underscore or hyphen characters.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/TestServerMetricConfig"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponseBody"
            },
            "headers": {
              "x-ms-error-code": {
                "description": "The error code for specific error that occurred.",
                "type": "string"
              }
            }
          }
        },
        "x-ms-examples": {
          "ListTestServerMetricsConfig": {
            "$ref": "./examples/ListTestServerMetricsConfig.json"
          },
          "List server metrics configuration for the given test.": {
            "$ref": "./examples/ListTestServerMetricsConfig.json"
          }
        }
      },
      "patch": {
        "operationId": "LoadTestAdministration_CreateOrUpdateServerMetricsConfig",
        "tags": [
          "Test"
        ],
        "summary": "Configure server metrics for a test",
        "description": "Configure server metrics for a test",
        "consumes": [
          "application/merge-patch+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "testId",
            "in": "path",
            "description": "Unique name for the load test, must contain only lower-case alphabetic,\nnumeric, underscore or hyphen characters.",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Server metric configuration model.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TestServerMetricConfig"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/TestServerMetricConfig"
            }
          },
          "201": {
            "description": "The request has succeeded and a new resource has been created as a result.",
            "schema": {
              "$ref": "#/definitions/TestServerMetricConfig"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponseBody"
            },
            "headers": {
              "x-ms-error-code": {
                "description": "The error code for specific error that occurred.",
                "type": "string"
              }
            }
          }
        },
        "x-ms-examples": {
          "CreateOrUpdateTestServerMetricsConfig": {
            "$ref": "./examples/CreateOrUpdateTestServerMetricsConfig.json"
          },
          "Add or update server metrics configuration for a load test.": {
            "$ref": "./examples/CreateOrUpdateTestServerMetricsConfig.json"
          }
        }
      }
    }
  },
  "definitions": {
    "APIVersions": {
      "type": "string",
      "description": "Azure Load Testing API versions.",
      "enum": [
        "2022-11-01",
        "2023-04-01-preview"
      ],
      "x-ms-enum": {
        "name": "APIVersions",
        "modelAsString": true,
        "values": [
          {
            "name": "v2022_11_01",
            "value": "2022-11-01",
            "description": "The 2022-11-01 version of the Azure Load Testing API."
          },
          {
            "name": "v2023_04_01_preview",
            "value": "2023-04-01-preview",
            "description": "The 2023-04-01-preview version of the Azure Load Testing API."
          }
        ]
      }
    },
    "AggregationType": {
      "type": "string",
      "description": "Aggregation type",
      "enum": [
        "Average",
        "Count",
        "None",
        "Total",
        "Percentile90",
        "Percentile95",
        "Percentile99"
      ],
      "x-ms-enum": {
        "name": "AggregationType",
        "modelAsString": true,
        "values": [
          {
            "name": "Average",
            "value": "Average",
            "description": "Average value"
          },
          {
            "name": "Count",
            "value": "Count",
            "description": "Total count"
          },
          {
            "name": "None",
            "value": "None",
            "description": "Aggregation will be average in this case"
          },
          {
            "name": "Total",
            "value": "Total",
            "description": "Total sum"
          },
          {
            "name": "Percentile90",
            "value": "Percentile90",
            "description": "90th percentile"
          },
          {
            "name": "Percentile95",
            "value": "Percentile95",
            "description": "95th percentile"
          },
          {
            "name": "Percentile99",
            "value": "Percentile99",
            "description": "99th percentile"
          }
        ]
      }
    },
    "AppComponent": {
      "type": "object",
      "description": "An Azure resource object (Refer azure generic resource model :\nhttps://docs.microsoft.com/en-us/rest/api/resources/resources/get-by-id#genericresource)",
      "properties": {
        "resourceId": {
          "type": "string",
          "description": "fully qualified resource Id e.g\nsubscriptions/{subId}/resourceGroups/{rg}/providers/Microsoft.LoadTestService/loadtests/{resName}",
          "readOnly": true
        },
        "resourceName": {
          "type": "string",
          "description": "Azure resource name, required while creating the app component."
        },
        "resourceType": {
          "type": "string",
          "description": "Azure resource type, required while creating the app component."
        },
        "displayName": {
          "type": "string",
          "description": "Azure resource display name"
        },
        "resourceGroup": {
          "type": "string",
          "description": "Resource group name of the Azure resource",
          "readOnly": true
        },
        "subscriptionId": {
          "type": "string",
          "description": "Subscription Id of the Azure resource",
          "readOnly": true
        },
        "kind": {
          "type": "string",
          "description": "Kind of Azure resource type"
        }
      }
    },
    "Azure.Core.Foundations.Error": {
      "type": "object",
      "description": "The error object.",
      "properties": {
        "code": {
          "type": "string",
          "description": "One of a server-defined set of error codes."
        },
        "message": {
          "type": "string",
          "description": "A human-readable representation of the error."
        },
        "target": {
          "type": "string",
          "description": "The target of the error."
        },
        "details": {
          "type": "array",
          "description": "An array of details about specific errors that led to this reported error.",
          "items": {
            "$ref": "#/definitions/Azure.Core.Foundations.Error"
          },
          "x-ms-identifiers": []
        },
        "innererror": {
          "$ref": "#/definitions/Azure.Core.Foundations.InnerError",
          "description": "An object containing more specific information than the current object about the error."
        }
      },
      "required": [
        "code",
        "message"
      ]
    },
    "Azure.Core.Foundations.ErrorResponse": {
      "type": "object",
      "description": "A response containing error details.",
      "properties": {
        "error": {
          "$ref": "#/definitions/Azure.Core.Foundations.Error",
          "description": "The error object."
        }
      },
      "required": [
        "error"
      ]
    },
    "Azure.Core.Foundations.InnerError": {
      "type": "object",
      "description": "An object containing more specific information about the error. As per Microsoft One API guidelines - https://github.com/Microsoft/api-guidelines/blob/vNext/Guidelines.md#7102-error-condition-responses.",
      "properties": {
        "code": {
          "type": "string",
          "description": "One of a server-defined set of error codes."
        },
        "innererror": {
          "$ref": "#/definitions/Azure.Core.Foundations.InnerError",
          "description": "Inner error."
        }
      }
    },
    "CertificateMetadata": {
      "type": "object",
      "description": "Certificates metadata",
      "properties": {
        "value": {
          "type": "string",
          "description": "The value of the certificate for respective type"
        },
        "type": {
          "$ref": "#/definitions/CertificateType",
          "description": "Type of certificate"
        },
        "name": {
          "type": "string",
          "description": "Name of the certificate."
        }
      }
    },
    "CertificateType": {
      "type": "string",
      "description": "Types of certificates supported.",
      "enum": [
        "AKV_CERT_URI"
      ],
      "x-ms-enum": {
        "name": "CertificateType",
        "modelAsString": true,
        "values": [
          {
            "name": "AKV_CERT_URI",
            "value": "AKV_CERT_URI",
            "description": "If the certificate is stored in an Azure Key Vault"
          }
        ]
      }
    },
    "DimensionFilter": {
      "type": "object",
      "description": "Dimension name and values to filter",
      "properties": {
        "name": {
          "type": "string",
          "description": "The dimension name"
        },
        "values": {
          "type": "array",
          "description": "The dimension values. Maximum values can be 20.",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "DimensionValue": {
      "type": "object",
      "description": "Represents a metric dimension value.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the dimension."
        },
        "value": {
          "type": "string",
          "description": "The value of the dimension."
        }
      }
    },
    "DimensionValueList": {
      "type": "object",
      "description": "Metrics dimension values.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The dimension value",
          "items": {
            "type": "string"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "Link for the next set of values in case of paginated results, if applicable"
        }
      }
    },
    "Error": {
      "type": "object",
      "description": "Error from a REST request.",
      "properties": {
        "code": {
          "type": "string",
          "description": "The error code."
        },
        "message": {
          "type": "string",
          "description": "The error message."
        },
        "target": {
          "type": "string",
          "description": "The error target."
        },
        "details": {
          "type": "array",
          "description": "Additional details and inner errors.",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "x-ms-identifiers": []
        }
      },
      "required": [
        "code",
        "message"
      ]
    },
    "ErrorDetails": {
      "type": "object",
      "description": "Error details if there is any failure in load test run",
      "properties": {
        "message": {
          "type": "string",
          "description": "Error details in case test run was not successfully run.",
          "readOnly": true
        }
      }
    },
    "ErrorResponseBody": {
      "type": "object",
      "description": "The definition of an error object.",
      "properties": {
        "error": {
          "$ref": "#/definitions/Error",
          "description": "Error from a REST request."
        }
      },
      "required": [
        "error"
      ]
    },
    "FileInfo": {
      "type": "object",
      "description": "File info",
      "properties": {
        "url": {
          "type": "string",
          "description": "File URL."
        },
        "fileType": {
          "$ref": "#/definitions/FileType",
          "description": "File type"
        },
        "expireDateTime": {
          "type": "string",
          "format": "date-time",
          "description": "Expiry time of the file (ISO 8601 literal format)"
        },
        "validationStatus": {
          "$ref": "#/definitions/FileStatus",
          "description": "Validation status of the file"
        },
        "validationFailureDetails": {
          "type": "string",
          "description": "Validation failure error details"
        }
      }
    },
    "FileStatus": {
      "type": "string",
      "description": "File status",
      "enum": [
        "NOT_VALIDATED",
        "VALIDATION_SUCCESS",
        "VALIDATION_FAILURE",
        "VALIDATION_INITIATED",
        "VALIDATION_NOT_REQUIRED"
      ],
      "x-ms-enum": {
        "name": "FileStatus",
        "modelAsString": true,
        "values": [
          {
            "name": "NOT_VALIDATED",
            "value": "NOT_VALIDATED",
            "description": "File is not validated."
          },
          {
            "name": "VALIDATION_SUCCESS",
            "value": "VALIDATION_SUCCESS",
            "description": "File is validated."
          },
          {
            "name": "VALIDATION_FAILURE",
            "value": "VALIDATION_FAILURE",
            "description": "File validation is failed."
          },
          {
            "name": "VALIDATION_INITIATED",
            "value": "VALIDATION_INITIATED",
            "description": "File validation is in progress."
          },
          {
            "name": "VALIDATION_NOT_REQUIRED",
            "value": "VALIDATION_NOT_REQUIRED",
            "description": "Validation is not required."
          }
        ]
      }
    },
    "FileType": {
      "type": "string",
      "description": "Types of file supported.",
      "enum": [
        "JMX_FILE",
        "USER_PROPERTIES",
        "ADDITIONAL_ARTIFACTS",
        "ZIPPED_ARTIFACTS"
      ],
      "x-ms-enum": {
        "name": "FileType",
        "modelAsString": true,
        "values": [
          {
            "name": "JMX_FILE",
            "value": "JMX_FILE",
            "description": "If file is jmx script."
          },
          {
            "name": "USER_PROPERTIES",
            "value": "USER_PROPERTIES",
            "description": "If file is user properties."
          },
          {
            "name": "ADDITIONAL_ARTIFACTS",
            "value": "ADDITIONAL_ARTIFACTS",
            "description": "If file is not any of other supported type."
          },
          {
            "name": "ZIPPED_ARTIFACTS",
            "value": "ZIPPED_ARTIFACTS",
            "description": "If the file is a compressed archive containing a collection of various artifacts or resources."
          }
        ]
      }
    },
    "Interval": {
      "type": "string",
      "description": "Intervals",
      "enum": [
        "PT5S",
        "PT10S",
        "PT1M",
        "PT5M",
        "PT1H"
      ],
      "x-ms-enum": {
        "name": "Interval",
        "modelAsString": true,
        "values": [
          {
            "name": "PT5S",
            "value": "PT5S",
            "description": "5 seconds, available only if test run duration is less than 10 minutes"
          },
          {
            "name": "PT10S",
            "value": "PT10S",
            "description": "10 seconds, available only if test run duration is less than 10 minutes"
          },
          {
            "name": "PT1M",
            "value": "PT1M",
            "description": "1 minute"
          },
          {
            "name": "PT5M",
            "value": "PT5M",
            "description": "5 minutes, available only if test run duration is greater than 1 minute"
          },
          {
            "name": "PT1H",
            "value": "PT1H",
            "description": "1 hour, available only if test run duration is greater than 1 minute"
          }
        ]
      }
    },
    "LoadTestConfiguration": {
      "type": "object",
      "description": "Configurations for the load test.",
      "properties": {
        "engineInstances": {
          "type": "integer",
          "format": "int32",
          "description": "The number of engine instances to execute load test. Supported values are in\nrange of 1-45. Required for creating a new test."
        },
        "splitAllCSVs": {
          "type": "boolean",
          "description": "If false, Azure Load Testing copies and processes your input files unmodified\nacross all test engine instances. If true, Azure Load Testing splits the CSV\ninput data evenly across all engine instances. If you provide multiple CSV\nfiles, each file will be split evenly."
        },
        "quickStartTest": {
          "type": "boolean",
          "description": "If true, optionalLoadTestConfig is required and JMX script for the load test is\nnot required to upload."
        },
        "optionalLoadTestConfig": {
          "$ref": "#/definitions/OptionalLoadTestConfig",
          "description": "Configuration for quick load test"
        }
      }
    },
    "MetricAvailability": {
      "type": "object",
      "description": "Metric availability specifies the time grain (aggregation interval or frequency)",
      "properties": {
        "timeGrain": {
          "$ref": "#/definitions/TimeGrain",
          "description": "The time grain specifies the aggregation interval for the metric. Expressed as\na duration 'PT1M', 'PT1H', etc."
        }
      }
    },
    "MetricDefinition": {
      "type": "object",
      "description": "Metric definition",
      "properties": {
        "dimensions": {
          "type": "array",
          "description": "List of dimensions",
          "items": {
            "$ref": "#/definitions/NameAndDesc"
          },
          "x-ms-identifiers": []
        },
        "description": {
          "type": "string",
          "description": "The metric description"
        },
        "name": {
          "type": "string",
          "description": "The metric name"
        },
        "namespace": {
          "type": "string",
          "description": "The namespace the metric belongs to."
        },
        "primaryAggregationType": {
          "$ref": "#/definitions/AggregationType",
          "description": "The primary aggregation type value defining how to use the values for display."
        },
        "supportedAggregationTypes": {
          "type": "array",
          "description": "The collection of what all aggregation types are supported.",
          "items": {
            "type": "string"
          }
        },
        "unit": {
          "$ref": "#/definitions/MetricUnit",
          "description": "The unit of the metric."
        },
        "metricAvailabilities": {
          "type": "array",
          "description": "Metric availability specifies the time grain (aggregation interval or\nfrequency).",
          "items": {
            "$ref": "#/definitions/MetricAvailability"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "MetricDefinitionCollection": {
      "type": "object",
      "description": "Represents collection of metric definitions.",
      "properties": {
        "value": {
          "type": "array",
          "description": "the values for the metric definitions.",
          "items": {
            "$ref": "#/definitions/MetricDefinition"
          },
          "x-ms-identifiers": []
        }
      },
      "required": [
        "value"
      ]
    },
    "MetricNamespace": {
      "type": "object",
      "description": "Metric namespace class specifies the metadata for a metric namespace.",
      "properties": {
        "description": {
          "type": "string",
          "description": "The namespace description."
        },
        "name": {
          "type": "string",
          "description": "The metric namespace name."
        }
      }
    },
    "MetricNamespaceCollection": {
      "type": "object",
      "description": "Represents collection of metric namespaces.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The values for the metric namespaces.",
          "items": {
            "$ref": "#/definitions/MetricNamespace"
          },
          "x-ms-identifiers": []
        }
      },
      "required": [
        "value"
      ]
    },
    "MetricRequestPayload": {
      "type": "object",
      "description": "Filters to fetch the set of metric",
      "properties": {
        "filters": {
          "type": "array",
          "description": "Get metrics for specific dimension values. Example: Metric contains dimension\nlike SamplerName, Error. To retrieve all the time series data where SamplerName\nis equals to HTTPRequest1 or HTTPRequest2, the DimensionFilter value will be\n{\"SamplerName\", [\"HTTPRequest1\", \"HTTPRequest2\"}",
          "items": {
            "$ref": "#/definitions/DimensionFilter"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "MetricUnit": {
      "type": "string",
      "description": "Metric unit",
      "enum": [
        "NotSpecified",
        "Percent",
        "Count",
        "Seconds",
        "Milliseconds",
        "Bytes",
        "BytesPerSecond",
        "CountPerSecond"
      ],
      "x-ms-enum": {
        "name": "MetricUnit",
        "modelAsString": true,
        "values": [
          {
            "name": "NotSpecified",
            "value": "NotSpecified",
            "description": "No unit specified"
          },
          {
            "name": "Percent",
            "value": "Percent",
            "description": "Percentage"
          },
          {
            "name": "Count",
            "value": "Count",
            "description": "Value count"
          },
          {
            "name": "Seconds",
            "value": "Seconds",
            "description": "Seconds"
          },
          {
            "name": "Milliseconds",
            "value": "Milliseconds",
            "description": "Milliseconds"
          },
          {
            "name": "Bytes",
            "value": "Bytes",
            "description": "Bytes"
          },
          {
            "name": "BytesPerSecond",
            "value": "BytesPerSecond",
            "description": "Bytes per second"
          },
          {
            "name": "CountPerSecond",
            "value": "CountPerSecond",
            "description": "Count per second"
          }
        ]
      }
    },
    "MetricValue": {
      "type": "object",
      "description": "Represents a metric value.",
      "properties": {
        "timestamp": {
          "type": "string",
          "description": "The timestamp for the metric value in ISO 8601 format."
        },
        "value": {
          "type": "number",
          "format": "double",
          "description": "The metric value."
        }
      }
    },
    "Metrics": {
      "type": "object",
      "description": "The response to a metrics query.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The TimeSeriesElement items on this page",
          "items": {
            "$ref": "#/definitions/TimeSeriesElement"
          },
          "x-ms-identifiers": []
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "NameAndDesc": {
      "type": "object",
      "description": "The name and description",
      "properties": {
        "description": {
          "type": "string",
          "description": "The description"
        },
        "name": {
          "type": "string",
          "description": "The name"
        }
      }
    },
    "Oauth2": {
      "type": "object",
      "description": "The Azure Active Directory OAuth2 Flow",
      "properties": {
        "type": {
          "type": "string",
          "description": "OAuth2 authentication",
          "enum": [
            "oauth2"
          ]
        },
        "flows": {
          "type": "array",
          "description": "Supported OAuth2 flows",
          "items": {}
        }
      },
      "required": [
        "type",
        "flows"
      ]
    },
    "OptionalLoadTestConfig": {
      "type": "object",
      "description": "Configuration for quick load test",
      "properties": {
        "endpointUrl": {
          "type": "string",
          "description": "Test URL. Provide the complete HTTP URL. For example, http://contoso-app.azurewebsites.net/login"
        },
        "rps": {
          "type": "integer",
          "format": "int32",
          "description": "Throughput required (requests per second)"
        },
        "maxResponseTime": {
          "type": "integer",
          "format": "int32",
          "description": "Maximum response time of the API/endpoint"
        },
        "virtualUsers": {
          "type": "integer",
          "format": "int32",
          "description": "No of concurrent virtual users"
        },
        "rampUpTime": {
          "type": "integer",
          "format": "int32",
          "description": "Ramp up time"
        },
        "duration": {
          "type": "integer",
          "format": "int32",
          "description": "Test run duration"
        }
      }
    },
    "PFAction": {
      "type": "string",
      "description": "Action to take on failure of pass/fail criteria.",
      "enum": [
        "continue",
        "stop"
      ],
      "x-ms-enum": {
        "name": "PFAction",
        "modelAsString": true,
        "values": [
          {
            "name": "continue",
            "value": "continue",
            "description": "Test will continue to run even if pass fail metric criteria metric gets failed"
          },
          {
            "name": "stop",
            "value": "stop",
            "description": "Test run will stop if pass fail criteria metric is not passed."
          }
        ]
      }
    },
    "PFAgFunc": {
      "type": "string",
      "description": "Aggregation functions for pass/fail criteria.",
      "enum": [
        "count",
        "percentage",
        "avg",
        "p50",
        "p90",
        "p95",
        "p99",
        "min",
        "max"
      ],
      "x-ms-enum": {
        "name": "PFAgFunc",
        "modelAsString": true,
        "values": [
          {
            "name": "count",
            "value": "count",
            "description": "Criteria applies for count value"
          },
          {
            "name": "percentage",
            "value": "percentage",
            "description": "Criteria applies for given percentage value"
          },
          {
            "name": "avg",
            "value": "avg",
            "description": "Criteria applies for avg value"
          },
          {
            "name": "p50",
            "value": "p50",
            "description": "Criteria applies for 50th percentile value"
          },
          {
            "name": "p90",
            "value": "p90",
            "description": "Criteria applies for 90th percentile value"
          },
          {
            "name": "p95",
            "value": "p95",
            "description": "Criteria applies for 95th percentile value"
          },
          {
            "name": "p99",
            "value": "p99",
            "description": "Criteria applies for 99th percentile value"
          },
          {
            "name": "min",
            "value": "min",
            "description": "Criteria applies for minimum value"
          },
          {
            "name": "max",
            "value": "max",
            "description": "Criteria applies for maximum value"
          }
        ]
      }
    },
    "PFMetrics": {
      "type": "string",
      "description": "Metrics for pass/fail criteria.",
      "enum": [
        "response_time_ms",
        "latency",
        "error",
        "requests",
        "requests_per_sec"
      ],
      "x-ms-enum": {
        "name": "PFMetrics",
        "modelAsString": true,
        "values": [
          {
            "name": "response_time_ms",
            "value": "response_time_ms",
            "description": "Pass fail criteria for response time metric"
          },
          {
            "name": "latency",
            "value": "latency",
            "description": "Pass fail criteria for response time metric"
          },
          {
            "name": "error",
            "value": "error",
            "description": "Pass fail criteria for error metric"
          },
          {
            "name": "requests",
            "value": "requests",
            "description": "Pass fail criteria for total requests"
          },
          {
            "name": "requests_per_sec",
            "value": "requests_per_sec",
            "description": "Pass fail criteria for request rate."
          }
        ]
      }
    },
    "PFResult": {
      "type": "string",
      "description": "Pass/fail criteria result.",
      "enum": [
        "passed",
        "undetermined",
        "failed"
      ],
      "x-ms-enum": {
        "name": "PFResult",
        "modelAsString": true,
        "values": [
          {
            "name": "passed",
            "value": "passed",
            "description": "Given pass fail criteria metric has passed."
          },
          {
            "name": "undetermined",
            "value": "undetermined",
            "description": "Given pass fail criteria metric couldn't determine."
          },
          {
            "name": "failed",
            "value": "failed",
            "description": "Given pass fail criteria metric has failed."
          }
        ]
      }
    },
    "PFTestResult": {
      "type": "string",
      "description": "Test result based on pass/fail criteria.",
      "enum": [
        "PASSED",
        "NOT_APPLICABLE",
        "FAILED"
      ],
      "x-ms-enum": {
        "name": "PFTestResult",
        "modelAsString": true,
        "values": [
          {
            "name": "PASSED",
            "value": "PASSED",
            "description": "Pass/fail criteria has passed."
          },
          {
            "name": "NOT_APPLICABLE",
            "value": "NOT_APPLICABLE",
            "description": "Pass/fail criteria is not applicable."
          },
          {
            "name": "FAILED",
            "value": "FAILED",
            "description": "Pass/fail criteria has failed."
          }
        ]
      }
    },
    "PassFailCriteria": {
      "type": "object",
      "description": "Pass fail criteria for a test.",
      "properties": {
        "passFailMetrics": {
          "type": "object",
          "description": "Map of id and pass fail metrics { id  : pass fail metrics }.",
          "additionalProperties": {
            "$ref": "#/definitions/PassFailMetric"
          }
        }
      }
    },
    "PassFailMetric": {
      "type": "object",
      "description": "Pass fail metric",
      "properties": {
        "clientMetric": {
          "$ref": "#/definitions/PFMetrics",
          "description": "The client metric on which the criteria should be applied."
        },
        "aggregate": {
          "$ref": "#/definitions/PFAgFunc",
          "description": "The aggregation function to be applied on the client metric. Allowed functions\n- ‘percentage’ - for error metric , ‘avg’, ‘p50’, ‘p90’, ‘p95’, ‘p99’, ‘min’,\n‘max’ - for response_time_ms and latency metric, ‘avg’ - for requests_per_sec,\n‘count’ - for requests"
        },
        "condition": {
          "type": "string",
          "description": "The comparison operator. Supported types ‘>’, ‘<’ "
        },
        "requestName": {
          "type": "string",
          "description": "Request name for which the Pass fail criteria has to be applied "
        },
        "value": {
          "type": "number",
          "format": "float",
          "description": "The value to compare with the client metric. Allowed values - ‘error : [0.0 ,\n100.0] unit- % ’, response_time_ms and latency : any integer value unit- ms."
        },
        "action": {
          "$ref": "#/definitions/PFAction",
          "description": "Action taken after the threshold is met. Default is ‘continue’."
        },
        "actualValue": {
          "type": "number",
          "format": "float",
          "description": "The actual value of the client metric for the test run.",
          "readOnly": true
        },
        "result": {
          "$ref": "#/definitions/PFResult",
          "description": "Outcome of the test run.",
          "readOnly": true
        }
      }
    },
    "ResourceMetric": {
      "type": "object",
      "description": "Associated metric definition for particular metrics of the azure resource (\nRefer :\nhttps://docs.microsoft.com/en-us/rest/api/monitor/metric-definitions/list#metricdefinition).",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique name for metric.",
          "readOnly": true
        },
        "resourceId": {
          "type": "string",
          "description": "Azure resource id."
        },
        "metricNamespace": {
          "type": "string",
          "description": "Metric name space."
        },
        "displayDescription": {
          "type": "string",
          "description": "Metric description."
        },
        "name": {
          "type": "string",
          "description": "The invariant value of metric name"
        },
        "aggregation": {
          "type": "string",
          "description": "Metric aggregation."
        },
        "unit": {
          "type": "string",
          "description": "Metric unit."
        },
        "resourceType": {
          "type": "string",
          "description": "Azure resource type."
        }
      },
      "required": [
        "resourceId",
        "metricNamespace",
        "name",
        "aggregation",
        "resourceType"
      ]
    },
    "Secret": {
      "type": "object",
      "description": "Secret",
      "properties": {
        "value": {
          "type": "string",
          "description": "The value of the secret for the respective type"
        },
        "type": {
          "$ref": "#/definitions/SecretType",
          "description": "Type of secret"
        }
      }
    },
    "SecretType": {
      "type": "string",
      "description": "Types of secrets supported.",
      "enum": [
        "AKV_SECRET_URI",
        "SECRET_VALUE"
      ],
      "x-ms-enum": {
        "name": "SecretType",
        "modelAsString": true,
        "values": [
          {
            "name": "AKV_SECRET_URI",
            "value": "AKV_SECRET_URI",
            "description": "If the secret is stored in an Azure Key Vault"
          },
          {
            "name": "SECRET_VALUE",
            "value": "SECRET_VALUE",
            "description": "If the Plain text secret value provided"
          }
        ]
      }
    },
    "Status": {
      "type": "string",
      "description": "Test run status",
      "enum": [
        "ACCEPTED",
        "NOTSTARTED",
        "PROVISIONING",
        "PROVISIONED",
        "CONFIGURING",
        "CONFIGURED",
        "EXECUTING",
        "EXECUTED",
        "DEPROVISIONING",
        "DEPROVISIONED",
        "DONE",
        "CANCELLING",
        "CANCELLED",
        "FAILED",
        "VALIDATION_SUCCESS",
        "VALIDATION_FAILURE"
      ],
      "x-ms-enum": {
        "name": "Status",
        "modelAsString": true,
        "values": [
          {
            "name": "ACCEPTED",
            "value": "ACCEPTED",
            "description": "Test run request is accepted"
          },
          {
            "name": "NOTSTARTED",
            "value": "NOTSTARTED",
            "description": "Test run is not yet started."
          },
          {
            "name": "PROVISIONING",
            "value": "PROVISIONING",
            "description": "Test run is getting provision"
          },
          {
            "name": "PROVISIONED",
            "value": "PROVISIONED",
            "description": "Test run is provisioned"
          },
          {
            "name": "CONFIGURING",
            "value": "CONFIGURING",
            "description": "Test run is getting configure"
          },
          {
            "name": "CONFIGURED",
            "value": "CONFIGURED",
            "description": "Test run configuration is done"
          },
          {
            "name": "EXECUTING",
            "value": "EXECUTING",
            "description": "Test run has started executing"
          },
          {
            "name": "EXECUTED",
            "value": "EXECUTED",
            "description": "Test run has been executed"
          },
          {
            "name": "DEPROVISIONING",
            "value": "DEPROVISIONING",
            "description": "Test run is getting deprovision"
          },
          {
            "name": "DEPROVISIONED",
            "value": "DEPROVISIONED",
            "description": "Test run request is deprovisioned"
          },
          {
            "name": "DONE",
            "value": "DONE",
            "description": "Test run request is finished"
          },
          {
            "name": "CANCELLING",
            "value": "CANCELLING",
            "description": "Test run request is getting cancelled"
          },
          {
            "name": "CANCELLED",
            "value": "CANCELLED",
            "description": "Test run request is cancelled"
          },
          {
            "name": "FAILED",
            "value": "FAILED",
            "description": "Test run request is failed"
          },
          {
            "name": "VALIDATION_SUCCESS",
            "value": "VALIDATION_SUCCESS",
            "description": "Test run JMX file is validated"
          },
          {
            "name": "VALIDATION_FAILURE",
            "value": "VALIDATION_FAILURE",
            "description": "Test run JMX file validation is failed"
          }
        ]
      }
    },
    "Test": {
      "type": "object",
      "description": "Load test model",
      "properties": {
        "passFailCriteria": {
          "$ref": "#/definitions/PassFailCriteria",
          "description": "Pass fail criteria for a test."
        },
        "secrets": {
          "type": "object",
          "description": "Secrets can be stored in an Azure Key Vault or any other secret store. If the\nsecret is stored in an Azure Key Vault, the value should be the secret\nidentifier and the type should be AKV_SECRET_URI. If the secret is stored\nelsewhere, the secret value should be provided directly and the type should be\nSECRET_VALUE.",
          "additionalProperties": {
            "$ref": "#/definitions/Secret"
          }
        },
        "certificate": {
          "$ref": "#/definitions/CertificateMetadata",
          "description": "Certificates metadata"
        },
        "environmentVariables": {
          "type": "object",
          "description": "Environment variables which are defined as a set of <name,value> pairs.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "loadTestConfiguration": {
          "$ref": "#/definitions/LoadTestConfiguration",
          "description": "The load test configuration."
        },
        "inputArtifacts": {
          "$ref": "#/definitions/TestInputArtifacts",
          "description": "The input artifacts for the test.",
          "readOnly": true
        },
        "testId": {
          "type": "string",
          "description": "Unique test name as identifier.",
          "minLength": 2,
          "maxLength": 50,
          "readOnly": true
        },
        "description": {
          "type": "string",
          "description": "The test description.",
          "maxLength": 100
        },
        "displayName": {
          "type": "string",
          "description": "Display name of a test.",
          "minLength": 2,
          "maxLength": 50
        },
        "subnetId": {
          "type": "string",
          "description": "Subnet ID on which the load test instances should run."
        },
        "keyvaultReferenceIdentityType": {
          "type": "string",
          "description": "Type of the managed identity referencing the Key vault."
        },
        "keyvaultReferenceIdentityId": {
          "type": "string",
          "description": "Resource Id of the managed identity referencing the Key vault."
        },
        "createdDateTime": {
          "type": "string",
          "format": "date-time",
          "description": "The creation datetime(ISO 8601 literal format).",
          "readOnly": true
        },
        "createdBy": {
          "type": "string",
          "description": "The user that created.",
          "readOnly": true
        },
        "lastModifiedDateTime": {
          "type": "string",
          "format": "date-time",
          "description": "The last Modified datetime(ISO 8601 literal format).",
          "readOnly": true
        },
        "lastModifiedBy": {
          "type": "string",
          "description": "The user that last modified.",
          "readOnly": true
        }
      },
      "required": [
        "testId"
      ]
    },
    "TestAppComponents": {
      "type": "object",
      "description": "Test app component",
      "properties": {
        "components": {
          "type": "object",
          "description": "Azure resource collection { resource id (fully qualified resource Id e.g\nsubscriptions/{subId}/resourceGroups/{rg}/providers/Microsoft.LoadTestService/loadtests/{resName})\n: resource object } ",
          "additionalProperties": {
            "$ref": "#/definitions/AppComponent"
          }
        },
        "testId": {
          "type": "string",
          "description": "Test identifier",
          "readOnly": true
        },
        "createdDateTime": {
          "type": "string",
          "format": "date-time",
          "description": "The creation datetime(ISO 8601 literal format).",
          "readOnly": true
        },
        "createdBy": {
          "type": "string",
          "description": "The user that created.",
          "readOnly": true
        },
        "lastModifiedDateTime": {
          "type": "string",
          "format": "date-time",
          "description": "The last Modified datetime(ISO 8601 literal format).",
          "readOnly": true
        },
        "lastModifiedBy": {
          "type": "string",
          "description": "The user that last modified.",
          "readOnly": true
        }
      },
      "required": [
        "components"
      ]
    },
    "TestAppComponentsUpdate": {
      "type": "object",
      "description": "Test app component",
      "properties": {
        "components": {
          "type": "object",
          "description": "Azure resource collection { resource id (fully qualified resource Id e.g\nsubscriptions/{subId}/resourceGroups/{rg}/providers/Microsoft.LoadTestService/loadtests/{resName})\n: resource object } ",
          "additionalProperties": {
            "$ref": "#/definitions/AppComponent"
          }
        }
      }
    },
    "TestFileInfo": {
      "type": "object",
      "description": "File info",
      "properties": {
        "fileName": {
          "type": "string",
          "description": "Name of the file."
        }
      },
      "required": [
        "fileName"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/FileInfo"
        }
      ]
    },
    "TestInputArtifacts": {
      "type": "object",
      "description": "The input artifacts for the test.",
      "properties": {
        "configFileInfo": {
          "$ref": "#/definitions/TestFileInfo",
          "description": "File info"
        },
        "testScriptFileInfo": {
          "$ref": "#/definitions/TestFileInfo",
          "description": "File info"
        },
        "userPropFileInfo": {
          "$ref": "#/definitions/TestFileInfo",
          "description": "File info"
        },
        "inputArtifactsZipFileInfo": {
          "$ref": "#/definitions/TestFileInfo",
          "description": "File info"
        },
        "additionalFileInfo": {
          "type": "array",
          "description": "Additional supported files for the test run",
          "items": {
            "$ref": "#/definitions/TestFileInfo"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        }
      }
    },
    "TestRun": {
      "type": "object",
      "description": "Load test run model",
      "properties": {
        "testRunId": {
          "type": "string",
          "description": "Unique test run name as identifier",
          "minLength": 2,
          "maxLength": 50,
          "readOnly": true
        },
        "passFailCriteria": {
          "$ref": "#/definitions/PassFailCriteria",
          "description": "Pass fail criteria for a test."
        },
        "secrets": {
          "type": "object",
          "description": "Secrets can be stored in an Azure Key Vault or any other secret store. If the\nsecret is stored in an Azure Key Vault, the value should be the secret\nidentifier and the type should be AKV_SECRET_URI. If the secret is stored\nelsewhere, the secret value should be provided directly and the type should be\nSECRET_VALUE.",
          "additionalProperties": {
            "$ref": "#/definitions/Secret"
          }
        },
        "certificate": {
          "$ref": "#/definitions/CertificateMetadata",
          "description": "Certificates metadata"
        },
        "environmentVariables": {
          "type": "object",
          "description": "Environment variables which are defined as a set of <name,value> pairs.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "errorDetails": {
          "type": "array",
          "description": "Error details if there is any failure in load test run",
          "items": {
            "$ref": "#/definitions/ErrorDetails"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        },
        "testRunStatistics": {
          "type": "object",
          "description": "Test run statistics.",
          "additionalProperties": {
            "$ref": "#/definitions/TestRunStatistics"
          },
          "readOnly": true
        },
        "loadTestConfiguration": {
          "$ref": "#/definitions/LoadTestConfiguration",
          "description": "The load test configuration."
        },
        "testArtifacts": {
          "$ref": "#/definitions/TestRunArtifacts",
          "description": "Collection of test run artifacts",
          "readOnly": true
        },
        "testResult": {
          "$ref": "#/definitions/PFTestResult",
          "description": "Test result for pass/Fail criteria used during the test run.",
          "readOnly": true
        },
        "virtualUsers": {
          "type": "integer",
          "format": "int32",
          "description": "Number of virtual users, for which test has been run.",
          "readOnly": true
        },
        "displayName": {
          "type": "string",
          "description": "Display name of a testRun.",
          "minLength": 2,
          "maxLength": 50
        },
        "testId": {
          "type": "string",
          "description": "Associated test Id.",
          "minLength": 2,
          "maxLength": 50
        },
        "description": {
          "type": "string",
          "description": "The test run description.",
          "maxLength": 100
        },
        "status": {
          "$ref": "#/definitions/Status",
          "description": "The test run status.",
          "readOnly": true
        },
        "startDateTime": {
          "type": "string",
          "format": "date-time",
          "description": "The test run start DateTime(ISO 8601 literal format).",
          "readOnly": true
        },
        "endDateTime": {
          "type": "string",
          "format": "date-time",
          "description": "The test run end DateTime(ISO 8601 literal format).",
          "readOnly": true
        },
        "executedDateTime": {
          "type": "string",
          "format": "date-time",
          "description": "Test run initiated time.",
          "readOnly": true
        },
        "portalUrl": {
          "type": "string",
          "description": "Portal url.",
          "readOnly": true
        },
        "duration": {
          "type": "integer",
          "format": "int32",
          "description": "Test run duration in milliseconds.",
          "readOnly": true
        },
        "subnetId": {
          "type": "string",
          "description": "Subnet ID on which the load test instances should run.",
          "readOnly": true
        },
        "createdDateTime": {
          "type": "string",
          "format": "date-time",
          "description": "The creation datetime(ISO 8601 literal format).",
          "readOnly": true
        },
        "createdBy": {
          "type": "string",
          "description": "The user that created.",
          "readOnly": true
        },
        "lastModifiedDateTime": {
          "type": "string",
          "format": "date-time",
          "description": "The last Modified datetime(ISO 8601 literal format).",
          "readOnly": true
        },
        "lastModifiedBy": {
          "type": "string",
          "description": "The user that last modified.",
          "readOnly": true
        }
      },
      "required": [
        "testRunId"
      ]
    },
    "TestRunAppComponents": {
      "type": "object",
      "description": "Test run app component",
      "properties": {
        "components": {
          "type": "object",
          "description": "Azure resource collection { resource id (fully qualified resource Id e.g\nsubscriptions/{subId}/resourceGroups/{rg}/providers/Microsoft.LoadTestService/loadtests/{resName})\n: resource object } ",
          "additionalProperties": {
            "$ref": "#/definitions/AppComponent"
          }
        },
        "testRunId": {
          "type": "string",
          "description": "Test run identifier",
          "readOnly": true
        },
        "createdDateTime": {
          "type": "string",
          "format": "date-time",
          "description": "The creation datetime(ISO 8601 literal format).",
          "readOnly": true
        },
        "createdBy": {
          "type": "string",
          "description": "The user that created.",
          "readOnly": true
        },
        "lastModifiedDateTime": {
          "type": "string",
          "format": "date-time",
          "description": "The last Modified datetime(ISO 8601 literal format).",
          "readOnly": true
        },
        "lastModifiedBy": {
          "type": "string",
          "description": "The user that last modified.",
          "readOnly": true
        }
      },
      "required": [
        "components"
      ]
    },
    "TestRunAppComponentsUpdate": {
      "type": "object",
      "description": "Test run app component",
      "properties": {
        "components": {
          "type": "object",
          "description": "Azure resource collection { resource id (fully qualified resource Id e.g\nsubscriptions/{subId}/resourceGroups/{rg}/providers/Microsoft.LoadTestService/loadtests/{resName})\n: resource object } ",
          "additionalProperties": {
            "$ref": "#/definitions/AppComponent"
          }
        }
      }
    },
    "TestRunArtifacts": {
      "type": "object",
      "description": "Collection of test run artifacts",
      "properties": {
        "inputArtifacts": {
          "$ref": "#/definitions/TestRunInputArtifacts",
          "description": "The input artifacts for the test run.",
          "readOnly": true
        },
        "outputArtifacts": {
          "$ref": "#/definitions/TestRunOutputArtifacts",
          "description": "The output artifacts for the test run."
        }
      }
    },
    "TestRunFileInfo": {
      "type": "object",
      "description": "File info",
      "properties": {
        "fileName": {
          "type": "string",
          "description": "Name of the file."
        }
      },
      "required": [
        "fileName"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/FileInfo"
        }
      ]
    },
    "TestRunInputArtifacts": {
      "type": "object",
      "description": "The input artifacts for the test run.",
      "properties": {
        "configFileInfo": {
          "$ref": "#/definitions/TestRunFileInfo",
          "description": "File info"
        },
        "testScriptFileInfo": {
          "$ref": "#/definitions/TestRunFileInfo",
          "description": "File info"
        },
        "userPropFileInfo": {
          "$ref": "#/definitions/TestRunFileInfo",
          "description": "File info"
        },
        "inputArtifactsZipFileInfo": {
          "$ref": "#/definitions/TestRunFileInfo",
          "description": "File info"
        },
        "additionalFileInfo": {
          "type": "array",
          "description": "Additional supported files for the test run",
          "items": {
            "$ref": "#/definitions/TestRunFileInfo"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        }
      }
    },
    "TestRunOutputArtifacts": {
      "type": "object",
      "description": "The output artifacts for the test run.",
      "properties": {
        "resultFileInfo": {
          "$ref": "#/definitions/TestRunFileInfo",
          "description": "File info"
        },
        "logsFileInfo": {
          "$ref": "#/definitions/TestRunFileInfo",
          "description": "File info"
        }
      }
    },
    "TestRunServerMetricConfig": {
      "type": "object",
      "description": "Test run server metrics configuration",
      "properties": {
        "testRunId": {
          "type": "string",
          "description": "Test run identifier",
          "readOnly": true
        },
        "metrics": {
          "type": "object",
          "description": "Azure resource metrics collection {metric id : metrics object} (Refer :\nhttps://docs.microsoft.com/en-us/rest/api/monitor/metric-definitions/list#metricdefinition\nfor metric id).",
          "additionalProperties": {
            "$ref": "#/definitions/ResourceMetric"
          }
        },
        "createdDateTime": {
          "type": "string",
          "format": "date-time",
          "description": "The creation datetime(ISO 8601 literal format).",
          "readOnly": true
        },
        "createdBy": {
          "type": "string",
          "description": "The user that created.",
          "readOnly": true
        },
        "lastModifiedDateTime": {
          "type": "string",
          "format": "date-time",
          "description": "The last Modified datetime(ISO 8601 literal format).",
          "readOnly": true
        },
        "lastModifiedBy": {
          "type": "string",
          "description": "The user that last modified.",
          "readOnly": true
        }
      }
    },
    "TestRunStatistics": {
      "type": "object",
      "description": "Test run statistics.",
      "properties": {
        "transaction": {
          "type": "string",
          "description": "Transaction name.",
          "readOnly": true
        },
        "sampleCount": {
          "type": "number",
          "format": "float",
          "description": "Sampler count.",
          "readOnly": true
        },
        "errorCount": {
          "type": "number",
          "format": "float",
          "description": "Error count.",
          "readOnly": true
        },
        "errorPct": {
          "type": "number",
          "format": "float",
          "description": "Error percentage.",
          "readOnly": true
        },
        "meanResTime": {
          "type": "number",
          "format": "float",
          "description": "Mean response time.",
          "readOnly": true
        },
        "medianResTime": {
          "type": "number",
          "format": "float",
          "description": "Median response time.",
          "readOnly": true
        },
        "maxResTime": {
          "type": "number",
          "format": "float",
          "description": "Max response time.",
          "readOnly": true
        },
        "minResTime": {
          "type": "number",
          "format": "float",
          "description": "Minimum response time.",
          "readOnly": true
        },
        "pct1ResTime": {
          "type": "number",
          "format": "float",
          "description": "90 percentile response time.",
          "readOnly": true
        },
        "pct2ResTime": {
          "type": "number",
          "format": "float",
          "description": "95 percentile response time.",
          "readOnly": true
        },
        "pct3ResTime": {
          "type": "number",
          "format": "float",
          "description": "99 percentile response time.",
          "readOnly": true
        },
        "throughput": {
          "type": "number",
          "format": "float",
          "description": "Throughput.",
          "readOnly": true
        },
        "receivedKBytesPerSec": {
          "type": "number",
          "format": "float",
          "description": "Received network bytes.",
          "readOnly": true
        },
        "sentKBytesPerSec": {
          "type": "number",
          "format": "float",
          "description": "Send network bytes.",
          "readOnly": true
        }
      }
    },
    "TestRunUpdate": {
      "type": "object",
      "description": "Load test run model",
      "properties": {
        "passFailCriteria": {
          "$ref": "#/definitions/PassFailCriteria",
          "description": "Pass fail criteria for a test."
        },
        "secrets": {
          "type": "object",
          "description": "Secrets can be stored in an Azure Key Vault or any other secret store. If the\nsecret is stored in an Azure Key Vault, the value should be the secret\nidentifier and the type should be AKV_SECRET_URI. If the secret is stored\nelsewhere, the secret value should be provided directly and the type should be\nSECRET_VALUE.",
          "additionalProperties": {
            "$ref": "#/definitions/Secret"
          }
        },
        "certificate": {
          "$ref": "#/definitions/CertificateMetadata",
          "description": "Certificates metadata"
        },
        "environmentVariables": {
          "type": "object",
          "description": "Environment variables which are defined as a set of <name,value> pairs.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "loadTestConfiguration": {
          "$ref": "#/definitions/LoadTestConfiguration",
          "description": "The load test configuration."
        },
        "displayName": {
          "type": "string",
          "description": "Display name of a testRun.",
          "minLength": 2,
          "maxLength": 50
        },
        "testId": {
          "type": "string",
          "description": "Associated test Id.",
          "minLength": 2,
          "maxLength": 50
        },
        "description": {
          "type": "string",
          "description": "The test run description.",
          "maxLength": 100
        }
      }
    },
    "TestRunsList": {
      "type": "object",
      "description": "Collection of test runs",
      "properties": {
        "value": {
          "type": "array",
          "description": "The TestRun items on this page",
          "items": {
            "$ref": "#/definitions/TestRun"
          },
          "x-ms-identifiers": []
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "TestServerMetricConfig": {
      "type": "object",
      "description": "Test server metrics configuration",
      "properties": {
        "testId": {
          "type": "string",
          "description": "Test identifier",
          "readOnly": true
        },
        "metrics": {
          "type": "object",
          "description": "Azure resource metrics collection {metric id : metrics object} (Refer :\nhttps://docs.microsoft.com/en-us/rest/api/monitor/metric-definitions/list#metricdefinition\nfor metric id).",
          "additionalProperties": {
            "$ref": "#/definitions/ResourceMetric"
          }
        },
        "createdDateTime": {
          "type": "string",
          "format": "date-time",
          "description": "The creation datetime(ISO 8601 literal format).",
          "readOnly": true
        },
        "createdBy": {
          "type": "string",
          "description": "The user that created.",
          "readOnly": true
        },
        "lastModifiedDateTime": {
          "type": "string",
          "format": "date-time",
          "description": "The last Modified datetime(ISO 8601 literal format).",
          "readOnly": true
        },
        "lastModifiedBy": {
          "type": "string",
          "description": "The user that last modified.",
          "readOnly": true
        }
      }
    },
    "TestUpdate": {
      "type": "object",
      "description": "Load test model",
      "properties": {
        "passFailCriteria": {
          "$ref": "#/definitions/PassFailCriteria",
          "description": "Pass fail criteria for a test."
        },
        "secrets": {
          "type": "object",
          "description": "Secrets can be stored in an Azure Key Vault or any other secret store. If the\nsecret is stored in an Azure Key Vault, the value should be the secret\nidentifier and the type should be AKV_SECRET_URI. If the secret is stored\nelsewhere, the secret value should be provided directly and the type should be\nSECRET_VALUE.",
          "additionalProperties": {
            "$ref": "#/definitions/Secret"
          }
        },
        "certificate": {
          "$ref": "#/definitions/CertificateMetadata",
          "description": "Certificates metadata"
        },
        "environmentVariables": {
          "type": "object",
          "description": "Environment variables which are defined as a set of <name,value> pairs.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "loadTestConfiguration": {
          "$ref": "#/definitions/LoadTestConfiguration",
          "description": "The load test configuration."
        },
        "description": {
          "type": "string",
          "description": "The test description.",
          "maxLength": 100
        },
        "displayName": {
          "type": "string",
          "description": "Display name of a test.",
          "minLength": 2,
          "maxLength": 50
        },
        "subnetId": {
          "type": "string",
          "description": "Subnet ID on which the load test instances should run."
        },
        "keyvaultReferenceIdentityType": {
          "type": "string",
          "description": "Type of the managed identity referencing the Key vault."
        },
        "keyvaultReferenceIdentityId": {
          "type": "string",
          "description": "Resource Id of the managed identity referencing the Key vault."
        }
      }
    },
    "TestsList": {
      "type": "object",
      "description": "Collection of tests",
      "properties": {
        "value": {
          "type": "array",
          "description": "The Test items on this page",
          "items": {
            "$ref": "#/definitions/Test"
          },
          "x-ms-identifiers": []
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "TimeGrain": {
      "type": "string",
      "description": "Time Grain",
      "enum": [
        "PT5S",
        "PT10S",
        "PT1M",
        "PT5M",
        "PT1H"
      ],
      "x-ms-enum": {
        "name": "TimeGrain",
        "modelAsString": true,
        "values": [
          {
            "name": "PT5S",
            "value": "PT5S",
            "description": "5 seconds, available only if test run duration is less than 10 minutes"
          },
          {
            "name": "PT10S",
            "value": "PT10S",
            "description": "10 seconds, available only if test run duration is less than 10 minutes"
          },
          {
            "name": "PT1M",
            "value": "PT1M",
            "description": "1 minute"
          },
          {
            "name": "PT5M",
            "value": "PT5M",
            "description": "5 minutes, available only if test run duration is greater than 1 minute"
          },
          {
            "name": "PT1H",
            "value": "PT1H",
            "description": "1 hour, available only if test run duration is greater than 1 minute"
          }
        ]
      }
    },
    "TimeSeriesElement": {
      "type": "object",
      "description": "The time series returned when a data query is performed.",
      "properties": {
        "data": {
          "type": "array",
          "description": "An array of data points representing the metric values.",
          "items": {
            "$ref": "#/definitions/MetricValue"
          },
          "x-ms-identifiers": []
        },
        "dimensionValues": {
          "type": "array",
          "description": "The dimension values ",
          "items": {
            "$ref": "#/definitions/DimensionValue"
          },
          "x-ms-identifiers": []
        }
      }
    }
  },
  "parameters": {
    "Azure.Core.Foundations.ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "description": "The API version to use for this operation.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "x-ms-parameter-location": "method",
      "x-ms-client-name": "apiVersion"
    },
    "MetricDimensions.interval": {
      "name": "interval",
      "in": "query",
      "description": "The interval (i.e. timegrain) of the query.",
      "required": false,
      "type": "string",
      "enum": [
        "PT5S",
        "PT10S",
        "PT1M",
        "PT5M",
        "PT1H"
      ],
      "x-ms-enum": {
        "name": "Interval",
        "modelAsString": true,
        "values": [
          {
            "name": "PT5S",
            "value": "PT5S",
            "description": "5 seconds, available only if test run duration is less than 10 minutes"
          },
          {
            "name": "PT10S",
            "value": "PT10S",
            "description": "10 seconds, available only if test run duration is less than 10 minutes"
          },
          {
            "name": "PT1M",
            "value": "PT1M",
            "description": "1 minute"
          },
          {
            "name": "PT5M",
            "value": "PT5M",
            "description": "5 minutes, available only if test run duration is greater than 1 minute"
          },
          {
            "name": "PT1H",
            "value": "PT1H",
            "description": "1 hour, available only if test run duration is greater than 1 minute"
          }
        ]
      },
      "x-ms-parameter-location": "method"
    },
    "MetricDimensions.metricName": {
      "name": "metricName",
      "in": "query",
      "description": "Metric name",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "MetricDimensions.metricNamespace": {
      "name": "metricNamespace",
      "in": "query",
      "description": "Metric namespace to query metric definitions for.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "MetricDimensions.timespan": {
      "name": "timespan",
      "in": "query",
      "description": "The timespan of the query. It is a string with the following format 'startDateTime_ISO/endDateTime_ISO'.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    }
  }
}
