{
  "swagger": "2.0",
  "info": {
    "title": "Azure Load Testing",
    "description": "These APIs allow end users to create, view and run load tests using Azure Load Test Service.",
    "version": "2022-06-01-preview"
  },
  "host": "{dataPlaneURL}",
  "schemes": [
    "https"
  ],
  "paths": {
    "/appcomponents/{name}": {
      "patch": {
        "tags": [
          "AppComponent"
        ],
        "summary": "Associate app component (an azure resource model) to a test model or test run",
        "operationId": "AppComponent_CreateOrUpdateAppComponents",
        "consumes": [
          "application/merge-patch+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "description": "Unique identifier for app component name, must be a valid URL character ^[a-z0-9_-]*$",
            "required": true,
            "type": "string",
            "maxLength": 50,
            "minLength": 2,
            "pattern": "^[a-z0-9_-]*$"
          },
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "in": "body",
            "name": "body",
            "description": "App component model",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AppComponentsMap"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The app component were updated",
            "schema": {
              "$ref": "#/definitions/AppComponentsMap"
            }
          },
          "201": {
            "description": "The app component were created",
            "schema": {
              "$ref": "#/definitions/AppComponentsMap"
            }
          },
          "default": {
            "description": "Load Test Service error response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponseBody"
            },
            "headers": {
              "x-ms-error-code": {
                "description": "The error code for specific error that occurred.",
                "type": "string"
              }
            }
          }
        },
        "x-ms-examples": {
          "CreateOrUpdateAppComponents": {
            "$ref": "./examples/CreateOrUpdateAppComponents.json"
          }
        }
      },
      "delete": {
        "tags": [
          "AppComponent"
        ],
        "summary": "Delete app component",
        "operationId": "AppComponent_DeleteAppComponent",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "description": "Unique identifier for app component name, must be a valid URL character ^[a-z0-9_-]*$",
            "required": true,
            "type": "string",
            "maxLength": 50,
            "minLength": 2,
            "pattern": "^[a-z0-9_-]*$"
          },
          {
            "$ref": "#/parameters/ApiVersion"
          }
        ],
        "responses": {
          "204": {
            "description": "The app component is deleted"
          },
          "default": {
            "description": "Load Test Service error response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponseBody"
            },
            "headers": {
              "x-ms-error-code": {
                "description": "The error code for specific error that occurred.",
                "type": "string"
              }
            }
          }
        },
        "x-ms-examples": {
          "DeleteAppComponent": {
            "$ref": "./examples/DeleteAppComponent.json"
          }
        }
      },
      "get": {
        "tags": [
          "AppComponent"
        ],
        "summary": "Get App components for a given appComponentName in query param.",
        "operationId": "AppComponent_GetAppComponentByName",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "description": "Unique identifier for app component name, must be a valid URL character ^[a-z0-9_-]*$",
            "required": true,
            "type": "string",
            "maxLength": 50,
            "minLength": 2,
            "pattern": "^[a-z0-9_-]*$"
          },
          {
            "$ref": "#/parameters/ApiVersion"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested app components",
            "schema": {
              "$ref": "#/definitions/AppComponentsMap"
            }
          },
          "default": {
            "description": "Load Test Service error response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponseBody"
            },
            "headers": {
              "x-ms-error-code": {
                "description": "The error code for specific error that occurred.",
                "type": "string"
              }
            }
          }
        },
        "x-ms-examples": {
          "GetAppComponentByName": {
            "$ref": "./examples/GetAppComponentByName.json"
          }
        }
      }
    },
    "/appcomponents": {
      "get": {
        "tags": [
          "AppComponent"
        ],
        "summary": "Get App components for a test model or a test run of given name in query param.",
        "operationId": "AppComponent_GetAppComponent",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "testRunId",
            "description": "Required testRunId, if testId is not provided",
            "type": "string",
            "maxLength": 50,
            "minLength": 2,
            "pattern": "^[a-z0-9_-]*$"
          },
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "in": "query",
            "name": "testId",
            "$ref": "#/parameters/TestId"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested app components",
            "schema": {
              "$ref": "#/definitions/AppComponentsMap"
            }
          },
          "default": {
            "description": "Load Test Service error response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponseBody"
            },
            "headers": {
              "x-ms-error-code": {
                "description": "The error code for specific error that occurred.",
                "type": "string"
              }
            }
          }
        },
        "x-ms-examples": {
          "GetAppComponent": {
            "$ref": "./examples/GetAppComponent.json"
          }
        }
      }
    },
    "/serverMetricsConfig/{name}": {
      "patch": {
        "tags": [
          "ServerMetrics"
        ],
        "summary": "Associate server metrics config to a test model or test run",
        "operationId": "ServerMetrics_CreateOrUpdateServerMetricsConfig",
        "consumes": [
          "application/merge-patch+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "description": "Unique identifier for server metric name, must be a valid URL character ^[a-z0-9_-]*$",
            "required": true,
            "type": "string",
            "maxLength": 50,
            "minLength": 2,
            "pattern": "^[a-z0-9_-]*$"
          },
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Server metrics config model",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ServerMetricsModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The server metrics were updated",
            "schema": {
              "$ref": "#/definitions/ServerMetricsModel"
            }
          },
          "201": {
            "description": "The server metrics were created",
            "schema": {
              "$ref": "#/definitions/ServerMetricsModel"
            }
          },
          "default": {
            "description": "Load Test Service error response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponseBody"
            },
            "headers": {
              "x-ms-error-code": {
                "description": "The error code for specific error that occurred.",
                "type": "string"
              }
            }
          }
        },
        "x-ms-examples": {
          "CreateOrUpdateServerMetricsConfig": {
            "$ref": "./examples/CreateOrUpdateServerMetricsConfig.json"
          }
        }
      },
      "get": {
        "tags": [
          "ServerMetrics"
        ],
        "summary": "Get server metrics config for a given name in query param.",
        "operationId": "ServerMetrics_GetServerMetricsByName",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "description": "Unique identifier for server metric name, must be a valid URL character ^[a-z0-9_-]*$",
            "required": true,
            "type": "string",
            "maxLength": 50,
            "minLength": 2,
            "pattern": "^[a-z0-9_-]*$"
          },
          {
            "$ref": "#/parameters/ApiVersion"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested server metrics",
            "schema": {
              "$ref": "#/definitions/ServerMetricsModel"
            }
          },
          "default": {
            "description": "Load Test Service error response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponseBody"
            },
            "headers": {
              "x-ms-error-code": {
                "description": "The error code for specific error that occurred.",
                "type": "string"
              }
            }
          }
        },
        "x-ms-examples": {
          "GetServerMetricsByName": {
            "$ref": "./examples/GetServerMetricsByName.json"
          }
        }
      },
      "delete": {
        "tags": [
          "ServerMetrics"
        ],
        "summary": "Delete server metrics config by given name",
        "operationId": "ServerMetrics_DeleteServerMetrics",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "description": "Unique identifier for server metric name, must be a valid URL character ^[a-z0-9_-]*$",
            "required": true,
            "type": "string",
            "maxLength": 50,
            "minLength": 2,
            "pattern": "^[a-z0-9_-]*$"
          },
          {
            "$ref": "#/parameters/ApiVersion"
          }
        ],
        "responses": {
          "204": {
            "description": "The server metrics config is deleted"
          },
          "default": {
            "description": "Load Test Service error response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponseBody"
            },
            "headers": {
              "x-ms-error-code": {
                "description": "The error code for specific error that occurred.",
                "type": "string"
              }
            }
          }
        },
        "x-ms-examples": {
          "DeleteServerMetrics": {
            "$ref": "./examples/DeleteServerMetrics.json"
          }
        }
      }
    },
    "/serverMetricsConfig": {
      "get": {
        "tags": [
          "ServerMetrics"
        ],
        "summary": "Get server metrics config for a test model or test run of given name in query param.",
        "operationId": "ServerMetrics_GetServerMetrics",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "testRunId",
            "description": "Required testRunId, if testId is not provided",
            "type": "string",
            "maxLength": 50,
            "minLength": 2,
            "pattern": "^[a-z0-9_-]*$"
          },
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "in": "query",
            "name": "testId",
            "$ref": "#/parameters/TestId"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested server metrics",
            "schema": {
              "$ref": "#/definitions/ServerMetricsModel"
            }
          },
          "default": {
            "description": "Load Test Service error response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponseBody"
            },
            "headers": {
              "x-ms-error-code": {
                "description": "The error code for specific error that occurred.",
                "type": "string"
              }
            }
          }
        },
        "x-ms-examples": {
          "GetServerMetrics": {
            "$ref": "./examples/GetServerMetrics.json"
          }
        }
      }
    },
    "/serverMetricsConfig/default": {
      "get": {
        "tags": [
          "ServerMetrics"
        ],
        "summary": "Get all default server metrics config with supported resource type",
        "operationId": "ServerMetrics_GetServerDefaultMetrics",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersion"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested server default metrics",
            "schema": {
              "$ref": "#/definitions/DefaultServerMetricsConfigListModel"
            }
          },
          "default": {
            "description": "Load Test Service error response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponseBody"
            },
            "headers": {
              "x-ms-error-code": {
                "description": "The error code for specific error that occurred.",
                "type": "string"
              }
            }
          }
        },
        "x-ms-examples": {
          "GetServerDefaultMetrics": {
            "$ref": "./examples/GetServerDefaultMetrics.json"
          }
        }
      }
    },
    "/serverMetricsConfig/supportedResourceTypes": {
      "get": {
        "tags": [
          "ServerMetrics"
        ],
        "summary": "Get all supported resource types for app components(azure resource types)",
        "operationId": "ServerMetrics_ListSupportedResourceType",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersion"
          }
        ],
        "responses": {
          "200": {
            "description": "The supported resource types and metrics for server side metrics",
            "schema": {
              "$ref": "#/definitions/SupportedResourceType"
            }
          },
          "default": {
            "description": "Load Test Service error response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponseBody"
            },
            "headers": {
              "x-ms-error-code": {
                "description": "The error code for specific error that occurred.",
                "type": "string"
              }
            }
          }
        },
        "x-ms-examples": {
          "ListSupportedResourceType": {
            "$ref": "./examples/ListSupportedResourceType.json"
          }
        }
      }
    },
    "/loadtests/{testId}": {
      "patch": {
        "tags": [
          "Test"
        ],
        "summary": "Creates/Updates a new load test. Test name must be a valid URL character ^[a-z0-9_-]*$",
        "operationId": "Test_CreateOrUpdateTest",
        "consumes": [
          "application/merge-patch+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "in": "path",
            "name": "testId",
            "required": true,
            "$ref": "#/parameters/TestId"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Load test model",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TestModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The loadtest was updated",
            "schema": {
              "$ref": "#/definitions/TestModel"
            }
          },
          "201": {
            "description": "The loadtest was created",
            "schema": {
              "$ref": "#/definitions/TestModel"
            }
          },
          "default": {
            "description": "Load Test Service error response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponseBody"
            },
            "headers": {
              "x-ms-error-code": {
                "description": "The error code for specific error that occurred.",
                "type": "string"
              }
            }
          }
        },
        "x-ms-examples": {
          "CreateOrUpdateTest": {
            "$ref": "./examples/CreateOrUpdateTest.json"
          }
        }
      },
      "delete": {
        "tags": [
          "Test"
        ],
        "summary": "Delete a test with given name. Test name must be a valid URL character ^[a-z0-9_-]*$",
        "operationId": "Test_DeleteLoadTest",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "in": "path",
            "name": "testId",
            "required": true,
            "$ref": "#/parameters/TestId"
          }
        ],
        "responses": {
          "204": {
            "description": "The test is deleted"
          },
          "default": {
            "description": "Load Test Service error response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponseBody"
            },
            "headers": {
              "x-ms-error-code": {
                "description": "The error code for specific error that occurred.",
                "type": "string"
              }
            }
          }
        },
        "x-ms-examples": {
          "DeleteLoadTest": {
            "$ref": "./examples/DeleteLoadTest.json"
          }
        }
      },
      "get": {
        "tags": [
          "Test"
        ],
        "summary": "Get load test model of given test name",
        "operationId": "Test_GetLoadTest",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "in": "path",
            "name": "testId",
            "required": true,
            "$ref": "#/parameters/TestId"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested load test",
            "schema": {
              "$ref": "#/definitions/TestModel"
            }
          },
          "default": {
            "description": "Load Test Service error response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponseBody"
            },
            "headers": {
              "x-ms-error-code": {
                "description": "The error code for specific error that occurred.",
                "type": "string"
              }
            }
          }
        },
        "x-ms-examples": {
          "GetLoadTest": {
            "$ref": "./examples/GetLoadTest.json"
          }
        }
      }
    },
    "/loadtests/sortAndFilter": {
      "get": {
        "tags": [
          "Test"
        ],
        "summary": "Get all load tests for a given Fully qualified resource Id e.g subscriptions/{subId}/resourceGroups/{rg}/providers/Microsoft.LoadTestService/loadtests/{resName}",
        "operationId": "Test_ListLoadTestSearch",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "orderBy",
            "description": "Sort on one of the field - lastModifiedDateTime, displayName, createdBy in (field asc/desc) format. eg: displayName asc",
            "type": "string"
          },
          {
            "in": "query",
            "name": "search",
            "description": "Filter search based on searchable fields- testId, createdBy.",
            "type": "string"
          },
          {
            "in": "query",
            "name": "lastUpdatedStartTime",
            "description": "Start DateTime(Iso8601Literal format) of the last updated time range to filter tests.",
            "type": "string",
            "format": "date-time"
          },
          {
            "in": "query",
            "name": "lastUpdatedEndTime",
            "description": "End DateTime(Iso8601Literal format) of the last updated time range to filter tests.",
            "type": "string",
            "format": "date-time"
          },
          {
            "in": "query",
            "name": "continuationToken",
            "description": "Continuation token to get then next page of response",
            "type": "string"
          },
          {
            "in": "query",
            "name": "maxPageSize",
            "description": "No of results in response",
            "type": "integer",
            "format": "int32",
            "default": 50
          },
          {
            "$ref": "#/parameters/ApiVersion"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested loadtests",
            "schema": {
              "$ref": "#/definitions/TestModelResourceList"
            }
          },
          "default": {
            "description": "Load Test Service error response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponseBody"
            },
            "headers": {
              "x-ms-error-code": {
                "description": "The error code for specific error that occurred.",
                "type": "string"
              }
            }
          }
        },
        "x-ms-examples": {
          "ListLoadTestSearch": {
            "$ref": "./examples/ListLoadTestSearch.json"
          }
        }
      }
    },
    "/loadtests/{testId}/files/{fileId}": {
      "put": {
        "tags": [
          "Test"
        ],
        "summary": "Upload input file for a given test name. File name must be a valid URL character ^[a-z0-9_-]*$. File size can't be more than 50 MB. Existing file with same name for the given test will be overwritten.",
        "operationId": "Test_UploadTestFile",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "fileId",
            "description": "Unique identifier for test file, must be a valid URL character ^[a-z0-9_-]*$",
            "required": true,
            "type": "string",
            "maxLength": 50,
            "minLength": 2,
            "pattern": "^[a-z0-9_-]*$"
          },
          {
            "in": "query",
            "name": "fileType",
            "type": "integer",
            "format": "int32"
          },
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "in": "path",
            "name": "testId",
            "required": true,
            "$ref": "#/parameters/TestId"
          },
          {
            "in": "formData",
            "name": "file",
            "required": true,
            "type": "file"
          }
        ],
        "responses": {
          "201": {
            "description": "The test artifact was uploaded",
            "schema": {
              "$ref": "#/definitions/TestModel"
            }
          },
          "default": {
            "description": "Load Test Service error response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponseBody"
            },
            "headers": {
              "x-ms-error-code": {
                "description": "The error code for specific error that occurred.",
                "type": "string"
              }
            }
          }
        },
        "x-ms-examples": {
          "UploadTestFile": {
            "$ref": "./examples/UploadTestFile.json"
          }
        }
      },
      "get": {
        "tags": [
          "Test"
        ],
        "summary": "Get test file with given file name.",
        "operationId": "Test_GetTestFile",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "fileId",
            "description": "Unique identifier for test file, must be a valid URL character ^[a-z0-9_-]*$",
            "required": true,
            "type": "string",
            "maxLength": 50,
            "minLength": 2,
            "pattern": "^[a-z0-9_-]*$"
          },
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "in": "path",
            "name": "testId",
            "required": true,
            "$ref": "#/parameters/TestId"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested test file url",
            "schema": {
              "$ref": "#/definitions/FileUrlPath"
            }
          },
          "default": {
            "description": "Load Test Service error response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponseBody"
            },
            "headers": {
              "x-ms-error-code": {
                "description": "The error code for specific error that occurred.",
                "type": "string"
              }
            }
          }
        },
        "x-ms-examples": {
          "GetTestFile": {
            "$ref": "./examples/GetTestFile.json"
          }
        }
      },
      "delete": {
        "tags": [
          "Test"
        ],
        "summary": "Delete file of given file name for a test. File name must be a valid URL character ^[a-z0-9_-]*$",
        "operationId": "Test_DeleteTestFile",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "fileId",
            "description": "Unique identifier for test file, must be a valid URL character ^[a-z0-9_-]*$",
            "required": true,
            "type": "string",
            "maxLength": 50,
            "minLength": 2,
            "pattern": "^[a-z0-9_-]*$"
          },
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "in": "path",
            "name": "testId",
            "required": true,
            "$ref": "#/parameters/TestId"
          }
        ],
        "responses": {
          "204": {
            "description": "The requested artifact is deleted"
          },
          "default": {
            "description": "Load Test Service error response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponseBody"
            },
            "headers": {
              "x-ms-error-code": {
                "description": "The error code for specific error that occurred.",
                "type": "string"
              }
            }
          }
        },
        "x-ms-examples": {
          "DeleteTestFile": {
            "$ref": "./examples/DeleteTestFile.json"
          }
        }
      }
    },
    "/loadtests/{testId}/files": {
      "get": {
        "tags": [
          "Test"
        ],
        "summary": "Get all test files.",
        "operationId": "Test_GetAllTestFiles",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "in": "path",
            "name": "testId",
            "required": true,
            "$ref": "#/parameters/TestId"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested test files urls",
            "schema": {
              "$ref": "#/definitions/FileUrlList"
            }
          },
          "default": {
            "description": "Load Test Service error response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponseBody"
            },
            "headers": {
              "x-ms-error-code": {
                "description": "The error code for specific error that occurred.",
                "type": "string"
              }
            }
          }
        },
        "x-ms-examples": {
          "GetAllTestFiles": {
            "$ref": "./examples/GetAllTestFiles.json"
          }
        }
      }
    },
    "/testruns/{testRunId}": {
      "delete": {
        "tags": [
          "TestRun"
        ],
        "summary": "Delete a test run with given name. Test run name must be a valid URL character ^[a-z0-9_-]*$",
        "operationId": "TestRun_DeleteTestRun",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "testRunId",
            "description": "Unique identifier for load test run name, must be a valid URL character ^[a-z0-9_-]*$",
            "required": true,
            "type": "string",
            "maxLength": 50,
            "minLength": 2,
            "pattern": "^[a-z0-9_-]*$"
          },
          {
            "$ref": "#/parameters/ApiVersion"
          }
        ],
        "responses": {
          "204": {
            "description": "The test run is deleted"
          },
          "default": {
            "description": "Load Test Service error response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponseBody"
            },
            "headers": {
              "x-ms-error-code": {
                "description": "The error code for specific error that occurred.",
                "type": "string"
              }
            }
          }
        },
        "x-ms-examples": {
          "DeleteTestRun": {
            "$ref": "./examples/DeleteTestRun.json"
          }
        }
      },
      "patch": {
        "tags": [
          "TestRun"
        ],
        "summary": "Create and start new test run of the given name, test run name must be a valid URL character ^[a-z0-9_-]*$",
        "operationId": "TestRun_CreateAndUpdateTest",
        "consumes": [
          "application/merge-patch+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "testRunId",
            "description": "Unique identifier for load test run name, must be a valid URL character ^[a-z0-9_-]*$",
            "required": true,
            "type": "string",
            "maxLength": 50,
            "minLength": 2,
            "pattern": "^[a-z0-9_-]*$"
          },
          {
            "in": "query",
            "name": "oldTestRunId",
            "description": "Existing testRunId to re run new test",
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Load test run model",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TestRunModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The test run is updated",
            "schema": {
              "$ref": "#/definitions/TestRunModel"
            }
          },
          "default": {
            "description": "Load Test Service error response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponseBody"
            },
            "headers": {
              "x-ms-error-code": {
                "description": "The error code for specific error that occurred.",
                "type": "string"
              }
            }
          }
        },
        "x-ms-examples": {
          "CreateAndUpdateTestRun": {
            "$ref": "./examples/CreateAndUpdateTestRun.json"
          }
        }
      },
      "get": {
        "tags": [
          "TestRun"
        ],
        "summary": "Get test run of given name.",
        "operationId": "TestRun_GetTestRun",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "testRunId",
            "description": "Unique identifier for load test run name, must be a valid URL character ^[a-z0-9_-]*$",
            "required": true,
            "type": "string",
            "maxLength": 50,
            "minLength": 2,
            "pattern": "^[a-z0-9_-]*$"
          },
          {
            "$ref": "#/parameters/ApiVersion"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested test run",
            "schema": {
              "$ref": "#/definitions/TestRunModel"
            }
          },
          "default": {
            "description": "Load Test Service error response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponseBody"
            },
            "headers": {
              "x-ms-error-code": {
                "description": "The error code for specific error that occurred.",
                "type": "string"
              }
            }
          }
        },
        "x-ms-examples": {
          "GetTestRun": {
            "$ref": "./examples/GetTestRun.json"
          }
        }
      }
    },
    "/testruns/{testRunId}/files/{fileId}": {
      "get": {
        "tags": [
          "TestRun"
        ],
        "summary": "Get testrun file with given file name.",
        "operationId": "TestRun_GetTestRunFile",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "testRunId",
            "description": "Unique identifier for load test run name, must be a valid URL character ^[a-z0-9_-]*$",
            "required": true,
            "type": "string",
            "maxLength": 50,
            "minLength": 2,
            "pattern": "^[a-z0-9_-]*$"
          },
          {
            "in": "path",
            "name": "fileId",
            "description": "Unique identifier for test run file, must be a valid URL character ^[a-z0-9_-]*$",
            "required": true,
            "type": "string",
            "maxLength": 50,
            "minLength": 2,
            "pattern": "^[a-z0-9_-]*$"
          },
          {
            "$ref": "#/parameters/ApiVersion"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested testrun file url",
            "schema": {
              "$ref": "#/definitions/FileUrlPath"
            }
          },
          "default": {
            "description": "Load Test Service error response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponseBody"
            },
            "headers": {
              "x-ms-error-code": {
                "description": "The error code for specific error that occurred.",
                "type": "string"
              }
            }
          }
        },
        "x-ms-examples": {
          "GetTestRunFile": {
            "$ref": "./examples/GetTestRunFile.json"
          }
        }
      }
    },
    "/testruns/sortAndFilter": {
      "get": {
        "tags": [
          "TestRun"
        ],
        "summary": "Get all test runs with given filters",
        "operationId": "TestRun_ListTestRunsSearch",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "orderBy",
            "description": "Sort on one of the field - status, displayName, executedDateTime in (field asc/desc) format. eg: displayName asc",
            "type": "string"
          },
          {
            "in": "query",
            "name": "continuationToken",
            "description": "Continuation token to get then next page of response",
            "type": "string"
          },
          {
            "in": "query",
            "name": "search",
            "description": "Filter search based on searchable fields - description, executedUser.",
            "type": "string"
          },
          {
            "in": "query",
            "name": "executionFrom",
            "description": "The end DateTime(Iso8601Literal format) of test-run execution time filter range.",
            "type": "string",
            "format": "date-time"
          },
          {
            "in": "query",
            "name": "executionTo",
            "description": "The start DateTime(Iso8601Literal format) of test-run execution time filter range.",
            "type": "string",
            "format": "date-time"
          },
          {
            "in": "query",
            "name": "status",
            "description": "Comma separated list of test run status, value can be -  \"ACCEPTED\", \"NOTSTARTED\",\"PROVISIONING\",\"PROVISIONED\",\"CONFIGURING\",\n\"CONFIGURED\",\"EXECUTING\",\"EXECUTED\",\"DEPROVISIONING\",\"DEPROVISIONED\",\"DONE\",\"CANCELLED\",\"FAILED\"",
            "type": "string"
          },
          {
            "in": "query",
            "name": "maxPageSize",
            "description": "No of results in response",
            "type": "integer",
            "format": "int32",
            "default": 50
          },
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "in": "query",
            "name": "testId",
            "$ref": "#/parameters/TestId"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested test runs",
            "schema": {
              "$ref": "#/definitions/TestRunModelResourceList"
            }
          },
          "default": {
            "description": "Load Test Service error response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponseBody"
            },
            "headers": {
              "x-ms-error-code": {
                "description": "The error code for specific error that occurred.",
                "type": "string"
              }
            }
          }
        },
        "x-ms-examples": {
          "ListTestRunsSearch": {
            "$ref": "./examples/ListTestRunsSearch.json"
          }
        }
      }
    },
    "/testruns/{testRunId}:stop": {
      "post": {
        "tags": [
          "TestRun"
        ],
        "summary": "Stop test run of given name.",
        "operationId": "TestRun_StopTestRun",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "testRunId",
            "description": "Unique identifier for load test run name, must be a valid URL character ^[a-z0-9_-]*$",
            "required": true,
            "type": "string",
            "maxLength": 50,
            "minLength": 2,
            "pattern": "^[a-z0-9_-]*$"
          },
          {
            "$ref": "#/parameters/ApiVersion"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested test run is stopped. Call GET /testruns/{testRunId} to check the status",
            "schema": {
              "$ref": "#/definitions/TestRunModel"
            }
          },
          "default": {
            "description": "Load Test Service error response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponseBody"
            },
            "headers": {
              "x-ms-error-code": {
                "description": "The error code for specific error that occurred.",
                "type": "string"
              }
            }
          }
        },
        "x-ms-examples": {
          "StopTestRun": {
            "$ref": "./examples/StopTestRun.json"
          }
        }
      }
    },
    "/testruns/{testRunId}/clientMetrics": {
      "post": {
        "tags": [
          "TestRun"
        ],
        "summary": "Get all client metrics for a given load test run",
        "operationId": "TestRun_GetTestRunClientMetrics",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "testRunId",
            "description": "Unique identifier for load test run name, must be a valid URL character ^[a-z0-9_-]*$",
            "required": true,
            "type": "string",
            "maxLength": 50,
            "minLength": 2,
            "pattern": "^[a-z0-9_-]*$"
          },
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Client metrics request model",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ClientMetricsRequestModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested client metrics",
            "schema": {
              "$ref": "#/definitions/ClientMetricsResults"
            }
          },
          "default": {
            "description": "Load Test Service error response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponseBody"
            },
            "headers": {
              "x-ms-error-code": {
                "description": "The error code for specific error that occurred.",
                "type": "string"
              }
            }
          }
        },
        "x-ms-examples": {
          "GetTestRunClientMetrics": {
            "$ref": "./examples/GetTestRunClientMetrics.json"
          }
        }
      }
    },
    "/testruns/{testRunId}/clientMetricsFilters": {
      "get": {
        "tags": [
          "TestRun"
        ],
        "summary": "Get all client metrics supported filters list for a given load test run",
        "operationId": "TestRun_GetTestRunClientMetricsFilters",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "testRunId",
            "description": "Unique identifier for load test run name, must be a valid URL character ^[a-z0-9_-]*$",
            "required": true,
            "type": "string",
            "maxLength": 50,
            "minLength": 2,
            "pattern": "^[a-z0-9_-]*$"
          },
          {
            "$ref": "#/parameters/ApiVersion"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested client metrics filters",
            "schema": {
              "$ref": "#/definitions/ClientMetricsFilters"
            }
          },
          "default": {
            "description": "Load Test Service error response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponseBody"
            },
            "headers": {
              "x-ms-error-code": {
                "description": "The error code for specific error that occurred.",
                "type": "string"
              }
            }
          }
        },
        "x-ms-examples": {
          "GetTestRunClientMetricsFilters": {
            "$ref": "./examples/GetTestRunClientMetricsFilters.json"
          }
        }
      }
    }
  },
  "definitions": {
    "AppComponent": {
      "description": "The Azure resource object (Refer azure generic resource model : https://docs.microsoft.com/en-us/rest/api/resources/resources/get-by-id#genericresource)",
      "type": "object",
      "properties": {
        "resourceId": {
          "description": "Fully qualified resource Id e.g subscriptions/{subId}/resourceGroups/{rg}/providers/Microsoft.LoadTestService/loadtests/{resName}",
          "type": "string",
          "readOnly": true
        },
        "resourceName": {
          "description": "Azure resource name",
          "type": "string",
          "readOnly": true
        },
        "resourceType": {
          "description": "Azure resource type",
          "type": "string"
        },
        "displayName": {
          "description": "Azure resource display name",
          "type": "string",
          "readOnly": true
        },
        "resourceGroup": {
          "description": "Resource group name of Azure resource",
          "type": "string",
          "readOnly": true
        },
        "subscriptionId": {
          "description": "Subscription Id of Azure resource",
          "type": "string",
          "readOnly": true
        },
        "kind": {
          "description": "Kind of Azure resource type",
          "type": "string"
        }
      }
    },
    "AppComponentsMap": {
      "description": "App components model",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "resourceId": {
          "description": "Load test resource id",
          "type": "string",
          "readOnly": true
        },
        "testId": {
          "description": "[Required if testRunId is not given] Load test unique identifier",
          "type": "string"
        },
        "testRunId": {
          "description": "[Required if testId is not given] Load test run unique identifier",
          "type": "string"
        },
        "name": {
          "description": "AppComponent name",
          "type": "string",
          "readOnly": true
        },
        "value": {
          "description": "AppComponents Map { resource id (Fully qualified resource Id e.g subscriptions/{subId}/resourceGroups/{rg}/providers/Microsoft.LoadTestService/loadtests/{resName}) : resource object } ",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/AppComponent"
          }
        }
      }
    },
    "ClientMetricsFilters": {
      "type": "object",
      "properties": {
        "testRunId": {
          "description": "Test run name for which client metrics filters is required.",
          "type": "string"
        },
        "filters": {
          "$ref": "#/definitions/Filters"
        },
        "timeRange": {
          "$ref": "#/definitions/TimeRange"
        }
      }
    },
    "ClientMetricsRequestModel": {
      "description": "Client metrics request payload",
      "required": [
        "endTime",
        "startTime"
      ],
      "type": "object",
      "properties": {
        "requestSamplers": {
          "description": "List of request samplers, maximum supported samplers for queries are 20. In case of empty, it will return metrics for maximum 20 samplers",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "errors": {
          "description": "List of errors, maximum supported errors for queries are 20. In case of empty, by default will return metrics for maximum 20 errors",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "percentiles": {
          "description": "List of percentiles values for response time, supported values 50,90,99,95. Default value is 50th percentile.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "groupByInterval": {
          "description": "For test duration less than 10 minutes group by time interval can be any one of 5s,10s,1m,5m.\\n\\nFor test duration greater than 10 minutes, group by time interval can be any one of 1m,5m,1h. Default value is 1m.",
          "type": "string"
        },
        "startTime": {
          "format": "date-time",
          "description": "Start time",
          "type": "string"
        },
        "endTime": {
          "format": "date-time",
          "description": "End time",
          "type": "string"
        }
      }
    },
    "ClientMetricsResults": {
      "type": "object",
      "properties": {
        "testRunId": {
          "description": "Test run name for which client metrics results is required.",
          "type": "string"
        },
        "timeSeries": {
          "$ref": "#/definitions/Series"
        }
      }
    },
    "DefaultServerMetricsConfigListModel": {
      "description": "Default server metrics config",
      "type": "object",
      "properties": {
        "defaultMetrics": {
          "description": "Default metrics map {resourceType : list of metrics config} (Refer for metrics structure: https://docs.microsoft.com/en-us/rest/api/monitor/metric-definitions/list#metricdefinition)",
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/DefaultServerMetricsConfigModel"
            }
          }
        }
      }
    },
    "DefaultServerMetricsConfigModel": {
      "description": "Metrics config model",
      "type": "object",
      "properties": {
        "metricnamespace": {
          "type": "string"
        },
        "aggregation": {
          "type": "string"
        },
        "name": {
          "$ref": "#/definitions/LocalizedName"
        },
        "unit": {
          "type": "string"
        },
        "displayDescription": {
          "type": "string"
        }
      }
    },
    "ErrorResponseBody": {
      "description": "The definition of an error object.",
      "type": "object",
      "properties": {
        "code": {
          "description": "The error code.",
          "type": "string"
        },
        "message": {
          "description": "The error message.",
          "type": "string"
        },
        "target": {
          "description": "The error target.",
          "type": "string"
        },
        "details": {
          "description": "Additional details and inner errors.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ErrorResponseBody"
          }
        }
      }
    },
    "FileType": {
      "format": "int32",
      "enum": [
        1,
        2
      ],
      "type": "integer"
    },
    "FileUrl": {
      "description": "FileUrl Model",
      "type": "object",
      "properties": {
        "url": {
          "description": "File url",
          "type": "string"
        },
        "fileId": {
          "description": "File unique identifier",
          "type": "string"
        },
        "filename": {
          "description": "Name of the file",
          "type": "string"
        },
        "fileType": {
          "$ref": "#/definitions/FileType"
        },
        "expireTime": {
          "format": "date-time",
          "description": "Expiry time of the file",
          "type": "string"
        },
        "validationStatus": {
          "description": "Validation status of the file",
          "type": "string"
        }
      }
    },
    "FileUrlList": {
      "type": "object",
      "properties": {
        "value": {
          "description": "List of file urls",
          "type": "array",
          "items": {
            "$ref": "#/definitions/FileUrl"
          }
        }
      }
    },
    "FileUrlPath": {
      "type": "object",
      "properties": {
        "id": {
          "description": "Path of the file",
          "type": "string"
        },
        "url": {
          "description": "url of the file",
          "type": "string"
        },
        "expireTime": {
          "format": "date-time",
          "description": "Expiry time of the file",
          "type": "string"
        }
      }
    },
    "Filters": {
      "type": "object",
      "properties": {
        "requestSamplerValues": {
          "description": "List of request sampler for the test run, for which client metrics can be filtered",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "errorFiltersValues": {
          "description": "List of errors occurred for the test run, for which client metrics can be filtered",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "InputTestArtifacts": {
      "description": "The input artifacts for the test",
      "type": "object",
      "properties": {
        "configUrl": {
          "$ref": "#/definitions/FileUrl"
        },
        "testScriptUrl": {
          "$ref": "#/definitions/FileUrl"
        },
        "userPropUrl": {
          "$ref": "#/definitions/FileUrl"
        },
        "inputArtifactsZipFileurl": {
          "$ref": "#/definitions/FileUrl"
        },
        "additionalUrls": {
          "description": "The input artifacts file { name : url } map for the test run",
          "type": "array",
          "items": {
            "$ref": "#/definitions/FileUrl"
          },
          "readOnly": true
        }
      },
      "readOnly": true
    },
    "LoadTestConfig": {
      "description": "The load test configuration",
      "type": "object",
      "properties": {
        "engineInstances": {
          "format": "int32",
          "description": "The number of engine instances to execute load test. Supported values are in range of 1-50. Required for creating a new Test.",
          "type": "integer"
        },
        "splitAllCSVs": {
          "description": "Whether all the input CSV files need to be split evenly accross all engines.",
          "type": "boolean"
        }
      }
    },
    "LocalizedName": {
      "type": "object",
      "properties": {
        "value": {
          "type": "string"
        },
        "localizedValue": {
          "type": "string"
        }
      }
    },
    "OutputTestArtifacts": {
      "description": "The output artifacts for the test run",
      "required": [
        "logsUrl",
        "resultUrl"
      ],
      "type": "object",
      "properties": {
        "resultUrl": {
          "$ref": "#/definitions/FileUrl"
        },
        "logsUrl": {
          "$ref": "#/definitions/FileUrl"
        }
      }
    },
    "PassFailCriteria": {
      "description": "Pass fail criteria for a test",
      "type": "object",
      "properties": {
        "passFailMetrics": {
          "description": "Map of id and pass fail metrics { id  : pass fail metrics }",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/PassFailMetric"
          }
        }
      }
    },
    "PassFailMetric": {
      "type": "object",
      "properties": {
        "clientmetric": {
          "description": "The client metric on which the criteria should be applied. Allowed values - ‘response_time_ms’ , ‘latency’, ‘error’ ",
          "type": "string"
        },
        "aggregate": {
          "description": "The aggregation function to be applied on the client metric. Allowed functions - ‘percentage’ - for error metric , ‘avg’ - for response_time_ms and latency metric ",
          "type": "string"
        },
        "condition": {
          "description": "The comparison operator. Supported types ‘>’ ",
          "type": "string"
        },
        "value": {
          "format": "double",
          "description": "The value to compare with the client metric. Allowed values - ‘error : [0.0 , 100.0] unit- % ’, response_time_ms and latency : any integer value unit- ms",
          "type": "number"
        },
        "action": {
          "description": "Either ‘stop’ or ‘continue’ after the threshold is met. Default is ‘continue’",
          "type": "string"
        },
        "actualValue": {
          "format": "double",
          "description": "The actual value of the client metric for the test run ",
          "type": "number",
          "readOnly": true
        },
        "result": {
          "description": "Outcome of the testRun. possible outcome - ‘passed’ , ‘failed’ , ‘undetermined’ ",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "ResourceMetricModel": {
      "description": "Associated metric definition for particular metrics of the azure resource ( Refer : https://docs.microsoft.com/en-us/rest/api/monitor/metric-definitions/list#metricdefinition)",
      "required": [
        "aggregation",
        "metricnamespace",
        "name",
        "resourceId",
        "resourceType"
      ],
      "type": "object",
      "properties": {
        "id": {
          "description": "Unique identifier for metric",
          "type": "string",
          "readOnly": true
        },
        "resourceId": {
          "description": "Azure resource id",
          "type": "string"
        },
        "metricnamespace": {
          "description": "Metric name space",
          "type": "string"
        },
        "displayDescription": {
          "description": "Metric description",
          "type": "string"
        },
        "name": {
          "$ref": "#/definitions/ServerMetricName"
        },
        "aggregation": {
          "description": "Metric aggregation",
          "type": "string"
        },
        "unit": {
          "description": "Metric unit",
          "type": "string"
        },
        "resourceType": {
          "description": "Azure resource type",
          "type": "string"
        }
      }
    },
    "SecretMetadata": {
      "type": "object",
      "properties": {
        "value": {
          "description": "The value of the secret. of type== akv-secret-uri or secret-value",
          "type": "string"
        },
        "type": {
          "description": "Type of secret. eg. AKV_SECRET_URI/SECRET_VALUE",
          "type": "string"
        }
      }
    },
    "Series": {
      "type": "object",
      "properties": {
        "activeUsers": {
          "description": "Active users time series data",
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TimeSeries"
            }
          }
        },
        "responseTime": {
          "description": "Response time, time series data",
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TimeSeries"
            }
          }
        },
        "throughput": {
          "description": "Throughput time series data",
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TimeSeries"
            }
          }
        },
        "errors": {
          "description": "Errors time series data",
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TimeSeries"
            }
          }
        }
      }
    },
    "ServerMetricName": {
      "description": "Metric name object",
      "required": [
        "localizedValue",
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Metric name value",
          "type": "string"
        },
        "localizedValue": {
          "description": "Metric localized name",
          "type": "string"
        }
      }
    },
    "ServerMetricsModel": {
      "description": "Server metrics config model",
      "type": "object",
      "properties": {
        "name": {
          "description": "Server metrics config name",
          "type": "string",
          "readOnly": true
        },
        "testId": {
          "description": "[Required if testRunId is not given] Load test unique identifier",
          "type": "string"
        },
        "testRunId": {
          "description": "[Required if testId is not given] Load test run unique identifier",
          "type": "string"
        },
        "metrics": {
          "description": "Metrics map {metric id : metrics object} (Refer : https://docs.microsoft.com/en-us/rest/api/monitor/metric-definitions/list#metricdefinition for metric id)",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/ResourceMetricModel"
          }
        }
      }
    },
    "SupportedResourceType": {
      "description": "Supported azure resource types for app component like Microsoft.LoadTestService/loadtests, Microsoft.ClassicCompute, Microsoft.ClassicStorage etc. (Refer for full list of available resource types in azure : https://docs.microsoft.com/en-us/azure/azure-resource-manager/management/resource-providers-and-types, some of them we are supporting for server side metrics configuration)",
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "TestArtifacts": {
      "required": [
        "inputArtifacts"
      ],
      "type": "object",
      "properties": {
        "inputArtifacts": {
          "$ref": "#/definitions/InputTestArtifacts"
        },
        "outputArtifacts": {
          "$ref": "#/definitions/OutputTestArtifacts"
        }
      }
    },
    "TestModel": {
      "description": "Load test model",
      "type": "object",
      "properties": {
        "testId": {
          "description": "Unique test name as identifier",
          "maxLength": 50,
          "minLength": 2,
          "type": "string",
          "readOnly": true
        },
        "description": {
          "description": "The test description",
          "maxLength": 100,
          "type": "string"
        },
        "displayName": {
          "description": "Display name of a test ",
          "maxLength": 50,
          "minLength": 2,
          "type": "string"
        },
        "resourceId": {
          "description": "Fully qualified resource Id e.g /subscriptions/{subId}/resourceGroups/{rg}/providers/Microsoft.LoadTestService/loadtests/{resName}",
          "type": "string",
          "readOnly": true
        },
        "loadTestConfig": {
          "$ref": "#/definitions/LoadTestConfig"
        },
        "passFailCriteria": {
          "$ref": "#/definitions/PassFailCriteria"
        },
        "createdDateTime": {
          "format": "date-time",
          "description": "The created DateTime(Iso8601Literal format) of the test model",
          "type": "string",
          "readOnly": true
        },
        "createdBy": {
          "description": "The user that created the test model",
          "type": "string",
          "readOnly": true
        },
        "lastModifiedDateTime": {
          "format": "date-time",
          "description": "The last Modified DateTime(Iso8601Literal format) of the test model",
          "type": "string",
          "readOnly": true
        },
        "lastModifiedBy": {
          "description": "The user that last modified the test model",
          "type": "string",
          "readOnly": true
        },
        "inputArtifacts": {
          "$ref": "#/definitions/InputTestArtifacts"
        },
        "secrets": {
          "description": "Secrets of higher importance , which are stored in a key-vault typically. Allowed secret type: AKV_SECRET_URI",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/SecretMetadata"
          }
        },
        "environmentVariables": {
          "description": "Secrets of relatively lesser importance , which are defined as a set of <name,value> pairs.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "subnetId": {
          "description": "Subnet ID on which the load test instances should run",
          "type": "string"
        },
        "keyvaultReferenceIdentityType": {
          "description": "Type of the managed identity referencing the Key vault",
          "type": "string"
        },
        "keyvaultReferenceIdentityId": {
          "description": "Resource Id of the managed identity referencing the Key vault",
          "type": "string"
        }
      }
    },
    "TestModelResourceList": {
      "description": "List of Resources",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "List of Resources",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TestModel"
          }
        },
        "nextLink": {
          "description": "Link for the next list of resources in case of paginated results, if applicable",
          "type": "string"
        }
      }
    },
    "TestRunModel": {
      "description": "Load test run model",
      "type": "object",
      "properties": {
        "testRunId": {
          "description": "Unique test run name as identifier",
          "type": "string",
          "readOnly": true
        },
        "displayName": {
          "description": "Display name of a testRun ",
          "maxLength": 50,
          "minLength": 2,
          "type": "string"
        },
        "testId": {
          "description": "Associated testId",
          "maxLength": 50,
          "minLength": 2,
          "type": "string"
        },
        "resourceId": {
          "description": "Load test resource Id",
          "type": "string",
          "readOnly": true
        },
        "description": {
          "description": "The test run description",
          "maxLength": 100,
          "type": "string"
        },
        "status": {
          "description": "The test run status",
          "type": "string",
          "readOnly": true
        },
        "startDateTime": {
          "format": "date-time",
          "description": "The test run start DateTime(Iso8601Literal format)",
          "type": "string",
          "readOnly": true
        },
        "endDateTime": {
          "format": "date-time",
          "description": "The test run end DateTime(Iso8601Literal format)",
          "type": "string",
          "readOnly": true
        },
        "loadTestConfig": {
          "$ref": "#/definitions/LoadTestConfig"
        },
        "testResult": {
          "description": "Test result for pass/Fail criteria used during the test run. possible outcome - ‘Passed’ , ‘Failed’ , ‘Not Applicable’",
          "type": "string",
          "readOnly": true
        },
        "passFailCriteria": {
          "$ref": "#/definitions/PassFailCriteria"
        },
        "testArtifacts": {
          "$ref": "#/definitions/TestArtifacts"
        },
        "executedDateTime": {
          "format": "date-time",
          "description": "Test run initiated time",
          "type": "string",
          "readOnly": true
        },
        "vusers": {
          "format": "int32",
          "description": "No of virtual users, for which test has been run",
          "type": "integer",
          "readOnly": true
        },
        "testRunStatistics": {
          "description": "Testrun statistics",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/TestRunStatisticsModel"
          },
          "readOnly": true
        },
        "createdDateTime": {
          "format": "date-time",
          "description": "The created DateTime(Iso8601Literal format) of the test run",
          "type": "string",
          "readOnly": true
        },
        "createdBy": {
          "description": "The user that created the test run",
          "type": "string",
          "readOnly": true
        },
        "lastModifiedDateTime": {
          "format": "date-time",
          "description": "The last updated  DateTime(Iso8601Literal format) of the test run",
          "type": "string",
          "readOnly": true
        },
        "lastModifiedBy": {
          "description": "The user that updated the test run",
          "type": "string",
          "readOnly": true
        },
        "portalUrl": {
          "description": "Portal url ",
          "type": "string",
          "readOnly": true
        },
        "secrets": {
          "description": "Secrets of higher importance , which are stored in a key-vault typically. Allowed secret types: AKV_SECRET_URI/SECRET_VALUE",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/SecretMetadata"
          }
        },
        "environmentVariables": {
          "description": "Secrets of relatively lesser importance , which are defined as a set of <name,value> pairs.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "duration": {
          "format": "int64",
          "description": "Test run duration in milliseconds",
          "type": "integer",
          "readOnly": true
        },
        "subnetId": {
          "description": "Subnet ID on which the load test instances should run",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "TestRunModelResourceList": {
      "description": "List of Resources",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "List of Resources",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TestRunModel"
          }
        },
        "nextLink": {
          "description": "Link for the next list of resources in case of paginated results, if applicable",
          "type": "string"
        }
      }
    },
    "TestRunStatisticsModel": {
      "description": "Test run statistics",
      "type": "object",
      "properties": {
        "transaction": {
          "description": "Transaction name",
          "type": "string",
          "readOnly": true
        },
        "sampleCount": {
          "format": "double",
          "description": "Sampler count",
          "type": "number",
          "readOnly": true
        },
        "errorCount": {
          "format": "double",
          "description": "Error count",
          "type": "number",
          "readOnly": true
        },
        "errorPct": {
          "format": "double",
          "description": "Error percentage",
          "type": "number",
          "readOnly": true
        },
        "meanResTime": {
          "format": "double",
          "description": "Mean response time",
          "type": "number",
          "readOnly": true
        },
        "medianResTime": {
          "format": "double",
          "description": "Median response time",
          "type": "number",
          "readOnly": true
        },
        "maxResTime": {
          "format": "double",
          "description": "Max response time",
          "type": "number",
          "readOnly": true
        },
        "minResTime": {
          "format": "double",
          "description": "Minimum response time",
          "type": "number",
          "readOnly": true
        },
        "pct1ResTime": {
          "format": "double",
          "description": "90 percentile response time",
          "type": "number",
          "readOnly": true
        },
        "pct2ResTime": {
          "format": "double",
          "description": "95 percentile response time",
          "type": "number",
          "readOnly": true
        },
        "pct3ResTime": {
          "format": "double",
          "description": "99 percentile response time",
          "type": "number",
          "readOnly": true
        },
        "throughput": {
          "format": "double",
          "description": "Throughput",
          "type": "number",
          "readOnly": true
        },
        "receivedKBytesPerSec": {
          "format": "double",
          "description": "Received network bytes",
          "type": "number",
          "readOnly": true
        },
        "sentKBytesPerSec": {
          "format": "double",
          "description": "Send network bytes",
          "type": "number",
          "readOnly": true
        }
      },
      "readOnly": true
    },
    "TimeRange": {
      "type": "object",
      "properties": {
        "startTime": {
          "format": "date-time",
          "description": "start DateTime(Iso8601Literal format) for the requested client metrics filter",
          "type": "string"
        },
        "endTime": {
          "format": "date-time",
          "description": "end DateTime(Iso8601Literal format) for the requested client metrics filter",
          "type": "string"
        }
      }
    },
    "TimeSeries": {
      "type": "object",
      "properties": {
        "timestamp": {
          "format": "date-time",
          "description": "Timestamp(Iso8601Literal format)",
          "type": "string"
        },
        "value": {
          "format": "double",
          "description": "Value at timestamp",
          "type": "number"
        }
      }
    }
  },
  "parameters": {
    "ApiVersion": {
      "in": "query",
      "name": "api-version",
      "description": "Api version",
      "required": true
    },
    "TestId": {
      "description": "Unique identifier for load test name, must be a valid URL character ^[a-z0-9_-]*$",
      "type": "string",
      "maxLength": 50,
      "minLength": 2,
      "pattern": "^[a-z0-9_-]*$"
    }
  },
  "securityDefinitions": {
    "oauth2": {
      "type": "oauth2",
      "flow": "implicit",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  }
}
