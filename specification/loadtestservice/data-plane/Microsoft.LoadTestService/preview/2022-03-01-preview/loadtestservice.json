{
  "swagger": "2.0",
  "info": {
    "title": "CloudNativeTest",
    "version": "2022-03-01-preview"
  },
  "paths": {
    "/appcomponents/{name}": {
      "patch": {
        "tags": [
          "AppComponent"
        ],
        "summary": "Associate app component (a azure resource model) to a test model or test run",
        "operationId": "AppComponent_CreateOrUpdateAppComponents",
        "consumes": [
          "application/merge-patch+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "description": "Unique identifier for app component name, must be a valid URL character ^[a-z0-9_-]*$",
            "required": true,
            "type": "string",
            "maxLength": 50,
            "minLength": 2,
            "pattern": "^[a-z0-9_-]*$"
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "Api version",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "App component model",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AppComponentsMap"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The app component were updated",
            "schema": {
              "$ref": "#/definitions/AppComponentsMap"
            }
          },
          "201": {
            "description": "The app component were created",
            "schema": {
              "$ref": "#/definitions/AppComponentsMap"
            }
          },
          "default": {
            "description": "***Error Responses: ***\n\n * \"400\", \"InvalidHostOrResourceName\", \"Host name or domain is not valid\" .\n\n * \"400\", \"RequiredAppComponentName\", \"name field is required\"\n\n * \"400\", \"RequiredTestOrTestRun\", \"Either test name or test run name is required\"\n\n * \"400\", \"InvalidAppComponentName\", \"name field should be valid\"\n\n * \"400\", \"InvalidValue\",  \"value field is either null or not a valid map\".\n\n * \"404\", \"TestRunNotFound\", \"test run not found with given name\"\n\n * \"404\", \"TestNotFound\", \"Test not found with given name\"\n\n* \"500\", \"InternalServerError\", \"Unable to process the request, please retry\"",
            "schema": {
              "$ref": "#/definitions/ErrorResponseBody"
            },
            "headers": {
              "x-ms-error-code": {
                "description": "The error code for specific error that occurred.",
                "type": "string"
              }
            }
          }
        },
        "x-ms-examples": {
          "AppComponent_CreateOrUpdateAppComponents_MaximumSet_Gen": {
            "$ref": "./examples/AppComponent_CreateOrUpdateAppComponents_MaximumSet_Gen.json"
          },
          "AppComponent_CreateOrUpdateAppComponents_MinimumSet_Gen": {
            "$ref": "./examples/AppComponent_CreateOrUpdateAppComponents_MinimumSet_Gen.json"
          }
        }
      },
      "delete": {
        "tags": [
          "AppComponent"
        ],
        "summary": "Delete app component",
        "operationId": "AppComponent_DeleteAppComponent",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "description": "Unique identifier for app component name, must be a valid URL character ^[a-z0-9_-]*$",
            "required": true,
            "type": "string",
            "maxLength": 50,
            "minLength": 2,
            "pattern": "^[a-z0-9_-]*$"
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "Api version",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "The app component is deleted"
          },
          "default": {
            "description": "*** Error Responses: ***\n\n * \"400\", \"InvalidHostOrResourceName\", \"Host name or domain is not valid\"\n\n * \"400\", \"RequiredAppComponentName\", \"name field is required\"\n\n * \"400\", \"InvalidAppComponentName\", \"name field should be valid\"\n\n * \"404\", \"AppComponentNotFound\", \"AppComponent not found with given name\"\n\n * \"500\", \"InternalServerError\", \"Unable to process the request, please retry\"",
            "schema": {
              "$ref": "#/definitions/ErrorResponseBody"
            },
            "headers": {
              "x-ms-error-code": {
                "description": "The error code for specific error that occurred.",
                "type": "string"
              }
            }
          }
        },
        "x-ms-examples": {
          "AppComponent_DeleteAppComponent_MaximumSet_Gen": {
            "$ref": "./examples/AppComponent_DeleteAppComponent_MaximumSet_Gen.json"
          },
          "AppComponent_DeleteAppComponent_MinimumSet_Gen": {
            "$ref": "./examples/AppComponent_DeleteAppComponent_MinimumSet_Gen.json"
          }
        }
      },
      "get": {
        "tags": [
          "AppComponent"
        ],
        "summary": "Get App components for a given appComponentName in query param.",
        "operationId": "AppComponent_GetAppComponentByName",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "description": "Unique identifier for app component name, must be a valid URL character ^[a-z0-9_-]*$",
            "required": true,
            "type": "string",
            "maxLength": 50,
            "minLength": 2,
            "pattern": "^[a-z0-9_-]*$"
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "Api version",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested app components",
            "schema": {
              "$ref": "#/definitions/AppComponentsMap"
            }
          },
          "default": {
            "description": "***Error Responses: ***\n\n * \"400\", \"InvalidHostOrResourceName\", \"Host name or domain is not valid\" .\n\n * \"400\", \"RequiredAppComponentName\", \"name field is required\"\n\n * \"400\", \"InvalidAppComponentName\", \"name field should be valid\"\n\n * \"500\", \"InternalServerError\", \"Unable to process the request, please retry\"",
            "schema": {
              "$ref": "#/definitions/ErrorResponseBody"
            },
            "headers": {
              "x-ms-error-code": {
                "description": "The error code for specific error that occurred.",
                "type": "string"
              }
            }
          }
        },
        "x-ms-examples": {
          "AppComponent_GetAppComponentByName_MaximumSet_Gen": {
            "$ref": "./examples/AppComponent_GetAppComponentByName_MaximumSet_Gen.json"
          },
          "AppComponent_GetAppComponentByName_MinimumSet_Gen": {
            "$ref": "./examples/AppComponent_GetAppComponentByName_MinimumSet_Gen.json"
          }
        }
      }
    },
    "/appcomponents": {
      "get": {
        "tags": [
          "AppComponent"
        ],
        "summary": "Get App components for a test model or a test run of given name in query param.",
        "operationId": "AppComponent_GetAppComponent",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "testId",
            "description": "Required testId, if testRunId name is not provided",
            "type": "string",
            "maxLength": 50,
            "minLength": 2,
            "pattern": "^[a-z0-9_-]*$"
          },
          {
            "in": "query",
            "name": "testRunId",
            "description": "Required testRunId, if testId is not provided",
            "type": "string",
            "maxLength": 50,
            "minLength": 2,
            "pattern": "^[a-z0-9_-]*$"
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "Api version",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested app components",
            "schema": {
              "$ref": "#/definitions/AppComponentsMap"
            }
          },
          "default": {
            "description": "***Error Responses: ***\n\n * \"400\", \"InvalidHostOrResourceName\", \"Host name or domain is not valid\" .\n\n  * \"400\", \"RequiredTestOrTestRun\", \"Either test name or test run name is required\"\n\n  * \"404\", \"TestRunNotFound\", \"test run not found with given name\"\n\n * \"404\", \"TestNotFound\", \"Test not found with given name\"\n\n * \"500\", \"InternalServerError\", \"Unable to process the request, please retry\"",
            "schema": {
              "$ref": "#/definitions/ErrorResponseBody"
            },
            "headers": {
              "x-ms-error-code": {
                "description": "The error code for specific error that occurred.",
                "type": "string"
              }
            }
          }
        },
        "x-ms-examples": {
          "AppComponent_GetAppComponent_MaximumSet_Gen": {
            "$ref": "./examples/AppComponent_GetAppComponent_MaximumSet_Gen.json"
          },
          "AppComponent_GetAppComponent_MinimumSet_Gen": {
            "$ref": "./examples/AppComponent_GetAppComponent_MinimumSet_Gen.json"
          }
        }
      }
    },
    "/file/{fileId}:validate": {
      "post": {
        "tags": [
          "File"
        ],
        "summary": "Validate input file. File name must be a valid URL character ^[a-z0-9_-]*$. File size can't be more than 50 MB.",
        "operationId": "File_FileValidate",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "fileId",
            "description": "Unique identifier for test file, must be a valid URL character ^[a-z0-9_-]*$",
            "required": true,
            "type": "string",
            "maxLength": 50,
            "minLength": 2,
            "pattern": "^[a-z0-9_-]*$"
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "Api version",
            "required": true,
            "type": "string"
          },
          {
            "in": "formData",
            "name": "file",
            "required": true,
            "type": "file"
          }
        ],
        "responses": {
          "200": {
            "description": "The file is validated ",
            "schema": {
              "$ref": "#/definitions/FileValidateResponse"
            }
          },
          "default": {
            "description": "*** Error Responses: ***\n\n * \"400\", \"InvalidHostOrResourceName\", \"Host name or domain is not valid\"\n\n * \"400\", RequiredFileId - fileId is required\n\n  * \"400\", \"InvalidFileId\", \"fileId field is not valid\"   \n\n * \"500\", \"InternalServerError\", \"Unable to process the request, please retry\"",
            "schema": {
              "$ref": "#/definitions/ErrorResponseBody"
            },
            "headers": {
              "x-ms-error-code": {
                "description": "The error code for specific error that occurred.",
                "type": "string"
              }
            }
          }
        },
        "x-ms-examples": {
          "File_FileValidate_MaximumSet_Gen": {
            "$ref": "./examples/File_FileValidate_MaximumSet_Gen.json"
          }
        }
      }
    },
    "/serverMetricsConfig/{name}": {
      "patch": {
        "tags": [
          "ServerMetrics"
        ],
        "summary": "Associate server metrics config to a test model or test run",
        "operationId": "ServerMetrics_CreateOrUpdateServerMetricsConfig",
        "consumes": [
          "application/merge-patch+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "description": "Unique identifier for server metric name, must be a valid URL character ^[a-z0-9_-]*$",
            "required": true,
            "type": "string",
            "maxLength": 50,
            "minLength": 2,
            "pattern": "^[a-z0-9_-]*$"
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "Api version",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Server metrics config model",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ServerMetricsModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The server metrics were updated",
            "schema": {
              "$ref": "#/definitions/ServerMetricsModel"
            }
          },
          "201": {
            "description": "The server metrics were created",
            "schema": {
              "$ref": "#/definitions/ServerMetricsModel"
            }
          },
          "default": {
            "description": "***Error Responses: ***\n\n * \"400\", \"InvalidHostOrResourceName\", \"Host name or domain is not valid\" .\n\n * \"400\", \"RequiredServerMetricsName\", \"name is required\"\n\n * \"400\", \"RequiredTestOrTestRun\", \"Either test name or test run name is required\"\n\n * \"500\", \"InternalServerError\", \"Unable to process the request, please retry\"",
            "schema": {
              "$ref": "#/definitions/ErrorResponseBody"
            },
            "headers": {
              "x-ms-error-code": {
                "description": "The error code for specific error that occurred.",
                "type": "string"
              }
            }
          }
        },
        "x-ms-examples": {
          "ServerMetrics_CreateOrUpdateServerMetricsConfig_MaximumSet_Gen": {
            "$ref": "./examples/ServerMetrics_CreateOrUpdateServerMetricsConfig_MaximumSet_Gen.json"
          },
          "ServerMetrics_CreateOrUpdateServerMetricsConfig_MinimumSet_Gen": {
            "$ref": "./examples/ServerMetrics_CreateOrUpdateServerMetricsConfig_MinimumSet_Gen.json"
          }
        }
      },
      "get": {
        "tags": [
          "ServerMetrics"
        ],
        "summary": "Get server metrics config for a given name in query param.",
        "operationId": "ServerMetrics_GetServerMetricsByName",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "description": "Unique identifier for server metric name, must be a valid URL character ^[a-z0-9_-]*$",
            "required": true,
            "type": "string",
            "maxLength": 50,
            "minLength": 2,
            "pattern": "^[a-z0-9_-]*$"
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "Api version",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested server metrics",
            "schema": {
              "$ref": "#/definitions/ServerMetricsModel"
            }
          },
          "default": {
            "description": "***Error Responses: ***\n\n * \"400\", \"InvalidHostOrResourceName\", \"Host name or domain is not valid\".\n\n  * \"400\", \"RequiredServerMetricsName\", \"name field is required\"\n\n * \"400\", \"InvalidServerMetricsConfigName\", \"name field should be valid\"\n\n * \"500\", \"InternalServerError\", \"Unable to process the request, please retry\"",
            "schema": {
              "$ref": "#/definitions/ErrorResponseBody"
            },
            "headers": {
              "x-ms-error-code": {
                "description": "The error code for specific error that occurred.",
                "type": "string"
              }
            }
          }
        },
        "x-ms-examples": {
          "ServerMetrics_GetServerMetricsByName_MaximumSet_Gen": {
            "$ref": "./examples/ServerMetrics_GetServerMetricsByName_MaximumSet_Gen.json"
          },
          "ServerMetrics_GetServerMetricsByName_MinimumSet_Gen": {
            "$ref": "./examples/ServerMetrics_GetServerMetricsByName_MinimumSet_Gen.json"
          }
        }
      },
      "delete": {
        "tags": [
          "ServerMetrics"
        ],
        "summary": "Delete server metrics config by given name",
        "operationId": "ServerMetrics_DeleteServerMetrics",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "description": "Unique identifier for server metric name, must be a valid URL character ^[a-z0-9_-]*$",
            "required": true,
            "type": "string",
            "maxLength": 50,
            "minLength": 2,
            "pattern": "^[a-z0-9_-]*$"
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "Api version",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "The server metrics config is deleted"
          },
          "default": {
            "description": "*** Error Responses: ***\n\n * \"400\", \"InvalidHostOrResourceName\", \"Host name or domain is not valid\"\n\n * \"400\", \"RequiredServerMetricsName\", \"name is required\"\n\n * \"404\", \"ServerMetricsNotFound\",  \"No server metrics found with given name\"\n\n * \"500\", \"InternalServerError\", \"Unable to process the request, please retry\"",
            "schema": {
              "$ref": "#/definitions/ErrorResponseBody"
            },
            "headers": {
              "x-ms-error-code": {
                "description": "The error code for specific error that occurred.",
                "type": "string"
              }
            }
          }
        },
        "x-ms-examples": {
          "ServerMetrics_DeleteServerMetrics_MaximumSet_Gen": {
            "$ref": "./examples/ServerMetrics_DeleteServerMetrics_MaximumSet_Gen.json"
          },
          "ServerMetrics_DeleteServerMetrics_MinimumSet_Gen": {
            "$ref": "./examples/ServerMetrics_DeleteServerMetrics_MinimumSet_Gen.json"
          }
        }
      }
    },
    "/serverMetricsConfig": {
      "get": {
        "tags": [
          "ServerMetrics"
        ],
        "summary": "Get server metrics config for a test model or test run of given name in query param.",
        "operationId": "ServerMetrics_GetServerMetrics",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "testId",
            "description": "Required testId, if testRunId name is not provided",
            "type": "string",
            "maxLength": 50,
            "minLength": 2,
            "pattern": "^[a-z0-9_-]*$"
          },
          {
            "in": "query",
            "name": "testRunId",
            "description": "Required testRunId, if testId is not provided",
            "type": "string",
            "maxLength": 50,
            "minLength": 2,
            "pattern": "^[a-z0-9_-]*$"
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "Api version",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested server metrics",
            "schema": {
              "$ref": "#/definitions/ServerMetricsModel"
            }
          },
          "default": {
            "description": "***Error Responses: ***\n\n * \"400\", \"InvalidHostOrResourceName\", \"Host name or domain is not valid\" .\n\n  * \"400\", \"RequiredTestOrTestRun\", \"Either test name or test run name is required\"\n\n  * \"500\", \"InternalServerError\", \"Unable to process the request, please retry\"",
            "schema": {
              "$ref": "#/definitions/ErrorResponseBody"
            },
            "headers": {
              "x-ms-error-code": {
                "description": "The error code for specific error that occurred.",
                "type": "string"
              }
            }
          }
        },
        "x-ms-examples": {
          "ServerMetrics_GetServerMetrics_MaximumSet_Gen": {
            "$ref": "./examples/ServerMetrics_GetServerMetrics_MaximumSet_Gen.json"
          },
          "ServerMetrics_GetServerMetrics_MinimumSet_Gen": {
            "$ref": "./examples/ServerMetrics_GetServerMetrics_MinimumSet_Gen.json"
          }
        }
      }
    },
    "/serverMetricsConfig/default": {
      "get": {
        "tags": [
          "ServerMetrics"
        ],
        "summary": "Get all default server metrics config with supported resource type",
        "operationId": "ServerMetrics_GetServerDefaultMetrics",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "api-version",
            "description": "Api version",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested server default metrics",
            "schema": {
              "$ref": "#/definitions/DefaultServerMetricsConfigListModel"
            }
          },
          "default": {
            "description": "***Error Responses: ***\n\n * \"400\", \"InvalidHostOrResourceName\", \"Host name or domain is not valid\" .\n\n * \"500\", \"InternalServerError\", \"Unable to process the request, please retry\"",
            "schema": {
              "$ref": "#/definitions/ErrorResponseBody"
            },
            "headers": {
              "x-ms-error-code": {
                "description": "The error code for specific error that occurred.",
                "type": "string"
              }
            }
          }
        },
        "x-ms-examples": {
          "ServerMetrics_GetServerDefaultMetrics_MaximumSet_Gen": {
            "$ref": "./examples/ServerMetrics_GetServerDefaultMetrics_MaximumSet_Gen.json"
          },
          "ServerMetrics_GetServerDefaultMetrics_MinimumSet_Gen": {
            "$ref": "./examples/ServerMetrics_GetServerDefaultMetrics_MinimumSet_Gen.json"
          }
        }
      }
    },
    "/serverMetricsConfig/supportedResourceTypes": {
      "get": {
        "tags": [
          "ServerMetrics"
        ],
        "summary": "Get all supported resource types for app components(azure resource types)",
        "operationId": "ServerMetrics_ListSupportedResourceType",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "api-version",
            "description": "Api version",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The supported resource types and metrics for server side metrics",
            "schema": {
              "$ref": "#/definitions/SupportedResourceType"
            }
          },
          "default": {
            "description": "***Error Responses: ***\n\n * \"500\", \"InternalServerError\", \"Unable to process the request, please retry\"",
            "schema": {
              "$ref": "#/definitions/ErrorResponseBody"
            },
            "headers": {
              "x-ms-error-code": {
                "description": "The error code for specific error that occurred.",
                "type": "string"
              }
            }
          }
        },
        "x-ms-examples": {
          "ServerMetrics_ListSupportedResourceType_MaximumSet_Gen": {
            "$ref": "./examples/ServerMetrics_ListSupportedResourceType_MaximumSet_Gen.json"
          },
          "ServerMetrics_ListSupportedResourceType_MinimumSet_Gen": {
            "$ref": "./examples/ServerMetrics_ListSupportedResourceType_MinimumSet_Gen.json"
          }
        }
      }
    },
    "/loadtests/{testId}": {
      "patch": {
        "tags": [
          "Test"
        ],
        "summary": "Creates/Updates a new load test. Test name must be a valid URL character ^[a-z0-9_-]*$",
        "operationId": "Test_CreateOrUpdateTest",
        "consumes": [
          "application/merge-patch+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "testId",
            "description": "Unique identifier for load test name, must be a valid URL character ^[a-z0-9_-]*$",
            "required": true,
            "type": "string",
            "maxLength": 50,
            "minLength": 2,
            "pattern": "^[a-z0-9_-]*$"
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "Api version",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Load test model",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TestModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The loadtest was updated",
            "schema": {
              "$ref": "#/definitions/TestModel"
            }
          },
          "201": {
            "description": "The loadtest was created",
            "schema": {
              "$ref": "#/definitions/TestModel"
            }
          },
          "default": {
            "description": "***Error Responses: ***\n\n* \"400\", \"InvalidHostOrResourceName\", \"Host name or domain is not valid\"\n\n* \"400\", \"InvalidTestId\", \"testId field should be valid\"\n\n* \"400\", \"RequiredTestId\", \"testId field is required\"\n\n* \"400\", \"InvalidPassFailCriteria\", \"Invalid pass fail criteria \"\n\n* \"500\", \"InternalServerError\", \"Unable to process the request, please retry\"",
            "schema": {
              "$ref": "#/definitions/ErrorResponseBody"
            },
            "headers": {
              "x-ms-error-code": {
                "description": "The error code for specific error that occurred.",
                "type": "string"
              }
            }
          }
        },
        "x-ms-examples": {
          "Test_CreateOrUpdateTest_MaximumSet_Gen": {
            "$ref": "./examples/Test_CreateOrUpdateTest_MaximumSet_Gen.json"
          },
          "Test_CreateOrUpdateTest_MinimumSet_Gen": {
            "$ref": "./examples/Test_CreateOrUpdateTest_MinimumSet_Gen.json"
          }
        }
      },
      "delete": {
        "tags": [
          "Test"
        ],
        "summary": "Delete a test with given name. Test name must be a valid URL character ^[a-z0-9_-]*$",
        "operationId": "Test_DeleteLoadTest",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "testId",
            "description": "Unique identifier for load test name, must be a valid URL character ^[a-z0-9_-]*$",
            "required": true,
            "type": "string",
            "maxLength": 50,
            "minLength": 2,
            "pattern": "^[a-z0-9_-]*$"
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "Api version",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "The test is deleted"
          },
          "default": {
            "description": "*** Error Responses: ***\n\n * \"400\", \"InvalidHostOrResourceName\", \"Host name or domain is not valid\"\n\n * \"400\", \"RequiredTestId\", \"testId field is required\"\n\n * \"400\", \"InvalidTestId\", \"testId field should be valid\"\n\n * \"404\", \"TestNotFound\", \"Test not found with given identifier\"\n\n * \"500\", \"InternalServerError\", \"Unable to process the request, please retry\"",
            "schema": {
              "$ref": "#/definitions/ErrorResponseBody"
            },
            "headers": {
              "x-ms-error-code": {
                "description": "The error code for specific error that occurred.",
                "type": "string"
              }
            }
          }
        },
        "x-ms-examples": {
          "Test_DeleteLoadTest_MaximumSet_Gen": {
            "$ref": "./examples/Test_DeleteLoadTest_MaximumSet_Gen.json"
          },
          "Test_DeleteLoadTest_MinimumSet_Gen": {
            "$ref": "./examples/Test_DeleteLoadTest_MinimumSet_Gen.json"
          }
        }
      },
      "get": {
        "tags": [
          "Test"
        ],
        "summary": "Get load test model of given test name",
        "operationId": "Test_GetLoadTest",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "testId",
            "description": "Unique identifier for load test name, must be a valid URL character ^[a-z0-9_-]*$",
            "required": true,
            "type": "string",
            "maxLength": 50,
            "minLength": 2,
            "pattern": "^[a-z0-9_-]*$"
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "Api version",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested load test",
            "schema": {
              "$ref": "#/definitions/TestModel"
            }
          },
          "default": {
            "description": "*** Error Responses: ***\n\n * \"400\", \"InvalidHostOrResourceName\", \"Host name or domain is not valid\"\n\n * \"400\", \"RequiredTestId\", \"testId field is required\"\n\n * \"400\", \"InvalidTestId\", \"testId field should be valid\"\n\n * \"404\", \"TestNotFound\", \"Test not found with given identifier\"\n\n* \"500\", \"InternalServerError\", \"Unable to process the request, please retry\"",
            "schema": {
              "$ref": "#/definitions/ErrorResponseBody"
            },
            "headers": {
              "x-ms-error-code": {
                "description": "The error code for specific error that occurred.",
                "type": "string"
              }
            }
          }
        },
        "x-ms-examples": {
          "Test_GetLoadTest_MaximumSet_Gen": {
            "$ref": "./examples/Test_GetLoadTest_MaximumSet_Gen.json"
          },
          "Test_GetLoadTest_MinimumSet_Gen": {
            "$ref": "./examples/Test_GetLoadTest_MinimumSet_Gen.json"
          }
        }
      }
    },
    "/loadtests/{testId}/files/{fileId}": {
      "put": {
        "tags": [
          "Test"
        ],
        "summary": "Upload input file for a given test name. File name must be a valid URL character ^[a-z0-9_-]*$. File size can't be more than 50 MB. Existing file with same name for the given test will be overwritten.",
        "operationId": "Test_UploadTestFile",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "testId",
            "description": "Unique identifier for load test name, must be a valid URL character ^[a-z0-9_-]*$",
            "required": true,
            "type": "string",
            "maxLength": 50,
            "minLength": 2,
            "pattern": "^[a-z0-9_-]*$"
          },
          {
            "in": "path",
            "name": "fileId",
            "description": "Unique identifier for test file, must be a valid URL character ^[a-z0-9_-]*$",
            "required": true,
            "type": "string",
            "maxLength": 50,
            "minLength": 2,
            "pattern": "^[a-z0-9_-]*$"
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "Api version",
            "required": true,
            "type": "string"
          },
          {
            "in": "formData",
            "name": "file",
            "required": true,
            "type": "file"
          }
        ],
        "responses": {
          "201": {
            "description": "The test artifact was uploaded",
            "schema": {
              "$ref": "#/definitions/TestModel"
            }
          },
          "default": {
            "description": "*** Error Responses: ***\n\n * \"400\", \"InvalidHostOrResourceName\", \"Host name or domain is not valid\"\n\n * \"400\", \"RequiredTestId\", \"testId field is required\"\n\n * \"400\", \"InvalidTestId\", \"testId field should be valid\"\n\n * \"400\", \"RequiredFileId\", \"fileId field is required\"\n\n * \"400\", \"InvalidFileId\", \"fileId field is not valid\"   \n\n * \"400\", \"InvalidFile\", \"File is not valid error -\"\n\n * \"404\", \"TestNotFound\", \"Test not found with given identifier\"\n\n * \"500\", \"InternalServerError\", \"Unable to process the request, please retry\"",
            "schema": {
              "$ref": "#/definitions/ErrorResponseBody"
            },
            "headers": {
              "x-ms-error-code": {
                "description": "The error code for specific error that occurred.",
                "type": "string"
              }
            }
          }
        },
        "x-ms-examples": {
          "Test_UploadTestFile_MaximumSet_Gen": {
            "$ref": "./examples/Test_UploadTestFile_MaximumSet_Gen.json"
          }
        }
      },
      "get": {
        "tags": [
          "Test"
        ],
        "summary": "Get test file with given file name.",
        "operationId": "Test_GetTestFile",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "testId",
            "description": "Unique identifier for load test name, must be a valid URL character ^[a-z0-9_-]*$",
            "required": true,
            "type": "string",
            "maxLength": 50,
            "minLength": 2,
            "pattern": "^[a-z0-9_-]*$"
          },
          {
            "in": "path",
            "name": "fileId",
            "description": "Unique identifier for test file, must be a valid URL character ^[a-z0-9_-]*$",
            "required": true,
            "type": "string",
            "maxLength": 50,
            "minLength": 2,
            "pattern": "^[a-z0-9_-]*$"
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "Api version",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested test file url",
            "schema": {
              "$ref": "#/definitions/FileUrlPath"
            }
          },
          "default": {
            "description": "*** Error Responses: ***\n\n * \"400\", \"InvalidHostOrResourceName\", \"Host name or domain is not valid\"\n\n * \"400\", \"RequiredTestId\", \"testId field is required\"\n\n * \"400\", \"InvalidTestId\", \"testId field should be valid\"\n\n * \"400\", \"RequiredFileId\", \"fileId field is required\"\n\n * \"400\", \"InvalidFileId\", \"fileId field is not valid\"   \n\n * \"404\", \"TestNotFound\", \"Test not found with given identifier\"\n\n * \"404\", \"TestFileNotFound\",  \"Test file not found with given name\"\n\n* \"500\", \"InternalServerError\", \"Unable to process the request, please retry\"",
            "schema": {
              "$ref": "#/definitions/ErrorResponseBody"
            },
            "headers": {
              "x-ms-error-code": {
                "description": "The error code for specific error that occurred.",
                "type": "string"
              }
            }
          }
        },
        "x-ms-examples": {
          "Test_GetTestFile_MaximumSet_Gen": {
            "$ref": "./examples/Test_GetTestFile_MaximumSet_Gen.json"
          },
          "Test_GetTestFile_MinimumSet_Gen": {
            "$ref": "./examples/Test_GetTestFile_MinimumSet_Gen.json"
          }
        }
      },
      "delete": {
        "tags": [
          "Test"
        ],
        "summary": "Delete file of given file name for a test. File name must be a valid URL character ^[a-z0-9_-]*$",
        "operationId": "Test_DeleteTestFile",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "testId",
            "description": "Unique identifier for load test name, must be a valid URL character ^[a-z0-9_-]*$",
            "required": true,
            "type": "string",
            "maxLength": 50,
            "minLength": 2,
            "pattern": "^[a-z0-9_-]*$"
          },
          {
            "in": "path",
            "name": "fileId",
            "description": "Unique identifier for test file, must be a valid URL character ^[a-z0-9_-]*$",
            "required": true,
            "type": "string",
            "maxLength": 50,
            "minLength": 2,
            "pattern": "^[a-z0-9_-]*$"
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "Api version",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "The requested artifact is deleted"
          },
          "default": {
            "description": "*** Error Responses: ***\n\n * \"400\", \"InvalidHostOrResourceName\", \"Host name or domain is not valid\"\n\n * \"400\", \"RequiredTestId\", \"testId field is required\"\n\n * \"400\", \"InvalidTestId\", \"testId field should be valid\"\n\n * \"400\", \"RequiredFileId\", \"fileId field is required\"\n\n* \"400\", \"InvalidFileId\", \"fileId field is not valid\"   \n\n * \"404\", \"TestNotFound\", \"Test not found with given identifier\"\n\n * \"404\", \"TestFileNotFound\",  \"Test file not found with given name\"\n\n* \"500\", \"InternalServerError\", \"Unable to process the request, please retry\"",
            "schema": {
              "$ref": "#/definitions/ErrorResponseBody"
            },
            "headers": {
              "x-ms-error-code": {
                "description": "The error code for specific error that occurred.",
                "type": "string"
              }
            }
          }
        },
        "x-ms-examples": {
          "Test_DeleteTestFile_MaximumSet_Gen": {
            "$ref": "./examples/Test_DeleteTestFile_MaximumSet_Gen.json"
          },
          "Test_DeleteTestFile_MinimumSet_Gen": {
            "$ref": "./examples/Test_DeleteTestFile_MinimumSet_Gen.json"
          }
        }
      }
    },
    "/loadtests/{testId}/files": {
      "get": {
        "tags": [
          "Test"
        ],
        "summary": "Get all test files.",
        "operationId": "Test_GetAllTestFiles",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "testId",
            "description": "Unique identifier for load test name, must be a valid URL character ^[a-z0-9_-]*$",
            "required": true,
            "type": "string",
            "maxLength": 50,
            "minLength": 2,
            "pattern": "^[a-z0-9_-]*$"
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "Api version",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested test files urls",
            "schema": {
              "$ref": "#/definitions/FileUrlList"
            }
          },
          "default": {
            "description": "*** Error Responses: ***\n\n * \"400\", \"InvalidHostOrResourceName\", \"Host name or domain is not valid\"\n\n * \"400\", \"RequiredTestId\", \"testId field is required\"\n\n * \"400\", \"InvalidTestId\", \"testId field should be valid\"\n\n* \"404\", \"TestNotFound\", \"Test not found with given identifier\"\n\n* \"500\", \"InternalServerError\", \"Unable to process the request, please retry\"",
            "schema": {
              "$ref": "#/definitions/ErrorResponseBody"
            },
            "headers": {
              "x-ms-error-code": {
                "description": "The error code for specific error that occurred.",
                "type": "string"
              }
            }
          }
        },
        "x-ms-examples": {
          "Test_GetAllTestFiles_MaximumSet_Gen": {
            "$ref": "./examples/Test_GetAllTestFiles_MaximumSet_Gen.json"
          },
          "Test_GetAllTestFiles_MinimumSet_Gen": {
            "$ref": "./examples/Test_GetAllTestFiles_MinimumSet_Gen.json"
          }
        }
      }
    },
    "/testruns/{testRunId}": {
      "delete": {
        "tags": [
          "TestRun"
        ],
        "summary": "Delete a test run with given name. Test run name must be a valid URL character ^[a-z0-9_-]*$",
        "operationId": "TestRun_DeleteTestRun",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "testRunId",
            "description": "Unique identifier for load test run name, must be a valid URL character ^[a-z0-9_-]*$",
            "required": true,
            "type": "string",
            "maxLength": 50,
            "minLength": 2,
            "pattern": "^[a-z0-9_-]*$"
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "Api version",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "The test run is deleted"
          },
          "default": {
            "description": "*** Error Responses: ***\n\n * \"400\", \"InvalidHostOrResourceName\", \"Host name or domain is not valid\"\n\n * \"400\", \"RequiredTestRunId\", \"testRunId field is required\"\n\n* \"400\", \"InvalidTestRunId\", \"testRunId field should be valid\"\n\n * \"404\", \"TestRunNotFound\", \"test run not found with given identifier\"\n\n * \"500\", \"InternalServerError\", \"Unable to process the request, please retry\"",
            "schema": {
              "$ref": "#/definitions/ErrorResponseBody"
            },
            "headers": {
              "x-ms-error-code": {
                "description": "The error code for specific error that occurred.",
                "type": "string"
              }
            }
          }
        },
        "x-ms-examples": {
          "TestRun_DeleteTestRun_MaximumSet_Gen": {
            "$ref": "./examples/TestRun_DeleteTestRun_MaximumSet_Gen.json"
          },
          "TestRun_DeleteTestRun_MinimumSet_Gen": {
            "$ref": "./examples/TestRun_DeleteTestRun_MinimumSet_Gen.json"
          }
        }
      },
      "patch": {
        "tags": [
          "TestRun"
        ],
        "summary": "Create and start new test run of the given name, test run name must be a valid URL character ^[a-z0-9_-]*$",
        "operationId": "TestRun_CreateAndUpdateTest",
        "consumes": [
          "application/merge-patch+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "testRunId",
            "description": "Unique identifier for load test run name, must be a valid URL character ^[a-z0-9_-]*$",
            "required": true,
            "type": "string",
            "maxLength": 50,
            "minLength": 2,
            "pattern": "^[a-z0-9_-]*$"
          },
          {
            "in": "query",
            "name": "oldTestRunId",
            "description": "Existing testRunId to re run new test",
            "type": "string"
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "Api version",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Load test run model",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TestRunModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The test run is updated",
            "schema": {
              "$ref": "#/definitions/TestRunModel"
            }
          },
          "default": {
            "description": "*** Error Responses: ***\n\n * \"400\", \"InvalidHostOrResourceName\", \"Host name or domain is not valid\"\n\n * \"400\", \"RequiredTestRunId\", \"testRunId field is required\"\n\n * \"400\", \"InvalidTestRunId\", \"testRunId field should be valid\"\n\n * \"500\", \"InternalServerError\", \"Unable to process the request, please retry\" * \"400\", \"ResourceMetadataNotFound\", \"Resource metadata not found\"\n\n  * \"400\", \"ManagedIdentityNotEnabled\", \"Managed identity is not enabled over resource\"\n\n  * \"400\", \"SecretNotFound\", \"Unable to find the given secret\"\n\n ",
            "schema": {
              "$ref": "#/definitions/ErrorResponseBody"
            },
            "headers": {
              "x-ms-error-code": {
                "description": "The error code for specific error that occurred.",
                "type": "string"
              }
            }
          }
        },
        "x-ms-examples": {
          "TestRun_CreateAndUpdateTest_MaximumSet_Gen": {
            "$ref": "./examples/TestRun_CreateAndUpdateTest_MaximumSet_Gen.json"
          },
          "TestRun_CreateAndUpdateTest_MinimumSet_Gen": {
            "$ref": "./examples/TestRun_CreateAndUpdateTest_MinimumSet_Gen.json"
          }
        }
      },
      "get": {
        "tags": [
          "TestRun"
        ],
        "summary": "Get test run of given name.",
        "operationId": "TestRun_GetTestRun",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "testRunId",
            "description": "Unique identifier for load test run name, must be a valid URL character ^[a-z0-9_-]*$",
            "required": true,
            "type": "string",
            "maxLength": 50,
            "minLength": 2,
            "pattern": "^[a-z0-9_-]*$"
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "Api version",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested test run",
            "schema": {
              "$ref": "#/definitions/TestRunModel"
            }
          },
          "default": {
            "description": "*** Error Responses: ***\n\n * \"400\", \"InvalidHostOrResourceName\", \"Host name or domain is not valid\"\n\n * \"400\", \"RequiredTestRunId\", \"testRunId field is required\"\n\n * \"400\", \"InvalidTestRunId\", \"testRunId field should be valid\"\n\n * \"404\", \"TestRunNotFound\", \"test run not found with given identifier\"\n\n* \"500\", \"InternalServerError\", \"Unable to process the request, please retry\"",
            "schema": {
              "$ref": "#/definitions/ErrorResponseBody"
            },
            "headers": {
              "x-ms-error-code": {
                "description": "The error code for specific error that occurred.",
                "type": "string"
              }
            }
          }
        },
        "x-ms-examples": {
          "TestRun_GetTestRun_MaximumSet_Gen": {
            "$ref": "./examples/TestRun_GetTestRun_MaximumSet_Gen.json"
          },
          "TestRun_GetTestRun_MinimumSet_Gen": {
            "$ref": "./examples/TestRun_GetTestRun_MinimumSet_Gen.json"
          }
        }
      }
    },
    "/testruns/{testRunId}/files/{fileId}": {
      "get": {
        "tags": [
          "TestRun"
        ],
        "summary": "Get testrun file with given file name.",
        "operationId": "TestRun_GetTestRunFile",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "testRunId",
            "description": "Unique identifier for load test run name, must be a valid URL character ^[a-z0-9_-]*$",
            "required": true,
            "type": "string",
            "maxLength": 50,
            "minLength": 2,
            "pattern": "^[a-z0-9_-]*$"
          },
          {
            "in": "path",
            "name": "fileId",
            "description": "Unique identifier for test run file, must be a valid URL character ^[a-z0-9_-]*$",
            "required": true,
            "type": "string",
            "maxLength": 50,
            "minLength": 2,
            "pattern": "^[a-z0-9_-]*$"
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "Api version",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested testrun file url",
            "schema": {
              "$ref": "#/definitions/FileUrlPath"
            }
          },
          "default": {
            "description": "*** Error Responses: ***\n\n * \"400\", \"InvalidHostOrResourceName\", \"Host name or domain is not valid\"\n\n * \"400\", \"RequiredTestRunId\", \"testRunId field is required\"\n\n* \"400\", \"InvalidTestRunId\", \"testRunId field should be valid\"\n\n * \"400\", \"RequiredFileId\", \"fileId field is required\"\n\n * \"400\", \"InvalidFileId\", \"fileId field is not valid\"   \n\n * \"404\", \"TestRunNotFound\", \"test run not found with given identifier\"\n\n * \"404\", \"TestRunFileNotFound\", \"test run file not found\"\n\n * \"500\", \"InternalServerError\", \"Unable to process the request, please retry\"",
            "schema": {
              "$ref": "#/definitions/ErrorResponseBody"
            },
            "headers": {
              "x-ms-error-code": {
                "description": "The error code for specific error that occurred.",
                "type": "string"
              }
            }
          }
        },
        "x-ms-examples": {
          "TestRun_GetTestRunFile_MaximumSet_Gen": {
            "$ref": "./examples/TestRun_GetTestRunFile_MaximumSet_Gen.json"
          },
          "TestRun_GetTestRunFile_MinimumSet_Gen": {
            "$ref": "./examples/TestRun_GetTestRunFile_MinimumSet_Gen.json"
          }
        }
      }
    },
    "/testruns/sortAndFilter": {
      "get": {
        "tags": [
          "TestRun"
        ],
        "summary": "Get all test runs with given filters",
        "operationId": "TestRun_GetAppTestRunsSearch",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "orderBy",
            "description": "Sort on one of the field - status, displayName, executedDateTime in (field asc/desc) format. eg: displayName asc",
            "type": "string"
          },
          {
            "in": "query",
            "name": "nextLink",
            "description": "NextLink Token to get next page of response",
            "type": "string"
          },
          {
            "in": "query",
            "name": "search",
            "description": "Filter search based on searchable fields - description, executedUser.",
            "type": "string"
          },
          {
            "in": "query",
            "name": "testId",
            "description": "Unique identifier for load test name, must be a valid URL character ^[a-z0-9_-]*$",
            "type": "string",
            "pattern": "^[a-z0-9_-]*$"
          },
          {
            "in": "query",
            "name": "executionFrom",
            "description": "The end DateTime(Iso8601Literal format) of test-run execution time filter range.",
            "type": "string",
            "format": "date-time"
          },
          {
            "in": "query",
            "name": "executionTo",
            "description": "The start DateTime(Iso8601Literal format) of test-run execution time filter range.",
            "type": "string",
            "format": "date-time"
          },
          {
            "in": "query",
            "name": "status",
            "description": "Comma separated list of test run status, value can be -  \"ACCEPTED\", \"NOTSTARTED\",\"PROVISIONING\",\"PROVISIONED\",\"CONFIGURING\",\n\"CONFIGURED\",\"EXECUTING\",\"EXECUTED\",\"DEPROVISIONING\",\"DEPROVISIONED\",\"DONE\",\"CANCELLED\",\"FAILED\"",
            "type": "string"
          },
          {
            "in": "query",
            "name": "maxPageSize",
            "description": "No of results in response",
            "type": "integer",
            "format": "int32",
            "default": 50
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "Api version",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested test runs",
            "schema": {
              "$ref": "#/definitions/TestRunModelResourceList"
            }
          },
          "default": {
            "description": "*** Error Responses: ***\n\n * \"400\", \"InvalidHostOrResourceName\", \"Host name or domain is not valid\"\n\n * \"404\", \"TestRunNotFound\", \"test run not found with given identifier\"\n\n* \"500\", \"InternalServerError\", \"Unable to process the request, please retry\"",
            "schema": {
              "$ref": "#/definitions/ErrorResponseBody"
            },
            "headers": {
              "x-ms-error-code": {
                "description": "The error code for specific error that occurred.",
                "type": "string"
              }
            }
          }
        },
        "x-ms-examples": {
          "TestRun_GetAppTestRunsSearch_MaximumSet_Gen": {
            "$ref": "./examples/TestRun_GetAppTestRunsSearch_MaximumSet_Gen.json"
          },
          "TestRun_GetAppTestRunsSearch_MinimumSet_Gen": {
            "$ref": "./examples/TestRun_GetAppTestRunsSearch_MinimumSet_Gen.json"
          }
        }
      }
    },
    "/testruns/{testRunId}:stop": {
      "post": {
        "tags": [
          "TestRun"
        ],
        "summary": "Stop test run of given name.",
        "operationId": "TestRun_StopTestRun",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "testRunId",
            "description": "Unique identifier for load test run name, must be a valid URL character ^[a-z0-9_-]*$",
            "required": true,
            "type": "string",
            "maxLength": 50,
            "minLength": 2,
            "pattern": "^[a-z0-9_-]*$"
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "Api version",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested test run is stopped. Call GET /testruns/{testRunId} to check the status",
            "schema": {
              "$ref": "#/definitions/TestRunModel"
            }
          },
          "default": {
            "description": "*** Error Responses: ***\n\n * \"400\", \"InvalidHostOrResourceName\", \"Host name or domain is not valid\"\n\n* \"400\", \"TestRunAlreadyFinished\", \"Test run was already either finished or cancelled or failed\"\n\n* \"400\", \"RequiredTestRunId\", \"testRunId field is required\"\n\n * \"400\", \"InvalidTestRunId\", \"testRunId field should be valid\"\n\n * \"404\", \"TestRunNotFound\", \"test run not found with given identifier\"\n\n * \"500\", \"InternalServerError\", \"Unable to process the request, please retry\"",
            "schema": {
              "$ref": "#/definitions/ErrorResponseBody"
            },
            "headers": {
              "x-ms-error-code": {
                "description": "The error code for specific error that occurred.",
                "type": "string"
              }
            }
          }
        },
        "x-ms-examples": {
          "TestRun_StopTestRun_MaximumSet_Gen": {
            "$ref": "./examples/TestRun_StopTestRun_MaximumSet_Gen.json"
          },
          "TestRun_StopTestRun_MinimumSet_Gen": {
            "$ref": "./examples/TestRun_StopTestRun_MinimumSet_Gen.json"
          }
        }
      }
    },
    "/testruns/{testRunId}/clientMetrics": {
      "post": {
        "tags": [
          "TestRun"
        ],
        "summary": "Get all client metrics for a given load test run",
        "operationId": "TestRun_GetTestRunClientMetrics",
        "consumes": [
          "application/json;odata.metadata=minimal;odata.streaming=true",
          "application/json;odata.metadata=minimal;odata.streaming=false",
          "application/json;odata.metadata=minimal",
          "application/json;odata.metadata=full;odata.streaming=true",
          "application/json;odata.metadata=full;odata.streaming=false",
          "application/json;odata.metadata=full",
          "application/json;odata.metadata=none;odata.streaming=true",
          "application/json;odata.metadata=none;odata.streaming=false",
          "application/json;odata.metadata=none",
          "application/json;odata.streaming=true",
          "application/json;odata.streaming=false",
          "application/json",
          "application/xml",
          "application/prs.odatatestxx-odata",
          "application/json-patch+json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "testRunId",
            "description": "Unique identifier for load test run name, must be a valid URL character ^[a-z0-9_-]*$",
            "required": true,
            "type": "string",
            "maxLength": 50,
            "minLength": 2,
            "pattern": "^[a-z0-9_-]*$"
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "Api version",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Client metrics request model",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ClientMetricsRequestModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested client metrics",
            "schema": {
              "$ref": "#/definitions/ClientMetricsResults"
            }
          },
          "default": {
            "description": "*** Error Responses: ***\n\n * \"400\", \"InvalidHostOrResourceName\", \"Host name or domain is not valid\"\n\n * \"400\", \"RequiredTestRunId\", \"testRunId field is required\"\n\n * \"400\", \"InvalidTestRunId\", \"testRunId field should be valid\"\n\n * \"404\", \"TestRunNotFound\", \"test run not found with given identifier\"\n\n * \"500\", \"InternalServerError\", \"Unable to process the request, please retry\"",
            "schema": {
              "$ref": "#/definitions/ErrorResponseBody"
            },
            "headers": {
              "x-ms-error-code": {
                "description": "The error code for specific error that occurred.",
                "type": "string"
              }
            }
          }
        },
        "x-ms-examples": {
          "TestRun_GetTestRunClientMetrics_MaximumSet_Gen": {
            "$ref": "./examples/TestRun_GetTestRunClientMetrics_MaximumSet_Gen.json"
          },
          "TestRun_GetTestRunClientMetrics_MinimumSet_Gen": {
            "$ref": "./examples/TestRun_GetTestRunClientMetrics_MinimumSet_Gen.json"
          }
        }
      }
    },
    "/testruns/{testRunId}/clientMetricsFilters": {
      "get": {
        "tags": [
          "TestRun"
        ],
        "summary": "Get all client metrics supported filters list for a given load test run",
        "operationId": "TestRun_GetTestRunClientMetricsFilters",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "testRunId",
            "description": "Unique identifier for load test run name, must be a valid URL character ^[a-z0-9_-]*$",
            "required": true,
            "type": "string",
            "maxLength": 50,
            "minLength": 2,
            "pattern": "^[a-z0-9_-]*$"
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "Api version",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested client metrics filters",
            "schema": {
              "$ref": "#/definitions/ClientMetricsFilters"
            }
          },
          "default": {
            "description": "***Error Responses: ***\n\n* \"400\", \"InvalidHostOrResourceName\", \"Host name or domain is not valid\"\n\n * \"400\", \"InvalidTestRunId\", \"testRunId field should be valid\"\n\n * \"400\", \"RequiredTestRunId\", \"testRunId field is required\"  * \"404\", \"TestRunNotFound\", \"test run not found with given identifier\"\n\n  * \"500\", \"InternalServerError\", \"Unable to process the request, please retry\"",
            "schema": {
              "$ref": "#/definitions/ErrorResponseBody"
            },
            "headers": {
              "x-ms-error-code": {
                "description": "The error code for specific error that occurred.",
                "type": "string"
              }
            }
          }
        },
        "x-ms-examples": {
          "TestRun_GetTestRunClientMetricsFilters_MaximumSet_Gen": {
            "$ref": "./examples/TestRun_GetTestRunClientMetricsFilters_MaximumSet_Gen.json"
          },
          "TestRun_GetTestRunClientMetricsFilters_MinimumSet_Gen": {
            "$ref": "./examples/TestRun_GetTestRunClientMetricsFilters_MinimumSet_Gen.json"
          }
        }
      }
    }
  },
  "definitions": {
    "AppComponent": {
      "description": "The Azure resource object (Refer azure generic resource model : https://docs.microsoft.com/en-us/rest/api/resources/resources/get-by-id#genericresource)",
      "type": "object",
      "properties": {
        "resourceId": {
          "description": "[ReadOnly] Fully qualified resource Id e.g subscriptions/{subId}/resourceGroups/{rg}/providers/Microsoft.LoadTestService/loadtests/{resName}",
          "type": "string"
        },
        "resourceName": {
          "description": "Azure resource name",
          "type": "string"
        },
        "resourceType": {
          "description": "Azure resource type",
          "type": "string"
        },
        "displayName": {
          "description": "[ReadOnly] Azure resource display name",
          "type": "string"
        },
        "resourceGroup": {
          "description": "[ReadOnly] Resource group name of Azure resource",
          "type": "string"
        },
        "subscriptionId": {
          "description": "[ReadOnly] Subscription Id of Azure resource",
          "type": "string"
        },
        "kind": {
          "description": "Kind of Azure resource type",
          "type": "string"
        }
      }
    },
    "AppComponentsMap": {
      "description": "App components model",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "resourceId": {
          "description": "[ReadOnly] Load test resource id",
          "type": "string"
        },
        "testId": {
          "description": "[Required if testRunId is not given] Load test unique identifier",
          "type": "string"
        },
        "testRunId": {
          "description": "[Required if testId is not given] Load test run unique identifier",
          "type": "string"
        },
        "name": {
          "description": "[ReadOnly] AppComponent name",
          "type": "string"
        },
        "value": {
          "description": "AppComponents Map { resource id (Fully qualified resource Id e.g subscriptions/{subId}/resourceGroups/{rg}/providers/Microsoft.LoadTestService/loadtests/{resName}) : resource object } ",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/AppComponent"
          }
        }
      }
    },
    "ErrorResponseBody": {
      "description": "The definition of an error object.",
      "type": "object",
      "properties": {
        "code": {
          "description": "The error code.",
          "type": "string"
        },
        "message": {
          "description": "The error message.",
          "type": "string"
        },
        "target": {
          "description": "The error target.",
          "type": "string"
        },
        "details": {
          "description": "Additional details and inner errors.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ErrorResponseBody"
          }
        }
      }
    },
    "FileValidateResponse": {
      "description": "File validation response",
      "type": "object",
      "properties": {
        "valid": {
          "description": "File is valid or not",
          "type": "boolean"
        },
        "error": {
          "description": "In case file is not valid then error message",
          "type": "string"
        }
      }
    },
    "ServerMetricName": {
      "description": "Metric name object",
      "required": [
        "localizedValue",
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Metric name value",
          "type": "string"
        },
        "localizedValue": {
          "description": "Metric localized name",
          "type": "string"
        }
      }
    },
    "ResourceMetricModel": {
      "description": "Associated metric definition for particular metrics of the azure resource ( Refer : https://docs.microsoft.com/en-us/rest/api/monitor/metric-definitions/list#metricdefinition)",
      "required": [
        "aggregation",
        "metricnamespace",
        "name",
        "resourceId",
        "resourceType"
      ],
      "type": "object",
      "properties": {
        "id": {
          "description": "[ReadOnly]  Unique identifier for metric",
          "type": "string"
        },
        "resourceId": {
          "description": "Azure resource id",
          "type": "string"
        },
        "metricnamespace": {
          "description": "Metric name space",
          "type": "string"
        },
        "displayDescription": {
          "description": "Metric description",
          "type": "string"
        },
        "name": {
          "$ref": "#/definitions/ServerMetricName"
        },
        "aggregation": {
          "description": "Metric aggregation",
          "type": "string"
        },
        "unit": {
          "description": "Metric unit",
          "type": "string"
        },
        "resourceType": {
          "description": "Azure resource type",
          "type": "string"
        }
      }
    },
    "ServerMetricsModel": {
      "description": "Server metrics config model",
      "type": "object",
      "properties": {
        "name": {
          "description": "[ReadOnly] Server metrics config name",
          "type": "string"
        },
        "testId": {
          "description": "[Required if testRunId is not given] Load test unique identifier",
          "type": "string"
        },
        "testRunId": {
          "description": "[Required if testId is not given] Load test run unique identifier",
          "type": "string"
        },
        "metrics": {
          "description": "Metrics map {metric id : metrics object} (Refer : https://docs.microsoft.com/en-us/rest/api/monitor/metric-definitions/list#metricdefinition for metric id)",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/ResourceMetricModel"
          }
        }
      }
    },
    "LocalizedName": {
      "type": "object",
      "properties": {
        "value": {
          "type": "string"
        },
        "localizedValue": {
          "type": "string"
        }
      }
    },
    "DefaultServerMetricsConfigModel": {
      "description": "Metrics config model",
      "type": "object",
      "properties": {
        "metricnamespace": {
          "type": "string"
        },
        "aggregation": {
          "type": "string"
        },
        "name": {
          "$ref": "#/definitions/LocalizedName"
        },
        "unit": {
          "type": "string"
        },
        "displayDescription": {
          "type": "string"
        }
      }
    },
    "DefaultServerMetricsConfigListModel": {
      "description": "Default server metrics config",
      "type": "object",
      "properties": {
        "defaultMetrics": {
          "description": "Default metrics map {resourceType : list of metrics config} (Refer for metrics structure: https://docs.microsoft.com/en-us/rest/api/monitor/metric-definitions/list#metricdefinition)",
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/DefaultServerMetricsConfigModel"
            }
          }
        }
      }
    },
    "SupportedResourceType": {
      "description": "Supported azure resource types for app component like Microsoft.LoadTestService/loadtests, Microsoft.ClassicCompute, Microsoft.ClassicStorage etc. (Refer for full list of available resource types in azure : https://docs.microsoft.com/en-us/azure/azure-resource-manager/management/resource-providers-and-types, some of them we are supporting for server side metrics configuration)",
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "LoadTestConfig": {
      "description": "The load test configuration",
      "type": "object",
      "properties": {
        "engineInstances": {
          "format": "int32",
          "description": "The number of engine instances to execute load test. Supported values are in range of 1-50. Required for creating a new Test.",
          "type": "integer"
        }
      }
    },
    "PassFailMetric": {
      "type": "object",
      "properties": {
        "clientmetric": {
          "description": "The client metric on which the criteria should be applied. Allowed values - ‘response_time_ms’ , ‘latency’, ‘error’ ",
          "type": "string"
        },
        "aggregate": {
          "description": "The aggregation function to be applied on the client metric. Allowed functions - ‘percentage’ - for error metric , ‘avg’ - for response_time_ms and latency metric ",
          "type": "string"
        },
        "condition": {
          "description": "The comparison operator. Supported types ‘>’ ",
          "type": "string"
        },
        "value": {
          "format": "double",
          "description": "The value to compare with the client metric. Allowed values - ‘error : [0.0 , 100.0] unit- % ’, response_time_ms and latency : any integer value unit- ms",
          "type": "number"
        },
        "action": {
          "description": "Either ‘stop’ or ‘continue’ after the threshold is met. Default is ‘continue’",
          "type": "string"
        },
        "actualValue": {
          "format": "double",
          "description": "[ReadOnly] The actual value of the client metric for the test run ",
          "type": "number"
        },
        "result": {
          "description": "[ReadOnly] Outcome of the testRun. possible outcome - ‘passed’ , ‘failed’ , ‘undetermined’ ",
          "type": "string"
        }
      }
    },
    "PassFailCriteria": {
      "description": "Pass fail criteria for a test",
      "type": "object",
      "properties": {
        "passFailMetrics": {
          "description": "Map of id and pass fail metrics { id  : pass fail metrics }",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/PassFailMetric"
          }
        }
      }
    },
    "FileUrl": {
      "description": "FileUrl Model",
      "type": "object",
      "properties": {
        "url": {
          "description": "File url",
          "type": "string"
        },
        "fileId": {
          "description": "File unique identifier",
          "type": "string"
        },
        "filename": {
          "description": "Name of the file",
          "type": "string"
        },
        "expireTime": {
          "format": "date-time",
          "description": "Expiry time of the file",
          "type": "string"
        }
      }
    },
    "InputTestArtifacts": {
      "description": "[ReadOnly]The input artifacts for the test",
      "type": "object",
      "properties": {
        "configUrl": {
          "$ref": "#/definitions/FileUrl"
        },
        "testScriptUrl": {
          "$ref": "#/definitions/FileUrl"
        },
        "inputArtifactsZipFileurl": {
          "$ref": "#/definitions/FileUrl"
        },
        "additionalUrls": {
          "description": "[ReadOnly]The input artifacts file { name : url } map for the test run",
          "type": "array",
          "items": {
            "$ref": "#/definitions/FileUrl"
          }
        }
      }
    },
    "SecretMetadata": {
      "type": "object",
      "properties": {
        "value": {
          "description": "The value of the secret. of type== akv-secret-uri or secret-value",
          "type": "string"
        },
        "type": {
          "description": "Type of secret. eg. AKV_SECRET_URI/SECRET_VALUE",
          "type": "string"
        }
      }
    },
    "TestModel": {
      "description": "Load test model",
      "type": "object",
      "properties": {
        "testId": {
          "description": "[ReadOnly] Unique test name as identifier",
          "maxLength": 50,
          "minLength": 2,
          "type": "string"
        },
        "description": {
          "description": "The test description",
          "maxLength": 100,
          "type": "string"
        },
        "displayName": {
          "description": "Display name of a test ",
          "maxLength": 50,
          "minLength": 2,
          "type": "string"
        },
        "resourceId": {
          "description": "[ReadOnly] Fully qualified resource Id e.g /subscriptions/{subId}/resourceGroups/{rg}/providers/Microsoft.LoadTestService/loadtests/{resName}",
          "type": "string"
        },
        "loadTestConfig": {
          "$ref": "#/definitions/LoadTestConfig"
        },
        "passFailCriteria": {
          "$ref": "#/definitions/PassFailCriteria"
        },
        "createdDateTime": {
          "format": "date-time",
          "description": "[ReadOnly] The created DateTime(Iso8601Literal format) of the test model",
          "type": "string"
        },
        "createdBy": {
          "description": "[ReadOnly] The user that created the test model",
          "type": "string"
        },
        "lastModifiedDateTime": {
          "format": "date-time",
          "description": "[ReadOnly] The last Modified DateTime(Iso8601Literal format) of the test model",
          "type": "string"
        },
        "lastModifiedBy": {
          "description": "[ReadOnly] The user that last modified the test model",
          "type": "string"
        },
        "inputArtifacts": {
          "$ref": "#/definitions/InputTestArtifacts"
        },
        "secrets": {
          "description": "Secrets of higher importance , which are stored in a key-vault typically. Allowed secret type: AKV_SECRET_URI",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/SecretMetadata"
          }
        },
        "environmentVariables": {
          "description": "Secrets of relatively lesser importance , which are defined as a set of <name,value> pairs.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "subnetId": {
          "description": "Subnet ID on which the load test instances should run",
          "type": "string"
        }
      }
    },
    "FileUrlPath": {
      "type": "object",
      "properties": {
        "id": {
          "description": "Path of the file",
          "type": "string"
        },
        "url": {
          "description": "url of the file",
          "type": "string"
        },
        "expireTime": {
          "format": "date-time",
          "description": "Expiry time of the file",
          "type": "string"
        }
      }
    },
    "FileUrlList": {
      "type": "object",
      "properties": {
        "value": {
          "description": "List of file urls",
          "type": "array",
          "items": {
            "$ref": "#/definitions/FileUrl"
          }
        }
      }
    },
    "OutputTestArtifacts": {
      "description": "The output artifacts for the test run",
      "required": [
        "logsUrl",
        "resultUrl"
      ],
      "type": "object",
      "properties": {
        "resultUrl": {
          "$ref": "#/definitions/FileUrl"
        },
        "logsUrl": {
          "$ref": "#/definitions/FileUrl"
        }
      }
    },
    "TestArtifacts": {
      "required": [
        "inputArtifacts"
      ],
      "type": "object",
      "properties": {
        "inputArtifacts": {
          "$ref": "#/definitions/InputTestArtifacts"
        },
        "outputArtifacts": {
          "$ref": "#/definitions/OutputTestArtifacts"
        }
      }
    },
    "TestRunStatisticsModel": {
      "description": "[Readonly] Test run statistics",
      "type": "object",
      "properties": {
        "transaction": {
          "description": "[Readonly] Transaction name",
          "type": "string"
        },
        "sampleCount": {
          "format": "double",
          "description": "[Readonly] Sampler count",
          "type": "number"
        },
        "errorCount": {
          "format": "double",
          "description": "[Readonly] Error count",
          "type": "number"
        },
        "errorPct": {
          "format": "double",
          "description": "[Readonly] Error percentage",
          "type": "number"
        },
        "meanResTime": {
          "format": "double",
          "description": "[Readonly] Mean response time",
          "type": "number"
        },
        "medianResTime": {
          "format": "double",
          "description": "[Readonly] Median response time",
          "type": "number"
        },
        "maxResTime": {
          "format": "double",
          "description": "[Readonly] Max response time",
          "type": "number"
        },
        "minResTime": {
          "format": "double",
          "description": "[Readonly] Minimum response time",
          "type": "number"
        },
        "pct1ResTime": {
          "format": "double",
          "description": "[Readonly] 90 percentile response time",
          "type": "number"
        },
        "pct2ResTime": {
          "format": "double",
          "description": "[Readonly] 95 percentile response time",
          "type": "number"
        },
        "pct3ResTime": {
          "format": "double",
          "description": "[Readonly] 99 percentile response time",
          "type": "number"
        },
        "throughput": {
          "format": "double",
          "description": "[Readonly] Throughput",
          "type": "number"
        },
        "receivedKBytesPerSec": {
          "format": "double",
          "description": "[Readonly] Received network bytes",
          "type": "number"
        },
        "sentKBytesPerSec": {
          "format": "double",
          "description": "[Readonly] Send network bytes",
          "type": "number"
        }
      }
    },
    "TestRunModel": {
      "description": "Load test run model",
      "type": "object",
      "properties": {
        "testRunId": {
          "description": "[ReadOnly] Unique test run name as identifier",
          "type": "string"
        },
        "displayName": {
          "description": "Display name of a testRun ",
          "maxLength": 50,
          "minLength": 2,
          "type": "string"
        },
        "testId": {
          "description": "Associated testId",
          "maxLength": 50,
          "minLength": 2,
          "type": "string"
        },
        "resourceId": {
          "description": "[ReadOnly] Load test resource Id",
          "type": "string"
        },
        "description": {
          "description": "The test run description",
          "maxLength": 100,
          "type": "string"
        },
        "status": {
          "description": "[ReadOnly] The test run status",
          "type": "string"
        },
        "startDateTime": {
          "format": "date-time",
          "description": "[ReadOnly] The test run start DateTime(Iso8601Literal format)",
          "type": "string"
        },
        "endDateTime": {
          "format": "date-time",
          "description": "[ReadOnly] The test run end DateTime(Iso8601Literal format)",
          "type": "string"
        },
        "loadTestConfig": {
          "$ref": "#/definitions/LoadTestConfig"
        },
        "testResult": {
          "description": "[ReadOnly] Test result for pass/Fail criteria used during the test run. possible outcome - ‘Passed’ , ‘Failed’ , ‘Not Applicable’",
          "type": "string"
        },
        "passFailCriteria": {
          "$ref": "#/definitions/PassFailCriteria"
        },
        "testArtifacts": {
          "$ref": "#/definitions/TestArtifacts"
        },
        "executedDateTime": {
          "format": "date-time",
          "description": "[ReadOnly] Test run initiated time",
          "type": "string"
        },
        "vusers": {
          "format": "int32",
          "description": "[ReadOnly] No of virtual users, for which test has been run",
          "type": "integer"
        },
        "testRunStatistics": {
          "description": "[ReadOnly] Testrun statistics",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/TestRunStatisticsModel"
          }
        },
        "createdDateTime": {
          "format": "date-time",
          "description": "[ReadOnly] The created DateTime(Iso8601Literal format) of the test run",
          "type": "string"
        },
        "createdBy": {
          "description": "[ReadOnly] The user that created the test run",
          "type": "string"
        },
        "lastModifiedDateTime": {
          "format": "date-time",
          "description": "[ReadOnly] The last updated  DateTime(Iso8601Literal format) of the test run",
          "type": "string"
        },
        "lastModifiedBy": {
          "description": "[ReadOnly] The user that updated the test run",
          "type": "string"
        },
        "portalUrl": {
          "description": "[ReadOnly] Portal url ",
          "type": "string"
        },
        "secrets": {
          "description": "Secrets of higher importance , which are stored in a key-vault typically. Allowed secret types: AKV_SECRET_URI/SECRET_VALUE",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/SecretMetadata"
          }
        },
        "environmentVariables": {
          "description": "Secrets of relatively lesser importance , which are defined as a set of <name,value> pairs.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "duration": {
          "format": "int64",
          "description": "[ReadOnly] Test run duration in milliseconds",
          "type": "integer"
        },
        "subnetId": {
          "description": "[ReadOnly] Subnet ID on which the load test instances should run",
          "type": "string"
        }
      }
    },
    "TestRunModelResourceList": {
      "description": "List of Resources",
      "type": "object",
      "properties": {
        "value": {
          "description": "List of Resources",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TestRunModel"
          }
        },
        "continuationToken": {
          "description": "Continuation token for list of resources in case of paginated results, if applicable",
          "type": "string"
        }
      }
    },
    "ClientMetricsRequestModel": {
      "description": "Client metrics request payload",
      "required": [
        "endTime",
        "startTime"
      ],
      "type": "object",
      "properties": {
        "requestSamplers": {
          "description": "List of request samplers",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "errors": {
          "description": "List of errors",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "percentiles": {
          "description": "List of percentiles values for response time, supported values 50,90,99,95",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "groupByInterval": {
          "description": "For test duration less than 10 minutes group by time interval can be any one of 5s,10s,1m,5m.\\n\\nFor test duration greater than 10 minutes, group by time interval can be any one of 1m,5m,1h",
          "type": "string"
        },
        "startTime": {
          "format": "date-time",
          "description": "Start time",
          "type": "string"
        },
        "endTime": {
          "format": "date-time",
          "description": "End time",
          "type": "string"
        }
      }
    },
    "TimeSeries": {
      "type": "object",
      "properties": {
        "timestamp": {
          "format": "date-time",
          "description": "Timestamp(Iso8601Literal format)",
          "type": "string"
        },
        "value": {
          "format": "double",
          "description": "Value at timestamp",
          "type": "number"
        }
      }
    },
    "Series": {
      "type": "object",
      "properties": {
        "activeUsers": {
          "description": "Active users time series data",
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TimeSeries"
            }
          }
        },
        "responseTime": {
          "description": "Response time, time series data",
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TimeSeries"
            }
          }
        },
        "throughput": {
          "description": "Throughput time series data",
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TimeSeries"
            }
          }
        },
        "errors": {
          "description": "Errors time series data",
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TimeSeries"
            }
          }
        }
      }
    },
    "ClientMetricsResults": {
      "type": "object",
      "properties": {
        "testRunId": {
          "description": "Test run name for which client metrics results is required.",
          "type": "string"
        },
        "timeSeries": {
          "$ref": "#/definitions/Series"
        }
      }
    },
    "Filters": {
      "type": "object",
      "properties": {
        "requestSamplerValues": {
          "description": "List of request sampler for the test run, for which client metrics can be filtered",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "errorFiltersValues": {
          "description": "List of errors occurred for the test run, for which client metrics can be filtered",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "TimeRange": {
      "type": "object",
      "properties": {
        "startTime": {
          "format": "date-time",
          "description": "start DateTime(Iso8601Literal format) for the requested client metrics filter",
          "type": "string"
        },
        "endTime": {
          "format": "date-time",
          "description": "end DateTime(Iso8601Literal format) for the requested client metrics filter",
          "type": "string"
        }
      }
    },
    "ClientMetricsFilters": {
      "type": "object",
      "properties": {
        "testRunId": {
          "description": "Test run name for which client metrics filters is required.",
          "type": "string"
        },
        "filters": {
          "$ref": "#/definitions/Filters"
        },
        "timeRange": {
          "$ref": "#/definitions/TimeRange"
        }
      }
    }
  },
  "securityDefinitions": {
    "Bearer": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header",
      "description": "JWT Authorization header using the Bearer scheme."
    }
  },
  "security": [
    {
      "Bearer": []
    }
  ]
}