import "@typespec/rest";
import "@typespec/http";
import "@azure-tools/typespec-azure-core";
import "@azure-tools/typespec-azure-resource-manager";

using TypeSpec.Rest;
using TypeSpec.Http;
using Azure.ResourceManager;

namespace Azure.ResourceManager.LoadTesting;

interface Operations extends Azure.ResourceManager.Operations {}

enum Origin {
  user,
  system,
  `user,system`,
}

enum ActionType {
  Internal,
}

enum ResourceState {
  Succeeded,
  Failed,
  Canceled,
  Deleted,
}

enum CreatedByType {
  User,
  Application,
  ManagedIdentity,
  Key,
}

enum Type {
  SystemAssigned,
  UserAssigned,
}

enum ManagedServiceIdentityType {
  None,
  SystemAssigned,
  UserAssigned,
  `SystemAssigned,UserAssigned`,
}

@doc("Quota bucket resource properties.")
model QuotaResourceProperties {
  @doc("Current quota limit of the quota bucket.")
  limit?: int32;

  @doc("Current quota usage of the quota bucket.")
  usage?: int32;

  @doc("Resource provisioning state.")
  @visibility("read")
  provisioningState?: ResourceState;
}

@doc("Request object of new quota for a quota bucket.")
model QuotaBucketRequest {
  ...Resource;

  @doc("New quota request request properties.")
  properties?: QuotaBucketRequestProperties;
}

@doc("New quota request request properties.")
model QuotaBucketRequestProperties {
  @doc("Current quota usage of the quota bucket.")
  currentUsage?: int32;

  @doc("Current quota limit of the quota bucket.")
  currentQuota?: int32;

  @doc("New quota limit of the quota bucket.")
  newQuota?: int32;

  @doc("Dimensions for new quota request.")
  dimensions?: QuotaBucketRequestPropertiesDimensions;
}

@doc("Dimensions for new quota request.")
model QuotaBucketRequestPropertiesDimensions {
  @doc("Subscription Id dimension for new quota request of the quota bucket.")
  @minLength(1)
  subscriptionId?: string;

  @doc("Location dimension for new quota request of the quota bucket.")
  @minLength(1)
  location?: string;
}

@doc("Check quota availability response object.")
model CheckQuotaAvailabilityResponse {
  ...Resource;

  @doc("Check quota availability response properties.")
  properties?: CheckQuotaAvailabilityResponseProperties;
}

@doc("Check quota availability response properties.")
model CheckQuotaAvailabilityResponseProperties {
  @doc("True/False indicating whether the quota request be granted based on availability.")
  isAvailable?: boolean;

  @doc("Message indicating additional details to add to quota support request.")
  availabilityStatus?: string;
}

@doc("LoadTest resource properties.")
model LoadTestProperties {
  @doc("Description of the resource.")
  @maxLength(512)
  description?: string;

  @doc("Resource provisioning state.")
  @visibility("read")
  provisioningState?: ResourceState;

  @doc("Resource data plane URI.")
  @visibility("read")
  @maxLength(2083)
  dataPlaneURI?: string;

  @doc("CMK Encryption property.")
  encryption?: EncryptionProperties;
}

@doc("Key and identity details for Customer Managed Key encryption of load test resource")
model EncryptionProperties {
  @doc("All identity configuration for Customer-managed key settings defining which identity should be used to auth to Key Vault.")
  identity?: EncryptionPropertiesIdentity;

  @doc("key encryption key Url, versioned. Ex: https://contosovault.vault.azure.net/keys/contosokek/562a4bb76b524a1493a6afe8e536ee78 or https://contosovault.vault.azure.net/keys/contosokek.")
  keyUrl?: string;
}

@doc("All identity configuration for Customer-managed key settings defining which identity should be used to auth to Key Vault.")
model EncryptionPropertiesIdentity {
  @doc("Managed identity type to use for accessing encryption key Url")
  @projectedName("json", "type")
  identityType?: Type;

  @doc("user assigned identity to use for accessing key encryption key Url. Ex: /subscriptions/fa5fc227-a624-475e-b696-cdd604c735bc/resourceGroups/<resource group>/providers/Microsoft.ManagedIdentity/userAssignedIdentities/myId")
  resourceId?: string;
}

@doc("User assigned identity properties")
model UserAssignedIdentity {
  @doc("The principal ID of the assigned identity.")
  @visibility("read")
  principalId?: string;

  @doc("The client ID of the assigned identity.")
  @visibility("read")
  clientId?: string;
}

@doc("Values returned by the List operation.")
model OutboundEnvironmentEndpointCollection
  is Azure.Core.Page<OutboundEnvironmentEndpoint>;

@doc("A collection of related endpoints from the same service for which the Batch service requires outbound access.")
model OutboundEnvironmentEndpoint {
  @doc("The type of service that Azure Load Testing connects to.")
  @visibility("read")
  category?: string;

  @doc("The endpoints for this service to which the Batch service makes outbound calls.")
  @visibility("read")
  endpoints?: EndpointDependency[];
}

@doc("A domain name and connection details used to access a dependency.")
model EndpointDependency {
  @doc("The domain name of the dependency. Domain names may be fully qualified or may contain a * wildcard.")
  @visibility("read")
  domainName?: string;

  @doc("Human-readable supplemental information about the dependency and when it is applicable.")
  @visibility("read")
  description?: string;

  @doc("The list of connection details for this endpoint.")
  @visibility("read")
  endpointDetails?: EndpointDetail[];
}

@doc("Details about the connection between the Batch service and the endpoint.")
model EndpointDetail {
  @doc("The port an endpoint is connected to.")
  @visibility("read")
  port?: int32;
}
