{
  "swagger": "2.0",
  "info": {
    "version": "v1",
    "title": "Microsoft.Azure.FDS.WebRole"
  },
  "host": "localhost",
  "schemes": [
    "https"
  ],
  "paths": {
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/HyperVSites/{siteName}/clusters/{clusterName}": {
      "get": {
        "tags": [
          "HyperVCluster"
        ],
        "summary": "Method to get a Hyper-V cluster.",
        "operationId": "HyperVCluster_GetCluster",
        "consumes": [
          
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription Id.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Resource group name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "siteName",
            "in": "path",
            "description": "Site name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "Cluster ARM name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/HyperVCluster"
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [
          "HyperVCluster"
        ],
        "summary": "Method to create or update a cluster in site.",
        "operationId": "HyperVCluster_PutCluster",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription Id.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Resource group name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "siteName",
            "in": "path",
            "description": "Site name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "Cluster ARM name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Put cluster body.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/HyperVCluster"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Azure-AsyncOperation": {
                "description": "Tracking URL for long running operation.",
                "type": "string"
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/HyperVSites/{siteName}/clusters": {
      "get": {
        "tags": [
          "HyperVCluster"
        ],
        "summary": "Method to get all clusters in a site.",
        "operationId": "HyperVCluster_GetAllClustersInSite",
        "consumes": [
          
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription Id.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Resource group name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "siteName",
            "in": "path",
            "description": "Site name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/HyperVClusterCollection"
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/HyperVSites/{siteName}/hosts/{hostName}": {
      "get": {
        "tags": [
          "HyperVHost"
        ],
        "summary": "Method to get a Hyper-V host.",
        "operationId": "HyperVHost_GetHost",
        "consumes": [
          
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription Id.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Resource group name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "siteName",
            "in": "path",
            "description": "Site name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "hostName",
            "in": "path",
            "description": "Host ARM name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/HyperVHost"
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [
          "HyperVHost"
        ],
        "summary": "Method to create or update a host in site.",
        "operationId": "HyperVHost_PutHost",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription Id.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Resource group name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "siteName",
            "in": "path",
            "description": "Site name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "hostName",
            "in": "path",
            "description": "Host ARM name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Put host body.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/HyperVHost"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Azure-AsyncOperation": {
                "description": "Tracking URL for long running operation.",
                "type": "string"
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/HyperVSites/{siteName}/hosts": {
      "get": {
        "tags": [
          "HyperVHost"
        ],
        "summary": "Method to get all hosts in a site.",
        "operationId": "HyperVHost_GetAllHostsInSite",
        "consumes": [
          
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription Id.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Resource group name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "siteName",
            "in": "path",
            "description": "Site name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/HyperVHostCollection"
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/HyperVSites/{siteName}/jobs/{jobName}": {
      "get": {
        "tags": [
          "HyperVJobs"
        ],
        "summary": "Method to get job.",
        "operationId": "HyperVJobs_GetJob",
        "consumes": [
          
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription Id.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Resource group name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "siteName",
            "in": "path",
            "description": "Site name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "jobName",
            "in": "path",
            "description": "Job ARM name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/HyperVJob"
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/HyperVSites/{siteName}/jobs": {
      "get": {
        "tags": [
          "HyperVJobs"
        ],
        "summary": "Method to get all jobs in a site.",
        "operationId": "HyperVJobs_GetAllJobsInSite",
        "consumes": [
          
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription Id.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Resource group name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "siteName",
            "in": "path",
            "description": "Site name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/HyperVJobCollection"
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/HyperVSites/{siteName}/machines/{machineName}": {
      "get": {
        "tags": [
          "HyperVMachines"
        ],
        "summary": "Method to get machine.",
        "operationId": "HyperVMachines_GetMachine",
        "consumes": [
          
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription Id.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Resource group name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "siteName",
            "in": "path",
            "description": "Site name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "machineName",
            "in": "path",
            "description": "Machine ARM name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/HyperVMachine"
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/HyperVSites/{siteName}/machines": {
      "get": {
        "tags": [
          "HyperVMachines"
        ],
        "summary": "Method to get machine.",
        "operationId": "HyperVMachines_GetAllMachinesInSite",
        "consumes": [
          
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription Id.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Resource group name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "siteName",
            "in": "path",
            "description": "Site name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Optional parameter for page size.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Optional parameter for continuation token.",
            "required": false,
            "type": "string"
          },
          {
            "name": "totalRecordCount",
            "in": "query",
            "description": "Total record count.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/HyperVMachineCollection"
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/HyperVSites/{siteName}/machines/{machineName}/stop": {
      "post": {
        "tags": [
          "HyperVMachines"
        ],
        "summary": "Method to stop a machine.",
        "operationId": "HyperVMachines_StopMachine",
        "consumes": [
          
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription Id.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Resource group name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "siteName",
            "in": "path",
            "description": "Site name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "machineName",
            "in": "path",
            "description": "Machine ARM name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Azure-AsyncOperation": {
                "description": "Tracking URL for long running operation.",
                "type": "string"
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/HyperVSites/{siteName}/operationsstatus/{operationStatusName}": {
      "get": {
        "tags": [
          "HyperVOperationsStatus"
        ],
        "summary": "Method to get operation status.",
        "operationId": "HyperVOperationsStatus_GetOperationStatus",
        "consumes": [
          
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription Id.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Resource group name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "siteName",
            "in": "path",
            "description": "Site name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "operationStatusName",
            "in": "path",
            "description": "Operation status ARM name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/OperationStatus"
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/HyperVSites/{siteName}/runasaccounts/{accountName}": {
      "get": {
        "tags": [
          "HyperVRunAsAccounts"
        ],
        "summary": "Method to get run as account.",
        "operationId": "HyperVRunAsAccounts_GetRunAsAccount",
        "consumes": [
          
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription Id.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Resource group name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "siteName",
            "in": "path",
            "description": "Site name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "Run as account ARM name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/HyperVRunAsAccount"
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/HyperVSites/{siteName}/runasaccounts": {
      "get": {
        "tags": [
          "HyperVRunAsAccounts"
        ],
        "summary": "Method to get run as accounts.",
        "operationId": "HyperVRunAsAccounts_GetAllRunAsAccountsInSite",
        "consumes": [
          
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription Id.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Resource group name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "siteName",
            "in": "path",
            "description": "Site name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/HyperVRunAsAccountCollection"
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/HyperVSites/{siteName}": {
      "get": {
        "tags": [
          "HyperVSites"
        ],
        "summary": "Method to get a site.",
        "operationId": "HyperVSites_GetSite",
        "consumes": [
          
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription Id.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Resource group name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "siteName",
            "in": "path",
            "description": "Site name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/HyperVSite"
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [
          "HyperVSites"
        ],
        "summary": "Method to create or update a site.",
        "operationId": "HyperVSites_PutSite",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription Id.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Resource group name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "siteName",
            "in": "path",
            "description": "Site name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body with site details.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/HyperVSite"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/HyperVSite"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/HyperVSite"
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "HyperVSites"
        ],
        "summary": "Method to delete a site.",
        "operationId": "HyperVSites_DeleteSite",
        "consumes": [
          
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription Id.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Resource group name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "siteName",
            "in": "path",
            "description": "Site name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "NoContent"
          }
        },
        "deprecated": false
      },
      "patch": {
        "tags": [
          "HyperVSites"
        ],
        "summary": "Method to patch an existing site.",
        "operationId": "HyperVSites_PatchSite",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription Id.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Resource group name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "siteName",
            "in": "path",
            "description": "Site name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body with site details.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/HyperVSite"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/HyperVSite"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/HyperVSite"
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/HyperVSites/{siteName}/refresh": {
      "post": {
        "tags": [
          "HyperVSites"
        ],
        "summary": "Method to refresh a site.",
        "operationId": "HyperVSites_RefreshSite",
        "consumes": [
          
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription Id.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Resource group name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "siteName",
            "in": "path",
            "description": "Site name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Azure-AsyncOperation": {
                "description": "Tracking URL for long running operation.",
                "type": "string"
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/HyperVSites/{siteName}/usage": {
      "get": {
        "tags": [
          "HyperVSites"
        ],
        "summary": "Method to get site usage.",
        "operationId": "HyperVSites_GetSiteUsage",
        "consumes": [
          
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription Id.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Resource group name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "siteName",
            "in": "path",
            "description": "Site name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/HyperVSiteUsage"
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/HyperVSites/{siteName}/healthSummary": {
      "get": {
        "tags": [
          "HyperVSites"
        ],
        "summary": "Method to get site health summary.",
        "operationId": "HyperVSites_GetSiteHealthSummary",
        "consumes": [
          
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription Id.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Resource group name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "siteName",
            "in": "path",
            "description": "Site name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SiteHealthSummaryCollection"
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/VMwareSites/{siteName}/jobs/{jobName}": {
      "get": {
        "tags": [
          "Jobs"
        ],
        "summary": "Method to get job.",
        "operationId": "Jobs_GetJob",
        "consumes": [
          
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription Id.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Resource group name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "siteName",
            "in": "path",
            "description": "Site name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "jobName",
            "in": "path",
            "description": "Job ARM name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/VMwareJob"
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/VMwareSites/{siteName}/jobs": {
      "get": {
        "tags": [
          "Jobs"
        ],
        "summary": "Method to get all jobs in a site.",
        "operationId": "Jobs_GetAllJobsInSite",
        "consumes": [
          
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription Id.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Resource group name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "siteName",
            "in": "path",
            "description": "Site name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/VMwareJobCollection"
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/VMwareSites/{siteName}/machines/{machineName}": {
      "get": {
        "tags": [
          "Machines"
        ],
        "summary": "Method to get machine.",
        "operationId": "Machines_GetMachine",
        "consumes": [
          
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription Id.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Resource group name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "siteName",
            "in": "path",
            "description": "Site name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "machineName",
            "in": "path",
            "description": "Machine ARM name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/VMwareMachine"
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/VMwareSites/{siteName}/machines": {
      "get": {
        "tags": [
          "Machines"
        ],
        "summary": "Method to get machine.",
        "operationId": "Machines_GetAllMachinesInSite",
        "consumes": [
          
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription Id.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Resource group name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "siteName",
            "in": "path",
            "description": "Site name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Optional parameter for page size.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Optional parameter for continuation token.",
            "required": false,
            "type": "string"
          },
          {
            "name": "totalRecordCount",
            "in": "query",
            "description": "Total record count.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/VMwareMachineCollection"
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/VMwareSites/{siteName}/machines/{machineName}/stop": {
      "post": {
        "tags": [
          "Machines"
        ],
        "summary": "Method to stop a machine.",
        "operationId": "Machines_StopMachine",
        "consumes": [
          
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription Id.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Resource group name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "siteName",
            "in": "path",
            "description": "Site name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "machineName",
            "in": "path",
            "description": "Machine ARM name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Azure-AsyncOperation": {
                "description": "Tracking URL for long running operation.",
                "type": "string"
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/VMwareSites/{siteName}/machines/{machineName}/start": {
      "post": {
        "tags": [
          "Machines"
        ],
        "summary": "Method to start a machine.",
        "operationId": "Machines_StartMachine",
        "consumes": [
          
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription Id.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Resource group name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "siteName",
            "in": "path",
            "description": "Site name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "machineName",
            "in": "path",
            "description": "Machine ARM name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Azure-AsyncOperation": {
                "description": "Tracking URL for long running operation.",
                "type": "string"
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/VMwareSites/{siteName}/runasaccounts/{accountName}": {
      "get": {
        "tags": [
          "RunAsAccounts"
        ],
        "summary": "Method to get run as account.",
        "operationId": "RunAsAccounts_GetRunAsAccount",
        "consumes": [
          
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription Id.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Resource group name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "siteName",
            "in": "path",
            "description": "Site name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "Run as account ARM name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/VMwareRunAsAccount"
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/VMwareSites/{siteName}/runasaccounts": {
      "get": {
        "tags": [
          "RunAsAccounts"
        ],
        "summary": "Method to get run as accounts.",
        "operationId": "RunAsAccounts_GetAllRunAsAccountsInSite",
        "consumes": [
          
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription Id.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Resource group name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "siteName",
            "in": "path",
            "description": "Site name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/VMwareRunAsAccountCollection"
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/VMwareSites/{siteName}": {
      "get": {
        "tags": [
          "Sites"
        ],
        "summary": "Method to get a site.",
        "operationId": "Sites_GetSite",
        "consumes": [
          
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription Id.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Resource group name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "siteName",
            "in": "path",
            "description": "Site name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/VMwareSite"
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [
          "Sites"
        ],
        "summary": "Method to create or update a site.",
        "operationId": "Sites_PutSite",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription Id.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Resource group name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "siteName",
            "in": "path",
            "description": "Site name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body with site details.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VMwareSite"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/VMwareSite"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/VMwareSite"
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "Sites"
        ],
        "summary": "Method to delete a site.",
        "operationId": "Sites_DeleteSite",
        "consumes": [
          
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription Id.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Resource group name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "siteName",
            "in": "path",
            "description": "Site name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "NoContent"
          }
        },
        "deprecated": false
      },
      "patch": {
        "tags": [
          "Sites"
        ],
        "summary": "Method to update an existing site.",
        "operationId": "Sites_PatchSite",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription Id.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Resource group name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "siteName",
            "in": "path",
            "description": "Site name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body with site details.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VMwareSite"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/VMwareSite"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/VMwareSite"
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/VMwareSites/{siteName}/refresh": {
      "post": {
        "tags": [
          "Sites"
        ],
        "summary": "Method to refresh a site.",
        "operationId": "Sites_RefreshSite",
        "consumes": [
          
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription Id.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Resource group name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "siteName",
            "in": "path",
            "description": "Site name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Azure-AsyncOperation": {
                "description": "Tracking URL for long running operation.",
                "type": "string"
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/VMwareSites/{siteName}/usage": {
      "get": {
        "tags": [
          "Sites"
        ],
        "summary": "Method to get site usage.",
        "operationId": "Sites_GetSiteUsage",
        "consumes": [
          
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription Id.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Resource group name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "siteName",
            "in": "path",
            "description": "Site name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/VMwareSiteUsage"
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/VMwareSites/{siteName}/healthSummary": {
      "get": {
        "tags": [
          "Sites"
        ],
        "summary": "Method to get site health summary.",
        "operationId": "Sites_GetSiteHealthSummary",
        "consumes": [
          
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription Id.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Resource group name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "siteName",
            "in": "path",
            "description": "Site name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SiteHealthSummaryCollection"
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/VMwareSites/{siteName}/vcenters/{vcenterName}": {
      "get": {
        "tags": [
          "VCenter"
        ],
        "summary": "Method to get a vCenter.",
        "operationId": "VCenter_GetVCenter",
        "consumes": [
          
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription Id.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Resource group name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "siteName",
            "in": "path",
            "description": "Site name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "vcenterName",
            "in": "path",
            "description": "VCenter ARM name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/VCenter"
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [
          "VCenter"
        ],
        "summary": "Method to create or update a vCenter in site.",
        "operationId": "VCenter_PutVCenter",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription Id.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Resource group name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "siteName",
            "in": "path",
            "description": "Site name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "vcenterName",
            "in": "path",
            "description": "VCenter ARM name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Put vCenter body.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VCenter"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Azure-AsyncOperation": {
                "description": "Tracking URL for long running operation.",
                "type": "string"
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/VMwareSites/{siteName}/vcenters": {
      "get": {
        "tags": [
          "VCenter"
        ],
        "summary": "Method to get all vCenters in a site.",
        "operationId": "VCenter_GetAllVCentersInSite",
        "consumes": [
          
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription Id.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Resource group name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "siteName",
            "in": "path",
            "description": "Site name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/VCenterCollection"
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/VMwareSites/{siteName}/operationsstatus/{operationStatusName}": {
      "get": {
        "tags": [
          "VMwareOperationsStatus"
        ],
        "summary": "Method to get operation status.",
        "operationId": "VMwareOperationsStatus_GetOperationStatus",
        "consumes": [
          
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription Id.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Resource group name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "siteName",
            "in": "path",
            "description": "Site name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "operationStatusName",
            "in": "path",
            "description": "Operation status ARM name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/OperationStatus"
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/ImportSites/{siteName}/jobs/{jobName}": {
      "get": {
        "tags": [
          "ImportJobs"
        ],
        "summary": "Method to get job.",
        "operationId": "ImportJobs_GetJob",
        "consumes": [
          
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription Id.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Resource group name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "siteName",
            "in": "path",
            "description": "Site name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "jobName",
            "in": "path",
            "description": "Job ARM name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ImportJob"
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/ImportSites/{siteName}/jobs": {
      "get": {
        "tags": [
          "ImportJobs"
        ],
        "summary": "Method to get all jobs in a site.",
        "operationId": "ImportJobs_GetAllJobsInSite",
        "consumes": [
          
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription Id.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Resource group name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "siteName",
            "in": "path",
            "description": "Site name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ImportJobCollection"
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/ImportSites/{siteName}/machines/{machineName}": {
      "get": {
        "tags": [
          "ImportMachines"
        ],
        "summary": "Method to get machine.",
        "operationId": "ImportMachines_GetMachineAsync",
        "consumes": [
          
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription Id.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Resource group name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "siteName",
            "in": "path",
            "description": "Site name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "machineName",
            "in": "path",
            "description": "Machine ARM name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ImportMachine"
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "ImportMachines"
        ],
        "summary": "Method to delete a site.",
        "operationId": "ImportMachines_DeleteMachineAsync",
        "consumes": [
          
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription Id.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Resource group name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "siteName",
            "in": "path",
            "description": "Site name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "machineName",
            "in": "path",
            "description": "The machine to be deleted.",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "NoContent"
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/ImportSites/{siteName}/machines": {
      "get": {
        "tags": [
          "ImportMachines"
        ],
        "summary": "Method to get machine.",
        "operationId": "ImportMachines_GetAllMachinesInSiteAsync",
        "consumes": [
          
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription Id.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Resource group name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "siteName",
            "in": "path",
            "description": "Site name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Optional parameter for page size.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Optional parameter for continuation token.",
            "required": false,
            "type": "string"
          },
          {
            "name": "totalRecordCount",
            "in": "query",
            "description": "Total record count.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ImportMachineCollection"
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/ImportSites/{siteName}": {
      "get": {
        "tags": [
          "ImportSites"
        ],
        "summary": "Method to get a site.",
        "operationId": "ImportSites_GetSiteAsync",
        "consumes": [
          
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription Id.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Resource group name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "siteName",
            "in": "path",
            "description": "Site name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ImportSite"
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [
          "ImportSites"
        ],
        "summary": "Method to create or update a site.",
        "operationId": "ImportSites_PutSiteAsync",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription Id.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Resource group name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "siteName",
            "in": "path",
            "description": "Site name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body with site details.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ImportSite"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ImportSite"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/ImportSite"
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "ImportSites"
        ],
        "summary": "Method to delete a site.",
        "operationId": "ImportSites_DeleteSiteAsync",
        "consumes": [
          
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription Id.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Resource group name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "siteName",
            "in": "path",
            "description": "Site name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "NoContent"
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/ImportSites/{siteName}/ImportUri": {
      "post": {
        "tags": [
          "ImportSites"
        ],
        "summary": "Gets the SAS URI for import.",
        "operationId": "ImportSites_GetImportUriAsync",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription Id.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Resource group name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "siteName",
            "in": "path",
            "description": "Site name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The request body.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SasUriResponse"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SasUriResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/ImportSites/{siteName}/ExportUri": {
      "post": {
        "tags": [
          "ImportSites"
        ],
        "summary": "Gets the SAS URI for import.",
        "operationId": "ImportSites_GetExportUriAsync",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription Id.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Resource group name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "siteName",
            "in": "path",
            "description": "Site name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The request body.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SasUriResponse"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SasUriResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/serversites/{siteName}/jobs/{jobName}": {
      "get": {
        "tags": [
          "ServerJobs"
        ],
        "summary": "Method to get job.",
        "operationId": "ServerJobs_GetJob",
        "consumes": [
          
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription Id.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Resource group name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "siteName",
            "in": "path",
            "description": "Site name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "jobName",
            "in": "path",
            "description": "Job ARM name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ServerJob"
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/serversites/{siteName}/jobs": {
      "get": {
        "tags": [
          "ServerJobs"
        ],
        "summary": "Method to get all jobs in a site.",
        "operationId": "ServerJobs_GetAllJobsInSite",
        "consumes": [
          
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription Id.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Resource group name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "siteName",
            "in": "path",
            "description": "Site name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ServerJobCollection"
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/serversites/{siteName}/operationsstatus/{operationStatusName}": {
      "get": {
        "tags": [
          "ServerOperationsStatus"
        ],
        "summary": "Method to get operation status.",
        "operationId": "ServerOperationsStatus_GetOperationStatus",
        "consumes": [
          
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription Id.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Resource group name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "siteName",
            "in": "path",
            "description": "Site name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "operationStatusName",
            "in": "path",
            "description": "Operation status ARM name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/OperationStatus"
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/serversites/{siteName}/runasaccounts/{accountName}": {
      "get": {
        "tags": [
          "ServerRunAsAccounts"
        ],
        "summary": "Method to get run as account.",
        "operationId": "ServerRunAsAccounts_GetRunAsAccount",
        "consumes": [
          
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription Id.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Resource group name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "siteName",
            "in": "path",
            "description": "Site name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "accountName",
            "in": "path",
            "description": "Run as account ARM name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ServerRunAsAccount"
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/serversites/{siteName}/runasaccounts": {
      "get": {
        "tags": [
          "ServerRunAsAccounts"
        ],
        "summary": "Method to get run as accounts.",
        "operationId": "ServerRunAsAccounts_GetAllRunAsAccountsInSite",
        "consumes": [
          
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription Id.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Resource group name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "siteName",
            "in": "path",
            "description": "Site name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ServerRunAsAccountCollection"
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/serversites/{siteName}/machines/{machineName}": {
      "get": {
        "tags": [
          "Servers"
        ],
        "summary": "Method to get machine.",
        "operationId": "Servers_GetMachine",
        "consumes": [
          
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription Id.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Resource group name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "siteName",
            "in": "path",
            "description": "Site name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "machineName",
            "in": "path",
            "description": "Machine ARM name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Server"
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [
          "Servers"
        ],
        "summary": "Method to create or update a server in site.",
        "operationId": "Servers_PutMachine",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription Id.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Resource group name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "siteName",
            "in": "path",
            "description": "Site name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "machineName",
            "in": "path",
            "description": "Machine name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Put server body.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Server"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "validationRequired",
            "in": "query",
            "description": "Validation required of machine.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Azure-AsyncOperation": {
                "description": "Tracking URL for long running operation.",
                "type": "string"
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/serversites/{siteName}/machines": {
      "get": {
        "tags": [
          "Servers"
        ],
        "summary": "Method to get machine.",
        "operationId": "Servers_GetAllMachinesInSite",
        "consumes": [
          
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription Id.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Resource group name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "siteName",
            "in": "path",
            "description": "Site name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Optional parameter for page size.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Optional parameter for continuation token.",
            "required": false,
            "type": "string"
          },
          {
            "name": "totalRecordCount",
            "in": "query",
            "description": "Total record count.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ServerCollection"
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/serversites/{siteName}": {
      "get": {
        "tags": [
          "ServerSites"
        ],
        "summary": "Method to get a site.",
        "operationId": "ServerSites_GetSite",
        "consumes": [
          
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription Id.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Resource group name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "siteName",
            "in": "path",
            "description": "Site name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ServerSite"
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [
          "ServerSites"
        ],
        "summary": "Method to create or update a site.",
        "operationId": "ServerSites_PutSite",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription Id.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Resource group name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "siteName",
            "in": "path",
            "description": "Site name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body with site details.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ServerSite"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ServerSite"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/ServerSite"
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/serversites/{siteName}/refresh": {
      "post": {
        "tags": [
          "ServerSites"
        ],
        "summary": "Method to refresh a site.",
        "operationId": "ServerSites_RefreshSite",
        "consumes": [
          
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription Id.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Resource group name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "siteName",
            "in": "path",
            "description": "Site name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Azure-AsyncOperation": {
                "description": "Tracking URL for long running operation.",
                "type": "string"
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/serversites/{siteName}/usage": {
      "get": {
        "tags": [
          "ServerSites"
        ],
        "summary": "Method to get site usage.",
        "operationId": "ServerSites_GetSiteUsage",
        "consumes": [
          
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription Id.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "Resource group name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "siteName",
            "in": "path",
            "description": "Site name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ServerSiteUsage"
            }
          }
        },
        "deprecated": false
      }
    }
  },
  "definitions": {
    "Object": {
      "type": "object",
      "properties": {
        
      }
    },
    "HyperVCluster": {
      "description": "Cluster REST Resource.",
      "type": "object",
      "properties": {
        "id": {
          "description": "Gets the relative URL to get this cluster.",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "description": "Gets or sets the Name of the cluster.",
          "type": "string"
        },
        "type": {
          "description": "Handled by resource provider. Type = Microsoft.VMWare/hyperVSites/clusters.",
          "type": "string",
          "readOnly": true
        },
        "properties": {
          "$ref": "#/definitions/HyperVClusterProperties",
          "description": "Gets or sets nested properties."
        }
      }
    },
    "HyperVClusterProperties": {
      "description": "Class for cluster properties.",
      "type": "object",
      "properties": {
        "createdTimestamp": {
          "description": "Gets the timestamp marking Hyper-V cluster creation.",
          "type": "string",
          "readOnly": true
        },
        "updatedTimestamp": {
          "description": "Gets the timestamp marking last updated on the Hyper-V cluster.",
          "type": "string",
          "readOnly": true
        },
        "fqdn": {
          "description": "Gets or sets the FQDN/IPAddress of the Hyper-V cluster.",
          "type": "string"
        },
        "functionalLevel": {
          "format": "int32",
          "description": "Gets the functional level of the Hyper-V cluster.",
          "type": "integer",
          "readOnly": true
        },
        "status": {
          "description": "Gets the status of the Hyper-V cluster.",
          "type": "string",
          "readOnly": true
        },
        "runAsAccountId": {
          "description": "Gets or sets Run as account ID of the Hyper-V cluster.",
          "type": "string"
        },
        "hostFqdnList": {
          "description": "Gets or sets list of hosts (FQDN) currently being tracked by the cluster.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "errors": {
          "description": "Gets the errors.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/HealthErrorDetails"
          },
          "readOnly": true
        }
      }
    },
    "HealthErrorDetails": {
      "description": "Error contract returned when some exception occurs in Rest API.",
      "type": "object",
      "properties": {
        "id": {
          "format": "int64",
          "description": "Gets the error ID.",
          "type": "integer",
          "readOnly": true
        },
        "code": {
          "description": "Gets the error name.",
          "type": "string",
          "readOnly": true
        },
        "message": {
          "description": "Gets the error message.",
          "type": "string",
          "readOnly": true
        },
        "possibleCauses": {
          "description": "Gets the possible causes of error.",
          "type": "string",
          "readOnly": true
        },
        "recommendedAction": {
          "description": "Gets the recommended action to resolve error.",
          "type": "string",
          "readOnly": true
        },
        "severity": {
          "description": "Gets the error severity.",
          "type": "string",
          "readOnly": true
        },
        "summaryMessage": {
          "description": "Gets the error summary message.",
          "type": "string",
          "readOnly": true
        },
        "messageParameters": {
          "description": "Gets the message parameters.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "readOnly": true
        }
      }
    },
    "HyperVClusterCollection": {
      "description": "Collection of Hyper-V clusters.",
      "type": "object",
      "properties": {
        "value": {
          "description": "Gets the list of clusters.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/HyperVCluster"
          },
          "readOnly": true
        },
        "nextLink": {
          "description": "Gets the value of next link.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "HyperVHost": {
      "description": "Host REST Resource.",
      "type": "object",
      "properties": {
        "id": {
          "description": "Gets the relative URL to get this host.",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "description": "Gets or sets the name of the host.",
          "type": "string"
        },
        "type": {
          "description": "Handled by resource provider. Type = Microsoft.OffAzure/hyperVSites/hosts.",
          "type": "string",
          "readOnly": true
        },
        "properties": {
          "$ref": "#/definitions/HyperVHostProperties",
          "description": "Gets or sets nested properties."
        }
      }
    },
    "HyperVHostProperties": {
      "description": "Class for host properties.",
      "type": "object",
      "properties": {
        "createdTimestamp": {
          "description": "Gets the timestamp marking Hyper-V host creation.",
          "type": "string",
          "readOnly": true
        },
        "updatedTimestamp": {
          "description": "Gets the timestamp marking last updated on the Hyper-V host.",
          "type": "string",
          "readOnly": true
        },
        "fqdn": {
          "description": "Gets or sets the FQDN/IPAddress of the Hyper-V host.",
          "type": "string"
        },
        "runAsAccountId": {
          "description": "Gets or sets the run as account ID of the Hyper-V host.",
          "type": "string"
        },
        "version": {
          "description": "Gets the version of the Hyper-V host.",
          "type": "string",
          "readOnly": true
        },
        "errors": {
          "description": "Gets the errors.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/HealthErrorDetails"
          },
          "readOnly": true
        }
      }
    },
    "HyperVHostCollection": {
      "description": "Collection of Hyper-V hosts.",
      "type": "object",
      "properties": {
        "value": {
          "description": "Gets the list of hosts.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/HyperVHost"
          },
          "readOnly": true
        },
        "nextLink": {
          "description": "Gets the value of next link.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "HyperVJob": {
      "description": "Job REST Resource.",
      "type": "object",
      "properties": {
        "id": {
          "description": "Relative URL to get this Sites.",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "description": "Gets the Name of the Sites.",
          "type": "string",
          "readOnly": true
        },
        "type": {
          "description": "Handled by resource provider. Type = Microsoft.OffAzure/HyperVSites/Jobs.",
          "type": "string",
          "readOnly": true
        },
        "properties": {
          "$ref": "#/definitions/JobProperties",
          "description": "Gets nested properties.",
          "readOnly": true
        },
        "status": {
          "description": "Gets operation status.",
          "type": "string",
          "readOnly": true
        },
        "startTime": {
          "description": "Gets operation start time.",
          "type": "string",
          "readOnly": true
        },
        "endTime": {
          "description": "Gets operation end time.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "JobProperties": {
      "description": "Class for machine properties.",
      "type": "object",
      "properties": {
        "displayName": {
          "description": "Gets or sets the display name of the Job.",
          "type": "string",
          "readOnly": true
        },
        "clientRequestId": {
          "description": "Gets the client request Id used in the operation execution context.",
          "type": "string",
          "readOnly": true
        },
        "activityId": {
          "description": "Gets the activity Id used in the operation execution context.",
          "type": "string",
          "readOnly": true
        },
        "errors": {
          "description": "Gets the errors.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ErrorDetails"
          },
          "readOnly": true
        }
      }
    },
    "ErrorDetails": {
      "description": "Error contract returned when some exception occurs in Rest API.",
      "type": "object",
      "properties": {
        "code": {
          "description": "Gets the error code.",
          "type": "string",
          "readOnly": true
        },
        "message": {
          "description": "Gets the error message.",
          "type": "string",
          "readOnly": true
        },
        "possibleCauses": {
          "description": "Gets the possible causes of error.",
          "type": "string",
          "readOnly": true
        },
        "recommendedAction": {
          "description": "Gets the recommended action to resolve error.",
          "type": "string",
          "readOnly": true
        },
        "severity": {
          "description": "Gets the error severity.",
          "type": "string",
          "readOnly": true
        },
        "isAgentReportedError": {
          "description": "Gets a value indicating whether the error originated from a agent or not.",
          "type": "boolean",
          "readOnly": true
        },
        "agentErrorCode": {
          "description": "Gets the agent error code.",
          "type": "string",
          "readOnly": true
        },
        "agentErrorMessage": {
          "description": "Gets the error message from the agent.",
          "type": "string",
          "readOnly": true
        },
        "agentErrorPossibleCauses": {
          "description": "Gets possible causes for the agent error.",
          "type": "string",
          "readOnly": true
        },
        "agentErrorRecommendedAction": {
          "description": "Gets the recommended action for the agent error.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "HyperVJobCollection": {
      "description": "Collection of Hyper-V jobs.",
      "type": "object",
      "properties": {
        "value": {
          "description": "Gets the list of jobs.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/HyperVJob"
          },
          "readOnly": true
        },
        "nextLink": {
          "description": "Gets the value of next link.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "HyperVMachine": {
      "description": "Machine REST Resource.",
      "type": "object",
      "properties": {
        "id": {
          "description": "Relative URL to get this Sites.",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "description": "Gets the Name of the Sites.",
          "type": "string",
          "readOnly": true
        },
        "type": {
          "description": "Handled by resource provider. Type = Microsoft.OffAzure/HyperVSites/Machines.",
          "type": "string",
          "readOnly": true
        },
        "properties": {
          "$ref": "#/definitions/HyperVMachineProperties",
          "description": "Gets nested properties.",
          "readOnly": true
        }
      }
    },
    "HyperVMachineProperties": {
      "description": "Class for machine properties.",
      "type": "object",
      "properties": {
        "hostFqdn": {
          "description": "Host FQDN/IPAddress.",
          "type": "string",
          "readOnly": true
        },
        "hostId": {
          "description": "Host ARM ID.",
          "type": "string",
          "readOnly": true
        },
        "clusterFqdn": {
          "description": "Cluster FQDN/IPAddress.",
          "type": "string",
          "readOnly": true
        },
        "clusterId": {
          "description": "Cluster ARM ID.",
          "type": "string",
          "readOnly": true
        },
        "managementServerType": {
          "description": "Management server type captured as a string representation of the\r\n            {HyperVMachine.HyperVMachineProperties.ManagementServerType} enumeration.",
          "type": "string",
          "readOnly": true
        },
        "generation": {
          "format": "int32",
          "description": "Generation of the virtual machine.",
          "type": "integer",
          "readOnly": true
        },
        "version": {
          "description": "VM version.",
          "type": "string",
          "readOnly": true
        },
        "highAvailability": {
          "description": "Value indicating whether the VM is highly available.",
          "enum": [
            "Unknown",
            "No",
            "Yes"
          ],
          "type": "string",
          "readOnly": true
        },
        "maxMemoryMB": {
          "format": "int32",
          "description": "Max memory of the virtual machine in MB.",
          "type": "integer",
          "readOnly": true
        },
        "firmware": {
          "description": "Firmware of the machine.",
          "type": "string",
          "readOnly": true
        },
        "isDynamicMemoryEnabled": {
          "description": "Value indicating whether dynamic memory is enabled for the VM.",
          "type": "boolean",
          "readOnly": true
        },
        "disks": {
          "description": "Disks attached to the machine.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/HyperVDisk"
          },
          "readOnly": true
        },
        "networkAdapters": {
          "description": "Network adapters attached to the machine.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/HyperVNetworkAdapter"
          },
          "readOnly": true
        },
        "displayName": {
          "description": "Display name of the machine.",
          "type": "string",
          "readOnly": true
        },
        "numberOfProcessorCore": {
          "format": "int32",
          "description": "Number of Processor Cores allocated for the machine.",
          "type": "integer",
          "readOnly": true
        },
        "allocatedMemoryInMB": {
          "format": "double",
          "description": "Allocated Memory in MB.",
          "type": "number",
          "readOnly": true
        },
        "vmConfigurationFileLocation": {
          "description": "Root location of the VM configuration file.",
          "type": "string",
          "readOnly": true
        },
        "operatingSystemDetails": {
          "$ref": "#/definitions/OperatingSystem",
          "description": "Operating System Details installed on the machine.",
          "readOnly": true
        },
        "createdTimestamp": {
          "description": "Timestamp marking machine creation.",
          "type": "string",
          "readOnly": true
        },
        "updatedTimestamp": {
          "description": "Timestamp marking last updated on the machine.",
          "type": "string",
          "readOnly": true
        },
        "instanceUuid": {
          "description": "On-premise Instance UUID of the machine.",
          "type": "string",
          "readOnly": true
        },
        "powerStatus": {
          "description": "Machine power status.",
          "type": "string",
          "readOnly": true
        },
        "biosSerialNumber": {
          "description": "Machine BIOS serial number.",
          "type": "string",
          "readOnly": true
        },
        "vmFqdn": {
          "description": "Machine FQDN.",
          "type": "string",
          "readOnly": true
        },
        "isDeleted": {
          "description": "Value indicating whether VM is deleted.",
          "type": "boolean",
          "readOnly": true
        },
        "errors": {
          "description": "Errors for machine.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/HealthErrorDetails"
          },
          "readOnly": true
        }
      }
    },
    "HyperVDisk": {
      "description": "Second level object returned as part of Machine REST resource.",
      "type": "object",
      "properties": {
        "instanceId": {
          "description": "Id of the disk.",
          "type": "string",
          "readOnly": true
        },
        "vhdId": {
          "description": "VHD Id of the disk.",
          "type": "string",
          "readOnly": true
        },
        "maxSizeInBytes": {
          "format": "int64",
          "description": "Bytes allocated for the disk.",
          "type": "integer",
          "readOnly": true
        },
        "name": {
          "description": "Name of the disk.",
          "type": "string",
          "readOnly": true
        },
        "diskType": {
          "description": "Type of the disk.",
          "type": "string",
          "readOnly": true
        },
        "lun": {
          "format": "int32",
          "description": "LUN of the disk.",
          "type": "integer",
          "readOnly": true
        },
        "path": {
          "description": "Path of the disk.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "HyperVNetworkAdapter": {
      "description": "Second level object represented in responses as part of Machine REST resource.",
      "type": "object",
      "properties": {
        "networkId": {
          "description": "Network Id.",
          "type": "string",
          "readOnly": true
        },
        "subnetName": {
          "description": "Name of the VM subnet within the virtual network the NIC is attached to.",
          "type": "string",
          "readOnly": true
        },
        "staticIpAdress": {
          "description": "Static IP address.",
          "type": "string",
          "readOnly": true
        },
        "nicType": {
          "description": "Mac address of the NIC.",
          "type": "string",
          "readOnly": true
        },
        "nicId": {
          "description": "NIC Id.",
          "type": "string",
          "readOnly": true
        },
        "macAddress": {
          "description": "Mac address of the NIC.",
          "type": "string",
          "readOnly": true
        },
        "ipAddressList": {
          "description": "IP addresses for the machine.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "networkName": {
          "description": "Network Name.",
          "type": "string",
          "readOnly": true
        },
        "ipAddressType": {
          "description": "Type of the IP address.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "OperatingSystem": {
      "description": "Second level object returned as part of Machine REST resource.",
      "type": "object",
      "properties": {
        "osType": {
          "description": "Type of the operating system.",
          "type": "string",
          "readOnly": true
        },
        "osName": {
          "description": "Name of the operating system.",
          "type": "string",
          "readOnly": true
        },
        "osVersion": {
          "description": "Version of the operating system.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "HyperVMachineCollection": {
      "description": "Collection of Hyper-V machines.",
      "type": "object",
      "properties": {
        "value": {
          "description": "Gets the list of machines.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/HyperVMachine"
          },
          "readOnly": true
        },
        "nextLink": {
          "description": "Gets the value of next link.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "OperationStatus": {
      "description": "Operation status REST resource.",
      "type": "object",
      "properties": {
        "id": {
          "description": "Gets the Id.",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "description": "Gets the operation name.",
          "type": "string",
          "readOnly": true
        },
        "status": {
          "description": "Gets the status of the operation. ARM expects the terminal status to be one of\r\n            Succeeded/ Failed/ Canceled. All other values imply that the operation is still running.",
          "type": "string",
          "readOnly": true
        },
        "startTime": {
          "description": "Gets the start time.",
          "type": "string",
          "readOnly": true
        },
        "endTime": {
          "description": "Gets the start time.",
          "type": "string",
          "readOnly": true
        },
        "error": {
          "$ref": "#/definitions/OperationStatusError",
          "description": "Gets the error.",
          "readOnly": true
        },
        "properties": {
          "$ref": "#/definitions/OperationStatusProperties",
          "description": "Gets the custom data.",
          "readOnly": true
        }
      }
    },
    "OperationStatusError": {
      "description": "Class for operation status errors.",
      "type": "object",
      "properties": {
        "code": {
          "description": "Gets the error code.",
          "type": "string",
          "readOnly": true
        },
        "message": {
          "description": "Gets the error message.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "OperationStatusProperties": {
      "description": "Class for operation result properties.",
      "type": "object",
      "properties": {
        
      }
    },
    "HyperVRunAsAccount": {
      "description": "Run as account REST Resource.",
      "type": "object",
      "properties": {
        "id": {
          "description": "Relative URL to get this run as account.",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "description": "Gets the Name of the Sites.",
          "type": "string",
          "readOnly": true
        },
        "type": {
          "description": "Handled by resource provider. Type = Microsoft.OffAzure/HyperVSites/RunAsAccounts.",
          "type": "string",
          "readOnly": true
        },
        "properties": {
          "$ref": "#/definitions/RunAsAccountProperties",
          "description": "Gets nested properties.",
          "readOnly": true
        }
      }
    },
    "RunAsAccountProperties": {
      "description": "Class for run as account properties.",
      "type": "object",
      "properties": {
        "displayName": {
          "description": "Display name of the run as account.",
          "type": "string",
          "readOnly": true
        },
        "createdTimestamp": {
          "description": "Timestamp marking run as account creation.",
          "type": "string",
          "readOnly": true
        },
        "updatedTimestamp": {
          "description": "Timestamp marking last updated on the run as account.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "HyperVRunAsAccountCollection": {
      "description": "Collection of Hyper-V run as accounts.",
      "type": "object",
      "properties": {
        "value": {
          "description": "Gets the list of run as accounts.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/HyperVRunAsAccount"
          },
          "readOnly": true
        },
        "nextLink": {
          "description": "Gets the value of next link.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "HyperVSite": {
      "description": "Site REST Resource.",
      "type": "object",
      "properties": {
        "id": {
          "description": "Gets the relative URL to get this Site.",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "description": "Gets or sets the name of the Hyper-V site.",
          "type": "string"
        },
        "type": {
          "description": "Handled by resource provider. Type = Microsoft.OffAzure/HyperVSites.",
          "type": "string",
          "readOnly": true
        },
        "eTag": {
          "description": "Gets or sets the eTag for concurrency control.",
          "type": "string"
        },
        "location": {
          "description": "Gets or sets the Azure location in which Sites is created.",
          "type": "string"
        },
        "properties": {
          "$ref": "#/definitions/SiteProperties",
          "description": "Gets or sets the nested properties."
        }
      }
    },
    "SiteProperties": {
      "description": "Class for site properties.",
      "type": "object",
      "properties": {
        "servicePrincipalIdentityDetails": {
          "$ref": "#/definitions/SiteSpnProperties",
          "description": "Gets or sets the service principal identity details used by agent for communication\r\n            to the service."
        },
        "agentDetails": {
          "$ref": "#/definitions/SiteAgentProperties",
          "description": "Gets or sets the on-premises agent details."
        },
        "serviceEndpoint": {
          "description": "Gets the service endpoint.",
          "type": "string",
          "readOnly": true
        },
        "discoverySolutionId": {
          "description": "Gets or sets the ARM ID of migration hub solution for SDS.",
          "type": "string"
        },
        "applianceName": {
          "description": "Gets or sets the Appliance Name.",
          "type": "string"
        }
      }
    },
    "SiteSpnProperties": {
      "description": "Class for site properties.",
      "type": "object",
      "properties": {
        "tenantId": {
          "description": "Gets or sets the tenant Id for the service principal with which the on-premise\r\n            management/data plane components would communicate with our Azure services.",
          "type": "string"
        },
        "applicationId": {
          "description": "Gets or sets the application/client Id for the service principal with which the\r\n            on-premise management/data plane components would communicate with our Azure \r\n            services.",
          "type": "string"
        },
        "objectId": {
          "description": "Gets or sets the object Id of the service principal with which the on-premise\r\n            management/data plane components would communicate with our Azure services.",
          "type": "string"
        },
        "audience": {
          "description": "Gets or sets the intended audience for the service principal.",
          "type": "string"
        },
        "aadAuthority": {
          "description": "Gets or sets the AAD Authority URL which was used to request the token for the\r\n            service principal.",
          "type": "string"
        },
        "rawCertData": {
          "description": "Gets or sets the raw certificate data for building certificate expiry flows.",
          "type": "string"
        }
      }
    },
    "SiteAgentProperties": {
      "description": "Class for site agent properties.",
      "type": "object",
      "properties": {
        "id": {
          "description": "Gets the ID of the agent.",
          "type": "string",
          "readOnly": true
        },
        "version": {
          "description": "Gets the version of the agent.",
          "type": "string",
          "readOnly": true
        },
        "lastHeartBeatUtc": {
          "format": "date-time",
          "description": "Gets the last heartbeat time of the agent in UTC.",
          "type": "string",
          "readOnly": true
        },
        "keyVaultUri": {
          "description": "Gets or sets the key vault URI.",
          "type": "string"
        },
        "keyVaultId": {
          "description": "Gets or sets the key vault ARM Id.",
          "type": "string"
        }
      }
    },
    "HyperVSiteUsage": {
      "description": "Hyper-V site usage.",
      "type": "object",
      "properties": {
        "machineCount": {
          "format": "int32",
          "description": "Gets or sets the number of machines discovered in the site.",
          "type": "integer"
        },
        "runAsAccountCount": {
          "format": "int32",
          "description": "Gets or sets the number of run as accounts in the site.",
          "type": "integer"
        },
        "hostCount": {
          "format": "int32",
          "description": "Gets or sets the number of hosts part of the site.",
          "type": "integer"
        },
        "clusterCount": {
          "format": "int32",
          "description": "Gets or sets the number of clusters part of the site.",
          "type": "integer"
        }
      }
    },
    "SiteHealthSummaryCollection": {
      "description": "Collection of SiteHealthSummary.",
      "type": "object",
      "properties": {
        "value": {
          "description": "Gets the list of SiteHealthSummary.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SiteHealthSummary"
          },
          "readOnly": true
        },
        "nextLink": {
          "description": "Gets the value of next link.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "SiteHealthSummary": {
      "description": "The site health summary model.",
      "type": "object",
      "properties": {
        "applianceName": {
          "description": "Gets the appliance name.",
          "type": "string",
          "readOnly": true
        },
        "errorMessage": {
          "description": "Gets the error message.",
          "type": "string",
          "readOnly": true
        },
        "summaryMessage": {
          "description": "Gets the summary message.",
          "type": "string",
          "readOnly": true
        },
        "errorId": {
          "format": "int64",
          "description": "Gets the error Id.",
          "type": "integer",
          "readOnly": true
        },
        "errorCode": {
          "description": "Gets the error code.",
          "type": "string",
          "readOnly": true
        },
        "affectedObjectsCount": {
          "format": "int64",
          "description": "Gets or sets the count of affected objects.",
          "type": "integer"
        },
        "hitCount": {
          "format": "int64",
          "description": "Gets or sets the hit count of the error.",
          "type": "integer"
        },
        "severity": {
          "description": "Gets the severity of error.",
          "type": "string",
          "readOnly": true
        },
        "remediationGuidance": {
          "description": "Gets the remediation guidance.",
          "type": "string",
          "readOnly": true
        },
        "affectedResourceType": {
          "description": "Gets the affected resource type.",
          "type": "string",
          "readOnly": true
        },
        "affectedResources": {
          "description": "Gets or sets the affected resources.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "VMwareJob": {
      "description": "Job REST Resource.",
      "type": "object",
      "properties": {
        "id": {
          "description": "Relative URL to get this Sites.",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "description": "Gets the Name of the Sites.",
          "type": "string",
          "readOnly": true
        },
        "type": {
          "description": "Handled by resource provider. Type = Microsoft.OffAzure/VMWareSites/Jobs.",
          "type": "string",
          "readOnly": true
        },
        "properties": {
          "$ref": "#/definitions/JobProperties",
          "description": "Gets nested properties.",
          "readOnly": true
        },
        "status": {
          "description": "Gets operation status.",
          "type": "string",
          "readOnly": true
        },
        "startTime": {
          "description": "Gets operation start time.",
          "type": "string",
          "readOnly": true
        },
        "endTime": {
          "description": "Gets operation end time.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "VMwareJobCollection": {
      "description": "Collection of VMware jobs.",
      "type": "object",
      "properties": {
        "value": {
          "description": "Gets the list of jobs.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/VMwareJob"
          },
          "readOnly": true
        },
        "nextLink": {
          "description": "Gets the value of next link.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "VMwareMachine": {
      "description": "Machine REST Resource.",
      "type": "object",
      "properties": {
        "id": {
          "description": "Relative URL to get this Sites.",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "description": "Gets the Name of the Sites.",
          "type": "string",
          "readOnly": true
        },
        "type": {
          "description": "Handled by resource provider. Type = Microsoft.OffAzure/VMWareSites/Machines.",
          "type": "string",
          "readOnly": true
        },
        "properties": {
          "$ref": "#/definitions/VMwareMachineProperties",
          "description": "Gets nested properties.",
          "readOnly": true
        }
      }
    },
    "VMwareMachineProperties": {
      "description": "Class for machine properties.",
      "type": "object",
      "properties": {
        "dataCenterScope": {
          "description": "Scope of the data center.",
          "type": "string",
          "readOnly": true
        },
        "firmware": {
          "description": "Firmware of the machine.",
          "type": "string",
          "readOnly": true
        },
        "description": {
          "description": "User description of the machine.",
          "type": "string",
          "readOnly": true
        },
        "vCenterFQDN": {
          "description": "VCenter FQDN/IPAddress.",
          "type": "string",
          "readOnly": true
        },
        "vCenterId": {
          "description": "VCenter ARM ID.",
          "type": "string",
          "readOnly": true
        },
        "vMwareToolsStatus": {
          "description": "VMware tools status.",
          "type": "string",
          "readOnly": true
        },
        "changeTrackingSupported": {
          "description": "Value indicating whether change tracking is supported.",
          "type": "boolean",
          "readOnly": true
        },
        "changeTrackingEnabled": {
          "description": "Value indicating whether change tracking is enabled.",
          "type": "boolean",
          "readOnly": true
        },
        "maxSnapshots": {
          "format": "int32",
          "description": "Maximum number of snapshots for the VM.\r\n            Default value is -1.",
          "type": "integer",
          "readOnly": true
        },
        "disks": {
          "description": "Disks attached to the machine.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/VMwareDisk"
          },
          "readOnly": true
        },
        "hostInMaintenanceMode": {
          "description": "Indicates whether the host is in maintenance mode.",
          "type": "boolean",
          "readOnly": true
        },
        "hostName": {
          "description": "The host name.",
          "type": "string",
          "readOnly": true
        },
        "hostPowerState": {
          "description": "The host power state.",
          "type": "string",
          "readOnly": true
        },
        "hostVersion": {
          "description": "The host version.",
          "type": "string",
          "readOnly": true
        },
        "networkAdapters": {
          "description": "Network adapters attached to the machine.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/VMwareNetworkAdapter"
          },
          "readOnly": true
        },
        "displayName": {
          "description": "Display name of the machine.",
          "type": "string",
          "readOnly": true
        },
        "numberOfProcessorCore": {
          "format": "int32",
          "description": "Number of Processor Cores allocated for the machine.",
          "type": "integer",
          "readOnly": true
        },
        "allocatedMemoryInMB": {
          "format": "double",
          "description": "Allocated Memory in MB.",
          "type": "number",
          "readOnly": true
        },
        "vmConfigurationFileLocation": {
          "description": "Root location of the VM configuration file.",
          "type": "string",
          "readOnly": true
        },
        "operatingSystemDetails": {
          "$ref": "#/definitions/OperatingSystem",
          "description": "Operating System Details installed on the machine.",
          "readOnly": true
        },
        "createdTimestamp": {
          "description": "Timestamp marking machine creation.",
          "type": "string",
          "readOnly": true
        },
        "updatedTimestamp": {
          "description": "Timestamp marking last updated on the machine.",
          "type": "string",
          "readOnly": true
        },
        "instanceUuid": {
          "description": "On-premise Instance UUID of the machine.",
          "type": "string",
          "readOnly": true
        },
        "powerStatus": {
          "description": "Machine power status.",
          "type": "string",
          "readOnly": true
        },
        "biosSerialNumber": {
          "description": "Machine BIOS serial number.",
          "type": "string",
          "readOnly": true
        },
        "vmFqdn": {
          "description": "Machine FQDN.",
          "type": "string",
          "readOnly": true
        },
        "isDeleted": {
          "description": "Value indicating whether VM is deleted.",
          "type": "boolean",
          "readOnly": true
        },
        "errors": {
          "description": "Errors for machine.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/HealthErrorDetails"
          },
          "readOnly": true
        }
      }
    },
    "VMwareDisk": {
      "description": "Second level object returned as part of Machine REST resource.",
      "type": "object",
      "properties": {
        "uuid": {
          "description": "Disk UUID.",
          "type": "string",
          "readOnly": true
        },
        "label": {
          "description": "Label of the disk.",
          "type": "string",
          "readOnly": true
        },
        "diskProvisioningPolicy": {
          "description": "The provisioning policy of the disk.\r\n            It is Thin or Thick or Unknown for the VMWare VMDK.",
          "type": "string",
          "readOnly": true
        },
        "diskScrubbingPolicy": {
          "description": "The scrubbing policy of disks which can be\r\n            eagerly zeroed or lazily zeroed.",
          "type": "string",
          "readOnly": true
        },
        "maxSizeInBytes": {
          "format": "int64",
          "description": "Bytes allocated for the disk.",
          "type": "integer",
          "readOnly": true
        },
        "name": {
          "description": "Name of the disk.",
          "type": "string",
          "readOnly": true
        },
        "diskType": {
          "description": "Type of the disk.",
          "type": "string",
          "readOnly": true
        },
        "lun": {
          "format": "int32",
          "description": "LUN of the disk.",
          "type": "integer",
          "readOnly": true
        },
        "path": {
          "description": "Path of the disk.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "VMwareNetworkAdapter": {
      "description": "Second level object represented in responses as part of Machine REST resource.",
      "type": "object",
      "properties": {
        "label": {
          "description": "Label of the NIC.",
          "type": "string",
          "readOnly": true
        },
        "nicId": {
          "description": "NIC Id.",
          "type": "string",
          "readOnly": true
        },
        "macAddress": {
          "description": "Mac address of the NIC.",
          "type": "string",
          "readOnly": true
        },
        "ipAddressList": {
          "description": "IP addresses for the machine.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "networkName": {
          "description": "Network Name.",
          "type": "string",
          "readOnly": true
        },
        "ipAddressType": {
          "description": "Type of the IP address.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "VMwareMachineCollection": {
      "description": "Collection of VMware machines.",
      "type": "object",
      "properties": {
        "value": {
          "description": "Gets the list of machines.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/VMwareMachine"
          },
          "readOnly": true
        },
        "nextLink": {
          "description": "Gets the value of next link.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "VMwareRunAsAccount": {
      "description": "Run as account REST Resource.",
      "type": "object",
      "properties": {
        "id": {
          "description": "Relative URL to get this run as account.",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "description": "Gets the Name of the Run as account.",
          "type": "string",
          "readOnly": true
        },
        "type": {
          "description": "Handled by resource provider. Type = Microsoft.OffAzure/VMWareSites/RunAsAccounts.",
          "type": "string",
          "readOnly": true
        },
        "properties": {
          "$ref": "#/definitions/RunAsAccountProperties",
          "description": "Gets nested properties.",
          "readOnly": true
        }
      }
    },
    "VMwareRunAsAccountCollection": {
      "description": "Collection of VMware run as accounts.",
      "type": "object",
      "properties": {
        "value": {
          "description": "Gets the list of run as accounts.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/VMwareRunAsAccount"
          },
          "readOnly": true
        },
        "nextLink": {
          "description": "Gets the value of next link.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "VMwareSite": {
      "description": "Site REST Resource.",
      "type": "object",
      "properties": {
        "id": {
          "description": "Gets the relative URL to get this Site.",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "description": "Gets or sets the name of the VMware site.",
          "type": "string"
        },
        "type": {
          "description": "Handled by resource provider. Type = Microsoft.OffAzure/VMWareSites.",
          "type": "string",
          "readOnly": true
        },
        "eTag": {
          "description": "Gets or sets the eTag for concurrency control.",
          "type": "string"
        },
        "location": {
          "description": "Gets or sets the Azure location in which Sites is created.",
          "type": "string"
        },
        "properties": {
          "$ref": "#/definitions/SiteProperties",
          "description": "Gets or sets the nested properties."
        }
      }
    },
    "VMwareSiteUsage": {
      "description": "VMware site usage.",
      "type": "object",
      "properties": {
        "machineCount": {
          "format": "int32",
          "description": "Gets or sets the number of machines discovered in the site.",
          "type": "integer"
        },
        "runAsAccountCount": {
          "format": "int32",
          "description": "Gets or sets the number of run as accounts in the site.",
          "type": "integer"
        },
        "vCenterCount": {
          "format": "int32",
          "description": "Gets or sets the number of vCenters part of the site.",
          "type": "integer"
        }
      }
    },
    "VCenter": {
      "description": "VCenter REST Resource.",
      "type": "object",
      "properties": {
        "id": {
          "description": "Gets the relative URL to get this vCenter.",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "description": "Gets or sets the name of the vCenter.",
          "type": "string"
        },
        "type": {
          "description": "Handled by resource provider. Type = Microsoft.OffAzure/VMWareSites/VCenters.",
          "type": "string",
          "readOnly": true
        },
        "properties": {
          "$ref": "#/definitions/VCenterProperties",
          "description": "Gets or sets vCenter nested properties."
        }
      }
    },
    "VCenterProperties": {
      "description": "Class for vCenter properties.",
      "type": "object",
      "properties": {
        "createdTimestamp": {
          "description": "Gets the timestamp marking vCenter creation.",
          "type": "string",
          "readOnly": true
        },
        "updatedTimestamp": {
          "description": "Gets the timestamp marking last updated on the vCenter.",
          "type": "string",
          "readOnly": true
        },
        "fqdn": {
          "description": "Gets or sets the FQDN/IPAddress of the vCenter.",
          "type": "string"
        },
        "port": {
          "description": "Gets or sets the port of the vCenter.",
          "type": "string"
        },
        "runAsAccountId": {
          "description": "Gets or sets the run as account ID of the vCenter.",
          "type": "string"
        },
        "version": {
          "description": "Gets the version of the vCenter.",
          "type": "string",
          "readOnly": true
        },
        "perfStatisticsLevel": {
          "description": "Gets the performance statistics enabled on the vCenter.",
          "type": "string",
          "readOnly": true
        },
        "instanceUuid": {
          "description": "Gets the instance UUID of the vCenter.",
          "type": "string",
          "readOnly": true
        },
        "errors": {
          "description": "Gets the errors.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/HealthErrorDetails"
          },
          "readOnly": true
        }
      }
    },
    "VCenterCollection": {
      "description": "Collection of vCenter.",
      "type": "object",
      "properties": {
        "value": {
          "description": "Gets the list of vCenter.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/VCenter"
          },
          "readOnly": true
        },
        "nextLink": {
          "description": "Gets the value of next link.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "ImportJob": {
      "description": "Job REST Resource.",
      "type": "object",
      "properties": {
        "id": {
          "description": "Relative URL to get this Sites.",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "description": "Gets the Name of the Sites.",
          "type": "string",
          "readOnly": true
        },
        "type": {
          "description": "Handled by resource provider. Type = Microsoft.OffAzure/VMWareSites/Jobs.",
          "type": "string",
          "readOnly": true
        },
        "properties": {
          "$ref": "#/definitions/JobProperties",
          "description": "Gets nested properties.",
          "readOnly": true
        },
        "status": {
          "description": "Gets operation status.",
          "type": "string",
          "readOnly": true
        },
        "startTime": {
          "description": "Gets operation start time.",
          "type": "string",
          "readOnly": true
        },
        "endTime": {
          "description": "Gets operation end time.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "ImportJobCollection": {
      "description": "Collection of VMware jobs.",
      "type": "object",
      "properties": {
        "value": {
          "description": "Gets the list of jobs.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ImportJob"
          },
          "readOnly": true
        },
        "nextLink": {
          "description": "Gets the value of next link.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "ImportMachine": {
      "description": "Machine REST Resource.",
      "type": "object",
      "properties": {
        "id": {
          "description": "Relative URL to get this Sites.",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "description": "Gets the Name of the Sites.",
          "type": "string",
          "readOnly": true
        },
        "type": {
          "description": "Handled by resource provider. Type = Microsoft.OffAzure/ImportSites/Machines.",
          "type": "string",
          "readOnly": true
        },
        "properties": {
          "$ref": "#/definitions/ImportMachineProperties",
          "description": "Gets nested properties.",
          "readOnly": true
        }
      }
    },
    "ImportMachineProperties": {
      "description": "Class for machine properties.",
      "type": "object",
      "properties": {
        "firmware": {
          "description": "Firmware of the machine.",
          "type": "string",
          "readOnly": true
        },
        "vCenterFQDN": {
          "description": "VCenter FQDN/IPAddress.",
          "type": "string",
          "readOnly": true
        },
        "disks": {
          "description": "Disks attached to the machine.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ImportDisk"
          },
          "readOnly": true
        },
        "displayName": {
          "description": "Display name of the machine.",
          "type": "string",
          "readOnly": true
        },
        "numberOfProcessorCore": {
          "format": "int32",
          "description": "Number of Processor Cores allocated for the machine.",
          "type": "integer",
          "readOnly": true
        },
        "allocatedMemoryInMB": {
          "format": "double",
          "description": "Allocated Memory in MB.",
          "type": "number",
          "readOnly": true
        },
        "vmConfigurationFileLocation": {
          "description": "Root location of the VM configuration file.",
          "type": "string",
          "readOnly": true
        },
        "operatingSystemDetails": {
          "$ref": "#/definitions/OperatingSystem",
          "description": "Operating System Details installed on the machine.",
          "readOnly": true
        },
        "createdTimestamp": {
          "description": "Timestamp marking machine creation.",
          "type": "string",
          "readOnly": true
        },
        "updatedTimestamp": {
          "description": "Timestamp marking last updated on the machine.",
          "type": "string",
          "readOnly": true
        },
        "instanceUuid": {
          "description": "On-premise Instance UUID of the machine.",
          "type": "string",
          "readOnly": true
        },
        "powerStatus": {
          "description": "Machine power status.",
          "type": "string",
          "readOnly": true
        },
        "biosSerialNumber": {
          "description": "Machine BIOS serial number.",
          "type": "string",
          "readOnly": true
        },
        "vmFqdn": {
          "description": "Machine FQDN.",
          "type": "string",
          "readOnly": true
        },
        "isDeleted": {
          "description": "Value indicating whether VM is deleted.",
          "type": "boolean",
          "readOnly": true
        },
        "errors": {
          "description": "Errors for machine.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/HealthErrorDetails"
          },
          "readOnly": true
        }
      }
    },
    "ImportDisk": {
      "description": "Class representing the imported machine web model.",
      "type": "object",
      "properties": {
        "megabytesPerSecondOfRead": {
          "format": "double",
          "description": "Disk read throughput.",
          "type": "number",
          "readOnly": true
        },
        "megabytesPerSecondOfWrite": {
          "format": "double",
          "description": "Disk write throughput.",
          "type": "number",
          "readOnly": true
        },
        "numberOfReadOperationsPerSecond": {
          "format": "double",
          "description": "Disk read IOPS.",
          "type": "number",
          "readOnly": true
        },
        "numberOfWriteOperationsPerSecond": {
          "format": "double",
          "description": "Disk write IOPS.",
          "type": "number",
          "readOnly": true
        },
        "maxSizeInBytes": {
          "format": "int64",
          "description": "Bytes allocated for the disk.",
          "type": "integer",
          "readOnly": true
        },
        "name": {
          "description": "Name of the disk.",
          "type": "string",
          "readOnly": true
        },
        "diskType": {
          "description": "Type of the disk.",
          "type": "string",
          "readOnly": true
        },
        "lun": {
          "format": "int32",
          "description": "LUN of the disk.",
          "type": "integer",
          "readOnly": true
        },
        "path": {
          "description": "Path of the disk.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "ImportMachineCollection": {
      "description": "Collection of Import machines.",
      "type": "object",
      "properties": {
        "value": {
          "description": "Gets the list of machines.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ImportMachine"
          },
          "readOnly": true
        },
        "nextLink": {
          "description": "Gets the value of next link.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "ImportSite": {
      "description": "Site REST Resource.",
      "type": "object",
      "properties": {
        "id": {
          "description": "Gets the relative URL to get this Site.",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "description": "Gets or sets the name of the Hyper-V site.",
          "type": "string"
        },
        "type": {
          "description": "Handled by resource provider. Type = Microsoft.OffAzure/Sites.",
          "type": "string",
          "readOnly": true
        },
        "eTag": {
          "description": "Gets or sets the eTag for concurrency control.",
          "type": "string"
        },
        "location": {
          "description": "Gets or sets the Azure location in which Sites is created.",
          "type": "string"
        },
        "properties": {
          "$ref": "#/definitions/ImportSiteProperties",
          "description": "Gets or sets the nested properties."
        }
      }
    },
    "ImportSiteProperties": {
      "description": "Class for site properties.",
      "type": "object",
      "properties": {
        "serviceEndpoint": {
          "description": "Gets the service endpoint.",
          "type": "string",
          "readOnly": true
        },
        "discoverySolutionId": {
          "description": "Gets or sets the ARM ID of migration hub solution for SDS.",
          "type": "string"
        }
      }
    },
    "SasUriResponse": {
      "description": "Import URI response class.",
      "type": "object",
      "properties": {
        "jobId": {
          "description": "Gets or sets the operation status ID.",
          "type": "string"
        },
        "uri": {
          "description": "Gets or sets the SAS URI.",
          "type": "string"
        }
      }
    },
    "ServerJob": {
      "description": "Job class for server agent.",
      "type": "object",
      "properties": {
        "id": {
          "description": "Relative URL to get this Sites.",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "description": "Gets the Name of the job.",
          "type": "string",
          "readOnly": true
        },
        "type": {
          "description": "Handled by resource provider. Type = Microsoft.OffAzure/serverSites/Jobs.",
          "type": "string",
          "readOnly": true
        },
        "properties": {
          "$ref": "#/definitions/JobProperties",
          "description": "Gets nested properties.",
          "readOnly": true
        },
        "status": {
          "description": "Gets operation status.",
          "type": "string",
          "readOnly": true
        },
        "startTime": {
          "description": "Gets operation start time.",
          "type": "string",
          "readOnly": true
        },
        "endTime": {
          "description": "Gets operation end time.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "ServerJobCollection": {
      "description": "Collection of Server jobs.",
      "type": "object",
      "properties": {
        "value": {
          "description": "Gets the list of jobs.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ServerJob"
          },
          "readOnly": true
        },
        "nextLink": {
          "description": "Gets the value of next link.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "ServerRunAsAccount": {
      "description": "Run as account REST Resource.",
      "type": "object",
      "properties": {
        "id": {
          "description": "Relative URL to get this run as account.",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "description": "Gets the Name of the Run as accounts.",
          "type": "string",
          "readOnly": true
        },
        "type": {
          "description": "Handled by resource provider. Type = Microsoft.OffAzure/serverSites/RunAsAccounts.",
          "type": "string",
          "readOnly": true
        },
        "properties": {
          "$ref": "#/definitions/RunAsAccountProperties",
          "description": "Gets nested properties.",
          "readOnly": true
        }
      }
    },
    "ServerRunAsAccountCollection": {
      "description": "Collection of server run as accounts.",
      "type": "object",
      "properties": {
        "value": {
          "description": "Gets the list of run as accounts.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ServerRunAsAccount"
          },
          "readOnly": true
        },
        "nextLink": {
          "description": "Gets the value of next link.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "Server": {
      "description": "server REST Resource.",
      "type": "object",
      "properties": {
        "id": {
          "description": "Gets the relative URL to get this server.",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "description": "Gets or sets the name of the server.",
          "type": "string"
        },
        "type": {
          "description": "Handled by resource provider. Type = Microsoft.OffAzure/serverSites/servers.",
          "type": "string",
          "readOnly": true
        },
        "properties": {
          "$ref": "#/definitions/ServerProperties",
          "description": "Gets or sets nested properties."
        }
      }
    },
    "ServerProperties": {
      "description": "Class for server properties.",
      "type": "object",
      "properties": {
        "createdTimestamp": {
          "description": "Gets the timestamp marking server creation.",
          "type": "string",
          "readOnly": true
        },
        "updatedTimestamp": {
          "description": "Gets the timestamp marking last updated on the server.",
          "type": "string",
          "readOnly": true
        },
        "fqdn": {
          "description": "Gets or sets the FQDN/IPAddress of the server.",
          "type": "string"
        },
        "runAsAccountId": {
          "description": "Gets or sets the run as account ID of the server.",
          "type": "string"
        },
        "ip": {
          "description": "Gets or sets the unique IP of the server.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "displayName": {
          "description": "Gets or sets the Display name of the machine.",
          "type": "string"
        },
        "numberOfProcessorCore": {
          "format": "int32",
          "description": "Gets or sets the Number of Processor Cores allocated for the machine.",
          "type": "integer"
        },
        "allocatedMemoryInMB": {
          "format": "double",
          "description": "Gets or sets the Allocated Memory in MB.",
          "type": "number"
        },
        "osType": {
          "description": "Gets or sets the Operating System Details installed on the machine.",
          "type": "string"
        },
        "osName": {
          "description": "Gets or sets the Operating System Details installed on the machine.",
          "type": "string"
        },
        "osVersion": {
          "description": "Gets or sets the Operating System Details installed on the machine.",
          "type": "string"
        },
        "powerStatus": {
          "description": "Gets or sets the Machine power status.",
          "type": "string"
        },
        "biosSerialNumber": {
          "description": "Gets or sets the Machine BIOS serial number.",
          "type": "string"
        },
        "diskSize": {
          "format": "int64",
          "description": "Gets or sets the Bytes allocated for the disk.",
          "type": "integer"
        },
        "diskName": {
          "description": "Gets or sets the Disk name.",
          "type": "string"
        }
      }
    },
    "ServerCollection": {
      "description": "Collection of servers.",
      "type": "object",
      "properties": {
        "value": {
          "description": "Gets the list of servers.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Server"
          },
          "readOnly": true
        },
        "nextLink": {
          "description": "Gets the value of next link.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "ServerSite": {
      "description": "Site REST Resource.",
      "type": "object",
      "properties": {
        "id": {
          "description": "Gets the relative URL to get this Site.",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "description": "Gets or sets the name of the Server site.",
          "type": "string"
        },
        "type": {
          "description": "Handled by resource provider. Type = Microsoft.OffAzure/serverSites.",
          "type": "string",
          "readOnly": true
        },
        "eTag": {
          "description": "Gets or sets the eTag for concurrency control.",
          "type": "string"
        },
        "location": {
          "description": "Gets or sets the Azure location in which Sites is created.",
          "type": "string"
        },
        "properties": {
          "$ref": "#/definitions/SiteProperties",
          "description": "Gets or sets the nested properties."
        }
      }
    },
    "ServerSiteUsage": {
      "description": "Server site usage.",
      "type": "object",
      "properties": {
        "runAsAccountCount": {
          "format": "int32",
          "description": "Gets or sets the number of run as accounts in the site.",
          "type": "integer"
        },
        "serverCount": {
          "format": "int32",
          "description": "Gets or sets the number of servers part of the site.",
          "type": "integer"
        }
      }
    }
  }
}