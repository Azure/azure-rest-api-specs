{
  "swagger": "2.0",
  "info": {
    "title": "Microsoft.DependencyMap management service",
    "version": "2025-01-31-preview",
    "description": "Microsoft.DependencyMap management service",
    "x-typespec-generated": [
      {
        "emitter": "@azure-tools/typespec-autorest"
      }
    ]
  },
  "schemes": [
    "https"
  ],
  "host": "management.azure.com",
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "description": "Azure Active Directory OAuth2 Flow.",
      "flow": "implicit",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "tags": [
    {
      "name": "Operations"
    },
    {
      "name": "Maps"
    },
    {
      "name": "DiscoverySources"
    }
  ],
  "paths": {
    "/providers/Microsoft.DependencyMap/operations": {
      "get": {
        "operationId": "Operations_List",
        "tags": [
          "Operations"
        ],
        "description": "List the operations for the provider",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/OperationListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Operations_List - generated by [MaximumSet] rule": {
            "$ref": "./examples/Operations_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.DependencyMap/maps": {
      "get": {
        "operationId": "Maps_ListBySubscription",
        "tags": [
          "Maps"
        ],
        "description": "List MapsResource resources by subscription ID",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/MapsResourceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Maps_ListBySubscription - generated by [MaximumSet] rule": {
            "$ref": "./examples/Maps_ListBySubscription.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DependencyMap/maps": {
      "get": {
        "operationId": "Maps_ListByResourceGroup",
        "tags": [
          "Maps"
        ],
        "description": "List MapsResource resources by resource group",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/MapsResourceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Maps_ListByResourceGroup - generated by [MaximumSet] rule": {
            "$ref": "./examples/Maps_ListByResourceGroup.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DependencyMap/maps/{mapName}": {
      "get": {
        "operationId": "Maps_Get",
        "tags": [
          "Maps"
        ],
        "description": "Get a MapsResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "mapName",
            "in": "path",
            "description": "Maps resource name",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]{2,23}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/MapsResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Maps_Get - generated by [MaximumSet] rule": {
            "$ref": "./examples/Maps_Get.json"
          }
        }
      },
      "put": {
        "operationId": "Maps_CreateOrUpdate",
        "tags": [
          "Maps"
        ],
        "description": "Create a MapsResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "mapName",
            "in": "path",
            "description": "Maps resource name",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]{2,23}$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MapsResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'MapsResource' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/MapsResource"
            }
          },
          "201": {
            "description": "Resource 'MapsResource' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/MapsResource"
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Maps_CreateOrUpdate - generated by [MaximumSet] rule": {
            "$ref": "./examples/Maps_CreateOrUpdate.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "Maps_Update",
        "tags": [
          "Maps"
        ],
        "description": "Update a MapsResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "mapName",
            "in": "path",
            "description": "Maps resource name",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]{2,23}$"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "The resource properties to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MapsResourceTagsUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/MapsResource"
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Maps_Update - generated by [MaximumSet] rule": {
            "$ref": "./examples/Maps_Update.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "Maps_Delete",
        "tags": [
          "Maps"
        ],
        "description": "Delete a MapsResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "mapName",
            "in": "path",
            "description": "Maps resource name",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]{2,23}$"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Maps_Delete - generated by [MaximumSet] rule": {
            "$ref": "./examples/Maps_Delete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DependencyMap/maps/{mapName}/discoverySources": {
      "get": {
        "operationId": "DiscoverySources_ListByMapsResource",
        "tags": [
          "DiscoverySources"
        ],
        "description": "List DiscoverySourceResource resources by MapsResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "mapName",
            "in": "path",
            "description": "Maps resource name",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]{2,23}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DiscoverySourceResourceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "DiscoverySources_ListByMapsResource - generated by [MaximumSet] rule": {
            "$ref": "./examples/DiscoverySources_ListByMapsResource.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DependencyMap/maps/{mapName}/discoverySources/{sourceName}": {
      "get": {
        "operationId": "DiscoverySources_Get",
        "tags": [
          "DiscoverySources"
        ],
        "description": "Get a DiscoverySourceResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "mapName",
            "in": "path",
            "description": "Maps resource name",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]{2,23}$"
          },
          {
            "name": "sourceName",
            "in": "path",
            "description": "discovery source resource",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]{2,23}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DiscoverySourceResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "DiscoverySources_Get - generated by [MaximumSet] rule": {
            "$ref": "./examples/DiscoverySources_Get.json"
          }
        }
      },
      "put": {
        "operationId": "DiscoverySources_CreateOrUpdate",
        "tags": [
          "DiscoverySources"
        ],
        "description": "Create a DiscoverySourceResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "mapName",
            "in": "path",
            "description": "Maps resource name",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]{2,23}$"
          },
          {
            "name": "sourceName",
            "in": "path",
            "description": "discovery source resource",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]{2,23}$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DiscoverySourceResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'DiscoverySourceResource' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/DiscoverySourceResource"
            }
          },
          "201": {
            "description": "Resource 'DiscoverySourceResource' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/DiscoverySourceResource"
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "DiscoverySources_CreateOrUpdate - generated by [MaximumSet] rule": {
            "$ref": "./examples/DiscoverySources_CreateOrUpdate.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "DiscoverySources_Update",
        "tags": [
          "DiscoverySources"
        ],
        "description": "Update a DiscoverySourceResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "mapName",
            "in": "path",
            "description": "Maps resource name",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]{2,23}$"
          },
          {
            "name": "sourceName",
            "in": "path",
            "description": "discovery source resource",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]{2,23}$"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "The resource properties to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DiscoverySourceResourceTagsUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DiscoverySourceResource"
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "DiscoverySources_Update - generated by [MaximumSet] rule": {
            "$ref": "./examples/DiscoverySources_Update.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "DiscoverySources_Delete",
        "tags": [
          "DiscoverySources"
        ],
        "description": "Delete a DiscoverySourceResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "mapName",
            "in": "path",
            "description": "Maps resource name",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]{2,23}$"
          },
          {
            "name": "sourceName",
            "in": "path",
            "description": "discovery source resource",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]{2,23}$"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "DiscoverySources_Delete - generated by [MaximumSet] rule": {
            "$ref": "./examples/DiscoverySources_Delete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DependencyMap/maps/{mapName}/exportDependencies": {
      "post": {
        "operationId": "Maps_ExportDependencies",
        "tags": [
          "Maps"
        ],
        "description": "Export dependencies",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "mapName",
            "in": "path",
            "description": "Maps resource name",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]{2,23}$"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The content of the action request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ExportDependenciesRequest"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Maps_ExportDependencies - generated by [MaximumSet] rule": {
            "$ref": "./examples/Maps_ExportDependencies.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DependencyMap/maps/{mapName}/getConnectionsForProcessOnFocusedMachine": {
      "post": {
        "operationId": "Maps_GetConnectionsForProcessOnFocusedMachine",
        "tags": [
          "Maps"
        ],
        "description": "Get network connections of a process",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "mapName",
            "in": "path",
            "description": "Maps resource name",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]{2,23}$"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The content of the action request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetConnectionsForProcessOnFocusedMachineRequest"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Maps_GetConnectionsForProcessOnFocusedMachine - generated by [MaximumSet] rule": {
            "$ref": "./examples/Maps_GetConnectionsForProcessOnFocusedMachine.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DependencyMap/maps/{mapName}/getConnectionsWithConnectedMachineForFocusedMachine": {
      "post": {
        "operationId": "Maps_GetConnectionsWithConnectedMachineForFocusedMachine",
        "tags": [
          "Maps"
        ],
        "description": "Get network connections between machines",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "mapName",
            "in": "path",
            "description": "Maps resource name",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]{2,23}$"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The content of the action request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetConnectionsWithConnectedMachineForFocusedMachineRequest"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Maps_GetConnectionsWithConnectedMachineForFocusedMachine - generated by [MaximumSet] rule": {
            "$ref": "./examples/Maps_GetConnectionsWithConnectedMachineForFocusedMachine.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DependencyMap/maps/{mapName}/getDependencyViewForFocusedMachine": {
      "post": {
        "operationId": "Maps_GetDependencyViewForFocusedMachine",
        "tags": [
          "Maps"
        ],
        "description": "Get dependency map of single machine",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "mapName",
            "in": "path",
            "description": "Maps resource name",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]{2,23}$"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The content of the action request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetDependencyViewForFocusedMachineRequest"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Maps_GetDependencyViewForFocusedMachine - generated by [MaximumSet] rule": {
            "$ref": "./examples/Maps_GetDependencyViewForFocusedMachine.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    }
  },
  "definitions": {
    "DateTimeFilter": {
      "type": "object",
      "description": "UTC DateTime filter for dependency map visualization apis",
      "properties": {
        "startDateTimeUtc": {
          "type": "string",
          "format": "date-time",
          "description": "Start date time for dependency map visualization query"
        },
        "endDateTimeUtc": {
          "type": "string",
          "format": "date-time",
          "description": "End date time for dependency map visualization query"
        }
      }
    },
    "DependencyMapVisualizationFilter": {
      "type": "object",
      "description": "Filters for dependency map visualization apis",
      "properties": {
        "dateTime": {
          "$ref": "#/definitions/DateTimeFilter",
          "description": "DateTime filter"
        },
        "processNameFilter": {
          "$ref": "#/definitions/ProcessNameFilter",
          "description": "Process name filter"
        }
      }
    },
    "DiscoverySourceResource": {
      "type": "object",
      "description": "A Discovery Source resource",
      "properties": {
        "properties": {
          "$ref": "#/definitions/DiscoverySourceResourceProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "DiscoverySourceResourceListResult": {
      "type": "object",
      "description": "The response of a DiscoverySourceResource list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The DiscoverySourceResource items on this page",
          "items": {
            "$ref": "#/definitions/DiscoverySourceResource"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "DiscoverySourceResourceProperties": {
      "type": "object",
      "description": "The properties of Discovery Source resource",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "Provisioning state of Discovery Source resource.",
          "readOnly": true
        },
        "sourceType": {
          "$ref": "#/definitions/SourceType",
          "description": "Source type of Discovery Source resource.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "sourceId": {
          "type": "string",
          "description": "Source ArmId of Discovery Source resource",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "discriminator": "sourceType",
      "required": [
        "sourceType",
        "sourceId"
      ]
    },
    "DiscoverySourceResourceTagsUpdate": {
      "type": "object",
      "description": "The type used for updating tags in DiscoverySourceResource resources.",
      "properties": {
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "ExportDependenciesRequest": {
      "type": "object",
      "description": "ExportDependencies request model",
      "properties": {
        "focusedMachineId": {
          "type": "string",
          "description": "Machine arm id"
        },
        "filters": {
          "$ref": "#/definitions/DependencyMapVisualizationFilter",
          "description": "Filters for ExportDependencies"
        }
      },
      "required": [
        "focusedMachineId"
      ]
    },
    "GetConnectionsForProcessOnFocusedMachineRequest": {
      "type": "object",
      "description": "GetConnectionsForProcessOnFocusedMachine request model",
      "properties": {
        "focusedMachineId": {
          "type": "string",
          "description": "Machine arm id"
        },
        "processIdOnFocusedMachine": {
          "type": "string",
          "description": "Process id"
        },
        "filters": {
          "$ref": "#/definitions/DependencyMapVisualizationFilter",
          "description": "Filters for GetProcessNetworkConnections"
        }
      },
      "required": [
        "focusedMachineId",
        "processIdOnFocusedMachine"
      ]
    },
    "GetConnectionsWithConnectedMachineForFocusedMachineRequest": {
      "type": "object",
      "description": "GetConnectionsWithConnectedMachineForFocusedMachine request model",
      "properties": {
        "focusedMachineId": {
          "type": "string",
          "description": "Source machine arm id"
        },
        "connectedMachineId": {
          "type": "string",
          "description": "Destination machine arm id"
        },
        "filters": {
          "$ref": "#/definitions/DependencyMapVisualizationFilter",
          "description": "Filters for GetNetworkConnectionsBetweenMachines"
        }
      },
      "required": [
        "focusedMachineId",
        "connectedMachineId"
      ]
    },
    "GetDependencyViewForFocusedMachineRequest": {
      "type": "object",
      "description": "GetDependencyViewForFocusedMachine request model",
      "properties": {
        "focusedMachineId": {
          "type": "string",
          "description": "Machine arm id"
        },
        "filters": {
          "$ref": "#/definitions/DependencyMapVisualizationFilter",
          "description": "Filters for GetSingleMachineDependencyView"
        }
      },
      "required": [
        "focusedMachineId"
      ]
    },
    "MapsResource": {
      "type": "object",
      "description": "A Maps resource",
      "properties": {
        "properties": {
          "$ref": "#/definitions/MapsResourceProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "MapsResourceListResult": {
      "type": "object",
      "description": "The response of a MapsResource list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The MapsResource items on this page",
          "items": {
            "$ref": "#/definitions/MapsResource"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "MapsResourceProperties": {
      "type": "object",
      "description": "The properties of Maps resource",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "Provisioning state of Maps resource.",
          "readOnly": true
        }
      }
    },
    "MapsResourceTagsUpdate": {
      "type": "object",
      "description": "The type used for updating tags in MapsResource resources.",
      "properties": {
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "OffAzureDiscoverySourceResourceProperties": {
      "type": "object",
      "description": "OffAzure discovery source resource properties",
      "allOf": [
        {
          "$ref": "#/definitions/DiscoverySourceResourceProperties"
        }
      ],
      "x-ms-discriminator-value": "OffAzure"
    },
    "ProcessNameFilter": {
      "type": "object",
      "description": "Process name filter for dependency map visualization apis",
      "properties": {
        "operator": {
          "$ref": "#/definitions/ProcessNameFilterOperator",
          "description": "Operator for process name filter"
        },
        "processNames": {
          "type": "array",
          "description": "List of process names on which the operator should be applied",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "operator",
        "processNames"
      ]
    },
    "ProcessNameFilterOperator": {
      "type": "string",
      "description": "Operator enum for process name filter",
      "enum": [
        "contains",
        "notContains"
      ],
      "x-ms-enum": {
        "name": "ProcessNameFilterOperator",
        "modelAsString": true,
        "values": [
          {
            "name": "contains",
            "value": "contains",
            "description": "Operator to include items in the result"
          },
          {
            "name": "notContains",
            "value": "notContains",
            "description": "Operator to exclude items in the result"
          }
        ]
      }
    },
    "ProvisioningState": {
      "type": "string",
      "description": "Provisioning state of the resource",
      "enum": [
        "Succeeded",
        "Failed",
        "Canceled",
        "Provisioning",
        "Updating",
        "Deleting",
        "Accepted"
      ],
      "x-ms-enum": {
        "name": "ProvisioningState",
        "modelAsString": true,
        "values": [
          {
            "name": "Succeeded",
            "value": "Succeeded",
            "description": "Resource has been created."
          },
          {
            "name": "Failed",
            "value": "Failed",
            "description": "Resource creation failed."
          },
          {
            "name": "Canceled",
            "value": "Canceled",
            "description": "Resource creation was canceled."
          },
          {
            "name": "Provisioning",
            "value": "Provisioning",
            "description": "This state indicates that the resource is being provisioned."
          },
          {
            "name": "Updating",
            "value": "Updating",
            "description": "This state indicates that the resource is being updated."
          },
          {
            "name": "Deleting",
            "value": "Deleting",
            "description": "This state indicates that the resource is being deleted."
          },
          {
            "name": "Accepted",
            "value": "Accepted",
            "description": "This state indicates that the operation on the resource has been accepted."
          }
        ]
      },
      "readOnly": true
    },
    "SourceType": {
      "type": "string",
      "description": "Source type of the discoverySource",
      "enum": [
        "OffAzure"
      ],
      "x-ms-enum": {
        "name": "SourceType",
        "modelAsString": true,
        "values": [
          {
            "name": "OffAzure",
            "value": "OffAzure",
            "description": "OffAzure source type"
          }
        ]
      }
    }
  },
  "parameters": {}
}
