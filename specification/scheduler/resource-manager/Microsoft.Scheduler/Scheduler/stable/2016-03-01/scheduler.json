{
  "swagger": "2.0",
  "info": {
    "title": "SchedulerManagementClient",
    "version": "2016-03-01"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json",
    "text/json"
  ],
  "produces": [
    "application/json",
    "text/json"
  ],
  "paths": {
    "/subscriptions/{subscriptionId}/providers/Microsoft.Scheduler/jobCollections": {
      "get": {
        "tags": [
          "JobCollections"
        ],
        "operationId": "JobCollections_ListBySubscription",
        "description": "Gets all job collections under specified subscription.",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/apiVersion"
          }
        ],
        "responses": {
          "200": {
            "description": "The job collections have been successfully returned.",
            "schema": {
              "$ref": "#/definitions/JobCollectionListResult"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Scheduler/jobCollections": {
      "get": {
        "tags": [
          "JobCollections"
        ],
        "operationId": "JobCollections_ListByResourceGroup",
        "description": "Gets all job collections under specified resource group.",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The resource group name."
          },
          {
            "$ref": "#/parameters/apiVersion"
          }
        ],
        "responses": {
          "200": {
            "description": "The job collections have been successfully returned.",
            "schema": {
              "$ref": "#/definitions/JobCollectionListResult"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Scheduler/jobCollections/{jobCollectionName}": {
      "get": {
        "tags": [
          "JobCollections"
        ],
        "operationId": "JobCollections_Get",
        "description": "Gets a job collection.",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The resource group name."
          },
          {
            "name": "jobCollectionName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The job collection name."
          },
          {
            "$ref": "#/parameters/apiVersion"
          }
        ],
        "responses": {
          "200": {
            "description": "The job collection has been successfully returned.",
            "schema": {
              "$ref": "#/definitions/JobCollectionDefinition"
            }
          }
        }
      },
      "put": {
        "tags": [
          "JobCollections"
        ],
        "operationId": "JobCollections_CreateOrUpdate",
        "description": "Provisions a new job collection or updates an existing job collection.",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The resource group name."
          },
          {
            "name": "jobCollectionName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The job collection name."
          },
          {
            "$ref": "#/parameters/apiVersion"
          },
          {
            "name": "jobCollection",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/JobCollectionDefinition"
            },
            "description": "The job collection definition."
          }
        ],
        "responses": {
          "200": {
            "description": "The job collection has been successfully updated.",
            "schema": {
              "$ref": "#/definitions/JobCollectionDefinition"
            }
          },
          "201": {
            "description": "The job collection has been successfully created.",
            "schema": {
              "$ref": "#/definitions/JobCollectionDefinition"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "JobCollections"
        ],
        "operationId": "JobCollections_Patch",
        "description": "Patches an existing job collection.",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The resource group name."
          },
          {
            "name": "jobCollectionName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The job collection name."
          },
          {
            "$ref": "#/parameters/apiVersion"
          },
          {
            "name": "jobCollection",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/JobCollectionDefinition"
            },
            "description": "The job collection definition."
          }
        ],
        "responses": {
          "200": {
            "description": "The job collection has been successfully patched.",
            "schema": {
              "$ref": "#/definitions/JobCollectionDefinition"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "JobCollections"
        ],
        "operationId": "JobCollections_Delete",
        "description": "Deletes a job collection.",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The resource group name."
          },
          {
            "name": "jobCollectionName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The job collection name."
          },
          {
            "$ref": "#/parameters/apiVersion"
          }
        ],
        "responses": {
          "200": {
            "description": "The job collection has been successfully deleted."
          },
          "202": {
            "description": "The delete operation for the job collection has been accepted and will complete asynchronously."
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Scheduler/jobCollections/{jobCollectionName}/enable": {
      "post": {
        "tags": [
          "JobCollections"
        ],
        "operationId": "JobCollections_Enable",
        "description": "Enables all of the jobs in the job collection.",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The resource group name."
          },
          {
            "name": "jobCollectionName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The job collection name."
          },
          {
            "$ref": "#/parameters/apiVersion"
          }
        ],
        "responses": {
          "200": {
            "description": "All of the jobs in the job collection have been successfully enabled."
          },
          "202": {
            "description": "Accepted and the enable job collection operation will complete asynchronously."
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Scheduler/jobCollections/{jobCollectionName}/disable": {
      "post": {
        "tags": [
          "JobCollections"
        ],
        "operationId": "JobCollections_Disable",
        "description": "Disables all of the jobs in the job collection.",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The resource group name."
          },
          {
            "name": "jobCollectionName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The job collection name."
          },
          {
            "$ref": "#/parameters/apiVersion"
          }
        ],
        "responses": {
          "200": {
            "description": "All of the jobs in the job collection have been successfully disabled."
          },
          "202": {
            "description": "Accepted and the disable job collection operation will complete asynchronously."
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Scheduler/jobCollections/{jobCollectionName}/jobs/{jobName}": {
      "get": {
        "tags": [
          "Jobs"
        ],
        "operationId": "Jobs_Get",
        "description": "Gets a job.",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The resource group name."
          },
          {
            "name": "jobCollectionName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The job collection name."
          },
          {
            "name": "jobName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The job name."
          },
          {
            "$ref": "#/parameters/apiVersion"
          }
        ],
        "responses": {
          "200": {
            "description": "The job has been successfully returned.",
            "schema": {
              "$ref": "#/definitions/JobDefinition"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Jobs"
        ],
        "operationId": "Jobs_CreateOrUpdate",
        "description": "Provisions a new job or updates an existing job.",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The resource group name."
          },
          {
            "name": "jobCollectionName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The job collection name."
          },
          {
            "name": "jobName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The job name."
          },
          {
            "$ref": "#/parameters/apiVersion"
          },
          {
            "name": "job",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/JobDefinition"
            },
            "description": "The job definition."
          }
        ],
        "responses": {
          "200": {
            "description": "The job has been successfully updated.",
            "schema": {
              "$ref": "#/definitions/JobDefinition"
            }
          },
          "201": {
            "description": "The job has been successfully created.",
            "schema": {
              "$ref": "#/definitions/JobDefinition"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Jobs"
        ],
        "operationId": "Jobs_Patch",
        "description": "Patches an existing job.",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The resource group name."
          },
          {
            "name": "jobCollectionName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The job collection name."
          },
          {
            "name": "jobName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The job name."
          },
          {
            "$ref": "#/parameters/apiVersion"
          },
          {
            "name": "job",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/JobDefinition"
            },
            "description": "The job definition."
          }
        ],
        "responses": {
          "200": {
            "description": "The job has been successfully patched.",
            "schema": {
              "$ref": "#/definitions/JobDefinition"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Jobs"
        ],
        "operationId": "Jobs_Delete",
        "description": "Deletes a job.",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The resource group name."
          },
          {
            "name": "jobCollectionName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The job collection name."
          },
          {
            "name": "jobName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The job name."
          },
          {
            "$ref": "#/parameters/apiVersion"
          }
        ],
        "responses": {
          "200": {
            "description": "The job has been successfully deleted."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Scheduler/jobCollections/{jobCollectionName}/jobs/{jobName}/run": {
      "post": {
        "tags": [
          "Jobs"
        ],
        "operationId": "Jobs_Run",
        "description": "Runs a job.",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The resource group name."
          },
          {
            "name": "jobCollectionName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The job collection name."
          },
          {
            "name": "jobName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The job name."
          },
          {
            "$ref": "#/parameters/apiVersion"
          }
        ],
        "responses": {
          "200": {
            "description": "The job has been successfully run."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Scheduler/jobCollections/{jobCollectionName}/jobs": {
      "get": {
        "tags": [
          "Jobs"
        ],
        "operationId": "Jobs_List",
        "description": "Lists all jobs under the specified job collection.",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The resource group name."
          },
          {
            "name": "jobCollectionName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The job collection name."
          },
          {
            "$ref": "#/parameters/apiVersion"
          },
          {
            "name": "$top",
            "in": "query",
            "required": false,
            "type": "integer",
            "minimum": 1,
            "maximum": 100,
            "description": "The number of jobs to request, in the of range of [1..100]."
          },
          {
            "name": "$skip",
            "in": "query",
            "required": false,
            "type": "integer",
            "description": "The (0-based) index of the job history list from which to begin requesting entries."
          },
          {
            "name": "$filter",
            "description": "The filter to apply on the job state.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The job has been successfully returned.",
            "schema": {
              "$ref": "#/definitions/JobListResult"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-odata": "#/definitions/JobStateFilter"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Scheduler/jobCollections/{jobCollectionName}/jobs/{jobName}/history": {
      "get": {
        "tags": [
          "Jobs"
        ],
        "operationId": "Jobs_ListJobHistory",
        "description": "Lists job history.",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The resource group name."
          },
          {
            "name": "jobCollectionName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The job collection name."
          },
          {
            "name": "jobName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The job name."
          },
          {
            "$ref": "#/parameters/apiVersion"
          },
          {
            "name": "$top",
            "in": "query",
            "required": false,
            "type": "integer",
            "minimum": 1,
            "maximum": 100,
            "description": "the number of job history to request, in the of range of [1..100]."
          },
          {
            "name": "$skip",
            "in": "query",
            "required": false,
            "type": "integer",
            "description": "The (0-based) index of the job history list from which to begin requesting entries."
          },
          {
            "name": "$filter",
            "description": "The filter to apply on the job state.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The job histories have been successfully returned.",
            "schema": {
              "$ref": "#/definitions/JobHistoryListResult"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-odata": "#/definitions/JobHistoryFilter"
      }
    }
  },
  "definitions": {
    "JobCollectionListResult": {
      "properties": {
        "value": {
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/JobCollectionDefinition"
          },
          "description": "Gets the job collections."
        },
        "nextLink": {
          "type": "string",
          "description": "Gets or sets the URL to get the next set of job collections."
        }
      }
    },
    "JobListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/JobDefinition"
          },
          "description": "Gets or sets all jobs under job collection."
        },
        "nextLink": {
          "type": "string",
          "description": "Gets or sets the URL to get the next set of jobs."
        }
      }
    },
    "JobHistoryListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/JobHistoryDefinition"
          },
          "description": "Gets or sets the job histories under job."
        },
        "nextLink": {
          "type": "string",
          "description": "Gets or sets the URL to get the next set of job histories."
        }
      }
    },
    "JobCollectionDefinition": {
      "properties": {
        "id": {
          "type": "string",
          "readOnly": true,
          "description": "Gets the job collection resource identifier."
        },
        "type": {
          "type": "string",
          "readOnly": true,
          "description": "Gets the job collection resource type."
        },
        "name": {
          "type": "string",
          "description": "Gets or sets the job collection resource name."
        },
        "location": {
          "type": "string",
          "description": "Gets or sets the storage account location."
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Gets or sets the tags."
        },
        "properties": {
          "$ref": "#/definitions/JobCollectionProperties",
          "description": "Gets or sets the job collection properties."
        }
      }
    },
    "JobCollectionProperties": {
      "properties": {
        "sku": {
          "$ref": "#/definitions/Sku",
          "description": "Gets or sets the SKU."
        },
        "state": {
          "type": "string",
          "description": "Gets or sets the state.",
          "enum": [
            "Enabled",
            "Disabled",
            "Suspended",
            "Deleted"
          ],
          "x-ms-enum": {
            "name": "JobCollectionState",
            "modelAsString": false
          }
        },
        "quota": {
          "$ref": "#/definitions/JobCollectionQuota",
          "description": "Gets or sets the job collection quota."
        }
      }
    },
    "Sku": {
      "properties": {
        "name": {
          "type": "string",
          "description": "Gets or set the SKU.",
          "enum": [
            "Standard",
            "Free",
            "P10Premium",
            "P20Premium"
          ],
          "x-ms-enum": {
            "name": "SkuDefinition",
            "modelAsString": false
          }
        }
      }
    },
    "JobCollectionQuota": {
      "properties": {
        "maxJobCount": {
          "type": "integer",
          "description": "Gets or set the maximum job count."
        },
        "maxJobOccurrence": {
          "type": "integer",
          "description": "Gets or sets the maximum job occurrence."
        },
        "maxRecurrence": {
          "$ref": "#/definitions/JobMaxRecurrence",
          "description": "Gets or set the maximum recurrence."
        }
      }
    },
    "JobDefinition": {
      "properties": {
        "id": {
          "type": "string",
          "readOnly": true,
          "description": "Gets the job resource identifier."
        },
        "type": {
          "type": "string",
          "readOnly": true,
          "description": "Gets the job resource type."
        },
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "Gets the job resource name."
        },
        "properties": {
          "$ref": "#/definitions/JobProperties",
          "description": "Gets or sets the job properties."
        }
      }
    },
    "JobProperties": {
      "properties": {
        "startTime": {
          "type": "string",
          "format": "date-time",
          "description": "Gets or sets the job start time."
        },
        "action": {
          "$ref": "#/definitions/JobAction",
          "description": "Gets or sets the job action."
        },
        "recurrence": {
          "$ref": "#/definitions/JobRecurrence",
          "description": "Gets or sets the job recurrence."
        },
        "state": {
          "$ref": "#/definitions/JobState",
          "description": "Gets or set the job state."
        },
        "status": {
          "$ref": "#/definitions/JobStatus",
          "readOnly": true,
          "description": "Gets the job status."
        }
      }
    },
    "JobHistoryDefinition": {
      "properties": {
        "id": {
          "type": "string",
          "readOnly": true,
          "description": "Gets the job history identifier."
        },
        "type": {
          "type": "string",
          "readOnly": true,
          "description": "Gets the job history resource type."
        },
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "Gets the job history name."
        },
        "properties": {
          "$ref": "#/definitions/JobHistoryDefinitionProperties",
          "readOnly": true,
          "description": "Gets or sets the job history properties."
        }
      }
    },
    "JobHistoryDefinitionProperties": {
      "properties": {
        "startTime": {
          "type": "string",
          "format": "date-time",
          "readOnly": true,
          "description": "Gets the start time for this job."
        },
        "endTime": {
          "type": "string",
          "format": "date-time",
          "readOnly": true,
          "description": "Gets the end time for this job."
        },
        "expectedExecutionTime": {
          "type": "string",
          "format": "date-time",
          "readOnly": true,
          "description": "Gets the expected execution time for this job."
        },
        "actionName": {
          "type": "string",
          "readOnly": true,
          "description": "Gets the job history action name.",
          "enum": [
            "MainAction",
            "ErrorAction"
          ],
          "x-ms-enum": {
            "name": "JobHistoryActionName",
            "modelAsString": false
          }
        },
        "status": {
          "$ref": "#/definitions/JobExecutionStatus",
          "readOnly": true,
          "description": "Gets the job history status."
        },
        "message": {
          "type": "string",
          "readOnly": true,
          "description": "Gets the message for the job history."
        },
        "retryCount": {
          "type": "integer",
          "readOnly": true,
          "description": "Gets the retry count for job."
        },
        "repeatCount": {
          "type": "integer",
          "readOnly": true,
          "description": "Gets the repeat count for the job."
        }
      }
    },
    "JobAction": {
      "properties": {
        "type": {
          "type": "string",
          "description": "Gets or sets the job action type.",
          "enum": [
            "Http",
            "Https",
            "StorageQueue",
            "ServiceBusQueue",
            "ServiceBusTopic"
          ],
          "x-ms-enum": {
            "name": "JobActionType",
            "modelAsString": false
          }
        },
        "request": {
          "$ref": "#/definitions/HttpRequest",
          "description": "Gets or sets the http requests."
        },
        "queueMessage": {
          "$ref": "#/definitions/StorageQueueMessage",
          "description": "Gets or sets the storage queue message."
        },
        "serviceBusQueueMessage": {
          "$ref": "#/definitions/ServiceBusQueueMessage",
          "description": "Gets or sets the service bus queue message."
        },
        "serviceBusTopicMessage": {
          "$ref": "#/definitions/ServiceBusTopicMessage",
          "description": "Gets or sets the service bus topic message."
        },
        "retryPolicy": {
          "$ref": "#/definitions/RetryPolicy",
          "description": "Gets or sets the retry policy."
        },
        "errorAction": {
          "$ref": "#/definitions/JobErrorAction",
          "description": "Gets or sets the error action."
        }
      }
    },
    "JobErrorAction": {
      "properties": {
        "type": {
          "type": "string",
          "description": "Gets or sets the job error action type.",
          "enum": [
            "Http",
            "Https",
            "StorageQueue",
            "ServiceBusQueue",
            "ServiceBusTopic"
          ],
          "x-ms-enum": {
            "name": "JobActionType",
            "modelAsString": false
          }
        },
        "request": {
          "$ref": "#/definitions/HttpRequest",
          "description": "Gets or sets the http requests."
        },
        "queueMessage": {
          "$ref": "#/definitions/StorageQueueMessage",
          "description": "Gets or sets the storage queue message."
        },
        "serviceBusQueueMessage": {
          "$ref": "#/definitions/ServiceBusQueueMessage",
          "description": "Gets or sets the service bus queue message."
        },
        "serviceBusTopicMessage": {
          "$ref": "#/definitions/ServiceBusTopicMessage",
          "description": "Gets or sets the service bus topic message."
        },
        "retryPolicy": {
          "$ref": "#/definitions/RetryPolicy",
          "description": "Gets or sets the retry policy."
        }
      }
    },
    "HttpRequest": {
      "properties": {
        "authentication": {
          "$ref": "#/definitions/HttpAuthentication",
          "description": "Gets or sets the authentication method of the request."
        },
        "uri": {
          "type": "string",
          "description": "Gets or sets the URI of the request."
        },
        "method": {
          "type": "string",
          "description": "Gets or sets the method of the request."
        },
        "body": {
          "type": "string",
          "description": "Gets or sets the request body."
        },
        "headers": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Gets or sets the headers."
        }
      }
    },
    "ClientCertAuthentication": {
      "x-ms-discriminator-value": "ClientCertificate",
      "properties": {
        "password": {
          "type": "string",
          "description": "Gets or sets the certificate password, return value will always be empty."
        },
        "pfx": {
          "type": "string",
          "description": "Gets or sets the pfx certificate. Accepts certification in base64 encoding, return value will always be empty."
        },
        "certificateThumbprint": {
          "type": "string",
          "description": "Gets or sets the certificate thumbprint."
        },
        "certificateExpirationDate": {
          "type": "string",
          "format": "date-time",
          "description": "Gets or sets the certificate expiration date."
        },
        "certificateSubjectName": {
          "type": "string",
          "description": "Gets or sets the certificate subject name."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/HttpAuthentication"
        }
      ]
    },
    "BasicAuthentication": {
      "x-ms-discriminator-value": "Basic",
      "properties": {
        "username": {
          "type": "string",
          "description": "Gets or sets the username."
        },
        "password": {
          "type": "string",
          "description": "Gets or sets the password, return value will always be empty."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/HttpAuthentication"
        }
      ]
    },
    "OAuthAuthentication": {
      "x-ms-discriminator-value": "ActiveDirectoryOAuth",
      "properties": {
        "secret": {
          "type": "string",
          "description": "Gets or sets the secret, return value will always be empty."
        },
        "tenant": {
          "type": "string",
          "description": "Gets or sets the tenant."
        },
        "audience": {
          "type": "string",
          "description": "Gets or sets the audience."
        },
        "clientId": {
          "type": "string",
          "description": "Gets or sets the client identifier."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/HttpAuthentication"
        }
      ]
    },
    "HttpAuthentication": {
      "discriminator": "type",
      "required": [
        "type"
      ],
      "properties": {
        "type": {
          "type": "string",
          "description": "Gets or sets the HTTP authentication type.",
          "enum": [
            "NotSpecified",
            "ClientCertificate",
            "ActiveDirectoryOAuth",
            "Basic"
          ],
          "x-ms-enum": {
            "name": "HttpAuthenticationType",
            "modelAsString": false
          }
        }
      }
    },
    "StorageQueueMessage": {
      "properties": {
        "storageAccount": {
          "type": "string",
          "description": "Gets or sets the storage account name."
        },
        "queueName": {
          "type": "string",
          "description": "Gets or sets the queue name."
        },
        "sasToken": {
          "type": "string",
          "description": "Gets or sets the SAS key."
        },
        "message": {
          "type": "string",
          "description": "Gets or sets the message."
        }
      }
    },
    "ServiceBusQueueMessage": {
      "properties": {
        "queueName": {
          "type": "string",
          "description": "Gets or sets the queue name."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ServiceBusMessage"
        }
      ]
    },
    "ServiceBusTopicMessage": {
      "properties": {
        "topicPath": {
          "type": "string",
          "description": "Gets or sets the topic path."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ServiceBusMessage"
        }
      ]
    },
    "ServiceBusMessage": {
      "properties": {
        "authentication": {
          "$ref": "#/definitions/ServiceBusAuthentication",
          "description": "Gets or sets the Service Bus authentication."
        },
        "brokeredMessageProperties": {
          "$ref": "#/definitions/ServiceBusBrokeredMessageProperties",
          "description": "Gets or sets the brokered message properties."
        },
        "customMessageProperties": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Gets or sets the custom message properties."
        },
        "message": {
          "type": "string",
          "description": "Gets or sets the message."
        },
        "namespace": {
          "type": "string",
          "description": "Gets or sets the namespace."
        },
        "transportType": {
          "type": "string",
          "description": "Gets or sets the transport type.",
          "enum": [
            "NotSpecified",
            "NetMessaging",
            "AMQP"
          ],
          "x-ms-enum": {
            "name": "ServiceBusTransportType",
            "modelAsString": false
          }
        }
      }
    },
    "ServiceBusAuthentication": {
      "properties": {
        "sasKey": {
          "type": "string",
          "description": "Gets or sets the SAS key."
        },
        "sasKeyName": {
          "type": "string",
          "description": "Gets or sets the SAS key name."
        },
        "type": {
          "type": "string",
          "description": "Gets or sets the authentication type.",
          "enum": [
            "NotSpecified",
            "SharedAccessKey"
          ],
          "x-ms-enum": {
            "name": "ServiceBusAuthenticationType",
            "modelAsString": false
          }
        }
      }
    },
    "ServiceBusBrokeredMessageProperties": {
      "properties": {
        "contentType": {
          "type": "string",
          "description": "Gets or sets the content type."
        },
        "correlationId": {
          "type": "string",
          "description": "Gets or sets the correlation ID."
        },
        "forcePersistence": {
          "type": "boolean",
          "description": "Gets or sets the force persistence."
        },
        "label": {
          "type": "string",
          "description": "Gets or sets the label."
        },
        "messageId": {
          "type": "string",
          "description": "Gets or sets the message ID."
        },
        "partitionKey": {
          "type": "string",
          "description": "Gets or sets the partition key."
        },
        "replyTo": {
          "type": "string",
          "description": "Gets or sets the reply to."
        },
        "replyToSessionId": {
          "type": "string",
          "description": "Gets or sets the reply to session ID."
        },
        "scheduledEnqueueTimeUtc": {
          "type": "string",
          "format": "date-time",
          "description": "Gets or sets the scheduled enqueue time UTC."
        },
        "sessionId": {
          "type": "string",
          "description": "Gets or sets the session ID."
        },
        "timeToLive": {
          "type": "string",
          "format": "duration",
          "description": "Gets or sets the time to live."
        },
        "to": {
          "type": "string",
          "description": "Gets or sets the to."
        },
        "viaPartitionKey": {
          "type": "string",
          "description": "Gets or sets the via partition key."
        }
      }
    },
    "RetryPolicy": {
      "properties": {
        "retryType": {
          "type": "string",
          "description": "Gets or sets the retry strategy to be used.",
          "enum": [
            "None",
            "Fixed"
          ],
          "x-ms-enum": {
            "name": "RetryType",
            "modelAsString": false
          }
        },
        "retryInterval": {
          "type": "string",
          "format": "duration",
          "description": "Gets or sets the retry interval between retries, specify duration in ISO 8601 format."
        },
        "retryCount": {
          "type": "integer",
          "description": "Gets or sets the number of times a retry should be attempted."
        }
      }
    },
    "JobMaxRecurrence": {
      "properties": {
        "frequency": {
          "type": "string",
          "description": "Gets or sets the frequency of recurrence (second, minute, hour, day, week, month).",
          "enum": [
            "Minute",
            "Hour",
            "Day",
            "Week",
            "Month"
          ],
          "x-ms-enum": {
            "name": "RecurrenceFrequency",
            "modelAsString": false
          }
        },
        "interval": {
          "type": "integer",
          "description": "Gets or sets the interval between retries."
        }
      }
    },
    "JobRecurrence": {
      "properties": {
        "frequency": {
          "type": "string",
          "description": "Gets or sets the frequency of recurrence (second, minute, hour, day, week, month).",
          "enum": [
            "Minute",
            "Hour",
            "Day",
            "Week",
            "Month"
          ],
          "x-ms-enum": {
            "name": "RecurrenceFrequency",
            "modelAsString": false
          }
        },
        "interval": {
          "type": "integer",
          "description": "Gets or sets the interval between retries."
        },
        "count": {
          "type": "integer",
          "description": "Gets or sets the maximum number of times that the job should run."
        },
        "endTime": {
          "type": "string",
          "format": "date-time",
          "description": "Gets or sets the time at which the job will complete."
        },
        "schedule": {
          "$ref": "#/definitions/JobRecurrenceSchedule"
        }
      }
    },
    "RecurrenceFrequency": {
      "type": "string",
      "description": "Gets or sets the frequency of recurrence (minute, hour, day, week, month).",
      "enum": [
        "Minute",
        "Hour",
        "Day",
        "Week",
        "Month"
      ],
      "x-ms-enum": {
        "name": "RecurrenceFrequency",
        "modelAsString": false
      }
    },
    "JobRecurrenceSchedule": {
      "properties": {
        "weekDays": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "Sunday",
              "Monday",
              "Tuesday",
              "Wednesday",
              "Thursday",
              "Friday",
              "Saturday"
            ],
            "x-ms-enum": {
              "name": "DayOfWeek",
              "modelAsString": false
            }
          },
          "description": "Gets or sets the days of the week that the job should execute on."
        },
        "hours": {
          "type": "array",
          "items": {
            "type": "integer"
          },
          "description": "Gets or sets the hours of the day that the job should execute at."
        },
        "minutes": {
          "type": "array",
          "items": {
            "type": "integer"
          },
          "description": "Gets or sets the minutes of the hour that the job should execute at."
        },
        "monthDays": {
          "type": "array",
          "items": {
            "type": "integer"
          },
          "description": "Gets or sets the days of the month that the job should execute on. Must be between 1 and 31."
        },
        "monthlyOccurrences": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/JobRecurrenceScheduleMonthlyOccurrence"
          },
          "description": "Gets or sets the occurrences of days within a month."
        }
      }
    },
    "JobRecurrenceScheduleMonthlyOccurrence": {
      "properties": {
        "day": {
          "type": "string",
          "description": "Gets or sets the day. Must be one of monday, tuesday, wednesday, thursday, friday, saturday, sunday.",
          "enum": [
            "Monday",
            "Tuesday",
            "Wednesday",
            "Thursday",
            "Friday",
            "Saturday",
            "Sunday"
          ],
          "x-ms-enum": {
            "name": "JobScheduleDay",
            "modelAsString": false
          }
        },
        "Occurrence": {
          "type": "integer",
          "description": "Gets or sets the occurrence. Must be between -5 and 5."
        }
      }
    },
    "JobStateFilter": {
      "type": "object",
      "properties": {
        "state": {
          "$ref": "#/definitions/JobState",
          "description": "Gets or sets the job state."
        }
      }
    },
    "JobState": {
      "type": "string",
      "description": "Gets or set the job state.",
      "enum": [
        "Enabled",
        "Disabled",
        "Faulted",
        "Completed"
      ],
      "x-ms-enum": {
        "name": "JobState",
        "modelAsString": false
      }
    },
    "JobHistoryFilter": {
      "type": "object",
      "properties": {
        "status": {
          "$ref": "#/definitions/JobExecutionStatus",
          "description": "Gets or sets the job execution status."
        }
      }
    },
    "JobExecutionStatus": {
      "type": "string",
      "description": "Gets the job execution status.",
      "enum": [
        "Completed",
        "Failed",
        "Postponed"
      ],
      "x-ms-enum": {
        "name": "JobExecutionStatus",
        "modelAsString": false
      }
    },
    "JobStatus": {
      "properties": {
        "executionCount": {
          "type": "integer",
          "readOnly": true,
          "description": "Gets the number of times this job has executed."
        },
        "failureCount": {
          "type": "integer",
          "readOnly": true,
          "description": "Gets the number of times this job has failed."
        },
        "faultedCount": {
          "type": "integer",
          "readOnly": true,
          "description": "Gets the number of faulted occurrences (occurrences that were retried and failed as many times as the retry policy states)."
        },
        "lastExecutionTime": {
          "type": "string",
          "format": "date-time",
          "readOnly": true,
          "description": "Gets the time the last occurrence executed in ISO-8601 format.  Could be empty if job has not run yet."
        },
        "nextExecutionTime": {
          "type": "string",
          "format": "date-time",
          "readOnly": true,
          "description": "Gets the time of the next occurrence in ISO-8601 format. Could be empty if the job is completed."
        }
      }
    }
  },
  "parameters": {
    "subscriptionId": {
      "name": "subscriptionId",
      "description": "The subscription id.",
      "in": "path",
      "required": true,
      "type": "string"
    },
    "apiVersion": {
      "name": "api-version",
      "description": "The API version.",
      "in": "query",
      "required": true,
      "type": "string"
    }
  }
}
