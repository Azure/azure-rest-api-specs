{
  "schemes": [
    "https"
  ],
  "swagger": "2.0",
  "info": {
    "title": "Azure Media Services",
    "description": "This Swagger was generated by the API Framework.",
    "version": "2018-03-30-preview"
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Azure Active Directory OAuth2 Flow",
      "scopes": {
        "user_impersonation": "Impersonate your user account"
      }
    }
  },
  "definitions": {
    "Provider": {
      "description": "A resource provider.",
      "properties": {
        "providerName": {
          "description": "The provider name.",
          "type": "string"
        }
      },
      "type": "object",
      "required": [
        "providerName"
      ]
    },
    "OperationDisplay": {
      "properties": {
        "provider": {
          "type": "string",
          "description": "The service provider."
        },
        "resource": {
          "type": "string",
          "description": "Resource on which the operation is performed."
        },
        "operation": {
          "type": "string",
          "description": "The operation type."
        },
        "description": {
          "type": "string",
          "description": "The operation description."
        }
      },
      "type": "object",
      "description": "Operation details."
    },
    "Operation": {
      "description": "An operation.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The operation name."
        },
        "display": {
          "$ref": "#/definitions/OperationDisplay",
          "description": "The operation display name."
        }
      },
      "type": "object",
      "required": [
        "name"
      ]
    },
    "Location": {
      "properties": {
        "name": {
          "type": "string"
        }
      },
      "type": "object",
      "required": [
        "name"
      ]
    },
    "EntityNameAvailabilityCheckOutput": {
      "properties": {
        "nameAvailable": {
          "type": "boolean",
          "description": "Specifies if the name is available."
        },
        "reason": {
          "type": "string",
          "description": "Specifies the reason if the name is not available."
        },
        "message": {
          "type": "string",
          "description": "Specifies the detailed reason if the name is not available."
        }
      },
      "type": "object",
      "required": [
        "nameAvailable"
      ],
      "description": "The response from the check name availability request."
    },
    "StorageAccount": {
      "properties": {
        "id": {
          "type": "string",
          "description": "The ID of the storage account resource. Media Services relies on tables and queues as well as blobs, so the primary storage account must be a Standard Storage account (either Microsoft.ClassicStorage or Microsoft.Storage). Blob only storage accounts can be added as secondary storage accounts."
        },
        "type": {
          "type": "string",
          "enum": [
            "Primary",
            "Secondary"
          ],
          "x-ms-enum": {
            "name": "StorageAccountType",
            "values": [
              {
                "value": "Primary",
                "description": "The primary storage account for the Media Services account."
              },
              {
                "value": "Secondary",
                "description": "A secondary storage account for the Media Services account."
              }
            ],
            "modelAsExtensible": true
          },
          "description": "The type of the storage account."
        }
      },
      "type": "object",
      "required": [
        "type"
      ],
      "description": "The storage account details."
    },
    "SyncStorageKeysInput": {
      "properties": {
        "id": {
          "type": "string",
          "description": "The ID of the storage account resource."
        }
      },
      "type": "object",
      "description": "The input to the sync storage keys request."
    },
    "MediaServiceProperties": {
      "properties": {
        "mediaServiceId": {
          "type": "string",
          "format": "uuid",
          "description": "The Media Services account ID.",
          "readOnly": true,
          "x-nullable": false
        },
        "storageAccounts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StorageAccount"
          },
          "description": "The storage accounts for this resource."
        }
      },
      "type": "object",
      "description": "Properties of the Media Services account."
    },
    "MediaService": {
      "description": "A Media Services account.",
      "allOf": [
        {
          "$ref": "./Common.json#/definitions/TrackedResource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/MediaServiceProperties",
          "description": "The resource properties.",
          "x-ms-client-flatten": true
        }
      },
      "type": "object"
    },
    "SubscriptionMediaService": {
      "description": "A Media Services account.",
      "allOf": [
        {
          "$ref": "./Common.json#/definitions/TrackedResource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/MediaServiceProperties",
          "description": "The resource properties.",
          "x-ms-client-flatten": true
        }
      },
      "type": "object"
    },
    "ODataError": {
      "properties": {
        "code": {
          "type": "string",
          "description": "A language-independent error name."
        },
        "message": {
          "type": "string",
          "description": "The error message."
        },
        "target": {
          "type": "string",
          "description": "The target of the error (for example, the name of the property in error)."
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ODataError"
          },
          "description": "The error details."
        }
      },
      "type": "object",
      "description": "Information about an error."
    },
    "ApiError": {
      "properties": {
        "error": {
          "$ref": "#/definitions/ODataError",
          "description": "The error properties."
        }
      },
      "type": "object",
      "description": "The API error."
    },
    "OperationCollection": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Operation"
          },
          "description": "A collection of Operation items."
        },
        "@odata.nextLink": {
          "type": "string",
          "description": "A link to the next page of the collection (when the collection contains too many results to return in one response)."
        }
      },
      "type": "object",
      "description": "A collection of Operation items."
    },
    "MediaServiceCollection": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MediaService"
          },
          "description": "A collection of MediaService items."
        },
        "@odata.nextLink": {
          "type": "string",
          "description": "A link to the next page of the collection (when the collection contains too many results to return in one response)."
        }
      },
      "type": "object",
      "description": "A collection of MediaService items."
    },
    "CheckNameAvailabilityInput": {
      "description": "The input to the check name availability request.",
      "properties": {
        "name": {
          "description": "The account name.",
          "type": "string"
        },
        "type": {
          "description": "The account type. For a Media Services account, this should be 'MediaServices'.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "SubscriptionMediaServiceCollection": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SubscriptionMediaService"
          },
          "description": "A collection of SubscriptionMediaService items."
        },
        "@odata.nextLink": {
          "type": "string",
          "description": "A link to the next page of the collection (when the collection contains too many results to return in one response)."
        }
      },
      "type": "object",
      "description": "A collection of SubscriptionMediaService items."
    }
  },
  "paths": {
    "/providers/Microsoft.Media/operations": {
      "get": {
        "summary": "List Operations",
        "description": "Lists all the Media Services operations.",
        "operationId": "Operations_List",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/OperationCollection"
            }
          },
          "default": {
            "description": "Detailed error information.",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersion"
          }
        ],
        "x-ms-pageable": {
          "nextLinkName": "@odata.nextLink"
        },
        "x-ms-examples": {
          "List Operations": {
            "$ref": "examples/operations-list-all.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/mediaservices": {
      "get": {
        "summary": "List Media Services accounts",
        "description": "List Media Services accounts in the resource group",
        "operationId": "Mediaservices_List",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/MediaServiceCollection"
            }
          },
          "default": {
            "description": "Detailed error information.",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/ApiVersion"
          }
        ],
        "x-ms-pageable": {
          "nextLinkName": "@odata.nextLink"
        },
        "x-ms-examples": {
          "List all Media Services accounts": {
            "$ref": "examples/accounts-list-all-accounts.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/mediaservices/{accountName}": {
      "get": {
        "summary": "Get a Media Services account",
        "description": "Get the details of a Media Services account",
        "operationId": "Mediaservices_Get",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/MediaService"
            }
          },
          "default": {
            "description": "Detailed error information.",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The Media Services account name."
          },
          {
            "$ref": "#/parameters/ApiVersion"
          }
        ],
        "x-ms-examples": {
          "Get a Media Services account by name": {
            "$ref": "examples/accounts-get-by-name.json"
          }
        }
      },
      "put": {
        "summary": "Create or update a Media Services account",
        "description": "Creates or updates a Media Services account",
        "operationId": "Mediaservices_CreateOrUpdate",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/MediaService"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/MediaService"
            }
          },
          "default": {
            "description": "Detailed error information.",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The Media Services account name."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MediaService"
            },
            "description": "The request parameters"
          },
          {
            "$ref": "#/parameters/ApiVersion"
          }
        ],
        "x-ms-examples": {
          "Create a Media Services account": {
            "$ref": "examples/accounts-create.json"
          }
        }
      },
      "delete": {
        "summary": "Delete a Media Services account.",
        "description": "Deletes a Media Services account",
        "operationId": "Mediaservices_Delete",
        "responses": {
          "200": {
            "description": "OK"
          },
          "default": {
            "description": "Detailed error information.",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The Media Services account name."
          },
          {
            "$ref": "#/parameters/ApiVersion"
          }
        ],
        "x-ms-examples": {
          "Delete a Media Services account": {
            "$ref": "examples/accounts-delete.json"
          }
        }
      },
      "patch": {
        "summary": "Update a Media Services account",
        "description": "Updates an existing Media Services account",
        "operationId": "Mediaservices_Update",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/MediaService"
            }
          },
          "default": {
            "description": "Detailed error information.",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The Media Services account name."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MediaService"
            },
            "description": "The request parameters"
          },
          {
            "$ref": "#/parameters/ApiVersion"
          }
        ],
        "x-ms-examples": {
          "Update a Media Services accounts": {
            "$ref": "examples/accounts-update.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/mediaservices/{accountName}/syncStorageKeys": {
      "post": {
        "summary": "Synchronizes Storage Account Keys",
        "description": "Synchronizes storage account keys for a storage account associated with the Media Service account.",
        "operationId": "Mediaservices_SyncStorageKeys",
        "responses": {
          "200": {
            "description": "OK"
          },
          "default": {
            "description": "Detailed error information.",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The Media Services account name."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SyncStorageKeysInput"
            },
            "description": "The request parameters"
          },
          {
            "$ref": "#/parameters/ApiVersion"
          }
        ],
        "x-ms-examples": {
          "Synchronizes Storage Account Keys": {
            "$ref": "examples/accounts-sync-storage-keys.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Media/locations/{locationName}/checkNameAvailability": {
      "post": {
        "summary": "Check Name Availability",
        "description": "Checks whether the Media Service resource name is available.",
        "operationId": "Locations_CheckNameAvailability",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EntityNameAvailabilityCheckOutput"
            }
          },
          "default": {
            "description": "Detailed error information.",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "name": "locationName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CheckNameAvailabilityInput"
            },
            "description": "The request parameters"
          },
          {
            "$ref": "#/parameters/ApiVersion"
          }
        ],
        "x-ms-examples": {
          "Check Name Availability": {
            "$ref": "examples/accounts-check-name-availability.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Media/mediaservices": {
      "get": {
        "summary": "List Media Services accounts",
        "description": "List Media Services accounts in the subscription.",
        "operationId": "Mediaservices_ListBySubscription",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SubscriptionMediaServiceCollection"
            }
          },
          "default": {
            "description": "Detailed error information.",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/ApiVersion"
          }
        ],
        "x-ms-pageable": {
          "nextLinkName": "@odata.nextLink"
        },
        "x-ms-examples": {
          "List all Media Services accounts": {
            "$ref": "examples/accounts-subscription-list-all-accounts.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Media/mediaservices/{accountName}": {
      "get": {
        "summary": "Get a Media Services account",
        "description": "Get the details of a Media Services account",
        "operationId": "Mediaservices_GetBySubscription",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SubscriptionMediaService"
            }
          },
          "default": {
            "description": "Detailed error information.",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "description": "The Media Services account name.",
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersion"
          }
        ],
        "x-ms-examples": {
          "Get a Media Services account by name": {
            "$ref": "examples/accounts-subscription-get-by-name.json"
          }
        }
      }
    }
  },
  "parameters": {
    "SubscriptionId": {
      "name": "subscriptionId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The unique identifier for a Microsoft Azure subscription."
    },
    "ResourceGroupName": {
      "name": "resourceGroupName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the resource group within the Azure subscription.",
      "x-ms-parameter-location": "method"
    },
    "ApiVersion": {
      "name": "api-version",
      "in": "query",
      "required": true,
      "type": "string",
      "description": "The Version of the API to be used with the client request."
    }
  }
}