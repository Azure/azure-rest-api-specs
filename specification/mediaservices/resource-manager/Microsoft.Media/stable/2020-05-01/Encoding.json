{
  "schemes": [
    "https"
  ],
  "swagger": "2.0",
  "info": {
    "title": "Azure Media Services",
    "description": "This Swagger was generated by the API Framework.",
    "version": "2020-05-01"
  },
  "host": "management.azure.com",
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Azure Active Directory OAuth2 Flow",
      "scopes": {
        "user_impersonation": "Impersonate your user account"
      }
    }
  },
  "definitions": {
    "Preset": {
      "discriminator": "@odata.type",
      "properties": {
        "@odata.type": {
          "type": "string",
          "description": "The discriminator for derived types."
        }
      },
      "type": "object",
      "required": [
        "@odata.type"
      ],
      "description": "Base type for all Presets, which define the recipe or instructions on how the input media files should be processed."
    },
    "Codec": {
      "discriminator": "@odata.type",
      "properties": {
        "@odata.type": {
          "type": "string",
          "description": "The discriminator for derived types."
        },
        "label": {
          "type": "string",
          "description": "An optional label for the codec. The label can be used to control muxing behavior."
        }
      },
      "type": "object",
      "required": [
        "@odata.type"
      ],
      "description": "Describes the basic properties of all codecs."
    },
    "Audio": {
      "x-ms-discriminator-value": "#Microsoft.Media.Audio",
      "allOf": [
        {
          "$ref": "#/definitions/Codec"
        }
      ],
      "properties": {
        "channels": {
          "type": "integer",
          "format": "int32",
          "description": "The number of channels in the audio."
        },
        "samplingRate": {
          "type": "integer",
          "format": "int32",
          "description": "The sampling rate to use for encoding in hertz."
        },
        "bitrate": {
          "type": "integer",
          "format": "int32",
          "description": "The bitrate, in bits per second, of the output encoded audio."
        }
      },
      "type": "object",
      "description": "Defines the common properties for all audio codecs."
    },
    "AacAudio": {
      "x-ms-discriminator-value": "#Microsoft.Media.AacAudio",
      "allOf": [
        {
          "$ref": "#/definitions/Audio"
        }
      ],
      "properties": {
        "profile": {
          "type": "string",
          "enum": [
            "AacLc",
            "HeAacV1",
            "HeAacV2"
          ],
          "x-ms-enum": {
            "name": "AacAudioProfile",
            "values": [
              {
                "value": "AacLc",
                "description": "Specifies that the output audio is to be encoded into AAC Low Complexity profile (AAC-LC)."
              },
              {
                "value": "HeAacV1",
                "description": "Specifies that the output audio is to be encoded into HE-AAC v1 profile."
              },
              {
                "value": "HeAacV2",
                "description": "Specifies that the output audio is to be encoded into HE-AAC v2 profile."
              }
            ],
            "modelAsString": true
          },
          "description": "The encoding profile to be used when encoding audio with AAC."
        }
      },
      "type": "object",
      "description": "Describes Advanced Audio Codec (AAC) audio encoding settings."
    },
    "Layer": {
      "discriminator": "@odata.type",
      "properties": {
        "@odata.type": {
          "type": "string",
          "description": "The discriminator for derived types."
        },
        "width": {
          "type": "string",
          "description": "The width of the output video for this layer. The value can be absolute (in pixels) or relative (in percentage). For example 50% means the output video has half as many pixels in width as the input."
        },
        "height": {
          "type": "string",
          "description": "The height of the output video for this layer. The value can be absolute (in pixels) or relative (in percentage). For example 50% means the output video has half as many pixels in height as the input."
        },
        "label": {
          "type": "string",
          "description": "The alphanumeric label for this layer, which can be used in multiplexing different video and audio layers, or in naming the output file."
        }
      },
      "type": "object",
      "required": [
        "@odata.type"
      ],
      "description": "The encoder can be configured to produce video and/or images (thumbnails) at different resolutions, by specifying a layer for each desired resolution. A layer represents the properties for the video or image at a resolution."
    },
    "H265VideoLayer": {
      "x-ms-discriminator-value": "#Microsoft.Media.H265VideoLayer",
      "allOf": [
        {
          "$ref": "#/definitions/Layer"
        }
      ],
      "properties": {
        "bitrate": {
          "type": "integer",
          "format": "int32",
          "description": "The average bitrate in bits per second at which to encode the input video when generating this layer. For example: a target bitrate of 3000Kbps or 3Mbps means this value should be 3000000 This is a required field."
        },
        "maxBitrate": {
          "type": "integer",
          "format": "int32",
          "description": "The maximum bitrate (in bits per second), at which the VBV buffer should be assumed to refill. If not specified, defaults to the same value as bitrate."
        },
        "bFrames": {
          "type": "integer",
          "format": "int32",
          "description": "The number of B-frames to be used when encoding this layer.  If not specified, the encoder chooses an appropriate number based on the video profile and level."
        },
        "frameRate": {
          "type": "string",
          "description": "The frame rate (in frames per second) at which to encode this layer. The value can be in the form of M/N where M and N are integers (For example, 30000/1001), or in the form of a number (For example, 30, or 29.97). The encoder enforces constraints on allowed frame rates based on the profile and level. If it is not specified, the encoder will use the same frame rate as the input video."
        },
        "slices": {
          "type": "integer",
          "format": "int32",
          "description": "The number of slices to be used when encoding this layer. If not specified, default is zero, which means that encoder will use a single slice for each frame."
        },
        "adaptiveBFrame": {
          "type": "boolean",
          "description": "Specifies whether or not adaptive B-frames are to be used when encoding this layer. If not specified, the encoder will turn it on whenever the video profile permits its use."
        }
      },
      "type": "object",
      "required": [
        "bitrate"
      ],
      "description": "Describes the settings to be used when encoding the input video into a desired output bitrate layer."
    },
    "H265Layer": {
      "x-ms-discriminator-value": "#Microsoft.Media.H265Layer",
      "allOf": [
        {
          "$ref": "#/definitions/H265VideoLayer"
        }
      ],
      "properties": {
        "profile": {
          "type": "string",
          "enum": [
            "Auto",
            "Main"
          ],
          "x-ms-enum": {
            "name": "H265VideoProfile",
            "values": [
              {
                "value": "Auto",
                "description": "Tells the encoder to automatically determine the appropriate H.265 profile."
              },
              {
                "value": "Main",
                "description": "Main profile (https://x265.readthedocs.io/en/default/cli.html?highlight=profile#profile-level-tier)"
              }
            ],
            "modelAsString": true
          },
          "description": "We currently support Main. Default is Auto."
        },
        "level": {
          "type": "string",
          "description": "We currently support Level up to 6.2. The value can be Auto, or a number that matches the H.265 profile. If not specified, the default is Auto, which lets the encoder choose the Level that is appropriate for this layer."
        },
        "bufferWindow": {
          "type": "string",
          "format": "duration",
          "description": "The VBV buffer window length. The value should be in ISO 8601 format. The value should be in the range [0.1-100] seconds. The default is 5 seconds (for example, PT5S)."
        },
        "referenceFrames": {
          "type": "integer",
          "format": "int32",
          "description": "The number of reference frames to be used when encoding this layer. If not specified, the encoder determines an appropriate number based on the encoder complexity setting."
        }
      },
      "type": "object",
      "description": "Describes the settings to be used when encoding the input video into a desired output bitrate layer with the H.265 video codec."
    },
    "Video": {
      "x-ms-discriminator-value": "#Microsoft.Media.Video",
      "allOf": [
        {
          "$ref": "#/definitions/Codec"
        }
      ],
      "properties": {
        "keyFrameInterval": {
          "type": "string",
          "format": "duration",
          "description": "The distance between two key frames. The value should be non-zero in the range [0.5, 20] seconds, specified in ISO 8601 format. The default is 2 seconds(PT2S). Note that this setting is ignored if VideoSyncMode.Passthrough is set, where the KeyFrameInterval value will follow the input source setting."
        },
        "stretchMode": {
          "type": "string",
          "enum": [
            "None",
            "AutoSize",
            "AutoFit"
          ],
          "x-ms-enum": {
            "name": "StretchMode",
            "values": [
              {
                "value": "None",
                "description": "Strictly respect the output resolution without considering the pixel aspect ratio or display aspect ratio of the input video."
              },
              {
                "value": "AutoSize",
                "description": "Override the output resolution, and change it to match the display aspect ratio of the input, without padding. For example, if the input is 1920x1080 and the encoding preset asks for 1280x1280, then the value in the preset is overridden, and the output will be at 1280x720, which maintains the input aspect ratio of 16:9."
              },
              {
                "value": "AutoFit",
                "description": "Pad the output (with either letterbox or pillar box) to honor the output resolution, while ensuring that the active video region in the output has the same aspect ratio as the input. For example, if the input is 1920x1080 and the encoding preset asks for 1280x1280, then the output will be at 1280x1280, which contains an inner rectangle of 1280x720 at aspect ratio of 16:9, and pillar box regions 280 pixels wide at the left and right."
              }
            ],
            "modelAsString": true
          },
          "description": "The resizing mode - how the input video will be resized to fit the desired output resolution(s). Default is AutoSize"
        },
        "syncMode": {
          "type": "string",
          "enum": [
            "Auto",
            "Passthrough",
            "Cfr",
            "Vfr"
          ],
          "x-ms-enum": {
            "name": "VideoSyncMode",
            "values": [
              {
                "value": "Auto",
                "description": "This is the default method. Chooses between Cfr and Vfr depending on muxer capabilities. For output format MP4, the default mode is Cfr."
              },
              {
                "value": "Passthrough",
                "description": "The presentation timestamps on frames are passed through from the input file to the output file writer. Recommended when the input source has variable frame rate, and are attempting to produce multiple layers for adaptive streaming in the output which have aligned GOP boundaries. Note: if two or more frames in the input have duplicate timestamps, then the output will also have the same behavior"
              },
              {
                "value": "Cfr",
                "description": "Input frames will be repeated and/or dropped as needed to achieve exactly the requested constant frame rate. Recommended when the output frame rate is explicitly set at a specified value"
              },
              {
                "value": "Vfr",
                "description": "Similar to the Passthrough mode, but if the input has frames that have duplicate timestamps, then only one frame is passed through to the output, and others are dropped. Recommended when the number of output frames is expected to be equal to the number of input frames. For example, the output is used to calculate a quality metric like PSNR against the input"
              }
            ],
            "modelAsString": true
          },
          "description": "The Video Sync Mode"
        }
      },
      "type": "object",
      "description": "Describes the basic properties for encoding the input video."
    },
    "H265Video": {
      "x-ms-discriminator-value": "#Microsoft.Media.H265Video",
      "allOf": [
        {
          "$ref": "#/definitions/Video"
        }
      ],
      "properties": {
        "sceneChangeDetection": {
          "type": "boolean",
          "description": "Specifies whether or not the encoder should insert key frames at scene changes. If not specified, the default is false. This flag should be set to true only when the encoder is being configured to produce a single output video."
        },
        "complexity": {
          "type": "string",
          "enum": [
            "Speed",
            "Balanced",
            "Quality"
          ],
          "x-ms-enum": {
            "name": "H265Complexity",
            "values": [
              {
                "value": "Speed",
                "description": "Tells the encoder to use settings that are optimized for faster encoding. Quality is sacrificed to decrease encoding time."
              },
              {
                "value": "Balanced",
                "description": "Tells the encoder to use settings that achieve a balance between speed and quality."
              },
              {
                "value": "Quality",
                "description": "Tells the encoder to use settings that are optimized to produce higher quality output at the expense of slower overall encode time."
              }
            ],
            "modelAsString": true
          },
          "description": "Tells the encoder how to choose its encoding settings.  Quality will provide for a higher compression ratio but at a higher cost and longer compute time.  Speed will produce a relatively larger file but is faster and more economical. The default value is Balanced."
        },
        "layers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/H265Layer"
          },
          "description": "The collection of output H.265 layers to be produced by the encoder."
        }
      },
      "type": "object",
      "description": "Describes all the properties for encoding a video with the H.265 codec."
    },
    "TrackDescriptor": {
      "discriminator": "@odata.type",
      "properties": {
        "@odata.type": {
          "type": "string",
          "description": "The discriminator for derived types."
        }
      },
      "type": "object",
      "required": [
        "@odata.type"
      ],
      "description": "Base type for all TrackDescriptor types, which define the metadata and selection for tracks that should be processed by a Job"
    },
    "AudioTrackDescriptor": {
      "x-ms-discriminator-value": "#Microsoft.Media.AudioTrackDescriptor",
      "allOf": [
        {
          "$ref": "#/definitions/TrackDescriptor"
        }
      ],
      "properties": {
        "channelMapping": {
          "type": "string",
          "enum": [
            "FrontLeft",
            "FrontRight",
            "Center",
            "LowFrequencyEffects",
            "BackLeft",
            "BackRight",
            "StereoLeft",
            "StereoRight"
          ],
          "x-ms-enum": {
            "name": "ChannelMapping",
            "values": [
              {
                "value": "FrontLeft",
                "description": "The Front Left Channel."
              },
              {
                "value": "FrontRight",
                "description": "The Front Right Channel."
              },
              {
                "value": "Center",
                "description": "The Center Channel."
              },
              {
                "value": "LowFrequencyEffects",
                "description": "Low Frequency Effects Channel.  Sometimes referred to as the Subwoofer."
              },
              {
                "value": "BackLeft",
                "description": "The Back Left Channel.  Sometimes referred to as the Left Surround Channel."
              },
              {
                "value": "BackRight",
                "description": "The Back Right Channel.  Sometimes referred to as the Right Surround Channel."
              },
              {
                "value": "StereoLeft",
                "description": "The Left Stereo channel.  Sometimes referred to as Down Mix Left."
              },
              {
                "value": "StereoRight",
                "description": "The Right Stereo channel.  Sometimes referred to as Down Mix Right."
              }
            ],
            "modelAsString": true
          },
          "description": "Optional designation for single channel audio tracks.  Can be used to combine the tracks into stereo or multi-channel audio tracks."
        }
      },
      "type": "object",
      "description": "A TrackSelection to select audio tracks."
    },
    "SelectAudioTrackByAttribute": {
      "x-ms-discriminator-value": "#Microsoft.Media.SelectAudioTrackByAttribute",
      "allOf": [
        {
          "$ref": "#/definitions/AudioTrackDescriptor"
        }
      ],
      "properties": {
        "attribute": {
          "type": "string",
          "enum": [
            "Bitrate",
            "Language"
          ],
          "x-ms-enum": {
            "name": "TrackAttribute",
            "values": [
              {
                "value": "Bitrate",
                "description": "The bitrate of the track."
              },
              {
                "value": "Language",
                "description": "The language of the track."
              }
            ],
            "modelAsString": true
          },
          "description": "The TrackAttribute to filter the tracks by."
        },
        "filter": {
          "type": "string",
          "enum": [
            "All",
            "Top",
            "Bottom",
            "ValueEquals"
          ],
          "x-ms-enum": {
            "name": "AttributeFilter",
            "values": [
              {
                "value": "All",
                "description": "All tracks will be included."
              },
              {
                "value": "Top",
                "description": "The first track will be included when the attribute is sorted in descending order.  Generally used to select the largest bitrate."
              },
              {
                "value": "Bottom",
                "description": "The first track will be included when the attribute is sorted in ascending order.  Generally used to select the smallest bitrate."
              },
              {
                "value": "ValueEquals",
                "description": "Any tracks that have an attribute equal to the value given will be included."
              }
            ],
            "modelAsString": true
          },
          "description": "The type of AttributeFilter to apply to the TrackAttribute in order to select the tracks."
        },
        "filterValue": {
          "type": "string",
          "description": "The value to filter the tracks by.  Only used when AttributeFilter.ValueEquals is specified for the Filter property."
        }
      },
      "type": "object",
      "required": [
        "attribute",
        "filter"
      ],
      "description": "Select audio tracks from the input by specifying an attribute and an attribute filter."
    },
    "SelectAudioTrackById": {
      "x-ms-discriminator-value": "#Microsoft.Media.SelectAudioTrackById",
      "allOf": [
        {
          "$ref": "#/definitions/AudioTrackDescriptor"
        }
      ],
      "properties": {
        "trackId": {
          "type": "integer",
          "format": "int64",
          "description": "Track identifier to select"
        }
      },
      "type": "object",
      "required": [
        "trackId"
      ],
      "description": "Select audio tracks from the input by specifying a track identifier."
    },
    "InputDefinition": {
      "discriminator": "@odata.type",
      "properties": {
        "@odata.type": {
          "type": "string",
          "description": "The discriminator for derived types."
        },
        "includedTracks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TrackDescriptor"
          },
          "description": "The list of TrackDescriptors which define the metadata and selection of tracks in the input."
        }
      },
      "type": "object",
      "required": [
        "@odata.type"
      ],
      "description": "Base class for defining an input. Use sub classes of this class to specify tracks selections and related metadata."
    },
    "FromAllInputFile": {
      "x-ms-discriminator-value": "#Microsoft.Media.FromAllInputFile",
      "allOf": [
        {
          "$ref": "#/definitions/InputDefinition"
        }
      ],
      "properties": {},
      "type": "object",
      "description": "An InputDefinition that looks across all of the files provided to select tracks specified by the IncludedTracks property. Generally used with the AudioTrackByAttribute and VideoTrackByAttribute to allow selection of a single track across a set of input files."
    },
    "FromEachInputFile": {
      "x-ms-discriminator-value": "#Microsoft.Media.FromEachInputFile",
      "allOf": [
        {
          "$ref": "#/definitions/InputDefinition"
        }
      ],
      "properties": {},
      "type": "object",
      "description": "An InputDefinition that looks at each input file provided to select tracks specified by the IncludedTracks property. Generally used with the AudioTrackByAttribute and VideoTrackByAttribute to select tracks from each file given."
    },
    "InputFile": {
      "x-ms-discriminator-value": "#Microsoft.Media.InputFile",
      "allOf": [
        {
          "$ref": "#/definitions/InputDefinition"
        }
      ],
      "properties": {
        "filename": {
          "type": "string",
          "description": "Name of the file that this input definition applies to."
        }
      },
      "type": "object",
      "description": "An InputDefinition for a single file.  TrackSelections are scoped to the file specified."
    },
    "FaceDetectorPreset": {
      "x-ms-discriminator-value": "#Microsoft.Media.FaceDetectorPreset",
      "allOf": [
        {
          "$ref": "#/definitions/Preset"
        }
      ],
      "properties": {
        "resolution": {
          "type": "string",
          "enum": [
            "SourceResolution",
            "StandardDefinition"
          ],
          "x-ms-enum": {
            "name": "AnalysisResolution",
            "values": [
              {
                "value": "SourceResolution"
              },
              {
                "value": "StandardDefinition"
              }
            ],
            "modelAsString": true
          },
          "description": "Specifies the maximum resolution at which your video is analyzed. The default behavior is \"SourceResolution,\" which will keep the input video at its original resolution when analyzed. Using \"StandardDefinition\" will resize input videos to standard definition while preserving the appropriate aspect ratio. It will only resize if the video is of higher resolution. For example, a 1920x1080 input would be scaled to 640x360 before processing. Switching to \"StandardDefinition\" will reduce the time it takes to process high resolution video. It may also reduce the cost of using this component (see https://azure.microsoft.com/en-us/pricing/details/media-services/#analytics for details). However, faces that end up being too small in the resized video may not be detected."
        },
        "mode": {
          "type": "string",
          "enum": [
            "Analyze",
            "Redact",
            "Combined"
          ],
          "x-ms-enum": {
            "name": "FaceRedactorMode",
            "values": [
              {
                "value": "Analyze",
                "description": "Analyze mode detects faces and outputs a metadata file with the results. Allows editing of the metadata file before faces are blurred with Redact mode."
              },
              {
                "value": "Redact",
                "description": "Redact mode consumes the metadata file from Analyze mode and redacts the faces found."
              },
              {
                "value": "Combined",
                "description": "Combined mode does the Analyze and Redact steps in one pass when editing the analyzed faces is not desired."
              }
            ],
            "modelAsString": true
          },
          "description": "This mode provides the ability to choose between the following settings: 1) Analyze - For detection only.This mode generates a metadata JSON file marking appearances of faces throughout the video.Where possible, appearances of the same person are assigned the same ID. 2) Combined - Additionally redacts(blurs) detected faces. 3) Redact - This enables a 2-pass process, allowing for selective redaction of a subset of detected faces.It takes in the metadata file from a prior analyze pass, along with the source video, and a user-selected subset of IDs that require redaction."
        },
        "blurType": {
          "type": "string",
          "enum": [
            "Box",
            "Low",
            "Med",
            "High",
            "Black"
          ],
          "x-ms-enum": {
            "name": "BlurType",
            "values": [
              {
                "value": "Box",
                "description": "Box: debug filter, bounding box only"
              },
              {
                "value": "Low",
                "description": "Low: box-car blur filter"
              },
              {
                "value": "Med",
                "description": "Med: Gaussian blur filter"
              },
              {
                "value": "High",
                "description": "High: Confuse blur filter"
              },
              {
                "value": "Black",
                "description": "Black: Black out filter"
              }
            ],
            "modelAsString": true
          },
          "description": "Blur type"
        },
        "experimentalOptions": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Dictionary containing key value pairs for parameters not exposed in the preset itself"
        }
      },
      "type": "object",
      "description": "Describes all the settings to be used when analyzing a video in order to detect (and optionally redact) all the faces present."
    },
    "AudioAnalyzerPreset": {
      "x-ms-discriminator-value": "#Microsoft.Media.AudioAnalyzerPreset",
      "allOf": [
        {
          "$ref": "#/definitions/Preset"
        }
      ],
      "properties": {
        "audioLanguage": {
          "type": "string",
          "description": "The language for the audio payload in the input using the BCP-47 format of 'language tag-region' (e.g: 'en-US').  If you know the language of your content, it is recommended that you specify it. The language must be specified explicitly for AudioAnalysisMode::Basic, since automatic language detection is not included in basic mode. If the language isn't specified or set to null, automatic language detection will choose the first language detected and process with the selected language for the duration of the file. It does not currently support dynamically switching between languages after the first language is detected. The automatic detection works best with audio recordings with clearly discernable speech. If automatic detection fails to find the language, transcription would fallback to 'en-US'.\" The list of supported languages is available here: https://go.microsoft.com/fwlink/?linkid=2109463"
        },
        "mode": {
          "type": "string",
          "enum": [
            "Standard",
            "Basic"
          ],
          "x-ms-enum": {
            "name": "AudioAnalysisMode",
            "values": [
              {
                "value": "Standard",
                "description": "Performs all operations included in the Basic mode, additionally performing language detection and speaker diarization."
              },
              {
                "value": "Basic",
                "description": "This mode performs speech-to-text transcription and generation of a VTT subtitle/caption file. The output of this mode includes an Insights JSON file including only the keywords, transcription,and timing information. Automatic language detection and speaker diarization are not included in this mode."
              }
            ],
            "modelAsString": true
          },
          "description": "Determines the set of audio analysis operations to be performed. If unspecified, the Standard AudioAnalysisMode would be chosen."
        },
        "experimentalOptions": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Dictionary containing key value pairs for parameters not exposed in the preset itself"
        }
      },
      "type": "object",
      "description": "The Audio Analyzer preset applies a pre-defined set of AI-based analysis operations, including speech transcription. Currently, the preset supports processing of content with a single audio track."
    },
    "Overlay": {
      "discriminator": "@odata.type",
      "properties": {
        "@odata.type": {
          "type": "string",
          "description": "The discriminator for derived types."
        },
        "inputLabel": {
          "type": "string",
          "description": "The label of the job input which is to be used as an overlay. The Input must specify exactly one file. You can specify an image file in JPG, PNG, GIF or BMP format, or an audio file (such as a WAV, MP3, WMA or M4A file), or a video file. See https://aka.ms/mesformats for the complete list of supported audio and video file formats."
        },
        "start": {
          "type": "string",
          "format": "duration",
          "description": "The start position, with reference to the input video, at which the overlay starts. The value should be in ISO 8601 format. For example, PT05S to start the overlay at 5 seconds into the input video. If not specified the overlay starts from the beginning of the input video."
        },
        "end": {
          "type": "string",
          "format": "duration",
          "description": "The end position, with reference to the input video, at which the overlay ends. The value should be in ISO 8601 format. For example, PT30S to end the overlay at 30 seconds into the input video. If not specified or the value is greater than the input video duration, the overlay will be applied until the end of the input video if the overlay media duration is greater than the input video duration, else the overlay will last as long as the overlay media duration."
        },
        "fadeInDuration": {
          "type": "string",
          "format": "duration",
          "description": "The duration over which the overlay fades in onto the input video. The value should be in ISO 8601 duration format. If not specified the default behavior is to have no fade in (same as PT0S)."
        },
        "fadeOutDuration": {
          "type": "string",
          "format": "duration",
          "description": "The duration over which the overlay fades out of the input video. The value should be in ISO 8601 duration format. If not specified the default behavior is to have no fade out (same as PT0S)."
        },
        "audioGainLevel": {
          "type": "number",
          "format": "double",
          "description": "The gain level of audio in the overlay. The value should be in the range [0, 1.0]. The default is 1.0."
        }
      },
      "type": "object",
      "required": [
        "@odata.type",
        "inputLabel"
      ],
      "description": "Base type for all overlays - image, audio or video."
    },
    "AudioOverlay": {
      "x-ms-discriminator-value": "#Microsoft.Media.AudioOverlay",
      "allOf": [
        {
          "$ref": "#/definitions/Overlay"
        }
      ],
      "properties": {},
      "type": "object",
      "description": "Describes the properties of an audio overlay."
    },
    "CopyVideo": {
      "x-ms-discriminator-value": "#Microsoft.Media.CopyVideo",
      "allOf": [
        {
          "$ref": "#/definitions/Codec"
        }
      ],
      "properties": {},
      "type": "object",
      "description": "A codec flag, which tells the encoder to copy the input video bitstream without re-encoding."
    },
    "Image": {
      "x-ms-discriminator-value": "#Microsoft.Media.Image",
      "allOf": [
        {
          "$ref": "#/definitions/Video"
        }
      ],
      "properties": {
        "start": {
          "type": "string",
          "description": "The position in the input video from where to start generating thumbnails. The value can be in ISO 8601 format (For example, PT05S to start at 5 seconds), or a frame count (For example, 10 to start at the 10th frame), or a relative value to stream duration (For example, 10% to start at 10% of stream duration). Also supports a macro {Best}, which tells the encoder to select the best thumbnail from the first few seconds of the video and will only produce one thumbnail, no matter what other settings are for Step and Range. The default value is macro {Best}."
        },
        "step": {
          "type": "string",
          "description": "The intervals at which thumbnails are generated. The value can be in ISO 8601 format (For example, PT05S for one image every 5 seconds), or a frame count (For example, 30 for one image every 30 frames), or a relative value to stream duration (For example, 10% for one image every 10% of stream duration). Note: Step value will affect the first generated thumbnail, which may not be exactly the one specified at transform preset start time. This is due to the encoder, which tries to select the best thumbnail between start time and Step position from start time as the first output. As the default value is 10%, it means if stream has long duration, the first generated thumbnail might be far away from the one specified at start time. Try to select reasonable value for Step if the first thumbnail is expected close to start time, or set Range value at 1 if only one thumbnail is needed at start time."
        },
        "range": {
          "type": "string",
          "description": "The position relative to transform preset start time in the input video at which to stop generating thumbnails. The value can be in ISO 8601 format (For example, PT5M30S to stop at 5 minutes and 30 seconds from start time), or a frame count (For example, 300 to stop at the 300th frame from the frame at start time. If this value is 1, it means only producing one thumbnail at start time), or a relative value to the stream duration (For example, 50% to stop at half of stream duration from start time). The default value is 100%, which means to stop at the end of the stream."
        }
      },
      "type": "object",
      "required": [
        "start"
      ],
      "description": "Describes the basic properties for generating thumbnails from the input video"
    },
    "Format": {
      "discriminator": "@odata.type",
      "properties": {
        "@odata.type": {
          "type": "string",
          "description": "The discriminator for derived types."
        },
        "filenamePattern": {
          "type": "string",
          "description": "The pattern of the file names for the generated output files. The following macros are supported in the file name: {Basename} - An expansion macro that will use the name of the input video file. If the base name(the file suffix is not included) of the input video file is less than 32 characters long, the base name of input video files will be used. If the length of base name of the input video file exceeds 32 characters, the base name is truncated to the first 32 characters in total length. {Extension} - The appropriate extension for this format. {Label} - The label assigned to the codec/layer. {Index} - A unique index for thumbnails. Only applicable to thumbnails. {Bitrate} - The audio/video bitrate. Not applicable to thumbnails. {Codec} - The type of the audio/video codec. {Resolution} - The video resolution. Any unsubstituted macros will be collapsed and removed from the filename."
        }
      },
      "type": "object",
      "required": [
        "@odata.type",
        "filenamePattern"
      ],
      "description": "Base class for output."
    },
    "ImageFormat": {
      "x-ms-discriminator-value": "#Microsoft.Media.ImageFormat",
      "allOf": [
        {
          "$ref": "#/definitions/Format"
        }
      ],
      "properties": {},
      "type": "object",
      "description": "Describes the properties for an output image file."
    },
    "JpgFormat": {
      "x-ms-discriminator-value": "#Microsoft.Media.JpgFormat",
      "allOf": [
        {
          "$ref": "#/definitions/ImageFormat"
        }
      ],
      "properties": {},
      "type": "object",
      "description": "Describes the settings for producing JPEG thumbnails."
    },
    "PngFormat": {
      "x-ms-discriminator-value": "#Microsoft.Media.PngFormat",
      "allOf": [
        {
          "$ref": "#/definitions/ImageFormat"
        }
      ],
      "properties": {},
      "type": "object",
      "description": "Describes the settings for producing PNG thumbnails."
    },
    "CopyAudio": {
      "x-ms-discriminator-value": "#Microsoft.Media.CopyAudio",
      "allOf": [
        {
          "$ref": "#/definitions/Codec"
        }
      ],
      "properties": {},
      "type": "object",
      "description": "A codec flag, which tells the encoder to copy the input audio bitstream."
    },
    "Deinterlace": {
      "properties": {
        "parity": {
          "type": "string",
          "enum": [
            "Auto",
            "TopFieldFirst",
            "BottomFieldFirst"
          ],
          "x-ms-enum": {
            "name": "DeinterlaceParity",
            "values": [
              {
                "value": "Auto",
                "description": "Automatically detect the order of fields"
              },
              {
                "value": "TopFieldFirst",
                "description": "Apply top field first processing of input video."
              },
              {
                "value": "BottomFieldFirst",
                "description": "Apply bottom field first processing of input video."
              }
            ],
            "modelAsString": true
          },
          "description": "The field parity for de-interlacing, defaults to Auto."
        },
        "mode": {
          "type": "string",
          "enum": [
            "Off",
            "AutoPixelAdaptive"
          ],
          "x-ms-enum": {
            "name": "DeinterlaceMode",
            "values": [
              {
                "value": "Off",
                "description": "Disables de-interlacing of the source video."
              },
              {
                "value": "AutoPixelAdaptive",
                "description": "Apply automatic pixel adaptive de-interlacing on each frame in the input video."
              }
            ],
            "modelAsString": true
          },
          "description": "The deinterlacing mode. Defaults to AutoPixelAdaptive."
        }
      },
      "type": "object",
      "description": "Describes the de-interlacing settings."
    },
    "Rectangle": {
      "properties": {
        "left": {
          "type": "string",
          "description": "The number of pixels from the left-margin. This can be absolute pixel value (e.g 100), or relative to the size of the video (For example, 50%)."
        },
        "top": {
          "type": "string",
          "description": "The number of pixels from the top-margin. This can be absolute pixel value (e.g 100), or relative to the size of the video (For example, 50%)."
        },
        "width": {
          "type": "string",
          "description": "The width of the rectangular region in pixels. This can be absolute pixel value (e.g 100), or relative to the size of the video (For example, 50%)."
        },
        "height": {
          "type": "string",
          "description": "The height of the rectangular region in pixels. This can be absolute pixel value (e.g 100), or relative to the size of the video (For example, 50%)."
        }
      },
      "type": "object",
      "description": "Describes the properties of a rectangular window applied to the input media before processing it."
    },
    "Filters": {
      "properties": {
        "deinterlace": {
          "$ref": "#/definitions/Deinterlace",
          "description": "The de-interlacing settings."
        },
        "rotation": {
          "type": "string",
          "enum": [
            "Auto",
            "None",
            "Rotate0",
            "Rotate90",
            "Rotate180",
            "Rotate270"
          ],
          "x-ms-enum": {
            "name": "Rotation",
            "values": [
              {
                "value": "Auto",
                "description": "Automatically detect and rotate as needed."
              },
              {
                "value": "None",
                "description": "Do not rotate the video.  If the output format supports it, any metadata about rotation is kept intact."
              },
              {
                "value": "Rotate0",
                "description": "Do not rotate the video but remove any metadata about the rotation."
              },
              {
                "value": "Rotate90",
                "description": "Rotate 90 degrees clockwise."
              },
              {
                "value": "Rotate180",
                "description": "Rotate 180 degrees clockwise."
              },
              {
                "value": "Rotate270",
                "description": "Rotate 270 degrees clockwise."
              }
            ],
            "modelAsString": true
          },
          "description": "The rotation, if any, to be applied to the input video, before it is encoded. Default is Auto"
        },
        "crop": {
          "$ref": "#/definitions/Rectangle",
          "description": "The parameters for the rectangular window with which to crop the input video."
        },
        "overlays": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Overlay"
          },
          "description": "The properties of overlays to be applied to the input video. These could be audio, image or video overlays."
        }
      },
      "type": "object",
      "description": "Describes all the filtering operations, such as de-interlacing, rotation etc. that are to be applied to the input media before encoding."
    },
    "VideoLayer": {
      "x-ms-discriminator-value": "#Microsoft.Media.VideoLayer",
      "allOf": [
        {
          "$ref": "#/definitions/Layer"
        }
      ],
      "properties": {
        "bitrate": {
          "type": "integer",
          "format": "int32",
          "description": "The average bitrate in bits per second at which to encode the input video when generating this layer. This is a required field."
        },
        "maxBitrate": {
          "type": "integer",
          "format": "int32",
          "description": "The maximum bitrate (in bits per second), at which the VBV buffer should be assumed to refill. If not specified, defaults to the same value as bitrate."
        },
        "bFrames": {
          "type": "integer",
          "format": "int32",
          "description": "The number of B-frames to be used when encoding this layer.  If not specified, the encoder chooses an appropriate number based on the video profile and level."
        },
        "frameRate": {
          "type": "string",
          "description": "The frame rate (in frames per second) at which to encode this layer. The value can be in the form of M/N where M and N are integers (For example, 30000/1001), or in the form of a number (For example, 30, or 29.97). The encoder enforces constraints on allowed frame rates based on the profile and level. If it is not specified, the encoder will use the same frame rate as the input video."
        },
        "slices": {
          "type": "integer",
          "format": "int32",
          "description": "The number of slices to be used when encoding this layer. If not specified, default is zero, which means that encoder will use a single slice for each frame."
        },
        "adaptiveBFrame": {
          "type": "boolean",
          "description": "Whether or not adaptive B-frames are to be used when encoding this layer. If not specified, the encoder will turn it on whenever the video profile permits its use."
        }
      },
      "type": "object",
      "required": [
        "bitrate"
      ],
      "description": "Describes the settings to be used when encoding the input video into a desired output bitrate layer."
    },
    "H264Layer": {
      "x-ms-discriminator-value": "#Microsoft.Media.H264Layer",
      "allOf": [
        {
          "$ref": "#/definitions/VideoLayer"
        }
      ],
      "properties": {
        "profile": {
          "type": "string",
          "enum": [
            "Auto",
            "Baseline",
            "Main",
            "High",
            "High422",
            "High444"
          ],
          "x-ms-enum": {
            "name": "H264VideoProfile",
            "values": [
              {
                "value": "Auto",
                "description": "Tells the encoder to automatically determine the appropriate H.264 profile."
              },
              {
                "value": "Baseline",
                "description": "Baseline profile"
              },
              {
                "value": "Main",
                "description": "Main profile"
              },
              {
                "value": "High",
                "description": "High profile."
              },
              {
                "value": "High422",
                "description": "High 4:2:2 profile."
              },
              {
                "value": "High444",
                "description": "High 4:4:4 predictive profile."
              }
            ],
            "modelAsString": true
          },
          "description": "We currently support Baseline, Main, High, High422, High444. Default is Auto."
        },
        "level": {
          "type": "string",
          "description": "We currently support Level up to 6.2. The value can be Auto, or a number that matches the H.264 profile. If not specified, the default is Auto, which lets the encoder choose the Level that is appropriate for this layer."
        },
        "bufferWindow": {
          "type": "string",
          "format": "duration",
          "description": "The VBV buffer window length. The value should be in ISO 8601 format. The value should be in the range [0.1-100] seconds. The default is 5 seconds (for example, PT5S)."
        },
        "referenceFrames": {
          "type": "integer",
          "format": "int32",
          "description": "The number of reference frames to be used when encoding this layer. If not specified, the encoder determines an appropriate number based on the encoder complexity setting."
        },
        "entropyMode": {
          "type": "string",
          "enum": [
            "Cabac",
            "Cavlc"
          ],
          "x-ms-enum": {
            "name": "EntropyMode",
            "values": [
              {
                "value": "Cabac",
                "description": "Context Adaptive Binary Arithmetic Coder (CABAC) entropy encoding."
              },
              {
                "value": "Cavlc",
                "description": "Context Adaptive Variable Length Coder (CAVLC) entropy encoding."
              }
            ],
            "modelAsString": true
          },
          "description": "The entropy mode to be used for this layer. If not specified, the encoder chooses the mode that is appropriate for the profile and level."
        }
      },
      "type": "object",
      "description": "Describes the settings to be used when encoding the input video into a desired output bitrate layer with the H.264 video codec."
    },
    "H264Video": {
      "x-ms-discriminator-value": "#Microsoft.Media.H264Video",
      "allOf": [
        {
          "$ref": "#/definitions/Video"
        }
      ],
      "properties": {
        "sceneChangeDetection": {
          "type": "boolean",
          "description": "Whether or not the encoder should insert key frames at scene changes. If not specified, the default is false. This flag should be set to true only when the encoder is being configured to produce a single output video."
        },
        "complexity": {
          "type": "string",
          "enum": [
            "Speed",
            "Balanced",
            "Quality"
          ],
          "x-ms-enum": {
            "name": "H264Complexity",
            "values": [
              {
                "value": "Speed",
                "description": "Tells the encoder to use settings that are optimized for faster encoding. Quality is sacrificed to decrease encoding time."
              },
              {
                "value": "Balanced",
                "description": "Tells the encoder to use settings that achieve a balance between speed and quality."
              },
              {
                "value": "Quality",
                "description": "Tells the encoder to use settings that are optimized to produce higher quality output at the expense of slower overall encode time."
              }
            ],
            "modelAsString": true
          },
          "description": "Tells the encoder how to choose its encoding settings. The default value is Balanced."
        },
        "layers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/H264Layer"
          },
          "description": "The collection of output H.264 layers to be produced by the encoder."
        }
      },
      "type": "object",
      "description": "Describes all the properties for encoding a video with the H.264 codec."
    },
    "JpgImage": {
      "x-ms-discriminator-value": "#Microsoft.Media.JpgImage",
      "allOf": [
        {
          "$ref": "#/definitions/Image"
        }
      ],
      "properties": {
        "layers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/JpgLayer"
          },
          "description": "A collection of output JPEG image layers to be produced by the encoder."
        },
        "spriteColumn": {
          "type": "integer",
          "format": "int32",
          "description": "Sets the number of columns used in thumbnail sprite image.  The number of rows are automatically calculated and a VTT file is generated with the coordinate mappings for each thumbnail in the sprite. Note: this value should be a positive integer and a proper value is recommended so that the output image resolution will not go beyond JPEG maximum pixel resolution limit 65535x65535."
        }
      },
      "type": "object",
      "description": "Describes the properties for producing a series of JPEG images from the input video."
    },
    "JpgLayer": {
      "x-ms-discriminator-value": "#Microsoft.Media.JpgLayer",
      "allOf": [
        {
          "$ref": "#/definitions/Layer"
        }
      ],
      "properties": {
        "quality": {
          "type": "integer",
          "format": "int32",
          "description": "The compression quality of the JPEG output. Range is from 0-100 and the default is 70."
        }
      },
      "type": "object",
      "description": "Describes the settings to produce a JPEG image from the input video."
    },
    "MultiBitrateFormat": {
      "x-ms-discriminator-value": "#Microsoft.Media.MultiBitrateFormat",
      "allOf": [
        {
          "$ref": "#/definitions/Format"
        }
      ],
      "properties": {
        "outputFiles": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OutputFile"
          },
          "description": "The list of output files to produce.  Each entry in the list is a set of audio and video layer labels to be muxed together ."
        }
      },
      "type": "object",
      "description": "Describes the properties for producing a collection of GOP aligned multi-bitrate files. The default behavior is to produce one output file for each video layer which is muxed together with all the audios. The exact output files produced can be controlled by specifying the outputFiles collection."
    },
    "OutputFile": {
      "properties": {
        "labels": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The list of labels that describe how the encoder should multiplex video and audio into an output file. For example, if the encoder is producing two video layers with labels v1 and v2, and one audio layer with label a1, then an array like '[v1, a1]' tells the encoder to produce an output file with the video track represented by v1 and the audio track represented by a1."
        }
      },
      "type": "object",
      "required": [
        "labels"
      ],
      "description": "Represents an output file produced."
    },
    "Mp4Format": {
      "x-ms-discriminator-value": "#Microsoft.Media.Mp4Format",
      "allOf": [
        {
          "$ref": "#/definitions/MultiBitrateFormat"
        }
      ],
      "properties": {},
      "type": "object",
      "description": "Describes the properties for an output ISO MP4 file."
    },
    "PngImage": {
      "x-ms-discriminator-value": "#Microsoft.Media.PngImage",
      "allOf": [
        {
          "$ref": "#/definitions/Image"
        }
      ],
      "properties": {
        "layers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PngLayer"
          },
          "description": "A collection of output PNG image layers to be produced by the encoder."
        }
      },
      "type": "object",
      "description": "Describes the properties for producing a series of PNG images from the input video."
    },
    "PngLayer": {
      "x-ms-discriminator-value": "#Microsoft.Media.PngLayer",
      "allOf": [
        {
          "$ref": "#/definitions/Layer"
        }
      ],
      "properties": {},
      "type": "object",
      "description": "Describes the settings to produce a PNG image from the input video."
    },
    "BuiltInStandardEncoderPreset": {
      "x-ms-discriminator-value": "#Microsoft.Media.BuiltInStandardEncoderPreset",
      "allOf": [
        {
          "$ref": "#/definitions/Preset"
        }
      ],
      "properties": {
        "presetName": {
          "type": "string",
          "enum": [
            "H264SingleBitrateSD",
            "H264SingleBitrate720p",
            "H264SingleBitrate1080p",
            "AdaptiveStreaming",
            "AACGoodQualityAudio",
            "ContentAwareEncodingExperimental",
            "ContentAwareEncoding",
            "CopyAllBitrateNonInterleaved",
            "H264MultipleBitrate1080p",
            "H264MultipleBitrate720p",
            "H264MultipleBitrateSD",
            "H265ContentAwareEncoding",
            "H265AdaptiveStreaming",
            "H265SingleBitrate720p",
            "H265SingleBitrate1080p",
            "H265SingleBitrate4K"
          ],
          "x-ms-enum": {
            "name": "EncoderNamedPreset",
            "values": [
              {
                "value": "H264SingleBitrateSD",
                "description": "Produces an MP4 file where the video is encoded with H.264 codec at 2200 kbps and a picture height of 480 pixels, and the stereo audio is encoded with AAC-LC codec at 128 kbps."
              },
              {
                "value": "H264SingleBitrate720p",
                "description": "Produces an MP4 file where the video is encoded with H.264 codec at 4500 kbps and a picture height of 720 pixels, and the stereo audio is encoded with AAC-LC codec at 128 kbps."
              },
              {
                "value": "H264SingleBitrate1080p",
                "description": "Produces an MP4 file where the video is encoded with H.264 codec at 6750 kbps and a picture height of 1080 pixels, and the stereo audio is encoded with AAC-LC codec at 128 kbps."
              },
              {
                "value": "AdaptiveStreaming",
                "description": "Produces a set of GOP aligned MP4 files with H.264 video and stereo AAC audio. Auto-generates a bitrate ladder based on the input resolution, bitrate and frame rate. The auto-generated preset will never exceed the input resolution. For example, if the input is 720p, output will remain 720p at best."
              },
              {
                "value": "AACGoodQualityAudio",
                "description": "Produces a single MP4 file containing only stereo audio encoded at 192 kbps."
              },
              {
                "value": "ContentAwareEncodingExperimental",
                "description": "Exposes an experimental preset for content-aware encoding. Given any input content, the service attempts to automatically determine the optimal number of layers, appropriate bitrate and resolution settings for delivery by adaptive streaming. The underlying algorithms will continue to evolve over time. The output will contain MP4 files with video and audio interleaved."
              },
              {
                "value": "ContentAwareEncoding",
                "description": "Produces a set of GOP-aligned MP4s by using content-aware encoding. Given any input content, the service performs an initial lightweight analysis of the input content, and uses the results to determine the optimal number of layers, appropriate bitrate and resolution settings for delivery by adaptive streaming. This preset is particularly effective for low and medium complexity videos, where the output files will be at lower bitrates but at a quality that still delivers a good experience to viewers. The output will contain MP4 files with video and audio interleaved."
              },
              {
                "value": "CopyAllBitrateNonInterleaved",
                "description": "Copy all video and audio streams from the input asset as non-interleaved video and audio output files. This preset can be used to clip an existing asset or convert a group of key frame (GOP) aligned MP4 files as an asset that can be streamed."
              },
              {
                "value": "H264MultipleBitrate1080p",
                "description": "Produces a set of 8 GOP-aligned MP4 files, ranging from 6000 kbps to 400 kbps, and stereo AAC audio. Resolution starts at 1080p and goes down to 180p."
              },
              {
                "value": "H264MultipleBitrate720p",
                "description": "Produces a set of 6 GOP-aligned MP4 files, ranging from 3400 kbps to 400 kbps, and stereo AAC audio. Resolution starts at 720p and goes down to 180p."
              },
              {
                "value": "H264MultipleBitrateSD",
                "description": "Produces a set of 5 GOP-aligned MP4 files, ranging from 1900kbps to 400 kbps, and stereo AAC audio. Resolution starts at 480p and goes down to 240p."
              },
              {
                "value": "H265ContentAwareEncoding",
                "description": "Produces a set of GOP-aligned MP4s by using content-aware encoding. Given any input content, the service performs an initial lightweight analysis of the input content, and uses the results to determine the optimal number of layers, appropriate bitrate and resolution settings for delivery by adaptive streaming. This preset is particularly effective for low and medium complexity videos, where the output files will be at lower bitrates but at a quality that still delivers a good experience to viewers. The output will contain MP4 files with video and audio interleaved."
              },
              {
                "value": "H265AdaptiveStreaming",
                "description": "Produces a set of GOP aligned MP4 files with H.265 video and stereo AAC audio. Auto-generates a bitrate ladder based on the input resolution, bitrate and frame rate. The auto-generated preset will never exceed the input resolution. For example, if the input is 720p, output will remain 720p at best."
              },
              {
                "value": "H265SingleBitrate720p",
                "description": "Produces an MP4 file where the video is encoded with H.265 codec at 1800 kbps and a picture height of 720 pixels, and the stereo audio is encoded with AAC-LC codec at 128 kbps."
              },
              {
                "value": "H265SingleBitrate1080p",
                "description": "Produces an MP4 file where the video is encoded with H.265 codec at 3500 kbps and a picture height of 1080 pixels, and the stereo audio is encoded with AAC-LC codec at 128 kbps."
              },
              {
                "value": "H265SingleBitrate4K",
                "description": "Produces an MP4 file where the video is encoded with H.265 codec at 9500 kbps and a picture height of 2160 pixels, and the stereo audio is encoded with AAC-LC codec at 128 kbps."
              }
            ],
            "modelAsString": true
          },
          "description": "The built-in preset to be used for encoding videos."
        }
      },
      "type": "object",
      "required": [
        "presetName"
      ],
      "description": "Describes a built-in preset for encoding the input video with the Standard Encoder."
    },
    "StandardEncoderPreset": {
      "x-ms-discriminator-value": "#Microsoft.Media.StandardEncoderPreset",
      "allOf": [
        {
          "$ref": "#/definitions/Preset"
        }
      ],
      "properties": {
        "filters": {
          "$ref": "#/definitions/Filters",
          "description": "One or more filtering operations that are applied to the input media before encoding."
        },
        "codecs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Codec"
          },
          "description": "The list of codecs to be used when encoding the input video."
        },
        "formats": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Format"
          },
          "description": "The list of outputs to be produced by the encoder."
        }
      },
      "type": "object",
      "required": [
        "codecs",
        "formats"
      ],
      "description": "Describes all the settings to be used when encoding the input video with the Standard Encoder."
    },
    "VideoAnalyzerPreset": {
      "x-ms-discriminator-value": "#Microsoft.Media.VideoAnalyzerPreset",
      "allOf": [
        {
          "$ref": "#/definitions/AudioAnalyzerPreset"
        }
      ],
      "properties": {
        "insightsToExtract": {
          "type": "string",
          "enum": [
            "AudioInsightsOnly",
            "VideoInsightsOnly",
            "AllInsights"
          ],
          "x-ms-enum": {
            "name": "InsightsType",
            "values": [
              {
                "value": "AudioInsightsOnly",
                "description": "Generate audio only insights. Ignore video even if present. Fails if no audio is present."
              },
              {
                "value": "VideoInsightsOnly",
                "description": "Generate video only insights. Ignore audio if present. Fails if no video is present."
              },
              {
                "value": "AllInsights",
                "description": "Generate both audio and video insights. Fails if either audio or video Insights fail."
              }
            ],
            "modelAsString": true
          },
          "description": "Defines the type of insights that you want the service to generate. The allowed values are 'AudioInsightsOnly', 'VideoInsightsOnly', and 'AllInsights'. The default is AllInsights. If you set this to AllInsights and the input is audio only, then only audio insights are generated. Similarly if the input is video only, then only video insights are generated. It is recommended that you not use AudioInsightsOnly if you expect some of your inputs to be video only; or use VideoInsightsOnly if you expect some of your inputs to be audio only. Your Jobs in such conditions would error out."
        }
      },
      "type": "object",
      "description": "A video analyzer preset that extracts insights (rich metadata) from both audio and video, and outputs a JSON format file."
    },
    "TransportStreamFormat": {
      "x-ms-discriminator-value": "#Microsoft.Media.TransportStreamFormat",
      "allOf": [
        {
          "$ref": "#/definitions/MultiBitrateFormat"
        }
      ],
      "properties": {},
      "type": "object",
      "description": "Describes the properties for generating an MPEG-2 Transport Stream (ISO/IEC 13818-1) output video file(s)."
    },
    "VideoOverlay": {
      "x-ms-discriminator-value": "#Microsoft.Media.VideoOverlay",
      "allOf": [
        {
          "$ref": "#/definitions/Overlay"
        }
      ],
      "properties": {
        "position": {
          "$ref": "#/definitions/Rectangle",
          "description": "The location in the input video where the overlay is applied."
        },
        "opacity": {
          "type": "number",
          "format": "double",
          "description": "The opacity of the overlay. This is a value in the range [0 - 1.0]. Default is 1.0 which mean the overlay is opaque."
        },
        "cropRectangle": {
          "$ref": "#/definitions/Rectangle",
          "description": "An optional rectangular window used to crop the overlay image or video."
        }
      },
      "type": "object",
      "description": "Describes the properties of a video overlay."
    },
    "VideoTrackDescriptor": {
      "x-ms-discriminator-value": "#Microsoft.Media.VideoTrackDescriptor",
      "allOf": [
        {
          "$ref": "#/definitions/TrackDescriptor"
        }
      ],
      "properties": {},
      "type": "object",
      "description": "A TrackSelection to select video tracks."
    },
    "SelectVideoTrackByAttribute": {
      "x-ms-discriminator-value": "#Microsoft.Media.SelectVideoTrackByAttribute",
      "allOf": [
        {
          "$ref": "#/definitions/VideoTrackDescriptor"
        }
      ],
      "properties": {
        "attribute": {
          "type": "string",
          "enum": [
            "Bitrate",
            "Language"
          ],
          "x-ms-enum": {
            "name": "TrackAttribute",
            "values": [
              {
                "value": "Bitrate",
                "description": "The bitrate of the track."
              },
              {
                "value": "Language",
                "description": "The language of the track."
              }
            ],
            "modelAsString": true
          },
          "description": "The TrackAttribute to filter the tracks by."
        },
        "filter": {
          "type": "string",
          "enum": [
            "All",
            "Top",
            "Bottom",
            "ValueEquals"
          ],
          "x-ms-enum": {
            "name": "AttributeFilter",
            "values": [
              {
                "value": "All",
                "description": "All tracks will be included."
              },
              {
                "value": "Top",
                "description": "The first track will be included when the attribute is sorted in descending order.  Generally used to select the largest bitrate."
              },
              {
                "value": "Bottom",
                "description": "The first track will be included when the attribute is sorted in ascending order.  Generally used to select the smallest bitrate."
              },
              {
                "value": "ValueEquals",
                "description": "Any tracks that have an attribute equal to the value given will be included."
              }
            ],
            "modelAsString": true
          },
          "description": "The type of AttributeFilter to apply to the TrackAttribute in order to select the tracks."
        },
        "filterValue": {
          "type": "string",
          "description": "The value to filter the tracks by.  Only used when AttributeFilter.ValueEquals is specified for the Filter property. For TrackAttribute.Bitrate, this should be an integer value in bits per second (e.g: '1500000').  The TrackAttribute.Language is not supported for video tracks."
        }
      },
      "type": "object",
      "required": [
        "attribute",
        "filter"
      ],
      "description": "Select video tracks from the input by specifying an attribute and an attribute filter."
    },
    "SelectVideoTrackById": {
      "x-ms-discriminator-value": "#Microsoft.Media.SelectVideoTrackById",
      "allOf": [
        {
          "$ref": "#/definitions/VideoTrackDescriptor"
        }
      ],
      "properties": {
        "trackId": {
          "type": "integer",
          "format": "int64",
          "description": "Track identifier to select"
        }
      },
      "type": "object",
      "required": [
        "trackId"
      ],
      "description": "Select video tracks from the input by specifying a track identifier."
    },
    "TransformOutput": {
      "properties": {
        "onError": {
          "type": "string",
          "enum": [
            "StopProcessingJob",
            "ContinueJob"
          ],
          "x-ms-enum": {
            "name": "OnErrorType",
            "values": [
              {
                "value": "StopProcessingJob",
                "description": "Tells the service that if this TransformOutput fails, then any other incomplete TransformOutputs can be stopped."
              },
              {
                "value": "ContinueJob",
                "description": "Tells the service that if this TransformOutput fails, then allow any other TransformOutput to continue."
              }
            ],
            "modelAsString": true
          },
          "description": "A Transform can define more than one outputs. This property defines what the service should do when one output fails - either continue to produce other outputs, or, stop the other outputs. The overall Job state will not reflect failures of outputs that are specified with 'ContinueJob'. The default is 'StopProcessingJob'."
        },
        "relativePriority": {
          "type": "string",
          "enum": [
            "Low",
            "Normal",
            "High"
          ],
          "x-ms-enum": {
            "name": "Priority",
            "values": [
              {
                "value": "Low",
                "description": "Used for TransformOutputs that can be generated after Normal and High priority TransformOutputs."
              },
              {
                "value": "Normal",
                "description": "Used for TransformOutputs that can be generated at Normal priority."
              },
              {
                "value": "High",
                "description": "Used for TransformOutputs that should take precedence over others."
              }
            ],
            "modelAsString": true
          },
          "description": "Sets the relative priority of the TransformOutputs within a Transform. This sets the priority that the service uses for processing TransformOutputs. The default priority is Normal."
        },
        "preset": {
          "$ref": "#/definitions/Preset",
          "description": "Preset that describes the operations that will be used to modify, transcode, or extract insights from the source file to generate the output."
        }
      },
      "type": "object",
      "required": [
        "preset"
      ],
      "description": "Describes the properties of a TransformOutput, which are the rules to be applied while generating the desired output."
    },
    "TransformProperties": {
      "properties": {
        "created": {
          "type": "string",
          "format": "date-time",
          "description": "The UTC date and time when the Transform was created, in 'YYYY-MM-DDThh:mm:ssZ' format.",
          "readOnly": true,
          "x-nullable": false
        },
        "description": {
          "type": "string",
          "description": "An optional verbose description of the Transform."
        },
        "lastModified": {
          "type": "string",
          "format": "date-time",
          "description": "The UTC date and time when the Transform was last updated, in 'YYYY-MM-DDThh:mm:ssZ' format.",
          "readOnly": true,
          "x-nullable": false
        },
        "outputs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TransformOutput"
          },
          "description": "An array of one or more TransformOutputs that the Transform should generate."
        }
      },
      "type": "object",
      "required": [
        "outputs"
      ],
      "description": "A Transform."
    },
    "Transform": {
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v1/types.json#/definitions/ProxyResource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/TransformProperties",
          "description": "The resource properties.",
          "x-ms-client-flatten": true
        },
        "systemData": {
          "$ref": "../../../../../common-types/resource-management/v1/types.json#/definitions/systemData",
          "description": "The system metadata relating to this resource.",
          "readOnly": true
        }
      },
      "type": "object",
      "description": "A Transform encapsulates the rules or instructions for generating desired outputs from input media, such as by transcoding or by extracting insights. After the Transform is created, it can be applied to input media by creating Jobs."
    },
    "JobInput": {
      "discriminator": "@odata.type",
      "properties": {
        "@odata.type": {
          "type": "string",
          "description": "The discriminator for derived types."
        }
      },
      "type": "object",
      "required": [
        "@odata.type"
      ],
      "description": "Base class for inputs to a Job."
    },
    "JobInputClip": {
      "x-ms-discriminator-value": "#Microsoft.Media.JobInputClip",
      "allOf": [
        {
          "$ref": "#/definitions/JobInput"
        }
      ],
      "properties": {
        "files": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of files. Required for JobInputHttp. Maximum of 4000 characters each."
        },
        "start": {
          "$ref": "#/definitions/ClipTime",
          "description": "Defines a point on the timeline of the input media at which processing will start. Defaults to the beginning of the input media."
        },
        "end": {
          "$ref": "#/definitions/ClipTime",
          "description": "Defines a point on the timeline of the input media at which processing will end. Defaults to the end of the input media."
        },
        "label": {
          "type": "string",
          "description": "A label that is assigned to a JobInputClip, that is used to satisfy a reference used in the Transform. For example, a Transform can be authored so as to take an image file with the label 'xyz' and apply it as an overlay onto the input video before it is encoded. When submitting a Job, exactly one of the JobInputs should be the image file, and it should have the label 'xyz'."
        },
        "inputDefinitions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/InputDefinition"
          },
          "description": "Defines a list of InputDefinitions. For each InputDefinition, it defines a list of track selections and related metadata."
        }
      },
      "type": "object",
      "description": "Represents input files for a Job."
    },
    "ClipTime": {
      "discriminator": "@odata.type",
      "properties": {
        "@odata.type": {
          "type": "string",
          "description": "The discriminator for derived types."
        }
      },
      "type": "object",
      "required": [
        "@odata.type"
      ],
      "description": "Base class for specifying a clip time. Use sub classes of this class to specify the time position in the media."
    },
    "AbsoluteClipTime": {
      "x-ms-discriminator-value": "#Microsoft.Media.AbsoluteClipTime",
      "allOf": [
        {
          "$ref": "#/definitions/ClipTime"
        }
      ],
      "properties": {
        "time": {
          "type": "string",
          "format": "duration",
          "description": "The time position on the timeline of the input media. It is usually specified as an ISO8601 period. e.g PT30S for 30 seconds."
        }
      },
      "type": "object",
      "required": [
        "time"
      ],
      "description": "Specifies the clip time as an absolute time position in the media file.  The absolute time can point to a different position depending on whether the media file starts from a timestamp of zero or not."
    },
    "UtcClipTime": {
      "x-ms-discriminator-value": "#Microsoft.Media.UtcClipTime",
      "allOf": [
        {
          "$ref": "#/definitions/ClipTime"
        }
      ],
      "properties": {
        "time": {
          "type": "string",
          "format": "date-time",
          "description": "The time position on the timeline of the input media based on Utc time."
        }
      },
      "type": "object",
      "required": [
        "time"
      ],
      "description": "Specifies the clip time as a Utc time position in the media file.  The Utc time can point to a different position depending on whether the media file starts from a timestamp of zero or not."
    },
    "JobInputs": {
      "x-ms-discriminator-value": "#Microsoft.Media.JobInputs",
      "allOf": [
        {
          "$ref": "#/definitions/JobInput"
        }
      ],
      "properties": {
        "inputs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/JobInput"
          },
          "description": "List of inputs to a Job."
        }
      },
      "type": "object",
      "description": "Describes a list of inputs to a Job."
    },
    "JobInputAsset": {
      "x-ms-discriminator-value": "#Microsoft.Media.JobInputAsset",
      "allOf": [
        {
          "$ref": "#/definitions/JobInputClip"
        }
      ],
      "properties": {
        "assetName": {
          "type": "string",
          "description": "The name of the input Asset."
        }
      },
      "type": "object",
      "required": [
        "assetName"
      ],
      "description": "Represents an Asset for input into a Job."
    },
    "JobInputHttp": {
      "x-ms-discriminator-value": "#Microsoft.Media.JobInputHttp",
      "allOf": [
        {
          "$ref": "#/definitions/JobInputClip"
        }
      ],
      "properties": {
        "baseUri": {
          "type": "string",
          "description": "Base URI for HTTPS job input. It will be concatenated with provided file names. If no base uri is given, then the provided file list is assumed to be fully qualified uris. Maximum length of 4000 characters."
        }
      },
      "type": "object",
      "description": "Represents HTTPS job input."
    },
    "JobOutput": {
      "discriminator": "@odata.type",
      "properties": {
        "@odata.type": {
          "type": "string",
          "description": "The discriminator for derived types."
        },
        "error": {
          "$ref": "#/definitions/JobError",
          "description": "If the JobOutput is in the Error state, it contains the details of the error.",
          "readOnly": true
        },
        "state": {
          "type": "string",
          "enum": [
            "Canceled",
            "Canceling",
            "Error",
            "Finished",
            "Processing",
            "Queued",
            "Scheduled"
          ],
          "x-ms-enum": {
            "name": "JobState",
            "values": [
              {
                "value": "Canceled",
                "description": "The job was canceled. This is a final state for the job."
              },
              {
                "value": "Canceling",
                "description": "The job is in the process of being canceled. This is a transient state for the job."
              },
              {
                "value": "Error",
                "description": "The job has encountered an error. This is a final state for the job."
              },
              {
                "value": "Finished",
                "description": "The job is finished. This is a final state for the job."
              },
              {
                "value": "Processing",
                "description": "The job is processing. This is a transient state for the job."
              },
              {
                "value": "Queued",
                "description": "The job is in a queued state, waiting for resources to become available. This is a transient state."
              },
              {
                "value": "Scheduled",
                "description": "The job is being scheduled to run on an available resource. This is a transient state, between queued and processing states."
              }
            ],
            "modelAsString": true
          },
          "description": "Describes the state of the JobOutput.",
          "readOnly": true,
          "x-nullable": false
        },
        "progress": {
          "type": "integer",
          "format": "int32",
          "description": "If the JobOutput is in a Processing state, this contains the Job completion percentage. The value is an estimate and not intended to be used to predict Job completion times. To determine if the JobOutput is complete, use the State property.",
          "readOnly": true,
          "x-nullable": false
        },
        "label": {
          "type": "string",
          "description": "A label that is assigned to a JobOutput in order to help uniquely identify it. This is useful when your Transform has more than one TransformOutput, whereby your Job has more than one JobOutput. In such cases, when you submit the Job, you will add two or more JobOutputs, in the same order as TransformOutputs in the Transform. Subsequently, when you retrieve the Job, either through events or on a GET request, you can use the label to easily identify the JobOutput. If a label is not provided, a default value of '{presetName}_{outputIndex}' will be used, where the preset name is the name of the preset in the corresponding TransformOutput and the output index is the relative index of the this JobOutput within the Job. Note that this index is the same as the relative index of the corresponding TransformOutput within its Transform."
        },
        "startTime": {
          "type": "string",
          "format": "date-time",
          "description": "The UTC date and time at which this Job Output began processing.",
          "readOnly": true,
          "x-nullable": true
        },
        "endTime": {
          "type": "string",
          "format": "date-time",
          "description": "The UTC date and time at which this Job Output finished processing.",
          "readOnly": true,
          "x-nullable": true
        }
      },
      "type": "object",
      "required": [
        "@odata.type"
      ],
      "description": "Describes all the properties of a JobOutput."
    },
    "JobError": {
      "properties": {
        "code": {
          "type": "string",
          "enum": [
            "ServiceError",
            "ServiceTransientError",
            "DownloadNotAccessible",
            "DownloadTransientError",
            "UploadNotAccessible",
            "UploadTransientError",
            "ConfigurationUnsupported",
            "ContentMalformed",
            "ContentUnsupported"
          ],
          "x-ms-enum": {
            "name": "JobErrorCode",
            "values": [
              {
                "value": "ServiceError",
                "description": "Fatal service error, please contact support."
              },
              {
                "value": "ServiceTransientError",
                "description": "Transient error, please retry, if retry is unsuccessful, please contact support."
              },
              {
                "value": "DownloadNotAccessible",
                "description": "While trying to download the input files, the files were not accessible, please check the availability of the source."
              },
              {
                "value": "DownloadTransientError",
                "description": "While trying to download the input files, there was an issue during transfer (storage service, network errors), see details and check your source."
              },
              {
                "value": "UploadNotAccessible",
                "description": "While trying to upload the output files, the destination was not reachable, please check the availability of the destination."
              },
              {
                "value": "UploadTransientError",
                "description": "While trying to upload the output files, there was an issue during transfer (storage service, network errors), see details and check your destination."
              },
              {
                "value": "ConfigurationUnsupported",
                "description": "There was a problem with the combination of input files and the configuration settings applied, fix the configuration settings and retry with the same input, or change input to match the configuration."
              },
              {
                "value": "ContentMalformed",
                "description": "There was a problem with the input content (for example: zero byte files, or corrupt/non-decodable files), check the input files."
              },
              {
                "value": "ContentUnsupported",
                "description": "There was a problem with the format of the input (not valid media file, or an unsupported file/codec), check the validity of the input files."
              }
            ],
            "modelAsString": true
          },
          "description": "Error code describing the error.",
          "readOnly": true,
          "x-nullable": false
        },
        "message": {
          "type": "string",
          "description": "A human-readable language-dependent representation of the error.",
          "readOnly": true
        },
        "category": {
          "type": "string",
          "enum": [
            "Service",
            "Download",
            "Upload",
            "Configuration",
            "Content"
          ],
          "x-ms-enum": {
            "name": "JobErrorCategory",
            "values": [
              {
                "value": "Service",
                "description": "The error is service related."
              },
              {
                "value": "Download",
                "description": "The error is download related."
              },
              {
                "value": "Upload",
                "description": "The error is upload related."
              },
              {
                "value": "Configuration",
                "description": "The error is configuration related."
              },
              {
                "value": "Content",
                "description": "The error is related to data in the input files."
              }
            ],
            "modelAsString": true
          },
          "description": "Helps with categorization of errors.",
          "readOnly": true,
          "x-nullable": false
        },
        "retry": {
          "type": "string",
          "enum": [
            "DoNotRetry",
            "MayRetry"
          ],
          "x-ms-enum": {
            "name": "JobRetry",
            "values": [
              {
                "value": "DoNotRetry",
                "description": "Issue needs to be investigated and then the job resubmitted with corrections or retried once the underlying issue has been corrected."
              },
              {
                "value": "MayRetry",
                "description": "Issue may be resolved after waiting for a period of time and resubmitting the same Job."
              }
            ],
            "modelAsString": true
          },
          "description": "Indicates that it may be possible to retry the Job. If retry is unsuccessful, please contact Azure support via Azure Portal.",
          "readOnly": true,
          "x-nullable": false
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/JobErrorDetail"
          },
          "description": "An array of details about specific errors that led to this reported error.",
          "readOnly": true
        }
      },
      "type": "object",
      "description": "Details of JobOutput errors."
    },
    "JobOutputAsset": {
      "x-ms-discriminator-value": "#Microsoft.Media.JobOutputAsset",
      "allOf": [
        {
          "$ref": "#/definitions/JobOutput"
        }
      ],
      "properties": {
        "assetName": {
          "type": "string",
          "description": "The name of the output Asset."
        }
      },
      "type": "object",
      "required": [
        "assetName"
      ],
      "description": "Represents an Asset used as a JobOutput."
    },
    "JobErrorDetail": {
      "properties": {
        "code": {
          "type": "string",
          "description": "Code describing the error detail.",
          "readOnly": true
        },
        "message": {
          "type": "string",
          "description": "A human-readable representation of the error.",
          "readOnly": true
        }
      },
      "type": "object",
      "description": "Details of JobOutput errors."
    },
    "JobProperties": {
      "properties": {
        "created": {
          "type": "string",
          "format": "date-time",
          "description": "The UTC date and time when the customer has created the Job, in 'YYYY-MM-DDThh:mm:ssZ' format.",
          "readOnly": true,
          "x-nullable": false
        },
        "state": {
          "type": "string",
          "enum": [
            "Canceled",
            "Canceling",
            "Error",
            "Finished",
            "Processing",
            "Queued",
            "Scheduled"
          ],
          "x-ms-enum": {
            "name": "JobState",
            "values": [
              {
                "value": "Canceled",
                "description": "The job was canceled. This is a final state for the job."
              },
              {
                "value": "Canceling",
                "description": "The job is in the process of being canceled. This is a transient state for the job."
              },
              {
                "value": "Error",
                "description": "The job has encountered an error. This is a final state for the job."
              },
              {
                "value": "Finished",
                "description": "The job is finished. This is a final state for the job."
              },
              {
                "value": "Processing",
                "description": "The job is processing. This is a transient state for the job."
              },
              {
                "value": "Queued",
                "description": "The job is in a queued state, waiting for resources to become available. This is a transient state."
              },
              {
                "value": "Scheduled",
                "description": "The job is being scheduled to run on an available resource. This is a transient state, between queued and processing states."
              }
            ],
            "modelAsString": true
          },
          "description": "The current state of the job.",
          "readOnly": true,
          "x-nullable": false
        },
        "description": {
          "type": "string",
          "description": "Optional customer supplied description of the Job."
        },
        "input": {
          "$ref": "#/definitions/JobInput",
          "description": "The inputs for the Job."
        },
        "lastModified": {
          "type": "string",
          "format": "date-time",
          "description": "The UTC date and time when the customer has last updated the Job, in 'YYYY-MM-DDThh:mm:ssZ' format.",
          "readOnly": true,
          "x-nullable": false
        },
        "outputs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/JobOutput"
          },
          "description": "The outputs for the Job."
        },
        "priority": {
          "type": "string",
          "enum": [
            "Low",
            "Normal",
            "High"
          ],
          "x-ms-enum": {
            "name": "Priority",
            "values": [
              {
                "value": "Low",
                "description": "Used for TransformOutputs that can be generated after Normal and High priority TransformOutputs."
              },
              {
                "value": "Normal",
                "description": "Used for TransformOutputs that can be generated at Normal priority."
              },
              {
                "value": "High",
                "description": "Used for TransformOutputs that should take precedence over others."
              }
            ],
            "modelAsString": true
          },
          "description": "Priority with which the job should be processed. Higher priority jobs are processed before lower priority jobs. If not set, the default is normal."
        },
        "correlationData": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Customer provided key, value pairs that will be returned in Job and JobOutput state events."
        },
        "startTime": {
          "type": "string",
          "format": "date-time",
          "description": "The UTC date and time at which this Job began processing.",
          "readOnly": true,
          "x-nullable": true
        },
        "endTime": {
          "type": "string",
          "format": "date-time",
          "description": "The UTC date and time at which this Job finished processing.",
          "readOnly": true,
          "x-nullable": true
        }
      },
      "type": "object",
      "required": [
        "input",
        "outputs"
      ],
      "description": "Properties of the Job."
    },
    "JobInputSequence": {
      "x-ms-discriminator-value": "#Microsoft.Media.JobInputSequence",
      "allOf": [
        {
          "$ref": "#/definitions/JobInput"
        }
      ],
      "properties": {
        "inputs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/JobInputClip"
          },
          "description": "JobInputs that make up the timeline."
        }
      },
      "type": "object",
      "description": "A Sequence contains an ordered list of Clips where each clip is a JobInput.  The Sequence will be treated as a single input."
    },
    "Job": {
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v1/types.json#/definitions/ProxyResource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/JobProperties",
          "description": "The resource properties.",
          "x-ms-client-flatten": true
        },
        "systemData": {
          "$ref": "../../../../../common-types/resource-management/v1/types.json#/definitions/systemData",
          "description": "The system metadata relating to this resource.",
          "readOnly": true
        }
      },
      "type": "object",
      "description": "A Job resource type. The progress and state can be obtained by polling a Job or subscribing to events using EventGrid."
    },
    "TransformCollection": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Transform"
          },
          "description": "A collection of Transform items."
        },
        "@odata.nextLink": {
          "type": "string",
          "description": "A link to the next page of the collection (when the collection contains too many results to return in one response)."
        }
      },
      "type": "object",
      "description": "A collection of Transform items."
    },
    "JobCollection": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Job"
          },
          "description": "A collection of Job items."
        },
        "@odata.nextLink": {
          "type": "string",
          "description": "A link to the next page of the collection (when the collection contains too many results to return in one response)."
        }
      },
      "type": "object",
      "description": "A collection of Job items."
    }
  },
  "paths": {
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/mediaServices/{accountName}/transforms": {
      "get": {
        "summary": "List Transforms",
        "description": "Lists the Transforms in the account.",
        "operationId": "Transforms_List",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TransformCollection"
            }
          },
          "default": {
            "description": "Detailed error information.",
            "schema": {
              "$ref": "./Common.json#/definitions/ApiError"
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/MediaServicesAccountName"
          },
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Restricts the set of items returned."
          },
          {
            "name": "$orderby",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Specifies the key by which the result collection should be ordered."
          }
        ],
        "x-ms-pageable": {
          "nextLinkName": "@odata.nextLink"
        },
        "x-ms-odata": "#/definitions/Transform",
        "x-ms-examples": {
          "Lists the Transforms": {
            "$ref": "examples/transforms-list-all.json"
          },
          "Lists the Transforms filter by name": {
            "$ref": "examples/transforms-list-all-filter-by-name.json"
          },
          "Lists the Transforms filter by created": {
            "$ref": "examples/transforms-list-all-filter-by-created.json"
          },
          "Lists the Transforms filter by lastmodified": {
            "$ref": "examples/transforms-list-all-filter-by-lastmodified.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/mediaServices/{accountName}/transforms/{transformName}": {
      "get": {
        "summary": "Get Transform",
        "description": "Gets a Transform.",
        "operationId": "Transforms_Get",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Transform"
            }
          },
          "404": {
            "description": "NotFound"
          },
          "default": {
            "description": "Detailed error information.",
            "schema": {
              "$ref": "./Common.json#/definitions/ApiError"
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/MediaServicesAccountName"
          },
          {
            "name": "transformName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The Transform name."
          },
          {
            "$ref": "#/parameters/ApiVersion"
          }
        ],
        "x-ms-examples": {
          "Get a Transform by name": {
            "$ref": "examples/transforms-get-by-name.json"
          }
        }
      },
      "put": {
        "summary": "Create or Update Transform",
        "description": "Creates or updates a new Transform.",
        "operationId": "Transforms_CreateOrUpdate",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Transform"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/Transform"
            }
          },
          "default": {
            "description": "Detailed error information.",
            "schema": {
              "$ref": "./Common.json#/definitions/ApiError"
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/MediaServicesAccountName"
          },
          {
            "name": "transformName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The Transform name."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Transform"
            },
            "description": "The request parameters"
          },
          {
            "$ref": "#/parameters/ApiVersion"
          }
        ],
        "x-ms-examples": {
          "Create or update a Transform": {
            "$ref": "examples/transforms-create.json"
          }
        }
      },
      "delete": {
        "summary": "Delete Transform",
        "description": "Deletes a Transform.",
        "operationId": "Transforms_Delete",
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "NoContent"
          },
          "default": {
            "description": "Detailed error information.",
            "schema": {
              "$ref": "./Common.json#/definitions/ApiError"
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/MediaServicesAccountName"
          },
          {
            "name": "transformName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The Transform name."
          },
          {
            "$ref": "#/parameters/ApiVersion"
          }
        ],
        "x-ms-examples": {
          "Delete a Transform": {
            "$ref": "examples/transforms-delete.json"
          }
        }
      },
      "patch": {
        "summary": "Update Transform",
        "description": "Updates a Transform.",
        "operationId": "Transforms_Update",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Transform"
            }
          },
          "default": {
            "description": "Detailed error information.",
            "schema": {
              "$ref": "./Common.json#/definitions/ApiError"
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/MediaServicesAccountName"
          },
          {
            "name": "transformName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The Transform name."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Transform"
            },
            "description": "The request parameters"
          },
          {
            "$ref": "#/parameters/ApiVersion"
          }
        ],
        "x-ms-examples": {
          "Update a Transform.": {
            "$ref": "examples/transforms-update.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/mediaServices/{accountName}/transforms/{transformName}/jobs": {
      "get": {
        "summary": "List Jobs",
        "description": "Lists all of the Jobs for the Transform.",
        "operationId": "Jobs_List",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/JobCollection"
            }
          },
          "default": {
            "description": "Detailed error information.",
            "schema": {
              "$ref": "./Common.json#/definitions/ApiError"
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/MediaServicesAccountName"
          },
          {
            "name": "transformName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The Transform name."
          },
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Restricts the set of items returned."
          },
          {
            "name": "$orderby",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Specifies the key by which the result collection should be ordered."
          }
        ],
        "x-ms-pageable": {
          "nextLinkName": "@odata.nextLink"
        },
        "x-ms-odata": "#/definitions/Job",
        "x-ms-examples": {
          "Lists all of the Jobs for the Transform.": {
            "$ref": "examples/jobs-list-all.json"
          },
          "Lists Jobs for the Transform filter by name.": {
            "$ref": "examples/jobs-list-all-filter-by-name.json"
          },
          "Lists Jobs for the Transform filter by state equal.": {
            "$ref": "examples/jobs-list-all-filter-by-state-eq.json"
          },
          "Lists Jobs for the Transform filter by state not equal.": {
            "$ref": "examples/jobs-list-all-filter-by-state-ne.json"
          },
          "Lists Jobs for the Transform filter by name and state.": {
            "$ref": "examples/jobs-list-all-filter-by-name-and-state.json"
          },
          "Lists Jobs for the Transform filter by created.": {
            "$ref": "examples/jobs-list-all-filter-by-created.json"
          },
          "Lists Jobs for the Transform filter by lastmodified.": {
            "$ref": "examples/jobs-list-all-filter-by-lastmodified.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/mediaServices/{accountName}/transforms/{transformName}/jobs/{jobName}": {
      "get": {
        "summary": "Get Job",
        "description": "Gets a Job.",
        "operationId": "Jobs_Get",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Job"
            }
          },
          "404": {
            "description": "NotFound"
          },
          "default": {
            "description": "Detailed error information.",
            "schema": {
              "$ref": "./Common.json#/definitions/ApiError"
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/MediaServicesAccountName"
          },
          {
            "name": "transformName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The Transform name."
          },
          {
            "name": "jobName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The Job name."
          },
          {
            "$ref": "#/parameters/ApiVersion"
          }
        ],
        "x-ms-examples": {
          "Get a Job by name": {
            "$ref": "examples/jobs-get-by-name.json"
          }
        }
      },
      "put": {
        "summary": "Create Job",
        "description": "Creates a Job.",
        "operationId": "Jobs_Create",
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/Job"
            }
          },
          "default": {
            "description": "Detailed error information.",
            "schema": {
              "$ref": "./Common.json#/definitions/ApiError"
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/MediaServicesAccountName"
          },
          {
            "name": "transformName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The Transform name."
          },
          {
            "name": "jobName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The Job name."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Job"
            },
            "description": "The request parameters"
          },
          {
            "$ref": "#/parameters/ApiVersion"
          }
        ],
        "x-ms-examples": {
          "Create a Job": {
            "$ref": "examples/jobs-create.json"
          }
        }
      },
      "delete": {
        "summary": "Delete Job",
        "description": "Deletes a Job.",
        "operationId": "Jobs_Delete",
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "NoContent"
          },
          "default": {
            "description": "Detailed error information.",
            "schema": {
              "$ref": "./Common.json#/definitions/ApiError"
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/MediaServicesAccountName"
          },
          {
            "name": "transformName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The Transform name."
          },
          {
            "name": "jobName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The Job name."
          },
          {
            "$ref": "#/parameters/ApiVersion"
          }
        ],
        "x-ms-examples": {
          "Delete a Job": {
            "$ref": "examples/jobs-delete.json"
          }
        }
      },
      "patch": {
        "summary": "Update Job",
        "description": "Update is only supported for description and priority. Updating Priority will take effect when the Job state is Queued or Scheduled and depending on the timing the priority update may be ignored.",
        "operationId": "Jobs_Update",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Job"
            }
          },
          "default": {
            "description": "Detailed error information.",
            "schema": {
              "$ref": "./Common.json#/definitions/ApiError"
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/MediaServicesAccountName"
          },
          {
            "name": "transformName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The Transform name."
          },
          {
            "name": "jobName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The Job name."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Job"
            },
            "description": "The request parameters"
          },
          {
            "$ref": "#/parameters/ApiVersion"
          }
        ],
        "x-ms-examples": {
          "Update a Job": {
            "$ref": "examples/jobs-update.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/mediaServices/{accountName}/transforms/{transformName}/jobs/{jobName}/cancelJob": {
      "post": {
        "summary": "Cancel Job",
        "description": "Cancel a Job.",
        "operationId": "Jobs_CancelJob",
        "responses": {
          "200": {
            "description": "OK"
          },
          "default": {
            "description": "Detailed error information.",
            "schema": {
              "$ref": "./Common.json#/definitions/ApiError"
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/MediaServicesAccountName"
          },
          {
            "name": "transformName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The Transform name."
          },
          {
            "name": "jobName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The Job name."
          },
          {
            "$ref": "#/parameters/ApiVersion"
          }
        ],
        "x-ms-examples": {
          "Cancel a Job": {
            "$ref": "examples/jobs-cancel.json"
          }
        }
      }
    }
  },
  "parameters": {
    "SubscriptionId": {
      "name": "subscriptionId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The unique identifier for a Microsoft Azure subscription."
    },
    "ResourceGroupName": {
      "name": "resourceGroupName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the resource group within the Azure subscription.",
      "x-ms-parameter-location": "method"
    },
    "MediaServicesAccountName": {
      "name": "accountName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The Media Services account name.",
      "x-ms-parameter-location": "method"
    },
    "ApiVersion": {
      "name": "api-version",
      "in": "query",
      "required": true,
      "type": "string",
      "description": "The version of the API to be used with the client request."
    }
  }
}
