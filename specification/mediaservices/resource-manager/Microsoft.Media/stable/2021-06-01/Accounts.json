{
  "schemes": [
    "https"
  ],
  "swagger": "2.0",
  "info": {
    "title": "Azure Media Services",
    "description": "This Swagger was generated by the API Framework.",
    "version": "2021-06-01"
  },
  "host": "management.azure.com",
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Azure Active Directory OAuth2 Flow",
      "scopes": {
        "user_impersonation": "Impersonate your user account"
      }
    }
  },
  "definitions": {
    "OperationDisplay": {
      "properties": {
        "provider": {
          "type": "string",
          "description": "The service provider."
        },
        "resource": {
          "type": "string",
          "description": "Resource on which the operation is performed."
        },
        "operation": {
          "type": "string",
          "description": "The operation type."
        },
        "description": {
          "type": "string",
          "description": "The operation description."
        }
      },
      "type": "object",
      "description": "Operation details."
    },
    "MetricDimension": {
      "properties": {
        "name": {
          "type": "string",
          "description": "The metric dimension name.",
          "readOnly": true
        },
        "displayName": {
          "type": "string",
          "description": "The display name for the dimension.",
          "readOnly": true
        },
        "toBeExportedForShoebox": {
          "type": "boolean",
          "description": "Whether to export metric to shoebox.",
          "readOnly": true,
          "x-nullable": false
        }
      },
      "type": "object",
      "description": "A metric dimension."
    },
    "MetricSpecification": {
      "properties": {
        "name": {
          "type": "string",
          "description": "The metric name.",
          "readOnly": true
        },
        "displayName": {
          "type": "string",
          "description": "The metric display name.",
          "readOnly": true
        },
        "displayDescription": {
          "type": "string",
          "description": "The metric display description.",
          "readOnly": true
        },
        "unit": {
          "type": "string",
          "enum": [
            "Bytes",
            "Count",
            "Milliseconds"
          ],
          "x-ms-enum": {
            "name": "MetricUnit",
            "values": [
              {
                "value": "Bytes",
                "description": "The number of bytes."
              },
              {
                "value": "Count",
                "description": "The count."
              },
              {
                "value": "Milliseconds",
                "description": "The number of milliseconds."
              }
            ],
            "modelAsString": true
          },
          "description": "The metric unit",
          "readOnly": true,
          "x-nullable": false
        },
        "aggregationType": {
          "type": "string",
          "enum": [
            "Average",
            "Count",
            "Total"
          ],
          "x-ms-enum": {
            "name": "MetricAggregationType",
            "values": [
              {
                "value": "Average",
                "description": "The average."
              },
              {
                "value": "Count",
                "description": "The count of a number of items, usually requests."
              },
              {
                "value": "Total",
                "description": "The sum."
              }
            ],
            "modelAsString": true
          },
          "description": "The metric aggregation type",
          "readOnly": true,
          "x-nullable": false
        },
        "lockAggregationType": {
          "type": "string",
          "enum": [
            "Average",
            "Count",
            "Total"
          ],
          "x-ms-enum": {
            "name": "MetricAggregationType",
            "values": [
              {
                "value": "Average",
                "description": "The average."
              },
              {
                "value": "Count",
                "description": "The count of a number of items, usually requests."
              },
              {
                "value": "Total",
                "description": "The sum."
              }
            ],
            "modelAsString": true
          },
          "description": "The metric lock aggregation type",
          "readOnly": true,
          "x-nullable": true
        },
        "supportedAggregationTypes": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Supported aggregation types."
        },
        "dimensions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MetricDimension"
          },
          "description": "The metric dimensions.",
          "readOnly": true
        },
        "enableRegionalMdmAccount": {
          "type": "boolean",
          "description": "Indicates whether regional MDM account is enabled.",
          "readOnly": true,
          "x-nullable": false
        },
        "sourceMdmAccount": {
          "type": "string",
          "description": "The source MDM account.",
          "readOnly": true
        },
        "sourceMdmNamespace": {
          "type": "string",
          "description": "The source MDM namespace.",
          "readOnly": true
        },
        "supportedTimeGrainTypes": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The supported time grain types.",
          "readOnly": true
        }
      },
      "type": "object",
      "description": "A metric emitted by service."
    },
    "Properties": {
      "properties": {
        "serviceSpecification": {
          "$ref": "#/definitions/ServiceSpecification",
          "description": "The service specifications.",
          "readOnly": true
        }
      },
      "type": "object",
      "description": "The service specification property."
    },
    "ServiceSpecification": {
      "properties": {
        "logSpecifications": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LogSpecification"
          },
          "description": "List of log specifications.",
          "readOnly": true
        },
        "metricSpecifications": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MetricSpecification"
          },
          "description": "List of metric specifications.",
          "readOnly": true
        }
      },
      "type": "object",
      "description": "The service metric specifications."
    },
    "LogSpecification": {
      "properties": {
        "name": {
          "type": "string",
          "description": "The diagnostic log category name.",
          "readOnly": true
        },
        "displayName": {
          "type": "string",
          "description": "The diagnostic log category display name.",
          "readOnly": true
        },
        "blobDuration": {
          "type": "string",
          "description": "The time range for requests in each blob.",
          "readOnly": true
        }
      },
      "type": "object",
      "description": "A diagnostic log emitted by service."
    },
    "Operation": {
      "description": "An operation.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The operation name."
        },
        "display": {
          "$ref": "#/definitions/OperationDisplay",
          "description": "The operation display name."
        },
        "origin": {
          "type": "string",
          "description": "Origin of the operation."
        },
        "properties": {
          "$ref": "#/definitions/Properties",
          "description": "Operation properties format."
        },
        "isDataAction": {
          "type": "boolean",
          "description": "Whether the operation applies to data-plane.",
          "x-nullable": true
        },
        "actionType": {
          "type": "string",
          "enum": [
            "Internal"
          ],
          "x-ms-enum": {
            "name": "ActionType",
            "values": [
              {
                "value": "Internal",
                "description": "An internal action."
              }
            ],
            "modelAsString": true
          },
          "description": "Indicates the action type.",
          "x-nullable": true
        }
      },
      "type": "object",
      "required": [
        "name"
      ]
    },
    "EntityNameAvailabilityCheckOutput": {
      "properties": {
        "nameAvailable": {
          "type": "boolean",
          "description": "Specifies if the name is available."
        },
        "reason": {
          "type": "string",
          "description": "Specifies the reason if the name is not available."
        },
        "message": {
          "type": "string",
          "description": "Specifies the detailed reason if the name is not available."
        }
      },
      "type": "object",
      "required": [
        "nameAvailable"
      ],
      "description": "The response from the check name availability request."
    },
    "StorageAccount": {
      "properties": {
        "id": {
          "type": "string",
          "description": "The ID of the storage account resource. Media Services relies on tables and queues as well as blobs, so the primary storage account must be a Standard Storage account (either Microsoft.ClassicStorage or Microsoft.Storage). Blob only storage accounts can be added as secondary storage accounts."
        },
        "type": {
          "type": "string",
          "enum": [
            "Primary",
            "Secondary"
          ],
          "x-ms-enum": {
            "name": "StorageAccountType",
            "values": [
              {
                "value": "Primary",
                "description": "The primary storage account for the Media Services account."
              },
              {
                "value": "Secondary",
                "description": "A secondary storage account for the Media Services account."
              }
            ],
            "modelAsString": true
          },
          "description": "The type of the storage account."
        },
        "identity": {
          "$ref": "#/definitions/ResourceIdentity",
          "description": "The storage account identity."
        },
        "status": {
          "type": "string",
          "description": "The current status of the storage account mapping.",
          "readOnly": true
        }
      },
      "type": "object",
      "required": [
        "type"
      ],
      "description": "The storage account details."
    },
    "SyncStorageKeysInput": {
      "properties": {
        "id": {
          "type": "string",
          "description": "The ID of the storage account resource."
        }
      },
      "type": "object",
      "description": "The input to the sync storage keys request."
    },
    "MediaServiceProperties": {
      "properties": {
        "mediaServiceId": {
          "type": "string",
          "format": "uuid",
          "description": "The Media Services account ID.",
          "readOnly": true,
          "x-nullable": false
        },
        "storageAccounts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StorageAccount"
          },
          "description": "The storage accounts for this resource."
        },
        "storageAuthentication": {
          "type": "string",
          "enum": [
            "System",
            "ManagedIdentity"
          ],
          "x-ms-enum": {
            "name": "StorageAuthentication",
            "values": [
              {
                "value": "System",
                "description": "System authentication."
              },
              {
                "value": "ManagedIdentity",
                "description": "Managed Identity authentication."
              }
            ],
            "modelAsString": true
          },
          "x-nullable": true
        },
        "encryption": {
          "$ref": "#/definitions/AccountEncryption",
          "description": "The account encryption properties."
        },
        "keyDelivery": {
          "$ref": "#/definitions/KeyDelivery",
          "description": "The Key Delivery properties for Media Services account."
        },
        "publicNetworkAccess": {
          "type": "string",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "PublicNetworkAccess",
            "values": [
              {
                "value": "Enabled",
                "description": "Public network access is enabled."
              },
              {
                "value": "Disabled",
                "description": "Public network access is disabled."
              }
            ],
            "modelAsString": true
          },
          "description": "Whether or not public network access is allowed for resources under the Media Services account.",
          "x-nullable": true
        }
      },
      "type": "object",
      "description": "Properties of the Media Services account."
    },
    "MediaService": {
      "description": "A Media Services account.",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/TrackedResource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/MediaServiceProperties",
          "description": "The resource properties.",
          "x-ms-client-flatten": true
        },
        "identity": {
          "$ref": "#/definitions/MediaServiceIdentity",
          "description": "The Managed Identity for the Media Services account."
        },
        "systemData": {
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/systemData",
          "description": "The system metadata relating to this resource.",
          "readOnly": true
        }
      },
      "type": "object"
    },
    "MediaServiceUpdate": {
      "description": "A Media Services account update.",
      "properties": {
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-ms-mutability": [
            "read",
            "create",
            "update"
          ],
          "description": "Resource tags."
        },
        "properties": {
          "$ref": "#/definitions/MediaServiceProperties",
          "description": "The resource properties.",
          "x-ms-client-flatten": true
        },
        "identity": {
          "$ref": "#/definitions/MediaServiceIdentity",
          "description": "The Managed Identity for the Media Services account."
        }
      },
      "type": "object"
    },
    "ListEdgePoliciesInput": {
      "properties": {
        "deviceId": {
          "type": "string",
          "description": "Unique identifier of the edge device."
        }
      },
      "type": "object"
    },
    "EdgeUsageDataEventHub": {
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the Event Hub where usage will be reported."
        },
        "namespace": {
          "type": "string",
          "description": "Namespace of the Event Hub where usage will be reported."
        },
        "token": {
          "type": "string",
          "description": "SAS token needed to interact with Event Hub."
        }
      },
      "type": "object"
    },
    "EdgeUsageDataCollectionPolicy": {
      "properties": {
        "dataCollectionFrequency": {
          "type": "string",
          "description": "Usage data collection frequency in ISO 8601 duration format e.g. PT10M , PT5H."
        },
        "dataReportingFrequency": {
          "type": "string",
          "description": "Usage data reporting frequency in ISO 8601 duration format e.g. PT10M , PT5H."
        },
        "maxAllowedUnreportedUsageDuration": {
          "type": "string",
          "description": "Maximum time for which the functionality of the device will not be hampered for not reporting the usage data."
        },
        "eventHubDetails": {
          "$ref": "#/definitions/EdgeUsageDataEventHub",
          "description": "Details of Event Hub where the usage will be reported."
        }
      },
      "type": "object"
    },
    "EdgePolicies": {
      "properties": {
        "usageDataCollectionPolicy": {
          "$ref": "#/definitions/EdgeUsageDataCollectionPolicy"
        }
      },
      "type": "object"
    },
    "MediaServiceIdentity": {
      "properties": {
        "type": {
          "type": "string",
          "description": "The identity type."
        },
        "principalId": {
          "type": "string",
          "format": "uuid",
          "description": "The Principal ID of the identity.",
          "readOnly": true,
          "x-nullable": true
        },
        "tenantId": {
          "type": "string",
          "format": "uuid",
          "description": "The Tenant ID of the identity.",
          "readOnly": true,
          "x-nullable": true
        },
        "userAssignedIdentities": {
          "$ref": "#/definitions/UserAssignedManagedIdentities",
          "description": "The user assigned managed identities."
        }
      },
      "type": "object",
      "required": [
        "type"
      ]
    },
    "UserAssignedManagedIdentity": {
      "properties": {
        "clientId": {
          "type": "string",
          "format": "uuid",
          "description": "The client ID.",
          "readOnly": true,
          "x-nullable": true
        },
        "principalId": {
          "type": "string",
          "format": "uuid",
          "description": "The principal ID.",
          "readOnly": true,
          "x-nullable": true
        }
      },
      "type": "object"
    },
    "UserAssignedManagedIdentities": {
      "type": "object",
      "description": "The User Assigned Managed Identities.",
      "additionalProperties": {
        "$ref": "#/definitions/UserAssignedManagedIdentity"
      }
    },
    "KeyVaultProperties": {
      "properties": {
        "keyIdentifier": {
          "type": "string",
          "description": "The URL of the Key Vault key used to encrypt the account. The key may either be versioned (for example https://vault/keys/mykey/version1) or reference a key without a version (for example https://vault/keys/mykey)."
        },
        "currentKeyIdentifier": {
          "type": "string",
          "description": "The current key used to encrypt the Media Services account, including the key version.",
          "readOnly": true
        }
      },
      "type": "object"
    },
    "ResourceIdentity": {
      "properties": {
        "userAssignedIdentity": {
          "type": "string",
          "description": "The user assigned managed identity's ARM ID to use when accessing a resource."
        },
        "useSystemAssignedIdentity": {
          "type": "boolean",
          "description": "Indicates whether to use System Assigned Managed Identity. Mutual exclusive with User Assigned Managed Identity."
        }
      },
      "type": "object",
      "required": [
        "useSystemAssignedIdentity"
      ]
    },
    "AccountEncryption": {
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "SystemKey",
            "CustomerKey"
          ],
          "x-ms-enum": {
            "name": "AccountEncryptionKeyType",
            "values": [
              {
                "value": "SystemKey",
                "description": "The Account Key is encrypted with a System Key."
              },
              {
                "value": "CustomerKey",
                "description": "The Account Key is encrypted with a Customer Key."
              }
            ],
            "modelAsString": true
          },
          "description": "The type of key used to encrypt the Account Key."
        },
        "keyVaultProperties": {
          "$ref": "#/definitions/KeyVaultProperties",
          "description": "The properties of the key used to encrypt the account."
        },
        "identity": {
          "$ref": "#/definitions/ResourceIdentity",
          "description": "The Key Vault identity."
        },
        "status": {
          "type": "string",
          "description": "The current status of the Key Vault mapping.",
          "readOnly": true
        }
      },
      "type": "object",
      "required": [
        "type"
      ]
    },
    "AccessControl": {
      "properties": {
        "defaultAction": {
          "type": "string",
          "enum": [
            "Allow",
            "Deny"
          ],
          "x-ms-enum": {
            "name": "DefaultAction",
            "values": [
              {
                "value": "Allow",
                "description": "All public IP addresses are allowed."
              },
              {
                "value": "Deny",
                "description": "Public IP addresses are blocked."
              }
            ],
            "modelAsString": true
          },
          "description": "The behavior for IP access control in Key Delivery."
        },
        "ipAllowList": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The IP allow list for access control in Key Delivery. If the default action is set to 'Allow', the IP allow list must be empty."
        }
      },
      "type": "object"
    },
    "KeyDelivery": {
      "properties": {
        "accessControl": {
          "$ref": "#/definitions/AccessControl",
          "description": "The access control properties for Key Delivery."
        }
      },
      "type": "object"
    },
    "OperationCollection": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Operation"
          },
          "description": "A collection of Operation items."
        }
      },
      "type": "object",
      "description": "A collection of Operation items."
    },
    "MediaServiceCollection": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MediaService"
          },
          "description": "A collection of MediaService items."
        },
        "@odata.nextLink": {
          "type": "string",
          "description": "A link to the next page of the collection (when the collection contains too many results to return in one response)."
        }
      },
      "type": "object",
      "description": "A collection of MediaService items."
    },
    "CheckNameAvailabilityInput": {
      "description": "The input to the check name availability request.",
      "properties": {
        "name": {
          "description": "The account name.",
          "type": "string"
        },
        "type": {
          "description": "The account type. For a Media Services account, this should be 'MediaServices'.",
          "type": "string"
        }
      },
      "type": "object"
    }
  },
  "paths": {
    "/providers/Microsoft.Media/operations": {
      "get": {
        "summary": "List Operations",
        "description": "Lists all the Media Services operations.",
        "operationId": "Operations_List",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/OperationCollection"
            }
          },
          "default": {
            "description": "Detailed error information.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersion"
          }
        ],
        "x-ms-examples": {
          "List Operations": {
            "$ref": "examples/operations-list-all.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/mediaservices": {
      "get": {
        "summary": "List Media Services accounts",
        "description": "List Media Services accounts in the resource group",
        "operationId": "Mediaservices_List",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/MediaServiceCollection"
            }
          },
          "default": {
            "description": "Detailed error information.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/ApiVersion"
          }
        ],
        "x-ms-pageable": {
          "nextLinkName": "@odata.nextLink"
        },
        "x-ms-examples": {
          "List all Media Services accounts": {
            "$ref": "examples/accounts-list-all-accounts.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/mediaservices/{accountName}": {
      "get": {
        "summary": "Get a Media Services account",
        "description": "Get the details of a Media Services account",
        "operationId": "Mediaservices_Get",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/MediaService"
            }
          },
          "default": {
            "description": "Detailed error information.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The Media Services account name."
          },
          {
            "$ref": "#/parameters/ApiVersion"
          }
        ],
        "x-ms-examples": {
          "Get a Media Services account by name": {
            "$ref": "examples/accounts-get-by-name.json"
          }
        }
      },
      "put": {
        "summary": "Create or update a Media Services account",
        "description": "Creates or updates a Media Services account",
        "operationId": "Mediaservices_CreateOrUpdate",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/MediaService"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/MediaService"
            }
          },
          "default": {
            "description": "Detailed error information.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The Media Services account name."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MediaService"
            },
            "description": "The request parameters"
          },
          {
            "$ref": "#/parameters/ApiVersion"
          }
        ],
        "x-ms-examples": {
          "Create a Media Services account": {
            "$ref": "examples/accounts-create.json"
          }
        }
      },
      "delete": {
        "summary": "Delete a Media Services account.",
        "description": "Deletes a Media Services account",
        "operationId": "Mediaservices_Delete",
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "NoContent"
          },
          "default": {
            "description": "Detailed error information.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The Media Services account name."
          },
          {
            "$ref": "#/parameters/ApiVersion"
          }
        ],
        "x-ms-examples": {
          "Delete a Media Services account": {
            "$ref": "examples/accounts-delete.json"
          }
        }
      },
      "patch": {
        "summary": "Update a Media Services account",
        "description": "Updates an existing Media Services account",
        "operationId": "Mediaservices_Update",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/MediaService"
            }
          },
          "default": {
            "description": "Detailed error information.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The Media Services account name."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MediaServiceUpdate"
            },
            "description": "The request parameters"
          },
          {
            "$ref": "#/parameters/ApiVersion"
          }
        ],
        "x-ms-examples": {
          "Update a Media Services accounts": {
            "$ref": "examples/accounts-update.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/mediaservices/{accountName}/syncStorageKeys": {
      "post": {
        "summary": "Synchronizes Storage Account Keys",
        "description": "Synchronizes storage account keys for a storage account associated with the Media Service account.",
        "operationId": "Mediaservices_SyncStorageKeys",
        "responses": {
          "200": {
            "description": "OK"
          },
          "default": {
            "description": "Detailed error information.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The Media Services account name."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SyncStorageKeysInput"
            },
            "description": "The request parameters"
          },
          {
            "$ref": "#/parameters/ApiVersion"
          }
        ],
        "x-ms-examples": {
          "Synchronizes Storage Account Keys": {
            "$ref": "examples/accounts-sync-storage-keys.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/mediaservices/{accountName}/listEdgePolicies": {
      "post": {
        "summary": "List the media edge policies associated with the Media Services account.",
        "description": "List the media edge policies associated with the Media Services account.",
        "operationId": "Mediaservices_ListEdgePolicies",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EdgePolicies"
            }
          },
          "default": {
            "description": "Detailed error information.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The Media Services account name."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ListEdgePoliciesInput"
            },
            "description": "The request parameters"
          },
          {
            "$ref": "#/parameters/ApiVersion"
          }
        ],
        "x-ms-examples": {
          "List the media edge policies.": {
            "$ref": "examples/accounts-list-media-edge-policies.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/mediaservices/{accountName}/privateLinkResources": {
      "get": {
        "summary": "Get list of group IDs.",
        "description": "Get list of group IDs.",
        "operationId": "PrivateLinkResources_List",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/privatelinks.json#/definitions/PrivateLinkResourceListResult"
            }
          },
          "default": {
            "description": "Detailed error information.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The Media Services account name."
          },
          {
            "$ref": "#/parameters/ApiVersion"
          }
        ],
        "x-ms-examples": {
          "Get list of all group IDs.": {
            "$ref": "examples/private-link-resources-list.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/mediaservices/{accountName}/privateLinkResources/{name}": {
      "get": {
        "summary": "Get group ID.",
        "description": "Get group ID.",
        "operationId": "PrivateLinkResources_Get",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/privatelinks.json#/definitions/PrivateLinkResource"
            }
          },
          "default": {
            "description": "Detailed error information.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The Media Services account name."
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersion"
          }
        ],
        "x-ms-examples": {
          "Get details of a group ID.": {
            "$ref": "examples/private-link-resources-get-by-name.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/mediaservices/{accountName}/privateEndpointConnections": {
      "get": {
        "summary": "Get all private endpoint connections.",
        "description": "Get all private endpoint connections.",
        "operationId": "PrivateEndpointConnections_List",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/privatelinks.json#/definitions/PrivateEndpointConnectionListResult"
            }
          },
          "default": {
            "description": "Detailed error information.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The Media Services account name."
          },
          {
            "$ref": "#/parameters/ApiVersion"
          }
        ],
        "x-ms-examples": {
          "Get all private endpoint connections.": {
            "$ref": "examples/private-endpoint-connection-list.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/mediaservices/{accountName}/privateEndpointConnections/{name}": {
      "get": {
        "summary": "Get private endpoint connection.",
        "description": "Get private endpoint connection.",
        "operationId": "PrivateEndpointConnections_Get",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/privatelinks.json#/definitions/PrivateEndpointConnection"
            }
          },
          "default": {
            "description": "Detailed error information.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The Media Services account name."
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersion"
          }
        ],
        "x-ms-examples": {
          "Get private endpoint connection.": {
            "$ref": "examples/private-endpoint-connection-get-by-name.json"
          }
        }
      },
      "put": {
        "summary": "Update private endpoint connection.",
        "description": "Update private endpoint connection.",
        "operationId": "PrivateEndpointConnections_CreateOrUpdate",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/privatelinks.json#/definitions/PrivateEndpointConnection"
            }
          },
          "default": {
            "description": "Detailed error information.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The Media Services account name."
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/privatelinks.json#/definitions/PrivateEndpointConnection"
            },
            "description": "The request parameters"
          },
          {
            "$ref": "#/parameters/ApiVersion"
          }
        ],
        "x-ms-examples": {
          "Update private endpoint connection.": {
            "$ref": "examples/private-endpoint-connection-put.json"
          }
        }
      },
      "delete": {
        "summary": "Delete private endpoint connection.",
        "description": "Delete private endpoint connection.",
        "operationId": "PrivateEndpointConnections_Delete",
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "NoContent"
          },
          "default": {
            "description": "Detailed error information.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The Media Services account name."
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersion"
          }
        ],
        "x-ms-examples": {
          "Delete private endpoint connection.": {
            "$ref": "examples/private-endpoint-connection-delete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Media/locations/{locationName}/checkNameAvailability": {
      "post": {
        "summary": "Check Name Availability",
        "description": "Checks whether the Media Service resource name is available.",
        "operationId": "Locations_CheckNameAvailability",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EntityNameAvailabilityCheckOutput"
            }
          },
          "default": {
            "description": "Detailed error information.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "name": "locationName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the location"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CheckNameAvailabilityInput"
            },
            "description": "The request parameters"
          },
          {
            "$ref": "#/parameters/ApiVersion"
          }
        ],
        "x-ms-examples": {
          "Check Name Availability": {
            "$ref": "examples/accounts-check-name-availability.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Media/mediaservices": {
      "get": {
        "summary": "List Media Services accounts",
        "description": "List Media Services accounts in the subscription.",
        "operationId": "Mediaservices_ListBySubscription",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/MediaServiceCollection"
            }
          },
          "default": {
            "description": "Detailed error information.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/ApiVersion"
          }
        ],
        "x-ms-pageable": {
          "nextLinkName": "@odata.nextLink"
        },
        "x-ms-examples": {
          "List all Media Services accounts": {
            "$ref": "examples/accounts-subscription-list-all-accounts.json"
          }
        }
      }
    }
  },
  "parameters": {
    "SubscriptionId": {
      "name": "subscriptionId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The unique identifier for a Microsoft Azure subscription."
    },
    "ResourceGroupName": {
      "name": "resourceGroupName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the resource group within the Azure subscription.",
      "x-ms-parameter-location": "method"
    },
    "ApiVersion": {
      "name": "api-version",
      "in": "query",
      "required": true,
      "type": "string",
      "description": "The version of the API to be used with the client request."
    }
  }
}
