{
  "schemes": [
    "https"
  ],
  "swagger": "2.0",
  "info": {
    "title": "Azure Media Services",
    "description": "This Swagger was generated by the API Framework.",
    "version": "2018-03-30-preview"
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "definitions": {
    "Preset": {
      "discriminator": "@odata.type",
      "properties": {
        "@odata.type": {
          "type": "string",
          "description": "The discriminator for derived types."
        }
      },
      "type": "object",
      "required": [
        "@odata.type"
      ],
      "description": "Base type for all Media Processor Presets."
    },
    "Codec": {
      "discriminator": "@odata.type",
      "properties": {
        "@odata.type": {
          "type": "string",
          "description": "The discriminator for derived types."
        },
        "label": {
          "type": "string",
          "description": "Gets or sets the codec label."
        }
      },
      "type": "object",
      "required": [
        "@odata.type"
      ],
      "description": "A base class for all the codecs."
    },
    "Audio": {
      "x-ms-discriminator-value": "#Microsoft.Media.Audio",
      "allOf": [
        {
          "$ref": "#/definitions/Codec"
        }
      ],
      "properties": {
        "channels": {
          "type": "integer",
          "format": "int32",
          "description": "Gets or sets number of channels in the Audio."
        },
        "samplingRate": {
          "type": "integer",
          "format": "int32",
          "description": "Gets or sets the sampling rate to use for encoding."
        },
        "bitrate": {
          "type": "integer",
          "format": "int32",
          "description": "Gets or sets the bitrate of the encoded audio."
        }
      },
      "type": "object",
      "description": "Default base class for all Audio codecs."
    },
    "AacAudio": {
      "x-ms-discriminator-value": "#Microsoft.Media.AacAudio",
      "allOf": [
        {
          "$ref": "#/definitions/Audio"
        }
      ],
      "properties": {
        "profile": {
          "type": "string",
          "enum": [
            "AacLc",
            "HeAacV1",
            "HeAacV2"
          ],
          "x-ms-enum": {
            "name": "AacAudioProfile",
            "values": [
              {
                "value": "AacLc",
                "description": "AAC Low complexity."
              },
              {
                "value": "HeAacV1",
                "description": "HE AAC V1."
              },
              {
                "value": "HeAacV2",
                "description": "HE AAC v2."
              }
            ],
            "modelAsString": false
          },
          "description": "Gets or sets the audio profile."
        }
      },
      "type": "object",
      "description": "An object to represent AAC audio encoding settings."
    },
    "Overlay": {
      "discriminator": "@odata.type",
      "properties": {
        "@odata.type": {
          "type": "string",
          "description": "The discriminator for derived types."
        },
        "inputLabel": {
          "type": "string",
          "description": "Gets or sets the Tag of the Input used for the Overlay.  The Input must specify exactly one file to use."
        },
        "overlayLoopCount": {
          "type": "integer",
          "format": "int64",
          "description": "Gets or sets the number of times a media has to loop as an overlay"
        },
        "inputLoop": {
          "type": "boolean",
          "description": "Gets or sets a value indicating whether the input is looped."
        },
        "fadeInDuration": {
          "type": "string",
          "format": "duration",
          "description": "Gets or sets the duration for fade in REVIEW: Does this need start and end time?  Originally it was a Clip."
        },
        "fadeOutDuration": {
          "type": "string",
          "format": "duration",
          "description": "Gets or sets the duration for fade out REVIEW: Does this need start and end time?  Originally it was a Clip."
        }
      },
      "type": "object",
      "required": [
        "@odata.type",
        "overlayLoopCount",
        "inputLoop",
        "fadeInDuration",
        "fadeOutDuration"
      ],
      "description": "Base type for all overlays."
    },
    "AudioOverlay": {
      "x-ms-discriminator-value": "#Microsoft.Media.AudioOverlay",
      "allOf": [
        {
          "$ref": "#/definitions/Overlay"
        }
      ],
      "properties": {
        "gainLevel": {
          "type": "number",
          "format": "double",
          "description": "Gets or sets the gain level of audio that needs to be overlaid. Defaults to a value of 1.0."
        }
      },
      "type": "object",
      "description": "An object to indicate audio overlay."
    },
    "CopyVideo": {
      "x-ms-discriminator-value": "#Microsoft.Media.CopyVideo",
      "allOf": [
        {
          "$ref": "#/definitions/Codec"
        }
      ],
      "properties": {},
      "type": "object",
      "description": "video copy codec."
    },
    "Video": {
      "x-ms-discriminator-value": "#Microsoft.Media.Video",
      "allOf": [
        {
          "$ref": "#/definitions/Codec"
        }
      ],
      "properties": {
        "preserveResolutionAfterRotation": {
          "type": "boolean",
          "description": "Gets or sets a value indicating whether to disable resolution change rotation."
        },
        "keyFrameInterval": {
          "type": "string",
          "format": "duration",
          "description": "Gets or sets the distance between two key frames."
        },
        "stretchMode": {
          "type": "string",
          "enum": [
            "None",
            "AutoSize",
            "AutoFit"
          ],
          "x-ms-enum": {
            "name": "StretchMode",
            "values": [
              {
                "value": "None",
                "description": "Strictly respect the output resolution without considering the aspect ratio."
              },
              {
                "value": "AutoSize",
                "description": "Override the output resolution to keep the same aspect ratio between input and output without padding."
              },
              {
                "value": "AutoFit",
                "description": "Pad the output (with either letterbox or pillar box) to keep the same aspect ratio between input and output."
              }
            ],
            "modelAsString": false
          },
          "description": "Gets or sets the Resolution Mode"
        },
        "syncMode": {
          "type": "string",
          "enum": [
            "Auto",
            "Passthrough",
            "Cfr",
            "Vfr",
            "Drop"
          ],
          "x-ms-enum": {
            "name": "VideoSyncMode",
            "values": [
              {
                "value": "Auto",
                "description": "Chooses between CFR and VFR depending on muxer capabilities. This is the default method"
              },
              {
                "value": "Passthrough",
                "description": "Each frame is passed with its timestamp from the de-muxer to the muxer Not expose this mode now as we do not see any useful scenarios out of it"
              },
              {
                "value": "Cfr",
                "description": "Frames will be duplicated and dropped to achieve exactly the requested constant frame rate"
              },
              {
                "value": "Vfr",
                "description": "Frames are passed through with their timestamp or dropped so as to prevent 2 frames from having the same timestamp"
              },
              {
                "value": "Drop",
                "description": "As pass through but destroys all timestamps, making the muxer generate fresh timestamps based on frame-rate does not work for our version of ffmpeg!!!"
              }
            ],
            "modelAsString": false
          },
          "description": "Gets or sets the Video Sync Mode"
        }
      },
      "type": "object",
      "description": "Base class for all video codecs."
    },
    "Image": {
      "x-ms-discriminator-value": "#Microsoft.Media.Image",
      "allOf": [
        {
          "$ref": "#/definitions/Video"
        }
      ],
      "properties": {
        "startMode": {
          "type": "string",
          "enum": [
            "TimeSpan",
            "Int",
            "Relative",
            "Macro"
          ],
          "x-ms-enum": {
            "name": "FrameSelectionMode",
            "values": [
              {
                "value": "TimeSpan",
                "description": "Indicates that the frame selection attribute (Start,Step,Interval) is expressed as Timespan"
              },
              {
                "value": "Int",
                "description": "Indicates that the frame selection attribute (Start,Step,Interval) is expressed as Integer"
              },
              {
                "value": "Relative",
                "description": "Indicates that the frame selection attribute (Start,Step,Interval) is expressed as a percentage of source duration Requires that the corresponding attribute string is terminated with a '%' sign"
              },
              {
                "value": "Macro",
                "description": "Indicates that the frame selection attribute (Start,Step,Interval) is expressed as a special Macro An example would be {Best} for Start attribute Requires that the corresponding attribute string is enclosed in curly braces, such as {Best}"
              }
            ],
            "modelAsString": false
          },
          "description": "Gets or sets the frame selection mode."
        },
        "stepMode": {
          "type": "string",
          "enum": [
            "TimeSpan",
            "Int",
            "Relative",
            "Macro"
          ],
          "x-ms-enum": {
            "name": "FrameSelectionMode",
            "values": [
              {
                "value": "TimeSpan",
                "description": "Indicates that the frame selection attribute (Start,Step,Interval) is expressed as Timespan"
              },
              {
                "value": "Int",
                "description": "Indicates that the frame selection attribute (Start,Step,Interval) is expressed as Integer"
              },
              {
                "value": "Relative",
                "description": "Indicates that the frame selection attribute (Start,Step,Interval) is expressed as a percentage of source duration Requires that the corresponding attribute string is terminated with a '%' sign"
              },
              {
                "value": "Macro",
                "description": "Indicates that the frame selection attribute (Start,Step,Interval) is expressed as a special Macro An example would be {Best} for Start attribute Requires that the corresponding attribute string is enclosed in curly braces, such as {Best}"
              }
            ],
            "modelAsString": false
          },
          "description": "Gets or sets if the Step value for encoding interval is expressed as either: relative (percentage of source duration), frame number, timespan, or special macro ."
        },
        "rangeMode": {
          "type": "string",
          "enum": [
            "TimeSpan",
            "Int",
            "Relative",
            "Macro"
          ],
          "x-ms-enum": {
            "name": "FrameSelectionMode",
            "values": [
              {
                "value": "TimeSpan",
                "description": "Indicates that the frame selection attribute (Start,Step,Interval) is expressed as Timespan"
              },
              {
                "value": "Int",
                "description": "Indicates that the frame selection attribute (Start,Step,Interval) is expressed as Integer"
              },
              {
                "value": "Relative",
                "description": "Indicates that the frame selection attribute (Start,Step,Interval) is expressed as a percentage of source duration Requires that the corresponding attribute string is terminated with a '%' sign"
              },
              {
                "value": "Macro",
                "description": "Indicates that the frame selection attribute (Start,Step,Interval) is expressed as a special Macro An example would be {Best} for Start attribute Requires that the corresponding attribute string is enclosed in curly braces, such as {Best}"
              }
            ],
            "modelAsString": false
          },
          "description": "Gets or sets if the Duration for encoding interval is expressed as either: relative (percentage of source duration), frame number, timespan, or special macro ."
        },
        "start": {
          "type": "string",
          "description": "Gets or sets the start condition attribute for the encoding clip"
        },
        "step": {
          "type": "string",
          "description": "Gets or sets the step condition attribute for the encoding clip"
        },
        "range": {
          "type": "string",
          "description": "Gets or sets the Duration condition attribute for the encoding clip"
        }
      },
      "type": "object",
      "required": [
        "startMode",
        "stepMode",
        "rangeMode"
      ],
      "description": "Base class for all video codecs."
    },
    "BmpImage": {
      "x-ms-discriminator-value": "#Microsoft.Media.BmpImage",
      "allOf": [
        {
          "$ref": "#/definitions/Image"
        }
      ],
      "properties": {},
      "type": "object",
      "description": "This class represents a video encoder which outputs a sequence of BMP images."
    },
    "Layer": {
      "discriminator": "@odata.type",
      "properties": {
        "@odata.type": {
          "type": "string",
          "description": "The discriminator for derived types."
        },
        "bitrate": {
          "type": "integer",
          "format": "int32",
          "description": "Gets or sets the video bitrate in kbps (kilobits per second) for this layer."
        },
        "width": {
          "type": "integer",
          "format": "int32",
          "description": "Gets or sets the width of video in pixels for this layer"
        },
        "height": {
          "type": "integer",
          "format": "int32",
          "description": "Gets or sets the height of video in pixels for this layer"
        },
        "frameRate": {
          "type": "string",
          "description": "Gets or sets the frame rate for encoding this layer."
        },
        "condition": {
          "type": "string",
          "description": "Gets or sets the predicate to be evaluated before encoding this layer. REVIEW: Is this needed?"
        },
        "label": {
          "type": "string",
          "description": "Gets or sets the label for this layer. REVIEW: Is this needed?"
        }
      },
      "type": "object",
      "required": [
        "@odata.type",
        "bitrate",
        "width",
        "height"
      ],
      "description": "Object to represent a video layer."
    },
    "BmpLayer": {
      "x-ms-discriminator-value": "#Microsoft.Media.BmpLayer",
      "allOf": [
        {
          "$ref": "#/definitions/Layer"
        }
      ],
      "properties": {},
      "type": "object",
      "description": "This represents a layer in the BmpImage class."
    },
    "ClosedCaption": {
      "x-ms-discriminator-value": "#Microsoft.Media.ClosedCaption",
      "allOf": [
        {
          "$ref": "#/definitions/Codec"
        }
      ],
      "properties": {
        "inputFile": {
          "type": "string",
          "description": "Gets or sets the source of the closed caption file It can be empty in the case the closed caption is from the ClosedCaptionStream selection in the source. If it present (side-car input), it has higher priority than the ClosedCaptionStream from the source."
        },
        "outputType": {
          "type": "string",
          "enum": [
            "SideCar",
            "Stream",
            "Embedded"
          ],
          "x-ms-enum": {
            "name": "ClosedCaptionType",
            "values": [
              {
                "value": "SideCar",
                "description": "The closed caption as a separate file"
              },
              {
                "value": "Stream",
                "description": "The closed caption as a separate stream inside media file"
              },
              {
                "value": "Embedded",
                "description": "The closed caption embedded within video elementary stream"
              }
            ],
            "modelAsString": false
          },
          "description": "Gets or sets the closed caption output type"
        },
        "format": {
          "type": "string",
          "enum": [
            "Srt",
            "Ssa",
            "Sami",
            "Ttml",
            "WebVtt"
          ],
          "x-ms-enum": {
            "name": "ClosedCaptionFormat",
            "values": [
              {
                "value": "Srt",
                "description": "SRT format."
              },
              {
                "value": "Ssa",
                "description": "SSA format."
              },
              {
                "value": "Sami",
                "description": "Sami Format."
              },
              {
                "value": "Ttml",
                "description": "TTML format."
              },
              {
                "value": "WebVtt",
                "description": "Web VTT format."
              }
            ],
            "modelAsString": false
          },
          "description": "Gets or sets the Closed Caption output format"
        }
      },
      "type": "object",
      "required": [
        "outputType",
        "format"
      ],
      "description": "An object to represent closed caption encoding"
    },
    "Format": {
      "discriminator": "@odata.type",
      "properties": {
        "@odata.type": {
          "type": "string",
          "description": "The discriminator for derived types."
        },
        "filenamePattern": {
          "type": "string",
          "description": "Gets or sets the pattern of the filename to use excluding the extension. REVIEW: List \"macros\" that can be used and give examples."
        }
      },
      "type": "object",
      "required": [
        "@odata.type"
      ],
      "description": "Base class for output."
    },
    "OutputFile": {
      "properties": {
        "trackLabels": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Gets the track labels."
        }
      },
      "type": "object",
      "description": "Represent an output file."
    },
    "MultiBitrateFormat": {
      "x-ms-discriminator-value": "#Microsoft.Media.MultiBitrateFormat",
      "allOf": [
        {
          "$ref": "#/definitions/Format"
        }
      ],
      "properties": {
        "manifestFilename": {
          "type": "string",
          "description": "Gets or sets the pattern of the manifest file name to use excluding the extension. REVIEW: List \"macros\" that can be used and give examples."
        },
        "outputFiles": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OutputFile"
          },
          "description": "Gets the list of output files."
        }
      },
      "type": "object",
      "description": "GOP aligned multi bitrate output."
    },
    "CmafOutput": {
      "x-ms-discriminator-value": "#Microsoft.Media.CmafOutput",
      "allOf": [
        {
          "$ref": "#/definitions/MultiBitrateFormat"
        }
      ],
      "properties": {},
      "type": "object",
      "description": "A CMAF based output format."
    },
    "CommonEncryptionSettings": {
      "properties": {
        "encryptionKey": {
          "type": "string",
          "description": "Gets or sets Reference to a Common Encryption Key to encrypt the content with.  Only used if ApplyCommonEncryption is true."
        },
        "playReadyLicenseAcquisitionUrl": {
          "$ref": "#/definitions/Uri",
          "description": "Gets or sets Uri that clients should use to retrieve a PlayReady license to play back the content.  Only used if ApplyCommonEncryption is true."
        },
        "playReadyCustomAttributes": {
          "type": "string",
          "description": "Gets or sets a comma-delimited list of name:value pairs (in the form name1:value1,name2:value2,name3:value3)  to be included in the CUSTOMATTRIBUTES section of the WRM header. The WRM header is XML metadata  added to encrypted content and included in the client manifest. It is also included in license  challenges made to license servers."
        },
        "playReadyServiceId": {
          "type": "string",
          "description": "Gets or sets the service ID to include in the PlayReady header that is added to each file and in  the client manifest (.ISMC). This value must be a globally unique identifier (GUID)  in Little Endian string form (like this 237A4EB1-9D01-4F4A-A2D2-79E51468014D)."
        },
        "widevineLicenseAcquisitionUrl": {
          "$ref": "#/definitions/Uri",
          "description": "Gets or sets Uri that clients should use to retrieve a Widevine license to play back the content."
        },
        "adjustSubSamples": {
          "type": "boolean",
          "description": "Gets or sets a value indicating whether when encrypting subsamples on H.264 tracks, adjusts the clear space at the beginning of each  subsample so that a whole number of encryption blocks is used. This leaves slightly more of  the sample data unencrypted but maximizes player compatibility.  Defaults to true."
        },
        "useSencBox": {
          "type": "boolean",
          "description": "Gets or sets a value indicating whether a 'senc' box to hold encryption metadata instead of a Protected Interoperable File  Format (PIFF) 1.1 'uuid' box."
        },
        "dataFormats": {
          "type": "string",
          "description": "Gets or sets A comma-delimited list of four-character codes (FourCCs) that specify the data formats to be encrypted. If no value is specified, all data formats are encrypted."
        }
      },
      "type": "object",
      "description": "A class to encapsulate common encryption (CENC) settings."
    },
    "Uri": {
      "properties": {},
      "type": "object"
    },
    "CopyAudio": {
      "x-ms-discriminator-value": "#Microsoft.Media.CopyAudio",
      "allOf": [
        {
          "$ref": "#/definitions/Codec"
        }
      ],
      "properties": {},
      "type": "object",
      "description": "An object to represent an audio copy codec."
    },
    "DDPlusAudio": {
      "x-ms-discriminator-value": "#Microsoft.Media.DDPlusAudio",
      "allOf": [
        {
          "$ref": "#/definitions/Audio"
        }
      ],
      "properties": {
        "lfEon": {
          "type": "boolean",
          "description": "Gets or sets a value indicating whether \"LFE\" is on."
        },
        "acMode": {
          "type": "string",
          "enum": [
            "ACMOD20",
            "ACMOD32"
          ],
          "x-ms-enum": {
            "name": "DDPlusACMode",
            "values": [
              {
                "value": "ACMOD20",
                "description": "Mode 20."
              },
              {
                "value": "ACMOD32",
                "description": "Mode 32."
              }
            ],
            "modelAsString": false
          },
          "description": "Gets or sets the AC mode."
        }
      },
      "type": "object",
      "required": [
        "lfEon",
        "acMode"
      ],
      "description": "An object to represent EAC3 audio encoding settings."
    },
    "Deinterlace": {
      "properties": {
        "parity": {
          "type": "string",
          "enum": [
            "Auto",
            "TopFieldFirst",
            "BottomFieldFirst"
          ],
          "x-ms-enum": {
            "name": "DeinterlaceParity",
            "values": [
              {
                "value": "Auto",
                "description": "Automatically detect the order of fields"
              },
              {
                "value": "TopFieldFirst",
                "description": "Top field first."
              },
              {
                "value": "BottomFieldFirst",
                "description": "bottom field first."
              }
            ],
            "modelAsString": false
          },
          "description": "Gets or sets the parity to use."
        },
        "mode": {
          "type": "string",
          "enum": [
            "Off",
            "AutoPixelAdaptive"
          ],
          "x-ms-enum": {
            "name": "DeinterlaceMode",
            "values": [
              {
                "value": "Off",
                "description": "Disable deinterlace no matter whether the input is interlaced or not."
              },
              {
                "value": "AutoPixelAdaptive",
                "description": "Automatic pixel adaptive."
              }
            ],
            "modelAsString": false
          },
          "description": "Gets or sets the deinterlace Mode"
        }
      },
      "type": "object",
      "description": "A class to define de-interlacing settings."
    },
    "Rectangle": {
      "properties": {
        "left": {
          "type": "integer",
          "format": "int32",
          "description": "Gets or sets number of pixels from the left-margin"
        },
        "top": {
          "type": "integer",
          "format": "int32",
          "description": "Gets or sets number of pixels from the top-margin"
        },
        "width": {
          "type": "integer",
          "format": "int32",
          "description": "Gets or sets width of the region in pixels"
        },
        "height": {
          "type": "integer",
          "format": "int32",
          "description": "Gets or sets height of the region in pixels"
        }
      },
      "type": "object",
      "required": [
        "left",
        "top",
        "width",
        "height"
      ],
      "description": "A class to represent a rectangle."
    },
    "VideoOverlay": {
      "x-ms-discriminator-value": "#Microsoft.Media.VideoOverlay",
      "allOf": [
        {
          "$ref": "#/definitions/Overlay"
        }
      ],
      "properties": {
        "position": {
          "$ref": "#/definitions/Rectangle",
          "description": "Gets or sets the area in the video where the overlay is applied."
        },
        "opacity": {
          "type": "integer",
          "format": "int32",
          "description": "Gets or sets the opacity of the overlay.  REVIEW: What is the scale here?  Should this be a double?"
        },
        "overlayPreserveAspectRatio": {
          "type": "boolean",
          "description": "Gets or sets a value indicating whether the aspect ratio needs to be preserved or not.  Defaults to true."
        },
        "overlayCropPosition": {
          "$ref": "#/definitions/Rectangle",
          "description": "Gets or sets the dimensions of scaled output"
        },
        "audioGainLevel": {
          "type": "number",
          "format": "double",
          "description": "Gets or sets the gain level of audio in the video that needs to be overlaid. Defaults to a value of 1.0."
        }
      },
      "type": "object",
      "description": "A video overlay."
    },
    "Filters": {
      "properties": {
        "pad": {
          "type": "boolean",
          "description": "Gets or sets a value indicating whether to pad the source to align jagged-edge audio and video."
        },
        "deinterlace": {
          "$ref": "#/definitions/Deinterlace",
          "description": "Gets or sets the default de-interlacing settings."
        },
        "rotation": {
          "type": "string",
          "enum": [
            "Auto",
            "None",
            "Rotate0",
            "Rotate90",
            "Rotate180",
            "Rotate270"
          ],
          "x-ms-enum": {
            "name": "Rotation",
            "values": [
              {
                "value": "Auto",
                "description": "Automatically detect and rotate as needed."
              },
              {
                "value": "None",
                "description": "Do not rotate and keep the metadata intact."
              },
              {
                "value": "Rotate0",
                "description": "Rotate zero degrees."
              },
              {
                "value": "Rotate90",
                "description": "Rotate 90 degrees."
              },
              {
                "value": "Rotate180",
                "description": "Rotate 180 degrees."
              },
              {
                "value": "Rotate270",
                "description": "Rotate 270 degrees."
              }
            ],
            "modelAsString": false
          },
          "description": "Gets or sets the rotation if any to be applied to the video."
        },
        "adjustLoudness": {
          "type": "string",
          "enum": [
            "None",
            "Auto",
            "Manual"
          ],
          "x-ms-enum": {
            "name": "LoudnessAdjustment",
            "values": [
              {
                "value": "None",
                "description": "Leave loudness at its default value"
              },
              {
                "value": "Auto",
                "description": "Automatically reduce the loudness to -23dB as prescribed by EBUR128"
              },
              {
                "value": "Manual",
                "description": "Reduce the loudness to user prescribed value"
              }
            ],
            "modelAsString": false
          },
          "description": "Gets or sets the loudness correction mode"
        },
        "loudnessInDB": {
          "type": "number",
          "format": "double",
          "description": "Gets or sets the Loudness specified in decibels (Applicable for the case of AdjustLoudness.Manual"
        },
        "flip": {
          "type": "string",
          "enum": [
            "None",
            "Horizontal",
            "Vertical"
          ],
          "x-ms-enum": {
            "name": "Flip",
            "values": [
              {
                "value": "None",
                "description": "Do not flip the video."
              },
              {
                "value": "Horizontal",
                "description": "Flip the video horizontally."
              },
              {
                "value": "Vertical",
                "description": "Flip the video vertically"
              }
            ],
            "modelAsString": false
          },
          "description": "Gets or sets whether the video needs to be flipped."
        },
        "crop": {
          "$ref": "#/definitions/Rectangle",
          "description": "Gets or sets the co-ordinates of the video to be cropped."
        },
        "videoOverlay": {
          "$ref": "#/definitions/VideoOverlay",
          "description": "Gets or sets the details of the video overlay to apply if any."
        },
        "audioOverlay": {
          "$ref": "#/definitions/AudioOverlay",
          "description": "Gets or sets the details of the audio overlay to apply if any."
        }
      },
      "type": "object",
      "description": "A class to encapsulate all the filters for a source."
    },
    "H264Layer": {
      "x-ms-discriminator-value": "#Microsoft.Media.H264Layer",
      "allOf": [
        {
          "$ref": "#/definitions/Layer"
        }
      ],
      "properties": {
        "profile": {
          "type": "string",
          "enum": [
            "Auto",
            "Baseline",
            "Main",
            "High",
            "High10",
            "High422",
            "High444"
          ],
          "x-ms-enum": {
            "name": "H264VideoProfile",
            "values": [
              {
                "value": "Auto",
                "description": "The encoder auto decide the appropriate profile"
              },
              {
                "value": "Baseline",
                "description": "Baseline h264 video profile"
              },
              {
                "value": "Main",
                "description": "Main h264 video profile"
              },
              {
                "value": "High",
                "description": "High h264 video profile."
              },
              {
                "value": "High10",
                "description": "High10 h264 video profile."
              },
              {
                "value": "High422",
                "description": "High 4 2 2 h264 video profile."
              },
              {
                "value": "High444",
                "description": "High 4 4 4 h264 video profile."
              }
            ],
            "modelAsString": false
          },
          "description": "Gets or sets the video profile for this layer."
        },
        "level": {
          "type": "string",
          "description": "Gets or sets the video level for this layer."
        },
        "bFrames": {
          "type": "integer",
          "format": "int32",
          "description": "Gets or sets the number of B-frames to be used when encoding this layer."
        },
        "referenceFrames": {
          "type": "integer",
          "format": "int32",
          "description": "Gets or sets the number of reference frames to be used when encoding this layer."
        },
        "slices": {
          "type": "integer",
          "format": "int32",
          "description": "Gets or sets the number of slice to be used when encoding this layer."
        },
        "adaptiveBFrame": {
          "type": "boolean",
          "description": "Gets or sets a value indicating whether adaptive b-frames are used for this layer."
        },
        "entropyMode": {
          "type": "string",
          "enum": [
            "Cabac",
            "Cavlc"
          ],
          "x-ms-enum": {
            "name": "EntropyMode",
            "values": [
              {
                "value": "Cabac",
                "description": "CABAC (Context Adaptive Binary Arithmetic Coder) entropy encoding"
              },
              {
                "value": "Cavlc",
                "description": "CAVLC (Context Adaptive Variable Length Coder) entropy encoding"
              }
            ],
            "modelAsString": false
          },
          "description": "Gets or sets the entropy mode to be used for this layer."
        },
        "maxBitrate": {
          "type": "integer",
          "format": "int32",
          "description": "Gets or sets the maximum rate the VBV buffer should be assumed to refill at."
        },
        "bufferWindow": {
          "type": "string",
          "format": "duration",
          "description": "Gets or sets the VBV buffer Window length."
        }
      },
      "type": "object",
      "description": "A H.264 video layer."
    },
    "H264Video": {
      "x-ms-discriminator-value": "#Microsoft.Media.H264Video",
      "allOf": [
        {
          "$ref": "#/definitions/Video"
        }
      ],
      "properties": {
        "sceneChangeDetection": {
          "type": "boolean",
          "description": "Gets or sets a value indicating whether to use scene change detection during encoding"
        },
        "rateControlMode": {
          "type": "string",
          "enum": [
            "ABR",
            "CBR"
          ],
          "x-ms-enum": {
            "name": "H264RateControlMode",
            "values": [
              {
                "value": "ABR",
                "description": "Average bitrate to hit the target bitrate: defaulted mode."
              },
              {
                "value": "CBR",
                "description": "a CBR mode that tightens bitrate variations around target bitrate."
              }
            ],
            "modelAsString": false
          },
          "description": "Gets or sets the video rate control mode"
        },
        "complexity": {
          "type": "string",
          "enum": [
            "Speed",
            "Balanced",
            "Quality"
          ],
          "x-ms-enum": {
            "name": "H264Complexity",
            "values": [
              {
                "value": "Speed",
                "description": "the setting optimized for speed"
              },
              {
                "value": "Balanced",
                "description": "Balanced setting between speed and quality"
              },
              {
                "value": "Quality",
                "description": "the setting optimized for quality"
              }
            ],
            "modelAsString": false
          },
          "description": "Gets or sets the encoder complexity mode used for all layers"
        },
        "layers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/H264Layer"
          },
          "description": "Gets the layers for the video."
        }
      },
      "type": "object",
      "description": "An object to represent H264 video encoding."
    },
    "JpgImage": {
      "x-ms-discriminator-value": "#Microsoft.Media.JpgImage",
      "allOf": [
        {
          "$ref": "#/definitions/Image"
        }
      ],
      "properties": {
        "layers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/JpgLayer"
          },
          "description": "Gets the list of layers."
        }
      },
      "type": "object",
      "description": "This class represents a video encoder which outputs a sequence of Jpg images."
    },
    "JpgLayer": {
      "x-ms-discriminator-value": "#Microsoft.Media.JpgLayer",
      "allOf": [
        {
          "$ref": "#/definitions/Layer"
        }
      ],
      "properties": {
        "quality": {
          "type": "integer",
          "format": "int32",
          "description": "Gets or sets the compression quality of the JPEG output. Range is from 0-100 and the default is 70."
        }
      },
      "type": "object",
      "description": "This represents a layer in the JpgImage class."
    },
    "Mp4Format": {
      "x-ms-discriminator-value": "#Microsoft.Media.Mp4Format",
      "allOf": [
        {
          "$ref": "#/definitions/Format"
        }
      ],
      "properties": {},
      "type": "object",
      "description": "MP4 output."
    },
    "MultiBitrateMp4Format": {
      "x-ms-discriminator-value": "#Microsoft.Media.MultiBitrateMp4Format",
      "allOf": [
        {
          "$ref": "#/definitions/MultiBitrateFormat"
        }
      ],
      "properties": {},
      "type": "object",
      "description": "GOP aligned multi bitrate MP4 output."
    },
    "PngImage": {
      "x-ms-discriminator-value": "#Microsoft.Media.PngImage",
      "allOf": [
        {
          "$ref": "#/definitions/Image"
        }
      ],
      "properties": {
        "layers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PngLayer"
          },
          "description": "Gets the list of image layers."
        }
      },
      "type": "object",
      "description": "This class represents a video encoder which outputs a sequence of Png images."
    },
    "PngLayer": {
      "x-ms-discriminator-value": "#Microsoft.Media.PngLayer",
      "allOf": [
        {
          "$ref": "#/definitions/Layer"
        }
      ],
      "properties": {},
      "type": "object",
      "description": "This represents a layer in the PngImage class."
    },
    "BuiltInStandardEncoderPreset": {
      "x-ms-discriminator-value": "#Microsoft.Media.BuiltInStandardEncoderPreset",
      "allOf": [
        {
          "$ref": "#/definitions/Preset"
        }
      ],
      "properties": {
        "presetName": {
          "type": "string",
          "enum": [
            "AdaptiveStreaming",
            "ContentAdaptiveMultipleBitrateMP4",
            "AACAudio",
            "AACGoodQualityAudio",
            "H264MultipleBitrate1080pAudio5point1",
            "H264MultipleBitrate1080p",
            "H264MultipleBitrate16x9foriOS",
            "H264MultipleBitrate16x9SDAudio5point1",
            "H264MultipleBitrate16x9SD",
            "H264MultipleBitrate4KAudio5point1",
            "H264MultipleBitrate4K",
            "H264MultipleBitrate4x3foriOS",
            "H264MultipleBitrate4x3SDAudio5point1",
            "H264MultipleBitrate4x3SD",
            "H264MultipleBitrate720pAudio5point1",
            "H264MultipleBitrate720p",
            "H264SingleBitrate1080pAudio5point1",
            "H264SingleBitrate1080p",
            "H264SingleBitrate4KAudio5point1",
            "H264SingleBitrate4K",
            "H264SingleBitrate4x3SDAudio5point1",
            "H264SingleBitrate4x3SD",
            "H264SingleBitrate16x9SDAudio5point1",
            "H264SingleBitrate16x9SD",
            "H264SingleBitrate720pAudio5point1",
            "H264SingleBitrate720pforAndroid",
            "H264SingleBitrate720p",
            "H264SingleBitrateHighQualitySDforAndroid",
            "H264SingleBitrateLowQualitySDforAndroid",
            "SaasMultipleBitrate",
            "SaasProxy",
            "SaaSThumbnail"
          ],
          "x-ms-enum": {
            "name": "EncoderNamedPresets",
            "values": [
              {
                "value": "AdaptiveStreaming",
                "description": "Auto-generate a bitrate ladder (bitrate-resolution pairs) based on the input resolution and bitrate. The auto-generated preset will never exceed the input resolution and bitrate. For example, if the input is 720p at 3Mbps, output will remain 720p at best, and will start at rates lower than 3Mbps. The output will will have video and audio in separate files, which is optimal for adaptive streaming."
              },
              {
                "value": "ContentAdaptiveMultipleBitrateMP4",
                "description": "Auto-generate a bitrate ladder (bitrate-resolution pairs) based on the input resolution and bitrate. The auto-generated preset will never exceed the input resolution and bitrate. For example, if the input is 720p at 3Mbps, output will remain 720p at best, and will start at rates lower than 3Mbps. The output contains MP4 files with audio and video interleaved, so that any one MP4 file can be used for delivery via progressive download, if desired."
              },
              {
                "value": "AACAudio",
                "description": "Produces a single MP4 file containing only stereo audio encoded at 128 kbps."
              },
              {
                "value": "AACGoodQualityAudio",
                "description": "Produces a single MP4 file containing only stereo audio encoded at 192 kbps."
              },
              {
                "value": "H264MultipleBitrate1080pAudio5point1",
                "description": "Produces a set of 8 GOP-aligned MP4 files, ranging from 6000 kbps to 400 kbps, and AAC 5.1 audio."
              },
              {
                "value": "H264MultipleBitrate1080p",
                "description": "Produces a set of 8 GOP-aligned MP4 files, ranging from 6000 kbps to 400 kbps, and stereo AAC audio."
              },
              {
                "value": "H264MultipleBitrate16x9foriOS",
                "description": "Produces a set of 8 GOP-aligned MP4 files, ranging from 8500 kbps to 200 kbps, and stereo AAC audio."
              },
              {
                "value": "H264MultipleBitrate16x9SDAudio5point1",
                "description": "produces a set of 5 GOP-aligned MP4 files, ranging from 1900 kbps to 400 kbps, and AAC 5.1 audio."
              },
              {
                "value": "H264MultipleBitrate16x9SD",
                "description": "Produces a set of 5 GOP-aligned MP4 files, ranging from 1900 kbps to 400 kbps, and stereo AAC audio."
              },
              {
                "value": "H264MultipleBitrate4KAudio5point1",
                "description": "Produces a set of 12 GOP-aligned MP4 files, ranging from 20000 kbps to 1000 kbps, and AAC 5.1 audio."
              },
              {
                "value": "H264MultipleBitrate4K",
                "description": "Produces a set of 12 GOP-aligned MP4 files, ranging from 20000 kbps to 1000 kbps, and stereo AAC audio."
              },
              {
                "value": "H264MultipleBitrate4x3foriOS",
                "description": "Produces a set of 8 GOP-aligned MP4 files, ranging from 8500 kbps to 200 kbps, and stereo AAC audio."
              },
              {
                "value": "H264MultipleBitrate4x3SDAudio5point1",
                "description": "Produces a set of 5 GOP-aligned MP4 files, ranging from 1600 kbps to 400 kbps, and AAC 5.1 audio."
              },
              {
                "value": "H264MultipleBitrate4x3SD",
                "description": "Produces a set of 5 GOP-aligned MP4 files, ranging from 1600 kbps to 400 kbps, and stereo AAC audio."
              },
              {
                "value": "H264MultipleBitrate720pAudio5point1",
                "description": "Produces a set of 6 GOP-aligned MP4 files, ranging from 3400 kbps to 400 kbps, and AAC 5.1 audio."
              },
              {
                "value": "H264MultipleBitrate720p",
                "description": "Produces a set of 6 GOP-aligned MP4 files, ranging from 3400 kbps to 400 kbps, and stereo AAC audio."
              },
              {
                "value": "H264SingleBitrate1080pAudio5point1",
                "description": "Produces a single MP4 file with a bitrate of 6750 kbps, and AAC 5.1 audio."
              },
              {
                "value": "H264SingleBitrate1080p",
                "description": "Produces a single MP4 file with a bitrate of 6750 kbps, and stereo AAC audio."
              },
              {
                "value": "H264SingleBitrate4KAudio5point1",
                "description": "Produces a single MP4 file with a bitrate of 18000 kbps, and AAC 5.1 audio."
              },
              {
                "value": "H264SingleBitrate4K",
                "description": "Produces a single MP4 file with a bitrate of 18000 kbps, and stereo AAC audio."
              },
              {
                "value": "H264SingleBitrate4x3SDAudio5point1",
                "description": "Produces a single MP4 file with a bitrate of 1800 kbps, and AAC 5.1 audio."
              },
              {
                "value": "H264SingleBitrate4x3SD",
                "description": "Produces a single MP4 file with a bitrate of 1800 kbps, and stereo AAC audio."
              },
              {
                "value": "H264SingleBitrate16x9SDAudio5point1",
                "description": "Produces a single MP4 file with a bitrate of 2200 kbps, and AAC 5.1 audio."
              },
              {
                "value": "H264SingleBitrate16x9SD",
                "description": "Produces a single MP4 file with a bitrate of 2200 kbps, and stereo AAC audio."
              },
              {
                "value": "H264SingleBitrate720pAudio5point1",
                "description": "Produces a single MP4 file with a bitrate of 4500 kbps, and AAC 5.1 audio."
              },
              {
                "value": "H264SingleBitrate720pforAndroid",
                "description": "Produces a single MP4 file with a bitrate of 2000 kbps, and stereo AAC."
              },
              {
                "value": "H264SingleBitrate720p",
                "description": "Produces a single MP4 file with a bitrate of 4500 kbps, and stereo AAC audio."
              },
              {
                "value": "H264SingleBitrateHighQualitySDforAndroid",
                "description": "Produces a single MP4 file with a bitrate of 500 kbps, and stereo AAC audio.."
              },
              {
                "value": "H264SingleBitrateLowQualitySDforAndroid",
                "description": "Produces a single MP4 file with a bitrate of 56 kbps, and stereo AAC audio."
              },
              {
                "value": "SaasMultipleBitrate",
                "description": "Auto-generate a bitrate ladder (bitrate-resolution pairs) based on the input resolution and bitrate. The auto-generated preset will never exceed the input resolution and bitrate. For example, if the input is 720p at 3Mbps, output will remain 720p at best, and will start at rates lower than 3Mbps.  This preset does not encode audio. It should therefore be paired an output that uses SaasProxy in order to produce a complete streaming set."
              },
              {
                "value": "SaasProxy",
                "description": "Produce a streaming set with only a single video bitrate with audio that is optimized for fast turnaround time."
              },
              {
                "value": "SaaSThumbnail",
                "description": "Produces a Thumbnail"
              }
            ],
            "modelAsString": false
          },
          "description": "Gets or sets the built in preset to use."
        }
      },
      "type": "object",
      "required": [
        "presetName"
      ],
      "description": "Preset to use Media Encoder Standard (MES) with a built in named preset."
    },
    "PremiumEncoderPreset": {
      "x-ms-discriminator-value": "#Microsoft.Media.PremiumEncoderPreset",
      "allOf": [
        {
          "$ref": "#/definitions/Preset"
        }
      ],
      "properties": {
        "workflowFile": {
          "$ref": "#/definitions/Uri",
          "description": "Gets or sets the Uri that points to the work flow file that defines the processing that Media Encoder Premium will perform."
        }
      },
      "type": "object",
      "description": "Preset for Media Encoder Premium."
    },
    "FaceDetectorPreset": {
      "x-ms-discriminator-value": "#Microsoft.Media.FaceDetectorPreset",
      "allOf": [
        {
          "$ref": "#/definitions/Preset"
        }
      ],
      "properties": {
        "mode": {
          "type": "string",
          "enum": [
            "OptimizeForSpeed",
            "OptimizeForQuality"
          ],
          "x-ms-enum": {
            "name": "FaceDetectorMode",
            "values": [
              {
                "value": "OptimizeForSpeed",
                "description": "Faster processing speed, but less accurate (default)."
              },
              {
                "value": "OptimizeForQuality",
                "description": "Better accuracy tracking, but takes longer."
              }
            ],
            "modelAsString": false
          },
          "description": "Gets or sets the face detection mode."
        }
      },
      "type": "object",
      "required": [
        "mode"
      ],
      "description": "A face detector preset."
    },
    "FaceRedactorPreset": {
      "x-ms-discriminator-value": "#Microsoft.Media.FaceRedactorPreset",
      "allOf": [
        {
          "$ref": "#/definitions/Preset"
        }
      ],
      "properties": {
        "mode": {
          "type": "string",
          "enum": [
            "Analyze",
            "Redact",
            "Combined"
          ],
          "x-ms-enum": {
            "name": "FaceRedactorMode",
            "values": [
              {
                "value": "Analyze",
                "description": "Analyze mode detects faces and outputs a metadata file with the results. Allows editing of the metadata file before faces are blurred with Redact mode."
              },
              {
                "value": "Redact",
                "description": "Redact mode consumes the metadata file from Analyze mode and redacts the faces found."
              },
              {
                "value": "Combined",
                "description": "Combined mode does the Analyze and Redact steps in one pass when editing the analyzed faces is not desired."
              }
            ],
            "modelAsString": false
          },
          "description": "Gets or sets the Face redaction mode."
        },
        "samplesPerSecond": {
          "type": "integer",
          "format": "int32",
          "description": "Gets or sets the samples per second."
        }
      },
      "type": "object",
      "description": "A face redactor preset."
    },
    "HyperlapsePreset": {
      "x-ms-discriminator-value": "#Microsoft.Media.HyperlapsePreset",
      "allOf": [
        {
          "$ref": "#/definitions/Preset"
        }
      ],
      "properties": {
        "speed": {
          "type": "integer",
          "format": "int32",
          "description": "Gets or sets the factor with which to speed up the input video."
        }
      },
      "type": "object",
      "required": [
        "speed"
      ],
      "description": "A hyper lapse preset."
    },
    "IndexerPreset": {
      "x-ms-discriminator-value": "#Microsoft.Media.IndexerPreset",
      "allOf": [
        {
          "$ref": "#/definitions/Preset"
        }
      ],
      "properties": {
        "language": {
          "type": "string",
          "enum": [
            "English",
            "Spanish",
            "Chinese",
            "French",
            "German",
            "Italian",
            "Portuguese",
            "Arabic",
            "Japanese"
          ],
          "x-ms-enum": {
            "name": "IndexerLanguage",
            "values": [
              {
                "value": "English"
              },
              {
                "value": "Spanish"
              },
              {
                "value": "Chinese"
              },
              {
                "value": "French"
              },
              {
                "value": "German"
              },
              {
                "value": "Italian"
              },
              {
                "value": "Portuguese"
              },
              {
                "value": "Arabic",
                "description": "Arabic (Egyptian)"
              },
              {
                "value": "Japanese"
              }
            ],
            "modelAsString": false
          },
          "description": "Gets or sets the indexer language."
        }
      },
      "type": "object",
      "required": [
        "language"
      ],
      "description": "An indexer preset."
    },
    "StreamSelection": {
      "discriminator": "@odata.type",
      "properties": {
        "@odata.type": {
          "type": "string",
          "description": "The discriminator for derived types."
        },
        "fileIndex": {
          "type": "integer",
          "format": "int32",
          "description": "Gets the file index where the stream is present."
        },
        "streamIndex": {
          "type": "integer",
          "format": "int32",
          "description": "Gets the stream index."
        },
        "isAbsoluteStreamIndex": {
          "type": "boolean",
          "description": "Gets a value indicating whether the stream index is absolute or relative to the stream type."
        },
        "streamSelectionMode": {
          "type": "string",
          "enum": [
            "SelectionNotSet",
            "SelectHighestBitrateStream",
            "SelectLowestBitrateStream",
            "SelectAllStreams"
          ],
          "x-ms-enum": {
            "name": "StreamSelectionMode",
            "values": [
              {
                "value": "SelectionNotSet",
                "description": "Preset does not set the stream selection"
              },
              {
                "value": "SelectHighestBitrateStream",
                "description": "Select the highest bitrate stream"
              },
              {
                "value": "SelectLowestBitrateStream",
                "description": "Select the lowest bitrate stream"
              },
              {
                "value": "SelectAllStreams",
                "description": "Select all the streams"
              }
            ],
            "modelAsString": false
          },
          "description": "Gets the stream selection mode."
        }
      },
      "type": "object",
      "required": [
        "@odata.type",
        "fileIndex",
        "streamIndex"
      ],
      "description": "An object to represent stream selection."
    },
    "StandardEncoderPreset": {
      "x-ms-discriminator-value": "#Microsoft.Media.StandardEncoderPreset",
      "allOf": [
        {
          "$ref": "#/definitions/Preset"
        }
      ],
      "properties": {
        "streams": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StreamSelection"
          },
          "description": "Gets the Stream definitions for this source."
        },
        "filters": {
          "$ref": "#/definitions/Filters",
          "description": "Gets or sets the filters for the preset."
        },
        "codecs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Codec"
          },
          "description": "Gets the list of codecs to use."
        },
        "formats": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Format"
          },
          "description": "Gets the list of outputs."
        }
      },
      "type": "object",
      "description": "Custom Preset for Media Encoder Standard. REVIEW: This needs to be fleshed out."
    },
    "MotionDetectorPreset": {
      "x-ms-discriminator-value": "#Microsoft.Media.MotionDetectorPreset",
      "allOf": [
        {
          "$ref": "#/definitions/Preset"
        }
      ],
      "properties": {
        "sensitivityLevel": {
          "type": "string",
          "enum": [
            "Low",
            "Medium",
            "High"
          ],
          "x-ms-enum": {
            "name": "MotionDetectorSensitivity",
            "values": [
              {
                "value": "Low"
              },
              {
                "value": "Medium"
              },
              {
                "value": "High"
              }
            ],
            "modelAsString": false
          },
          "description": "Gets or sets the sensitivity level at which motions is reported.   Adjust this to adjust amount of false positives.  Medium is the default."
        },
        "frameSampling": {
          "type": "integer",
          "format": "int32",
          "description": "Gets or sets the frequency at which algorithm runs. Setting the value to 1  equals checking every frame, 2 means every second frame, and so on.  Defaults to 1."
        },
        "detectLightChange": {
          "type": "boolean",
          "description": "Gets or sets a value indicating whether light changes are reported in the results.  Defaults to false."
        },
        "mergeTimeThreshold": {
          "type": "string",
          "format": "duration",
          "description": "Gets or sets the time window between motion events where two events will be combined and reported as one event.  Defaults to TimeSpan.Zero."
        },
        "detectionZones": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Rectangle"
          },
          "description": "Gets the detection zones. Describes the list of polygonal detection zones to be used.  Motion outside of the specified area will be ignored.  Results will be reported with the zones as an ID, with the first one being 'id':0.  By default the entire frame is used. REVIEW: the current docs talk about a polygonal detection zone specified by 3 or more points  where the points are from 0 to 1.  Can we rationalize this with the OCR design or rectangles?"
        }
      },
      "type": "object",
      "description": "A motion detector preset."
    },
    "OcrPreset": {
      "x-ms-discriminator-value": "#Microsoft.Media.OcrPreset",
      "allOf": [
        {
          "$ref": "#/definitions/Preset"
        }
      ],
      "properties": {
        "language": {
          "type": "string",
          "enum": [
            "AutoDetect",
            "Arabic",
            "ChineseSimplified",
            "ChineseTraditional",
            "Czech",
            "Danish",
            "Dutch",
            "English",
            "Finnish",
            "French",
            "German",
            "Greek",
            "Hungarian",
            "Italian",
            "Japanese",
            "Korean",
            "Norwegian",
            "Polish",
            "Portuguese",
            "Romanian",
            "Russian",
            "SerbianCyrillic",
            "SerbianLatin",
            "Slovak",
            "Spanish",
            "Swedish",
            "Turkish"
          ],
          "x-ms-enum": {
            "name": "OcrLanguage",
            "values": [
              {
                "value": "AutoDetect",
                "description": "Automatically detect the language of the text.  This is the default."
              },
              {
                "value": "Arabic"
              },
              {
                "value": "ChineseSimplified"
              },
              {
                "value": "ChineseTraditional"
              },
              {
                "value": "Czech"
              },
              {
                "value": "Danish"
              },
              {
                "value": "Dutch"
              },
              {
                "value": "English"
              },
              {
                "value": "Finnish"
              },
              {
                "value": "French"
              },
              {
                "value": "German"
              },
              {
                "value": "Greek"
              },
              {
                "value": "Hungarian"
              },
              {
                "value": "Italian"
              },
              {
                "value": "Japanese"
              },
              {
                "value": "Korean"
              },
              {
                "value": "Norwegian"
              },
              {
                "value": "Polish"
              },
              {
                "value": "Portuguese"
              },
              {
                "value": "Romanian"
              },
              {
                "value": "Russian"
              },
              {
                "value": "SerbianCyrillic"
              },
              {
                "value": "SerbianLatin"
              },
              {
                "value": "Slovak"
              },
              {
                "value": "Spanish"
              },
              {
                "value": "Swedish"
              },
              {
                "value": "Turkish"
              }
            ],
            "modelAsString": false
          },
          "description": "Gets or sets the language of text for which to look."
        },
        "textOrientation": {
          "type": "string",
          "enum": [
            "AutoDetect",
            "Up",
            "Right",
            "Down",
            "Left"
          ],
          "x-ms-enum": {
            "name": "OcrOrientation",
            "values": [
              {
                "value": "AutoDetect",
                "description": "Auto detect the orientation."
              },
              {
                "value": "Up",
                "description": "Up to down."
              },
              {
                "value": "Right",
                "description": "Right to left."
              },
              {
                "value": "Down",
                "description": "Down to up."
              },
              {
                "value": "Left",
                "description": "Left to right."
              }
            ],
            "modelAsString": false
          },
          "description": "Gets or sets the orientation of text for which to look. \"Left\" means that the top  of all letters are pointed towards the left. Default text (like that  which can be found in a book) can be called \"Up\" oriented."
        },
        "samplingFrequency": {
          "type": "string",
          "format": "duration",
          "description": "Gets or sets the rate at which the video is sampled for textual content. The default is every 1/2 second."
        },
        "detectRegions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Rectangle"
          },
          "description": "Gets the regions to limits detection. By default the entire video frame is searched."
        }
      },
      "type": "object",
      "required": [
        "language",
        "textOrientation",
        "samplingFrequency"
      ],
      "description": "An OCR preset."
    },
    "VideoAnnotatorPreset": {
      "x-ms-discriminator-value": "#Microsoft.Media.VideoAnnotatorPreset",
      "allOf": [
        {
          "$ref": "#/definitions/Preset"
        }
      ],
      "properties": {
        "samplesPerSecond": {
          "type": "integer",
          "format": "int32",
          "description": "Gets or sets the samples per second."
        }
      },
      "type": "object",
      "required": [
        "samplesPerSecond"
      ],
      "description": "Video annotation preset."
    },
    "VideoSummarizerPreset": {
      "x-ms-discriminator-value": "#Microsoft.Media.VideoSummarizerPreset",
      "allOf": [
        {
          "$ref": "#/definitions/Preset"
        }
      ],
      "properties": {
        "maximumOutputDuration": {
          "type": "string",
          "format": "duration",
          "description": "Gets or sets the maximum duration of the entire resultant video. The default depends on the original video duration.  For example, 15 seconds is used for input videos less than 30 seconds and 3 minutes is used for videos less than 15 minutes."
        },
        "outputAudio": {
          "type": "boolean",
          "description": "Gets or sets a value indicating whether or not the resultant video contains any audio.  Default is True."
        },
        "fadeInFadeOut": {
          "type": "boolean",
          "description": "Gets or sets a value indicating whether or not fade transitions are used between the  separate motion thumbnails.  Default is True."
        }
      },
      "type": "object",
      "description": "Video summarization preset."
    },
    "SmoothStreamingFormat": {
      "x-ms-discriminator-value": "#Microsoft.Media.SmoothStreamingFormat",
      "allOf": [
        {
          "$ref": "#/definitions/MultiBitrateFormat"
        }
      ],
      "properties": {
        "encryptionSettings": {
          "$ref": "#/definitions/CommonEncryptionSettings",
          "description": "Gets or sets the encryption settings."
        }
      },
      "type": "object",
      "description": "The output is statically packaged as a Smooth Streaming set.  It is recommended to use the Streaming Optimized or MP4 output setting instead if the intention  is to use the content with an Azure Media Services Streaming Endpoint. Common Encryption can be configured if desired."
    },
    "ClosedCaptionStream": {
      "x-ms-discriminator-value": "#Microsoft.Media.ClosedCaptionStream",
      "allOf": [
        {
          "$ref": "#/definitions/StreamSelection"
        }
      ],
      "properties": {},
      "type": "object",
      "description": "Object to represent closed caption stream selection."
    },
    "VideoStream": {
      "x-ms-discriminator-value": "#Microsoft.Media.VideoStream",
      "allOf": [
        {
          "$ref": "#/definitions/StreamSelection"
        }
      ],
      "properties": {},
      "type": "object",
      "description": "Object to represent video stream selection."
    },
    "AudioStream": {
      "x-ms-discriminator-value": "#Microsoft.Media.AudioStream",
      "allOf": [
        {
          "$ref": "#/definitions/StreamSelection"
        }
      ],
      "properties": {
        "languageTag": {
          "type": "string",
          "description": "Gets or sets the Audio Language Tag."
        },
        "audioChannelMapping": {
          "type": "string",
          "description": "Gets or sets the Audio channel mapping string."
        }
      },
      "type": "object",
      "description": "Object to represent audio stream selection."
    },
    "StreamingEndpointOptimizedOutput": {
      "x-ms-discriminator-value": "#Microsoft.Media.StreamingEndpointOptimizedOutput",
      "allOf": [
        {
          "$ref": "#/definitions/Format"
        }
      ],
      "properties": {},
      "type": "object",
      "description": "A streaming endpoint optimized output."
    },
    "TransportStreamFormat": {
      "x-ms-discriminator-value": "#Microsoft.Media.TransportStreamFormat",
      "allOf": [
        {
          "$ref": "#/definitions/MultiBitrateFormat"
        }
      ],
      "properties": {},
      "type": "object",
      "description": "MPEG-2 transport stream output."
    },
    "TransformOutput": {
      "properties": {
        "onError": {
          "type": "string",
          "enum": [
            "Unknown",
            "StopProcessingJob",
            "ContinueJob"
          ],
          "x-ms-enum": {
            "name": "OnErrorType",
            "values": [
              {
                "value": "Unknown",
                "description": "This is reserved for backward compatibility of api versions."
              },
              {
                "value": "StopProcessingJob",
                "description": "Tells the service that if this TransformOutput fails, then any other incomplete TransformOutputs can stopped."
              },
              {
                "value": "ContinueJob",
                "description": "Tells the service that if this TransformOutput fails, then allow any other TransformOutput to continue."
              }
            ],
            "modelAsString": false
          },
          "description": "Describes what to do if the output fails with the rest of the other outputs. The default is stop the rest of the outputs."
        },
        "relativePriority": {
          "type": "string",
          "enum": [
            "Unknown",
            "Low",
            "Normal",
            "High"
          ],
          "x-ms-enum": {
            "name": "Priority",
            "values": [
              {
                "value": "Unknown",
                "description": "This is reserved for backward compatibility of api versions."
              },
              {
                "value": "Low",
                "description": "Used for less time sensitive Transforms."
              },
              {
                "value": "Normal",
                "description": "Normal priority."
              },
              {
                "value": "High",
                "description": "Used for Transforms that should take precedence over other Transforms."
              }
            ],
            "modelAsString": false
          },
          "description": "Sets the relative priority of the TransformOutputs within a Transform. This gives a hint to the system that one TransformOutput is higher priority than another in the same Transform."
        },
        "preset": {
          "$ref": "#/definitions/Preset",
          "description": "Preset that describes the Media Processor operation that will be used to generate the output. REVIEW: Should this be called OutputDefinition instead?"
        }
      },
      "type": "object",
      "description": "Describes an Output from the Transform"
    },
    "TransformProperties": {
      "properties": {
        "created": {
          "type": "string",
          "format": "date-time",
          "description": "The date and time when the Transform was created.",
          "readOnly": true
        },
        "description": {
          "type": "string",
          "description": "Customer supplied description of the transform."
        },
        "lastModified": {
          "type": "string",
          "format": "date-time",
          "description": "The date and time when the Transform was last updated.",
          "readOnly": true
        },
        "outputs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TransformOutput"
          },
          "description": "The outputs for the Transform."
        }
      },
      "type": "object",
      "description": "A Transform."
    },
    "AvailablePresetsResponse": {
      "properties": {
        "availablePresets": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Lists the available presets"
        }
      },
      "type": "object",
      "description": "The response message for available presets."
    },
    "TransformStatisticQuery": {
      "properties": {
        "state": {
          "type": "string",
          "enum": [
            "Unknown",
            "Canceled",
            "Canceling",
            "Error",
            "Finished",
            "Processing",
            "Queued",
            "Scheduled"
          ],
          "x-ms-enum": {
            "name": "JobState",
            "values": [
              {
                "value": "Unknown",
                "description": "This is reserved for backward compatibility of api versions."
              },
              {
                "value": "Canceled",
                "description": "The job was canceled.  This is a final state for the job."
              },
              {
                "value": "Canceling",
                "description": "The job is in the process of being canceled.  This is a transient state for the job."
              },
              {
                "value": "Error",
                "description": "The job has encountered an Error. This is a final state for the job."
              },
              {
                "value": "Finished",
                "description": "The job is finished. This is a final state for the job."
              },
              {
                "value": "Processing",
                "description": "The job is processing.  This is a transient state for the job."
              },
              {
                "value": "Queued",
                "description": "The job is queued. This is a transient state for the job."
              },
              {
                "value": "Scheduled",
                "description": "The job is scheduled. This is a transient state for the job."
              }
            ],
            "modelAsString": false
          },
          "description": "Specifies the job state that the statistic measures."
        },
        "timePeriod": {
          "type": "string",
          "enum": [
            "Unknown",
            "Now",
            "Past60Minutes",
            "Past24Hours",
            "Past7Days",
            "Past30Days"
          ],
          "x-ms-enum": {
            "name": "TransformStatisticTimePeriod",
            "values": [
              {
                "value": "Unknown",
                "description": "This is reserved for backward compatibility of api versions."
              },
              {
                "value": "Now",
                "description": "The statistic for transient states (Queued, Scheduled, Processing, Canceling)."
              },
              {
                "value": "Past60Minutes",
                "description": "The statistic measured over the past 60 minutes."
              },
              {
                "value": "Past24Hours",
                "description": "The statistic measured over the past 24 hours."
              },
              {
                "value": "Past7Days",
                "description": "The statistic measured over the past 7 days."
              },
              {
                "value": "Past30Days",
                "description": "The statistic measured over the past 30 days."
              }
            ],
            "modelAsString": false
          },
          "description": "Time period, over which the statistic is measured. When the value 'Now' is used, the statistic will measure transient states. For other values, it will measure final states."
        }
      },
      "type": "object",
      "required": [
        "state",
        "timePeriod"
      ],
      "description": "Describes Transform statistic query"
    },
    "TransformStatisticResult": {
      "properties": {
        "state": {
          "type": "string",
          "enum": [
            "Unknown",
            "Canceled",
            "Canceling",
            "Error",
            "Finished",
            "Processing",
            "Queued",
            "Scheduled"
          ],
          "x-ms-enum": {
            "name": "JobState",
            "values": [
              {
                "value": "Unknown",
                "description": "This is reserved for backward compatibility of api versions."
              },
              {
                "value": "Canceled",
                "description": "The job was canceled.  This is a final state for the job."
              },
              {
                "value": "Canceling",
                "description": "The job is in the process of being canceled.  This is a transient state for the job."
              },
              {
                "value": "Error",
                "description": "The job has encountered an Error. This is a final state for the job."
              },
              {
                "value": "Finished",
                "description": "The job is finished. This is a final state for the job."
              },
              {
                "value": "Processing",
                "description": "The job is processing.  This is a transient state for the job."
              },
              {
                "value": "Queued",
                "description": "The job is queued. This is a transient state for the job."
              },
              {
                "value": "Scheduled",
                "description": "The job is scheduled. This is a transient state for the job."
              }
            ],
            "modelAsString": false
          },
          "description": "Specifies the job state of statistic."
        },
        "timePeriod": {
          "type": "string",
          "enum": [
            "Unknown",
            "Now",
            "Past60Minutes",
            "Past24Hours",
            "Past7Days",
            "Past30Days"
          ],
          "x-ms-enum": {
            "name": "TransformStatisticTimePeriod",
            "values": [
              {
                "value": "Unknown",
                "description": "This is reserved for backward compatibility of api versions."
              },
              {
                "value": "Now",
                "description": "The statistic for transient states (Queued, Scheduled, Processing, Canceling)."
              },
              {
                "value": "Past60Minutes",
                "description": "The statistic measured over the past 60 minutes."
              },
              {
                "value": "Past24Hours",
                "description": "The statistic measured over the past 24 hours."
              },
              {
                "value": "Past7Days",
                "description": "The statistic measured over the past 7 days."
              },
              {
                "value": "Past30Days",
                "description": "The statistic measured over the past 30 days."
              }
            ],
            "modelAsString": false
          },
          "description": "Time period, over which the statistic is measured. When the value 'Now' is used, the statistic will measure transient states. For other values, it will measure final states."
        },
        "value": {
          "type": "integer",
          "format": "int32",
          "description": "Specifies the value of the statistic."
        }
      },
      "type": "object",
      "required": [
        "state",
        "timePeriod",
        "value"
      ],
      "description": "Describes statistic result of the Transform"
    },
    "TransformStatisticRequest": {
      "properties": {
        "query": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TransformStatisticQuery"
          },
          "description": "List of desired statistics"
        }
      },
      "type": "object",
      "description": "Describes Transform request"
    },
    "TransformStatisticResponse": {
      "properties": {
        "results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TransformStatisticResult"
          },
          "description": "List of statistic results"
        }
      },
      "type": "object",
      "description": "Describes Transform response"
    },
    "Transform": {
      "properties": {
        "name": {
          "type": "string",
          "description": "The resource name.",
          "readOnly": true
        },
        "id": {
          "type": "string",
          "description": "The resource ID.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The resource type.",
          "readOnly": true
        },
        "location": {
          "type": "string",
          "description": "The resource location."
        },
        "tags": {
          "$ref": "#/definitions/Tags",
          "description": "Optional resource tags."
        },
        "properties": {
          "$ref": "#/definitions/TransformProperties",
          "description": "The resource properties.",
          "x-ms-client-flatten": true
        }
      },
      "type": "object",
      "description": "A sample Key Policy resource type."
    },
    "Tags": {
      "properties": {},
      "type": "object"
    },
    "JobInput": {
      "discriminator": "@odata.type",
      "properties": {
        "@odata.type": {
          "type": "string",
          "description": "The discriminator for derived types."
        },
        "label": {
          "type": "string",
          "description": "Label of the JobInput.  Used to match JobInputs to TransformInputs.  If no Label is given then the JobInputs are matched by index."
        }
      },
      "type": "object",
      "required": [
        "@odata.type"
      ],
      "description": "Base class for inputs to a Job."
    },
    "JobInputClip": {
      "x-ms-discriminator-value": "#Microsoft.Media.JobInputClip",
      "allOf": [
        {
          "$ref": "#/definitions/JobInput"
        }
      ],
      "properties": {
        "end": {
          "type": "string",
          "format": "duration",
          "description": "End time of the media to use for processing.  Defaults to the end of the input but may be set to an earlier time in the media if desired."
        },
        "start": {
          "type": "string",
          "format": "duration",
          "description": "Start time of the media to use for processing.  Defaults to the beginning of the input but may be set to a later time in the media if desired."
        },
        "files": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of files.  Required for JobInputAzureBlob. It optionally can be used for JobInputAsset to tell the service to only use the files specified from the Asset."
        }
      },
      "type": "object",
      "description": "Represents Job Inputs that can have a start or end time specified to take a subset of the specified media."
    },
    "JobInputs": {
      "x-ms-discriminator-value": "#Microsoft.Media.JobInputs",
      "allOf": [
        {
          "$ref": "#/definitions/JobInput"
        }
      ],
      "properties": {
        "inputs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/JobInput"
          },
          "description": "List of Job inputs."
        }
      },
      "type": "object",
      "description": "Supports list of inputs to a Job."
    },
    "JobInputSequence": {
      "x-ms-discriminator-value": "#Microsoft.Media.JobInputSequence",
      "allOf": [
        {
          "$ref": "#/definitions/JobInput"
        }
      ],
      "properties": {
        "timelineType": {
          "type": "string",
          "enum": [
            "Unknown",
            "Concurrent",
            "Sequential"
          ],
          "x-ms-enum": {
            "name": "JobInputTimelineType",
            "values": [
              {
                "value": "Unknown",
                "description": "This is reserved for backward compatibility of api versions."
              },
              {
                "value": "Concurrent",
                "description": "The Sequence of JobInputs should be considered on the same timeline."
              },
              {
                "value": "Sequential",
                "description": "The Sequence of JobInputs should be concatenated together, in the order provided."
              }
            ],
            "modelAsString": false
          },
          "description": "Type of timeline the sequence represents."
        },
        "inputs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/JobInput"
          },
          "description": "JobInputs that make up the timeline."
        }
      },
      "type": "object",
      "required": [
        "timelineType"
      ],
      "description": "A Sequence contains an ordered list of Clips where each clip is a JobInput.  The Sequence will be treated as a single input."
    },
    "JobInputAsset": {
      "x-ms-discriminator-value": "#Microsoft.Media.JobInputAsset",
      "allOf": [
        {
          "$ref": "#/definitions/JobInputClip"
        }
      ],
      "properties": {
        "assetName": {
          "type": "string",
          "description": "Path to the asset such as \"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/mediaServices/{accountName}/assets/{assetName}\"."
        }
      },
      "type": "object",
      "description": "Represents an Asset for input into a Job."
    },
    "AzureBlobClientSideEncryptionSettings": {
      "properties": {},
      "type": "object",
      "description": "Encryption settings for Azure Blob Storage client side encryption REVIEW: Add details here."
    },
    "JobInputAzureBlob": {
      "x-ms-discriminator-value": "#Microsoft.Media.JobInputAzureBlob",
      "allOf": [
        {
          "$ref": "#/definitions/JobInputClip"
        }
      ],
      "properties": {
        "baseUri": {
          "type": "string",
          "description": "Container Uri to use.  Can be a SAS Url or a container url."
        },
        "key": {
          "type": "string",
          "description": "Azure Storage access key.  Should be omitted if the Storage account is  associated with the Azure Media Services account or if a SAS url is provided."
        },
        "encryptionSettings": {
          "$ref": "#/definitions/AzureBlobClientSideEncryptionSettings",
          "description": "Client side encryption details."
        }
      },
      "type": "object",
      "description": "A job input from an Azure Storage container."
    },
    "JobInputHttp": {
      "x-ms-discriminator-value": "#Microsoft.Media.JobInputHttp",
      "allOf": [
        {
          "$ref": "#/definitions/JobInputClip"
        }
      ],
      "properties": {
        "baseUri": {
          "type": "string",
          "description": "Base uri for http job input. It will be concatenated with provided file names.   If no base uri is given, then the provided file list is assumed to be fully qualified uris."
        }
      },
      "type": "object",
      "description": "Represents http job input."
    },
    "PresetOverride": {
      "properties": {
        "jsonPath": {
          "type": "string",
          "description": "JSON path of the value you want to override in the preset.  For example with the IndexPreset to override the language, the JSON Path would be \"$.language\"."
        },
        "value": {
          "type": "string",
          "description": "Value you want to set the override to."
        }
      },
      "type": "object",
      "description": "Represents a value to override in a transform output preset."
    },
    "JobErrorDetails": {
      "properties": {
        "code": {
          "type": "string",
          "enum": [
            "Unknown"
          ],
          "x-ms-enum": {
            "name": "JobErrorCode",
            "values": [
              {
                "value": "Unknown",
                "description": "This is reserved for backward compatibility of api versions."
              }
            ],
            "modelAsString": false
          },
          "description": "Code describing the error."
        },
        "message": {
          "type": "string",
          "description": "Message describing the error."
        },
        "additionalDetails": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Additional details specific to the given error code."
        }
      },
      "type": "object",
      "required": [
        "code"
      ],
      "description": "Details of JobOutput errors."
    },
    "JobOutput": {
      "discriminator": "@odata.type",
      "properties": {
        "@odata.type": {
          "type": "string",
          "description": "The discriminator for derived types."
        },
        "error": {
          "$ref": "#/definitions/JobErrorDetails",
          "description": "If the JobOutput is in the error state, it contains the details of the error.",
          "readOnly": true
        },
        "state": {
          "type": "string",
          "enum": [
            "Unknown",
            "Canceled",
            "Canceling",
            "Error",
            "Finished",
            "Processing",
            "Queued",
            "Scheduled"
          ],
          "x-ms-enum": {
            "name": "JobState",
            "values": [
              {
                "value": "Unknown",
                "description": "This is reserved for backward compatibility of api versions."
              },
              {
                "value": "Canceled",
                "description": "The job was canceled.  This is a final state for the job."
              },
              {
                "value": "Canceling",
                "description": "The job is in the process of being canceled.  This is a transient state for the job."
              },
              {
                "value": "Error",
                "description": "The job has encountered an Error. This is a final state for the job."
              },
              {
                "value": "Finished",
                "description": "The job is finished. This is a final state for the job."
              },
              {
                "value": "Processing",
                "description": "The job is processing.  This is a transient state for the job."
              },
              {
                "value": "Queued",
                "description": "The job is queued. This is a transient state for the job."
              },
              {
                "value": "Scheduled",
                "description": "The job is scheduled. This is a transient state for the job."
              }
            ],
            "modelAsString": false
          },
          "description": "State of the JobOutput.",
          "readOnly": true
        },
        "progress": {
          "type": "integer",
          "format": "int32",
          "description": "If the JobOutput is in the processing state, it contains the percentage of the job completed from 0 to 100 percent.",
          "readOnly": true
        },
        "overrides": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PresetOverride"
          },
          "description": "A list of values to override in the corresponding transform output preset."
        }
      },
      "type": "object",
      "required": [
        "@odata.type"
      ],
      "description": "Base class for the output of a Job."
    },
    "JobOutputAsset": {
      "x-ms-discriminator-value": "#Microsoft.Media.JobOutputAsset",
      "allOf": [
        {
          "$ref": "#/definitions/JobOutput"
        }
      ],
      "properties": {
        "assetName": {
          "type": "string",
          "description": "Path to the asset such as \"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/mediaServices/{accountName}/assets/{assetName}\"."
        }
      },
      "type": "object",
      "description": "Represents an Asset used as a JobOutput."
    },
    "JobOutputAzureBlob": {
      "x-ms-discriminator-value": "#Microsoft.Media.JobOutputAzureBlob",
      "allOf": [
        {
          "$ref": "#/definitions/JobOutput"
        }
      ],
      "properties": {
        "baseUri": {
          "type": "string",
          "description": "Container Uri to use.  Can be a SAS Url or a container url."
        },
        "key": {
          "type": "string",
          "description": "Azure Storage access key.  Should be omitted if the Storage account is  associated with the Azure Media Services account or if a SAS url is provided."
        }
      },
      "type": "object",
      "description": "A JobOutput representing an Azure Blob Service container."
    },
    "JobProperties": {
      "properties": {
        "created": {
          "type": "string",
          "format": "date-time",
          "description": "The date and time when the Job was created.",
          "readOnly": true
        },
        "state": {
          "type": "string",
          "enum": [
            "Unknown",
            "Canceled",
            "Canceling",
            "Error",
            "Finished",
            "Processing",
            "Queued",
            "Scheduled"
          ],
          "x-ms-enum": {
            "name": "JobState",
            "values": [
              {
                "value": "Unknown",
                "description": "This is reserved for backward compatibility of api versions."
              },
              {
                "value": "Canceled",
                "description": "The job was canceled.  This is a final state for the job."
              },
              {
                "value": "Canceling",
                "description": "The job is in the process of being canceled.  This is a transient state for the job."
              },
              {
                "value": "Error",
                "description": "The job has encountered an Error. This is a final state for the job."
              },
              {
                "value": "Finished",
                "description": "The job is finished. This is a final state for the job."
              },
              {
                "value": "Processing",
                "description": "The job is processing.  This is a transient state for the job."
              },
              {
                "value": "Queued",
                "description": "The job is queued. This is a transient state for the job."
              },
              {
                "value": "Scheduled",
                "description": "The job is scheduled. This is a transient state for the job."
              }
            ],
            "modelAsString": false
          },
          "description": "The current state of the job.",
          "readOnly": true
        },
        "description": {
          "type": "string",
          "description": "The customer supplied description of the Job."
        },
        "input": {
          "$ref": "#/definitions/JobInput",
          "description": "The inputs for the Job."
        },
        "lastModified": {
          "type": "string",
          "format": "date-time",
          "description": "The date and time when the Job was last updated.",
          "readOnly": true
        },
        "outputs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/JobOutput"
          },
          "description": "The inputs for the Job."
        },
        "priority": {
          "type": "string",
          "enum": [
            "Unknown",
            "Low",
            "Normal",
            "High"
          ],
          "x-ms-enum": {
            "name": "Priority",
            "values": [
              {
                "value": "Unknown",
                "description": "This is reserved for backward compatibility of api versions."
              },
              {
                "value": "Low",
                "description": "Used for less time sensitive Transforms."
              },
              {
                "value": "Normal",
                "description": "Normal priority."
              },
              {
                "value": "High",
                "description": "Used for Transforms that should take precedence over other Transforms."
              }
            ],
            "modelAsString": false
          },
          "description": "Priority with which the job should be processed.  Higher priority jobs are processed before lower priority jobs if there is resource contention. If not set, the default is normal."
        }
      },
      "type": "object",
      "description": "Properties of the Job."
    },
    "Job": {
      "properties": {
        "name": {
          "type": "string",
          "description": "The resource name.",
          "readOnly": true
        },
        "id": {
          "type": "string",
          "description": "The resource ID.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The resource type.",
          "readOnly": true
        },
        "properties": {
          "$ref": "#/definitions/JobProperties",
          "description": "The resource properties.",
          "x-ms-client-flatten": true
        }
      },
      "type": "object",
      "description": "A Job resource type."
    },
    "ODataError": {
      "properties": {
        "code": {
          "type": "string",
          "description": "A language-independent error name."
        },
        "message": {
          "type": "string",
          "description": "The error message."
        },
        "target": {
          "type": "string",
          "description": "The target of the error (for example, the name of the property in error)."
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ODataError"
          },
          "description": "The error details."
        }
      },
      "type": "object"
    },
    "ApiError": {
      "properties": {
        "error": {
          "$ref": "#/definitions/ODataError"
        }
      },
      "type": "object"
    },
    "TransformCollection": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Transform"
          }
        },
        "@odata.count": {
          "type": "integer",
          "format": "int32"
        },
        "@odata.nextLink": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "GetStatisticsInput": {
      "properties": {
        "query": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TransformStatisticQuery"
          }
        }
      },
      "type": "object"
    },
    "JobCollection": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Job"
          }
        },
        "@odata.count": {
          "type": "integer",
          "format": "int32"
        },
        "@odata.nextLink": {
          "type": "string"
        }
      },
      "type": "object"
    }
  },
  "paths": {
    "/api/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/mediaServices/{accountName}/transforms": {
      "get": {
        "summary": "List Transforms",
        "description": "Lists the Transforms in the account.",
        "operationId": "Transforms_List",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TransformCollection"
            }
          },
          "default": {
            "description": "Detailed Error Information",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/MediaServicesAccountName"
          },
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "$skip",
            "in": "query",
            "required": false,
            "type": "integer"
          }
        ],
        "x-ms-odata": "#/definitions/Transform",
        "x-ms-examples": {
          "Lists the Transforms": {
            "$ref": "examples/transforms-list-all.json"
          }
        }
      }
    },
    "/api/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/mediaServices/{accountName}/transforms/getAvailablePresets": {
      "get": {
        "summary": "Get Available Presets",
        "description": "Gets the presets available which may vary by region.",
        "operationId": "Transforms_GetAvailablePresets",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AvailablePresetsResponse"
            }
          },
          "default": {
            "description": "Detailed Error Information",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/MediaServicesAccountName"
          },
          {
            "$ref": "#/parameters/ApiVersion"
          }
        ],
        "x-ms-examples": {
          "Gets the presets available": {
            "$ref": "examples/transforms-getavailablepresets.json"
          }
        }
      }
    },
    "/api/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/mediaServices/{accountName}/transforms/{transformName}": {
      "get": {
        "summary": "Get Transform",
        "description": "Gets a Transform.",
        "operationId": "Transforms_Get",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Transform"
            }
          },
          "default": {
            "description": "Detailed Error Information",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/MediaServicesAccountName"
          },
          {
            "name": "transformName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The Transform name."
          },
          {
            "$ref": "#/parameters/ApiVersion"
          }
        ],
        "x-ms-examples": {
          "Get a Transform by name": {
            "$ref": "examples/transforms-get-by-name.json"
          }
        }
      },
      "put": {
        "summary": "Create or Update Transform",
        "description": "Creates or updates a new Transform.",
        "operationId": "Transforms_CreateOrUpdate",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Transform"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/Transform"
            }
          },
          "default": {
            "description": "Detailed Error Information",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/MediaServicesAccountName"
          },
          {
            "name": "transformName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The Transform name."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Transform"
            }
          },
          {
            "$ref": "#/parameters/ApiVersion"
          }
        ],
        "x-ms-examples": {
          "Create or update a Transform": {
            "$ref": "examples/transforms-create.json"
          }
        }
      },
      "delete": {
        "summary": "Delete Transform",
        "description": "Deletes a Transform.",
        "operationId": "Transforms_Delete",
        "responses": {
          "200": {
            "description": "OK"
          },
          "default": {
            "description": "Detailed Error Information",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/MediaServicesAccountName"
          },
          {
            "name": "transformName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The Transform name."
          },
          {
            "$ref": "#/parameters/ApiVersion"
          }
        ],
        "x-ms-examples": {
          "Delete a Transform": {
            "$ref": "examples/transforms-delete.json"
          }
        }
      },
      "patch": {
        "summary": "Update Transform",
        "description": "Updates a Transform.",
        "operationId": "Transforms_Update",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Transform"
            }
          },
          "default": {
            "description": "Detailed Error Information",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/MediaServicesAccountName"
          },
          {
            "name": "transformName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The Transform name."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Transform"
            }
          },
          {
            "$ref": "#/parameters/ApiVersion"
          }
        ],
        "x-ms-examples": {
          "Update a Transform.": {
            "$ref": "examples/transforms-create.json"
          }
        }
      }
    },
    "/api/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/mediaServices/{accountName}/transforms/{transformName}/getStatistics": {
      "post": {
        "summary": "Get Transform Statistics",
        "description": "Gets the Job Statistics of a Transform.",
        "operationId": "Transforms_GetStatistics",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TransformStatisticResponse"
            }
          },
          "202": {
            "description": "Accepted"
          },
          "default": {
            "description": "Detailed Error Information",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/MediaServicesAccountName"
          },
          {
            "name": "transformName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The Transform name."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetStatisticsInput"
            }
          },
          {
            "$ref": "#/parameters/ApiVersion"
          }
        ],
        "x-ms-examples": {
          "Get Transform statistics": {
            "$ref": "examples/transforms-getstatistics.json"
          }
        }
      }
    },
    "/api/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/mediaServices/{accountName}/transforms/{transformName}/jobs": {
      "get": {
        "summary": "List Jobs",
        "description": "Lists all of the Jobs for the Transform.",
        "operationId": "Jobs_List",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/JobCollection"
            }
          },
          "default": {
            "description": "Detailed Error Information",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/MediaServicesAccountName"
          },
          {
            "name": "transformName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The Transform name."
          },
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "$skip",
            "in": "query",
            "required": false,
            "type": "integer"
          }
        ],
        "x-ms-odata": "#/definitions/Job",
        "x-ms-examples": {
          "Lists all of the Jobs for the Transform.": {
            "$ref": "examples/jobs-list-all.json"
          }
        }
      }
    },
    "/api/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/mediaServices/{accountName}/transforms/{transformName}/jobs/{jobName}": {
      "get": {
        "summary": "Get Job",
        "description": "Gets a Job.",
        "operationId": "Jobs_Get",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Job"
            }
          },
          "default": {
            "description": "Detailed Error Information",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/MediaServicesAccountName"
          },
          {
            "name": "transformName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The Transform name."
          },
          {
            "name": "jobName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The Job name."
          },
          {
            "$ref": "#/parameters/ApiVersion"
          }
        ],
        "x-ms-examples": {
          "Get a Job by name": {
            "$ref": "examples/jobs-get-by-name.json"
          }
        }
      },
      "put": {
        "summary": "Create or Update Job",
        "description": "Creates or updates a Job.",
        "operationId": "Jobs_CreateOrUpdate",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Job"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/Job"
            }
          },
          "default": {
            "description": "Detailed Error Information",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/MediaServicesAccountName"
          },
          {
            "name": "transformName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The Transform name."
          },
          {
            "name": "jobName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The Job name."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Job"
            }
          },
          {
            "$ref": "#/parameters/ApiVersion"
          }
        ],
        "x-ms-examples": {
          "Create or update a Job": {
            "$ref": "examples/jobs-create.json"
          }
        }
      },
      "delete": {
        "summary": "Delete Job",
        "description": "Deletes a Job.",
        "operationId": "Jobs_Delete",
        "responses": {
          "200": {
            "description": "OK"
          },
          "default": {
            "description": "Detailed Error Information",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/MediaServicesAccountName"
          },
          {
            "name": "transformName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The Transform name."
          },
          {
            "name": "jobName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The Job name."
          },
          {
            "$ref": "#/parameters/ApiVersion"
          }
        ],
        "x-ms-examples": {
          "Delete a Job": {
            "$ref": "examples/jobs-delete.json"
          }
        }
      },
      "patch": {
        "summary": "Update Job",
        "description": "Updates a Job.",
        "operationId": "Jobs_Update",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Job"
            }
          },
          "default": {
            "description": "Detailed Error Information",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/MediaServicesAccountName"
          },
          {
            "name": "transformName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The Transform name."
          },
          {
            "name": "jobName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The Job name."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Job"
            }
          },
          {
            "$ref": "#/parameters/ApiVersion"
          }
        ],
        "x-ms-examples": {
          "Update a Job": {
            "$ref": "examples/jobs-create.json"
          }
        }
      }
    },
    "/api/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/mediaServices/{accountName}/transforms/{transformName}/jobs/{jobName}/cancelJob": {
      "post": {
        "summary": "Cancel Job",
        "description": "Cancel a Job.",
        "operationId": "Jobs_CancelJob",
        "responses": {
          "200": {
            "description": "OK"
          },
          "202": {
            "description": "Accepted"
          },
          "default": {
            "description": "Detailed Error Information",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/MediaServicesAccountName"
          },
          {
            "name": "transformName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The Transform name."
          },
          {
            "name": "jobName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The Job name."
          },
          {
            "$ref": "#/parameters/ApiVersion"
          }
        ],
        "x-ms-examples": {
          "Cancel a Job": {
            "$ref": "examples/jobs-cancel.json"
          }
        }
      }
    }
  },
  "parameters": {
    "SubscriptionId": {
      "name": "subscriptionId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The subscription ID."
    },
    "ResourceGroupName": {
      "name": "resourceGroupName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The resource group name."
    },
    "MediaServicesAccountName": {
      "name": "accountName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The Media Services account name."
    },
    "ApiVersion": {
      "name": "api-version",
      "in": "query",
      "required": true,
      "type": "string",
      "description": "The API version."
    }
  }
}