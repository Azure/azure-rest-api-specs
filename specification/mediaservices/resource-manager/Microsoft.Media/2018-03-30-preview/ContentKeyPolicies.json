{
  "schemes": [
    "https"
  ],
  "swagger": "2.0",
  "info": {
    "title": "Azure Media Services",
    "description": "This Swagger was generated by the API Framework.",
    "version": "2018-03-30-preview"
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "definitions": {
    "ContentKeyPolicyPlayReadyExplicitAnalogTelevisionRestriction": {
      "properties": {
        "bestEffort": {
          "type": "boolean",
          "description": "Indicates whether this restriction is enforced on a Best Effort basis."
        },
        "configurationData": {
          "type": "integer",
          "format": "int32",
          "description": "Configures the restriction control bits. Must be 1 byte long."
        }
      },
      "type": "object",
      "required": [
        "bestEffort"
      ]
    },
    "ContentKeyPolicyPlayReadyContentKeyLocation": {
      "discriminator": "@odata.type",
      "properties": {
        "@odata.type": {
          "type": "string",
          "description": "The discriminator for derived types."
        }
      },
      "type": "object",
      "required": [
        "@odata.type"
      ]
    },
    "ContentKeyPolicyPlayReadyContentEncryptionKeyFromHeader": {
      "x-ms-discriminator-value": "#Microsoft.Media.ContentKeyPolicyPlayReadyContentEncryptionKeyFromHeader",
      "allOf": [
        {
          "$ref": "#/definitions/ContentKeyPolicyPlayReadyContentKeyLocation"
        }
      ],
      "properties": {},
      "type": "object"
    },
    "ContentKeyPolicyPlayReadyContentEncryptionKeyFromKeyIdentifier": {
      "x-ms-discriminator-value": "#Microsoft.Media.ContentKeyPolicyPlayReadyContentEncryptionKeyFromKeyIdentifier",
      "allOf": [
        {
          "$ref": "#/definitions/ContentKeyPolicyPlayReadyContentKeyLocation"
        }
      ],
      "properties": {
        "keyId": {
          "type": "string",
          "format": "uuid",
          "description": "The content key ID."
        }
      },
      "type": "object",
      "required": [
        "keyId"
      ]
    },
    "ContentKeyPolicyPlayReadyPlayRight": {
      "properties": {
        "firstPlayExpiration": {
          "type": "string",
          "format": "duration",
          "description": "The amount of time that the license is valid after the license is first used to play content."
        },
        "scmsRestriction": {
          "type": "integer",
          "format": "int32",
          "description": "Configures the Serial Copy Management System (SCMS) in the license. Must be between 0 and 3 inclusive."
        },
        "agcAndColorStripeRestriction": {
          "type": "integer",
          "format": "int32",
          "description": "Configures Automatic Gain Control (AGC) and Color Stripe in the license. Must be between 0 and 3 inclusive."
        },
        "explicitAnalogTelevisionOutputRestriction": {
          "$ref": "#/definitions/ContentKeyPolicyPlayReadyExplicitAnalogTelevisionRestriction",
          "description": "Configures the Explicit Analog Television Output Restriction in the license. Configuration data must be between 0 and 3 inclusive."
        },
        "digitalVideoOnlyContentRestriction": {
          "type": "boolean",
          "description": "Enables the Image Constraint For Analog Component Video Restriction in the license."
        },
        "imageConstraintForAnalogComponentVideoRestriction": {
          "type": "boolean",
          "description": "Enables the Image Constraint For Analog Component Video Restriction in the license."
        },
        "imageConstraintForAnalogComputerMonitorRestriction": {
          "type": "boolean",
          "description": "Enables the Image Constraint For Analog Component Video Restriction in the license."
        },
        "allowPassingVideoContentToUnknownOutput": {
          "type": "string",
          "enum": [
            "Unknown",
            "NotAllowed",
            "Allowed",
            "AllowedWithVideoConstriction"
          ],
          "x-ms-enum": {
            "name": "ContentKeyPolicyPlayReadyUnknownOutputPassingOption",
            "values": [
              {
                "value": "Unknown",
                "description": "Represents a ContentKeyPolicyPlayReadyUnknownOutputPassingOption that is unavailable in current API version."
              },
              {
                "value": "NotAllowed",
                "description": "Passing the video portion of protected content to an Unknown Output is not allowed."
              },
              {
                "value": "Allowed",
                "description": "Passing the video portion of protected content to an Unknown Output is allowed."
              },
              {
                "value": "AllowedWithVideoConstriction",
                "description": "Passing the video portion of protected content to an Unknown Output is allowed but with constrained resolution."
              }
            ],
            "modelAsString": false
          },
          "description": "Configures Unknown output handling settings of the license."
        },
        "uncompressedDigitalVideoOpl": {
          "type": "integer",
          "format": "int32",
          "description": "Specifies the output protection level for uncompressed digital video."
        },
        "compressedDigitalVideoOpl": {
          "type": "integer",
          "format": "int32",
          "description": "Specifies the output protection level for compressed digital video."
        },
        "analogVideoOpl": {
          "type": "integer",
          "format": "int32",
          "description": "Specifies the output protection level for compressed digital audio."
        },
        "compressedDigitalAudioOpl": {
          "type": "integer",
          "format": "int32",
          "description": "Specifies the output protection level for compressed digital audio."
        },
        "uncompressedDigitalAudioOpl": {
          "type": "integer",
          "format": "int32",
          "description": "Specifies the output protection level for uncompressed digital audio."
        }
      },
      "type": "object",
      "required": [
        "digitalVideoOnlyContentRestriction",
        "imageConstraintForAnalogComponentVideoRestriction",
        "imageConstraintForAnalogComputerMonitorRestriction",
        "allowPassingVideoContentToUnknownOutput"
      ]
    },
    "ContentKeyPolicyTokenClaim": {
      "properties": {
        "claimType": {
          "type": "string",
          "description": "Token claim type."
        },
        "claimValue": {
          "type": "string",
          "description": "Token claim value."
        }
      },
      "type": "object"
    },
    "ContentKeyPolicyPlayReadyLicense": {
      "properties": {
        "allowTestDevices": {
          "type": "boolean",
          "description": "A flag indicating whether test devices can use the license."
        },
        "beginDate": {
          "type": "string",
          "format": "date-time",
          "description": "The begin date of license"
        },
        "expirationDate": {
          "type": "string",
          "format": "date-time",
          "description": "The expiration date of license."
        },
        "relativeBeginDate": {
          "type": "string",
          "format": "duration",
          "description": "The relative begin date of license."
        },
        "relativeExpirationDate": {
          "type": "string",
          "format": "duration",
          "description": "The relative expiration date of license."
        },
        "gracePeriod": {
          "type": "string",
          "format": "duration",
          "description": "The grace period of license."
        },
        "playRight": {
          "$ref": "#/definitions/ContentKeyPolicyPlayReadyPlayRight",
          "description": "The license PlayRight"
        },
        "licenseType": {
          "type": "string",
          "enum": [
            "Unknown",
            "NonPersistent",
            "Persistent"
          ],
          "x-ms-enum": {
            "name": "ContentKeyPolicyPlayReadyLicenseType",
            "values": [
              {
                "value": "Unknown",
                "description": "Represents a ContentKeyPolicyPlayReadyLicenseType that is unavailable in current API version."
              },
              {
                "value": "NonPersistent",
                "description": "Non persistent license."
              },
              {
                "value": "Persistent",
                "description": "Persistent license. Allows offline playback."
              }
            ],
            "modelAsString": false
          },
          "description": "The license type."
        },
        "contentKeyLocation": {
          "$ref": "#/definitions/ContentKeyPolicyPlayReadyContentKeyLocation",
          "description": "The content key location."
        },
        "contentType": {
          "type": "string",
          "enum": [
            "Unknown",
            "Unspecified",
            "UltraVioletDownload",
            "UltraVioletStreaming"
          ],
          "x-ms-enum": {
            "name": "ContentKeyPolicyPlayReadyContentType",
            "values": [
              {
                "value": "Unknown",
                "description": "Represents a ContentKeyPolicyPlayReadyContentType that is unavailable in current API version."
              },
              {
                "value": "Unspecified",
                "description": "Unspecified content type."
              },
              {
                "value": "UltraVioletDownload",
                "description": "Ultraviolet download content type."
              },
              {
                "value": "UltraVioletStreaming",
                "description": "Ultraviolet streaming content type."
              }
            ],
            "modelAsString": false
          },
          "description": "The PlayReady content type."
        }
      },
      "type": "object",
      "required": [
        "allowTestDevices",
        "licenseType",
        "contentType"
      ]
    },
    "ContentKeyPolicyRestriction": {
      "discriminator": "@odata.type",
      "properties": {
        "@odata.type": {
          "type": "string",
          "description": "The discriminator for derived types."
        }
      },
      "type": "object",
      "required": [
        "@odata.type"
      ]
    },
    "ContentKeyPolicyOpenRestriction": {
      "x-ms-discriminator-value": "#Microsoft.Media.ContentKeyPolicyOpenRestriction",
      "allOf": [
        {
          "$ref": "#/definitions/ContentKeyPolicyRestriction"
        }
      ],
      "properties": {},
      "type": "object"
    },
    "ContentKeyPolicyUnknownRestriction": {
      "x-ms-discriminator-value": "#Microsoft.Media.ContentKeyPolicyUnknownRestriction",
      "allOf": [
        {
          "$ref": "#/definitions/ContentKeyPolicyRestriction"
        }
      ],
      "properties": {},
      "type": "object"
    },
    "ContentKeyPolicyConfiguration": {
      "discriminator": "@odata.type",
      "properties": {
        "@odata.type": {
          "type": "string",
          "description": "The discriminator for derived types."
        }
      },
      "type": "object",
      "required": [
        "@odata.type"
      ]
    },
    "ContentKeyPolicyRestrictionTokenKey": {
      "discriminator": "@odata.type",
      "properties": {
        "@odata.type": {
          "type": "string",
          "description": "The discriminator for derived types."
        }
      },
      "type": "object",
      "required": [
        "@odata.type"
      ]
    },
    "ContentKeyPolicySymmetricTokenKey": {
      "x-ms-discriminator-value": "#Microsoft.Media.ContentKeyPolicySymmetricTokenKey",
      "allOf": [
        {
          "$ref": "#/definitions/ContentKeyPolicyRestrictionTokenKey"
        }
      ],
      "properties": {
        "keyValue": {
          "type": "string",
          "format": "byte",
          "description": "The key value of the key"
        }
      },
      "type": "object"
    },
    "ContentKeyPolicyRsaTokenKey": {
      "x-ms-discriminator-value": "#Microsoft.Media.ContentKeyPolicyRsaTokenKey",
      "allOf": [
        {
          "$ref": "#/definitions/ContentKeyPolicyRestrictionTokenKey"
        }
      ],
      "properties": {
        "exponent": {
          "type": "string",
          "format": "byte",
          "description": "The RSA Parameter exponent"
        },
        "modulus": {
          "type": "string",
          "format": "byte",
          "description": "The RSA Parameter modulus"
        }
      },
      "type": "object"
    },
    "ContentKeyPolicyX509CertificateTokenKey": {
      "x-ms-discriminator-value": "#Microsoft.Media.ContentKeyPolicyX509CertificateTokenKey",
      "allOf": [
        {
          "$ref": "#/definitions/ContentKeyPolicyRestrictionTokenKey"
        }
      ],
      "properties": {
        "rawBody": {
          "type": "string",
          "format": "byte",
          "description": "The raw data field of a certificate in PKCS 12 format (X509Certificate2 in .NET)"
        }
      },
      "type": "object"
    },
    "ContentKeyPolicyTokenRestriction": {
      "x-ms-discriminator-value": "#Microsoft.Media.ContentKeyPolicyTokenRestriction",
      "allOf": [
        {
          "$ref": "#/definitions/ContentKeyPolicyRestriction"
        }
      ],
      "properties": {
        "issuer": {
          "type": "string",
          "description": "The token issuer."
        },
        "audience": {
          "type": "string",
          "description": "The audience for the token."
        },
        "primaryVerificationKey": {
          "$ref": "#/definitions/ContentKeyPolicyRestrictionTokenKey",
          "description": "The primary verification key."
        },
        "alternateVerificationKeys": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContentKeyPolicyRestrictionTokenKey"
          },
          "description": "A list of alternative verification keys."
        },
        "requiredClaims": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContentKeyPolicyTokenClaim"
          },
          "description": "A list of required token claims."
        },
        "restrictionTokenType": {
          "type": "string",
          "enum": [
            "Unknown",
            "Swt",
            "Jwt"
          ],
          "x-ms-enum": {
            "name": "ContentKeyPolicyRestrictionTokenType",
            "values": [
              {
                "value": "Unknown",
                "description": "Represents a ContentKeyPolicyRestrictionTokenType that is unavailable in current API version."
              },
              {
                "value": "Swt",
                "description": "Simple Web Token."
              },
              {
                "value": "Jwt",
                "description": "JSON Web Token."
              }
            ],
            "modelAsString": false
          },
          "description": "The type of token."
        },
        "openIdConnectDiscoveryDocument": {
          "type": "string",
          "description": "The OpenID connect discovery document."
        }
      },
      "type": "object",
      "required": [
        "restrictionTokenType"
      ]
    },
    "ContentKeyPolicyHlsConfiguration": {
      "x-ms-discriminator-value": "#Microsoft.Media.ContentKeyPolicyHlsConfiguration",
      "allOf": [
        {
          "$ref": "#/definitions/ContentKeyPolicyConfiguration"
        }
      ],
      "properties": {},
      "type": "object"
    },
    "ContentKeyPolicyUnknownConfiguration": {
      "x-ms-discriminator-value": "#Microsoft.Media.ContentKeyPolicyUnknownConfiguration",
      "allOf": [
        {
          "$ref": "#/definitions/ContentKeyPolicyConfiguration"
        }
      ],
      "properties": {},
      "type": "object"
    },
    "ContentKeyPolicyWidevineConfiguration": {
      "x-ms-discriminator-value": "#Microsoft.Media.ContentKeyPolicyWidevineConfiguration",
      "allOf": [
        {
          "$ref": "#/definitions/ContentKeyPolicyConfiguration"
        }
      ],
      "properties": {
        "widevineTemplate": {
          "type": "string",
          "description": "The Widevine template."
        }
      },
      "type": "object"
    },
    "ContentKeyPolicyPlayReadyConfiguration": {
      "x-ms-discriminator-value": "#Microsoft.Media.ContentKeyPolicyPlayReadyConfiguration",
      "allOf": [
        {
          "$ref": "#/definitions/ContentKeyPolicyConfiguration"
        }
      ],
      "properties": {
        "licenses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContentKeyPolicyPlayReadyLicense"
          },
          "description": "The PlayReady licenses."
        },
        "responseCustomData": {
          "type": "string",
          "description": "The custom response data."
        }
      },
      "type": "object"
    },
    "ContentKeyPolicyFairPlayConfiguration": {
      "x-ms-discriminator-value": "#Microsoft.Media.ContentKeyPolicyFairPlayConfiguration",
      "allOf": [
        {
          "$ref": "#/definitions/ContentKeyPolicyConfiguration"
        }
      ],
      "properties": {
        "ask": {
          "type": "string",
          "format": "byte",
          "description": "The ID of the key that must be used as FairPlay ASk."
        },
        "fairPlayPfxPassword": {
          "type": "string",
          "format": "byte",
          "description": "The ID of the Password Key encrypting FairPlay certificate in PKCS 12 (pfx) format."
        },
        "fairPlayPfx": {
          "type": "string",
          "description": "The Base64 representation of FairPlay certificate in PKCS 12 (pfx) format (including private key)."
        },
        "rentalAndLeaseKeyType": {
          "type": "string",
          "enum": [
            "Unknown",
            "Undefined",
            "PersistentUnlimited"
          ],
          "x-ms-enum": {
            "name": "ContentKeyPolicyFairPlayRentalAndLeaseKeyType",
            "values": [
              {
                "value": "Unknown",
                "description": "Represents a ContentKeyPolicyFairPlayRentalAndLeaseKeyType that is unavailable in current API version."
              },
              {
                "value": "Undefined",
                "description": "Key duration is not specified."
              },
              {
                "value": "PersistentUnlimited"
              }
            ],
            "modelAsString": false
          },
          "description": "The rental and lease key type."
        },
        "rentalDuration": {
          "type": "integer",
          "format": "int64",
          "description": "The rental duration."
        }
      },
      "type": "object",
      "required": [
        "rentalAndLeaseKeyType",
        "rentalDuration"
      ]
    },
    "ContentKeyPolicyOption": {
      "properties": {
        "policyOptionId": {
          "type": "string",
          "format": "uuid",
          "description": "The legacy Policy Option ID."
        },
        "name": {
          "type": "string",
          "description": "The Policy Option description."
        },
        "configuration": {
          "$ref": "#/definitions/ContentKeyPolicyConfiguration",
          "description": "The key delivery configuration. Can be of type Fairplay, Widevine, PlayReady or HLS."
        },
        "restriction": {
          "$ref": "#/definitions/ContentKeyPolicyRestriction",
          "description": "The requirements that must be met to deliver keys with this configuration"
        }
      },
      "type": "object",
      "required": [
        "policyOptionId"
      ]
    },
    "ContentKeyPolicyProperties": {
      "properties": {
        "policyId": {
          "type": "string",
          "format": "uuid",
          "description": "The legacy Policy ID."
        },
        "description": {
          "type": "string",
          "description": "A description for the policy."
        },
        "options": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContentKeyPolicyOption"
          },
          "description": "The Key Policy options."
        }
      },
      "type": "object",
      "required": [
        "policyId"
      ]
    },
    "ContentKeyPolicy": {
      "properties": {
        "name": {
          "type": "string",
          "description": "The resource name.",
          "readOnly": true
        },
        "id": {
          "type": "string",
          "description": "The resource ID.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The resource type.",
          "readOnly": true
        },
        "properties": {
          "$ref": "#/definitions/ContentKeyPolicyProperties",
          "description": "The resource properties.",
          "x-ms-client-flatten": true
        }
      },
      "type": "object"
    },
    "ODataError": {
      "properties": {
        "code": {
          "type": "string",
          "description": "A language-independent error name."
        },
        "message": {
          "type": "string",
          "description": "The error message."
        },
        "target": {
          "type": "string",
          "description": "The target of the error (for example, the name of the property in error)."
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ODataError"
          },
          "description": "The error details."
        }
      },
      "type": "object"
    },
    "ApiError": {
      "properties": {
        "error": {
          "$ref": "#/definitions/ODataError"
        }
      },
      "type": "object"
    },
    "ContentKeyPolicyCollection": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContentKeyPolicy"
          }
        },
        "@odata.count": {
          "type": "integer",
          "format": "int32"
        },
        "@odata.nextLink": {
          "type": "string"
        }
      },
      "type": "object"
    }
  },
  "paths": {
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/mediaServices/{accountName}/contentKeyPolicies": {
      "get": {
        "summary": "List Content Key Policies",
        "description": "Lists the Content Key Policies in the account",
        "operationId": "ContentKeyPolicies_List",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ContentKeyPolicyCollection"
            }
          },
          "default": {
            "description": "Detailed Error Information",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/MediaServicesAccountName"
          },
          {
            "$ref": "#/parameters/ApiVersion"
          }
        ],
        "x-ms-examples": {
          "Lists Content Key Policies": {
            "$ref": "examples/content-key-policies-list.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/mediaServices/{accountName}/contentKeyPolicies/{contentKeyPolicyName}": {
      "get": {
        "summary": "Get a Content Key Policy",
        "description": "Get the details of a Content Key Policy in the Media Services account",
        "operationId": "ContentKeyPolicies_Get",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ContentKeyPolicy"
            }
          },
          "default": {
            "description": "Detailed Error Information",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/MediaServicesAccountName"
          },
          {
            "name": "contentKeyPolicyName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The Content Key Policy name."
          },
          {
            "$ref": "#/parameters/ApiVersion"
          }
        ],
        "x-ms-examples": {
          "Get a Content Key Policy by name": {
            "$ref": "examples/content-key-policies-get-by-name.json"
          }
        }
      },
      "put": {
        "summary": "Create or update an Content Key Policy",
        "description": "Create or update a Content Key Policy in the Media Services account",
        "operationId": "ContentKeyPolicies_CreateOrUpdate",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ContentKeyPolicy"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/ContentKeyPolicy"
            }
          },
          "default": {
            "description": "Detailed Error Information",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/MediaServicesAccountName"
          },
          {
            "name": "contentKeyPolicyName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The Content Key Policy name."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ContentKeyPolicy"
            }
          },
          {
            "$ref": "#/parameters/ApiVersion"
          }
        ],
        "x-ms-examples": {
          "Creates a Content Key Policy": {
            "$ref": "examples/content-key-policies-create.json"
          }
        }
      },
      "delete": {
        "summary": "Delete a Content Key Policy",
        "description": "Deletes a Content Key Policy in the Media Services account",
        "operationId": "ContentKeyPolicies_Delete",
        "responses": {
          "200": {
            "description": "OK"
          },
          "default": {
            "description": "Detailed Error Information",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/MediaServicesAccountName"
          },
          {
            "name": "contentKeyPolicyName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The Content Key Policy name."
          },
          {
            "$ref": "#/parameters/ApiVersion"
          }
        ],
        "x-ms-examples": {
          "Delete a Key Policy": {
            "$ref": "examples/content-key-policies-delete.json"
          }
        }
      },
      "patch": {
        "summary": "Update a Content Key Policy",
        "description": "Updates an existing Content Key Policy in the Media Services account",
        "operationId": "ContentKeyPolicies_Update",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ContentKeyPolicy"
            }
          },
          "default": {
            "description": "Detailed Error Information",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/MediaServicesAccountName"
          },
          {
            "name": "contentKeyPolicyName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The Content Key Policy name."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ContentKeyPolicy"
            }
          },
          {
            "$ref": "#/parameters/ApiVersion"
          }
        ],
        "x-ms-examples": {
          "Update a Content Key Policy": {
            "$ref": "examples/content-key-policies-update.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/mediaServices/{accountName}/contentKeyPolicies/{contentKeyPolicyName}/getPolicyPropertiesWithSecrets": {
      "post": {
        "summary": "Get a Content Key Policy with secrets",
        "description": "Get a Content Key Policy including secret values",
        "operationId": "ContentKeyPolicies_GetPolicyPropertiesWithSecrets",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ContentKeyPolicyProperties"
            }
          },
          "202": {
            "description": "Accepted"
          },
          "default": {
            "description": "Detailed Error Information",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/MediaServicesAccountName"
          },
          {
            "name": "contentKeyPolicyName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The Content Key Policy name."
          },
          {
            "$ref": "#/parameters/ApiVersion"
          }
        ],
        "x-ms-examples": {
          "Get an Content Key Policy with secrets": {
            "$ref": "examples/content-key-policies-get-with-secrets.json"
          }
        }
      }
    }
  },
  "parameters": {
    "SubscriptionId": {
      "name": "subscriptionId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The subscription ID."
    },
    "ResourceGroupName": {
      "name": "resourceGroupName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The resource group name."
    },
    "MediaServicesAccountName": {
      "name": "accountName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The Media Services account name."
    },
    "ApiVersion": {
      "name": "api-version",
      "in": "query",
      "required": true,
      "type": "string",
      "description": "The API version."
    }
  }
}