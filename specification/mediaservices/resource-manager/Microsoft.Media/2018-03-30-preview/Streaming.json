{
  "schemes": [
    "https"
  ],
  "swagger": "2.0",
  "info": {
    "title": "Azure Media Services",
    "description": "Streaming resource management client for Azure Media Services",
    "version": "2018-03-30-preview"
  },
  "host": "management.azure.com",
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Azure Active Directory OAuth2 Flow",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "paths": {
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/mediaservices/{mediaServicesAccountName}/liveEvents": {
      "get": {
        "tags": [
          "LiveEvents"
        ],
        "operationId": "LiveEvents_List",
        "description": "Lists the Live Events in the account.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/MediaServicesAccountNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/LiveEventListResult"
            }
          },
          "default": {
            "description": "The streaming error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/StreamingApiError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/mediaservices/{mediaServicesAccountName}/liveEvents/{liveEventName}": {
      "get": {
        "tags": [
          "LiveEvents"
        ],
        "description": "Gets a Live Event.",
        "operationId": "LiveEvents_Get",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/MediaServicesAccountNameParameter"
          },
          {
            "$ref": "#/parameters/LiveEventNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/LiveEvent"
            }
          },
          "default": {
            "description": "The streaming error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/StreamingApiError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "LiveEvents"
        ],
        "description": "Creates a Live Event.",
        "operationId": "LiveEvents_Create",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/MediaServicesAccountNameParameter"
          },
          {
            "$ref": "#/parameters/LiveEventNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "LiveEvent",
            "description": "Live Event properties needed for creation.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LiveEvent"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/LiveEvent"
            }
          },
          "202": {
            "description": "Accepted. The request has been accepted for processing and the operation will complete asynchronously.",
            "schema": {
              "$ref": "#/definitions/LiveEvent"
            }
          },
          "default": {
            "description": "The streaming error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/StreamingApiError"
            }
          }
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "tags": [
          "LiveEvents"
        ],
        "description": "Updates a existing Live Event.",
        "operationId": "LiveEvents_Update",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/MediaServicesAccountNameParameter"
          },
          {
            "$ref": "#/parameters/LiveEventNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "LiveEvent",
            "description": "Live Event properties needed for creation.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LiveEvent"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/LiveEvent"
            }
          },
          "202": {
            "description": "Accepted. The request has been accepted for processing and the operation will complete asynchronously.",
            "schema": {
              "$ref": "#/definitions/LiveEvent"
            }
          },
          "default": {
            "description": "The streaming error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/StreamingApiError"
            }
          }
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "tags": [
          "LiveEvents"
        ],
        "description": "Deletes a Live Event.",
        "operationId": "LiveEvents_Delete",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/MediaServicesAccountNameParameter"
          },
          {
            "$ref": "#/parameters/LiveEventNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The request has succeeded."
          },
          "202": {
            "description": "Accepted. The request has been accepted for processing and the operation will complete asynchronously."
          },
          "204": {
            "description": "No content. The request has been accepted but the Live Output was not found."
          },
          "default": {
            "description": "The streaming error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/StreamingApiError"
            }
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/mediaservices/{mediaServicesAccountName}/liveEvents/{liveEventName}/start": {
      "post": {
        "tags": [
          "LiveEvents"
        ],
        "operationId": "LiveEvents_Start",
        "description": "Starts an existing Live Event.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/MediaServicesAccountNameParameter"
          },
          {
            "$ref": "#/parameters/LiveEventNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted. The request has been accepted for processing and the operation will complete asynchronously."
          },
          "default": {
            "description": "The streaming error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/StreamingApiError"
            }
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/mediaservices/{mediaServicesAccountName}/liveEvents/{liveEventName}/stop": {
      "post": {
        "tags": [
          "LiveEvents"
        ],
        "operationId": "LiveEvents_Stop",
        "description": "Stops an existing Live Event.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/MediaServicesAccountNameParameter"
          },
          {
            "$ref": "#/parameters/LiveEventNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted. The request has been accepted for processing and the operation will complete asynchronously."
          },
          "default": {
            "description": "The streaming error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/StreamingApiError"
            }
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/mediaservices/{mediaServicesAccountName}/liveEvents/{liveEventName}/reset": {
      "post": {
        "tags": [
          "LiveEvents"
        ],
        "operationId": "LiveEvents_Reset",
        "description": "Resets an existing Live Event.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/MediaServicesAccountNameParameter"
          },
          {
            "$ref": "#/parameters/LiveEventNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted. The request has been accepted for processing and the operation will complete asynchronously."
          },
          "default": {
            "description": "The streaming error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/StreamingApiError"
            }
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/mediaservices/{mediaServicesAccountName}/liveEvents/{liveEventName}/liveOutputs": {
      "get": {
        "tags": [
          "LiveOutputs"
        ],
        "operationId": "LiveOutputs_List",
        "description": "Lists the Live Outputs in the Live Event.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/MediaServicesAccountNameParameter"
          },
          {
            "$ref": "#/parameters/LiveEventNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/LiveOutputListResult"
            }
          },
          "default": {
            "description": "The streaming error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/StreamingApiError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/mediaservices/{mediaServicesAccountName}/liveEvents/{liveEventName}/liveOutputs/{liveOutputName}": {
      "get": {
        "tags": [
          "LiveOutputs"
        ],
        "description": "Gets a Live Output.",
        "operationId": "LiveOutputs_Get",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/MediaServicesAccountNameParameter"
          },
          {
            "$ref": "#/parameters/LiveEventNameParameter"
          },
          {
            "$ref": "#/parameters/LiveOutputNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/LiveOutput"
            }
          },
          "default": {
            "description": "The streaming error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/StreamingApiError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "LiveOutputs"
        ],
        "description": "Creates a Live Output.",
        "operationId": "LiveOutputs_Create",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/MediaServicesAccountNameParameter"
          },
          {
            "$ref": "#/parameters/LiveEventNameParameter"
          },
          {
            "$ref": "#/parameters/LiveOutputNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "LiveOutput",
            "description": "Live Output properties needed for creation.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LiveOutput"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/LiveOutput"
            }
          },
          "202": {
            "description": "Accepted. The request has been accepted for processing and the operation will complete asynchronously.",
            "schema": {
              "$ref": "#/definitions/LiveOutput"
            }
          },
          "default": {
            "description": "The streaming error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/StreamingApiError"
            }
          }
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "tags": [
          "LiveOutputs"
        ],
        "description": "Deletes a Live Output.",
        "operationId": "LiveOutputs_Delete",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/MediaServicesAccountNameParameter"
          },
          {
            "$ref": "#/parameters/LiveEventNameParameter"
          },
          {
            "$ref": "#/parameters/LiveOutputNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The request has succeeded."
          },
          "202": {
            "description": "Accepted. The request has been accepted for processing and the operation will complete asynchronously."
          },
          "204": {
            "description": "No content. The request has been accepted but the Live Output was not found."
          },
          "default": {
            "description": "The streaming error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/StreamingApiError"
            }
          }
        },
        "x-ms-long-running-operation": true
      }
    }
  },
  "definitions": {
    "StreamingRestResource": {
      "properties": {
        "id": {
          "type": "string",
          "readOnly": true,
          "description": "The resource ID."
        },
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "The resource name."
        },
        "type": {
          "type": "string",
          "readOnly": true,
          "description": "The resource type."
        }
      },
      "x-ms-azure-resource": true,
      "description": "The resource definition."
    },
    "StreamingTrackedResource": {
      "properties": {
        "location": {
          "type": "string",
          "description": "The resource location."
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "The resource tags."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/StreamingRestResource"
        }
      ],
      "description": "The tracked resource definition."
    },
    "Hls": {
      "properties": {
        "fragmentsPerSegment": {
          "format": "int32",
          "type": "integer",
          "description": "The amount of fragments per HTTP Live Streaming (HLS) segment."
        }
      },
      "description": "The HLS configuration."
    },
    "LiveOutputProperties": {
      "properties": {
        "description": {
          "type": "string",
          "description": "The description of the Live Output."
        },
        "assetName": {
          "type": "string",
          "description": "The asset name."
        },
        "archiveWindowLength": {
          "format": "duration",
          "type": "string",
          "description": "ISO 8601 timespan duration of the archive window length. This is duration that customer want to retain the recorded content."
        },
        "manifestName": {
          "type": "string",
          "description": "The manifest file name."
        },
        "hls": {
          "type": "object",
          "$ref": "#/definitions/Hls",
          "description": "The HLS configuration."
        },
        "outputSnapTime": {
          "type": "integer",
          "format": "int64",
          "description": "The output snapshot time."
        },
        "created": {
          "readOnly": true,
          "format": "date-time",
          "type": "string",
          "description": "The exact time the Live Output was created."
        },
        "lastModified": {
          "readOnly": true,
          "format": "date-time",
          "type": "string",
          "description": "The exact time the Live Output was last modified."
        },
        "provisioningState": {
          "readOnly": true,
          "type": "string",
          "description": "The provisioning state of the Live Output."
        },
        "resourceState": {
          "description": "The resource state of the Live Output.",
          "readOnly": true,
          "type": "string",
          "x-ms-enum": {
            "name": "LiveOutputResourceState",
            "values": [
              {
                "value": "Creating"
              },
              {
                "value": "Running"
              },
              {
                "value": "Deleting"
              }
            ],
            "modelAsString": false
          }
        }
      },
      "description": "The JSON object that contains the properties required to create a Live Output."
    },
    "LiveOutput": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/LiveOutputProperties",
          "description": "The Live Output properties."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/StreamingRestResource"
        }
      ],
      "description": "The Live Output."
    },
    "LiveOutputListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LiveOutput"
          },
          "description": "The result of the List Live Output operation."
        },
        "@odata.count": {
          "type": "integer",
          "format": "int32",
          "description": "The number of result."
        },
        "@odata.nextLink": {
          "type": "string",
          "description": "Th link to the next set of results. Not empty if value contains incomplete list of Live Outputs."
        }
      }
    },
    "LiveEventEndpoint": {
      "properties": {
        "protocol": {
          "type": "string",
          "description": "The endpoint protocol."
        },
        "url": {
          "type": "string",
          "description": "The endpoint URL."
        }
      },
      "description": "The Live Event endpoint."
    },
    "LiveEventInput": {
      "properties": {
        "streamingProtocol": {
          "type": "string",
          "description": "The streaming protocol for the Live Event.",
          "x-ms-enum": {
            "name": "LiveEventInputProtocol",
            "values": [
              {
                "value": "FragmentedMP4"
              },
              {
                "value": "RTMP"
              },
              {
                "value": "RTPMPEG2TS"
              }
            ],
            "modelAsString": false
          }
        },
        "keyFrameIntervalDuration": {
          "format": "duration",
          "type": "string",
          "description": "ISO 8601 timespan duration of the key frame interval duration."
        },
        "accessToken": {
          "type": "string",
          "description": "The access token."
        },
        "endpoints": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LiveEventEndpoint"
          },
          "description": "The input endpoints for the Live Event."
        }
      },
      "description": "The Live Event input."
    },
    "IPRange": {
      "properties": {
        "name": {
          "type": "string",
          "description": "The friendly name for the IP address range."
        },
        "address": {
          "type": "string",
          "description": "The IP address."
        },
        "subnetPrefixLength": {
          "type": "string",
          "description": "The subset mask prefix length (see CIDR notation)."
        }
      },
      "description": "The IP address range in the CIDR scheme."
    },
    "IPAccessControl": {
      "properties": {
        "allow": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/IPRange"
          },
          "description": "The IP allow list."
        }
      },
      "description": "The IP access control."
    },
    "LiveEventPreviewAccessControl": {
      "properties": {
        "IP": {
          "type": "object",
          "$ref": "#/definitions/IPAccessControl",
          "description": "The IP access control properties."
        }
      },
      "description": "The IP access control for Live Event preview."
    },
    "LiveEventPreview": {
      "properties": {
        "endpoints": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LiveEventEndpoint"
          },
          "description": "The endpoints for preview."
        },
        "accessControl": {
          "type": "object",
          "$ref": "#/definitions/LiveEventPreviewAccessControl",
          "description": "The access control for LiveEvent preview."
        },
        "accessToken": {
          "type": "string",
          "description": "The access token."
        }
      },
      "description": "The Live Event preview."
    },
    "LiveEventEncoding": {
      "properties": {
        "encodingType": {
          "type": "string",
          "description": "The encoding type for Live Event.",
          "x-ms-enum": {
            "name": "LiveEventEncodingType",
            "values": [
              {
                "value": "None"
              },
              {
                "value": "Basic"
              }
            ],
            "modelAsString": false
          }
        },
        "presetName": {
          "type": "string",
          "description": "The encoding preset name."
        }
      },
      "description": "The Live Event encoding."
    },
    "CrossSiteAccessPolicies": {
      "properties": {
        "clientAccessPolicy": {
          "type": "string",
          "description": "The content of clientaccesspolicy.xml used by Silverlight."
        },
        "crossDomainPolicy": {
          "type": "string",
          "description": "The content of crossdomain.xml used by Silverlight."
        }
      },
      "description": "The client access policy."
    },
    "LiveEventProperties": {
      "properties": {
        "description": {
          "type": "string",
          "description": "The Live Event description."
        },
        "input": {
          "type": "object",
          "$ref": "#/definitions/LiveEventInput",
          "description": "The Live Event input."
        },
        "preview": {
          "type": "object",
          "$ref": "#/definitions/LiveEventPreview",
          "description": "The Live Event preview."
        },
        "encoding": {
          "type": "object",
          "$ref": "#/definitions/LiveEventEncoding",
          "description": "The Live Event encoding."
        },
        "provisioningState": {
          "readOnly": true,
          "type": "string",
          "description": "The provisioning state of the Live Event."
        },
        "resourceState": {
          "readOnly": true,
          "type": "string",
          "description": "The resource state of the Live Event.",
          "x-ms-enum": {
            "name": "LiveEventResourceState",
            "values": [
              {
                "value": "Stopped"
              },
              {
                "value": "Starting"
              },
              {
                "value": "Running"
              },
              {
                "value": "Stopping"
              },
              {
                "value": "Deleting"
              }
            ],
            "modelAsString": false
          }
        },
        "crossSiteAccessPolicies": {
          "type": "object",
          "$ref": "#/definitions/CrossSiteAccessPolicies",
          "description": "The Live Event access policies."
        },
        "vanityUrl": {
          "type": "boolean",
          "description": "The Live Event vanity URL flag."
        },
        "removeOutputsOnStop": {
          "type": "boolean",
          "description": "The flag indicates if remove LiveOutputs on service stop or reset."
        },
        "streamOptions": {
          "type": "array",
          "items": {
            "type": "string",
            "x-ms-enum": {
              "name": "StreamOptionsFlag",
              "values": [
                {
                  "value": "Default"
                },
                {
                  "value": "LowLatency"
                }
              ],
              "modelAsString": false
            }
          },
          "description": "The stream options."
        },
        "created": {
          "readOnly": true,
          "format": "date-time",
          "type": "string",
          "description": "The exact time the Live Event was created."
        },
        "lastModified": {
          "readOnly": true,
          "format": "date-time",
          "type": "string",
          "description": "The exact time the Live Event was last modified."
        }
      },
      "description": "The Live Event properties."
    },
    "LiveEvent": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/LiveEventProperties",
          "description": "The Live Event properties."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/StreamingTrackedResource"
        }
      ],
      "description": "The Live Event."
    },
    "LiveEventListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LiveEvent"
          },
          "description": "The result of the List Live Event operation."
        },
        "@odata.count": {
          "type": "integer",
          "format": "int32",
          "description": "The number of result."
        },
        "@odata.nextLink": {
          "type": "string",
          "description": "Th link to the next set of results. Not empty if value contains incomplete list of Live Outputs."
        }
      }
    },
    "StreamingODataError": {
      "properties": {
        "code": {
          "type": "string",
          "description": "A language-independent error name."
        },
        "message": {
          "type": "string",
          "description": "The error message."
        },
        "target": {
          "type": "string",
          "description": "The target of the error (for example, the name of the property in error)."
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StreamingODataError"
          },
          "description": "The error details."
        }
      },
      "description": "The OData error."
    },
    "StreamingApiError": {
      "properties": {
        "error": {
          "$ref": "#/definitions/StreamingODataError"
        }
      },
      "description": "The API error."
    }
  },
  "parameters": {
    "SubscriptionIdParameter": {
      "name": "subscriptionId",
      "description": "The unique identifier for a Microsoft Azure subscription.",
      "in": "path",
      "required": true,
      "type": "string"
    },
    "ApiVersionParameter": {
      "name": "api-version",
      "description": "The Version of the API to be used with the client request.",
      "in": "query",
      "required": true,
      "type": "string"
    },
    "ResourceGroupNameParameter": {
      "name": "resourceGroupName",
      "description": "The name of the resource group within the Azure subscription.",
      "in": "path",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "MediaServicesAccountNameParameter": {
      "name": "mediaServicesAccountName",
      "description": "The name of the Media Service.",
      "in": "path",
      "required": true,
      "type": "string",
      "pattern": "^[a-z0-9]{3,24}$",
      "minLength": 3,
      "maxLength": 24,
      "x-ms-parameter-location": "method"
    },
    "LiveEventNameParameter": {
      "name": "liveEventName",
      "description": "The name of the Live Event.",
      "in": "path",
      "required": true,
      "type": "string",
      "pattern": "^[a-z0-9]{3,24}$",
      "minLength": 3,
      "maxLength": 24,
      "x-ms-parameter-location": "method"
    },
    "LiveOutputNameParameter": {
      "name": "liveOutputName",
      "description": "The name of the Live Output.",
      "in": "path",
      "required": true,
      "type": "string",
      "pattern": "^[a-z0-9]{3,24}$",
      "minLength": 3,
      "maxLength": 24,
      "x-ms-parameter-location": "method"
    }
  }
}