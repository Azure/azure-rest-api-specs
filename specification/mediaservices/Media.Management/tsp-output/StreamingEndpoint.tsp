import "@azure-tools/typespec-azure-core";
import "@azure-tools/typespec-azure-resource-manager";
import "@typespec/rest";
import "./models.tsp";
import "./MediaServicesAccount.tsp";

using TypeSpec.Rest;
using Azure.ResourceManager;
using Azure.ResourceManager.Foundations;
using TypeSpec.Http;

namespace Azure.ResourceManager.Media;
@doc("The streaming endpoint.")
@parentResource(MediaServicesAccount)
model StreamingEndpoint is TrackedResource<StreamingEndpointProperties> {
  @doc("The name of the streaming endpoint, maximum length is 24.")
  @maxLength(24)
  @minLength(1)
  @pattern("^[a-zA-Z0-9]+(-*[a-zA-Z0-9])*$")
  @path
  @key("streamingEndpointName")
  @segment("streamingEndpoints")
  name: string;

  ...Azure.ResourceManager.ResourceSku;
}

@armResourceOperations
interface StreamingEndpoints {
  @doc("Gets a streaming endpoint.")
  get is ArmResourceRead<StreamingEndpoint>;
  @doc("Creates a streaming endpoint.")
  create is ArmResourceCreateOrUpdateAsync<
    StreamingEndpoint,
    {
      ...BaseParameters<StreamingEndpoint>;

      @doc("The flag indicates if the resource should be automatically started on creation.")
      @query("autoStart")
      autoStart?: boolean;
    }
  >;
  @doc("Updates a existing streaming endpoint.")
  update is ArmResourcePatchAsync<
    StreamingEndpoint,
    StreamingEndpointProperties
  >;
  @doc("Deletes a streaming endpoint.")
  delete is ArmResourceDeleteAsync<StreamingEndpoint>;
  @doc("Lists the streaming endpoints in the account.")
  list is ArmResourceListByParent<StreamingEndpoint>;
  @doc("Starts an existing streaming endpoint.")
  start is ArmResourceActionAsync<StreamingEndpoint, {}, {}>;
  @doc("Stops an existing streaming endpoint.")
  stop is ArmResourceActionAsync<StreamingEndpoint, {}, {}>;
  @doc("Scales an existing streaming endpoint.")
  scale is ArmResourceActionAsync<
    StreamingEndpoint,
    StreamingEntityScaleUnit,
    {}
  >;
  @summary("List StreamingEndpoint skus")
  @doc("List streaming endpoint supported skus.")
  @route("/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Media/mediaservices/{accountName}/streamingEndpoints/{streamingEndpointName}/skus")
  @get
  Skus is Azure.Core.Foundations.Operation<
    {
      @doc("The unique identifier for a Microsoft Azure subscription.")
      @path
      subscriptionId: string;

      @doc("The name of the resource group within the Azure subscription.")
      @path
      resourceGroupName: string;

      @doc("The Media Services account name.")
      @path
      accountName: string;

      @doc("The name of the streaming endpoint, maximum length is 24.")
      @maxLength(24)
      @minLength(1)
      @pattern("^[a-zA-Z0-9]+(-*[a-zA-Z0-9])*$")
      @path
      streamingEndpointName: string;
    },
    StreamingEndpointSkuInfoListResult
  >;
}
