import "@azure-tools/typespec-azure-core";
import "@azure-tools/typespec-azure-resource-manager";
import "@typespec/rest";
import "./models.tsp";
import "./MediaServicesAccount.tsp";

using TypeSpec.Rest;
using Azure.ResourceManager;
using Azure.ResourceManager.Foundations;
using TypeSpec.Http;

namespace Azure.ResourceManager.Media;
@doc("An Asset.")
@parentResource(MediaServicesAccount)
model MediaAsset is ProxyResource<AssetProperties> {
  @doc("The Asset name.")
  @path
  @key("assetName")
  @segment("assets")
  name: string;
}

@armResourceOperations
interface MediaAssets {
  @doc("Get the details of an Asset in the Media Services account")
  get is ArmResourceRead<MediaAsset>;
  @doc("Creates or updates an Asset in the Media Services account")
  createOrUpdate is ArmResourceCreateOrReplaceSync<MediaAsset>;
  @doc("Updates an existing Asset in the Media Services account")
  update is ArmResourcePatchSync<MediaAsset, AssetProperties>;
  @doc("Deletes an Asset in the Media Services account")
  delete is ArmResourceDeleteSync<MediaAsset>;
  @doc("List Assets in the Media Services account with optional filtering and ordering")
  list is ArmResourceListByParent<
    MediaAsset,
    {
      ...BaseParameters<MediaAsset>;

      @doc("Restricts the set of items returned.")
      @query("$filter")
      $filter?: string;

      @doc("Specifies a non-negative integer n that limits the number of items returned from a collection. The service returns the number of available items up to but not greater than the specified value n.")
      @query("$top")
      $top?: int32;

      @doc("Specifies the key by which the result collection should be ordered.")
      @query("$orderby")
      $orderby?: string;
    }
  >;
  @doc("Lists storage container URLs with shared access signatures (SAS) for uploading and downloading Asset content. The signatures are derived from the storage account keys.")
  listContainerSas is ArmResourceActionSync<
    MediaAsset,
    ListContainerSasInput,
    AssetContainerSas
  >;
  @doc("Gets the Asset storage encryption keys used to decrypt content created by version 2 of the Media Services API")
  getEncryptionKey is ArmResourceActionSync<
    MediaAsset,
    {},
    StorageEncryptedAssetDecryptionData
  >;
  @doc("Lists Streaming Locators which are associated with this asset.")
  listStreamingLocators is ArmResourceActionSync<
    MediaAsset,
    {},
    ListStreamingLocatorsResponse
  >;
}
