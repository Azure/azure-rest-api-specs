{
  "swagger": "2.0",
  "info": {
    "title": "K8 Connect RP",
    "version": "2019-11-01-preview",
    "description": "Azure Connected Cluster Resource Provider API for adopting any Kubernetes Cluster"
  },
  "schemes": [
    "https"
  ],
  "host": "management.azure.com",
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Azure Active Directory OAuth2 Flow.",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "paths": {
    "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Kubernetes/connectedClusters/{clusterName}": {
      "put": {
        "summary": "Registers a new K8s cluster.",
        "operationId": "ConnectedCluster_Create",
        "description": "API to register a new K8s cluster and thereby create a tracked resource in ARM",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "CreateClusterExample": {
            "$ref": "./examples/CreateClusterExample.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdPathParam"
          },
          {
            "$ref": "#/parameters/ResourceGroupNamePathParam"
          },
          {
            "$ref": "#/parameters/ClusterNamePathParam"
          },
          {
            "$ref": "#/parameters/Api-VersionQueryParam"
          },
          {
            "$ref": "#/parameters/ConnectedClusterBodyParam"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource Updation Successful",
            "schema": {
              "$ref": "#/definitions/ConnectedCluster"
            }
          },
          "201": {
            "description": "Resource Creation Successful",
            "schema": {
              "$ref": "#/definitions/ConnectedCluster"
            }
          },
          "default": {
            "description": "Resource Provider error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "patch": {
        "summary": "Updates a connected cluster.",
        "operationId": "ConnectedCluster_Update",
        "description": "API to update certain properties of the connected cluster resource",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "UpdateClusterExample": {
            "$ref": "./examples/UpdateClusterExample.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdPathParam"
          },
          {
            "$ref": "#/parameters/ResourceGroupNamePathParam"
          },
          {
            "$ref": "#/parameters/ClusterNamePathParam"
          },
          {
            "$ref": "#/parameters/Api-VersionQueryParam"
          },
          {
            "$ref": "#/parameters/ConnectedClusterPatchBodyParam"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource Update Successful",
            "schema": {
              "$ref": "#/definitions/ConnectedCluster"
            }
          },
          "default": {
            "description": "Resource Provider error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "get": {
        "summary": "Gets data of the specified cluster",
        "operationId": "ConnectedCluster_Get",
        "description": "API to get the properties of a specific registered K8s cluster.",
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "GetClusterExample": {
            "$ref": "./examples/GetClusterExample.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdPathParam"
          },
          {
            "$ref": "#/parameters/ResourceGroupNamePathParam"
          },
          {
            "$ref": "#/parameters/ClusterNamePathParam"
          },
          {
            "$ref": "#/parameters/Api-VersionQueryParam"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource Object retrieved successfully",
            "schema": {
              "$ref": "#/definitions/ConnectedCluster"
            }
          },
          "default": {
            "description": "Resource Provider error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "summary": "Deletes a specified cluster",
        "operationId": "ConnectedCluster_Delete",
        "description": "API to delete an existing K8s cluster being tracked.",
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "DeleteClusterExample": {
            "$ref": "./examples/DeleteClusterExample.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdPathParam"
          },
          {
            "$ref": "#/parameters/ResourceGroupNamePathParam"
          },
          {
            "$ref": "#/parameters/ClusterNamePathParam"
          },
          {
            "$ref": "#/parameters/Api-VersionQueryParam"
          }
        ],
        "responses": {
          "200": {
            "description": "The resource was deleted successfully"
          },
          "204": {
            "description": "The resource was not found but the request is well formed"
          },
          "default": {
            "description": "Resource Provider error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Kubernetes/connectedClusters/{clusterName}/listCredentials": {
      "post": {
        "summary": "Lists the endpoint and credentials details to connect to the K8s cluster's API server",
        "operationId": "ConnectedCluster_ListCredentials",
        "description": "API to fetch endpoint and credential details to connect to the K8s clusterâ€™s API server via Azure",
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "ListCredentialsExample": {
            "$ref": "./examples/ListCredentialsExample.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdPathParam"
          },
          {
            "$ref": "#/parameters/ResourceGroupNamePathParam"
          },
          {
            "$ref": "#/parameters/ClusterNamePathParam"
          },
          {
            "$ref": "#/parameters/Api-VersionQueryParam"
          }
        ],
        "responses": {
          "200": {
            "description": "Action performed successfully",
            "schema": {
              "$ref": "#/definitions/ConnectedClusterAccessProfile"
            }
          },
          "default": {
            "description": "Resource Provider error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Kubernetes/connectedClusters": {
      "get": {
        "summary": "Lists all connected clusters",
        "operationId": "ConnectedCluster_ListByResourceGroup",
        "description": "API to enumerate registered connected K8s clusters under a Resource Group",
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "GetClustersExample": {
            "$ref": "./examples/GetClustersByResourceGroupExample.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdPathParam"
          },
          {
            "$ref": "#/parameters/ResourceGroupNamePathParam"
          },
          {
            "$ref": "#/parameters/Api-VersionQueryParam"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource Object retrieved successfully",
            "schema": {
              "$ref": "#/definitions/ConnectedClusterList"
            }
          },
          "default": {
            "description": "Resource Provider error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Kubernetes/connectedClusters": {
      "get": {
        "summary": "Lists all connected clusters",
        "operationId": "ConnectedCluster_ListBySubscription",
        "description": "API to enumerate registered connected K8s clusters under a Subscription",
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "GetClustersExample": {
            "$ref": "./examples/GetClustersBySubscriptionExample.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdPathParam"
          },
          {
            "$ref": "#/parameters/Api-VersionQueryParam"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource Object retrieved successfully",
            "schema": {
              "$ref": "#/definitions/ConnectedClusterList"
            }
          },
          "default": {
            "description": "Resource Provider error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/providers/Microsoft.Kubernetes/operations": {
      "get": {
        "description": "Lists all of the available API operations for Connected Cluster resource.",
        "operationId": "Operations_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/Api-VersionQueryParam"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/OperationList"
            }
          },
          "default": {
            "description": "Resource Provider error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ListConnectedClusterOperationsExample": {
            "$ref": "./examples/ListConnectedClusterOperationsExample.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    }
  },
  "definitions": {
    "ConnectedClusterAccessProfile": {
      "type": "object",
      "required": [
        "location",
        "type",
        "properties"
      ],
      "properties": {
        "type": {
          "type": "string",
          "enum": ["Microsoft.Kubernetes/connectedClusters"],
          "description": "Type of the resource on which the credentials are requested"
        },
        "location": {
          "type": "string",
          "description": "Location of the cluster"
        },
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/AccessProfile"
        }
      }
    },
    "AccessProfile": {
      "type": "object",
      "required": [
        "kubeConfig",
        "aadAccessProfile"
      ],
      "properties": {
        "kubeConfig": {
          "type": "string",
          "description": "Base64 Encoded kubeconfig for accessing target cluster"
        },
        "aadAccessProfile": {
          "$ref": "#/definitions/ConnectedClusterAADAccessProfile"
        }
      }
    },
    "ConnectedClusterAADAccessProfile": {
      "type": "object",
      "properties": {
        "endPoint": {
          "type": "string",
          "description": "The endpoint to connect to the cluster"
        },
        "endpointAuthorityData": {
          "type": "string",
          "description": "The end point authority data to connect to the cluster"
        },
        "apiServerId": {
          "type": "string",
          "description": "AAD API Server Id"
        },
        "clientId": {
          "type": "string",
          "description": "Id of the client"
        },
        "environment": {
          "type": "string",
          "enum": ["AzurePublicCloud", "AzureUSGovernmentCloud", "AzureChinaCloud", "AzureGermanCloud"],
          "x-ms-enum": {
            "name": "AzureEnvironment",
            "modelAsString": false
          },
          "description": "The azure environment"
        },
        "tenantId": {
          "type": "string",
          "description": "AAD Tenent Id"
        }
      }
    },
    "OperationList": {
      "description": "The paginated list of connected cluster API operations.",
      "properties": {
        "value": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/Operation"
          },
          "description": "The list of connected cluster API operations."
        },
        "nextLink": {
          "type": "string",
          "description": "The link to fetch the next page of connected cluster API operations."
        }
      }
    },
    "Operation": {
      "type": "object",
      "description": "The Connected cluster API operation",
      "properties": {
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Operation name: {Microsoft.Kubernetes}/{resource}/{operation}"
        },
        "display": {
          "readOnly": true,
          "description": "The object that represents the operation.",
          "properties": {
            "provider": {
              "type": "string",
              "description": "Service provider: Microsoft.connectedClusters"
            },
            "resource": {
              "type": "string",
              "description": "Connected Cluster Resource on which the operation is performed"
            },
            "operation": {
              "type": "string",
              "description": "Operation type: Read, write, delete, etc."
            },
            "description": {
              "type": "string",
              "description": "Description of the operation."
            }
          }
        }
      }
    },
    "ConnectedClusterList": {
      "description": "The paginated list of connected Clusters",
      "type": "object",
      "properties": {
        "value": {
          "description": "The list of connected clusters",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ConnectedCluster"
          }
        },
        "nextLink": {
          "description": "The link to fetch the next page of connected cluster",
          "type": "string"
        }
      }
    },
    "ConnectedCluster": {
      "x-ms-azure-resource": true,
      "type": "object",
      "required": [
        "location",
        "tags",
        "properties"
      ],
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Resource Id"
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Resource name"
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "enum": ["Microsoft.Kubernetes/connectedClusters"],
          "description": "Type of the resource requested"
        },
        "location": {
          "type": "string",
          "description": "Location of the cluster"
        },
        "tags": {
          "description": "Connected Cluster Resource Tags.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "identity": {
          "$ref": "#/definitions/ConnectedClusterIdentity",
          "description": "The identity of the connected cluster, if configured."
        },
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ConnectedClusterProperties"
        }
      }
    },
    "ConnectedClusterIdentity": {
      "properties": {
        "principalId": {
          "readOnly": true,
          "type": "string",
          "description": "The principal id of connected cluster identity. This property will only be provided for a system assigned identity."
        },
        "tenantId": {
          "readOnly": true,
          "type": "string",
          "description": "The tenant id associated with the connected cluster. This property will only be provided for a system assigned identity."
        },
        "type": {
          "type": "string",
          "description": "The type of identity used for the connected cluster. The type 'SystemAssigned includes a system created identity. The type 'None' will remove any identities from the virtual machine.",
          "enum": [
            "SystemAssigned",
            "None"
          ],
          "x-ms-enum": {
            "name": "ResourceIdentityType",
            "modelAsString": false
          }
        }
      },
      "description": "Identity for the virtual machine."
    },
    "ConnectedClusterProperties": {
      "type": "object",
      "required": [
        "agentPublicKeyCertificate",
        "aadProfile"
      ],
      "properties": {
        "agentPublicKeyCertificate": {
          "type": "string",
          "description": "Base64 encoded public certificate used by the agent to do the initial handshake to the backend services in Azure."
        },
        "aadProfile": {
          "$ref": "#/definitions/ConnectedClusterAADProfile"
        },
        "kubernetesVersion": {
          "type": "string",
          "description": "The Kubernetes version of the connected cluster resource"
        },
        "totalNodeCount": {
          "type": "integer",
          "description": "Number of nodes present in the connected cluster resource"
        },
        "agentVersion": {
          "type": "string",
          "description": "Version of the agent running on the connected cluster resource"
        }
      }
    },
    "ConnectedClusterAADProfile": {
      "type": "object",
      "required": [
        "tenantId",
        "clientAppId",
        "serverAppId"
      ],
      "properties": {
        "tenantId": {
          "type": "string",
          "description": "The aad tenant id which is configured on target K8s cluster"
        },
        "clientAppId": {
          "type": "string",
          "description": "The client app id configured on target K8 cluster "
        },
        "serverAppId": {
          "type": "string",
          "description": "The server app id to access AD server"
        }
      }
    },
    "ConnectedClusterPatch": {
      "type": "object",
      "properties": {
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Resource tags."
        }
      },
      "description": "Object containing updates for patch operations."
    },
    "ErrorResponse": {
      "description": "The error response that indicates why an operation has failed.",
      "type": "object",
      "properties": {
        "error": {
          "$ref": "#/definitions/ErrorDetails"
        }
      }
    },
    "ErrorDetails": {
      "description": "The error response details containing error code and error message",
      "type": "object",
      "properties": {
        "code": {
          "description": "The error code.",
          "type": "string",
          "readOnly": true
        },
        "message": {
          "description": "The error message.",
          "type": "string",
          "readOnly": true
        }
      }
    }
  },
  "parameters": {
    "ClusterNamePathParam": {
      "name": "clusterName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the Kubernetes cluster on which get is called.",
      "x-ms-parameter-location": "method"
    },
    "ConnectedClusterBodyParam": {
      "in": "body",
      "name": "ConnectedCluster",
      "required": true,
      "schema": {
        "$ref": "#/definitions/ConnectedCluster"
      },
      "x-ms-parameter-location": "method"
    },
    "ConnectedClusterPatchBodyParam": {
      "in": "body",
      "name": "ConnectedClusterPatch",
      "required": true,
      "schema": {
        "$ref": "#/definitions/ConnectedClusterPatch"
      },
      "x-ms-parameter-location": "method"
    },
    "ResourceGroupNamePathParam": {
      "name": "resourceGroupName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the resource group to which the kubernetes cluster is registered.",
      "x-ms-parameter-location": "method"
    },
    "SubscriptionIdPathParam": {
      "name": "subscriptionId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The ID of the subscription to which the kubernetes cluster is registered."
    },
    "Api-VersionQueryParam": {
      "name": "api-version",
      "in": "query",
      "required": true,
      "type": "string",
      "description": "Version of the API called."
    }
  }
}