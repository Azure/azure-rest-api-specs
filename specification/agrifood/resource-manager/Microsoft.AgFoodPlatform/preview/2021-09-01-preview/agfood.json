{
  "swagger": "2.0",
  "info": {
    "title": "Azure AgFoodPlatform RP Service",
    "description": "APIs documentation for Microsoft Azure Data Manager for Agriculture Service.",
    "version": "2021-09-01-preview"
  },
  "paths": {
    "/subscriptions/{subscriptionId}/providers/Microsoft.AgFoodPlatform/checkNameAvailability": {
      "post": {
        "tags": [
          "CheckNameAvailability"
        ],
        "description": "Checks the name availability of the resource with requested resource name.",
        "operationId": "CheckNameAvailability_CheckNameAvailability",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "in": "body",
            "name": "nameAvailabilityRequest",
            "description": "NameAvailabilityRequest object.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CheckNameAvailabilityRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CheckNameAvailabilityResponse"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CheckNameAvailability_CheckNameAvailability": {
            "$ref": "./examples/CheckNameAvailability_CheckNameAvailability.json"
          }
        }
      }
    },
    "/providers/Microsoft.AgFoodPlatform/farmBeatsExtensionDefinitions": {
      "get": {
        "tags": [
          "DataManagerForAgricultureExtensions"
        ],
        "description": "Get list of Data Manager For Agriculture extension.",
        "operationId": "DataManagerForAgricultureExtensions_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "farmBeatsExtensionIds",
            "description": "DataManagerForAgricultureExtension ids.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "farmBeatsExtensionNames",
            "description": "DataManagerForAgriculture extension names.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "extensionCategories",
            "description": "Extension categories.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "publisherIds",
            "description": "Publisher ids.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "$maxPageSize",
            "description": "Maximum number of items needed (inclusive).\r\nMinimum = 10, Maximum = 1000, Default value = 50.",
            "type": "integer",
            "format": "int32",
            "default": 50,
            "maximum": 1000,
            "minimum": 10
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DataManagerForAgricultureExtensionListResponse"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "DataManagerForAgricultureExtensions_List": {
            "$ref": "./examples/DataManagerForAgricultureExtensions_List.json"
          }
        }
      }
    },
    "/providers/Microsoft.AgFoodPlatform/farmBeatsExtensionDefinitions/{dataManagerForAgricultureExtensionId}": {
      "get": {
        "tags": [
          "DataManagerForAgricultureExtensions"
        ],
        "description": "Get Data Manager For Agriculture extension.",
        "operationId": "DataManagerForAgricultureExtensions_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "dataManagerForAgricultureExtensionId",
            "description": "dataManagerForAgricultureExtensionId to be queried.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z]{3,50}[.][a-zA-Z]{3,100}$"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DataManagerForAgricultureExtension"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "DataManagerForAgricultureExtensions_Get": {
            "$ref": "./examples/DataManagerForAgricultureExtensions_Get.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AgFoodPlatform/farmBeats/{dataManagerForAgricultureResourceName}": {
      "get": {
        "tags": [
          "DataManagerForAgricultureResources"
        ],
        "description": "Get DataManagerForAgriculture resource.",
        "operationId": "DataManagerForAgricultureResources_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/DataManagerForAgricultureResourceNameParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DataManagerForAgriculture"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "DataManagerForAgricultureResources_Get": {
            "$ref": "./examples/DataManagerForAgricultureResources_Get.json"
          }
        }
      },
      "put": {
        "tags": [
          "DataManagerForAgricultureResources"
        ],
        "description": "Create or update Data Manager For Agriculture resource.",
        "operationId": "DataManagerForAgricultureResources_CreateOrUpdate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/DataManagerForAgricultureResourceNameParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "in": "body",
            "name": "request",
            "description": "Data Manager For Agriculture resource create or update request object.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DataManagerForAgriculture"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DataManagerForAgriculture"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/DataManagerForAgriculture"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "DataManagerForAgricultureResources_CreateOrUpdate": {
            "$ref": "./examples/DataManagerForAgricultureResources_CreateOrUpdate.json"
          }
        }
      },
      "patch": {
        "tags": [
          "DataManagerForAgricultureResources"
        ],
        "description": "Update a Data Manager For Agriculture resource.",
        "operationId": "DataManagerForAgricultureResources_Update",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/DataManagerForAgricultureResourceNameParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "in": "body",
            "name": "request",
            "description": "Request object.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DataManagerForAgricultureUpdateRequestModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DataManagerForAgriculture"
            }
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/DataManagerForAgriculture"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-examples": {
          "DataManagerForAgricultureResources_Update": {
            "$ref": "./examples/DataManagerForAgricultureResources_Update.json"
          }
        }
      },
      "delete": {
        "tags": [
          "DataManagerForAgricultureResources"
        ],
        "description": "Delete a Data Manager For Agriculture resource.",
        "operationId": "DataManagerForAgricultureResources_Delete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/DataManagerForAgricultureResourceNameParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "DataManagerForAgricultureResources_Delete": {
            "$ref": "./examples/DataManagerForAgricultureResources_Delete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.AgFoodPlatform/farmBeats": {
      "get": {
        "tags": [
          "DataManagerForAgricultureResources"
        ],
        "description": "Lists the DataManagerForAgriculture instances for a subscription.",
        "operationId": "DataManagerForAgricultureResources_ListBySubscription",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "$maxPageSize",
            "description": "Maximum number of items needed (inclusive).\r\nMinimum = 10, Maximum = 1000, Default value = 50.",
            "type": "integer",
            "format": "int32",
            "default": 50,
            "maximum": 1000,
            "minimum": 10
          },
          {
            "in": "query",
            "name": "$skipToken",
            "description": "Skip token for getting next set of results.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DataManagerForAgricultureListResponse"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "DataManagerForAgricultureResources_ListBySubscription": {
            "$ref": "./examples/DataManagerForAgricultureResources_ListBySubscription.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AgFoodPlatform/farmBeats": {
      "get": {
        "tags": [
          "DataManagerForAgricultureResources"
        ],
        "description": "Lists the DataManagerForAgriculture instances for a resource group.",
        "operationId": "DataManagerForAgricultureResources_ListByResourceGroup",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "$maxPageSize",
            "description": "Maximum number of items needed (inclusive).\r\nMinimum = 10, Maximum = 1000, Default value = 50.",
            "type": "integer",
            "format": "int32",
            "default": 50,
            "maximum": 1000,
            "minimum": 10
          },
          {
            "in": "query",
            "name": "$skipToken",
            "description": "Continuation token for getting next set of results.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DataManagerForAgricultureListResponse"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "DataManagerForAgricultureResources_ListByResourceGroup": {
            "$ref": "./examples/DataManagerForAgricultureResources_ListByResourceGroup.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AgFoodPlatform/farmBeats/{dataManagerForAgricultureResourceName}/extensions/{extensionId}": {
      "put": {
        "tags": [
          "Extensions"
        ],
        "description": "Install or Update extension. AdditionalApiProperties are merged patch and if the extension is updated to a new version then the obselete entries will be auto deleted from AdditionalApiProperties.",
        "operationId": "Extensions_CreateOrUpdate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ExtensionIdParameter"
          },
          {
            "$ref": "#/parameters/DataManagerForAgricultureResourceNameParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "in": "body",
            "name": "requestBody",
            "description": "Extension resource request body.",
            "schema": {
              "$ref": "#/definitions/ExtensionInstallationRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/Extension"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Extensions_CreateOrUpdate": {
            "$ref": "./examples/Extensions_CreateOrUpdate.json"
          }
        }
      },
      "get": {
        "tags": [
          "Extensions"
        ],
        "description": "Get installed extension details by extension id.",
        "operationId": "Extensions_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ExtensionIdParameter"
          },
          {
            "$ref": "#/parameters/DataManagerForAgricultureResourceNameParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Extension"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Extensions_Get": {
            "$ref": "./examples/Extensions_Get.json"
          }
        }
      },
      "delete": {
        "tags": [
          "Extensions"
        ],
        "description": "Uninstall extension.",
        "operationId": "Extensions_Delete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ExtensionIdParameter"
          },
          {
            "$ref": "#/parameters/DataManagerForAgricultureResourceNameParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Extensions_Delete": {
            "$ref": "./examples/Extensions_Delete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AgFoodPlatform/farmBeats/{dataManagerForAgricultureResourceName}/extensions": {
      "get": {
        "tags": [
          "Extensions"
        ],
        "description": "Get installed extensions details.",
        "operationId": "Extensions_ListByDataManagerForAgriculture",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/DataManagerForAgricultureResourceNameParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "in": "query",
            "name": "extensionIds",
            "description": "Installed extension ids.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "extensionCategories",
            "description": "Installed extension categories.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "$maxPageSize",
            "description": "Maximum number of items needed (inclusive).\r\nMinimum = 10, Maximum = 1000, Default value = 50.",
            "type": "integer",
            "format": "int32",
            "default": 50,
            "maximum": 1000,
            "minimum": 10
          },
          {
            "in": "query",
            "name": "$skipToken",
            "description": "Skip token for getting next set of results.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ExtensionListResponse"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "Extensions_ListByDataManagerForAgriculture": {
            "$ref": "./examples/Extensions_ListByDataManagerForAgriculture.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.AgFoodPlatform/locations/{locations}/operationResults/{operationResultsId}": {
      "get": {
        "tags": [
          "OperationResults"
        ],
        "description": "Get operationResults for a Data Manager For Agriculture resource.",
        "operationId": "OperationResults_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "in": "path",
            "name": "locations",
            "description": "Location.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "operationResultsId",
            "description": "operationResultsId.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ArmAsyncOperation"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "OperationResults_Get": {
            "$ref": "./examples/OperationResults_Get.json"
          }
        }
      }
    },
    "/providers/Microsoft.AgFoodPlatform/operations": {
      "get": {
        "tags": [
          "Operations"
        ],
        "description": "Lists the available operations of Microsoft.AgFoodPlatform resource provider.",
        "operationId": "Operations_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/OperationListResponse"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "Operations_List": {
            "$ref": "./examples/Operations_List.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AgFoodPlatform/farmBeats/{dataManagerForAgricultureResourceName}/privateEndpointConnections/{privateEndpointConnectionName}": {
      "put": {
        "tags": [
          "PrivateEndpointConnections"
        ],
        "description": "Approves or Rejects a Private endpoint connection request.",
        "operationId": "PrivateEndpointConnections_CreateOrUpdate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "privateEndpointConnectionName",
            "description": "Private endpoint connection name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/DataManagerForAgricultureResourceNameParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "in": "body",
            "name": "request",
            "description": "Request object.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnection"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnection"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "PrivateEndpointConnections_CreateOrUpdate": {
            "$ref": "./examples/PrivateEndpointConnections_CreateOrUpdate.json"
          }
        }
      },
      "get": {
        "tags": [
          "PrivateEndpointConnections"
        ],
        "description": "Get Private endpoint connection object.",
        "operationId": "PrivateEndpointConnections_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/DataManagerForAgricultureResourceNameParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "in": "path",
            "name": "privateEndpointConnectionName",
            "description": "Private endpoint connection name.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnection"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "PrivateEndpointConnections_Get": {
            "$ref": "./examples/PrivateEndpointConnections_Get.json"
          }
        }
      },
      "delete": {
        "tags": [
          "PrivateEndpointConnections"
        ],
        "description": "Delete Private endpoint connection request.",
        "operationId": "PrivateEndpointConnections_Delete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/DataManagerForAgricultureResourceNameParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "in": "path",
            "name": "privateEndpointConnectionName",
            "description": "Private endpoint connection name.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "202": {
            "description": "Accepted"
          },
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-examples": {
          "PrivateEndpointConnections_Delete": {
            "$ref": "./examples/PrivateEndpointConnections_Delete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AgFoodPlatform/farmBeats/{dataManagerForAgricultureResourceName}/privateEndpointConnections": {
      "get": {
        "tags": [
          "PrivateEndpointConnections"
        ],
        "description": "Get list of Private endpoint connections.",
        "operationId": "PrivateEndpointConnections_ListByResource",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/DataManagerForAgricultureResourceNameParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnectionListResponse"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "PrivateEndpointConnections_ListByResource": {
            "$ref": "./examples/PrivateEndpointConnections_ListByResource.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AgFoodPlatform/farmBeats/{dataManagerForAgricultureResourceName}/privateLinkResources": {
      "get": {
        "tags": [
          "PrivateLinkResources"
        ],
        "description": "Get list of Private link resources.",
        "operationId": "PrivateLinkResources_ListByResource",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/DataManagerForAgricultureResourceNameParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/PrivateLinkResourceListResponse"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "PrivateLinkResources_ListByResource": {
            "$ref": "./examples/PrivateLinkResources_ListByResource.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AgFoodPlatform/farmBeats/{dataManagerForAgricultureResourceName}/privateLinkResources/{subResourceName}": {
      "get": {
        "tags": [
          "PrivateLinkResources"
        ],
        "description": "Get Private link resource object.",
        "operationId": "PrivateLinkResources_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "subResourceName",
            "description": "Sub resource name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/DataManagerForAgricultureResourceNameParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/PrivateLinkResource"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "PrivateLinkResources_Get": {
            "$ref": "./examples/PrivateLinkResources_Get.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AgFoodPlatform/farmBeats/{dataManagerForAgricultureResourceName}/solutions/{solutionId}": {
      "put": {
        "tags": [
          "Solutions"
        ],
        "description": "Install Or Update Solution.",
        "operationId": "Solutions_CreateOrUpdate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "solutionId",
            "description": "SolutionId.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z]{3,50}[.][a-zA-Z]{3,100}$"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/DataManagerForAgricultureResourceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "in": "body",
            "name": "requestBody",
            "description": "Solution resource request body.",
            "schema": {
              "$ref": "#/definitions/SolutionInstallationRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Solution"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/Solution"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Solutions_CreateOrUpdate": {
            "$ref": "./examples/Solutions_CreateOrUpdate.json"
          }
        }
      },
      "get": {
        "tags": [
          "Solutions"
        ],
        "description": "Get installed Solution details by Solution id.",
        "operationId": "Solutions_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "solutionId",
            "description": "SolutionId.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z]{3,50}[.][a-zA-Z]{3,100}$"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/DataManagerForAgricultureResourceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Solution"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Solutions_Get": {
            "$ref": "./examples/Solutions_Get.json"
          }
        }
      },
      "delete": {
        "tags": [
          "Solutions"
        ],
        "description": "Uninstall Solution.",
        "operationId": "Solutions_Delete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "solutionId",
            "description": "SolutionId.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z]{3,50}[.][a-zA-Z]{3,100}$"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/DataManagerForAgricultureResourceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Solutions_Delete": {
            "$ref": "./examples/Solutions_Delete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AgFoodPlatform/farmBeats/{dataManagerForAgricultureResourceName}/solutions": {
      "get": {
        "tags": [
          "Solutions"
        ],
        "description": "Get installed Solutions details.",
        "operationId": "Solutions_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/DataManagerForAgricultureResourceNameParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "in": "query",
            "name": "solutionIds",
            "description": "Installed Solution ids.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "ids",
            "description": "Ids of the resource.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "names",
            "description": "Names of the resource.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "propertyFilters",
            "description": "Filters on key-value pairs within the Properties object.\r\neg. \"{testKey} eq {testValue}\".",
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "statuses",
            "description": "Statuses of the resource.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "minCreatedDateTime",
            "description": "Minimum creation date of resource (inclusive).",
            "type": "string",
            "format": "date-time"
          },
          {
            "in": "query",
            "name": "maxCreatedDateTime",
            "description": "Maximum creation date of resource (inclusive).",
            "type": "string",
            "format": "date-time"
          },
          {
            "in": "query",
            "name": "minLastModifiedDateTime",
            "description": "Minimum last modified date of resource (inclusive).",
            "type": "string",
            "format": "date-time"
          },
          {
            "in": "query",
            "name": "maxLastModifiedDateTime",
            "description": "Maximum last modified date of resource (inclusive).",
            "type": "string",
            "format": "date-time"
          },
          {
            "in": "query",
            "name": "$maxPageSize",
            "description": "Maximum number of items needed (inclusive).\r\nMinimum = 10, Maximum = 1000, Default value = 50.",
            "type": "integer",
            "format": "int32",
            "default": 50,
            "maximum": 1000,
            "minimum": 10
          },
          {
            "in": "query",
            "name": "$skipToken",
            "description": "Skip token for getting next set of results.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/SolutionListResponse"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "Solutions_List": {
            "$ref": "./examples/Solutions_List.json"
          }
        }
      }
    },
    "/providers/Microsoft.AgFoodPlatform/farmBeatsSolutionDefinitions": {
      "get": {
        "tags": [
          "SolutionsDiscoverability"
        ],
        "description": "Get list of Data Manager For Agriculture solutions.",
        "operationId": "SolutionsDiscoverability_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "farmBeatsSolutionIds",
            "description": "Ids of Data Manager For Agriculture Solutions which the customer requests to fetch.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "farmBeatsSolutionNames",
            "description": "Names of Data Manager For Agriculture Solutions which the customer requests to fetch.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "$maxPageSize",
            "description": "Maximum number of items needed (inclusive).\r\nMinimum = 10, Maximum = 1000, Default value = 50.",
            "type": "integer",
            "format": "int32",
            "default": 50,
            "maximum": 1000,
            "minimum": 10
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DataManagerForAgricultureSolutionListResponse"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "SolutionsDiscoverability_List": {
            "$ref": "./examples/SolutionsDiscoverability_List.json"
          }
        }
      }
    },
    "/providers/Microsoft.AgFoodPlatform/farmBeatsSolutionDefinitions/{dataManagerForAgricultureSolutionId}": {
      "get": {
        "tags": [
          "SolutionsDiscoverability"
        ],
        "description": "Get Data Manager For Agriculture solution by id.",
        "operationId": "SolutionsDiscoverability_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "dataManagerForAgricultureSolutionId",
            "description": "dataManagerForAgricultureSolutionId to be queried.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z]{3,50}[.][a-zA-Z]{3,100}$"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DataManagerForAgricultureSolution"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "SolutionsDiscoverability_Get": {
            "$ref": "./examples/SolutionsDiscoverability_Get.json"
          }
        }
      }
    }
  },
  "definitions": {
    "ApiProperties": {
      "description": "Api properties.",
      "type": "object",
      "properties": {
        "apiFreshnessTimeInMinutes": {
          "format": "int32",
          "description": "Iterval in minutes for which the weather data for the api needs to be refreshed.",
          "maximum": 10080,
          "minimum": 0,
          "type": "integer"
        }
      }
    },
    "ArmAsyncOperation": {
      "description": "Arm async operation class.\r\nRef: https://docs.microsoft.com/en-us/azure/azure-resource-manager/management/async-operations.",
      "type": "object",
      "properties": {
        "status": {
          "description": "Status of the async operation.",
          "type": "string"
        },
        "error": {
          "$ref": "#/definitions/ArmAsyncOperationError"
        }
      }
    },
    "ArmAsyncOperationError": {
      "description": "Arm async operation error class.\r\nRef: https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/async-api-reference.md#azure-asyncoperation-resource-format.",
      "type": "object",
      "properties": {
        "code": {
          "description": "Status of the async operation.",
          "type": "string"
        },
        "message": {
          "description": "Status of the async operation.",
          "type": "string"
        }
      }
    },
    "CheckNameAvailabilityRequest": {
      "description": "Parameters body to pass for name availability check.",
      "required": [
        "name",
        "type"
      ],
      "type": "object",
      "properties": {
        "name": {
          "description": "Resource name to check.",
          "minLength": 1,
          "type": "string"
        },
        "type": {
          "description": "Resource Type to check.",
          "minLength": 1,
          "type": "string"
        }
      }
    },
    "CheckNameAvailabilityResponse": {
      "description": "The CheckNameAvailability operation response.",
      "type": "object",
      "properties": {
        "nameAvailable": {
          "description": "Gets a boolean value that indicates whether the name is available for you to use.\r\nIf true, the name is available. If false, the name has already been taken or invalid and cannot be used.",
          "type": "boolean",
          "readOnly": true
        },
        "reason": {
          "description": "Gets the reason that a given resource name could not be used. The 'reason' element is returned only if 'nameAvailable' is false.",
          "enum": [
            "Invalid",
            "AlreadyExists"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "NameAvailabilityReason",
            "modelAsString": true
          }
        },
        "message": {
          "description": "Gets an error message explaining the 'reason' value in more detail.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "DataManagerForAgriculture": {
      "description": "Data Manager For Agriculture ARM Resource.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/TrackedResource"
        }
      ],
      "properties": {
        "sku": {
          "$ref": "#/definitions/Sku"
        },
        "systemData": {
          "$ref": "#/definitions/SystemData"
        },
        "identity": {
          "$ref": "#/definitions/ResourceIdentity"
        },
        "properties": {
          "$ref": "#/definitions/DataManagerForAgricultureProperties"
        }
      },
      "x-ms-azure-resource": true
    },
    "DataManagerForAgricultureExtension": {
      "description": "DataManagerForAgriculture extension resource.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProxyResource"
        }
      ],
      "properties": {
        "systemData": {
          "$ref": "#/definitions/SystemData"
        },
        "properties": {
          "$ref": "#/definitions/DataManagerForAgricultureExtensionProperties"
        }
      },
      "x-ms-azure-resource": true
    },
    "DataManagerForAgricultureExtensionListResponse": {
      "description": "Paged response contains list of requested objects and a URL link to get the next set of results.",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "List of requested objects.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DataManagerForAgricultureExtension"
          }
        },
        "$skipToken": {
          "description": "Token used in retrieving the next page. If null, there are no additional pages.",
          "type": "string"
        },
        "nextLink": {
          "description": "Continuation link (absolute URI) to the next page of results in the list.",
          "type": "string"
        }
      }
    },
    "DataManagerForAgricultureExtensionProperties": {
      "description": "DataManagerForAgricultureExtension properties.",
      "type": "object",
      "properties": {
        "targetResourceType": {
          "description": "Target ResourceType of the Data Manager For Agriculture Extension.",
          "type": "string",
          "readOnly": true
        },
        "farmBeatsExtensionId": {
          "description": "Data Manager For Agriculture Extension ID.",
          "maxLength": 100,
          "minLength": 2,
          "pattern": "^[a-zA-Z]{3,50}[.][a-zA-Z]{3,100}$",
          "type": "string",
          "readOnly": true
        },
        "farmBeatsExtensionName": {
          "description": "Data Manager For Agriculture Extension name.",
          "maxLength": 100,
          "minLength": 2,
          "type": "string",
          "readOnly": true
        },
        "farmBeatsExtensionVersion": {
          "description": "Data Manager For Agriculture Extension version.",
          "maxLength": 100,
          "minLength": 2,
          "pattern": "^([1-9]|10).\\d$",
          "type": "string",
          "readOnly": true
        },
        "publisherId": {
          "description": "Publisher ID.",
          "maxLength": 100,
          "minLength": 2,
          "type": "string",
          "readOnly": true
        },
        "description": {
          "description": "Textual description.",
          "maxLength": 500,
          "minLength": 2,
          "type": "string",
          "readOnly": true
        },
        "extensionCategory": {
          "description": "Category of the extension. e.g. weather/sensor/satellite.",
          "maxLength": 100,
          "minLength": 2,
          "type": "string",
          "readOnly": true
        },
        "extensionAuthLink": {
          "description": "Data Manager For Agriculture Extension auth link.",
          "type": "string",
          "readOnly": true
        },
        "extensionApiDocsLink": {
          "description": "Data Manager For Agriculture Extension api docs link.",
          "type": "string",
          "readOnly": true
        },
        "detailedInformation": {
          "description": "Detailed information which shows summary of requested data.\r\nUsed in descriptive get extension metadata call.\r\nInformation for weather category per api included are apisSupported,\r\ncustomParameters, PlatformParameters and Units supported.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DetailedInformation"
          },
          "readOnly": true
        }
      }
    },
    "DataManagerForAgricultureListResponse": {
      "description": "Paged response contains list of requested objects and a URL link to get the next set of results.",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "List of requested objects.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DataManagerForAgriculture"
          }
        },
        "$skipToken": {
          "description": "Token used in retrieving the next page. If null, there are no additional pages.",
          "type": "string"
        },
        "nextLink": {
          "description": "Continuation link (absolute URI) to the next page of results in the list.",
          "type": "string"
        }
      }
    },
    "DataManagerForAgricultureProperties": {
      "description": "Data Manager For Agriculture ARM Resource properties.",
      "type": "object",
      "properties": {
        "instanceUri": {
          "format": "uri",
          "description": "Uri of the Data Manager For Agriculture instance.",
          "type": "string",
          "readOnly": true
        },
        "provisioningState": {
          "description": "Data Manager For Agriculture instance provisioning state.",
          "enum": [
            "Creating",
            "Updating",
            "Deleting",
            "Succeeded",
            "Failed",
            "Running"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "ProvisioningState",
            "modelAsString": true
          }
        },
        "sensorIntegration": {
          "$ref": "#/definitions/SensorIntegration"
        },
        "publicNetworkAccess": {
          "$ref": "#/definitions/PublicNetworkAccess"
        },
        "privateEndpointConnections": {
          "description": "Private endpoints.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PrivateEndpointConnection"
          },
          "readOnly": true
        }
      }
    },
    "DataManagerForAgricultureSolution": {
      "description": "DataManagerForAgriculture solution resource.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProxyResource"
        }
      ],
      "properties": {
        "systemData": {
          "$ref": "#/definitions/SystemData"
        },
        "properties": {
          "$ref": "#/definitions/DataManagerForAgricultureSolutionProperties"
        }
      },
      "x-ms-azure-resource": true
    },
    "DataManagerForAgricultureSolutionListResponse": {
      "description": "Paged response contains list of requested objects and a URL link to get the next set of results.",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "List of requested objects.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DataManagerForAgricultureSolution"
          }
        },
        "$skipToken": {
          "description": "Token used in retrieving the next page. If null, there are no additional pages.",
          "type": "string"
        },
        "nextLink": {
          "description": "Continuation link (absolute URI) to the next page of results in the list.",
          "type": "string"
        }
      }
    },
    "DataManagerForAgricultureSolutionProperties": {
      "description": "DataManagerForAgricultureSolution properties.",
      "type": "object",
      "properties": {
        "partnerId": {
          "description": "Solution Partner Id.",
          "type": "string",
          "readOnly": true
        },
        "partnerTenantId": {
          "description": "Solution Partner Tenant Id.",
          "type": "string",
          "readOnly": true
        },
        "dataAccessScopes": {
          "description": "Gets scope of the Data manager For Agriculture data access that's required for processing solution request to partner.\r\nExample: For gdd they might need weatherScope and satelliteScope.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "marketplaceOfferDetails": {
          "$ref": "#/definitions/MarketplaceOfferDetails"
        },
        "inputParametersValidationScopes": {
          "description": "Gets or sets scope of the Data Manager For Agriculture related parameters that need to\r\nbe validated in solutionInference trigger request.\r\nExample. [{ \"resourceIdName\" :\"boundaryId\", \"resourceType\" :\r\n\"Boundary\" }].",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResourceParameter"
          },
          "readOnly": true
        },
        "openAPISpecsDictionary": {
          "description": "Gets apiVersion: Swagger Document Dictionary to capture all apiversions of swagger exposed by partner to Data Manager For Agriculture.",
          "type": "object",
          "additionalProperties": { },
          "readOnly": true
        },
        "evaluatedOutputsDictionary": {
          "description": "Gets example name: insight sample response Dictionary to capture all variations of computed results ingested by partner.",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/SolutionEvaluatedOutput"
          },
          "readOnly": true
        },
        "accessFBApplicationId": {
          "format": "uuid",
          "description": "Application id of the multi tenant application to be used by partner to access Data Manager For Agriculture data.",
          "type": "string",
          "readOnly": true
        },
        "roleId": {
          "description": "Role Id of the SaaS multi tenant application to access relevant fb data.",
          "type": "string",
          "readOnly": true
        },
        "roleName": {
          "description": "Role Name of the SaaS multi tenant application to access relevant fb data.",
          "type": "string",
          "readOnly": true
        },
        "accessFBApplicationName": {
          "description": "Application name of the multi tenant application to be used by partner to access Data Manager For Agriculture Data.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "DataManagerForAgricultureUpdateProperties": {
      "description": "Data Manager For Agriculture ARM Resource properties.",
      "type": "object",
      "properties": {
        "sensorIntegration": {
          "$ref": "#/definitions/SensorIntegration"
        },
        "publicNetworkAccess": {
          "$ref": "#/definitions/PublicNetworkAccess"
        }
      }
    },
    "DataManagerForAgricultureUpdateRequestModel": {
      "description": "DataManagerForAgriculture update request.",
      "type": "object",
      "properties": {
        "location": {
          "description": "Geo-location where the resource lives.",
          "type": "string"
        },
        "sku": {
          "$ref": "#/definitions/Sku"
        },
        "identity": {
          "$ref": "#/definitions/ResourceIdentity"
        },
        "properties": {
          "$ref": "#/definitions/DataManagerForAgricultureUpdateProperties"
        },
        "tags": {
          "description": "Resource tags.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "DetailedInformation": {
      "description": "Model to capture detailed information for Data Manager For AgricultureExtensions.",
      "type": "object",
      "properties": {
        "apiName": {
          "description": "ApiName available for the Data Manager For Agriculture Extension.",
          "type": "string",
          "example": "dailyforecast, dailyhistorical."
        },
        "apiDocsLink": {
          "description": "Extension provider's API documentation link.",
          "type": "string"
        },
        "apiType": {
          "description": "Type of Api in Extension.",
          "type": "string",
          "example": "passthrough,load."
        },
        "customParameters": {
          "description": "List of customParameters.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "platformParameters": {
          "description": "List of platformParameters.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "apiDefaultInputParameters": {
          "description": "List of defaultParameters.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "unitsSupported": {
          "$ref": "#/definitions/UnitSystemsInfo"
        },
        "apiInputParameters": {
          "description": "List of apiInputParameters.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ErrorAdditionalInfo": {
      "description": "The resource management error additional info.",
      "type": "object",
      "properties": {
        "type": {
          "description": "The additional info type.",
          "type": "string",
          "readOnly": true
        },
        "info": {
          "description": "The additional info.",
          "type": "object",
          "additionalProperties": { },
          "readOnly": true
        }
      }
    },
    "ErrorDetail": {
      "description": "The error detail.",
      "type": "object",
      "properties": {
        "code": {
          "description": "The error code.",
          "type": "string",
          "readOnly": true
        },
        "message": {
          "description": "The error message.",
          "type": "string",
          "readOnly": true
        },
        "target": {
          "description": "The error target.",
          "type": "string",
          "readOnly": true
        },
        "details": {
          "description": "The error details.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ErrorDetail"
          },
          "readOnly": true
        },
        "additionalInfo": {
          "description": "The error additional info.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ErrorAdditionalInfo"
          },
          "readOnly": true
        }
      }
    },
    "ErrorResponse": {
      "description": "Common error response for all Azure Resource Manager APIs to return error details for failed operations.\r\n(This also follows the OData error response format.).",
      "type": "object",
      "properties": {
        "error": {
          "$ref": "#/definitions/ErrorDetail"
        }
      }
    },
    "EventGridFilterNotification": {
      "description": "Event Grid filter notification.",
      "type": "object",
      "properties": {
        "id": {
          "description": "Fully qualified identifier of the resource.",
          "type": "string",
          "example": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AgFoodPlatform/farmBeats/{dataManagerForAgricultureResourceName}/eventGridFilters/{eventGridFilterName}."
        },
        "name": {
          "description": "Name of the resource.",
          "type": "string",
          "example": "{dataManagerForAgricultureResourceName}/{EventGridFilterName}."
        },
        "type": {
          "description": "Type of the resource.",
          "type": "string",
          "example": "Microsoft.AgFoodPlatform/farmBeats/eventGridFilters."
        },
        "properties": {
          "$ref": "#/definitions/EventGridFilterNotificationProperties"
        }
      }
    },
    "EventGridFilterNotificationListResponse": {
      "description": "Paged response contains list of requested objects and a URL link to get the next set of results.",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "List of requested objects.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/EventGridFilterNotification"
          }
        },
        "$skipToken": {
          "description": "Token used in retrieving the next page. If null, there are no additional pages.",
          "type": "string"
        },
        "nextLink": {
          "description": "Continuation link (absolute URI) to the next page of results in the list.",
          "type": "string"
        }
      }
    },
    "EventGridFilterNotificationProperties": {
      "description": "Event Grid filter notification properties.",
      "type": "object",
      "properties": {
        "filter": {
          "$ref": "#/definitions/EventGridFilterProperties"
        },
        "subscriberIdentityInfo": {
          "$ref": "#/definitions/EventGridFilterSubscriberIdentityInfo"
        },
        "provisioningState": {
          "$ref": "#/definitions/EventGridFilterNotificationProvisioningState"
        }
      }
    },
    "EventGridFilterNotificationProvisioningState": {
      "description": "Event Grid filter notification provisioning state.\r\nNote: Currently Event Grid does not support Async operations so these states are not relevant.\r\nOnce proxy resource type successfully created we need to set Succeeded state only.",
      "enum": [
        "Succeeded",
        "Canceled",
        "Failed",
        "Pending"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "EventGridFilterNotificationProvisioningState",
        "modelAsString": true
      }
    },
    "EventGridFilterProperties": {
      "description": "Event Grid filter properties.",
      "type": "object",
      "properties": {
        "subjectBeginsWith": {
          "description": "An optional string to filter events for an event subscription based on a resource path prefix.\r\nWild-card characters are not supported in this path.",
          "type": "string",
          "example": "/farmers/{farmerId}."
        },
        "subjectEndsWith": {
          "description": "An optional string to filter events for an event subscription based on a resource path suffix.\r\nWild-card characters are not supported in this path.",
          "type": "string",
          "example": "/boundary/{boundaryId}."
        },
        "includedEventTypes": {
          "description": "A list of applicable event types that need to be part of the event subscription.\r\nIf it is desired to subscribe to all event types, the string \"All\" needs to be specified as an element in this list.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "EventGridFilterSubscriberIdentityInfo": {
      "description": "Event Grid filter subscriber identity information.",
      "type": "object",
      "properties": {
        "clientPrincipalId": {
          "description": "Client principal id.",
          "type": "string"
        },
        "clientObjectId": {
          "description": "Client object id.",
          "type": "string"
        },
        "clientTenantId": {
          "description": "Client tenant id.",
          "type": "string"
        },
        "clientApplicationId": {
          "description": "Client application id.",
          "type": "string"
        },
        "clientAuthorizationSource": {
          "description": "Client authorization source.",
          "type": "string"
        }
      }
    },
    "Extension": {
      "description": "Extension resource.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProxyResource"
        }
      ],
      "properties": {
        "systemData": {
          "$ref": "#/definitions/SystemData"
        },
        "properties": {
          "$ref": "#/definitions/ExtensionProperties"
        },
        "eTag": {
          "description": "The ETag value to implement optimistic concurrency.",
          "type": "string",
          "readOnly": true
        }
      },
      "x-ms-azure-resource": true
    },
    "ExtensionInstallationRequest": {
      "description": "Extension Installation Request Body.",
      "type": "object",
      "properties": {
        "extensionVersion": {
          "description": "Extension Version.",
          "default": null,
          "maxLength": 10,
          "minLength": 3,
          "type": "string"
        },
        "additionalApiProperties": {
          "description": "Additional Api Properties.",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/ApiProperties"
          }
        }
      }
    },
    "ExtensionListResponse": {
      "description": "Paged response contains list of requested objects and a URL link to get the next set of results.",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "List of requested objects.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "$skipToken": {
          "description": "Token used in retrieving the next page. If null, there are no additional pages.",
          "type": "string"
        },
        "nextLink": {
          "description": "Continuation link (absolute URI) to the next page of results in the list.",
          "type": "string"
        }
      }
    },
    "ExtensionProperties": {
      "description": "Extension resource properties.",
      "type": "object",
      "properties": {
        "extensionId": {
          "description": "Extension Id.",
          "pattern": "^[a-zA-Z]{3,50}[.][a-zA-Z]{3,100}$",
          "type": "string",
          "readOnly": true
        },
        "extensionCategory": {
          "description": "Extension category. e.g. weather/sensor/satellite.",
          "type": "string",
          "readOnly": true
        },
        "installedExtensionVersion": {
          "description": "Installed extension version.",
          "pattern": "^([1-9]|10).\\d$",
          "type": "string",
          "readOnly": true
        },
        "extensionAuthLink": {
          "description": "Extension auth link.",
          "type": "string",
          "readOnly": true
        },
        "extensionApiDocsLink": {
          "description": "Extension api docs link.",
          "type": "string",
          "readOnly": true
        },
        "additionalApiProperties": {
          "description": "Additional api properties.",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/ApiProperties"
          },
          "readOnly": true
        }
      }
    },
    "Insight": {
      "type": "object",
      "properties": {
        "farmerId": {
          "type": "string"
        },
        "modelId": {
          "type": "string"
        },
        "resourceType": {
          "type": "string"
        },
        "resourceId": {
          "type": "string"
        },
        "modelVersion": {
          "type": "string"
        },
        "insightStartDateTime": {
          "format": "date-time",
          "type": "string"
        },
        "insightEndDateTime": {
          "format": "date-time",
          "type": "string"
        },
        "measures": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/Measure"
          }
        },
        "id": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "createdDateTime": {
          "format": "date-time",
          "type": "string"
        },
        "modifiedDateTime": {
          "format": "date-time",
          "type": "string"
        },
        "eTag": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "createdBy": {
          "type": "string"
        },
        "modifiedBy": {
          "type": "string"
        },
        "properties": {
          "type": "object",
          "additionalProperties": { }
        }
      }
    },
    "InsightAttachment": {
      "type": "object",
      "properties": {
        "insightId": {
          "type": "string"
        },
        "modelId": {
          "type": "string"
        },
        "resourceType": {
          "type": "string"
        },
        "resourceId": {
          "type": "string"
        },
        "fileLink": {
          "type": "string"
        },
        "originalFileName": {
          "type": "string"
        },
        "farmerId": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "createdDateTime": {
          "format": "date-time",
          "type": "string"
        },
        "modifiedDateTime": {
          "format": "date-time",
          "type": "string"
        },
        "source": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "createdBy": {
          "type": "string"
        },
        "modifiedBy": {
          "type": "string"
        },
        "eTag": {
          "type": "string"
        }
      }
    },
    "MarketplaceOfferDetails": {
      "type": "object",
      "properties": {
        "saasOfferId": {
          "type": "string"
        },
        "publisherId": {
          "type": "string"
        }
      }
    },
    "Measure": {
      "type": "object",
      "properties": {
        "unit": {
          "type": "string"
        },
        "value": {
          "format": "double",
          "type": "number"
        }
      }
    },
    "Operation": {
      "description": "Resources and supported operations on them.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Operation name: {provider}/{resource}/{read | write | action | delete}.",
          "type": "string",
          "readOnly": true,
          "example": "Microsoft.AgFoodPlatform/farmers/write."
        },
        "isDataAction": {
          "description": "A flag indicating whether the action is a DataAction or not.",
          "type": "boolean",
          "readOnly": true
        },
        "display": {
          "$ref": "#/definitions/OperationDisplay"
        },
        "origin": {
          "description": "The intended executor of the operation.\r\nPossible values include: User|System|User,System.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "OperationDisplay": {
      "description": "ARM Resource Operation Display payload which exposed as the Resource Provider response.",
      "type": "object",
      "properties": {
        "provider": {
          "description": "Service provider.",
          "type": "string",
          "readOnly": true,
          "example": "Microsoft AgFoodPlatform."
        },
        "resource": {
          "description": "Resource type.",
          "type": "string",
          "readOnly": true,
          "example": "AgFoodPlatform farmers."
        },
        "operation": {
          "description": "Name of the operation.",
          "type": "string",
          "readOnly": true,
          "example": "Get or List AgFoodPlatform fields resource(s)."
        },
        "description": {
          "description": "Description of the operation.",
          "type": "string",
          "readOnly": true,
          "example": "Gets or Lists existing AgFoodPlatform farmers resource(s)."
        }
      }
    },
    "OperationListResponse": {
      "description": "Paged response contains list of requested objects and a URL link to get the next set of results.",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "List of requested objects.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Operation"
          }
        },
        "$skipToken": {
          "description": "Token used in retrieving the next page. If null, there are no additional pages.",
          "type": "string"
        },
        "nextLink": {
          "description": "Continuation link (absolute URI) to the next page of results in the list.",
          "type": "string"
        }
      }
    },
    "PrivateEndpoint": {
      "description": "Private Endpoint object.",
      "type": "object",
      "properties": {
        "id": {
          "description": "Fully qualified identifier of the private endpoint.",
          "type": "string"
        }
      }
    },
    "PrivateEndpointConnection": {
      "description": "Private Endpoint connection object.",
      "type": "object",
      "properties": {
        "id": {
          "description": "Id of the resource.",
          "type": "string"
        },
        "name": {
          "description": "Name of the resource.",
          "type": "string"
        },
        "type": {
          "description": "Type of the resource.",
          "type": "string"
        },
        "properties": {
          "$ref": "#/definitions/PrivateEndpointConnectionProperties"
        }
      }
    },
    "PrivateEndpointConnectionListResponse": {
      "description": "Paged response contains list of requested objects and a URL link to get the next set of results.",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "List of requested objects.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PrivateEndpointConnection"
          }
        },
        "$skipToken": {
          "description": "Token used in retrieving the next page. If null, there are no additional pages.",
          "type": "string"
        },
        "nextLink": {
          "description": "Continuation link (absolute URI) to the next page of results in the list.",
          "type": "string"
        }
      }
    },
    "PrivateEndpointConnectionProperties": {
      "description": "Private Endpoint connection properties object.",
      "type": "object",
      "properties": {
        "provisioningState": {
          "description": "Current provisioning state of the private endpoint resource.",
          "type": "string",
          "readOnly": true
        },
        "groupIds": {
          "description": "Group Id(s).",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "privateEndpoint": {
          "$ref": "#/definitions/PrivateEndpoint"
        },
        "privateLinkServiceConnectionState": {
          "$ref": "#/definitions/PrivateLinkServiceConnectionState"
        }
      }
    },
    "PrivateEndpointState": {
      "description": "Connection status of the service consumer with the service provider.\r\nPossible state transitions:\r\nPending  -> Approved (Service provider approves the connection request).\r\nPending  -> Rejected (Service provider rejects the connection request).\r\nPending  -> Disconnected (Service provider deletes the connection).\r\nApproved -> Rejected (Service provider rejects the approved connection).\r\nApproved -> Disconnected (Service provider deletes the connection).\r\nRejected -> Pending (Service consumer re-initiates the connection request that was rejected).\r\nRejected -> Disconnected (Service provider deletes the connection).",
      "enum": [
        "Pending",
        "Approved",
        "Rejected",
        "Disconnected"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "PrivateEndpointState",
        "modelAsString": true
      }
    },
    "PrivateLinkResource": {
      "description": "Private link resource object.",
      "type": "object",
      "properties": {
        "id": {
          "description": "Fully qualified identifier of the resource.",
          "type": "string"
        },
        "name": {
          "description": "Name of the resource.",
          "type": "string"
        },
        "type": {
          "description": "Type of the resource.",
          "type": "string"
        },
        "properties": {
          "$ref": "#/definitions/PrivateLinkResourceProperties"
        }
      }
    },
    "PrivateLinkResourceListResponse": {
      "description": "Paged response contains list of requested objects and a URL link to get the next set of results.",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "List of requested objects.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PrivateLinkResource"
          }
        },
        "$skipToken": {
          "description": "Token used in retrieving the next page. If null, there are no additional pages.",
          "type": "string"
        },
        "nextLink": {
          "description": "Continuation link (absolute URI) to the next page of results in the list.",
          "type": "string"
        }
      }
    },
    "PrivateLinkResourceProperties": {
      "description": "Private link resource properties object.",
      "type": "object",
      "properties": {
        "requiredMembers": {
          "description": "Private link resource required member names.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "requiredZoneNames": {
          "description": "Required DNS zone names of the private link resource.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "groupId": {
          "description": "Private link resource group id.",
          "type": "string"
        }
      }
    },
    "PrivateLinkServiceConnectionState": {
      "description": "A collection of information about the state of the connection between\r\nservice consumer and provider.",
      "type": "object",
      "properties": {
        "status": {
          "$ref": "#/definitions/PrivateEndpointState"
        },
        "description": {
          "description": "Description of connection status. For example if\r\nconnection is rejected, it can indicate reason for rejection.",
          "type": "string"
        },
        "actionsRequired": {
          "description": "A message indicating if changes on the service\r\nprovider require any updates on the consumer.",
          "type": "string"
        }
      }
    },
    "ProxyResource": {
      "description": "The resource model definition for a ARM proxy resource. It will have\r\neverything other than required location and tags.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ]
    },
    "PublicNetworkAccess": {
      "description": "Property to allow or block public traffic for an Azure Data Manager For Agriculture resource.",
      "enum": [
        "Enabled",
        "Disabled"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "PublicNetworkAccess",
        "modelAsString": true
      }
    },
    "Resource": {
      "description": "Common fields that are returned in the response for all Azure Resource Manager resources.",
      "type": "object",
      "properties": {
        "id": {
          "description": "Fully qualified resource ID for the resource.",
          "type": "string",
          "readOnly": true,
          "example": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}."
        },
        "name": {
          "description": "Name of the resource.",
          "type": "string",
          "readOnly": true
        },
        "type": {
          "description": "Type of the resource.",
          "type": "string",
          "readOnly": true,
          "example": "Microsoft.Compute/virtualMachines or Microsoft.Storage/storageAccounts."
        }
      },
      "x-ms-azure-resource": true
    },
    "ResourceIdentity": {
      "description": "Identity for the resource.",
      "type": "object",
      "properties": {
        "type": {
          "description": "The identity type. Typically one of: SystemAssigned, None.",
          "type": "string"
        },
        "principalId": {
          "description": "The principal ID of resource identity.",
          "type": "string",
          "readOnly": true
        },
        "tenantId": {
          "description": "The Tenant ID of resource.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "ResourceParameter": {
      "type": "object",
      "properties": {
        "resourceIdName": {
          "type": "string"
        },
        "resourceType": {
          "type": "string"
        }
      }
    },
    "SensorIntegration": {
      "description": "Sensor integration request model.",
      "type": "object",
      "properties": {
        "enabled": {
          "description": "Sensor integration enable state.",
          "type": "string"
        },
        "provisioningState": {
          "description": "Sensor integration instance provisioning state.",
          "enum": [
            "Creating",
            "Updating",
            "Deleting",
            "Succeeded",
            "Failed",
            "Running"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "ProvisioningState",
            "modelAsString": true
          }
        },
        "provisioningInfo": {
          "$ref": "#/definitions/ErrorResponse"
        }
      }
    },
    "Sku": {
      "description": "Metadata about the resource SKU.\r\nmatching ARM API as documented https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/resource-api-reference.md#put-resource.",
      "required": [
        "name"
      ],
      "type": "object",
      "properties": {
        "name": {
          "description": "The name of the SKU. This is typically a letter + number code, such as A0 or P3.",
          "type": "string"
        },
        "tier": {
          "description": "The tier of this particular SKU. Typically one of: Free, Basic, Standard, Premium.",
          "type": "string"
        },
        "size": {
          "description": "When the name field is the combination of tier and some other value, this would be the standalone code.",
          "type": "string"
        },
        "family": {
          "description": "If the service has different generations of hardware, for the same SKU, then that can be captured here.",
          "type": "string"
        },
        "capacity": {
          "format": "int32",
          "description": "If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted.",
          "type": "integer"
        }
      }
    },
    "Solution": {
      "description": "Solution resource.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProxyResource"
        }
      ],
      "properties": {
        "systemData": {
          "$ref": "#/definitions/SystemData"
        },
        "properties": {
          "$ref": "#/definitions/SolutionProperties"
        },
        "eTag": {
          "description": "The ETag value to implement optimistic concurrency.",
          "type": "string",
          "readOnly": true
        }
      },
      "x-ms-azure-resource": true
    },
    "SolutionEvaluatedOutput": {
      "type": "object",
      "properties": {
        "insightResponse": {
          "$ref": "#/definitions/Insight"
        },
        "insightAttachmentResponse": {
          "$ref": "#/definitions/InsightAttachment"
        }
      }
    },
    "SolutionInstallationRequest": {
      "description": "Solution Installation Request Body.",
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/SolutionProperties"
        }
      }
    },
    "SolutionListResponse": {
      "description": "Paged response contains list of requested objects and a URL link to get the next set of results.",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "List of requested objects.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Solution"
          }
        },
        "$skipToken": {
          "description": "Token used in retrieving the next page. If null, there are no additional pages.",
          "type": "string"
        },
        "nextLink": {
          "description": "Continuation link (absolute URI) to the next page of results in the list.",
          "type": "string"
        }
      }
    },
    "SolutionProperties": {
      "description": "Solution resource properties.",
      "required": [
        "marketplacePublisherId",
        "offerId",
        "planId",
        "saasSubscriptionId",
        "saasSubscriptionName",
        "termId"
      ],
      "type": "object",
      "properties": {
        "solutionId": {
          "description": "Solution Id.",
          "type": "string",
          "readOnly": true
        },
        "partnerId": {
          "description": "Partner Id of the Solution.",
          "type": "string",
          "readOnly": true
        },
        "saasSubscriptionId": {
          "description": "SaaS subscriptionId of the installed SaaS application.",
          "minLength": 1,
          "type": "string"
        },
        "saasSubscriptionName": {
          "description": "SaaS subscription name of the installed SaaS application.",
          "minLength": 1,
          "type": "string"
        },
        "marketplacePublisherId": {
          "description": "SaaS application Marketplace Publisher Id.",
          "minLength": 1,
          "type": "string"
        },
        "planId": {
          "description": "SaaS application Plan Id.",
          "minLength": 1,
          "type": "string"
        },
        "offerId": {
          "description": "SaaS application Offer Id.",
          "minLength": 1,
          "type": "string"
        },
        "termId": {
          "description": "SaaS application Term Id.",
          "minLength": 1,
          "type": "string"
        }
      },
      "additionalProperties": { }
    },
    "SystemData": {
      "description": "Metadata pertaining to creation and last modification of the resource.",
      "type": "object",
      "properties": {
        "createdBy": {
          "type": "string"
        },
        "createdByType": {
          "type": "string"
        },
        "createdAt": {
          "format": "date-time",
          "type": "string"
        },
        "lastModifiedBy": {
          "type": "string"
        },
        "lastModifiedByType": {
          "type": "string"
        },
        "lastModifiedAt": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "TrackedResource": {
      "description": "The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location'.",
      "required": [
        "location"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "tags": {
          "description": "Resource tags.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-ms-mutability": [
            "read",
            "create",
            "update"
          ]
        },
        "location": {
          "description": "Geo-location where the resource lives.",
          "type": "string",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      }
    },
    "UnitSystemsInfo": {
      "description": "Unit systems info for the data provider.",
      "required": [
        "key",
        "values"
      ],
      "type": "object",
      "properties": {
        "key": {
          "description": "UnitSystem key sent as part of ProviderInput.",
          "maxLength": 100,
          "minLength": 1,
          "type": "string"
        },
        "values": {
          "description": "List of unit systems supported by this data provider.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    }
  },
  "parameters": {
    "SubscriptionIdParameter": {
      "in": "path",
      "name": "subscriptionId",
      "description": "The Azure subscription ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000).",
      "required": true,
      "type": "string",
      "minLength": 1
    },
    "ResourceGroupNameParameter": {
      "in": "path",
      "name": "resourceGroupName",
      "description": "The name of the resource group. The name is case insensitive.",
      "required": true,
      "type": "string",
      "maxLength": 90,
      "minLength": 1,
      "pattern": "^[-\\w\\._\\(\\)]+$",
      "x-ms-parameter-location": "method"
    },
    "ApiVersionParameter": {
      "in": "query",
      "name": "api-version",
      "description": "The API version to be used with the HTTP request.",
      "required": true,
      "type": "string",
      "minLength": 1
    },
    "DataManagerForAgricultureResourceNameParameter": {
      "in": "path",
      "name": "dataManagerForAgricultureResourceName",
      "description": "DataManagerForAgriculture resource name.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "ExtensionIdParameter": {
      "in": "path",
      "name": "extensionId",
      "description": "Id of extension resource.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    }
  },
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "flow": "implicit",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      },
      "description": "Azure Active Directory OAuth2 Flow."
    }
  },
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ]
}