{
  "swagger": "2.0",
  "info": {
    "title": "Azure AgFoodPlatform RP Service",
    "description": "APIs documentation for Azure AgFoodPlatform Resource Provider Service.",
    "version": "2021-09-01-preview"
  },
  "paths": {
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AgFoodPlatform/farmBeats/{farmBeatsResourceName}/extensions/{extensionId}": {
      "put": {
        "tags": [
          "Extensions"
        ],
        "description": "Install or Update extension. AdditionalApiProperties are merged patch and if the extension is updated to a new version then the obsolete entries will be auto deleted from AdditionalApiProperties.",
        "operationId": "Extensions_CreateOrUpdate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/FarmBeatsResourceNameParameter"
          },
          {
            "$ref": "#/parameters/ExtensionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ApiVersionParameter"
          },
          {
            "in": "body",
            "name": "requestBody",
            "description": "Extension resource request body.",
            "schema": {
              "$ref": "#/definitions/ExtensionInstallationRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Extension"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/Extension"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Extensions_CreateOrUpdate": {
            "$ref": "./examples/Extensions_CreateOrUpdate.json"
          }
        }
      },
      "get": {
        "tags": [
          "Extensions"
        ],
        "description": "Get installed extension details by extension id.",
        "operationId": "Extensions_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/FarmBeatsResourceNameParameter"
          },
          {
            "$ref": "#/parameters/ExtensionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Extension"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Extensions_Get": {
            "$ref": "./examples/Extensions_Get.json"
          }
        }
      },
      "delete": {
        "tags": [
          "Extensions"
        ],
        "description": "Uninstall extension.",
        "operationId": "Extensions_Delete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/FarmBeatsResourceNameParameter"
          },
          {
            "$ref": "#/parameters/ExtensionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "204": {
            "description": "Success"
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Extensions_Delete": {
            "$ref": "./examples/Extensions_Delete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AgFoodPlatform/farmBeats/{farmBeatsResourceName}/extensions": {
      "get": {
        "tags": [
          "Extensions"
        ],
        "description": "Get installed extensions details.",
        "operationId": "Extensions_ListByFarmBeats",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/FarmBeatsResourceNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ApiVersionParameter"
          },
          {
            "in": "query",
            "name": "extensionIds",
            "description": "Installed extension ids.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "extensionCategories",
            "description": "Installed extension categories.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "$maxPageSize",
            "description": "Maximum number of items needed (inclusive).\r\nMinimum = 10, Maximum = 1000, Default value = 50.",
            "type": "integer",
            "format": "int32",
            "default": 50,
            "maximum": 1000,
            "minimum": 10
          },
          {
            "in": "query",
            "name": "$skipToken",
            "description": "Skip token for getting next set of results.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ExtensionListResponse"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "Extensions_ListByFarmBeats": {
            "$ref": "./examples/Extensions_ListByFarmBeats.json"
          }
        }
      }
    },
    "/providers/Microsoft.AgFoodPlatform/farmBeatsExtensionDefinitions": {
      "get": {
        "tags": [
          "FarmBeatsExtensions"
        ],
        "description": "Get list of farmBeats extension.",
        "operationId": "FarmBeatsExtensions_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "farmBeatsExtensionIds",
            "description": "FarmBeatsExtension ids.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "farmBeatsExtensionNames",
            "description": "FarmBeats extension names.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "extensionCategories",
            "description": "Extension categories.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "publisherIds",
            "description": "Publisher ids.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "$maxPageSize",
            "description": "Maximum number of items needed (inclusive).\r\nMinimum = 10, Maximum = 1000, Default value = 50.",
            "type": "integer",
            "format": "int32",
            "default": 50,
            "maximum": 1000,
            "minimum": 10
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/FarmBeatsExtensionListResponse"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "FarmBeatsExtensions_List": {
            "$ref": "./examples/FarmBeatsExtensions_List.json"
          }
        }
      }
    },
    "/providers/Microsoft.AgFoodPlatform/farmBeatsExtensionDefinitions/{farmBeatsExtensionId}": {
      "get": {
        "tags": [
          "FarmBeatsExtensions"
        ],
        "description": "Get farmBeats extension.",
        "operationId": "FarmBeatsExtensions_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "farmBeatsExtensionId",
            "description": "farmBeatsExtensionId to be queried.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z]{3,50}[.][a-zA-Z]{3,100}$"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/FarmBeatsExtension"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "FarmBeatsExtensions_Get": {
            "$ref": "./examples/FarmBeatsExtensions_Get.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AgFoodPlatform/farmBeats/{farmBeatsResourceName}": {
      "get": {
        "tags": [
          "FarmBeatsModels"
        ],
        "description": "Get FarmBeats resource.",
        "operationId": "FarmBeatsModels_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/FarmBeatsResourceNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/FarmBeats"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "FarmBeatsModels_Get": {
            "$ref": "./examples/FarmBeatsModels_Get.json"
          }
        }
      },
      "put": {
        "tags": [
          "FarmBeatsModels"
        ],
        "description": "Create or update FarmBeats resource.",
        "operationId": "FarmBeatsModels_CreateOrUpdate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/FarmBeatsResourceNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ApiVersionParameter"
          },
          {
            "in": "body",
            "name": "body",
            "description": "FarmBeats resource create or update request object.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FarmBeats"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/FarmBeats"
            }
          },
          "201": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/FarmBeats"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "FarmBeatsModels_CreateOrUpdate": {
            "$ref": "./examples/FarmBeatsModels_CreateOrUpdate.json"
          }
        }
      },
      "patch": {
        "tags": [
          "FarmBeatsModels"
        ],
        "description": "Update a FarmBeats resource.",
        "operationId": "FarmBeatsModels_Update",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/FarmBeatsResourceNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ApiVersionParameter"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Request object.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FarmBeatsUpdateRequestModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/FarmBeats"
            }
          },
          "202": {
            "description": "accepted",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-examples": {
          "FarmBeatsModels_Update": {
            "$ref": "./examples/FarmBeatsModels_Update.json"
          },
          "FarmBeatsModels_UpdateWithSensor": {
            "$ref": "./examples/FarmBeatsModels_UpdateWithSensor.json"
          }
        }
      },
      "delete": {
        "tags": [
          "FarmBeatsModels"
        ],
        "description": "Delete a FarmBeats resource.",
        "operationId": "FarmBeatsModels_Delete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/FarmBeatsResourceNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "204": {
            "description": "Success"
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "FarmBeatsModels_Delete": {
            "$ref": "./examples/FarmBeatsModels_Delete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.AgFoodPlatform/farmBeats": {
      "get": {
        "tags": [
          "FarmBeatsModels"
        ],
        "description": "Lists the FarmBeats instances for a subscription.",
        "operationId": "FarmBeatsModels_ListBySubscription",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "$maxPageSize",
            "description": "Maximum number of items needed (inclusive).\r\nMinimum = 10, Maximum = 1000, Default value = 50.",
            "type": "integer",
            "format": "int32",
            "default": 50,
            "maximum": 1000,
            "minimum": 10
          },
          {
            "in": "query",
            "name": "$skipToken",
            "description": "Skip token for getting next set of results.",
            "type": "string"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/FarmBeatsListResponse"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "FarmBeatsModels_ListBySubscription": {
            "$ref": "./examples/FarmBeatsModels_ListBySubscription.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AgFoodPlatform/farmBeats": {
      "get": {
        "tags": [
          "FarmBeatsModels"
        ],
        "description": "Lists the FarmBeats instances for a resource group.",
        "operationId": "FarmBeatsModels_ListByResourceGroup",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "$maxPageSize",
            "description": "Maximum number of items needed (inclusive).\r\nMinimum = 10, Maximum = 1000, Default value = 50.",
            "type": "integer",
            "format": "int32",
            "default": 50,
            "maximum": 1000,
            "minimum": 10
          },
          {
            "in": "query",
            "name": "$skipToken",
            "description": "Continuation token for getting next set of results.",
            "type": "string"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/FarmBeatsListResponse"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "FarmBeatsModels_ListByResourceGroup": {
            "$ref": "./examples/FarmBeatsModels_ListByResourceGroup.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.AgFoodPlatform/locations/{locations}/operationResults/{operationResultsId}": {
      "get": {
        "tags": [
          "OperationResults"
        ],
        "description": "Get operationResults for a FarmBeats resource.",
        "operationId": "OperationResults_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ApiVersionParameter"
          },
          {
            "in": "path",
            "name": "locations",
            "description": "Location.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "operationResultsId",
            "description": "operation Results Id.",
            "required": true,
            "type": "string",
            "pattern": "^[A-Za-z0-9]+(-[A-Za-z0-9]+)*$"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ArmAsyncOperation"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "OperationResults_Get": {
            "$ref": "./examples/OperationResults_Get.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.AgFoodPlatform/checkNameAvailability": {
      "post": {
        "tags": [
          "Locations"
        ],
        "description": "Checks the name availability of the resource with requested resource name.",
        "operationId": "Locations_CheckNameAvailability",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ApiVersionParameter"
          },
          {
            "in": "body",
            "name": "body",
            "description": "NameAvailabilityRequest object.",
            "required": true,
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/CheckNameAvailabilityRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/CheckNameAvailabilityResponse"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Locations_CheckNameAvailability_AlreadyExists": {
            "$ref": "./examples/Locations_CheckNameAvailability_AlreadyExists.json"
          },
          "Locations_CheckNameAvailability_Available": {
            "$ref": "./examples/Locations_CheckNameAvailability_Available.json"
          }
        }
      }
    },
    "/providers/Microsoft.AgFoodPlatform/operations": {
      "get": {
        "tags": [
          "Operations"
        ],
        "description": "Lists the available operations of Microsoft.AgFoodPlatform resource provider.",
        "operationId": "Operations_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/OperationListResult"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "Operations_List": {
            "$ref": "./examples/Operations_List.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AgFoodPlatform/farmBeats/{farmBeatsResourceName}/privateEndpointConnections/{privateEndpointConnectionName}": {
      "put": {
        "tags": [
          "PrivateEndpointConnections"
        ],
        "description": "Approves or Rejects a Private endpoint connection request.",
        "operationId": "PrivateEndpointConnections_CreateOrUpdate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/FarmBeatsResourceNameParameter"
          },
          {
            "in": "path",
            "name": "privateEndpointConnectionName",
            "description": "Private endpoint connection name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ApiVersionParameter"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Request object.",
            "required": true,
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v4/privatelinks.json#/definitions/PrivateEndpointConnection"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v4/privatelinks.json#/definitions/PrivateEndpointConnection"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "PrivateEndpointConnections_CreateOrUpdate": {
            "$ref": "./examples/PrivateEndpointConnections_CreateOrUpdate.json"
          }
        }
      },
      "get": {
        "tags": [
          "PrivateEndpointConnections"
        ],
        "description": "Get Private endpoint connection object.",
        "operationId": "PrivateEndpointConnections_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/FarmBeatsResourceNameParameter"
          },
          {
            "in": "path",
            "name": "privateEndpointConnectionName",
            "description": "Private endpoint connection name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v4/privatelinks.json#/definitions/PrivateEndpointConnection"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/ErrorResponse"
            },
            "x-ms-error-response": true
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "PrivateEndpointConnections_Get": {
            "$ref": "./examples/PrivateEndpointConnections_Get.json"
          }
        }
      },
      "delete": {
        "tags": [
          "PrivateEndpointConnections"
        ],
        "description": "Delete Private endpoint connection request.",
        "operationId": "PrivateEndpointConnections_Delete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/FarmBeatsResourceNameParameter"
          },
          {
            "in": "path",
            "name": "privateEndpointConnectionName",
            "description": "Private endpoint connection name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "202": {
            "description": "accepted",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          },
          "204": {
            "description": "Success"
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-examples": {
          "PrivateEndpointConnections_Delete": {
            "$ref": "./examples/PrivateEndpointConnections_Delete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AgFoodPlatform/farmBeats/{farmBeatsResourceName}/privateEndpointConnections": {
      "get": {
        "tags": [
          "PrivateEndpointConnections"
        ],
        "description": "Get list of Private endpoint connections.",
        "operationId": "PrivateEndpointConnections_ListByResource",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/FarmBeatsResourceNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v4/privatelinks.json#/definitions/PrivateEndpointConnectionListResult"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "PrivateEndpointConnections_ListByResource": {
            "$ref": "./examples/PrivateEndpointConnections_ListByResource.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": null
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AgFoodPlatform/farmBeats/{farmBeatsResourceName}/privateLinkResources": {
      "get": {
        "tags": [
          "PrivateLinkResources"
        ],
        "description": "Get list of Private link resources.",
        "operationId": "PrivateLinkResources_ListByResource",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/FarmBeatsResourceNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v4/privatelinks.json#/definitions/PrivateLinkResourceListResult"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "PrivateLinkResources_ListByResource": {
            "$ref": "./examples/PrivateLinkResources_ListByResource.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": null
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AgFoodPlatform/farmBeats/{farmBeatsResourceName}/privateLinkResources/{subResourceName}": {
      "get": {
        "tags": [
          "PrivateLinkResources"
        ],
        "description": "Get Private link resource object.",
        "operationId": "PrivateLinkResources_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/FarmBeatsResourceNameParameter"
          },
          {
            "in": "path",
            "name": "subResourceName",
            "description": "Sub resource name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v4/privatelinks.json#/definitions/PrivateLinkResource"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/ErrorResponse"
            },
            "x-ms-error-response": true
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "PrivateLinkResources_Get": {
            "$ref": "./examples/PrivateLinkResources_Get.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AgFoodPlatform/farmBeats/{farmBeatsResourceName}/solutions/{solutionId}": {
      "put": {
        "tags": [
          "Solutions"
        ],
        "description": "Install Or Update Solution.",
        "operationId": "Solutions_CreateOrUpdate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/FarmBeatsResourceNameParameter"
          },
          {
            "$ref": "#/parameters/SolutionId"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ApiVersionParameter"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Solution resource request body.",
            "schema": {
              "$ref": "#/definitions/SolutionInstallationRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Solution"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/Solution"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Solutions_CreateOrUpdate": {
            "$ref": "./examples/Solutions_CreateOrUpdate.json"
          }
        }
      },
      "get": {
        "tags": [
          "Solutions"
        ],
        "description": "Get installed Solution details by Solution id.",
        "operationId": "Solutions_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/FarmBeatsResourceNameParameter"
          },
          {
            "$ref": "#/parameters/SolutionId"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Solution"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Solutions_Get": {
            "$ref": "./examples/Solutions_Get.json"
          }
        }
      },
      "delete": {
        "tags": [
          "Solutions"
        ],
        "description": "Uninstall Solution.",
        "operationId": "Solutions_Delete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/FarmBeatsResourceNameParameter"
          },
          {
            "$ref": "#/parameters/SolutionId"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Solutions_Delete": {
            "$ref": "./examples/Solutions_Delete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AgFoodPlatform/farmBeats/{farmBeatsResourceName}/solutions": {
      "get": {
        "tags": [
          "Solutions"
        ],
        "description": "Get installed Solutions details.",
        "operationId": "Solutions_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/FarmBeatsResourceNameParameter"
          },
          {
            "in": "query",
            "name": "solutionIds",
            "description": "Installed Solution ids.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "ids",
            "description": "Ids of the resource.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "names",
            "description": "Names of the resource.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "propertyFilters",
            "description": "Filters on key-value pairs within the Properties object.\r\neg. \"{testKey} eq {testValue}\".",
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "statuses",
            "description": "Statuses of the resource.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "minCreatedDateTime",
            "description": "Minimum creation date of resource (inclusive).",
            "type": "string",
            "format": "date-time"
          },
          {
            "in": "query",
            "name": "maxCreatedDateTime",
            "description": "Maximum creation date of resource (inclusive).",
            "type": "string",
            "format": "date-time"
          },
          {
            "in": "query",
            "name": "minLastModifiedDateTime",
            "description": "Minimum last modified date of resource (inclusive).",
            "type": "string",
            "format": "date-time"
          },
          {
            "in": "query",
            "name": "maxLastModifiedDateTime",
            "description": "Maximum last modified date of resource (inclusive).",
            "type": "string",
            "format": "date-time"
          },
          {
            "in": "query",
            "name": "$maxPageSize",
            "description": "Maximum number of items needed (inclusive).\r\nMinimum = 10, Maximum = 1000, Default value = 50.",
            "type": "integer",
            "format": "int32",
            "default": 50,
            "maximum": 1000,
            "minimum": 10
          },
          {
            "in": "query",
            "name": "$skipToken",
            "description": "Skip token for getting next set of results.",
            "type": "string"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/SolutionListResponse"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "Solutions_List": {
            "$ref": "./examples/Solutions_List.json"
          }
        }
      }
    },
    "/providers/Microsoft.AgFoodPlatform/farmBeatsSolutionDefinitions": {
      "get": {
        "tags": [
          "SolutionsDiscoverability"
        ],
        "description": "Get list of farmBeats solutions.",
        "operationId": "SolutionsDiscoverability_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "farmBeatsSolutionIds",
            "description": "Ids of FarmBeats Solutions which the customer requests to fetch.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "farmBeatsSolutionNames",
            "description": "Names of FarmBeats Solutions which the customer requests to fetch.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "$maxPageSize",
            "description": "Maximum number of items needed (inclusive).\r\nMinimum = 10, Maximum = 1000, Default value = 50.",
            "type": "integer",
            "format": "int32",
            "default": 50,
            "maximum": 1000,
            "minimum": 10
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/FarmBeatsSolutionListResponse"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "SolutionsDiscoverability_List": {
            "$ref": "./examples/SolutionsDiscoverability_List.json"
          }
        }
      }
    },
    "/providers/Microsoft.AgFoodPlatform/farmBeatsSolutionDefinitions/{farmBeatsSolutionId}": {
      "get": {
        "tags": [
          "SolutionsDiscoverability"
        ],
        "description": "Get farmBeats solution by id.",
        "operationId": "SolutionsDiscoverability_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "farmBeatsSolutionId",
            "description": "farmBeatsSolutionId to be queried.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z]{3,50}[.][a-zA-Z]{3,100}$"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v4/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/FarmBeatsSolution"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "SolutionsDiscoverability_Get": {
            "$ref": "./examples/SolutionsDiscoverability_Get.json"
          }
        }
      }
    }
  },
  "definitions": {
    "ApiProperties": {
      "description": "Api properties.",
      "type": "object",
      "properties": {
        "apiFreshnessTimeInMinutes": {
          "format": "int32",
          "description": "Interval in minutes for which the weather data for the api needs to be refreshed.",
          "maximum": 10080,
          "minimum": 0,
          "type": "integer"
        }
      }
    },
    "ExtensionProperties": {
      "description": "Extension resource properties.",
      "type": "object",
      "properties": {
        "extensionId": {
          "description": "Extension Id.",
          "pattern": "^[a-zA-Z]{3,50}[.][a-zA-Z]{3,100}$",
          "type": "string",
          "readOnly": true
        },
        "extensionCategory": {
          "description": "Extension category. e.g. weather/sensor/satellite.",
          "type": "string",
          "readOnly": true
        },
        "installedExtensionVersion": {
          "description": "Installed extension version.",
          "pattern": "^([1-9]|10).\\d$",
          "type": "string",
          "readOnly": true
        },
        "extensionAuthLink": {
          "description": "Extension auth link.",
          "type": "string",
          "readOnly": true
        },
        "extensionApiDocsLink": {
          "description": "Extension api docs link.",
          "type": "string",
          "readOnly": true
        },
        "additionalApiProperties": {
          "description": "Additional api properties.",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/ApiProperties"
          },
          "readOnly": true
        }
      }
    },
    "Extension": {
      "description": "Extension resource.",
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/ProxyResource"
        }
      ],
      "properties": {
        "systemData": {
          "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/systemData"
        },
        "properties": {
          "$ref": "#/definitions/ExtensionProperties",
          "x-ms-client-flatten": true
        },
        "eTag": {
          "description": "The ETag value to implement optimistic concurrency.",
          "type": "string",
          "readOnly": true
        }
      },
      "x-ms-azure-resource": true
    },
    "ExtensionInstallationRequest": {
      "description": "Extension Installation Request Body.",
      "type": "object",
      "properties": {
        "extensionVersion": {
          "description": "Extension Version.",
          "default": null,
          "maxLength": 10,
          "minLength": 3,
          "type": "string"
        },
        "additionalApiProperties": {
          "description": "Additional Api Properties.",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/ApiProperties"
          }
        }
      }
    },
    "ExtensionListResponse": {
      "description": "Paged response contains list of requested objects and a URL link to get the next set of results.",
      "type": "object",
      "properties": {
        "value": {
          "description": "List of requested objects.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Extension"
          }
        },
        "nextLink": {
          "description": "Continuation link (absolute URI) to the next page of results in the list.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "UnitSystemsInfo": {
      "description": "Unit systems info for the data provider.",
      "required": [
        "key",
        "values"
      ],
      "type": "object",
      "properties": {
        "key": {
          "description": "UnitSystem key sent as part of ProviderInput.",
          "maxLength": 100,
          "minLength": 2,
          "type": "string"
        },
        "values": {
          "description": "List of unit systems supported by this data provider.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "DetailedInformation": {
      "description": "Model to capture detailed information for farmBeatsExtensions.",
      "type": "object",
      "properties": {
        "apiName": {
          "description": "ApiName available for the farmBeatsExtension.",
          "type": "string",
          "example": "dailyforecast, dailyhistorical."
        },
        "customParameters": {
          "description": "List of customParameters.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "platformParameters": {
          "description": "List of platformParameters.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "unitsSupported": {
          "$ref": "#/definitions/UnitSystemsInfo"
        },
        "apiInputParameters": {
          "description": "List of apiInputParameters.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "FarmBeatsExtensionProperties": {
      "description": "FarmBeatsExtension properties.",
      "type": "object",
      "properties": {
        "targetResourceType": {
          "description": "Target ResourceType of the farmBeatsExtension.",
          "type": "string",
          "readOnly": true
        },
        "farmBeatsExtensionId": {
          "description": "FarmBeatsExtension ID.",
          "maxLength": 100,
          "minLength": 2,
          "pattern": "^[a-zA-Z]{3,50}[.][a-zA-Z]{3,100}$",
          "type": "string",
          "readOnly": true
        },
        "farmBeatsExtensionName": {
          "description": "FarmBeatsExtension name.",
          "maxLength": 100,
          "minLength": 2,
          "type": "string",
          "readOnly": true
        },
        "farmBeatsExtensionVersion": {
          "description": "FarmBeatsExtension version.",
          "maxLength": 100,
          "minLength": 2,
          "pattern": "^([1-9]|10).\\d$",
          "type": "string",
          "readOnly": true
        },
        "publisherId": {
          "description": "Publisher ID.",
          "maxLength": 100,
          "minLength": 2,
          "type": "string",
          "readOnly": true
        },
        "description": {
          "description": "Textual description.",
          "maxLength": 500,
          "minLength": 2,
          "type": "string",
          "readOnly": true
        },
        "extensionCategory": {
          "description": "Category of the extension. e.g. weather/sensor/satellite.",
          "maxLength": 100,
          "minLength": 2,
          "type": "string",
          "readOnly": true
        },
        "extensionAuthLink": {
          "description": "FarmBeatsExtension auth link.",
          "type": "string",
          "readOnly": true
        },
        "extensionApiDocsLink": {
          "description": "FarmBeatsExtension api docs link.",
          "type": "string",
          "readOnly": true
        },
        "detailedInformation": {
          "description": "Detailed information which shows summary of requested data.\r\nUsed in descriptive get extension metadata call.\r\nInformation for weather category per api included are apisSupported,\r\ncustomParameters, PlatformParameters and Units supported.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DetailedInformation"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        }
      }
    },
    "FarmBeatsExtension": {
      "description": "FarmBeats extension resource.",
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/ProxyResource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/FarmBeatsExtensionProperties",
          "x-ms-client-flatten": true
        }
      },
      "x-ms-azure-resource": true
    },
    "FarmBeatsExtensionListResponse": {
      "description": "Paged response contains list of requested objects and a URL link to get the next set of results.",
      "type": "object",
      "properties": {
        "value": {
          "description": "List of requested objects.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/FarmBeatsExtension"
          }
        },
        "nextLink": {
          "description": "Continuation link (absolute URI) to the next page of results in the list.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "ArmAsyncOperation": {
      "description": "Arm async operation class.\r\nRef: https://docs.microsoft.com/en-us/azure/azure-resource-manager/management/async-operations.",
      "type": "object",
      "properties": {
        "status": {
          "description": "Status of the async operation.",
          "type": "string"
        },
        "error": {
          "$ref": "#/definitions/ArmAsyncOperationError"
        }
      }
    },
    "ArmAsyncOperationError": {
      "description": "Arm async operation error class.\r\nRef: https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/async-api-reference.md#azure-asyncoperation-resource-format.",
      "type": "object",
      "properties": {
        "code": {
          "description": "Status of the async operation.",
          "type": "string"
        },
        "message": {
          "description": "Status of the async operation.",
          "type": "string"
        }
      }
    },
    "SensorIntegration": {
      "description": "Sensor integration request model.",
      "type": "object",
      "properties": {
        "enabled": {
          "description": "Sensor integration enable state. Allowed values are True, None",
          "type": "string"
        },
        "provisioningState": {
          "description": "Sensor integration instance provisioning state.",
          "enum": [
            "Creating",
            "Updating",
            "Deleting",
            "Succeeded",
            "Failed"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "ProvisioningState",
            "modelAsString": true
          }
        },
        "provisioningInfo": {
          "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/ErrorResponse"
        }
      }
    },
    "PublicNetworkAccess": {
      "description": "Property to allow or block public traffic for an Azure FarmBeats resource.",
      "enum": [
        "Enabled",
        "Hybrid"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "PublicNetworkAccess",
        "modelAsString": true
      }
    },
    "FarmBeatsProperties": {
      "description": "FarmBeats ARM Resource properties.",
      "type": "object",
      "properties": {
        "instanceUri": {
          "format": "uri",
          "description": "Uri of the FarmBeats instance.",
          "type": "string",
          "readOnly": true
        },
        "provisioningState": {
          "description": "FarmBeats instance provisioning state.",
          "enum": [
            "Creating",
            "Updating",
            "Deleting",
            "Succeeded",
            "Failed"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "ProvisioningState",
            "modelAsString": true
          }
        },
        "sensorIntegration": {
          "$ref": "#/definitions/SensorIntegration"
        },
        "publicNetworkAccess": {
          "$ref": "#/definitions/PublicNetworkAccess"
        },
        "privateEndpointConnections": {
          "$ref": "../../../../../common-types/resource-management/v4/privatelinks.json#/definitions/PrivateEndpointConnection",
          "readOnly": true
        }
      }
    },
    "FarmBeats": {
      "description": "FarmBeats ARM Resource.",
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/TrackedResource"
        }
      ],
      "properties": {
        "identity": {
          "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/Identity"
        },
        "properties": {
          "$ref": "#/definitions/FarmBeatsProperties",
          "x-ms-client-flatten": true
        }
      },
      "x-ms-azure-resource": true
    },
    "FarmBeatsUpdateProperties": {
      "description": "FarmBeats ARM Resource properties.",
      "type": "object",
      "properties": {
        "sensorIntegration": {
          "$ref": "#/definitions/SensorIntegration"
        },
        "publicNetworkAccess": {
          "$ref": "#/definitions/PublicNetworkAccess"
        }
      }
    },
    "FarmBeatsUpdateRequestModel": {
      "description": "FarmBeats update request.",
      "type": "object",
      "properties": {
        "location": {
          "description": "Geo-location where the resource lives.",
          "type": "string"
        },
        "identity": {
          "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/Identity"
        },
        "properties": {
          "$ref": "#/definitions/FarmBeatsUpdateProperties"
        },
        "tags": {
          "description": "Resource tags.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "FarmBeatsListResponse": {
      "description": "Paged response contains list of requested objects and a URL link to get the next set of results.",
      "type": "object",
      "properties": {
        "value": {
          "description": "List of requested objects.",
          "type": "array",
          "uniqueItems": false,
          "items": {
            "$ref": "#/definitions/FarmBeats"
          }
        },
        "nextLink": {
          "description": "Continuation link (absolute URI) to the next page of results in the list.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "SolutionProperties": {
      "description": "Solution resource properties.",
      "required": [
        "offerId",
        "planId",
        "marketplacePublisherId",
        "saasSubscriptionId",
        "saasSubscriptionName",
        "termId"
      ],
      "type": "object",
      "properties": {
        "solutionId": {
          "description": "Solution Id.",
          "type": "string",
          "readOnly": true
        },
        "partnerId": {
          "description": "Partner Id of the Solution.",
          "type": "string",
          "readOnly": true
        },
        "saasSubscriptionId": {
          "description": "SaaS subscriptionId of the installed SaaS application.",
          "minLength": 1,
          "type": "string"
        },
        "saasSubscriptionName": {
          "description": "SaaS subscription name of the installed SaaS application.",
          "minLength": 1,
          "type": "string"
        },
        "marketplacePublisherId": {
          "description": "SaaS application Publisher Id.",
          "minLength": 1,
          "type": "string"
        },
        "planId": {
          "description": "SaaS application Plan Id.",
          "minLength": 1,
          "type": "string"
        },
        "offerId": {
          "description": "SaaS application Offer Id.",
          "minLength": 1,
          "type": "string"
        },
        "termId": {
          "description": "SaaS application Term Id.",
          "minLength": 1,
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "SolutionInstallationRequest": {
      "description": "Solution Installation Request Body.",
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/SolutionProperties"
        }
      }
    },
    "Solution": {
      "description": "Solution resource.",
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/ProxyResource"
        }
      ],
      "properties": {
        "systemData": {
          "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/systemData"
        },
        "properties": {
          "$ref": "#/definitions/SolutionProperties"
        },
        "eTag": {
          "description": "The ETag value to implement optimistic concurrency.",
          "type": "string",
          "readOnly": true
        }
      },
      "x-ms-azure-resource": true
    },
    "SolutionListResponse": {
      "description": "Paged response contains list of requested objects and a URL link to get the next set of results.",
      "type": "object",
      "properties": {
        "value": {
          "description": "List of requested objects.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Solution"
          }
        },
        "$skipToken": {
          "description": "Token used in retrieving the next page. If null, there are no additional pages.",
          "type": "string"
        },
        "nextLink": {
          "description": "Continuation link (absolute URI) to the next page of results in the list.",
          "type": "string"
        }
      }
    },
    "Measure": {
      "type": "object",
      "properties": {
        "unit": {
          "type": "string"
        },
        "value": {
          "format": "double",
          "type": "number"
        }
      }
    },
    "ResourceParameter": {
      "type": "object",
      "properties": {
        "resourceIdName": {
          "type": "string"
        },
        "resourceType": {
          "type": "string"
        }
      }
    },
    "Insight": {
      "type": "object",
      "properties": {
        "farmerId": {
          "type": "string"
        },
        "modelId": {
          "type": "string"
        },
        "resourceType": {
          "type": "string"
        },
        "resourceId": {
          "type": "string"
        },
        "modelVersion": {
          "type": "string"
        },
        "insightStartDateTime": {
          "format": "date-time",
          "type": "string"
        },
        "insightEndDateTime": {
          "format": "date-time",
          "type": "string"
        },
        "measures": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/Measure"
          }
        },
        "id": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "createdDateTime": {
          "format": "date-time",
          "type": "string"
        },
        "modifiedDateTime": {
          "format": "date-time",
          "type": "string"
        },
        "eTag": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "properties": {
          "type": "object",
          "additionalProperties": {}
        }
      }
    },
    "InsightAttachment": {
      "type": "object",
      "properties": {
        "insightId": {
          "type": "string"
        },
        "modelId": {
          "type": "string"
        },
        "resourceType": {
          "type": "string"
        },
        "resourceId": {
          "type": "string"
        },
        "fileLink": {
          "type": "string"
        },
        "originalFileName": {
          "type": "string"
        },
        "farmerId": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "createdDateTime": {
          "format": "date-time",
          "type": "string"
        },
        "modifiedDateTime": {
          "format": "date-time",
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "eTag": {
          "type": "string"
        }
      }
    },
    "SolutionEvaluatedOutput": {
      "type": "object",
      "properties": {
        "insightResponse": {
          "$ref": "#/definitions/Insight"
        },
        "insightAttachmentResponse": {
          "$ref": "#/definitions/InsightAttachment"
        }
      }
    },
    "FarmBeatsSolutionProperties": {
      "description": "FarmBeatsSolution properties.",
      "type": "object",
      "properties": {
        "partnerId": {
          "description": "Solution Partner Id.",
          "type": "string",
          "readOnly": true
        },
        "partnerTenantId": {
          "description": "Solution Partner Tenant Id.",
          "type": "string",
          "readOnly": true
        },
        "dataAccessScopes": {
          "description": "Gets scope of the FarmBeats data access that's required for processing solution request to partner.\r\nExample: For gdd they might need weatherScope and satelliteScope.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "marketplaceOfferDetails": {
          "$ref": "#/definitions/MarketplaceOfferDetails"
        },
        "inputParametersValidationScopes": {
          "description": "Gets scope of the FarmBeats related parameters that need to be validated in apiInputParameters.\r\nExample: For if 'FarmHierarchy' is the input scope for 'WeatherScope' data access\r\nFor working with WeatherScope we need FarmHierarchy info implies 'farmerId', 'resourceId', 'resourceType' in request body.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResourceParameter"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        },
        "openApiSpecsDictionary": {
          "description": "Gets apiVersion: Swagger Document Dictionary to capture all api versions of swagger exposed by partner to farmbeats.",
          "type": "object",
          "additionalProperties": {
            "type": "object"
          },
          "readOnly": true
        },
        "evaluatedOutputsDictionary": {
          "description": "Gets example name: insight sample response Dictionary to capture all variations of computed results ingested by partner.",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/SolutionEvaluatedOutput"
          },
          "readOnly": true
        },
        "accessFBApplicationId": {
          "format": "uuid",
          "description": "Application id of the multi tenant application to be used by partner to access FarmBeats data.",
          "type": "string",
          "readOnly": true
        },
        "saaSApplicationId": {
          "format": "uuid",
          "description": "Application id of the SaaS multi tenant application.",
          "type": "string",
          "readOnly": true
        },
        "actionIds": {
          "description": "List of ActionIds needed to make the SaaS multi tenant application access relevant fb data.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "roleId": {
          "description": "Role Id of the SaaS multi tenant application to access relevant fb data.",
          "type": "string",
          "readOnly": true
        },
        "roleName": {
          "description": "Role Name of the SaaS multi tenant application to access relevant fb data.",
          "type": "string",
          "readOnly": true
        },
        "accessFBApplicationName": {
          "description": "Application name of the multi tenant application to be used by partner to access FarmBeatsData.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "FarmBeatsSolution": {
      "description": "FarmBeats solution resource.",
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/ProxyResource"
        }
      ],
      "properties": {
        "systemData": {
          "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/systemData"
        },
        "properties": {
          "$ref": "#/definitions/FarmBeatsSolutionProperties"
        }
      },
      "x-ms-azure-resource": true
    },
    "MarketplaceOfferDetails": {
      "type": "object",
      "properties": {
        "saasOfferId": {
          "type": "string"
        },
        "publisherId": {
          "type": "string"
        }
      }
    },
    "FarmBeatsSolutionListResponse": {
      "description": "Paged response contains list of requested objects and a URL link to get the next set of results.",
      "type": "object",
      "properties": {
        "value": {
          "description": "List of requested objects.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/FarmBeatsSolution"
          }
        },
        "$skipToken": {
          "description": "Token used in retrieving the next page. If null, there are no additional pages.",
          "type": "string"
        },
        "nextLink": {
          "description": "Continuation link (absolute URI) to the next page of results in the list.",
          "type": "string"
        }
      }
    }
  },
  "parameters": {
    "FarmBeatsResourceNameParameter": {
      "in": "path",
      "name": "farmBeatsResourceName",
      "description": "FarmBeats resource name.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "ExtensionIdParameter": {
      "in": "path",
      "name": "extensionId",
      "description": "Id of extension resource.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "SolutionId": {
      "in": "path",
      "name": "solutionId",
      "description": "Solution Id of the solution.",
      "required": true,
      "type": "string",
      "pattern": "^[a-zA-Z]{3,50}[.][a-zA-Z]{3,100}$",
      "x-ms-parameter-location": "method"
    }
  },
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "flow": "implicit",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      },
      "description": "Azure Active Directory OAuth2 Flow."
    }
  },
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ]
}
