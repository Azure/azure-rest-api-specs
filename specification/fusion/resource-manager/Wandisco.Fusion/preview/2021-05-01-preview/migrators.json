{
  "swagger": "2.0",
  "info": {
    "title": "WANDisco Fusion",
    "description": "WANDisco Fusion",
    "version": "2021-05-01-preview"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Azure Active Directory OAuth2 Flow.",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "paths": {
    "/subscriptions/{subscriptionId}/providers/Wandisco.Fusion/migrators": {
      "get": {
        "tags": [
          "migrators"
        ],
        "description": "Returns list of migrators under subscription.",
        "operationId": "Migrators_ListBySubscription",
        "parameters": [
          {
            "$ref": "./commonTypes.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./commonTypes.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "migrators details.",
            "schema": {
              "$ref": "#/definitions/MigratorList"
            }
          },
          "default": {
            "description": "Error response describing the reason for operation failure.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "deprecated": false,
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "Get list of migrators": {
            "$ref": "./examples/LiveDataMigrator/MigratorsListBySubscription.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Wandisco.Fusion/migrators": {
      "get": {
        "tags": [
          "migrator"
        ],
        "description": "Returns list of Migrators.",
        "operationId": "Migrators_ListByResourceGroup",
        "parameters": [
          {
            "$ref": "./commonTypes.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./commonTypes.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./commonTypes.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "migrator details.",
            "schema": {
              "$ref": "#/definitions/MigratorList"
            }
          },
          "default": {
            "description": "Error response describing the reason for operation failure.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "deprecated": false,
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "Get Migrators list": {
            "$ref": "./examples/LiveDataMigrator/MigratorList.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Wandisco.Fusion/migrators/{migratorName}": {
      "get": {
        "tags": [
          "migrator"
        ],
        "description": "Returns a given Migrator.",
        "operationId": "Migrators_Get",
        "parameters": [
          {
            "$ref": "./commonTypes.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./commonTypes.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./commonTypes.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/MigratorNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "migrator details.",
            "schema": {
              "$ref": "#/definitions/Migrator"
            }
          },
          "default": {
            "description": "Error response describing the reason for operation failure.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get Migrator by name": {
            "$ref": "./examples/LiveDataMigrator/MigratorGet.json"
          }
        }
      },
      "put": {
        "tags": [
          "migrator"
        ],
        "description": "Creates a Migrator.",
        "operationId": "Migrators_CreateOrUpdate",
        "parameters": [
          {
            "$ref": "./commonTypes.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./commonTypes.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./commonTypes.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/MigratorNameParameter"
          },
          {
            "name": "Migrator",
            "description": "migrator details.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Migrator"
            }
          }
        ],
        "x-ms-examples": {
          "Create Migrator": {
            "$ref": "./examples/LiveDataMigrator/MigratorCreate.json"
          }
        },
        "responses": {
          "200": {
            "description": "Updating Migrator.",
            "schema": {
              "$ref": "#/definitions/Migrator"
            }
          },
          "201": {
            "description": "Creating Migrator.",
            "schema": {
              "$ref": "#/definitions/Migrator"
            }
          },
          "default": {
            "description": "Error response describing the reason for operation failure.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      },
      "patch": {
        "tags": [
          "migrator"
        ],
        "description": "Updates a given Migrator.",
        "operationId": "Migrators_Update",
        "parameters": [
          {
            "$ref": "./commonTypes.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./commonTypes.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./commonTypes.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/MigratorNameParameter"
          },
          {
            "name": "MigratorUpdate",
            "description": "migrator update details.",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/MigratorUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Updating Migrator.",
            "schema": {
              "$ref": "#/definitions/Migrator"
            }
          },
          "201": {
            "description": "Updating Migrator.",
            "schema": {
              "$ref": "#/definitions/Migrator"
            }
          },
          "default": {
            "description": "Error response describing the reason for operation failure",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-examples": {
          "Successful Migrator Tags Patch": {
            "$ref": "./examples/LiveDataMigrator/MigratorTagPatch.json"
          },
          "Successful Bandwidth Patch": {
            "$ref": "./examples/LiveDataMigrator/MigratorBandwidthPatch.json"
          }
        }
      },
      "delete": {
        "tags": [
          "migrator"
        ],
        "description": "Deletes a given Migrator.",
        "operationId": "Migrators_Delete",
        "parameters": [
          {
            "$ref": "./commonTypes.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./commonTypes.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./commonTypes.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/MigratorNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The Migrator was successfully deleted"
          },
          "202": {
            "description": "The Migrator was accepted for deletion"
          },
          "204": {
            "description": "The Migrator was not found"
          },
          "default": {
            "description": "Error response describing the reason for operation failure.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Successful migrator delete": {
            "$ref": "./examples/LiveDataMigrator/MigratorDelete.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Wandisco.Fusion/migrators/{migratorName}/generateUpgrade": {
      "post": {
        "tags": [
          "migrator"
        ],
        "description": "Generate the updated version of a Migrator.",
        "operationId": "Migrators_GenerateUpgrade",
        "parameters": [
          {
            "$ref": "./commonTypes.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./commonTypes.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./commonTypes.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/MigratorNameParameter"
          }
        ],
        "x-ms-examples": {
          "Generated updated Migrator": {
            "$ref": "./examples/LiveDataMigrator/MigratorGenerateUpgrade.json"
          }
        },
        "responses": {
          "200": {
            "description": "Generate upgraded migrator request completed."
          },
          "202": {
            "description": "Generate upgraded migrator request accepted."
          },
          "default": {
            "description": "Error response describing the reason for operation failure.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Wandisco.Fusion/migrators/{migratorName}/updateDownloadLocation": {
      "post": {
        "tags": [
          "migrator"
        ],
        "description": "Update the downloadLocation of the Migrator.",
        "operationId": "Migrators_UpdateDownloadLocation",
        "parameters": [
          {
            "$ref": "./commonTypes.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./commonTypes.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./commonTypes.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/MigratorNameParameter"
          }
        ],
        "x-ms-examples": {
          "Refresh a Migrator": {
            "$ref": "./examples/LiveDataMigrator/MigratorUpdateDownloadLocation.json"
          }
        },
        "responses": {
          "200": {
            "description": "Update download location request completed."
          },
          "202": {
            "description": "Update download location request accepted."
          },
          "default": {
            "description": "Error response describing the reason for operation failure.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Wandisco.Fusion/migrators/{migratorName}/getInstallKey": {
      "post": {
        "tags": [
          "migrator"
        ],
        "description": "Get the install key of a Migrator",
        "operationId": "Migrators_GetInstallKey",
        "parameters": [
          {
            "$ref": "./commonTypes.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./commonTypes.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./commonTypes.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/MigratorNameParameter"
          }
        ],
        "x-ms-examples": {
          "Refresh Migrator Install Key": {
            "$ref": "./examples/LiveDataMigrator/MigratorGetInstallKey.json"
          }
        },
        "responses": {
          "200": {
            "description": "Create config archive request completed.",
            "schema": {
              "$ref": "#/definitions/MigratorInstallKey"
            }
          },
          "default": {
            "description": "Error response describing the reason for operation failure.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Wandisco.Fusion/migrators/{migratorName}/liveDataMigrations": {
      "get": {
        "tags": [
          "LiveDataMigrations"
        ],
        "description": "List migrations in the migrator",
        "operationId": "LiveDataMigrations_ListByMigrator",
        "parameters": [
          {
            "$ref": "./commonTypes.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./commonTypes.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./commonTypes.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/MigratorNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/LiveDataMigrationList"
            }
          },
          "default": {
            "description": "Error response describing the reason for operation failure.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "List LiveData Migration": {
            "$ref": "./examples/LiveDataMigrator/LiveDataMigrationList.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Wandisco.Fusion/migrators/{migratorName}/liveDataMigrations/{migrationName}": {
      "get": {
        "tags": [
          "LiveDataMigrations"
        ],
        "description": "Read a migrator migration",
        "operationId": "LiveDataMigrations_Get",
        "parameters": [
          {
            "$ref": "./commonTypes.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./commonTypes.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./commonTypes.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/MigratorNameParameter"
          },
          {
            "$ref": "#/parameters/MigrationNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/LiveDataMigration"
            }
          },
          "default": {
            "description": "Error response describing the reason for operation failure. 404 - NotFound",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get LiveData Migration": {
            "$ref": "./examples/LiveDataMigrator/LiveDataMigrationGet.json"
          }
        }
      },
      "put": {
        "tags": [
          "LiveDataMigrations"
        ],
        "description": "Create a Migrator migration",
        "operationId": "LiveDataMigrations_CreateOrUpdate",
        "parameters": [
          {
            "$ref": "./commonTypes.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./commonTypes.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./commonTypes.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/MigratorNameParameter"
          },
          {
            "$ref": "#/parameters/MigrationNameParameter"
          },
          {
            "name": "migration",
            "description": "migration details.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LiveDataMigration"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/LiveDataMigration"
            }
          },
          "201": {
            "description": "Creating LiveDataMigration.",
            "schema": {
              "$ref": "#/definitions/LiveDataMigration"
            }
          },
          "default": {
            "description": "Error response describing the reason for operation failure.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-examples": {
          "Create LiveData Migration": {
            "$ref": "./examples/LiveDataMigrator/LiveDataMigrationCreate.json"
          }
        }
      },
      "delete": {
        "tags": [
          "LiveDataMigrations"
        ],
        "description": "Delete a Migrator migration",
        "operationId": "LiveDataMigrations_Delete",
        "parameters": [
          {
            "$ref": "./commonTypes.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./commonTypes.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./commonTypes.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/MigratorNameParameter"
          },
          {
            "$ref": "#/parameters/MigrationNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The request has succeeded."
          },
          "204": {
            "description": "The migration was not found"
          },
          "default": {
            "description": "Error response describing the reason for operation failure.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete LiveData Migration": {
            "$ref": "./examples/LiveDataMigrator/LiveDataMigrationDelete.json"
          }
        }
      },
      "patch": {
        "tags": [
          "LiveDataMigrations"
        ],
        "description": "Updates a given LiveDataMigration.",
        "operationId": "LiveDataMigrations_Update",
        "parameters": [
          {
            "$ref": "./commonTypes.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./commonTypes.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./commonTypes.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/MigratorNameParameter"
          },
          {
            "$ref": "#/parameters/MigrationNameParameter"
          },
          {
            "name": "LiveDataMigration",
            "description": "LiveDataMigration update properties.",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/TagsAndExclusionUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Updating LiveDataMigration",
            "schema": {
              "$ref": "#/definitions/LiveDataMigration"
            }
          },
          "201": {
            "description": "Updating LiveDataMigration",
            "schema": {
              "$ref": "#/definitions/LiveDataMigration"
            }
          },
          "default": {
            "description": "Error response describing the reason for operation failure",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-examples": {
          "Successful Migration Tags Patch": {
            "$ref": "./examples/LiveDataMigrator/LiveDataMigrationTagsPatch.json"
          },
          "Successful Exclusions Patch": {
            "$ref": "./examples/LiveDataMigrator/LiveDataMigrationExclusionsPatch.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Wandisco.Fusion/migrators/{migratorName}/liveDataMigrations/{migrationName}/start": {
      "post": {
        "tags": [
          "LiveDataMigrations"
        ],
        "description": "Start an existing migrator migration",
        "operationId": "LiveDataMigrations_Start",
        "parameters": [
          {
            "$ref": "./commonTypes.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./commonTypes.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./commonTypes.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/MigratorNameParameter"
          },
          {
            "$ref": "#/parameters/MigrationNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The request has succeeded."
          },
          "default": {
            "description": "Error response describing the reason for operation failure.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Start Migration": {
            "$ref": "./examples/LiveDataMigrator/LiveDataMigrationStart.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Wandisco.Fusion/migrators/{migratorName}/liveDataMigrations/{migrationName}/stop": {
      "post": {
        "tags": [
          "LiveDataMigrations"
        ],
        "description": "Stop a migrator migration",
        "operationId": "LiveDataMigrations_Stop",
        "parameters": [
          {
            "$ref": "./commonTypes.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./commonTypes.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./commonTypes.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/MigratorNameParameter"
          },
          {
            "$ref": "#/parameters/MigrationNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The request has succeeded."
          },
          "default": {
            "description": "Error response describing the reason for operation failure.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Stop Migration": {
            "$ref": "./examples/LiveDataMigrator/LiveDataMigrationStop.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Wandisco.Fusion/migrators/{migratorName}/targets": {
      "get": {
        "tags": [
          "migratorTarget"
        ],
        "description": "Returns list of Migrator Targets.",
        "operationId": "Targets_ListByMigrator",
        "parameters": [
          {
            "$ref": "./commonTypes.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./commonTypes.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./commonTypes.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/MigratorNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "migrator details.",
            "schema": {
              "$ref": "#/definitions/MigratorTargetList"
            }
          },
          "default": {
            "description": "Error response describing the reason for operation failure.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "deprecated": false,
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "Get Migrator Targets list": {
            "$ref": "./examples/LiveDataMigrator/MigratorTargetList.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Wandisco.Fusion/migrators/{migratorName}/targets/{migratorTargetName}": {
      "get": {
        "tags": [
          "migratorTarget"
        ],
        "description": "Returns a given Migrator Target.",
        "operationId": "Targets_Get",
        "parameters": [
          {
            "$ref": "./commonTypes.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./commonTypes.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./commonTypes.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/MigratorNameParameter"
          },
          {
            "$ref": "#/parameters/MigratorTargetNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "migrator target details.",
            "schema": {
              "$ref": "#/definitions/MigratorTarget"
            }
          },
          "default": {
            "description": "Error response describing the reason for operation failure.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get Migrator Target by name": {
            "$ref": "./examples/LiveDataMigrator/MigratorTargetGet.json"
          }
        }
      },
      "put": {
        "tags": [
          "migratorTarget"
        ],
        "description": "Creates a Migrator Target.",
        "operationId": "Targets_CreateOrUpdate",
        "parameters": [
          {
            "$ref": "./commonTypes.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./commonTypes.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./commonTypes.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/MigratorNameParameter"
          },
          {
            "$ref": "#/parameters/MigratorTargetNameParameter"
          },
          {
            "name": "MigratorTarget",
            "description": "migrator target details.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MigratorTarget"
            }
          }
        ],
        "x-ms-examples": {
          "Create Migrator Target": {
            "$ref": "./examples/LiveDataMigrator/MigratorTargetCreate.json"
          }
        },
        "responses": {
          "200": {
            "description": "Updating Migrator Target.",
            "schema": {
              "$ref": "#/definitions/MigratorTarget"
            }
          },
          "201": {
            "description": "Creating Migrator Target.",
            "schema": {
              "$ref": "#/definitions/MigratorTarget"
            }
          },
          "default": {
            "description": "Error response describing the reason for operation failure.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      },
      "patch": {
        "tags": [
          "migratorTarget"
        ],
        "description": "Updates a given Migrator Target.",
        "operationId": "Targets_Update",
        "parameters": [
          {
            "$ref": "./commonTypes.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./commonTypes.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./commonTypes.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/MigratorNameParameter"
          },
          {
            "$ref": "#/parameters/MigratorTargetNameParameter"
          },
          {
            "name": "Migrator Target",
            "description": "migrator target update details.",
            "in": "body",
            "schema": {
              "$ref": "./commonTypes.json#/definitions/TagsUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Updating Migrator Target.",
            "schema": {
              "$ref": "#/definitions/MigratorTarget"
            }
          },
          "default": {
            "description": "Error response describing the reason for operation failure",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Successful Migrator Target Patch": {
            "$ref": "./examples/LiveDataMigrator/MigratorTargetPatch.json"
          }
        }
      },
      "delete": {
        "tags": [
          "migratorTarget"
        ],
        "description": "Deletes a given Migrator Target.",
        "operationId": "Targets_Delete",
        "parameters": [
          {
            "$ref": "./commonTypes.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./commonTypes.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./commonTypes.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/MigratorNameParameter"
          },
          {
            "$ref": "#/parameters/MigratorTargetNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The Migrator Target was successfully deleted"
          },
          "202": {
            "description": "The Migrator Target was accepted for deletion"
          },
          "204": {
            "description": "The Migrator Target was not found"
          },
          "default": {
            "description": "Error response describing the reason for operation failure.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Successful migrator target delete": {
            "$ref": "./examples/LiveDataMigrator/MigratorTargetDelete.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Wandisco.Fusion/migrators/{migratorName}/pathMappings": {
      "get": {
        "tags": [
          "LiveDataPathMappings"
        ],
        "description": "Returns a list of LiveDataPathMappings",
        "operationId": "PathMappings_ListByMigrator",
        "parameters": [
          {
            "$ref": "./commonTypes.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./commonTypes.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./commonTypes.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/MigratorNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "List of LiveDataPathMapping Details",
            "schema": {
              "$ref": "#/definitions/LiveDataPathMappingList"
            }
          },
          "default": {
            "description": "Error response describing the reason for operation failure.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "deprecated": false,
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "Get LiveDataPathMappings": {
            "$ref": "./examples/LiveDataMigrator/PathMappingList.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Wandisco.Fusion/migrators/{migratorName}/pathMappings/{pathMappingName}": {
      "get": {
        "tags": [
          "LiveDataPathMappings"
        ],
        "description": "Returns an LiveDataPathMapping",
        "operationId": "PathMappings_Get",
        "parameters": [
          {
            "$ref": "./commonTypes.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./commonTypes.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./commonTypes.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/MigratorNameParameter"
          },
          {
            "$ref": "#/parameters/LiveDataPathMappingsNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "LiveDataPathMappingDetails",
            "schema": {
              "$ref": "#/definitions/LiveDataPathMapping"
            }
          },
          "default": {
            "description": "Error response describing the reason for operation failure.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get LiveDataPathMapping": {
            "$ref": "./examples/LiveDataMigrator/PathMappingGet.json"
          }
        }
      },
      "put": {
        "tags": [
          "LiveDataPathMappings"
        ],
        "description": "Creates an LiveDataPathMapping",
        "operationId": "PathMappings_CreateOrUpdate",
        "parameters": [
          {
            "$ref": "./commonTypes.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./commonTypes.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./commonTypes.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/MigratorNameParameter"
          },
          {
            "$ref": "#/parameters/LiveDataPathMappingsNameParameter"
          },
          {
            "name": "pathMapping",
            "description": "LiveDataPathMapping details.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LiveDataPathMapping"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Created LiveDataPathMapping.",
            "schema": {
              "$ref": "#/definitions/LiveDataPathMapping"
            }
          },
          "201": {
            "description": "Creating LiveDataPathMapping.",
            "schema": {
              "$ref": "#/definitions/LiveDataPathMapping"
            }
          },
          "default": {
            "description": "Error response describing the reason for operation failure.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Creating LiveDataPathMapping": {
            "$ref": "./examples/LiveDataMigrator/PathMappingCreate.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      },
      "patch": {
        "tags": [
          "LiveDataPathMappings"
        ],
        "description": "Update an LiveDataPathMapping",
        "operationId": "PathMappings_Update",
        "parameters": [
          {
            "$ref": "./commonTypes.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./commonTypes.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./commonTypes.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/MigratorNameParameter"
          },
          {
            "$ref": "#/parameters/LiveDataPathMappingsNameParameter"
          },
          {
            "name": "pathMapping",
            "description": "pathMapping update details",
            "in": "body",
            "schema": {
              "$ref": "./commonTypes.json#/definitions/TagsUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Updating LiveDataPathMapping.",
            "schema": {
              "$ref": "#/definitions/LiveDataPathMapping"
            }
          },
          "default": {
            "description": "Error response describing the reason for operation failure",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Patch LiveDataPathMapping": {
            "$ref": "./examples/LiveDataMigrator/PathMappingPatch.json"
          }
        }
      },
      "delete": {
        "tags": [
          "LiveDataPathMappings"
        ],
        "description": "Deletes a given LiveDataPathMapping.",
        "operationId": "PathMappings_Delete",
        "parameters": [
          {
            "$ref": "./commonTypes.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./commonTypes.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./commonTypes.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/MigratorNameParameter"
          },
          {
            "$ref": "#/parameters/LiveDataPathMappingsNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The LiveDataPathMapping was successfully deleted"
          },
          "202": {
            "description": "The LiveDataPathMapping was accepted for deletion"
          },
          "204": {
            "description": "The LiveDataPathMapping was not found"
          },
          "default": {
            "description": "Error response describing the reason for operation failure.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Successful path mapping delete": {
            "$ref": "./examples/LiveDataMigrator/PathMappingDelete.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Wandisco.Fusion/migrators/{migratorName}/exclusionTemplates": {
      "get": {
        "tags": [
          "ExclusionTemplates"
        ],
        "description": "Returns a list of Exclusion Templates",
        "operationId": "ExclusionTemplates_ListByMigrator",
        "parameters": [
          {
            "$ref": "./commonTypes.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./commonTypes.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./commonTypes.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/MigratorNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "List of Exclusion Template Details",
            "schema": {
              "$ref": "#/definitions/ExclusionTemplateList"
            }
          },
          "default": {
            "description": "Error response describing the reason for operation failure.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "deprecated": false,
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "Get Exclusion Templates": {
            "$ref": "./examples/LiveDataMigrator/ExclusionTemplateList.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Wandisco.Fusion/migrators/{migratorName}/exclusionTemplates/{exclusionTemplateName}": {
      "get": {
        "tags": [
          "ExclusionTemplates"
        ],
        "description": "Returns an Exclusion Template",
        "operationId": "ExclusionTemplates_Get",
        "parameters": [
          {
            "$ref": "./commonTypes.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./commonTypes.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./commonTypes.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/MigratorNameParameter"
          },
          {
            "$ref": "#/parameters/ExclusionTemplateNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ExclusionTemplateDetails",
            "schema": {
              "$ref": "#/definitions/ExclusionTemplate"
            }
          },
          "default": {
            "description": "Error response describing the reason for operation failure.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get Exclusion": {
            "$ref": "./examples/LiveDataMigrator/ExclusionTemplateGet.json"
          }
        }
      },
      "put": {
        "tags": [
          "ExclusionTemplates"
        ],
        "description": "Creates an Exclusion Template",
        "operationId": "ExclusionTemplates_Create",
        "parameters": [
          {
            "$ref": "./commonTypes.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./commonTypes.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./commonTypes.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/MigratorNameParameter"
          },
          {
            "$ref": "#/parameters/ExclusionTemplateNameParameter"
          },
          {
            "name": "exclusion",
            "description": "Exclusion Template details.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ExclusionTemplate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Created Exclusion Template.",
            "schema": {
              "$ref": "#/definitions/ExclusionTemplate"
            }
          },
          "201": {
            "description": "Creating Exclusion Template.",
            "schema": {
              "$ref": "#/definitions/ExclusionTemplate"
            }
          },
          "default": {
            "description": "Error response describing the reason for operation failure.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Creating Exclusion": {
            "$ref": "./examples/LiveDataMigrator/ExclusionTemplateCreate.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      },
      "patch": {
        "tags": [
          "ExclusionTemplates"
        ],
        "description": "Update an Exclusion",
        "operationId": "ExclusionTemplates_Update",
        "parameters": [
          {
            "$ref": "./commonTypes.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./commonTypes.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./commonTypes.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/MigratorNameParameter"
          },
          {
            "$ref": "#/parameters/ExclusionTemplateNameParameter"
          },
          {
            "name": "exclusion",
            "description": "exclusion template update details",
            "in": "body",
            "schema": {
              "$ref": "./commonTypes.json#/definitions/TagsUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Updating Exclusion Template.",
            "schema": {
              "$ref": "#/definitions/ExclusionTemplate"
            }
          },
          "default": {
            "description": "Error response describing the reason for operation failure",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Patch Exclusion": {
            "$ref": "./examples/LiveDataMigrator/ExclusionTemplatePatch.json"
          }
        }
      },
      "delete": {
        "tags": [
          "ExclusionTemplates"
        ],
        "description": "Deletes a given Exclusion Template.",
        "operationId": "ExclusionTemplates_Delete",
        "parameters": [
          {
            "$ref": "./commonTypes.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./commonTypes.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./commonTypes.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/MigratorNameParameter"
          },
          {
            "$ref": "#/parameters/ExclusionTemplateNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The Exclusion Template was successfully deleted"
          },
          "202": {
            "description": "The Exclusion Template was accepted for deletion"
          },
          "204": {
            "description": "The Exclusion Template was not found"
          },
          "default": {
            "description": "Error response describing the reason for operation failure.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Successful exclusion template delete": {
            "$ref": "./examples/LiveDataMigrator/ExclusionTemplateDelete.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Wandisco.Fusion/migrators/{migratorName}/metadataTargets": {
      "get": {
        "tags": [
          "metadataTarget"
        ],
        "description": "Returns list of Metadata Targets.",
        "operationId": "MetadataTargets_ListByMigrator",
        "parameters": [
          {
            "$ref": "./commonTypes.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./commonTypes.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./commonTypes.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/MigratorNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "List of Metadata Targets for specified Migrator.",
            "schema": {
              "$ref": "#/definitions/MetadataTargetList"
            }
          },
          "default": {
            "description": "Error response describing the reason for operation failure.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "deprecated": false,
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "Get Metadata Target list": {
            "$ref": "./examples/LiveDataMigrator/MetadataTargetList.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Wandisco.Fusion/migrators/{migratorName}/metadataTargets/{metadataTargetName}": {
      "get": {
        "tags": [
          "metadataTarget"
        ],
        "description": "Returns a given Metadata Target.",
        "operationId": "MetadataTargets_Get",
        "parameters": [
          {
            "$ref": "./commonTypes.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./commonTypes.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./commonTypes.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/MigratorNameParameter"
          },
          {
            "$ref": "#/parameters/MetadataTargetNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "metadata target details.",
            "schema": {
              "$ref": "#/definitions/MetadataTarget"
            }
          },
          "default": {
            "description": "Error response describing the reason for operation failure.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get Migrator Metadata Target by name": {
            "$ref": "./examples/LiveDataMigrator/MetadataTargetGet.json"
          }
        }
      },
      "put": {
        "tags": [
          "metadataTarget"
        ],
        "description": "Creates a Metadata Target.",
        "operationId": "MetadataTargets_CreateOrUpdate",
        "parameters": [
          {
            "$ref": "./commonTypes.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./commonTypes.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./commonTypes.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/MigratorNameParameter"
          },
          {
            "$ref": "#/parameters/MetadataTargetNameParameter"
          },
          {
            "name": "MetadataTarget",
            "description": "metadata target details.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MetadataTarget"
            }
          }
        ],
        "x-ms-examples": {
          "Create Metadata Target": {
            "$ref": "./examples/LiveDataMigrator/MetadataTargetCreate.json"
          }
        },
        "responses": {
          "200": {
            "description": "Updating Metadata Target.",
            "schema": {
              "$ref": "#/definitions/MetadataTarget"
            }
          },
          "201": {
            "description": "Creating Metadata Target.",
            "schema": {
              "$ref": "#/definitions/MetadataTarget"
            }
          },
          "default": {
            "description": "Error response describing the reason for operation failure.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      },
      "patch": {
        "tags": [
          "metadataTarget"
        ],
        "description": "Updates a given Metadata Target.",
        "operationId": "MetadataTargets_Update",
        "parameters": [
          {
            "$ref": "./commonTypes.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./commonTypes.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./commonTypes.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/MigratorNameParameter"
          },
          {
            "$ref": "#/parameters/MetadataTargetNameParameter"
          },
          {
            "name": "Metadata Target",
            "description": "Metadata target update details.",
            "in": "body",
            "schema": {
              "$ref": "./commonTypes.json#/definitions/TagsUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Updating Metadata Target.",
            "schema": {
              "$ref": "#/definitions/MetadataTarget"
            }
          },
          "default": {
            "description": "Error response describing the reason for operation failure",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Successful Migrator Metadata Target Patch": {
            "$ref": "./examples/LiveDataMigrator/MetadataTargetPatch.json"
          }
        }
      },
      "delete": {
        "tags": [
          "metadataTarget"
        ],
        "description": "Deletes a given Metadata Target.",
        "operationId": "MetadataTargets_Delete",
        "parameters": [
          {
            "$ref": "./commonTypes.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./commonTypes.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./commonTypes.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/MigratorNameParameter"
          },
          {
            "$ref": "#/parameters/MetadataTargetNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The Metadata Target was successfully deleted"
          },
          "202": {
            "description": "The Metadata Target was accepted for deletion"
          },
          "204": {
            "description": "The Metadata Target was not found"
          },
          "default": {
            "description": "Error response describing the reason for operation failure.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Successful metadata target delete": {
            "$ref": "./examples/LiveDataMigrator/MetadataTargetDelete.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Wandisco.Fusion/migrators/{migratorName}/metadataMigrations": {
      "get": {
        "tags": [
          "metadataMigration"
        ],
        "description": "Returns list of Metadata Migrations.",
        "operationId": "MetadataMigrations_ListByMigrator",
        "parameters": [
          {
            "$ref": "./commonTypes.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./commonTypes.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./commonTypes.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/MigratorNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "List of Metadata Migrations for specified Migrator.",
            "schema": {
              "$ref": "#/definitions/MetadataMigrationList"
            }
          },
          "default": {
            "description": "Error response describing the reason for operation failure.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "deprecated": false,
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "Get Migrator Metadata Migrations list": {
            "$ref": "./examples/LiveDataMigrator/MetadataMigrationList.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Wandisco.Fusion/migrators/{migratorName}/metadataMigrations/{migrationName}": {
      "get": {
        "tags": [
          "metadataMigration"
        ],
        "description": "Returns a given Metadata Migration.",
        "operationId": "MetadataMigrations_Get",
        "parameters": [
          {
            "$ref": "./commonTypes.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./commonTypes.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./commonTypes.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/MigratorNameParameter"
          },
          {
            "$ref": "#/parameters/MetadataMigrationNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "metadata migration details.",
            "schema": {
              "$ref": "#/definitions/MetadataMigration"
            }
          },
          "default": {
            "description": "Error response describing the reason for operation failure.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get Migrator Metadata Migration by name": {
            "$ref": "./examples/LiveDataMigrator/MetadataMigrationGet.json"
          }
        }
      },
      "put": {
        "tags": [
          "metadataMigration"
        ],
        "description": "Creates a Metadata Migration.",
        "operationId": "MetadataMigrations_CreateOrUpdate",
        "parameters": [
          {
            "$ref": "./commonTypes.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./commonTypes.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./commonTypes.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/MigratorNameParameter"
          },
          {
            "$ref": "#/parameters/MetadataMigrationNameParameter"
          },
          {
            "name": "MetadataMigration",
            "description": "metadata migration details.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MetadataMigration"
            }
          }
        ],
        "x-ms-examples": {
          "Create Metadata Migration": {
            "$ref": "./examples/LiveDataMigrator/MetadataMigrationCreate.json"
          }
        },
        "responses": {
          "200": {
            "description": "Metadata Migration Created.",
            "schema": {
              "$ref": "#/definitions/MetadataMigration"
            }
          },
          "201": {
            "description": "Creating Metadata Migration.",
            "schema": {
              "$ref": "#/definitions/MetadataMigration"
            }
          },
          "default": {
            "description": "Error response describing the reason for operation failure.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      },
      "patch": {
        "tags": [
          "metadataMigration"
        ],
        "description": "Updates a given Metadata Migration.",
        "operationId": "MetadataMigrations_Update",
        "parameters": [
          {
            "$ref": "./commonTypes.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./commonTypes.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./commonTypes.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/MigratorNameParameter"
          },
          {
            "$ref": "#/parameters/MetadataMigrationNameParameter"
          },
          {
            "name": "Metadata Migration",
            "description": "Metadata migration update details.",
            "in": "body",
            "schema": {
              "$ref": "./commonTypes.json#/definitions/TagsUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Updating Metadata Migration.",
            "schema": {
              "$ref": "#/definitions/MetadataMigration"
            }
          },
          "default": {
            "description": "Error response describing the reason for operation failure",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Successful Metadata Migration Patch": {
            "$ref": "./examples/LiveDataMigrator/MetadataMigrationPatch.json"
          }
        }
      },
      "delete": {
        "tags": [
          "metadataMigration"
        ],
        "description": "Deletes a given Metadata Migration.",
        "operationId": "MetadataMigrations_Delete",
        "parameters": [
          {
            "$ref": "./commonTypes.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./commonTypes.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./commonTypes.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/MigratorNameParameter"
          },
          {
            "$ref": "#/parameters/MetadataMigrationNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The Metadata Migration was successfully deleted"
          },
          "202": {
            "description": "The Metadata Migration was accepted for deletion"
          },
          "204": {
            "description": "The Metadata Migration was not found"
          },
          "default": {
            "description": "Error response describing the reason for operation failure.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Successful metadata migration delete": {
            "$ref": "./examples/LiveDataMigrator/MetadataMigrationDelete.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Wandisco.Fusion/migrators/{migratorName}/metadataMigrations/{migrationName}/start": {
      "post": {
        "tags": [
          "metadataMigration"
        ],
        "description": "Start an existing metadata migration",
        "operationId": "MetadataMigrations_Start",
        "parameters": [
          {
            "$ref": "./commonTypes.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./commonTypes.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./commonTypes.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/MigratorNameParameter"
          },
          {
            "$ref": "#/parameters/MigrationNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The request has succeeded."
          },
          "default": {
            "description": "Error response describing the reason for operation failure.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Start Metadata Migration": {
            "$ref": "./examples/LiveDataMigrator/MetadataMigrationStart.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Wandisco.Fusion/migrators/{migratorName}/metadataMigrations/{migrationName}/stop": {
      "post": {
        "tags": [
          "metadataMigration"
        ],
        "description": "Stop a metadata migration",
        "operationId": "MetadataMigrations_Stop",
        "parameters": [
          {
            "$ref": "./commonTypes.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./commonTypes.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./commonTypes.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/MigratorNameParameter"
          },
          {
            "$ref": "#/parameters/MigrationNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The request has succeeded."
          },
          "default": {
            "description": "Error response describing the reason for operation failure.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Stop Metadata Migration": {
            "$ref": "./examples/LiveDataMigrator/MetadataMigrationStop.json"
          }
        }
      }
    }
  },
  "definitions": {
    "TagsAndExclusionUpdate": {
      "description": "Fields patchable on LiveDataMigration",
      "type": "object",
      "allOf": [
        {
          "$ref": "./commonTypes.json#/definitions/TagsUpdate"
        }
      ],
      "properties": {
        "properties": {
          "title": "properties",
          "description": "TagsAndExclusionUpdate properties",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "exclusions": {
              "type": "array",
              "readOnly": false,
              "description": "List exclusions to be applied to the migration",
              "items": {
                "$ref": "#/definitions/LDMExclusion"
              }
            }
          }
        }
      }
    },
    "VirtualMachineIdentity": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "description": "The type of identity used for the virtual machine.",
          "enum": [
            "UserAssigned",
            "None"
          ],
          "x-ms-enum": {
            "name": "ResourceIdentityType",
            "modelAsString": false
          }
        },
        "userAssignedIdentities": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/UserAssignedIdentities"
          },
          "description": "The list of user identities associated with the Virtual Machine. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'."
        }
      },
      "description": "Identity for the virtual machine."
    },
    "UserAssignedIdentities": {
      "type": "object",
      "description": "The list of user identities associated with the Virtual Machine.",
      "properties": {
        "principalId": {
          "readOnly": true,
          "type": "string",
          "description": "The principal id of user assigned identity."
        },
        "clientId": {
          "readOnly": true,
          "type": "string",
          "description": "The client id of user assigned identity."
        }
      }
    },
    "LiveDataPathMapping": {
      "description": "LiveDataPathMapping Resource",
      "type": "object",
      "allOf": [
        {
          "$ref": "./commonTypes.json#/definitions/FrpResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "LiveDataPathMapping Properties",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/LiveDataPathMappingProperties"
        }
      }
    },
    "LiveDataPathMappingDetails": {
      "description": "LiveDataPathMapping details Resource",
      "type": "object",
      "properties": {
        "sourcePath": {
          "type": "string",
          "description": "Source FileSystem path"
        },
        "targetId": {
          "type": "string",
          "description": "Target FileSystem resource Id"
        },
        "targetPath": {
          "type": "string",
          "description": "Target FileSystem path"
        }
      }
    },
    "LiveDataPathMappingList": {
      "description": "The list of LiveDataPathMappings.",
      "type": "object",
      "properties": {
        "nextLink": {
          "description": "The link used to get the next page of LiveDataPathMappings list.",
          "type": "string"
        },
        "value": {
          "description": "The list of LiveDataPathMappings.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/LiveDataPathMapping"
          }
        }
      }
    },
    "LiveDataPathMappingProperties": {
      "description": "LiveDataPathMapping Properties",
      "type": "object",
      "properties": {
        "provisioningState": {
          "title": "ProvisioningState",
          "description": "Provisioning State of resource",
          "$ref": "./commonTypes.json#/definitions/ProvisioningState",
          "readOnly": true
        },
        "description": {
          "type": "string",
          "description": "Explains what this pathMapping does"
        },
        "sourceFileSystem": {
          "type": "string",
          "description": "Source FileSystem type"
        },
        "sourcePath": {
          "type": "string",
          "description": "Source FileSystem path"
        },
        "targetId": {
          "type": "string",
          "description": "Target FileSystem type"
        },
        "targetPath": {
          "type": "string",
          "description": "Target FileSystem path"
        }
      },
      "required": [
        "sourcePath",
        "targetId",
        "targetPath"
      ]
    },
    "ExclusionTemplate": {
      "description": "Exclusion Template Resource",
      "type": "object",
      "allOf": [
        {
          "$ref": "./commonTypes.json#/definitions/FrpResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "Exclusion Template Representation",
          "x-ms-client-flatten": false,
          "$ref": "#/definitions/ExclusionRepresentation"
        }
      },
      "required": [
        "properties"
      ],
      "x-ms-azure-resource": true
    },
    "ExclusionTemplateList": {
      "description": "The list of Exclusion Templates.",
      "type": "object",
      "properties": {
        "nextLink": {
          "description": "The link used to get the next page of Exclusion Templates list.",
          "type": "string"
        },
        "value": {
          "description": "The list of Exclusion Templates.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExclusionTemplate"
          }
        }
      }
    },
    "LDMExclusion": {
      "description": "LDM Exclusion",
      "type": "object",
      "properties": {
        "isFsRestriction": {
          "type": "boolean",
          "description": "Indicates whether this Exclusion is a Default Exclusion bounded by FileSystem limitation."
        },
        "isDefault": {
          "type": "boolean",
          "description": "Indicates whether this Exclusion is a Default Exclusion or a User Defined Exclusion from Exclusion Template."
        },
        "name": {
          "description": "The name of the exclusion. If it is User Defined Exclusion, then name would be the same as referenced Exclusion Template's name",
          "type": "string"
        },
        "details": {
          "type": "object",
          "$ref": "#/definitions/LDMExclusionDetail",
          "description": "The details of the exclusion"
        }
      },
      "required": [
        "name"
      ]
    },
    "LDMExclusionDetail": {
      "description": "LDM Exclusion",
      "type": "object",
      "discriminator": "exclusionKind",
      "properties": {
        "exclusionKind": {
          "$ref": "#/definitions/ExclusionKind",
          "description": "The kind of Exclusion."
        },
        "description": {
          "type": "string",
          "description": "Explains what this exclusion does"
        }
      },
      "required": [
        "exclusionKind"
      ]
    },
    "LDMDateExclusion": {
      "description": "Live Data Migrator Exclusion based on Date",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/LDMExclusionDetail"
        }
      ],
      "properties": {
        "dateForExclusion": {
          "description": "Any file with a date earlier than dateForExclusion will be excluded",
          "type": "string",
          "format": "date-time"
        }
      },
      "required": [
        "dateForExclusion"
      ],
      "x-ms-discriminator-value": "DateExclusion"
    },
    "LDMFileSizeExclusion": {
      "description": "Live Date Migrator Exclusion based on File Size",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/LDMExclusionDetail"
        }
      ],
      "properties": {
        "maxFileSizeBytes": {
          "description": "Any file with a file size greater than maxFileSizeBytes will be excluded",
          "type": "integer",
          "format": "int64"
        }
      },
      "required": [
        "maxFileSizeBytes"
      ],
      "x-ms-discriminator-value": "FileSizeExclusion"
    },
    "LDMPatternExclusion": {
      "description": "Live Data Migrator Exclusion based on Pattern",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/LDMExclusionDetail"
        }
      ],
      "properties": {
        "pattern": {
          "description": "Any file path matching the pattern in pattern will be excluded",
          "type": "string"
        },
        "patternType": {
          "description": "Pattern type.",
          "type": "string"
        }
      },
      "required": [
        "pattern",
        "patternType"
      ],
      "x-ms-discriminator-value": "PatternExclusion"
    },
    "ExclusionRepresentation": {
      "description": "Exclusion Representation",
      "type": "object",
      "discriminator": "exclusionKind",
      "properties": {
        "exclusionKind": {
          "$ref": "#/definitions/ExclusionKind",
          "description": "The kind of Exclusion."
        },
        "provisioningState": {
          "title": "ProvisioningState",
          "description": "Provisioning State of resource",
          "$ref": "./commonTypes.json#/definitions/ProvisioningState",
          "readOnly": true
        },
        "description": {
          "type": "string",
          "description": "Explains what this exclusion does"
        }
      },
      "required": [
        "exclusionKind"
      ]
    },
    "ExclusionKind": {
      "type": "string",
      "description": "The kind of Exclusion.",
      "enum": [
        "DateExclusion",
        "FileSizeExclusion",
        "PatternExclusion"
      ],
      "x-ms-enum": {
        "name": "ExclusionKind",
        "modelAsString": false,
        "values": [
          {
            "value": "DateExclusion"
          },
          {
            "value": "FileSizeExclusion"
          },
          {
            "value": "PatternExclusion"
          }
        ]
      }
    },
    "DateExclusion": {
      "description": "Migration Exclusion based on Date",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ExclusionRepresentation"
        }
      ],
      "properties": {
        "dateForExclusion": {
          "description": "Any file with a date earlier than dateForExclusion will be excluded",
          "type": "string",
          "format": "date-time"
        }
      },
      "required": [
        "dateForExclusion"
      ],
      "x-ms-discriminator-value": "DateExclusion"
    },
    "FileSizeExclusion": {
      "description": "Exclusion based on File Size",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ExclusionRepresentation"
        }
      ],
      "properties": {
        "maxFileSizeBytes": {
          "description": "Any file with a file size greater than maxFileSizeBytes will be excluded",
          "type": "integer",
          "format": "int64"
        }
      },
      "required": [
        "maxFileSizeBytes"
      ],
      "x-ms-discriminator-value": "FileSizeExclusion"
    },
    "PatternExclusion": {
      "description": "Migrator Exclusion based on GLOB Pattern",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ExclusionRepresentation"
        }
      ],
      "properties": {
        "patternForExclusion": {
          "description": "Any file path matching the pattern in patternForExclusion will be excluded",
          "type": "string"
        }
      },
      "required": [
        "patternForExclusion"
      ],
      "x-ms-discriminator-value": "PatternExclusion"
    },
    "Migrator": {
      "description": "Migrator Resource",
      "type": "object",
      "allOf": [
        {
          "$ref": "./commonTypes.json#/definitions/FrpResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "Migrator resource properties",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/MigratorProperties"
        },
        "plan": {
          "description": "Plan to use for Store purchase",
          "$ref": "./commonTypes.json#/definitions/Plan"
        }
      }
    },
    "MigratorList": {
      "description": "The list of Migrators.",
      "type": "object",
      "properties": {
        "nextLink": {
          "description": "The link used to get the next page of migrators list.",
          "type": "string"
        },
        "value": {
          "description": "The list of migrators.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Migrator"
          }
        }
      }
    },
    "MigratorProperties": {
      "description": "Migrator properties",
      "type": "object",
      "properties": {
        "provisioningState": {
          "title": "ProvisioningState",
          "description": "Provisioning State of resource",
          "$ref": "./commonTypes.json#/definitions/ProvisioningState",
          "readOnly": true
        },
        "deploymentType": {
          "description": "The type of install required for the migrator",
          "type": "string",
          "enum": [
            "DEB",
            "RPM"
          ],
          "x-ms-enum": {
            "name": "MigratorDeploymentType",
            "modelAsString": true,
            "values": [
              {
                "value": "DEB"
              },
              {
                "value": "RPM"
              }
            ]
          },
          "default": "RPM"
        },
        "downloadLocation": {
          "description": "The location for downloading deployment files",
          "type": "string",
          "readOnly": true
        },
        "version": {
          "description": "The version of this migrator service",
          "type": "string",
          "readOnly": true
        },
        "latestAvailableVersion": {
          "description": "The latest available version of the migrator service",
          "type": "string",
          "readOnly": true
        },
        "kerberos": {
          "title": "KerberosConfiguration",
          "description": "The configuration properties for authenticating to the source filesystem",
          "$ref": "#/definitions/KerberosConfiguration"
        },
        "metaKerberos": {
          "title": "KerberosConfiguration",
          "description": "The configuration properties for authenticating to the source metadata store",
          "$ref": "#/definitions/KerberosConfiguration"
        },
        "allowance": {
          "title": "Allowance",
          "description": "The remaining allowance for the company associated with the Migrator",
          "$ref": "./commonTypes.json#/definitions/Allowance",
          "readOnly": true
        },
        "migratorStatus": {
          "description": "Status of the Migrator server",
          "$ref": "#/definitions/MigratorDetails"
        },
        "installParameters": {
          "description": "Installation configuration for the Migrator server",
          "type": "object",
          "properties": {
            "user": {
              "description": "The system user to run the process as",
              "type": "string",
              "default": "hdfs"
            },
            "installDir": {
              "description": "The directory under which to install",
              "type": "string",
              "default": "/opt/wandisco"
            },
            "logDir": {
              "description": "The directory where logs will be written",
              "type": "string",
              "default": "/var/log"
            }
          }
        },
        "bandwidthPolicy": {
          "title": "BandwidthPolicy",
          "description": "The overall application bandwidth policy set for a migrator.",
          "$ref": "#/definitions/MigratorBandwidthPolicy",
          "readOnly": true
        }
      }
    },
    "MigratorInstallKey": {
      "title": "MigratorInstallKey",
      "description": "Unique install key of a Migrator",
      "type": "object",
      "properties": {
        "installKey": {
          "description": "Install key",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "MigratorDetails": {
      "title": "MigratorDetails",
      "description": "Details of a migrator",
      "type": "object",
      "properties": {
        "status": {
          "description": "The status of the migrator (Up/Down)",
          "type": "string",
          "enum": [
            "Up",
            "Down"
          ],
          "x-ms-enum": {
            "name": "MigratorServerStatus",
            "modelAsString": true
          }
        },
        "seenAt": {
          "description": "last time a response was received from the server",
          "type": "string",
          "format": "date-time"
        },
        "consecutiveErrors": {
          "description": "failed attempts to reach the server",
          "type": "integer",
          "format": "int32"
        },
        "installState": {
          "title": "MigratorInstallState",
          "description": "The state of the on-prem LiveData Migrator installation.",
          "$ref": "#/definitions/MigratorInstallState",
          "readOnly": true
        },
        "metaInstallState": {
          "title": "MigratorInstallState",
          "description": "The state of the on-prem Migrator metastore installation.",
          "$ref": "#/definitions/MigratorInstallState",
          "readOnly": true
        }
      }
    },
    "MigratorInstallState": {
      "type": "string",
      "description": "The possible Install States",
      "enum": [
        "NotInstalled",
        "InstalledNoSourceDetected",
        "InstalledAndOperational"
      ],
      "x-ms-enum": {
        "name": "MigratorInstallState",
        "modelAsString": false
      }
    },
    "MigratorUpdate": {
      "description": "Migrator Update definition",
      "type": "object",
      "allOf": [
        {
          "$ref": "./commonTypes.json#/definitions/TagsUpdate"
        }
      ],
      "properties": {
        "properties": {
          "title": "properties",
          "description": "MigratorUpdate properties",
          "type": "object",
          "x-ms-client-flatten": true,
          "properties": {
            "bandwidthPolicy": {
              "description": "Overall application bandwidth limit to apply",
              "x-ms-client-flatten": false,
              "$ref": "#/definitions/MigratorBandwidthPolicy"
            },
            "kerberos": {
              "title": "KerberosConfiguration",
              "description": "The configuration properties for authenticating to the source filesystem",
              "$ref": "#/definitions/KerberosConfiguration"
            },
            "metaKerberos": {
              "title": "KerberosConfiguration",
              "description": "The configuration properties for authenticating to the source metastore",
              "$ref": "#/definitions/KerberosConfiguration"
            }
          }
        }
      }
    },
    "MigratorBandwidthPolicy": {
      "description": "BandwidthPolicy for a Migrator resource.",
      "type": "object",
      "properties": {
        "maxBytesPerSec": {
          "description": "Overall application bandwidth limit to apply.",
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "MigratorTarget": {
      "description": "Migrator Target Resource",
      "type": "object",
      "allOf": [
        {
          "$ref": "./commonTypes.json#/definitions/FrpResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "Migrator target resource properties",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/MigratorTargetProperties"
        }
      }
    },
    "MigratorTargetList": {
      "description": "The list of Migrator Targets.",
      "type": "object",
      "properties": {
        "nextLink": {
          "description": "The link used to get the next page of migrator targets list.",
          "type": "string"
        },
        "value": {
          "description": "The list of migrator targets.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/MigratorTarget"
          }
        }
      }
    },
    "MigratorTargetProperties": {
      "description": "Migrator target properties",
      "type": "object",
      "properties": {
        "provisioningState": {
          "title": "ProvisioningState",
          "description": "Provisioning State of resource",
          "$ref": "./commonTypes.json#/definitions/ProvisioningState",
          "readOnly": true
        },
        "storageAccountId": {
          "description": "Resource ID of ADLS Gen 2 account to replicate to",
          "type": "string"
        },
        "storageContainer": {
          "description": "Container to target migration to",
          "type": "string"
        },
        "storageAccessKey": {
          "x-ms-secret": true,
          "x-ms-mutability": [
            "create"
          ],
          "description": "Access Key for storage",
          "type": "string"
        },
        "oauthClientId": {
          "description": "Service principal client ID",
          "type": "string"
        },
        "oauthClientSecret": {
          "description": "Service principal client secret",
          "type": "string",
          "x-ms-secret": true,
          "x-ms-mutability": [
            "create"
          ]
        },
        "oauthClientEndpoint": {
          "description": "Service principal endpoint (optional). If not provided it will use the default endpoint for your tenant.",
          "type": "string"
        }
      },
      "required": [
        "storageAccountId",
        "storageContainer"
      ]
    },
    "MetadataTargetList": {
      "description": "The list of Migrator Targets.",
      "type": "object",
      "properties": {
        "nextLink": {
          "description": "The link used to get the next page of metadata targets list.",
          "type": "string"
        },
        "value": {
          "description": "The list of metadata targets.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/MetadataTarget"
          }
        }
      }
    },
    "MetadataTarget": {
      "description": "Metadata Target Resource",
      "type": "object",
      "allOf": [
        {
          "$ref": "./commonTypes.json#/definitions/FrpResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "metadata target properties",
          "x-ms-client-flatten": false,
          "$ref": "#/definitions/MetadataTargetProperties"
        }
      }
    },
    "MetadataTargetProperties": {
      "description": "Properties of Created Rule Name",
      "type": "object",
      "properties": {
        "provisioningState": {
          "title": "ProvisioningState",
          "description": "Provisioning State of resource",
          "$ref": "./commonTypes.json#/definitions/ProvisioningState",
          "readOnly": true
        },
        "metadataTargetKind": {
          "description": "The kind of metadata target.",
          "type": "string",
          "enum": [
            "AzureSqlMetadataTarget"
          ],
          "x-ms-enum": {
            "name": "MetadataTargetKind",
            "modelAsString": true,
            "values": [
              {
                "value": "AzureSqlMetadataTarget"
              }
            ]
          }
        },
        "dataTargetId": {
          "description": "Resource ID of Migrator Target.",
          "type": "string"
        },
        "defaultFsOverride": {
          "description": "Override defaultFs.",
          "type": "string"
        }
      },
      "discriminator": "metadataTargetKind",
      "required": [
        "metadataTargetKind"
      ]
    },
    "AzureSqlMetadataTarget": {
      "description": "Azure SQL Metadata target properties",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/MetadataTargetProperties"
        }
      ],
      "properties": {
        "sqlServerId": {
          "description": "Resource ID of SQL server.",
          "type": "string"
        },
        "sqlDatabase": {
          "description": "Name of SQL database.",
          "type": "string"
        },
        "sqlUser": {
          "description": "User to use to connect to SQL database.",
          "type": "string"
        },
        "sqlPassword": {
          "x-ms-secret": true,
          "x-ms-mutability": [
            "create"
          ],
          "description": "Password for SQL user.",
          "type": "string"
        },
        "hdiVersion": {
          "description": "The HDI version used by the target metadata cluster.",
          "enum": [
            "3.6",
            "4.0"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "AzureSqlHdiVersion",
            "modelAsString": true,
            "values": [
              {
                "value": "3.6"
              },
              {
                "value": "4.0"
              }
            ]
          }
        }
      },
      "required": [
        "sqlServerId",
        "sqlDatabase"
      ],
      "x-ms-discriminator-value": "AzureSqlMetadataTarget"
    },
    "MetadataMigrationList": {
      "description": "The list of Migrator Metadata Migrations.",
      "type": "object",
      "properties": {
        "nextLink": {
          "description": "The link used to get the next page of metadata migrations list.",
          "type": "string"
        },
        "value": {
          "description": "The list of metadata migrations.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/MetadataMigration"
          }
        }
      }
    },
    "MetadataMigration": {
      "description": "Metadata migration properties",
      "type": "object",
      "allOf": [
        {
          "$ref": "./commonTypes.json#/definitions/FrpResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "Metadata migration properties",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/MetadataMigrationProperties"
        }
      }
    },
    "MetadataMigrationProperties": {
      "description": "Metadata migration properties",
      "type": "object",
      "properties": {
        "provisioningState": {
          "title": "ProvisioningState",
          "description": "Provisioning State of resource",
          "$ref": "./commonTypes.json#/definitions/ProvisioningState",
          "readOnly": true
        },
        "pathMappings": {
          "title": "LiveDataPathMappingDetailsList",
          "description": "List of LiveDataPathMappingDetails of each path mapping in migration",
          "type": "array",
          "items": {
            "$ref": "#/definitions/LiveDataPathMappingDetails"
          },
          "readOnly": true
        },
        "dbNamePattern": {
          "type": "string",
          "description": "Pattern to select which databases get migrated"
        },
        "tableNamePattern": {
          "type": "string",
          "description": "Pattern to select which tables get migrated"
        },
        "targetId": {
          "type": "string",
          "description": "Resource ID of Migrator Metadata Target."
        },
        "autoStart": {
          "description": "Flag to start migration immediately",
          "type": "boolean",
          "default": false
        },
        "state": {
          "description": "Running state of the migration",
          "type": "string",
          "enum": [
            "Created",
            "Running",
            "Stopped",
            "Failed"
          ],
          "x-ms-enum": {
            "name": "MetadataMigrationState",
            "modelAsString": true,
            "values": [
              {
                "value": "Created"
              },
              {
                "value": "Running"
              },
              {
                "value": "Stopped"
              },
              {
                "value": "Failed"
              }
            ]
          }
        },
        "migratedItems": {
          "description": "The number of items migrated",
          "type": "integer",
          "format": "int32",
          "readOnly": true
        }
      },
      "required": [
        "dbNamePattern",
        "tableNamePattern"
      ]
    },
    "LiveDataMigration": {
      "description": "Instance of a Migrator migration",
      "type": "object",
      "allOf": [
        {
          "$ref": "./commonTypes.json#/definitions/FrpResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "Migration properties",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/LiveDataMigrationProperties"
        }
      }
    },
    "LiveDataMigrationList": {
      "description": "The list of Migrator Migrations.",
      "type": "object",
      "properties": {
        "nextLink": {
          "description": "The link used to get the next page of Migrator Migrations list.",
          "type": "string"
        },
        "value": {
          "description": "The list of migrations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/LiveDataMigration"
          }
        }
      }
    },
    "LiveDataMigrationProperties": {
      "description": "Properties of migrator migration",
      "type": "object",
      "properties": {
        "path": {
          "type": "string",
          "description": "Migration path on the source file system"
        },
        "provisioningState": {
          "title": "ProvisioningState",
          "description": "Provisioning State of resource",
          "$ref": "./commonTypes.json#/definitions/ProvisioningState",
          "readOnly": true
        },
        "targetId": {
          "type": "string",
          "description": "ID of the target file system"
        },
        "autoStart": {
          "description": "Flag to start migration immediately",
          "type": "boolean"
        },
        "pathMappings": {
          "title": "LiveDataPathMappingDetailsList",
          "description": "List of LiveDataPathMappingDetails of each path mapping in migration",
          "type": "array",
          "items": {
            "$ref": "#/definitions/LiveDataPathMappingDetails"
          },
          "readOnly": true
        },
        "exclusions": {
          "type": "array",
          "description": "List of exclusion applied to the migration",
          "items": {
            "$ref": "#/definitions/LDMExclusion"
          }
        },
        "scanOnly": {
          "description": "Flag marking a Non Live migration",
          "type": "boolean",
          "default": false
        },
        "targetActionPolicy": {
          "description": "The policy to use when replacing files on the target",
          "type": "string",
          "enum": [
            "Overwrite",
            "SkipIfSizeMatch"
          ],
          "default": "Overwrite",
          "x-ms-enum": {
            "name": "TargetActionPolicy",
            "modelAsString": true,
            "values": [
              {
                "value": "Overwrite"
              },
              {
                "value": "SkipIfSizeMatch"
              }
            ]
          }
        },
        "migrationStatus": {
          "description": "Status of the Migration",
          "type": "string",
          "readOnly": true,
          "enum": [
            "Non-Scheduled",
            "Scheduled",
            "Running",
            "Live",
            "Paused",
            "Stopping",
            "Stopped",
            "Completed"
          ],
          "x-ms-enum": {
            "name": "LiveDataMigrationState",
            "modelAsString": true,
            "values": [
              {
                "value": "Non-Scheduled"
              },
              {
                "value": "Scheduled"
              },
              {
                "value": "Running"
              },
              {
                "value": "Live"
              },
              {
                "value": "Paused"
              },
              {
                "value": "Stopping"
              },
              {
                "value": "Stopped"
              },
              {
                "value": "Completed"
              }
            ]
          }
        },
        "migrationId": {
          "description": "Unique Identifier for the migration",
          "type": "string",
          "readOnly": true
        }
      },
      "required": [
        "path",
        "targetId"
      ]
    },
    "KerberosConfiguration": {
      "type": "object",
      "description": "The configuration properties for authenticating using Kerberos",
      "properties": {
        "enabled": {
          "description": "The client will use kerberos authentication if enabled is true",
          "type": "boolean"
        },
        "principal": {
          "description": "The principal the client should use",
          "type": "string"
        },
        "keytabLocation": {
          "description": "The location of the keytab file for the client to use",
          "type": "string"
        }
      }
    }
  },
  "parameters": {
    "MigratorNameParameter": {
      "name": "migratorName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the migrator resource.",
      "x-ms-parameter-location": "method"
    },
    "MigratorTargetNameParameter": {
      "name": "migratorTargetName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the migrator target resource.",
      "x-ms-parameter-location": "method"
    },
    "MigrationNameParameter": {
      "name": "migrationName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The id for migration",
      "x-ms-parameter-location": "method"
    },
    "MetadataMigrationNameParameter": {
      "name": "migrationName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the migrator metadata migration resource.",
      "x-ms-parameter-location": "method"
    },
    "MetadataTargetNameParameter": {
      "name": "metadataTargetName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the metadata target resource.",
      "x-ms-parameter-location": "method"
    },
    "LiveDataPathMappingsNameParameter": {
      "name": "pathMappingName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the LiveDataPathMapping",
      "x-ms-parameter-location": "method"
    },
    "ExclusionTemplateNameParameter": {
      "name": "exclusionTemplateName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the Migrator Exclusion Template",
      "x-ms-parameter-location": "method"
    }
  }
}
