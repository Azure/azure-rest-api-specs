{
  "swagger": "2.0",
  "info": {
    "version": "2020-09-08-preview",
    "title": "AzureDataManagementClient",
    "description": "The AzureData management API provides a RESTful set of web APIs to manage Azure Data Resources."
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/subscriptions/{subscriptionId}/providers/Microsoft.AzureData/sqlManagedInstances": {
      "get": {
        "tags": [
          "SqlManagedInstances"
        ],
        "operationId": "SqlManagedInstances_List",
        "summary": "List sqlManagedInstance resources in the subscription",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/apiVersion"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SqlManagedInstanceListResult"
            }
          },
          "default": {
            "description": "*** Error Responses: ***\n\n * 400 InvalidParameterValue - An invalid value was given to parameter.\n\n * 400 InvalidCrossSubscriptionVmMove - Invalid cross subscription move of resource.\n\n * 404 ResourceNotFound - The requested resource was not found.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "Gets all SQL Instance in a subscription.": {
            "$ref": "./examples/ListSubscriptionSqlManagedInstance.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureData/sqlManagedInstances": {
      "get": {
        "tags": [
          "SqlManagedInstances"
        ],
        "operationId": "SqlManagedInstances_ListByResourceGroup",
        "description": "Gets all sqlManagedInstances in a resource group.",
        "summary": "List sqlManagedInstance resources in the resource group",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/apiVersion"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SqlManagedInstanceListResult"
            }
          },
          "default": {
            "description": "*** Error Responses: ***",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "Gets all SQL Instance in a resource group.": {
            "$ref": "./examples/ListByResourceGroupSqlManagedInstance.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureData/sqlManagedInstances/{sqlManagedInstanceName}": {
      "get": {
        "tags": [
          "SqlManagedInstances"
        ],
        "operationId": "SqlManagedInstances_Get",
        "description": "Retrieves a SQL Managed Instance resource",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "name": "sqlManagedInstanceName",
            "description": "Name of SQL Managed Instance",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "$ref": "#/parameters/apiVersion"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SqlManagedInstance"
            }
          },
          "default": {
            "description": "*** Error Responses: ***",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Updates a SQL Instance tags.": {
            "$ref": "./examples/GetSqlManagedInstance.json"
          }
        }
      },
      "put": {
        "tags": [
          "SqlManagedInstances"
        ],
        "operationId": "SqlManagedInstances_Create",
        "description": "Creates or replaces a SQL Managed Instance resource",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "name": "sqlManagedInstanceName",
            "description": "The name of SQL Managed Instances",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "sqlManagedInstance",
            "in": "body",
            "description": "The SQL Managed Instance to be created or updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SqlManagedInstance"
            }
          },
          {
            "$ref": "#/parameters/apiVersion"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SqlManagedInstance"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/SqlManagedInstance"
            }
          },
          "default": {
            "description": "*** Error Responses: ***",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Create or update a SQL Managed Instance": {
            "$ref": "./examples/CreateOrUpdateSqlManagedInstance.json"
          }
        }
      },
      "delete": {
        "tags": [
          "SqlManagedInstances"
        ],
        "operationId": "SqlManagedInstances_Delete",
        "description": "Deletes a SQL Managed Instance resource",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "name": "sqlManagedInstanceName",
            "description": "The name of Sql Managed Instances",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "$ref": "#/parameters/apiVersion"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted the SQL Managed Instance."
          },
          "default": {
            "description": "*** Error Responses: ***",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          },
          "204": {
            "description": "The specified SQL Managed Instance does not exist."
          }
        },
        "x-ms-examples": {
          "Delete a SQL Instance.": {
            "$ref": "./examples/DeleteSqlManagedInstance.json"
          }
        }
      },
      "patch": {
        "tags": [
          "SqlManagedInstances"
        ],
        "operationId": "SqlManagedInstances_Update",
        "description": "Updates a SQL Managed Instance resource",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "name": "sqlManagedInstanceName",
            "description": "Name of sqlManagedInstance",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "The SQL Managed Instance.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SqlManagedInstanceUpdate"
            }
          },
          {
            "$ref": "#/parameters/apiVersion"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SqlManagedInstance"
            }
          },
          "default": {
            "description": "*** Error Responses: ***",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Updates a sql Instance tags.": {
            "$ref": "./examples/UpdateSqlManagedInstance.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.AzureData/sqlServerInstances": {
      "get": {
        "tags": [
          "SqlServerInstances"
        ],
        "operationId": "SqlServerInstances_List",
        "summary": "List sqlServerInstance resources in the subscription",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/apiVersion"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SqlServerInstanceListResult"
            }
          },
          "default": {
            "description": "*** Error Responses: ***\n\n * 400 InvalidParameterValue - An invalid value was given to parameter.\n\n * 400 InvalidCrossSubscriptionVmMove - Invalid cross subscription move of resource.\n\n * 404 ResourceNotFound - The requested resource was not found.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "Gets all SQL Server Instance in a subscription.": {
            "$ref": "./examples/ListSubscriptionSqlServerInstance.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureData/sqlServerInstances": {
      "get": {
        "tags": [
          "SqlServerInstances"
        ],
        "operationId": "SqlServerInstances_ListByResourceGroup",
        "description": "Gets all sqlServerInstances in a resource group.",
        "summary": "List sqlServerInstance resources in the resource group",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/apiVersion"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SqlServerInstanceListResult"
            }
          },
          "default": {
            "description": "*** Error Responses: ***",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "Gets all SQL Server Instance in a resource group.": {
            "$ref": "./examples/ListByResourceGroupSqlServerInstance.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureData/sqlServerInstances/{sqlServerInstanceName}": {
      "get": {
        "tags": [
          "SqlServerInstances"
        ],
        "operationId": "SqlServerInstances_Get",
        "description": "Retrieves a SQL Server Instance resource",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "name": "sqlServerInstanceName",
            "description": "Name of SQL Server Instance",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "$ref": "#/parameters/apiVersion"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SqlServerInstance"
            }
          },
          "default": {
            "description": "*** Error Responses: ***",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Updates a SQL Server Instance tags.": {
            "$ref": "./examples/GetSqlServerInstance.json"
          }
        }
      },
      "put": {
        "tags": [
          "SqlServerInstances"
        ],
        "operationId": "SqlServerInstances_Create",
        "description": "Creates or replaces a SQL Server Instance resource",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "name": "sqlServerInstanceName",
            "description": "The name of SQL Server Instance",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "sqlServerInstance",
            "in": "body",
            "description": "The SQL Server Instance to be created or updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SqlServerInstance"
            }
          },
          {
            "$ref": "#/parameters/apiVersion"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SqlServerInstance"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/SqlServerInstance"
            }
          },
          "default": {
            "description": "*** Error Responses: ***",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Updates a SQL Server Instance tags.": {
            "$ref": "./examples/CreateOrUpdateSqlServerInstance.json"
          }
        }
      },
      "delete": {
        "tags": [
          "SqlServerInstances"
        ],
        "operationId": "SqlServerInstances_Delete",
        "description": "Deletes a SQL Server Instance resource",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "name": "sqlServerInstanceName",
            "description": "The name of SQL Server Instance",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "$ref": "#/parameters/apiVersion"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted the SQL Server Instance."
          },
          "default": {
            "description": "*** Error Responses: ***",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          },
          "204": {
            "description": "The specified SQL Server Instance does not exist."
          }
        },
        "x-ms-examples": {
          "Delete a SQL Server Instance.": {
            "$ref": "./examples/DeleteSqlServerInstance.json"
          }
        }
      },
      "patch": {
        "tags": [
          "SqlServerInstances"
        ],
        "operationId": "SqlServerInstances_Update",
        "description": "Updates a SQL Server Instance resource",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "name": "sqlServerInstanceName",
            "description": "Name of sqlServerInstance",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "The SQL Server Instance.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SqlServerInstanceUpdate"
            }
          },
          {
            "$ref": "#/parameters/apiVersion"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SqlServerInstance"
            }
          },
          "default": {
            "description": "*** Error Responses: ***",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Updates a SQL Server Instance tags.": {
            "$ref": "./examples/UpdateSqlServerInstance.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.AzureData/postgresInstances": {
      "get": {
        "tags": [
          "PostgresInstances"
        ],
        "operationId": "PostgresInstances_List",
        "summary": "List postgres Instance resources in the subscription",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/apiVersion"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PostgresInstanceListResult"
            }
          },
          "default": {
            "description": "*** Error Responses: ***",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "Gets all Postgres Instance in a subscription.": {
            "$ref": "./examples/ListSubscriptionPostgresInstance.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureData/postgresInstances": {
      "get": {
        "tags": [
          "PostgresInstances"
        ],
        "operationId": "PostgresInstances_ListByResourceGroup",
        "description": "Get a postgres Instances list by Resource group name.",
        "summary": "List postgres Instance resources in the resource group",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/apiVersion"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PostgresInstanceListResult"
            }
          },
          "default": {
            "description": "*** Error Responses: ***",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "Gets all postgres Instances in a resource group.": {
            "$ref": "./examples/ListByResourceGroupPostgresInstance.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureData/postgresInstances/{postgresInstanceName}": {
      "get": {
        "tags": [
          "PostgresInstances"
        ],
        "operationId": "PostgresInstances_Get",
        "description": "Retrieves a postgres Instance resource",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "name": "postgresInstanceName",
            "description": "Name of Postgres Instance",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "$ref": "#/parameters/apiVersion"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PostgresInstance"
            }
          },
          "default": {
            "description": "*** Error Responses: ***",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Gets a postgres Instances.": {
            "$ref": "./examples/GetPostgresInstance.json"
          }
        }
      },
      "put": {
        "tags": [
          "PostgresInstances"
        ],
        "operationId": "PostgresInstances_Create",
        "description": "Creates or replaces a postgres Instance resource",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "name": "postgresInstanceName",
            "description": "Name of PostgresInstance",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "$ref": "#/parameters/apiVersion"
          },
          {
            "name": "resource",
            "description": "The postgres instance",
            "required": true,
            "in": "body",
            "schema": {
              "$ref": "#/definitions/PostgresInstance"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PostgresInstance"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/PostgresInstance"
            }
          },
          "default": {
            "description": "*** Error Responses: ***",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Create or update a Postgres Instance.": {
            "$ref": "./examples/CreateOrUpdatePostgresInstance.json"
          }
        }
      },
      "delete": {
        "tags": [
          "PostgresInstances"
        ],
        "operationId": "PostgresInstances_Delete",
        "description": "Deletes a postgres Instance resource",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "name": "postgresInstanceName",
            "description": "Name of Postgres Instance",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "$ref": "#/parameters/apiVersion"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted the Postgres Instance."
          },
          "default": {
            "description": "*** Error Responses: ***",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          },
          "204": {
            "description": "The specified Postgres Instance does not exist."
          }
        },
        "x-ms-examples": {
          "Deletes a PostgresInstances.": {
            "$ref": "./examples/DeletePostgresInstance.json"
          }
        }
      },
      "patch": {
        "tags": [
          "PostgresInstances"
        ],
        "operationId": "PostgresInstances_Update",
        "description": "Updates a postgres Instance resource",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "name": "postgresInstanceName",
            "description": "Name of Postgres Instance",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "The Postgres Instance.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PostgresInstanceUpdate"
            }
          },
          {
            "$ref": "#/parameters/apiVersion"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PostgresInstance"
            }
          },
          "default": {
            "description": "*** Error Responses: ***",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Updates a postgres Instances tags.": {
            "$ref": "./examples/UpdatePostgresInstance.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.AzureData/dataControllers": {
      "get": {
        "tags": [
          "DataControllers"
        ],
        "operationId": "DataControllers_ListInSubscription",
        "summary": "List dataController resources in the subscription",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/apiVersion"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PageOfDataControllerResource"
            }
          },
          "default": {
            "description": "*** Error Responses: ***",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "Gets all dataControllers in a subscription.": {
            "$ref": "./examples/ListSubscriptionDataController.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureData/dataControllers": {
      "get": {
        "tags": [
          "DataControllers"
        ],
        "operationId": "DataControllers_ListInGroup",
        "summary": "List dataController resources in the resource group",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/apiVersion"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PageOfDataControllerResource"
            }
          },
          "default": {
            "description": "*** Error Responses: ***",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "Gets all dataControllers in a resource group.": {
            "$ref": "./examples/ListByResourceGroupDataController.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureData/dataControllers/{dataControllerName}": {
      "put": {
        "tags": [
          "DataControllers"
        ],
        "operationId": "DataControllers_PutDataController",
        "description": "Creates or replaces a dataController resource",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "name": "dataControllerResource",
            "description": "desc",
            "required": true,
            "in": "body",
            "schema": {
              "$ref": "#/definitions/DataControllerResource"
            }
          },
          {
            "name": "dataControllerName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "$ref": "#/parameters/apiVersion"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DataControllerResource"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/DataControllerResource"
            }
          },
          "default": {
            "description": "*** Error Responses: ***",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Create or update a Data Controller.": {
            "$ref": "./examples/CreateOrUpdateDataController.json"
          }
        }
      },
      "delete": {
        "tags": [
          "DataControllers"
        ],
        "operationId": "DataControllers_DeleteDataController",
        "description": "Deletes a dataController resource",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "name": "dataControllerName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "$ref": "#/parameters/apiVersion"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted the DataController."
          },
          "default": {
            "description": "*** Error Responses: ***",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          },
          "204": {
            "description": "The specified DataController does not exist."
          }
        },
        "x-ms-examples": {
          "Delete a dataController.": {
            "$ref": "./examples/DeleteDataController.json"
          }
        }
      },
      "get": {
        "tags": [
          "DataControllers"
        ],
        "operationId": "DataControllers_GetDataController",
        "description": "Retrieves a dataController resource",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "name": "dataControllerName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "$ref": "#/parameters/apiVersion"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DataControllerResource"
            }
          },
          "default": {
            "description": "*** Error Responses: ***",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Get a data controller.": {
            "$ref": "./examples/GetDataController.json"
          }
        }
      },
      "patch": {
        "tags": [
          "DataControllers"
        ],
        "operationId": "DataControllers_PatchDataController",
        "description": "Updates a dataController resource",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "name": "dataControllerName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "$ref": "#/parameters/apiVersion"
          },
          {
            "name": "dataControllerResource",
            "description": "The update data controller resource",
            "required": true,
            "in": "body",
            "schema": {
              "$ref": "#/definitions/DataControllerUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DataControllerResource"
            }
          },
          "default": {
            "description": "*** Error Responses: ***",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Updates a dataController tags.": {
            "$ref": "./examples/UpdateDataController.json"
          }
        }
      }
    }
  },
  "definitions": {
    "Sku": {
      "description": "The resource model definition representing SKU",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the SKU. Ex - P3. It is typically a letter+number code"
        },
        "tier": {
          "type": "string",
          "enum": [
            "Free",
            "Basic",
            "Standard",
            "Premium"
          ],
          "x-ms-enum": {
            "name": "SkuTier",
            "modelAsString": false
          },
          "description": "This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT."
        },
        "size": {
          "type": "string",
          "description": "The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. "
        },
        "family": {
          "type": "string",
          "description": "If the service has different generations of hardware, for the same SKU, then that can be captured here."
        },
        "capacity": {
          "type": "integer",
          "format": "int32",
          "description": "If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted."
        }
      },
      "required": [
        "name"
      ]
    },
    "Identity": {
      "description": "Identity for the resource.",
      "properties": {
        "principalId": {
          "readOnly": true,
          "type": "string",
          "description": "The principal ID of resource identity."
        },
        "tenantId": {
          "readOnly": true,
          "type": "string",
          "description": "The tenant ID of resource."
        },
        "type": {
          "type": "string",
          "description": "The identity type.",
          "enum": [
            "SystemAssigned"
          ],
          "x-ms-enum": {
            "name": "ResourceIdentityType",
            "modelAsString": false
          }
        }
      }
    },
    "Plan": {
      "properties": {
        "name": {
          "type": "string",
          "description": "A user defined name of the 3rd Party Artifact that is being procured."
        },
        "publisher": {
          "type": "string",
          "description": "The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic"
        },
        "product": {
          "type": "string",
          "description": "The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact at the time of Data Market onboarding. "
        },
        "promotionCode": {
          "type": "string",
          "description": "A publisher provided promotion code as provisioned in Data Market for the said product/artifact."
        },
        "version": {
          "type": "string",
          "description": "The version of the desired product/artifact."
        }
      },
      "description": "Plan for the resource.",
      "required": [
        "name",
        "publisher",
        "product"
      ]
    },
    "Resource": {
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Fully qualified resource Id for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "The name of the resource"
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "The type of the resource. Ex- Microsoft.Compute/virtualMachines or Microsoft.Storage/storageAccounts."
        }
      },
      "x-ms-azure-resource": true
    },
    "TrackedResource": {
      "description": "The resource model definition for a ARM tracked top level resource",
      "properties": {
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-ms-mutability": [
            "read",
            "create",
            "update"
          ],
          "description": "Resource tags."
        },
        "location": {
          "type": "string",
          "x-ms-mutability": [
            "read",
            "create"
          ],
          "description": "The geo-location where the resource lives"
        },
        "systemData": {
          "$ref": "#/definitions/SystemData",
          "readOnly": true
        }
      },
      "required": [
        "location"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ]
    },
    "ProxyResource": {
      "description": "The resource model definition for a ARM proxy resource. It will have everything other than required location and tags",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ]
    },
    "PageOfDataControllerResource": {
      "type": "object",
      "properties": {
        "value": {
          "items": {
            "$ref": "#/definitions/DataControllerResource"
          },
          "type": "array"
        },
        "nextLink": {
          "type": "string",
          "description": "Link to retrieve next page of results."
        }
      }
    },
    "DataControllerResource": {
      "description": "Data controller resource",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/TrackedResource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/DataControllerProperties",
          "description": "The data controller's properties",
          "x-ms-client-flatten": true
        }
      },
      "required": [
        "properties"
      ]
    },
    "DataControllerUpdate": {
      "properties": {
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Resource tags"
        }
      },
      "description": "Used for updating a data controller resource."
    },
    "SystemData": {
      "description": "Read only system data",
      "type": "object",
      "properties": {
        "createdBy": {
          "type": "string",
          "description": "An identifier for the identity that created the resource"
        },
        "createdByType": {
          "$ref": "#/definitions/IdentityType",
          "description": "The type of identity that created the resource"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "The timestamp of resource creation (UTC)"
        },
        "lastModifiedBy": {
          "type": "string",
          "description": "An identifier for the identity that last modified the resource"
        },
        "lastModifiedByType": {
          "$ref": "#/definitions/IdentityType",
          "description": "The type of identity that last modified the resource"
        },
        "lastModifiedAt": {
          "type": "string",
          "format": "date-time",
          "description": "The timestamp of resource last modification (UTC)"
        }
      }
    },
    "IdentityType": {
      "description": "The type of identity that creates/modifies resources",
      "type": "string",
      "enum": [
        "user",
        "application",
        "managedIdentity",
        "key"
      ],
      "x-ms-enum": {
        "name": "IdentityType",
        "modelAsString": true
      }
    },
    "ResourceSku": {
      "type": "object",
      "properties": {
        "capacity": {
          "type": "integer",
          "format": "int32"
        },
        "family": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "size": {
          "type": "string"
        },
        "tier": {
          "type": "string"
        }
      }
    },
    "DataControllerProperties": {
      "description": "The data controller properties.",
      "type": "object",
      "properties": {
        "onPremiseProperty": {
          "$ref": "#/definitions/OnPremiseProperty"
        },
        "k8sRaw": {
          "type": "object",
          "description": "The raw kubernetes information"
        },
        "lastUploadedDate": {
          "type": "string",
          "format": "date-time",
          "description": "Last uploaded date from on premise cluster. Defaults to current date time"
        }
      },
      "required": [
        "onPremiseProperty"
      ]
    },
    "OnPremiseProperty": {
      "description": "Properties from the on premise data controller",
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid",
          "description": "A globally unique ID identifying the associated on premise cluster"
        },
        "publicSigningKey": {
          "type": "string",
          "description": "Certificate that contains the on premise cluster public key used to verify signing"
        },
        "signingCertificateThumbprint": {
          "type": "string",
          "description": "Unique thumbprint returned to customer to verify the certificate being uploaded"
        }
      },
      "required": [
        "id",
        "publicSigningKey"
      ]
    },
    "PostgresInstanceProperties": {
      "description": "Postgres Instance properties.",
      "type": "object",
      "properties": {
        "dataControllerId": {
          "type": "string",
          "description": "The data controller id"
        },
        "admin": {
          "type": "string",
          "description": "The instance admin"
        },
        "k8sRaw": {
          "type": "object",
          "description": "The raw kubernetes information"
        },
        "lastUploadedDate": {
          "type": "string",
          "format": "date-time",
          "description": "Last uploaded date from on premise cluster. Defaults to current date time"
        }
      }
    },
    "PostgresInstance": {
      "description": "A Postgres Instance.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/TrackedResource",
          "description": "null"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/PostgresInstanceProperties",
          "x-ms-client-flatten": true,
          "description": "null"
        }
      }
    },
    "PostgresInstanceUpdate": {
      "description": "An update to a Postgres Instance.",
      "type": "object",
      "properties": {
        "tags": {
          "description": "Resource tags.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "$ref": "#/definitions/PostgresInstanceProperties"
        }
      }
    },
    "PostgresInstanceListResult": {
      "description": "A list of PostgresInstance.",
      "type": "object",
      "properties": {
        "value": {
          "description": "Array of results.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PostgresInstance"
          },
          "readOnly": true
        },
        "nextLink": {
          "description": "Link to retrieve next page of results.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "SqlManagedInstanceProperties": {
      "description": "Properties of sqlManagedInstance.",
      "type": "object",
      "properties": {
        "dataControllerId": {
          "type": "string",
          "description": "null"
        },
        "instanceEndpoint": {
          "type": "string",
          "description": "The on premise instance endpoint"
        },
        "admin": {
          "type": "string",
          "description": "The instance admin user"
        },
        "startTime": {
          "type": "string",
          "description": "The instance start time"
        },
        "endTime": {
          "type": "string",
          "description": "The instance end time"
        },
        "vCore": {
          "type": "string",
          "description": "The instance vCore"
        },
        "k8sRaw": {
          "type": "object",
          "description": "The raw kubernetes information"
        },
        "lastUploadedDate": {
          "type": "string",
          "format": "date-time",
          "description": "Last uploaded date from on premise cluster. Defaults to current date time"
        }
      }
    },
    "SqlManagedInstance": {
      "description": "A SqlManagedInstance.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/TrackedResource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/SqlManagedInstanceProperties",
          "description": "null",
          "x-ms-client-flatten": true
        }
      }
    },
    "SqlManagedInstanceUpdate": {
      "description": "An update to a SQL Managed Instance.",
      "type": "object",
      "properties": {
        "tags": {
          "description": "Resource tags.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "SqlManagedInstanceListResult": {
      "description": "A list of SqlManagedInstance.",
      "type": "object",
      "properties": {
        "value": {
          "description": "Array of results.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SqlManagedInstance"
          },
          "readOnly": true
        },
        "nextLink": {
          "description": "Link to retrieve next page of results.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "SqlServerInstanceProperties": {
      "description": "Properties of SqlServerInstance.",
      "type": "object",
      "properties": {
        "version": {
          "type": "string",
          "description": "SQL Server version."
        },
        "edition": {
          "type": "string",
          "description": "SQL Server edition."
        },
        "containerResourceId": {
          "type": "string",
          "description": "ARM Resource id of the container resource (Azure Arc for Servers)"
        },
        "createTime": {
          "type": "string",
          "description": "The time when the resource was created.",
          "readOnly": true
        },
        "updateTime": {
          "type": "string",
          "description": "The time when the resource was last updated.",
          "readOnly": true
        },
        "vCore": {
          "type": "string",
          "description": "The number of logical processors used by the SQL Server instance."
        },
        "status": {
          "type": "string",
          "description": "The cloud connectivity status."
        }
      },
      "required": [
        "version",
        "edition",
        "containerResourceId",
        "vCore",
        "status"
      ]
    },
    "SqlServerInstance": {
      "description": "A SqlServerInstance.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/TrackedResource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/SqlServerInstanceProperties",
          "description": "null",
          "x-ms-client-flatten": true
        }
      }
    },
    "SqlServerInstanceUpdate": {
      "description": "An update to a SQL Server Instance.",
      "type": "object",
      "properties": {
        "tags": {
          "description": "Resource tags.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "SqlServerInstanceListResult": {
      "description": "A list of SqlServerInstance.",
      "type": "object",
      "properties": {
        "value": {
          "description": "Array of results.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SqlServerInstance"
          },
          "readOnly": true
        },
        "nextLink": {
          "description": "Link to retrieve next page of results.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "CloudError": {
      "x-ms-external": true,
      "properties": {
        "error": {
          "$ref": "#/definitions/CloudErrorBody",
          "description": "null"
        }
      },
      "description": "An error response from the Azure Data service."
    },
    "CloudErrorBody": {
      "x-ms-external": true,
      "properties": {
        "code": {
          "type": "string",
          "description": "An identifier for the error. Codes are invariant and are intended to be consumed programmatically."
        },
        "message": {
          "type": "string",
          "description": "A message describing the error, intended to be suitable for display in a user interface."
        },
        "target": {
          "type": "string",
          "description": "The target of the particular error. For example, the name of the property in error."
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CloudErrorBody"
          },
          "description": "A list of additional details about the error."
        }
      },
      "description": "An error response from the Batch service."
    },
    "ODataError": {
      "properties": {
        "code": {
          "type": "string",
          "description": "A language-independent error name."
        },
        "message": {
          "type": "string",
          "description": "The error message."
        },
        "target": {
          "type": "string",
          "description": "The target of the error (for example, the name of the property in error)."
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ODataError"
          },
          "description": "The error details."
        }
      },
      "type": "object",
      "description": "Information about an error."
    }
  },
  "parameters": {
    "subscriptionId": {
      "name": "subscriptionId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The ID of the Azure subscription"
    },
    "resourceGroupName": {
      "name": "resourceGroupName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the Azure resource group",
      "x-ms-parameter-location": "method"
    },
    "location": {
      "name": "location",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The Azure region to use for the request",
      "x-ms-parameter-location": "method"
    },
    "apiVersion": {
      "name": "api-version",
      "in": "query",
      "required": true,
      "type": "string",
      "description": "The API version to use for the request"
    },
    "SubscriptionIdParameter": {
      "name": "subscriptionId",
      "in": "path",
      "description": "Subscription ID that identifies an Azure subscription.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "client"
    },
    "ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "description": "API version to use for the request.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "client"
    },
    "ResourceGroupParameter": {
      "name": "resourceGroupName",
      "in": "path",
      "description": "Name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "PostgresInstanceNameParameter": {
      "in": "path",
      "name": "postgresInstanceName",
      "description": "The name of the resource.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "SqlManagedInstanceNameParameter": {
      "in": "path",
      "name": "sqlManagedInstanceName",
      "description": "The name of the resource.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "SqlServerInstanceNameParameter": {
      "in": "path",
      "name": "sqlServerInstanceName",
      "description": "The name of the resource.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    }
  },
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "description": "Azure Active Directory OAuth2 Flow",
      "flow": "implicit",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  }
}
