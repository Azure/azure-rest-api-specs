{
  "swagger": "2.0",
  "info": {
    "title": "CostManagementClient",
    "version": "2023-03-01",
    "description": "CostManagement management client provides access to CostManagement resources for Azure Enterprise Subscriptions.",
    "x-typespec-generated": [
      {
        "emitter": "@azure-tools/typespec-autorest"
      }
    ]
  },
  "schemes": [
    "https"
  ],
  "host": "management.azure.com",
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "description": "Azure Active Directory OAuth2 Flow.",
      "flow": "implicit",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "tags": [
    {
      "name": "Operations"
    },
    {
      "name": "Exports"
    },
    {
      "name": "Views"
    },
    {
      "name": "Alerts"
    },
    {
      "name": "ScheduledActions"
    }
  ],
  "paths": {
    "/{resourceUri}/providers/Azure.ResourceManager.CostManagement/alerts": {
      "get": {
        "operationId": "Alerts_List",
        "tags": [
          "Alerts"
        ],
        "description": "Lists the alerts for scope defined.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/Azure.ResourceManager.ResourceUriParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/AlertListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/{resourceUri}/providers/Azure.ResourceManager.CostManagement/alerts/{alertId}": {
      "get": {
        "operationId": "Alerts_Get",
        "tags": [
          "Alerts"
        ],
        "description": "Gets the alert for the scope by alert ID.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/Azure.ResourceManager.ResourceUriParameter"
          },
          {
            "name": "alertId",
            "in": "path",
            "description": "Alert ID",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Alert"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "patch": {
        "operationId": "Alerts_Dismiss",
        "tags": [
          "Alerts"
        ],
        "description": "Dismisses the specified alert",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/Azure.ResourceManager.ResourceUriParameter"
          },
          {
            "name": "alertId",
            "in": "path",
            "description": "Alert ID",
            "required": true,
            "type": "string"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "The resource properties to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DismissAlertPayload"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Alert"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/{resourceUri}/providers/Azure.ResourceManager.CostManagement/exports": {
      "get": {
        "operationId": "Exports_List",
        "tags": [
          "Exports"
        ],
        "description": "The operation to list all exports at the given scope.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/Azure.ResourceManager.ResourceUriParameter"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "May be used to expand the properties within an export. Currently only 'runHistory' is supported and will return information for the last run of each export.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ExportListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/{resourceUri}/providers/Azure.ResourceManager.CostManagement/exports/{exportName}": {
      "get": {
        "operationId": "Exports_Get",
        "tags": [
          "Exports"
        ],
        "description": "The operation to get the export for the defined scope by export name.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/Azure.ResourceManager.ResourceUriParameter"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "May be used to expand the properties within an export. Currently only 'runHistory' is supported and will return information for the last 10 runs of the export.",
            "required": false,
            "type": "string"
          },
          {
            "name": "exportName",
            "in": "path",
            "description": "Export Name.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Export"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "operationId": "Exports_CreateOrUpdate",
        "tags": [
          "Exports"
        ],
        "description": "The operation to create or update a export. Update operation requires latest eTag to be set in the request. You may obtain the latest eTag by performing a get operation. Create operation does not require eTag.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/Azure.ResourceManager.ResourceUriParameter"
          },
          {
            "name": "exportName",
            "in": "path",
            "description": "Export Name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Export"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'Export' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/Export"
            }
          },
          "201": {
            "description": "Resource 'Export' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/Export"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "operationId": "Exports_Delete",
        "tags": [
          "Exports"
        ],
        "description": "The operation to delete a export.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/Azure.ResourceManager.ResourceUriParameter"
          },
          {
            "name": "exportName",
            "in": "path",
            "description": "Export Name.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/{resourceUri}/providers/Azure.ResourceManager.CostManagement/exports/{exportName}/execute": {
      "post": {
        "operationId": "Exports_Execute",
        "tags": [
          "Exports"
        ],
        "description": "The operation to run an export.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/Azure.ResourceManager.ResourceUriParameter"
          },
          {
            "name": "exportName",
            "in": "path",
            "description": "Export Name.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "ARM operation completed successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/{billingScope}/providers/Microsoft.CostManagement/benefitRecommendations": {
      "get": {
        "operationId": "BenefitRecommendationsOperations_List",
        "description": "List of recommendations for purchasing savings plan.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Can be used to filter benefitRecommendations by: properties/scope with allowed values ['Single', 'Shared'] and default value 'Shared'; and properties/lookBackPeriod with allowed values ['Last7Days', 'Last30Days', 'Last60Days'] and default value 'Last60Days'; properties/term with allowed values ['P1Y', 'P3Y'] and default value 'P3Y'; properties/subscriptionId; properties/resourceGroup",
            "required": false,
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "May be used to order the recommendations by: properties/armSkuName. For the savings plan, the results are in order by default. There is no need to use this clause.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "May be used to expand the properties by: properties/usage, properties/allRecommendationDetails",
            "required": false,
            "type": "string"
          },
          {
            "name": "billingScope",
            "in": "path",
            "description": "The scope associated with benefit recommendation operations. This includes '/subscriptions/{subscriptionId}/' for subscription scope, '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for resource group scope, /providers/Microsoft.Billing/billingAccounts/{billingAccountId}' for enterprise agreement scope, and '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}' for billing profile scope",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/PagedBenefitRecommendationModel"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/{scope}/providers/Microsoft.CostManagement/checkNameAvailability": {
      "post": {
        "operationId": "ScheduledActionsOperations_CheckNameAvailabilityByScope",
        "description": "Checks availability and correctness of the name for a scheduled action within the given scope.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "scope",
            "in": "path",
            "description": "The scope associated with scheduled action operations. This includes 'subscriptions/{subscriptionId}' for subscription scope, 'subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for resourceGroup scope, 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}' for Billing Account scope, 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/departments/{departmentId}' for Department scope, 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/enrollmentAccounts/{enrollmentAccountId}' for EnrollmentAccount scope, 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}' for BillingProfile scope, 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/invoiceSections/{invoiceSectionId}' for InvoiceSection scope, 'providers/Microsoft.CostManagement/externalBillingAccounts/{externalBillingAccountName}' for External Billing Account scope and 'providers/Microsoft.CostManagement/externalSubscriptions/{externalSubscriptionName}' for External Subscription scope. Note: Insight Alerts are only available on subscription scope.",
            "required": true,
            "type": "string"
          },
          {
            "name": "checkNameAvailabilityRequest",
            "in": "body",
            "description": "Scheduled action to be created or updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CheckNameAvailabilityRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/CheckNameAvailabilityResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        }
      }
    },
    "/{scope}/providers/Microsoft.CostManagement/dimensions": {
      "get": {
        "operationId": "DimensionsOperations_List",
        "description": "Lists the dimensions by the defined scope.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "scope",
            "in": "path",
            "description": "The scope associated with dimension operations. This includes '/subscriptions/{subscriptionId}/' for subscription scope, '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for resourceGroup scope, '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}' for Billing Account scope, '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/departments/{departmentId}' for Department scope, '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/enrollmentAccounts/{enrollmentAccountId}' for EnrollmentAccount scope, '/providers/Microsoft.Management/managementGroups/{managementGroupId}' for Management Group scope, '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}' for billingProfile scope, 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}/invoiceSections/{invoiceSectionId}' for invoiceSection scope, and 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/customers/{customerId}' specific for partners.",
            "required": true,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "May be used to filter dimensions by properties/category, properties/usageStart, properties/usageEnd. Supported operators are 'eq','lt', 'gt', 'le', 'ge'.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "May be used to expand the properties/data within a dimension category. By default, data is not included when listing dimensions.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$skiptoken",
            "in": "query",
            "description": "Skiptoken is only used if a previous operation returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skiptoken parameter that specifies a starting point to use for subsequent calls.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "May be used to limit the number of results to the most recent N dimension data.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 1,
            "maximum": 1000
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/DimensionsListResult"
            }
          },
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful. "
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        }
      }
    },
    "/{scope}/providers/Microsoft.CostManagement/exports/{exportName}/runHistory/{scope}/{exportName}": {
      "get": {
        "operationId": "Exports_GetExecutionHistory",
        "tags": [
          "Exports"
        ],
        "description": "The operation to get the run history of an export for the defined scope and export name.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "scope",
            "in": "path",
            "description": "The scope associated with export operations. This includes '/subscriptions/{subscriptionId}/' for subscription scope, '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for resourceGroup scope, '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}' for Billing Account scope and '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/departments/{departmentId}' for Department scope, '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/enrollmentAccounts/{enrollmentAccountId}' for EnrollmentAccount scope, '/providers/Microsoft.Management/managementGroups/{managementGroupId} for Management Group scope, '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}' for billingProfile scope, '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}/invoiceSections/{invoiceSectionId}' for invoiceSection scope, and '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/customers/{customerId}' specific for partners.",
            "required": true,
            "type": "string"
          },
          {
            "name": "exportName",
            "in": "path",
            "description": "Export Name.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/ExportExecutionListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        }
      }
    },
    "/{scope}/providers/Microsoft.CostManagement/forecast": {
      "post": {
        "operationId": "ForecastOperations_Usage",
        "description": "Lists the forecast charges for scope defined.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "May be used to filter forecasts by properties/usageDate (Utc time), properties/chargeType or properties/grain. The filter supports 'eq', 'lt', 'gt', 'le', 'ge', and 'and'. It does not currently support 'ne', 'or', or 'not'.",
            "required": false,
            "type": "string"
          },
          {
            "name": "scope",
            "in": "path",
            "description": "The scope associated with forecast operations. This includes '/subscriptions/{subscriptionId}/' for subscription scope, '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for resourceGroup scope, '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}' for Billing Account scope and '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/departments/{departmentId}' for Department scope, '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/enrollmentAccounts/{enrollmentAccountId}' for EnrollmentAccount scope, '/providers/Microsoft.Management/managementGroups/{managementGroupId} for Management Group scope, '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}' for billingProfile scope, '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}/invoiceSections/{invoiceSectionId}' for invoiceSection scope, and '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/customers/{customerId}' specific for partners.",
            "required": true,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Parameters supplied to the CreateOrUpdate Forecast Config operation.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ForecastDefinition"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/ForecastResult"
            }
          },
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful. "
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        }
      }
    },
    "/{scope}/providers/Microsoft.CostManagement/query": {
      "post": {
        "operationId": "QueryOperations_Usage",
        "description": "Query the usage data for scope defined.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "scope",
            "in": "path",
            "description": "The scope associated with query and export operations. This includes '/subscriptions/{subscriptionId}/' for subscription scope, '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for resourceGroup scope, '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}' for Billing Account scope and '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/departments/{departmentId}' for Department scope, '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/enrollmentAccounts/{enrollmentAccountId}' for EnrollmentAccount scope, '/providers/Microsoft.Management/managementGroups/{managementGroupId} for Management Group scope, '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}' for billingProfile scope, '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}/invoiceSections/{invoiceSectionId}' for invoiceSection scope, and '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/customers/{customerId}' specific for partners.",
            "required": true,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Parameters supplied to the CreateOrUpdate Query Config operation.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/QueryDefinition"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/QueryResult"
            }
          },
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful. "
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        }
      }
    },
    "/{scope}/providers/Microsoft.CostManagement/scheduledActions": {
      "get": {
        "operationId": "ScheduledActionsOperations_ListByScope",
        "description": "List all shared scheduled actions within the given scope.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "scope",
            "in": "path",
            "description": "The scope associated with scheduled action operations. This includes 'subscriptions/{subscriptionId}' for subscription scope, 'subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for resourceGroup scope, 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}' for Billing Account scope, 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/departments/{departmentId}' for Department scope, 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/enrollmentAccounts/{enrollmentAccountId}' for EnrollmentAccount scope, 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}' for BillingProfile scope, 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/invoiceSections/{invoiceSectionId}' for InvoiceSection scope, 'providers/Microsoft.CostManagement/externalBillingAccounts/{externalBillingAccountName}' for External Billing Account scope and 'providers/Microsoft.CostManagement/externalSubscriptions/{externalSubscriptionName}' for External Subscription scope. Note: Insight Alerts are only available on subscription scope.",
            "required": true,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "May be used to filter scheduled actions by properties/viewId. Supported operator is 'eq'.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/PagedScheduledAction"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/{scope}/providers/Microsoft.CostManagement/scheduledActions/{name}": {
      "get": {
        "operationId": "ScheduledActionsOperations_GetByScope",
        "description": "Get the shared scheduled action from the given scope by name.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "scope",
            "in": "path",
            "description": "The scope associated with scheduled action operations. This includes 'subscriptions/{subscriptionId}' for subscription scope, 'subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for resourceGroup scope, 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}' for Billing Account scope, 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/departments/{departmentId}' for Department scope, 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/enrollmentAccounts/{enrollmentAccountId}' for EnrollmentAccount scope, 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}' for BillingProfile scope, 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/invoiceSections/{invoiceSectionId}' for InvoiceSection scope, 'providers/Microsoft.CostManagement/externalBillingAccounts/{externalBillingAccountName}' for External Billing Account scope and 'providers/Microsoft.CostManagement/externalSubscriptions/{externalSubscriptionName}' for External Subscription scope. Note: Insight Alerts are only available on subscription scope.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Scheduled action name.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/ScheduledAction"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        }
      },
      "put": {
        "operationId": "ScheduledActionsOperations_CreateOrUpdateByScope",
        "description": "Create or update a shared scheduled action within the given scope.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "scope",
            "in": "path",
            "description": "The scope associated with scheduled action operations. This includes 'subscriptions/{subscriptionId}' for subscription scope, 'subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for resourceGroup scope, 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}' for Billing Account scope, 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/departments/{departmentId}' for Department scope, 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/enrollmentAccounts/{enrollmentAccountId}' for EnrollmentAccount scope, 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}' for BillingProfile scope, 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/invoiceSections/{invoiceSectionId}' for InvoiceSection scope, 'providers/Microsoft.CostManagement/externalBillingAccounts/{externalBillingAccountName}' for External Billing Account scope and 'providers/Microsoft.CostManagement/externalSubscriptions/{externalSubscriptionName}' for External Subscription scope. Note: Insight Alerts are only available on subscription scope.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Scheduled action name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "if-match",
            "in": "header",
            "description": "ETag of the Entity. Not required when creating an entity. Optional when updating an entity and can be specified to achieve optimistic concurrency.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "If-Match"
          },
          {
            "name": "scheduledAction",
            "in": "body",
            "description": "Scheduled action to be created or updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ScheduledAction"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/ScheduledAction"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "ScheduledActionsOperations_DeleteByScope",
        "description": "Delete a scheduled action within the given scope.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "scope",
            "in": "path",
            "description": "The scope associated with scheduled action operations. This includes 'subscriptions/{subscriptionId}' for subscription scope, 'subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for resourceGroup scope, 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}' for Billing Account scope, 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/departments/{departmentId}' for Department scope, 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/enrollmentAccounts/{enrollmentAccountId}' for EnrollmentAccount scope, 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}' for BillingProfile scope, 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/invoiceSections/{invoiceSectionId}' for InvoiceSection scope, 'providers/Microsoft.CostManagement/externalBillingAccounts/{externalBillingAccountName}' for External Billing Account scope and 'providers/Microsoft.CostManagement/externalSubscriptions/{externalSubscriptionName}' for External Subscription scope. Note: Insight Alerts are only available on subscription scope.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Scheduled action name.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful. "
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        }
      }
    },
    "/{scope}/providers/Microsoft.CostManagement/scheduledActions/{name}/execute": {
      "post": {
        "operationId": "ScheduledActionsOperations_RunByScope",
        "description": "Runs a shared scheduled action within the given scope.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "scope",
            "in": "path",
            "description": "The scope associated with scheduled action operations. This includes 'subscriptions/{subscriptionId}' for subscription scope, 'subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for resourceGroup scope, 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}' for Billing Account scope, 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/departments/{departmentId}' for Department scope, 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/enrollmentAccounts/{enrollmentAccountId}' for EnrollmentAccount scope, 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}' for BillingProfile scope, 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/invoiceSections/{invoiceSectionId}' for InvoiceSection scope, 'providers/Microsoft.CostManagement/externalBillingAccounts/{externalBillingAccountName}' for External Billing Account scope and 'providers/Microsoft.CostManagement/externalSubscriptions/{externalSubscriptionName}' for External Subscription scope. Note: Insight Alerts are only available on subscription scope.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Scheduled action name.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful. "
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        }
      }
    },
    "/{scope}/providers/Microsoft.CostManagement/views": {
      "get": {
        "operationId": "ViewsOperations_ListByScope",
        "description": "Lists all views at the given scope.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "scope",
            "in": "path",
            "description": "The scope associated with view operations. This includes 'subscriptions/{subscriptionId}' for subscription scope, 'subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for resourceGroup scope, 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}' for Billing Account scope, 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/departments/{departmentId}' for Department scope, 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/enrollmentAccounts/{enrollmentAccountId}' for EnrollmentAccount scope, 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}' for BillingProfile scope, 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/invoiceSections/{invoiceSectionId}' for InvoiceSection scope, 'providers/Microsoft.Management/managementGroups/{managementGroupId}' for Management Group scope, 'providers/Microsoft.CostManagement/externalBillingAccounts/{externalBillingAccountName}' for External Billing Account scope and 'providers/Microsoft.CostManagement/externalSubscriptions/{externalSubscriptionName}' for External Subscription scope.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/PagedView"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/{scope}/providers/Microsoft.CostManagement/views/{viewName}": {
      "get": {
        "operationId": "ViewsOperations_GetByScope",
        "description": "Gets the view for the defined scope by view name.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "scope",
            "in": "path",
            "description": "The scope associated with view operations. This includes 'subscriptions/{subscriptionId}' for subscription scope, 'subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for resourceGroup scope, 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}' for Billing Account scope, 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/departments/{departmentId}' for Department scope, 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/enrollmentAccounts/{enrollmentAccountId}' for EnrollmentAccount scope, 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}' for BillingProfile scope, 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/invoiceSections/{invoiceSectionId}' for InvoiceSection scope, 'providers/Microsoft.Management/managementGroups/{managementGroupId}' for Management Group scope, 'providers/Microsoft.CostManagement/externalBillingAccounts/{externalBillingAccountName}' for External Billing Account scope and 'providers/Microsoft.CostManagement/externalSubscriptions/{externalSubscriptionName}' for External Subscription scope.",
            "required": true,
            "type": "string"
          },
          {
            "name": "viewName",
            "in": "path",
            "description": "View name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/View"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        }
      },
      "put": {
        "operationId": "ViewsOperations_CreateOrUpdateByScope",
        "description": "The operation to create or update a view. Update operation requires latest eTag to be set in the request. You may obtain the latest eTag by performing a get operation. Create operation does not require eTag.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "scope",
            "in": "path",
            "description": "The scope associated with view operations. This includes 'subscriptions/{subscriptionId}' for subscription scope, 'subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for resourceGroup scope, 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}' for Billing Account scope, 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/departments/{departmentId}' for Department scope, 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/enrollmentAccounts/{enrollmentAccountId}' for EnrollmentAccount scope, 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}' for BillingProfile scope, 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/invoiceSections/{invoiceSectionId}' for InvoiceSection scope, 'providers/Microsoft.Management/managementGroups/{managementGroupId}' for Management Group scope, 'providers/Microsoft.CostManagement/externalBillingAccounts/{externalBillingAccountName}' for External Billing Account scope and 'providers/Microsoft.CostManagement/externalSubscriptions/{externalSubscriptionName}' for External Subscription scope.",
            "required": true,
            "type": "string"
          },
          {
            "name": "viewName",
            "in": "path",
            "description": "View name",
            "required": true,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Parameters supplied to the CreateOrUpdate View operation.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/View"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/View"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "ViewsOperations_DeleteByScope",
        "description": "The operation to delete a view.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "scope",
            "in": "path",
            "description": "The scope associated with view operations. This includes 'subscriptions/{subscriptionId}' for subscription scope, 'subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for resourceGroup scope, 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}' for Billing Account scope, 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/departments/{departmentId}' for Department scope, 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/enrollmentAccounts/{enrollmentAccountId}' for EnrollmentAccount scope, 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}' for BillingProfile scope, 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/invoiceSections/{invoiceSectionId}' for InvoiceSection scope, 'providers/Microsoft.Management/managementGroups/{managementGroupId}' for Management Group scope, 'providers/Microsoft.CostManagement/externalBillingAccounts/{externalBillingAccountName}' for External Billing Account scope and 'providers/Microsoft.CostManagement/externalSubscriptions/{externalSubscriptionName}' for External Subscription scope.",
            "required": true,
            "type": "string"
          },
          {
            "name": "viewName",
            "in": "path",
            "description": "View name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful. "
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        }
      }
    },
    "/providers/Azure.ResourceManager.CostManagement/operations": {
      "get": {
        "operationId": "Operations_List",
        "tags": [
          "Operations"
        ],
        "description": "List the operations for the provider",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/OperationListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/providers/Azure.ResourceManager.CostManagement/scheduledActions/{name}": {
      "get": {
        "operationId": "ScheduledActions_Get",
        "tags": [
          "ScheduledActions"
        ],
        "description": "Get the private scheduled action by name.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Scheduled action name.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ScheduledAction"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "operationId": "ScheduledActions_CreateOrUpdate",
        "tags": [
          "ScheduledActions"
        ],
        "description": "Create or update a private scheduled action.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "if-match",
            "in": "header",
            "description": "ETag of the Entity. Not required when creating an entity. Optional when updating an entity and can be specified to achieve optimistic concurrency.",
            "required": false,
            "type": "string",
            "x-ms-client-name": "If-Match"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Scheduled action name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ScheduledAction"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'ScheduledAction' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/ScheduledAction"
            }
          },
          "201": {
            "description": "Resource 'ScheduledAction' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/ScheduledAction"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "operationId": "ScheduledActions_Delete",
        "tags": [
          "ScheduledActions"
        ],
        "description": "Delete a private scheduled action.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Scheduled action name.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/providers/Azure.ResourceManager.CostManagement/scheduledActions/{name}/run": {
      "post": {
        "operationId": "ScheduledActions_Run",
        "tags": [
          "ScheduledActions"
        ],
        "description": "Processes a private scheduled action.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Scheduled action name.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "ARM operation completed successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/providers/Azure.ResourceManager.CostManagement/views/{viewName}": {
      "get": {
        "operationId": "Views_Get",
        "tags": [
          "Views"
        ],
        "description": "Gets the view by view name.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "viewName",
            "in": "path",
            "description": "View name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/View"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "operationId": "Views_CreateOrUpdate",
        "tags": [
          "Views"
        ],
        "description": "The operation to create or update a view. Update operation requires latest eTag to be set in the request. You may obtain the latest eTag by performing a get operation. Create operation does not require eTag.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "viewName",
            "in": "path",
            "description": "View name",
            "required": true,
            "type": "string"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/View"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'View' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/View"
            }
          },
          "201": {
            "description": "Resource 'View' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/View"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "operationId": "Views_Delete",
        "tags": [
          "Views"
        ],
        "description": "The operation to delete a view.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "viewName",
            "in": "path",
            "description": "View name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/providers/Microsoft.Billing/billingAccounts/{billingAccountName}/billingProfiles/{billingProfileName}/invoices/{invoiceName}/providers/Microsoft.CostManagement/pricesheets/default/download": {
      "post": {
        "operationId": "PriceSheetOperations_Download",
        "description": "Gets a URL to download the pricesheet for an invoice. The operation is supported for billing accounts with agreement type Microsoft Partner Agreement or Microsoft Customer Agreement.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "billingAccountName",
            "in": "path",
            "description": "The ID that uniquely identifies a billing account.",
            "required": true,
            "type": "string",
            "pattern": "([A-Za-z0-9]+(-[A-Za-z0-9]+)+):([A-Za-z0-9]+(-[A-Za-z0-9]+)+)_[0-9]{4}-[0-9]{2}-[0-9]{2}"
          },
          {
            "name": "billingProfileName",
            "in": "path",
            "description": "The ID that uniquely identifies a billing profile.",
            "required": true,
            "type": "string",
            "pattern": "([A-Za-z0-9]+(-[A-Za-z0-9]+)+)"
          },
          {
            "name": "invoiceName",
            "in": "path",
            "description": "The ID that uniquely identifies an invoice.",
            "required": true,
            "type": "string",
            "pattern": "[A-Za-z0-9]+"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/DownloadURL"
            }
          },
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful. "
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        }
      }
    },
    "/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}/providers/Microsoft.CostManagement/benefitUtilizationSummaries": {
      "get": {
        "operationId": "BenefitUtilizationSummariesOperations_ListByBillingProfileId",
        "description": "Lists savings plan utilization summaries for billing profile. Supported at grain values: 'Daily' and 'Monthly'.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "billingAccountId",
            "in": "path",
            "description": "Billing account ID",
            "required": true,
            "type": "string"
          },
          {
            "name": "billingProfileId",
            "in": "path",
            "description": "Billing profile ID.",
            "required": true,
            "type": "string"
          },
          {
            "name": "grainParameter",
            "in": "query",
            "description": "Grain.",
            "required": false,
            "type": "string",
            "enum": [
              "Hourly",
              "Daily",
              "Monthly"
            ],
            "x-ms-enum": {
              "name": "GrainParameter",
              "modelAsString": true,
              "values": [
                {
                  "name": "Hourly",
                  "value": "Hourly",
                  "description": "Hourly grain corresponds to value per hour."
                },
                {
                  "name": "Daily",
                  "value": "Daily",
                  "description": "Hourly grain corresponds to value per day."
                },
                {
                  "name": "Monthly",
                  "value": "Monthly",
                  "description": "Hourly grain corresponds to value per month."
                }
              ]
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Supports filtering by properties/benefitId, properties/benefitOrderId and properties/usageDate.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/PagedBenefitUtilizationSummary"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}/providers/Microsoft.CostManagement/generateBenefitUtilizationSummariesReport": {
      "post": {
        "operationId": "BillingProfileScopeOperations_GenerateBenefitUtilizationSummariesReport",
        "description": "Triggers generation of a benefit utilization summaries report for the provided billing account and billing profile.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "billingAccountId",
            "in": "path",
            "description": "Billing account ID",
            "required": true,
            "type": "string"
          },
          {
            "name": "billingProfileId",
            "in": "path",
            "description": "Billing profile ID.",
            "required": true,
            "type": "string"
          },
          {
            "name": "benefitUtilizationSummariesRequest",
            "in": "body",
            "description": "Async Benefit Utilization Summary report to be created.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BenefitUtilizationSummariesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/BenefitUtilizationSummariesOperationStatus"
            }
          },
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful. "
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        }
      }
    },
    "/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}/providers/Microsoft.CostManagement/generateReservationDetailsReport": {
      "post": {
        "operationId": "GenerateReservationDetailsReportOperations_ByBillingProfileId",
        "description": "Generates the reservations details report for provided date range asynchronously by billing profile. The Reservation usage details can be viewed by only certain enterprise roles by default. For more details on the roles see, https://docs.microsoft.com/en-us/azure/cost-management-billing/reservations/reservation-utilization#view-utilization-in-the-azure-portal-with-azure-rbac-access",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "billingAccountId",
            "in": "path",
            "description": "Billing account ID",
            "required": true,
            "type": "string"
          },
          {
            "name": "billingProfileId",
            "in": "path",
            "description": "Billing profile ID.",
            "required": true,
            "type": "string"
          },
          {
            "name": "startDate",
            "in": "query",
            "description": "Start Date",
            "required": true,
            "type": "string"
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "End Date",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/OperationStatus"
            }
          },
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful. "
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        }
      }
    },
    "/providers/Microsoft.Billing/billingAccounts/{billingAccountName}/billingProfiles/{billingProfileName}/providers/Microsoft.CostManagement/pricesheets/default/download": {
      "post": {
        "operationId": "PriceSheetOperations_DownloadByBillingProfile",
        "description": "Gets a URL to download the current month's pricesheet for a billing profile. The operation is supported for billing accounts with agreement type Microsoft Partner Agreement or Microsoft Customer Agreement.Due to Azure product growth, the Azure price sheet download experience in this preview version will be updated from a single csv file to a Zip file containing multiple csv files, each with max 200k records.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "billingAccountName",
            "in": "path",
            "description": "The ID that uniquely identifies a billing account.",
            "required": true,
            "type": "string",
            "pattern": "([A-Za-z0-9]+(-[A-Za-z0-9]+)+):([A-Za-z0-9]+(-[A-Za-z0-9]+)+)_[0-9]{4}-[0-9]{2}-[0-9]{2}"
          },
          {
            "name": "billingProfileName",
            "in": "path",
            "description": "The ID that uniquely identifies a billing profile.",
            "required": true,
            "type": "string",
            "pattern": "([A-Za-z0-9]+(-[A-Za-z0-9]+)+)"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/DownloadURL"
            }
          },
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful. "
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        }
      }
    },
    "/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/providers/Microsoft.CostManagement/benefitUtilizationSummaries": {
      "get": {
        "operationId": "BenefitUtilizationSummariesOperations_ListByBillingAccountId",
        "description": "Lists savings plan utilization summaries for the enterprise agreement scope. Supported at grain values: 'Daily' and 'Monthly'.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "billingAccountId",
            "in": "path",
            "description": "Billing account ID",
            "required": true,
            "type": "string"
          },
          {
            "name": "grainParameter",
            "in": "query",
            "description": "Grain.",
            "required": false,
            "type": "string",
            "enum": [
              "Hourly",
              "Daily",
              "Monthly"
            ],
            "x-ms-enum": {
              "name": "GrainParameter",
              "modelAsString": true,
              "values": [
                {
                  "name": "Hourly",
                  "value": "Hourly",
                  "description": "Hourly grain corresponds to value per hour."
                },
                {
                  "name": "Daily",
                  "value": "Daily",
                  "description": "Hourly grain corresponds to value per day."
                },
                {
                  "name": "Monthly",
                  "value": "Monthly",
                  "description": "Hourly grain corresponds to value per month."
                }
              ]
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Supports filtering by properties/benefitId, properties/benefitOrderId and properties/usageDate.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/PagedBenefitUtilizationSummary"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/providers/Microsoft.CostManagement/generateBenefitUtilizationSummariesReport": {
      "post": {
        "operationId": "BillingAccountScopeOperations_GenerateBenefitUtilizationSummariesReport",
        "description": "Triggers generation of a benefit utilization summaries report for the provided billing account. This API supports only enrollment accounts.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "billingAccountId",
            "in": "path",
            "description": "Billing account ID",
            "required": true,
            "type": "string"
          },
          {
            "name": "benefitUtilizationSummariesRequest",
            "in": "body",
            "description": "Async Benefit Utilization Summary report to be created.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BenefitUtilizationSummariesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/BenefitUtilizationSummariesOperationStatus"
            }
          },
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful. "
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        }
      }
    },
    "/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/providers/Microsoft.CostManagement/generateReservationDetailsReport": {
      "post": {
        "operationId": "GenerateReservationDetailsReportOperations_ByBillingAccountId",
        "description": "Generates the reservations details report for provided date range asynchronously based on enrollment id. The Reservation usage details can be viewed only by certain enterprise roles. For more details on the roles see, https://docs.microsoft.com/en-us/azure/cost-management-billing/manage/understand-ea-roles#usage-and-costs-access-by-role",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "billingAccountId",
            "in": "path",
            "description": "Enrollment ID (Legacy BillingAccount ID)",
            "required": true,
            "type": "string"
          },
          {
            "name": "startDate",
            "in": "query",
            "description": "Start Date",
            "required": true,
            "type": "string"
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "End Date",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/OperationStatus"
            }
          },
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful. "
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        }
      }
    },
    "/providers/Microsoft.BillingBenefits/savingsPlanOrders/{savingsPlanOrderId}/providers/Microsoft.CostManagement/benefitUtilizationSummaries": {
      "get": {
        "operationId": "BenefitUtilizationSummariesOperations_ListBySavingsPlanOrder",
        "description": "Lists the savings plan utilization summaries for daily or monthly grain.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Supports filtering by properties/usageDate.",
            "required": false,
            "type": "string"
          },
          {
            "name": "grainParameter",
            "in": "query",
            "description": "Grain.",
            "required": false,
            "type": "string",
            "enum": [
              "Hourly",
              "Daily",
              "Monthly"
            ],
            "x-ms-enum": {
              "name": "GrainParameter",
              "modelAsString": true,
              "values": [
                {
                  "name": "Hourly",
                  "value": "Hourly",
                  "description": "Hourly grain corresponds to value per hour."
                },
                {
                  "name": "Daily",
                  "value": "Daily",
                  "description": "Hourly grain corresponds to value per day."
                },
                {
                  "name": "Monthly",
                  "value": "Monthly",
                  "description": "Hourly grain corresponds to value per month."
                }
              ]
            }
          },
          {
            "name": "savingsPlanOrderId",
            "in": "path",
            "description": "Savings plan order ID.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/PagedBenefitUtilizationSummary"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/providers/Microsoft.BillingBenefits/savingsPlanOrders/{savingsPlanOrderId}/providers/Microsoft.CostManagement/generateBenefitUtilizationSummariesReport": {
      "post": {
        "operationId": "SavingsPlanOrderScopeOperations_GenerateBenefitUtilizationSummariesReport",
        "description": "Triggers generation of a benefit utilization summaries report for the provided savings plan order.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "savingsPlanOrderId",
            "in": "path",
            "description": "Savings plan order ID.",
            "required": true,
            "type": "string"
          },
          {
            "name": "benefitUtilizationSummariesRequest",
            "in": "body",
            "description": "Async Benefit Utilization Summary report to be created.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BenefitUtilizationSummariesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/BenefitUtilizationSummariesOperationStatus"
            }
          },
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful. "
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        }
      }
    },
    "/providers/Microsoft.BillingBenefits/savingsPlanOrders/{savingsPlanOrderId}/savingsPlans/{savingsPlanId}/providers/Microsoft.CostManagement/benefitUtilizationSummaries": {
      "get": {
        "operationId": "BenefitUtilizationSummariesOperations_ListBySavingsPlanId",
        "description": "Lists the savings plan utilization summaries for daily or monthly grain.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Supports filtering by properties/usageDate.",
            "required": false,
            "type": "string"
          },
          {
            "name": "grainParameter",
            "in": "query",
            "description": "Grain.",
            "required": false,
            "type": "string",
            "enum": [
              "Hourly",
              "Daily",
              "Monthly"
            ],
            "x-ms-enum": {
              "name": "GrainParameter",
              "modelAsString": true,
              "values": [
                {
                  "name": "Hourly",
                  "value": "Hourly",
                  "description": "Hourly grain corresponds to value per hour."
                },
                {
                  "name": "Daily",
                  "value": "Daily",
                  "description": "Hourly grain corresponds to value per day."
                },
                {
                  "name": "Monthly",
                  "value": "Monthly",
                  "description": "Hourly grain corresponds to value per month."
                }
              ]
            }
          },
          {
            "name": "savingsPlanOrderId",
            "in": "path",
            "description": "Savings plan order ID.",
            "required": true,
            "type": "string"
          },
          {
            "name": "savingsPlanId",
            "in": "path",
            "description": "Savings plan ID.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/PagedBenefitUtilizationSummary"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/providers/Microsoft.BillingBenefits/savingsPlanOrders/{savingsPlanOrderId}/savingsPlans/{savingsPlanId}/providers/Microsoft.CostManagement/generateBenefitUtilizationSummariesReport": {
      "post": {
        "operationId": "SavingsPlanScopeOperations_GenerateBenefitUtilizationSummariesReportAsync",
        "description": "Triggers generation of a benefit utilization summaries report for the provided savings plan.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "savingsPlanOrderId",
            "in": "path",
            "description": "Savings plan order ID.",
            "required": true,
            "type": "string"
          },
          {
            "name": "savingsPlanId",
            "in": "path",
            "description": "Savings plan ID.",
            "required": true,
            "type": "string"
          },
          {
            "name": "benefitUtilizationSummariesRequest",
            "in": "body",
            "description": "Async Benefit Utilization Summary report to be created.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BenefitUtilizationSummariesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/BenefitUtilizationSummariesOperationStatus"
            }
          },
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful. "
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        }
      }
    },
    "/providers/Microsoft.Capacity/reservationorders/{reservationOrderId}/providers/Microsoft.CostManagement/generateBenefitUtilizationSummariesReport": {
      "post": {
        "operationId": "ReservationOrderScopeOperations_GenerateBenefitUtilizationSummariesReport",
        "description": "Triggers generation of a benefit utilization summaries report for the provided reservation order.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "reservationOrderId",
            "in": "path",
            "description": "Reservation Order ID",
            "required": true,
            "type": "string"
          },
          {
            "name": "benefitUtilizationSummariesRequest",
            "in": "body",
            "description": "Async Benefit Utilization Summary report to be created.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BenefitUtilizationSummariesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/BenefitUtilizationSummariesOperationStatus"
            }
          },
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful. "
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        }
      }
    },
    "/providers/Microsoft.Capacity/reservationorders/{reservationOrderId}/reservations/{reservationId}/providers/Microsoft.CostManagement/generateBenefitUtilizationSummariesReport": {
      "post": {
        "operationId": "ReservationScopeOperations_GenerateBenefitUtilizationSummariesReport",
        "description": "Triggers generation of a benefit utilization summaries report for the provided reservation.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "reservationOrderId",
            "in": "path",
            "description": "Reservation Order ID",
            "required": true,
            "type": "string"
          },
          {
            "name": "reservationId",
            "in": "path",
            "description": "Reservation ID",
            "required": true,
            "type": "string"
          },
          {
            "name": "benefitUtilizationSummariesRequest",
            "in": "body",
            "description": "Async Benefit Utilization Summary report to be created.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BenefitUtilizationSummariesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/BenefitUtilizationSummariesOperationStatus"
            }
          },
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful. "
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        }
      }
    },
    "/providers/Microsoft.CostManagement/{externalCloudProviderType}/{externalCloudProviderId}/dimensions": {
      "get": {
        "operationId": "DimensionsOperations_ByExternalCloudProviderType",
        "description": "Lists the dimensions by the external cloud provider type.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "externalCloudProviderType",
            "in": "path",
            "description": "The external cloud provider type associated with dimension/query operations. This includes 'externalSubscriptions' for linked account and 'externalBillingAccounts' for consolidated account.",
            "required": true,
            "type": "string",
            "enum": [
              "externalSubscriptions",
              "externalBillingAccounts"
            ],
            "x-ms-enum": {
              "name": "ExternalCloudProviderType",
              "modelAsString": true
            }
          },
          {
            "name": "externalCloudProviderId",
            "in": "path",
            "description": "This can be '{externalSubscriptionId}' for linked account or '{externalBillingAccountId}' for consolidated account used with dimension/query operations.",
            "required": true,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "May be used to filter dimensions by properties/category, properties/usageStart, properties/usageEnd. Supported operators are 'eq','lt', 'gt', 'le', 'ge'.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "May be used to expand the properties/data within a dimension category. By default, data is not included when listing dimensions.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$skiptoken",
            "in": "query",
            "description": "Skiptoken is only used if a previous operation returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skiptoken parameter that specifies a starting point to use for subsequent calls.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "May be used to limit the number of results to the most recent N dimension data.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 1,
            "maximum": 1000
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/DimensionsListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        }
      }
    },
    "/providers/Microsoft.CostManagement/{externalCloudProviderType}/{externalCloudProviderId}/forecast": {
      "post": {
        "operationId": "ForecastOperations_ExternalCloudProviderUsage",
        "description": "Lists the forecast charges for external cloud provider type defined.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "May be used to filter forecasts by properties/usageDate (Utc time), properties/chargeType or properties/grain. The filter supports 'eq', 'lt', 'gt', 'le', 'ge', and 'and'. It does not currently support 'ne', 'or', or 'not'.",
            "required": false,
            "type": "string"
          },
          {
            "name": "externalCloudProviderType",
            "in": "path",
            "description": "The external cloud provider type associated with dimension/query operations. This includes 'externalSubscriptions' for linked account and 'externalBillingAccounts' for consolidated account.",
            "required": true,
            "type": "string",
            "enum": [
              "externalSubscriptions",
              "externalBillingAccounts"
            ],
            "x-ms-enum": {
              "name": "ExternalCloudProviderType",
              "modelAsString": true
            }
          },
          {
            "name": "externalCloudProviderId",
            "in": "path",
            "description": "This can be '{externalSubscriptionId}' for linked account or '{externalBillingAccountId}' for consolidated account used with dimension/query operations.",
            "required": true,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Parameters supplied to the CreateOrUpdate Forecast Config operation.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ForecastDefinition"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/ForecastResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        }
      }
    },
    "/providers/Microsoft.CostManagement/{externalCloudProviderType}/{externalCloudProviderId}/query": {
      "post": {
        "operationId": "QueryOperations_UsageByExternalCloudProviderType",
        "description": "Query the usage data for external cloud provider type defined.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "externalCloudProviderType",
            "in": "path",
            "description": "The external cloud provider type associated with dimension/query operations. This includes 'externalSubscriptions' for linked account and 'externalBillingAccounts' for consolidated account.",
            "required": true,
            "type": "string",
            "enum": [
              "externalSubscriptions",
              "externalBillingAccounts"
            ],
            "x-ms-enum": {
              "name": "ExternalCloudProviderType",
              "modelAsString": true
            }
          },
          {
            "name": "externalCloudProviderId",
            "in": "path",
            "description": "This can be '{externalSubscriptionId}' for linked account or '{externalBillingAccountId}' for consolidated account used with dimension/query operations.",
            "required": true,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Parameters supplied to the CreateOrUpdate Query Config operation.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/QueryDefinition"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/QueryResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        }
      }
    },
    "/providers/Microsoft.CostManagement/checkNameAvailability": {
      "post": {
        "operationId": "ScheduledActionsOperations_CheckNameAvailability",
        "description": "Checks availability and correctness of the name for a scheduled action.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CheckNameAvailabilityRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/CheckNameAvailabilityResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Azure.ResourceManager.CostManagement/alerts": {
      "get": {
        "operationId": "Alerts_ListExternal",
        "tags": [
          "Alerts"
        ],
        "description": "Lists the Alerts for external cloud provider type defined.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/AlertListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    }
  },
  "definitions": {
    "AccumulatedType": {
      "type": "string",
      "enum": [
        "true",
        "false"
      ],
      "x-ms-enum": {
        "name": "AccumulatedType",
        "modelAsString": true
      }
    },
    "ActionType": {
      "type": "string",
      "enum": [
        "Internal"
      ],
      "x-ms-enum": {
        "name": "ActionType",
        "modelAsString": true
      }
    },
    "Alert": {
      "type": "object",
      "description": "An individual alert.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/AlertProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "name": {
          "type": "string",
          "description": "Alert ID",
          "readOnly": true
        }
      },
      "required": [
        "name"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "AlertCategory": {
      "type": "string",
      "enum": [
        "Cost",
        "Usage",
        "Billing",
        "System"
      ],
      "x-ms-enum": {
        "name": "AlertCategory",
        "modelAsString": true
      }
    },
    "AlertCriteria": {
      "type": "string",
      "enum": [
        "CostThresholdExceeded",
        "UsageThresholdExceeded",
        "CreditThresholdApproaching",
        "CreditThresholdReached",
        "QuotaThresholdApproaching",
        "QuotaThresholdReached",
        "MultiCurrency",
        "ForecastCostThresholdExceeded",
        "ForecastUsageThresholdExceeded",
        "InvoiceDueDateApproaching",
        "InvoiceDueDateReached",
        "CrossCloudNewDataAvailable",
        "CrossCloudCollectionError",
        "GeneralThresholdError"
      ],
      "x-ms-enum": {
        "name": "AlertCriteria",
        "modelAsString": true
      }
    },
    "AlertListResult": {
      "type": "object",
      "description": "The response of a Alert list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The Alert items on this page",
          "items": {
            "$ref": "#/definitions/Alert"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "AlertOperator": {
      "type": "string",
      "enum": [
        "None",
        "EqualTo",
        "GreaterThan",
        "GreaterThanOrEqualTo",
        "LessThan",
        "LessThanOrEqualTo"
      ],
      "x-ms-enum": {
        "name": "AlertOperator",
        "modelAsString": true
      }
    },
    "AlertProperties": {
      "type": "object",
      "description": "Alert properties.",
      "properties": {
        "definition": {
          "$ref": "#/definitions/AlertPropertiesDefinition",
          "description": "defines the type of alert"
        },
        "description": {
          "type": "string",
          "description": "Alert description"
        },
        "source": {
          "$ref": "#/definitions/AlertSource",
          "description": "Source of alert"
        },
        "details": {
          "$ref": "#/definitions/AlertPropertiesDetails",
          "description": "Alert details"
        },
        "costEntityId": {
          "type": "string",
          "description": "related budget"
        },
        "status": {
          "$ref": "#/definitions/AlertStatus",
          "description": "alert status"
        },
        "creationTime": {
          "type": "string",
          "description": "dateTime in which alert was created"
        },
        "closeTime": {
          "type": "string",
          "description": "dateTime in which alert was closed"
        },
        "modificationTime": {
          "type": "string",
          "description": "dateTime in which alert was last modified"
        },
        "statusModificationUserName": {
          "type": "string",
          "description": "User who last modified the alert"
        },
        "statusModificationTime": {
          "type": "string",
          "description": "dateTime in which the alert status was last modified"
        }
      }
    },
    "AlertPropertiesDefinition": {
      "type": "object",
      "description": "defines the type of alert",
      "properties": {
        "type": {
          "$ref": "#/definitions/AlertType",
          "description": "type of alert"
        },
        "category": {
          "$ref": "#/definitions/AlertCategory",
          "description": "Alert category"
        },
        "criteria": {
          "$ref": "#/definitions/AlertCriteria",
          "description": "Criteria that triggered alert"
        }
      }
    },
    "AlertPropertiesDetails": {
      "type": "object",
      "description": "Alert details",
      "properties": {
        "timeGrainType": {
          "$ref": "#/definitions/AlertTimeGrainType",
          "description": "Type of timegrain cadence"
        },
        "periodStartDate": {
          "type": "string",
          "description": "datetime of periodStartDate"
        },
        "triggeredBy": {
          "type": "string",
          "description": "notificationId that triggered this alert"
        },
        "resourceGroupFilter": {
          "type": "array",
          "description": "array of resourceGroups to filter by",
          "items": {}
        },
        "resourceFilter": {
          "type": "array",
          "description": "array of resources to filter by",
          "items": {}
        },
        "meterFilter": {
          "type": "array",
          "description": "array of meters to filter by",
          "items": {}
        },
        "tagFilter": {
          "type": "object",
          "description": "tags to filter by",
          "additionalProperties": {}
        },
        "threshold": {
          "type": "number",
          "format": "float",
          "description": "notification threshold percentage as a decimal which activated this alert"
        },
        "operator": {
          "$ref": "#/definitions/AlertOperator",
          "description": "operator used to compare currentSpend with amount"
        },
        "amount": {
          "type": "number",
          "format": "float",
          "description": "budget threshold amount"
        },
        "unit": {
          "type": "string",
          "description": "unit of currency being used"
        },
        "currentSpend": {
          "type": "number",
          "format": "float",
          "description": "current spend"
        },
        "contactEmails": {
          "type": "array",
          "description": "list of emails to contact",
          "items": {
            "type": "string"
          }
        },
        "contactGroups": {
          "type": "array",
          "description": "list of action groups to broadcast to",
          "items": {
            "type": "string"
          }
        },
        "contactRoles": {
          "type": "array",
          "description": "list of contact roles",
          "items": {
            "type": "string"
          }
        },
        "overridingAlert": {
          "type": "string",
          "description": "overriding alert"
        },
        "departmentName": {
          "type": "string",
          "description": "department name"
        },
        "companyName": {
          "type": "string",
          "description": "company name"
        },
        "enrollmentNumber": {
          "type": "string",
          "description": "enrollment number"
        },
        "enrollmentStartDate": {
          "type": "string",
          "description": "datetime of enrollmentStartDate"
        },
        "enrollmentEndDate": {
          "type": "string",
          "description": "datetime of enrollmentEndDate"
        },
        "invoicingThreshold": {
          "type": "number",
          "format": "float",
          "description": "invoicing threshold"
        }
      }
    },
    "AlertSource": {
      "type": "string",
      "enum": [
        "Preset",
        "User"
      ],
      "x-ms-enum": {
        "name": "AlertSource",
        "modelAsString": true
      }
    },
    "AlertStatus": {
      "type": "string",
      "enum": [
        "None",
        "Active",
        "Overridden",
        "Resolved",
        "Dismissed"
      ],
      "x-ms-enum": {
        "name": "AlertStatus",
        "modelAsString": true
      }
    },
    "AlertTimeGrainType": {
      "type": "string",
      "enum": [
        "None",
        "Monthly",
        "Quarterly",
        "Annually",
        "BillingMonth",
        "BillingQuarter",
        "BillingAnnual"
      ],
      "x-ms-enum": {
        "name": "AlertTimeGrainType",
        "modelAsString": true
      }
    },
    "AlertType": {
      "type": "string",
      "enum": [
        "Budget",
        "Invoice",
        "Credit",
        "Quota",
        "General",
        "xCloud",
        "BudgetForecast"
      ],
      "x-ms-enum": {
        "name": "AlertType",
        "modelAsString": true
      }
    },
    "AllSavingsBenefitDetails": {
      "type": "object",
      "description": "Benefit recommendation details.",
      "properties": {
        "overageCost": {
          "type": "number",
          "format": "float",
          "description": "The difference between total cost and benefit cost for the 'totalHours' in the look-back period.",
          "readOnly": true
        },
        "benefitCost": {
          "type": "number",
          "format": "float",
          "description": "The estimated cost with benefit for the 'totalHours' in the look-back period. It's equal to (commitmentAmount * totalHours)",
          "readOnly": true
        },
        "totalCost": {
          "type": "number",
          "format": "float",
          "description": "Total cost, which is sum of benefit cost and overage cost.",
          "readOnly": true
        },
        "savingsAmount": {
          "type": "number",
          "format": "float",
          "description": "The amount saved for the 'totalHours' in the look-back period, by purchasing the recommended quantity of the benefit.",
          "readOnly": true
        },
        "savingsPercentage": {
          "type": "number",
          "format": "float",
          "description": "The savings in percentage for the 'totalHours' in the look-back period, by purchasing the recommended quantity of benefit.",
          "readOnly": true
        },
        "coveragePercentage": {
          "type": "number",
          "format": "float",
          "description": "Estimated benefit coverage percentage for the 'totalHours' in the look-back period, with this commitment.",
          "readOnly": true
        },
        "commitmentAmount": {
          "type": "number",
          "format": "float",
          "description": "The commitment amount at the commitmentGranularity.",
          "readOnly": true
        },
        "averageUtilizationPercentage": {
          "type": "number",
          "format": "float",
          "description": "Estimated average utilization percentage for the 'totalHours' in the look-back period, with this commitment.",
          "readOnly": true
        },
        "wastageCost": {
          "type": "number",
          "format": "float",
          "description": "Estimated unused portion of the 'benefitCost'.",
          "readOnly": true
        }
      }
    },
    "AllSavingsList": {
      "type": "object",
      "description": "The list of all benefit recommendations with the recommendation details.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The list of benefit recommendations with the recommendation details..",
          "items": {
            "$ref": "#/definitions/AllSavingsBenefitDetails"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        },
        "nextLink": {
          "type": "string",
          "description": "The link (URL) to the next page of results.",
          "readOnly": true
        }
      }
    },
    "AsyncOperationStatusProperties": {
      "type": "object",
      "description": "Object representing the report url and valid until date of the async report generated.",
      "properties": {
        "reportUrl": {
          "$ref": "#/definitions/BenefitUtilizationSummaryReportSchema",
          "description": "Sas url to the async benefit utilization summaries report. Will be empty if the report is in Running or Failed state."
        },
        "secondaryReportUrl": {
          "$ref": "#/definitions/BenefitUtilizationSummaryReportSchema",
          "description": "Sas url to async benefit utilization summaries report in secondary storage in case of primary outage. Will be empty if the report is in Running or Failed state."
        },
        "validUntil": {
          "type": "string",
          "format": "date-time",
          "description": "The date that the sas url provided in reportUrl expires."
        }
      }
    },
    "Azure.Core.Foundations.Error": {
      "type": "object",
      "description": "The error object.",
      "properties": {
        "code": {
          "type": "string",
          "description": "One of a server-defined set of error codes."
        },
        "message": {
          "type": "string",
          "description": "A human-readable representation of the error."
        },
        "target": {
          "type": "string",
          "description": "The target of the error."
        },
        "details": {
          "type": "array",
          "description": "An array of details about specific errors that led to this reported error.",
          "items": {
            "$ref": "#/definitions/Azure.Core.Foundations.Error"
          },
          "x-ms-identifiers": []
        },
        "innererror": {
          "$ref": "#/definitions/Azure.Core.Foundations.InnerError",
          "description": "An object containing more specific information than the current object about the error."
        }
      },
      "required": [
        "code",
        "message"
      ]
    },
    "Azure.Core.Foundations.ErrorResponse": {
      "type": "object",
      "description": "A response containing error details.",
      "properties": {
        "error": {
          "$ref": "#/definitions/Azure.Core.Foundations.Error",
          "description": "The error object."
        }
      },
      "required": [
        "error"
      ]
    },
    "Azure.Core.Foundations.InnerError": {
      "type": "object",
      "description": "An object containing more specific information about the error. As per Microsoft One API guidelines - https://github.com/Microsoft/api-guidelines/blob/vNext/Guidelines.md#7102-error-condition-responses.",
      "properties": {
        "code": {
          "type": "string",
          "description": "One of a server-defined set of error codes."
        },
        "innererror": {
          "$ref": "#/definitions/Azure.Core.Foundations.InnerError",
          "description": "Inner error."
        }
      }
    },
    "BenefitKind": {
      "type": "string",
      "enum": [
        "IncludedQuantity",
        "Reservation",
        "SavingsPlan"
      ],
      "x-ms-enum": {
        "name": "BenefitKind",
        "modelAsString": true,
        "values": [
          {
            "name": "IncludedQuantity",
            "value": "IncludedQuantity",
            "description": "Benefit is IncludedQuantity."
          },
          {
            "name": "Reservation",
            "value": "Reservation",
            "description": "Benefit is Reservation."
          },
          {
            "name": "SavingsPlan",
            "value": "SavingsPlan",
            "description": "Benefit is SavingsPlan."
          }
        ]
      }
    },
    "BenefitRecommendationModel": {
      "type": "object",
      "description": "benefit plan recommendation details.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/BenefitRecommendationProperties",
          "description": "The properties of the benefit recommendations."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/BenefitResource"
        }
      ]
    },
    "BenefitRecommendationProperties": {
      "type": "object",
      "description": "The properties of the benefit recommendations.",
      "properties": {
        "scope": {
          "type": "string",
          "description": "Discriminator property for BenefitRecommendationProperties."
        },
        "firstConsumptionDate": {
          "type": "string",
          "format": "date-time",
          "description": "The first usage date used for looking back for computing the recommendations.",
          "readOnly": true
        },
        "lastConsumptionDate": {
          "type": "string",
          "format": "date-time",
          "description": "The last usage date used for looking back for computing the recommendations.",
          "readOnly": true
        },
        "lookBackPeriod": {
          "$ref": "#/definitions/LookBackPeriod",
          "description": "The number of days of usage evaluated for computing the recommendations."
        },
        "totalHours": {
          "type": "integer",
          "format": "int32",
          "description": "The total hours for which the cost is covered. Its equal to number of records in a property 'properties/usage/charges'.",
          "readOnly": true
        },
        "usage": {
          "$ref": "#/definitions/RecommendationUsageDetails",
          "description": "On-demand charges between firstConsumptionDate and lastConsumptionDate that were used for computing benefit recommendations."
        },
        "armSkuName": {
          "type": "string",
          "description": "ARM SKU name. 'Compute_Savings_Plan' for SavingsPlan.",
          "readOnly": true
        },
        "term": {
          "$ref": "#/definitions/Term",
          "description": "Term period of the benefit. For example, P1Y or P3Y."
        },
        "commitmentGranularity": {
          "$ref": "#/definitions/Grain",
          "description": "Grain of the proposed commitment amount. Supported values: 'Hourly'"
        },
        "currencyCode": {
          "type": "string",
          "description": "An ISO 4217 currency code identifier for the costs and savings amounts.",
          "readOnly": true
        },
        "costWithoutBenefit": {
          "type": "number",
          "format": "float",
          "description": "The current cost without benefit, corresponds to 'totalHours' in the look-back period.",
          "readOnly": true
        },
        "recommendationDetails": {
          "$ref": "#/definitions/AllSavingsBenefitDetails",
          "description": "The details of the proposed recommendation."
        },
        "allRecommendationDetails": {
          "$ref": "#/definitions/AllSavingsList",
          "description": "The list of all benefit recommendations with the recommendation details.",
          "readOnly": true
        }
      },
      "discriminator": "scope",
      "required": [
        "scope"
      ]
    },
    "BenefitResource": {
      "type": "object",
      "description": "The benefit resource model definition.",
      "properties": {
        "kind": {
          "$ref": "#/definitions/BenefitKind",
          "description": "Reservation or SavingsPlan."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ]
    },
    "BenefitUtilizationSummariesOperationStatus": {
      "type": "object",
      "description": "Status of a benefit utilization summaries report. Provides Async Benefit Utilization Summaries Request input, status, and report sas url.",
      "properties": {
        "input": {
          "$ref": "#/definitions/BenefitUtilizationSummariesRequest",
          "description": "Input given to create the benefit utilization summaries report."
        },
        "status": {
          "$ref": "#/definitions/OperationStatusType",
          "description": "The status of the creation of the benefit utilization summaries report."
        },
        "properties": {
          "$ref": "#/definitions/AsyncOperationStatusProperties",
          "description": "Contains sas url to the async benefit utilization summaries report and a date that the url is valid until. These values will be empty if the report is in a Running or Failed state"
        }
      }
    },
    "BenefitUtilizationSummariesRequest": {
      "type": "object",
      "description": "Properties of an async benefit utilization summaries request.",
      "properties": {
        "billingAccountId": {
          "type": "string",
          "description": "Billing account the benefit utilization summaries report is for. Required for billing account and billing profile scopes. Not supported for any benefit scopes."
        },
        "billingProfileId": {
          "type": "string",
          "description": "Billing profile id the benefit utilization summaries report is for. Required for billing profile scope. Not supported for billing account or any benefit scopes."
        },
        "benefitOrderId": {
          "type": "string",
          "description": "Benefit order id the benefit utilization summaries report is for. Required for benefit order and benefit id scopes. Not supported for any billing scopes."
        },
        "benefitId": {
          "type": "string",
          "description": "Benefit id the benefit utilization summaries report is for. Required for benefit id scope. Not supported for benefit order or any billing scopes."
        },
        "grain": {
          "$ref": "#/definitions/Grain",
          "description": "The grain the summaries data is served at in the report. Accepted values are 'Daily' or 'Monthly'."
        },
        "startDate": {
          "type": "string",
          "format": "date-time",
          "description": "The start date of the summaries data that will be served in the report."
        },
        "endDate": {
          "type": "string",
          "format": "date-time",
          "description": "The end date of the summaries data that will be served in the report."
        },
        "kind": {
          "$ref": "#/definitions/BenefitKind",
          "description": "The type of benefit data requested. Required for billing account and billing profile scopes. Implied and not to be passed at benefit scopes. Supported values are Reservation and SavingsPlan"
        }
      },
      "required": [
        "grain",
        "startDate",
        "endDate"
      ]
    },
    "BenefitUtilizationSummary": {
      "type": "object",
      "description": "Benefit utilization summary resource.",
      "properties": {
        "kind": {
          "type": "string",
          "description": "Discriminator property for BenefitUtilizationSummary."
        }
      },
      "discriminator": "kind",
      "required": [
        "kind"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ]
    },
    "BenefitUtilizationSummaryProperties": {
      "type": "object",
      "description": "The properties of a benefit utilization summary.",
      "properties": {
        "armSkuName": {
          "type": "string",
          "description": "ARM SKU name. For example, 'Compute_Savings_Plan' for savings plan.",
          "readOnly": true
        },
        "benefitId": {
          "type": "string",
          "description": "The benefit ID is the identifier of the benefit.",
          "readOnly": true
        },
        "benefitOrderId": {
          "type": "string",
          "description": "The benefit order ID is the identifier for a benefit purchase.",
          "readOnly": true
        },
        "benefitType": {
          "$ref": "#/definitions/BenefitKind",
          "description": "The benefit type. Supported values: 'SavingsPlan'."
        },
        "usageDate": {
          "type": "string",
          "format": "date-time",
          "description": "Date corresponding to the utilization summary record. If the grain of data is monthly, value for this field will be first day of the month.",
          "readOnly": true
        }
      }
    },
    "BenefitUtilizationSummaryReportSchema": {
      "type": "string",
      "enum": [
        "Kind",
        "AvgUtilizationPercentage",
        "BenefitOrderId",
        "BenefitId",
        "BenefitType",
        "MaxUtilizationPercentage",
        "MinUtilizationPercentage",
        "UsageDate",
        "UtilizedPercentage"
      ],
      "x-ms-enum": {
        "name": "BenefitUtilizationSummaryReportSchema",
        "modelAsString": true
      }
    },
    "BlobInfo": {
      "type": "object",
      "description": "The blob information generated by this operation.",
      "properties": {
        "blobLink": {
          "type": "string",
          "description": "Link to the blob to download file."
        },
        "byteCount": {
          "type": "integer",
          "format": "int32",
          "description": "Bytes in the blob."
        }
      }
    },
    "ChartType": {
      "type": "string",
      "enum": [
        "Area",
        "Line",
        "StackedColumn",
        "GroupedColumn",
        "Table"
      ],
      "x-ms-enum": {
        "name": "ChartType",
        "modelAsString": true
      }
    },
    "CheckNameAvailabilityReason": {
      "type": "string",
      "enum": [
        "Invalid",
        "AlreadyExists"
      ],
      "x-ms-enum": {
        "name": "CheckNameAvailabilityReason",
        "modelAsString": true
      }
    },
    "CheckNameAvailabilityRequest": {
      "type": "object",
      "description": "The check availability request body.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the resource for which availability needs to be checked."
        },
        "type": {
          "type": "string",
          "description": "The resource type."
        }
      }
    },
    "CheckNameAvailabilityResponse": {
      "type": "object",
      "description": "The check availability result.",
      "properties": {
        "nameAvailable": {
          "type": "boolean",
          "description": "Indicates if the resource name is available."
        },
        "reason": {
          "$ref": "#/definitions/CheckNameAvailabilityReason",
          "description": "The reason why the given name is not available."
        },
        "message": {
          "type": "string",
          "description": "Detailed reason why the given name is available."
        }
      }
    },
    "CommonExportProperties": {
      "type": "object",
      "description": "The common properties of the export.",
      "properties": {
        "format": {
          "$ref": "#/definitions/FormatType",
          "description": "The format of the export being delivered. Currently only 'Csv' is supported."
        },
        "deliveryInfo": {
          "$ref": "#/definitions/ExportDeliveryInfo",
          "description": "Has delivery information for the export."
        },
        "definition": {
          "$ref": "#/definitions/ExportDefinition",
          "description": "Has the definition for the export."
        },
        "runHistory": {
          "$ref": "#/definitions/ExportExecutionListResult",
          "description": "If requested, has the most recent run history for the export."
        },
        "partitionData": {
          "type": "boolean",
          "description": "If set to true, exported data will be partitioned by size and placed in a blob directory together with a manifest file. Note: this option is currently available only for Microsoft Customer Agreement commerce scopes."
        },
        "nextRunTimeEstimate": {
          "type": "string",
          "format": "date-time",
          "description": "If the export has an active schedule, provides an estimate of the next run time.",
          "readOnly": true
        }
      },
      "required": [
        "deliveryInfo",
        "definition"
      ]
    },
    "CostDetailsDataFormat": {
      "type": "string",
      "enum": [
        "Csv"
      ],
      "x-ms-enum": {
        "name": "CostDetailsDataFormat",
        "modelAsString": true,
        "values": [
          {
            "name": "CsvCostDetailsDataFormat",
            "value": "Csv",
            "description": "Csv data format."
          }
        ]
      }
    },
    "CostDetailsMetricType": {
      "type": "string",
      "enum": [
        "ActualCost",
        "AmortizedCost"
      ],
      "x-ms-enum": {
        "name": "CostDetailsMetricType",
        "modelAsString": true,
        "values": [
          {
            "name": "ActualCostCostDetailsMetricType",
            "value": "ActualCost",
            "description": "Actual cost data."
          },
          {
            "name": "AmortizedCostCostDetailsMetricType",
            "value": "AmortizedCost",
            "description": "Amortized cost data."
          }
        ]
      }
    },
    "CostDetailsOperationResults": {
      "type": "object",
      "description": "The result of the long running operation for cost details Api.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The id of the long running operation."
        },
        "name": {
          "type": "string",
          "description": "The name of the long running operation."
        },
        "type": {
          "type": "string",
          "description": "The type of the long running operation."
        },
        "status": {
          "$ref": "#/definitions/CostDetailsStatusType",
          "description": "The status of the cost details operation"
        },
        "manifest": {
          "$ref": "#/definitions/ReportManifest",
          "description": "The manifest of the report generated by the operation."
        },
        "validTill": {
          "type": "string",
          "format": "date-time",
          "description": "The time at which report URL becomes invalid/expires in UTC e.g. 2020-12-08T05:55:59.4394737Z."
        },
        "error": {
          "$ref": "#/definitions/ErrorDetails",
          "description": "The details of the error."
        }
      }
    },
    "CostDetailsStatusType": {
      "type": "string",
      "enum": [
        "Completed",
        "NoDataFound",
        "Failed"
      ],
      "x-ms-enum": {
        "name": "CostDetailsStatusType",
        "modelAsString": true,
        "values": [
          {
            "name": "CompletedCostDetailsStatusType",
            "value": "Completed",
            "description": "Operation is Completed."
          },
          {
            "name": "NoDataFoundCostDetailsStatusType",
            "value": "NoDataFound",
            "description": "Operation is Completed and no cost data found."
          },
          {
            "name": "FailedCostDetailsStatusType",
            "value": "Failed",
            "description": "Operation Failed."
          }
        ]
      }
    },
    "CostDetailsTimePeriod": {
      "type": "object",
      "description": "The start and end date for pulling data for the cost detailed report. API only allows data to be pulled for 1 month or less and no older than 13 months.",
      "properties": {
        "start": {
          "type": "string",
          "description": "The start date to pull data from. example format 2020-03-15"
        },
        "end": {
          "type": "string",
          "description": "The end date to pull data to. example format 2020-03-15"
        }
      },
      "required": [
        "start",
        "end"
      ]
    },
    "CostManagementOperation": {
      "type": "object",
      "description": "A Cost management REST API operation.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Operation id: {provider}/{resource}/{operation}.",
          "readOnly": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/Operation"
        }
      ]
    },
    "CostManagementProxyResource": {
      "type": "object",
      "description": "The Resource model definition.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Resource Id.",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "Resource name.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "Resource type.",
          "readOnly": true
        },
        "eTag": {
          "type": "string",
          "description": "eTag of the resource. To handle concurrent update scenario, this field will be used to determine whether the user is updating the latest version or not."
        }
      }
    },
    "CostManagementResource": {
      "type": "object",
      "description": "The Resource model definition.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Resource Id.",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "Resource name.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "Resource type.",
          "readOnly": true
        },
        "location": {
          "type": "string",
          "description": "Location of the resource.",
          "readOnly": true
        },
        "sku": {
          "type": "string",
          "description": "SKU of the resource.",
          "readOnly": true
        },
        "eTag": {
          "type": "string",
          "description": "ETag of the resource.",
          "readOnly": true
        },
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          },
          "readOnly": true
        }
      }
    },
    "CreatedByType": {
      "type": "string",
      "enum": [
        "User",
        "Application",
        "ManagedIdentity",
        "Key"
      ],
      "x-ms-enum": {
        "name": "CreatedByType",
        "modelAsString": true
      }
    },
    "DaysOfWeek": {
      "type": "string",
      "enum": [
        "Monday",
        "Tuesday",
        "Wednesday",
        "Thursday",
        "Friday",
        "Saturday",
        "Sunday"
      ],
      "x-ms-enum": {
        "name": "DaysOfWeek",
        "modelAsString": true
      }
    },
    "Dimension": {
      "type": "object",
      "description": "List of Dimension.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/DimensionProperties",
          "description": "Dimension properties."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/CostManagementResource"
        }
      ]
    },
    "DimensionProperties": {
      "type": "object",
      "description": "Dimension properties.",
      "properties": {
        "description": {
          "type": "string",
          "description": "Dimension description.",
          "readOnly": true
        },
        "filterEnabled": {
          "type": "boolean",
          "description": "Filter enabled.",
          "readOnly": true
        },
        "groupingEnabled": {
          "type": "boolean",
          "description": "Grouping enabled.",
          "readOnly": true
        },
        "data": {
          "type": "array",
          "description": "Dimension data.",
          "items": {
            "type": "string"
          }
        },
        "total": {
          "type": "integer",
          "format": "int32",
          "description": "Total number of data for the dimension.",
          "readOnly": true
        },
        "category": {
          "type": "string",
          "description": "Dimension category.",
          "readOnly": true
        },
        "usageStart": {
          "type": "string",
          "format": "date-time",
          "description": "Usage start.",
          "readOnly": true
        },
        "usageEnd": {
          "type": "string",
          "format": "date-time",
          "description": "Usage end.",
          "readOnly": true
        },
        "nextLink": {
          "type": "string",
          "description": "The link (url) to the next page of results.",
          "readOnly": true
        }
      }
    },
    "DimensionsListResult": {
      "type": "object",
      "description": "Result of listing dimensions. It contains a list of available dimensions.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The list of dimensions.",
          "items": {
            "$ref": "#/definitions/Dimension"
          },
          "readOnly": true
        }
      }
    },
    "DismissAlertPayload": {
      "type": "object",
      "description": "The request payload to update an alert",
      "properties": {
        "properties": {
          "$ref": "#/definitions/AlertProperties",
          "description": "Alert properties."
        }
      }
    },
    "DownloadURL": {
      "type": "object",
      "description": "The URL to download the generated report.",
      "properties": {
        "expiryTime": {
          "type": "string",
          "format": "date-time",
          "description": "The time at which report URL becomes invalid/expires in UTC e.g. 2020-12-08T05:55:59.4394737Z.",
          "readOnly": true
        },
        "validTill": {
          "type": "string",
          "format": "date-time",
          "description": "The time at which report URL becomes invalid/expires in UTC e.g. 2020-12-08T05:55:59.4394737Z."
        },
        "downloadUrl": {
          "type": "string",
          "description": "The URL to download the generated report."
        }
      }
    },
    "ErrorDetails": {
      "type": "object",
      "description": "The details of the error.",
      "properties": {
        "code": {
          "type": "string",
          "description": "Error code.",
          "readOnly": true
        },
        "message": {
          "type": "string",
          "description": "Error message indicating why the operation failed.",
          "readOnly": true
        }
      }
    },
    "ErrorDetailsWithNestedDetails": {
      "type": "object",
      "description": "The details of the error.",
      "properties": {
        "details": {
          "type": "array",
          "description": "The additional details of the error.",
          "items": {
            "$ref": "#/definitions/ErrorDetailsWithNestedDetails"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ErrorDetails"
        }
      ]
    },
    "ErrorResponseWithNestedDetails": {
      "type": "object",
      "description": "Error response indicates that the service is not able to process the incoming request. The reason is provided in the error message. \n\nSome Error responses: \n\n * 429 TooManyRequests - Request is throttled. Retry after waiting for the time specified in the \"x-ms-ratelimit-microsoft.consumption-retry-after\" header. \n\n * 503 ServiceUnavailable - Service is temporarily unavailable. Retry after waiting for the time specified in the \"Retry-After\" header.",
      "properties": {
        "error": {
          "$ref": "#/definitions/ErrorDetailsWithNestedDetails",
          "description": "The details of the error."
        }
      }
    },
    "ExecutionStatus": {
      "type": "string",
      "enum": [
        "Queued",
        "InProgress",
        "Completed",
        "Failed",
        "Timeout",
        "NewDataNotAvailable",
        "DataNotAvailable"
      ],
      "x-ms-enum": {
        "name": "ExecutionStatus",
        "modelAsString": true
      }
    },
    "ExecutionType": {
      "type": "string",
      "enum": [
        "OnDemand",
        "Scheduled"
      ],
      "x-ms-enum": {
        "name": "ExecutionType",
        "modelAsString": true
      }
    },
    "Export": {
      "type": "object",
      "description": "An export resource.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ExportProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "name": {
          "type": "string",
          "description": "Export Name.",
          "readOnly": true
        }
      },
      "required": [
        "name"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "ExportDataset": {
      "type": "object",
      "description": "The definition for data in the export.",
      "properties": {
        "granularity": {
          "$ref": "#/definitions/GranularityType",
          "description": "The granularity of rows in the export. Currently only 'Daily' is supported."
        },
        "configuration": {
          "$ref": "#/definitions/ExportDatasetConfiguration",
          "description": "The export dataset configuration."
        }
      }
    },
    "ExportDatasetConfiguration": {
      "type": "object",
      "description": "The export dataset configuration. Allows columns to be selected for the export. If not provided then the export will include all available columns.",
      "properties": {
        "columns": {
          "type": "array",
          "description": "Array of column names to be included in the export. If not provided then the export will include all available columns. The available columns can vary by customer channel (see examples).",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ExportDefinition": {
      "type": "object",
      "description": "The definition of an export.",
      "properties": {
        "type": {
          "$ref": "#/definitions/ExportType",
          "description": "The type of the export. Note that 'Usage' is equivalent to 'ActualCost' and is applicable to exports that do not yet provide data for charges or amortization for service reservations."
        },
        "timeframe": {
          "$ref": "#/definitions/TimeframeType",
          "description": "The time frame for pulling data for the export. If custom, then a specific time period must be provided."
        },
        "timePeriod": {
          "$ref": "#/definitions/ExportTimePeriod",
          "description": "Has time period for pulling data for the export."
        },
        "dataSet": {
          "$ref": "#/definitions/ExportDataset",
          "description": "The definition for data in the export."
        }
      },
      "required": [
        "type",
        "timeframe"
      ]
    },
    "ExportDeliveryDestination": {
      "type": "object",
      "description": "This represents the blob storage account location where exports of costs will be delivered. There are two ways to configure the destination. The approach recommended for most customers is to specify the resourceId of the storage account. This requires a one-time registration of the account's subscription with the Microsoft.CostManagementExports resource provider in order to give Cost Management services access to the storage. When creating an export in the Azure portal this registration is performed automatically but API users may need to register the subscription explicitly (for more information see https://docs.microsoft.com/en-us/azure/azure-resource-manager/resource-manager-supported-services ). Another way to configure the destination is available ONLY to Partners with a Microsoft Partner Agreement plan who are global admins of their billing account. These Partners, instead of specifying the resourceId of a storage account, can specify the storage account name along with a SAS token for the account. This allows exports of costs to a storage account in any tenant. The SAS token should be created for the blob service with Service/Container/Object resource types and with Read/Write/Delete/List/Add/Create permissions (for more information see https://docs.microsoft.com/en-us/azure/cost-management-billing/costs/export-cost-data-storage-account-sas-key ).",
      "properties": {
        "resourceId": {
          "type": "string",
          "description": "The resource id of the storage account where exports will be delivered. This is not required if a sasToken and storageAccount are specified."
        },
        "container": {
          "type": "string",
          "description": "The name of the container where exports will be uploaded. If the container does not exist it will be created."
        },
        "rootFolderPath": {
          "type": "string",
          "description": "The name of the directory where exports will be uploaded."
        },
        "sasToken": {
          "type": "string",
          "description": "A SAS token for the storage account. For a restricted set of Azure customers this together with storageAccount can be specified instead of resourceId. Note: the value returned by the API for this property will always be obfuscated. Returning this same obfuscated value will not result in the SAS token being updated. To update this value a new SAS token must be specified."
        },
        "storageAccount": {
          "type": "string",
          "description": "The storage account where exports will be uploaded. For a restricted set of Azure customers this together with sasToken can be specified instead of resourceId."
        }
      },
      "required": [
        "container"
      ]
    },
    "ExportDeliveryInfo": {
      "type": "object",
      "description": "The delivery information associated with a export.",
      "properties": {
        "destination": {
          "$ref": "#/definitions/ExportDeliveryDestination",
          "description": "Has destination for the export being delivered."
        }
      },
      "required": [
        "destination"
      ]
    },
    "ExportExecutionListResult": {
      "type": "object",
      "description": "Result of listing the run history of an export.",
      "properties": {
        "value": {
          "type": "array",
          "description": "A list of export runs.",
          "items": {
            "$ref": "#/definitions/ExportRun"
          },
          "readOnly": true
        }
      }
    },
    "ExportListResult": {
      "type": "object",
      "description": "The response of a Export list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The Export items on this page",
          "items": {
            "$ref": "#/definitions/Export"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "ExportProperties": {
      "type": "object",
      "description": "The properties of the export.",
      "properties": {
        "schedule": {
          "$ref": "#/definitions/ExportSchedule",
          "description": "Has schedule information for the export."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/CommonExportProperties"
        }
      ]
    },
    "ExportRecurrencePeriod": {
      "type": "object",
      "description": "The start and end date for recurrence schedule.",
      "properties": {
        "from": {
          "type": "string",
          "format": "date-time",
          "description": "The start date of recurrence."
        },
        "to": {
          "type": "string",
          "format": "date-time",
          "description": "The end date of recurrence."
        }
      },
      "required": [
        "from"
      ]
    },
    "ExportRun": {
      "type": "object",
      "description": "An export run.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ExportRunProperties",
          "description": "The properties of the export run."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/CostManagementProxyResource"
        }
      ]
    },
    "ExportRunProperties": {
      "type": "object",
      "description": "The properties of the export run.",
      "properties": {
        "executionType": {
          "$ref": "#/definitions/ExecutionType",
          "description": "The type of the export run."
        },
        "status": {
          "$ref": "#/definitions/ExecutionStatus",
          "description": "The last known status of the export run."
        },
        "submittedBy": {
          "type": "string",
          "description": "The identifier for the entity that triggered the export. For on-demand runs it is the user email. For scheduled runs it is 'System'."
        },
        "submittedTime": {
          "type": "string",
          "format": "date-time",
          "description": "The time when export was queued to be run."
        },
        "processingStartTime": {
          "type": "string",
          "format": "date-time",
          "description": "The time when export was picked up to be run."
        },
        "processingEndTime": {
          "type": "string",
          "format": "date-time",
          "description": "The time when the export run finished."
        },
        "fileName": {
          "type": "string",
          "description": "The name of the exported file."
        },
        "runSettings": {
          "$ref": "#/definitions/CommonExportProperties",
          "description": "The export settings that were in effect for this run."
        },
        "error": {
          "$ref": "#/definitions/ErrorDetails",
          "description": "The details of any error."
        }
      }
    },
    "ExportSchedule": {
      "type": "object",
      "description": "The schedule associated with the export.",
      "properties": {
        "status": {
          "$ref": "#/definitions/StatusType",
          "description": "The status of the export's schedule. If 'Inactive', the export's schedule is paused."
        },
        "recurrence": {
          "$ref": "#/definitions/RecurrenceType",
          "description": "The schedule recurrence."
        },
        "recurrencePeriod": {
          "$ref": "#/definitions/ExportRecurrencePeriod",
          "description": "Has start and end date of the recurrence. The start date must be in future. If present, the end date must be greater than start date."
        }
      }
    },
    "ExportTimePeriod": {
      "type": "object",
      "description": "The date range for data in the export. This should only be specified with timeFrame set to 'Custom'. The maximum date range is 3 months.",
      "properties": {
        "from": {
          "type": "string",
          "format": "date-time",
          "description": "The start date for export data."
        },
        "to": {
          "type": "string",
          "format": "date-time",
          "description": "The end date for export data."
        }
      },
      "required": [
        "from",
        "to"
      ]
    },
    "ExportType": {
      "type": "string",
      "enum": [
        "Usage",
        "ActualCost",
        "AmortizedCost"
      ],
      "x-ms-enum": {
        "name": "ExportType",
        "modelAsString": true
      }
    },
    "ExternalCloudProviderType": {
      "type": "string",
      "enum": [
        "externalSubscriptions",
        "externalBillingAccounts"
      ],
      "x-ms-enum": {
        "name": "ExternalCloudProviderType",
        "modelAsString": true
      }
    },
    "FileDestination": {
      "type": "object",
      "description": "Destination of the view data. This is optional. Currently only CSV format is supported.",
      "properties": {
        "fileFormats": {
          "type": "array",
          "description": "Destination of the view data. Currently only CSV format is supported.",
          "items": {
            "$ref": "#/definitions/FileFormat"
          }
        }
      }
    },
    "FileFormat": {
      "type": "string",
      "enum": [
        "Csv"
      ],
      "x-ms-enum": {
        "name": "FileFormat",
        "modelAsString": true
      }
    },
    "ForecastAggregation": {
      "type": "object",
      "description": "The aggregation expression to be used in the forecast.",
      "properties": {
        "name": {
          "$ref": "#/definitions/FunctionName",
          "description": "The name of the column to aggregate."
        },
        "function": {
          "$ref": "#/definitions/FunctionType",
          "description": "The name of the aggregation function to use."
        }
      },
      "required": [
        "name",
        "function"
      ]
    },
    "ForecastColumn": {
      "type": "object",
      "description": "Forecast column properties",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of column."
        },
        "type": {
          "type": "string",
          "description": "The type of column."
        }
      }
    },
    "ForecastComparisonExpression": {
      "type": "object",
      "description": "The comparison expression to be used in the forecast.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the column to use in comparison."
        },
        "operator": {
          "$ref": "#/definitions/ForecastOperatorType",
          "description": "The operator to use for comparison."
        },
        "values": {
          "type": "array",
          "description": "Array of values to use for comparison",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "name",
        "operator",
        "values"
      ]
    },
    "ForecastDataset": {
      "type": "object",
      "description": "The definition of data present in the forecast.",
      "properties": {
        "granularity": {
          "$ref": "#/definitions/GranularityType",
          "description": "The granularity of rows in the forecast."
        },
        "configuration": {
          "$ref": "#/definitions/ForecastDatasetConfiguration",
          "description": "Has configuration information for the data in the export. The configuration will be ignored if aggregation and grouping are provided."
        },
        "aggregation": {
          "type": "object",
          "description": "Dictionary of aggregation expression to use in the forecast. The key of each item in the dictionary is the alias for the aggregated column. forecast can have up to 2 aggregation clauses.",
          "additionalProperties": {
            "$ref": "#/definitions/ForecastAggregation"
          }
        },
        "filter": {
          "$ref": "#/definitions/ForecastFilter",
          "description": "Has filter expression to use in the forecast."
        }
      },
      "required": [
        "aggregation"
      ]
    },
    "ForecastDatasetConfiguration": {
      "type": "object",
      "description": "The configuration of dataset in the forecast.",
      "properties": {
        "columns": {
          "type": "array",
          "description": "Array of column names to be included in the forecast. Any valid forecast column name is allowed. If not provided, then forecast includes all columns.",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ForecastDefinition": {
      "type": "object",
      "description": "The definition of a forecast.",
      "properties": {
        "type": {
          "$ref": "#/definitions/ForecastType",
          "description": "The type of the forecast."
        },
        "timeframe": {
          "$ref": "#/definitions/ForecastTimeframe",
          "description": "The time frame for pulling data for the forecast. If custom, then a specific time period must be provided."
        },
        "timePeriod": {
          "$ref": "#/definitions/ForecastTimePeriod",
          "description": "Has time period for pulling data for the forecast."
        },
        "dataset": {
          "$ref": "#/definitions/ForecastDataset",
          "description": "Has definition for data in this forecast."
        },
        "includeActualCost": {
          "type": "boolean",
          "description": "A boolean determining if actualCost will be included."
        },
        "includeFreshPartialCost": {
          "type": "boolean",
          "description": "A boolean determining if FreshPartialCost will be included."
        }
      },
      "required": [
        "type",
        "timeframe",
        "dataset"
      ]
    },
    "ForecastFilter": {
      "type": "object",
      "description": "The filter expression to be used in the export.",
      "properties": {
        "and": {
          "type": "array",
          "description": "The logical \"AND\" expression. Must have at least 2 items.",
          "items": {
            "$ref": "#/definitions/ForecastFilter"
          },
          "x-ms-identifiers": []
        },
        "or": {
          "type": "array",
          "description": "The logical \"OR\" expression. Must have at least 2 items.",
          "items": {
            "$ref": "#/definitions/ForecastFilter"
          },
          "x-ms-identifiers": []
        },
        "dimensions": {
          "$ref": "#/definitions/ForecastComparisonExpression",
          "description": "Has comparison expression for a dimension"
        },
        "tags": {
          "$ref": "#/definitions/ForecastComparisonExpression",
          "description": "Has comparison expression for a tag"
        }
      }
    },
    "ForecastOperatorType": {
      "type": "string",
      "enum": [
        "In"
      ],
      "x-ms-enum": {
        "name": "ForecastOperatorType",
        "modelAsString": true
      }
    },
    "ForecastProperties": {
      "type": "object",
      "description": "Forecast properties",
      "properties": {
        "nextLink": {
          "type": "string",
          "description": "The link (url) to the next page of results."
        },
        "columns": {
          "type": "array",
          "description": "Array of columns",
          "items": {
            "$ref": "#/definitions/ForecastColumn"
          },
          "x-ms-identifiers": []
        },
        "rows": {
          "type": "array",
          "description": "Array of rows",
          "items": {
            "type": "array",
            "items": {}
          },
          "x-ms-identifiers": []
        }
      }
    },
    "ForecastResult": {
      "type": "object",
      "description": "Result of forecast. It contains all columns listed under groupings and aggregation.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ForecastProperties",
          "description": "Forecast properties"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/CostManagementResource"
        }
      ]
    },
    "ForecastTimePeriod": {
      "type": "object",
      "description": "Has time period for pulling data for the forecast.",
      "properties": {
        "from": {
          "type": "string",
          "format": "date-time",
          "description": "The start date to pull data from."
        },
        "to": {
          "type": "string",
          "format": "date-time",
          "description": "The end date to pull data to."
        }
      },
      "required": [
        "from",
        "to"
      ]
    },
    "ForecastTimeframe": {
      "type": "string",
      "enum": [
        "Custom"
      ],
      "x-ms-enum": {
        "name": "ForecastTimeframe",
        "modelAsString": true
      }
    },
    "ForecastType": {
      "type": "string",
      "enum": [
        "Usage",
        "ActualCost",
        "AmortizedCost"
      ],
      "x-ms-enum": {
        "name": "ForecastType",
        "modelAsString": true
      }
    },
    "FormatType": {
      "type": "string",
      "enum": [
        "Csv"
      ],
      "x-ms-enum": {
        "name": "FormatType",
        "modelAsString": true
      }
    },
    "FunctionName": {
      "type": "string",
      "enum": [
        "PreTaxCostUSD",
        "Cost",
        "CostUSD",
        "PreTaxCost"
      ],
      "x-ms-enum": {
        "name": "FunctionName",
        "modelAsString": true
      }
    },
    "FunctionType": {
      "type": "string",
      "enum": [
        "Sum"
      ],
      "x-ms-enum": {
        "name": "FunctionType",
        "modelAsString": true
      }
    },
    "GenerateCostDetailsReportErrorResponse": {
      "type": "object",
      "description": "Error response indicates that the service is not able to process the incoming request. The reason is provided in the error message. \n\nSome Error responses: \n\n * 400 Bad Request - Invalid Request Payload. Request payload provided is not in a json format or had an invalid member not accepted in the request payload. \n\n * 400 Bad Request - Invalid request payload:  can only have either timePeriod or invoiceId or billingPeriod. API only allows data to be pulled for either timePeriod or invoiceId or billingPeriod. Customer should provide only one of these parameters. \n\n * 400 Bad Request - Start date must be after . API only allows data to be pulled no older than 13 months from now. \n\n * 400 Bad Request - The maximum allowed date range is 1 months. API only allows data to be pulled for 1 month or less. \n\n * 429 TooManyRequests - Request is throttled. Retry after waiting for the time specified in the \"retry-after\" header. \n\n * 503 ServiceUnavailable - Service is temporarily unavailable. Retry after waiting for the time specified in the \"Retry-After\" header.",
      "properties": {
        "error": {
          "$ref": "#/definitions/ErrorDetails",
          "description": "The details of the error."
        }
      }
    },
    "GenerateCostDetailsReportRequestDefinition": {
      "type": "object",
      "description": "The definition of a cost detailed report.",
      "properties": {
        "metric": {
          "$ref": "#/definitions/CostDetailsMetricType",
          "description": "The type of the detailed report. By default ActualCost is provided"
        },
        "timePeriod": {
          "$ref": "#/definitions/CostDetailsTimePeriod",
          "description": "The specific date range of cost details requested for the report. This parameter cannot be used alongside either the invoiceId or billingPeriod parameters. If a timePeriod, invoiceId or billingPeriod parameter is not provided in the request body the API will return the current month's cost. API only allows data to be pulled for 1 month or less and no older than 13 months. If no timePeriod or billingPeriod or invoiceId is provided the API defaults to the open month time period"
        },
        "billingPeriod": {
          "type": "string",
          "description": "This parameter can be used only by Enterprise Agreement customers. Use the YearMonth(e.g. 202008) format. This parameter cannot be used alongside either the invoiceId or timePeriod parameters. If a timePeriod, invoiceId or billingPeriod parameter is not provided in the request body the API will return the current month's cost."
        },
        "invoiceId": {
          "type": "string",
          "description": "This parameter can only be used by Microsoft Customer Agreement customers. Additionally, it can only be used at the Billing Profile or Customer scope. This parameter cannot be used alongside either the billingPeriod or timePeriod parameters. If a timePeriod, invoiceId or billingPeriod parameter is not provided in the request body the API will return the current month's cost."
        }
      }
    },
    "GenerateDetailedCostReportDefinition": {
      "type": "object",
      "description": "The definition of a cost detailed report.",
      "properties": {
        "metric": {
          "$ref": "#/definitions/GenerateDetailedCostReportMetricType",
          "description": "The type of the detailed report. By default ActualCost is provided"
        },
        "timePeriod": {
          "$ref": "#/definitions/GenerateDetailedCostReportTimePeriod",
          "description": "Has time period for pulling data for the cost detailed report. Can only have one of either timePeriod or invoiceId or billingPeriod parameters. If none provided current month cost is provided."
        },
        "billingPeriod": {
          "type": "string",
          "description": "Billing period in YearMonth(e.g. 202008) format. Only for legacy enterprise customers can use this. Can only have one of either timePeriod or invoiceId or billingPeriod parameters. If none provided current month cost is provided."
        },
        "invoiceId": {
          "type": "string",
          "description": "Invoice ID for Pay-as-you-go and Microsoft Customer Agreement scopes. Can only have one of either timePeriod or invoiceId or billingPeriod parameters. If none provided current month cost is provided."
        },
        "customerId": {
          "type": "string",
          "description": "Customer ID for Microsoft Customer Agreement scopes (Invoice Id is also required for this)."
        }
      }
    },
    "GenerateDetailedCostReportErrorResponse": {
      "type": "object",
      "description": "Error response indicates that the service is not able to process the incoming request. The reason is provided in the error message. \n\nSome Error responses: \n\n * 413 Request Entity Too Large - Request is throttled. The amount of data required to fulfill the request exceeds the maximum size permitted of 2Gb. Please utilize our Exports feature instead. \n\n * 429 TooManyRequests - Request is throttled. Retry after waiting for the time specified in the \"x-ms-ratelimit-microsoft.consumption-retry-after\" header. \n\n * 503 ServiceUnavailable - Service is temporarily unavailable. Retry after waiting for the time specified in the \"Retry-After\" header.",
      "properties": {
        "error": {
          "$ref": "#/definitions/ErrorDetails",
          "description": "The details of the error."
        }
      }
    },
    "GenerateDetailedCostReportMetricType": {
      "type": "string",
      "enum": [
        "ActualCost",
        "AmortizedCost"
      ],
      "x-ms-enum": {
        "name": "GenerateDetailedCostReportMetricType",
        "modelAsString": true
      }
    },
    "GenerateDetailedCostReportOperationResult": {
      "type": "object",
      "description": "The result of the long running operation for cost detailed report.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The ARM resource id of the long running operation."
        },
        "name": {
          "type": "string",
          "description": "The name of the long running operation."
        },
        "type": {
          "type": "string",
          "description": "The type of the long running operation."
        },
        "properties": {
          "$ref": "#/definitions/DownloadURL",
          "description": "The properties of the resource generated."
        }
      }
    },
    "GenerateDetailedCostReportOperationStatuses": {
      "type": "object",
      "description": "The status of the long running operation for cost detailed report.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The ID of the long running operation."
        },
        "name": {
          "type": "string",
          "description": "The name of the long running operation."
        },
        "status": {
          "$ref": "#/definitions/Status",
          "description": "The status of the long running operation."
        },
        "startTime": {
          "type": "string",
          "description": "The startTime of the operation."
        },
        "endTime": {
          "type": "string",
          "description": "The endTime of the operation."
        },
        "type": {
          "type": "string",
          "description": "The type of the long running operation."
        },
        "error": {
          "$ref": "#/definitions/ErrorDetails",
          "description": "The details of the error."
        },
        "properties": {
          "$ref": "#/definitions/DownloadURL",
          "description": "The properties of the usage file generated."
        }
      }
    },
    "GenerateDetailedCostReportTimePeriod": {
      "type": "object",
      "description": "The start and end date for pulling data for the cost detailed report.",
      "properties": {
        "start": {
          "type": "string",
          "description": "The start date to pull data from. example format 2020-03-15"
        },
        "end": {
          "type": "string",
          "description": "The end date to pull data to. example format 2020-03-15"
        }
      },
      "required": [
        "start",
        "end"
      ]
    },
    "Grain": {
      "type": "string",
      "enum": [
        "Hourly",
        "Daily",
        "Monthly"
      ],
      "x-ms-enum": {
        "name": "Grain",
        "modelAsString": true,
        "values": [
          {
            "name": "Hourly",
            "value": "Hourly",
            "description": "Hourly grain corresponds to value per hour."
          },
          {
            "name": "Daily",
            "value": "Daily",
            "description": "Hourly grain corresponds to value per day."
          },
          {
            "name": "Monthly",
            "value": "Monthly",
            "description": "Hourly grain corresponds to value per month."
          }
        ]
      }
    },
    "GrainParameter": {
      "type": "string",
      "enum": [
        "Hourly",
        "Daily",
        "Monthly"
      ],
      "x-ms-enum": {
        "name": "GrainParameter",
        "modelAsString": true,
        "values": [
          {
            "name": "Hourly",
            "value": "Hourly",
            "description": "Hourly grain corresponds to value per hour."
          },
          {
            "name": "Daily",
            "value": "Daily",
            "description": "Hourly grain corresponds to value per day."
          },
          {
            "name": "Monthly",
            "value": "Monthly",
            "description": "Hourly grain corresponds to value per month."
          }
        ]
      }
    },
    "GranularityType": {
      "type": "string",
      "enum": [
        "Daily"
      ],
      "x-ms-enum": {
        "name": "GranularityType",
        "modelAsString": true
      }
    },
    "IncludedQuantityUtilizationSummary": {
      "type": "object",
      "description": "Included Quantity utilization summary resource.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/IncludedQuantityUtilizationSummaryProperties",
          "description": "Included Quantity utilization summary properties."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/BenefitUtilizationSummary"
        }
      ],
      "x-ms-discriminator-value": "IncludedQuantity"
    },
    "IncludedQuantityUtilizationSummaryProperties": {
      "type": "object",
      "description": "Included Quantity utilization summary properties.",
      "properties": {
        "utilizationPercentage": {
          "type": "number",
          "format": "float",
          "description": "This is the utilized percentage for the benefit ID.",
          "readOnly": true
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/BenefitUtilizationSummaryProperties"
        }
      ]
    },
    "KpiProperties": {
      "type": "object",
      "description": "Each KPI must contain a 'type' and 'enabled' key.",
      "properties": {
        "type": {
          "$ref": "#/definitions/KpiTypeType",
          "description": "KPI type (Forecast, Budget)."
        },
        "id": {
          "type": "string",
          "description": "ID of resource related to metric (budget)."
        },
        "enabled": {
          "type": "boolean",
          "description": "show the KPI in the UI?"
        }
      }
    },
    "KpiTypeType": {
      "type": "string",
      "enum": [
        "Forecast",
        "Budget"
      ],
      "x-ms-enum": {
        "name": "KpiTypeType",
        "modelAsString": true
      }
    },
    "LookBackPeriod": {
      "type": "string",
      "enum": [
        "Last7Days",
        "Last30Days",
        "Last60Days"
      ],
      "x-ms-enum": {
        "name": "LookBackPeriod",
        "modelAsString": true,
        "values": [
          {
            "name": "Last7Days",
            "value": "Last7Days",
            "description": "7 days used to look back."
          },
          {
            "name": "Last30Days",
            "value": "Last30Days",
            "description": "30 days used to look back."
          },
          {
            "name": "Last60Days",
            "value": "Last60Days",
            "description": "60 days used to look back."
          }
        ]
      }
    },
    "MetricType": {
      "type": "string",
      "enum": [
        "ActualCost",
        "AmortizedCost",
        "AHUB"
      ],
      "x-ms-enum": {
        "name": "MetricType",
        "modelAsString": true
      }
    },
    "NotificationProperties": {
      "type": "object",
      "description": "The properties of the scheduled action notification.",
      "properties": {
        "to": {
          "type": "array",
          "description": "Array of email addresses.",
          "items": {
            "type": "string"
          }
        },
        "language": {
          "type": "string",
          "description": "Locale of the email."
        },
        "message": {
          "type": "string",
          "description": "Optional message to be added in the email. Length is limited to 250 characters."
        },
        "regionalFormat": {
          "type": "string",
          "description": "Regional format used for formatting date/time and currency values in the email."
        },
        "subject": {
          "type": "string",
          "description": "Subject of the email. Length is limited to 70 characters."
        }
      },
      "required": [
        "to",
        "subject"
      ]
    },
    "OperationErrorResponse": {
      "type": "object",
      "description": "Error response indicates that the service is not able to process the incoming request. The reason is provided in the error message. \n\nSome Error responses: \n\n * 429 TooManyRequests - Request is throttled. Retry after waiting for the time specified in the \"x-ms-ratelimit-microsoft.consumption-retry-after\" header. \n\n * 503 ServiceUnavailable - Service is temporarily unavailable. Retry after waiting for the time specified in the \"Retry-After\" header.",
      "properties": {
        "error": {
          "$ref": "#/definitions/ErrorDetails",
          "description": "The details of the error."
        }
      }
    },
    "OperationStatus": {
      "type": "object",
      "description": "The status of the long running operation.",
      "properties": {
        "status": {
          "$ref": "#/definitions/OperationStatusType",
          "description": "The status of the long running operation."
        },
        "properties": {
          "$ref": "#/definitions/ReportURL",
          "description": "The properties of the resource generated."
        }
      }
    },
    "OperationStatusType": {
      "type": "string",
      "enum": [
        "Running",
        "Complete",
        "Failed",
        "Completed"
      ],
      "x-ms-enum": {
        "name": "OperationStatusType",
        "modelAsString": true
      }
    },
    "OperatorType": {
      "type": "string",
      "enum": [
        "In",
        "Contains"
      ],
      "x-ms-enum": {
        "name": "OperatorType",
        "modelAsString": true
      }
    },
    "Origin": {
      "type": "string",
      "enum": [
        "user",
        "system",
        "user,system"
      ],
      "x-ms-enum": {
        "name": "Origin",
        "modelAsString": true
      }
    },
    "PagedBenefitRecommendationModel": {
      "type": "object",
      "description": "Result of listing benefit recommendations.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The BenefitRecommendationModel items on this page",
          "items": {
            "$ref": "#/definitions/BenefitRecommendationModel"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "PagedBenefitUtilizationSummary": {
      "type": "object",
      "description": "List of benefit utilization summaries.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The BenefitUtilizationSummary items on this page",
          "items": {
            "$ref": "#/definitions/BenefitUtilizationSummary"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "PagedScheduledAction": {
      "type": "object",
      "description": "Scheduled actions list result. It contains a list of scheduled actions.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The ScheduledAction items on this page",
          "items": {
            "$ref": "#/definitions/ScheduledAction"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "PagedView": {
      "type": "object",
      "description": "Result of listing views. It contains a list of available views.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The View items on this page",
          "items": {
            "$ref": "#/definitions/View"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "PivotProperties": {
      "type": "object",
      "description": "Each pivot must contain a 'type' and 'name'.",
      "properties": {
        "type": {
          "$ref": "#/definitions/PivotTypeType",
          "description": "Data type to show in view."
        },
        "name": {
          "type": "string",
          "description": "Data field to show in view."
        }
      }
    },
    "PivotTypeType": {
      "type": "string",
      "enum": [
        "Dimension",
        "TagKey"
      ],
      "x-ms-enum": {
        "name": "PivotTypeType",
        "modelAsString": true
      }
    },
    "QueryAggregation": {
      "type": "object",
      "description": "The aggregation expression to be used in the query.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the column to aggregate."
        },
        "function": {
          "$ref": "#/definitions/FunctionType",
          "description": "The name of the aggregation function to use."
        }
      },
      "required": [
        "name",
        "function"
      ]
    },
    "QueryColumn": {
      "type": "object",
      "description": "QueryColumn properties",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of column."
        },
        "type": {
          "type": "string",
          "description": "The type of column."
        }
      }
    },
    "QueryColumnType": {
      "type": "string",
      "enum": [
        "TagKey",
        "Dimension"
      ],
      "x-ms-enum": {
        "name": "QueryColumnType",
        "modelAsString": true,
        "values": [
          {
            "name": "TagKey",
            "value": "TagKey",
            "description": "The tag associated with the cost data."
          },
          {
            "name": "Dimension",
            "value": "Dimension",
            "description": "The dimension of cost data."
          }
        ]
      }
    },
    "QueryComparisonExpression": {
      "type": "object",
      "description": "The comparison expression to be used in the query.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the column to use in comparison."
        },
        "operator": {
          "$ref": "#/definitions/QueryOperatorType",
          "description": "The operator to use for comparison."
        },
        "values": {
          "type": "array",
          "description": "Array of values to use for comparison",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "name",
        "operator",
        "values"
      ]
    },
    "QueryDataset": {
      "type": "object",
      "description": "The definition of data present in the query.",
      "properties": {
        "granularity": {
          "$ref": "#/definitions/GranularityType",
          "description": "The granularity of rows in the query."
        },
        "configuration": {
          "$ref": "#/definitions/QueryDatasetConfiguration",
          "description": "Has configuration information for the data in the export. The configuration will be ignored if aggregation and grouping are provided."
        },
        "aggregation": {
          "type": "object",
          "description": "Dictionary of aggregation expression to use in the query. The key of each item in the dictionary is the alias for the aggregated column. Query can have up to 2 aggregation clauses.",
          "additionalProperties": {
            "$ref": "#/definitions/QueryAggregation"
          }
        },
        "grouping": {
          "type": "array",
          "description": "Array of group by expression to use in the query. Query can have up to 2 group by clauses.",
          "items": {
            "$ref": "#/definitions/QueryGrouping"
          },
          "x-ms-identifiers": []
        },
        "filter": {
          "$ref": "#/definitions/QueryFilter",
          "description": "The filter expression to use in the query. Please reference our Query API REST documentation for how to properly format the filter."
        }
      }
    },
    "QueryDatasetConfiguration": {
      "type": "object",
      "description": "The configuration of dataset in the query.",
      "properties": {
        "columns": {
          "type": "array",
          "description": "Array of column names to be included in the query. Any valid query column name is allowed. If not provided, then query includes all columns.",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "QueryDefinition": {
      "type": "object",
      "description": "The definition of a query.",
      "properties": {
        "type": {
          "$ref": "#/definitions/ExportType",
          "description": "The type of the query."
        },
        "timeframe": {
          "$ref": "#/definitions/TimeframeType",
          "description": "The time frame for pulling data for the query. If custom, then a specific time period must be provided."
        },
        "timePeriod": {
          "$ref": "#/definitions/QueryTimePeriod",
          "description": "Has time period for pulling data for the query."
        },
        "dataset": {
          "$ref": "#/definitions/QueryDataset",
          "description": "Has definition for data in this query."
        }
      },
      "required": [
        "type",
        "timeframe",
        "dataset"
      ]
    },
    "QueryFilter": {
      "type": "object",
      "description": "The filter expression to be used in the export.",
      "properties": {
        "and": {
          "type": "array",
          "description": "The logical \"AND\" expression. Must have at least 2 items.",
          "items": {
            "$ref": "#/definitions/QueryFilter"
          },
          "x-ms-identifiers": []
        },
        "or": {
          "type": "array",
          "description": "The logical \"OR\" expression. Must have at least 2 items.",
          "items": {
            "$ref": "#/definitions/QueryFilter"
          },
          "x-ms-identifiers": []
        },
        "dimensions": {
          "$ref": "#/definitions/QueryComparisonExpression",
          "description": "Has comparison expression for a dimension"
        },
        "tags": {
          "$ref": "#/definitions/QueryComparisonExpression",
          "description": "Has comparison expression for a tag"
        }
      }
    },
    "QueryGrouping": {
      "type": "object",
      "description": "The group by expression to be used in the query.",
      "properties": {
        "type": {
          "$ref": "#/definitions/QueryColumnType",
          "description": "Has type of the column to group."
        },
        "name": {
          "type": "string",
          "description": "The name of the column to group."
        }
      },
      "required": [
        "type",
        "name"
      ]
    },
    "QueryOperatorType": {
      "type": "string",
      "enum": [
        "In"
      ],
      "x-ms-enum": {
        "name": "QueryOperatorType",
        "modelAsString": true
      }
    },
    "QueryProperties": {
      "type": "object",
      "description": "Query properties",
      "properties": {
        "nextLink": {
          "type": "string",
          "description": "The link (url) to the next page of results."
        },
        "columns": {
          "type": "array",
          "description": "Array of columns",
          "items": {
            "$ref": "#/definitions/QueryColumn"
          },
          "x-ms-identifiers": []
        },
        "rows": {
          "type": "array",
          "description": "Array of rows",
          "items": {
            "type": "array",
            "items": {}
          },
          "x-ms-identifiers": []
        }
      }
    },
    "QueryResult": {
      "type": "object",
      "description": "Result of query. It contains all columns listed under groupings and aggregation.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/QueryProperties",
          "description": "Query properties"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/CostManagementResource"
        }
      ]
    },
    "QueryTimePeriod": {
      "type": "object",
      "description": "The start and end date for pulling data for the query.",
      "properties": {
        "from": {
          "type": "string",
          "format": "date-time",
          "description": "The start date to pull data from."
        },
        "to": {
          "type": "string",
          "format": "date-time",
          "description": "The end date to pull data to."
        }
      },
      "required": [
        "from",
        "to"
      ]
    },
    "RecommendationUsageDetails": {
      "type": "object",
      "description": "On-demand charges between firstConsumptionDate and lastConsumptionDate that were used for computing benefit recommendations.",
      "properties": {
        "usageGrain": {
          "$ref": "#/definitions/Grain",
          "description": "The grain of the usage. Supported values: 'Hourly'"
        },
        "charges": {
          "type": "array",
          "description": "On-demand charges for each hour between firstConsumptionDate and lastConsumptionDate that were used for computing benefit recommendations.",
          "items": {
            "type": "number",
            "format": "float"
          },
          "readOnly": true
        }
      }
    },
    "RecurrenceType": {
      "type": "string",
      "enum": [
        "Daily",
        "Weekly",
        "Monthly",
        "Annually"
      ],
      "x-ms-enum": {
        "name": "RecurrenceType",
        "modelAsString": true
      }
    },
    "ReportConfigAggregation": {
      "type": "object",
      "description": "The aggregation expression to be used in the report.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the column to aggregate."
        },
        "function": {
          "$ref": "#/definitions/FunctionType",
          "description": "The name of the aggregation function to use."
        }
      },
      "required": [
        "name",
        "function"
      ]
    },
    "ReportConfigComparisonExpression": {
      "type": "object",
      "description": "The comparison expression to be used in the report.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the column to use in comparison."
        },
        "operator": {
          "$ref": "#/definitions/OperatorType",
          "description": "The operator to use for comparison."
        },
        "values": {
          "type": "array",
          "description": "Array of values to use for comparison",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "name",
        "operator",
        "values"
      ]
    },
    "ReportConfigDataset": {
      "type": "object",
      "description": "The definition of data present in the report.",
      "properties": {
        "granularity": {
          "$ref": "#/definitions/ReportGranularityType",
          "description": "The granularity of rows in the report."
        },
        "configuration": {
          "$ref": "#/definitions/ReportConfigDatasetConfiguration",
          "description": "Has configuration information for the data in the report. The configuration will be ignored if aggregation and grouping are provided."
        },
        "aggregation": {
          "type": "object",
          "description": "Dictionary of aggregation expression to use in the report. The key of each item in the dictionary is the alias for the aggregated column. Report can have up to 2 aggregation clauses.",
          "additionalProperties": {
            "$ref": "#/definitions/ReportConfigAggregation"
          }
        },
        "grouping": {
          "type": "array",
          "description": "Array of group by expression to use in the report. Report can have up to 2 group by clauses.",
          "items": {
            "$ref": "#/definitions/ReportConfigGrouping"
          },
          "x-ms-identifiers": []
        },
        "sorting": {
          "type": "array",
          "description": "Array of order by expression to use in the report.",
          "items": {
            "$ref": "#/definitions/ReportConfigSorting"
          },
          "x-ms-identifiers": []
        },
        "filter": {
          "$ref": "#/definitions/ReportConfigFilter",
          "description": "Has filter expression to use in the report."
        }
      }
    },
    "ReportConfigDatasetConfiguration": {
      "type": "object",
      "description": "The configuration of dataset in the report.",
      "properties": {
        "columns": {
          "type": "array",
          "description": "Array of column names to be included in the report. Any valid report column name is allowed. If not provided, then report includes all columns.",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ReportConfigDefinition": {
      "type": "object",
      "description": "The definition of a report config.",
      "properties": {
        "type": {
          "$ref": "#/definitions/ReportType",
          "description": "The type of the report. Usage represents actual usage, forecast represents forecasted data and UsageAndForecast represents both usage and forecasted data. Actual usage and forecasted data can be differentiated based on dates."
        },
        "timeframe": {
          "$ref": "#/definitions/ReportTimeframeType",
          "description": "The time frame for pulling data for the report. If custom, then a specific time period must be provided."
        },
        "timePeriod": {
          "$ref": "#/definitions/ReportConfigTimePeriod",
          "description": "Has time period for pulling data for the report."
        },
        "dataSet": {
          "$ref": "#/definitions/ReportConfigDataset",
          "description": "Has definition for data in this report config."
        },
        "includeMonetaryCommitment": {
          "type": "boolean",
          "description": "If true, report includes monetary commitment."
        }
      },
      "required": [
        "type",
        "timeframe"
      ]
    },
    "ReportConfigFilter": {
      "type": "object",
      "description": "The filter expression to be used in the report.",
      "properties": {
        "and": {
          "type": "array",
          "description": "The logical \"AND\" expression. Must have at least 2 items.",
          "items": {
            "$ref": "#/definitions/ReportConfigFilter"
          },
          "x-ms-identifiers": []
        },
        "or": {
          "type": "array",
          "description": "The logical \"OR\" expression. Must have at least 2 items.",
          "items": {
            "$ref": "#/definitions/ReportConfigFilter"
          },
          "x-ms-identifiers": []
        },
        "dimensions": {
          "$ref": "#/definitions/ReportConfigComparisonExpression",
          "description": "Has comparison expression for a dimension"
        },
        "tags": {
          "$ref": "#/definitions/ReportConfigComparisonExpression",
          "description": "Has comparison expression for a tag"
        }
      }
    },
    "ReportConfigGrouping": {
      "type": "object",
      "description": "The group by expression to be used in the report.",
      "properties": {
        "type": {
          "$ref": "#/definitions/QueryColumnType",
          "description": "Has type of the column to group."
        },
        "name": {
          "type": "string",
          "description": "The name of the column to group. This version supports subscription lowest possible grain."
        }
      },
      "required": [
        "type",
        "name"
      ]
    },
    "ReportConfigSorting": {
      "type": "object",
      "description": "The order by expression to be used in the report.",
      "properties": {
        "direction": {
          "$ref": "#/definitions/ReportConfigSortingType",
          "description": "Direction of sort."
        },
        "name": {
          "type": "string",
          "description": "The name of the column to sort."
        }
      },
      "required": [
        "name"
      ]
    },
    "ReportConfigSortingType": {
      "type": "string",
      "enum": [
        "Ascending",
        "Descending"
      ],
      "x-ms-enum": {
        "name": "ReportConfigSortingType",
        "modelAsString": true
      }
    },
    "ReportConfigTimePeriod": {
      "type": "object",
      "description": "The start and end date for pulling data for the report.",
      "properties": {
        "from": {
          "type": "string",
          "format": "date-time",
          "description": "The start date to pull data from."
        },
        "to": {
          "type": "string",
          "format": "date-time",
          "description": "The end date to pull data to."
        }
      },
      "required": [
        "from",
        "to"
      ]
    },
    "ReportGranularityType": {
      "type": "string",
      "enum": [
        "Daily",
        "Monthly"
      ],
      "x-ms-enum": {
        "name": "ReportGranularityType",
        "modelAsString": true
      }
    },
    "ReportManifest": {
      "type": "object",
      "description": "The manifest of the report generated by the operation.",
      "properties": {
        "manifestVersion": {
          "type": "string",
          "description": "The Manifest version."
        },
        "dataFormat": {
          "$ref": "#/definitions/CostDetailsDataFormat",
          "description": "The data format of the report"
        },
        "byteCount": {
          "type": "integer",
          "format": "int32",
          "description": "The total number of bytes in all blobs."
        },
        "blobCount": {
          "type": "integer",
          "format": "int32",
          "description": "The total number of blobs."
        },
        "compressData": {
          "type": "boolean",
          "description": "Is the data in compressed format."
        },
        "requestContext": {
          "$ref": "#/definitions/RequestContext",
          "description": "The context of the Cost Details request."
        },
        "blobs": {
          "type": "array",
          "description": "List of blob information generated by this operation.",
          "items": {
            "$ref": "#/definitions/BlobInfo"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "ReportOperationStatusType": {
      "type": "string",
      "enum": [
        "InProgress",
        "Completed",
        "Failed",
        "Queued",
        "NoDataFound",
        "ReadyToDownload",
        "TimedOut"
      ],
      "x-ms-enum": {
        "name": "ReportOperationStatusType",
        "modelAsString": true
      }
    },
    "ReportTimeframeType": {
      "type": "string",
      "enum": [
        "WeekToDate",
        "MonthToDate",
        "YearToDate",
        "Custom"
      ],
      "x-ms-enum": {
        "name": "ReportTimeframeType",
        "modelAsString": true
      }
    },
    "ReportType": {
      "type": "string",
      "enum": [
        "Usage"
      ],
      "x-ms-enum": {
        "name": "ReportType",
        "modelAsString": true
      }
    },
    "ReportURL": {
      "type": "object",
      "description": "The URL to download the generated report.",
      "properties": {
        "reportUrl": {
          "$ref": "#/definitions/ReservationReportSchema",
          "description": "The CSV file from the reportUrl blob link consists of reservation usage data with the following schema at daily granularity"
        },
        "validUntil": {
          "type": "string",
          "format": "date-time",
          "description": "The time at which report URL becomes invalid."
        }
      }
    },
    "RequestContext": {
      "type": "object",
      "description": "The context of the Cost Details request.",
      "properties": {
        "requestScope": {
          "type": "string",
          "description": "The request scope of the request."
        },
        "requestBody": {
          "$ref": "#/definitions/GenerateCostDetailsReportRequestDefinition",
          "description": "The request payload body provided in Cost Details call"
        }
      }
    },
    "ReservationReportSchema": {
      "type": "string",
      "enum": [
        "InstanceFlexibilityGroup",
        "InstanceFlexibilityRatio",
        "InstanceId",
        "Kind",
        "ReservationId",
        "ReservationOrderId",
        "ReservedHours",
        "SkuName",
        "TotalReservedQuantity",
        "UsageDate",
        "UsedHours"
      ],
      "x-ms-enum": {
        "name": "ReservationReportSchema",
        "modelAsString": true
      }
    },
    "Resource": {
      "type": "object",
      "description": "Common fields that are returned in the response for all Azure Resource Manager resources",
      "properties": {
        "id": {
          "type": "string",
          "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        }
      }
    },
    "SavingsPlanUtilizationSummary": {
      "type": "object",
      "description": "Savings plan utilization summary resource.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/SavingsPlanUtilizationSummaryProperties",
          "description": "Savings plan utilization summary properties."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/BenefitUtilizationSummary"
        }
      ],
      "x-ms-discriminator-value": "SavingsPlan"
    },
    "SavingsPlanUtilizationSummaryProperties": {
      "type": "object",
      "description": "Savings plan utilization summary properties.",
      "properties": {
        "avgUtilizationPercentage": {
          "type": "number",
          "format": "float",
          "description": "This is the average hourly utilization for each date range that corresponds to given grain (Daily, Monthly). Suppose the API call is for usageDate > 2023-03-01 and usageDate < 2022-10-31 at a daily granularity. There will be one record per benefit id for each day. For a single day, the avgUtilizationPercentage value will be equal to the average of the set of values where the set contains 24 utilization percentage entries one for each hour in a specific day.",
          "readOnly": true
        },
        "minUtilizationPercentage": {
          "type": "number",
          "format": "float",
          "description": "This is the minimum hourly utilization for each date range that corresponds to given grain (Daily, Monthly). Suppose the API call is for usageDate > 2023-03-01 and usageDate < 2022-10-31 at a daily granularity. There will be one record per benefit id for each day. For a single day, the minUtilizationPercentage value will be equal to the smallest in the set of values where the set contains 24 utilization percentage entries one for each hour in a specific day. If on the day 2022-10-18, the lowest utilization percentage was 10% at hour 4, then the value for the minUtilizationPercentage in the response will be 10%.",
          "readOnly": true
        },
        "maxUtilizationPercentage": {
          "type": "number",
          "format": "float",
          "description": "This is the maximum hourly utilization for each date range that corresponds to given grain (Daily, Monthly). Suppose the API call is for usageDate > 2023-03-01 and usageDate < 2022-10-31 at a daily granularity. There will be one record per benefit id for each day. For a single day, the maxUtilizationPercentage value will be equal to the largest in the set of values where the set contains 24 utilization percentage entries one for each hour in a specific day. If on the day 2022-10-18, the largest utilization percentage was 90% at hour 5, then the value for the maxUtilizationPercentage in the response will be 90%.",
          "readOnly": true
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/BenefitUtilizationSummaryProperties"
        }
      ]
    },
    "ScheduleFrequency": {
      "type": "string",
      "enum": [
        "Daily",
        "Weekly",
        "Monthly"
      ],
      "x-ms-enum": {
        "name": "ScheduleFrequency",
        "modelAsString": true,
        "values": [
          {
            "name": "Daily",
            "value": "Daily",
            "description": "Cost analysis data will be emailed every day."
          },
          {
            "name": "Weekly",
            "value": "Weekly",
            "description": "Cost analysis data will be emailed every week."
          },
          {
            "name": "Monthly",
            "value": "Monthly",
            "description": "Cost analysis data will be emailed every month."
          }
        ]
      }
    },
    "ScheduleProperties": {
      "type": "object",
      "description": "The properties of the schedule.",
      "properties": {
        "frequency": {
          "$ref": "#/definitions/ScheduleFrequency",
          "description": "Frequency of the schedule."
        },
        "hourOfDay": {
          "type": "integer",
          "format": "int32",
          "description": "UTC time at which cost analysis data will be emailed."
        },
        "daysOfWeek": {
          "type": "array",
          "description": "Day names in english on which cost analysis data will be emailed. This property is applicable when frequency is Weekly or Monthly.",
          "items": {
            "$ref": "#/definitions/DaysOfWeek"
          }
        },
        "weeksOfMonth": {
          "type": "array",
          "description": "Weeks in which cost analysis data will be emailed. This property is applicable when frequency is Monthly and used in combination with daysOfWeek.",
          "items": {
            "$ref": "#/definitions/WeeksOfMonth"
          }
        },
        "dayOfMonth": {
          "type": "integer",
          "format": "int32",
          "description": "UTC day on which cost analysis data will be emailed. Must be between 1 and 31. This property is applicable when frequency is Monthly and overrides weeksOfMonth or daysOfWeek."
        },
        "startDate": {
          "type": "string",
          "format": "date-time",
          "description": "The start date and time of the scheduled action (UTC)."
        },
        "endDate": {
          "type": "string",
          "format": "date-time",
          "description": "The end date and time of the scheduled action (UTC)."
        }
      },
      "required": [
        "frequency",
        "startDate",
        "endDate"
      ]
    },
    "ScheduledAction": {
      "type": "object",
      "description": "Scheduled action definition.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ScheduledActionProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "name": {
          "type": "string",
          "description": "Scheduled action name.",
          "readOnly": true
        }
      },
      "required": [
        "name"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "ScheduledActionKind": {
      "type": "string",
      "enum": [
        "Email",
        "InsightAlert"
      ],
      "x-ms-enum": {
        "name": "ScheduledActionKind",
        "modelAsString": true,
        "values": [
          {
            "name": "Email",
            "value": "Email",
            "description": "Cost analysis data will be emailed."
          },
          {
            "name": "InsightAlert",
            "value": "InsightAlert",
            "description": "Cost anomaly information will be emailed. Available only on subscription scope at daily frequency. If no anomaly is detected on the resource, an email won't be sent."
          }
        ]
      }
    },
    "ScheduledActionProperties": {
      "type": "object",
      "description": "The properties of the scheduled action.",
      "properties": {
        "displayName": {
          "type": "string",
          "description": "Scheduled action name."
        },
        "fileDestination": {
          "$ref": "#/definitions/FileDestination",
          "description": "Destination format of the view data. This is optional."
        },
        "notification": {
          "$ref": "#/definitions/NotificationProperties",
          "description": "Notification properties based on scheduled action kind."
        },
        "notificationEmail": {
          "type": "string",
          "description": "Email address of the point of contact that should get the unsubscribe requests and notification emails."
        },
        "schedule": {
          "$ref": "#/definitions/ScheduleProperties",
          "description": "Schedule of the scheduled action."
        },
        "scope": {
          "type": "string",
          "description": "Cost Management scope like 'subscriptions/{subscriptionId}' for subscription scope, 'subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for resourceGroup scope, 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}' for Billing Account scope, 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/departments/{departmentId}' for Department scope, 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/enrollmentAccounts/{enrollmentAccountId}' for EnrollmentAccount scope, 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}' for BillingProfile scope, 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/invoiceSections/{invoiceSectionId}' for InvoiceSection scope, '/providers/Microsoft.CostManagement/externalBillingAccounts/{externalBillingAccountName}' for ExternalBillingAccount scope, and '/providers/Microsoft.CostManagement/externalSubscriptions/{externalSubscriptionName}' for ExternalSubscription scope."
        },
        "status": {
          "$ref": "#/definitions/ScheduledActionStatus",
          "description": "Status of the scheduled action."
        },
        "viewId": {
          "type": "string",
          "description": "Cost analysis viewId used for scheduled action. For example, '/providers/Microsoft.CostManagement/views/swaggerExample'"
        }
      },
      "required": [
        "displayName",
        "notification",
        "schedule",
        "status",
        "viewId"
      ]
    },
    "ScheduledActionProxyResource": {
      "type": "object",
      "description": "The Resource model definition.",
      "properties": {
        "eTag": {
          "type": "string",
          "description": "Resource Etag. For update calls, eTag is optional and can be specified to achieve optimistic concurrency. Fetch the resource's eTag by doing a 'GET' call first and then including the latest eTag as part of the request body or 'If-Match' header while performing the update. For create calls, eTag is not required.",
          "readOnly": true
        },
        "kind": {
          "$ref": "#/definitions/ScheduledActionKind",
          "description": "Kind of the scheduled action."
        },
        "systemData": {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/systemData",
          "description": "Kind of the scheduled action.",
          "readOnly": true
        }
      }
    },
    "ScheduledActionStatus": {
      "type": "string",
      "enum": [
        "Disabled",
        "Enabled",
        "Expired"
      ],
      "x-ms-enum": {
        "name": "ScheduledActionStatus",
        "modelAsString": true,
        "values": [
          {
            "name": "Disabled",
            "value": "Disabled",
            "description": "Scheduled action is saved but will not be run."
          },
          {
            "name": "Enabled",
            "value": "Enabled",
            "description": "Scheduled action is saved and will be run."
          },
          {
            "name": "Expired",
            "value": "Expired",
            "description": "Scheduled action is expired."
          }
        ]
      }
    },
    "Scope": {
      "type": "string",
      "enum": [
        "Single",
        "Shared"
      ],
      "x-ms-enum": {
        "name": "Scope",
        "modelAsString": true,
        "values": [
          {
            "name": "Single",
            "value": "Single",
            "description": "Single scope recommendation."
          },
          {
            "name": "Shared",
            "value": "Shared",
            "description": "Shared scope recommendation."
          }
        ]
      }
    },
    "SharedScopeBenefitRecommendationProperties": {
      "type": "object",
      "description": "The properties of the benefit recommendation when scope is 'Shared'.",
      "allOf": [
        {
          "$ref": "#/definitions/BenefitRecommendationProperties"
        }
      ],
      "x-ms-discriminator-value": "Shared"
    },
    "SingleScopeBenefitRecommendationProperties": {
      "type": "object",
      "description": "The properties of the benefit recommendations when scope is 'Single'.",
      "properties": {
        "subscriptionId": {
          "type": "string",
          "description": "The subscription ID that this single scope recommendation is for. Applicable only if recommendation is for 'Single' scope.",
          "readOnly": true
        },
        "resourceGroup": {
          "type": "string",
          "description": "The resource group that this single scope recommendation is for. Applicable only if recommendation is for 'Single' scope and 'ResourceGroup' request scope.",
          "readOnly": true
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/BenefitRecommendationProperties"
        }
      ],
      "x-ms-discriminator-value": "Single"
    },
    "Status": {
      "type": "object",
      "description": "The status of the long running operation.",
      "properties": {
        "status": {
          "$ref": "#/definitions/ReportOperationStatusType",
          "description": "The status of the long running operation."
        }
      }
    },
    "StatusType": {
      "type": "string",
      "enum": [
        "Active",
        "Inactive"
      ],
      "x-ms-enum": {
        "name": "StatusType",
        "modelAsString": true
      }
    },
    "Term": {
      "type": "string",
      "enum": [
        "P1Y",
        "P3Y"
      ],
      "x-ms-enum": {
        "name": "Term",
        "modelAsString": true,
        "values": [
          {
            "name": "P1Y",
            "value": "P1Y",
            "description": "Benefit term is 1 year."
          },
          {
            "name": "P3Y",
            "value": "P3Y",
            "description": "Benefit term is 3 years."
          }
        ]
      }
    },
    "TimeframeType": {
      "type": "string",
      "enum": [
        "MonthToDate",
        "BillingMonthToDate",
        "TheLastMonth",
        "TheLastBillingMonth",
        "WeekToDate",
        "Custom"
      ],
      "x-ms-enum": {
        "name": "TimeframeType",
        "modelAsString": true
      }
    },
    "Versions": {
      "type": "string",
      "description": "The available API versions.",
      "enum": [
        "2023-03-01"
      ],
      "x-ms-enum": {
        "name": "Versions",
        "modelAsString": true,
        "values": [
          {
            "name": "v2023_03_01",
            "value": "2023-03-01"
          }
        ]
      }
    },
    "View": {
      "type": "object",
      "description": "States and configurations of Cost Analysis.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ViewProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "name": {
          "type": "string",
          "description": "View name",
          "readOnly": true
        }
      },
      "required": [
        "name"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "ViewProperties": {
      "type": "object",
      "description": "The properties of the view.",
      "properties": {
        "displayName": {
          "type": "string",
          "description": "User input name of the view. Required."
        },
        "scope": {
          "type": "string",
          "description": "Cost Management scope to save the view on. This includes 'subscriptions/{subscriptionId}' for subscription scope, 'subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for resourceGroup scope, 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}' for Billing Account scope, 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/departments/{departmentId}' for Department scope, 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/enrollmentAccounts/{enrollmentAccountId}' for EnrollmentAccount scope, 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}' for BillingProfile scope, 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/invoiceSections/{invoiceSectionId}' for InvoiceSection scope, 'providers/Microsoft.Management/managementGroups/{managementGroupId}' for Management Group scope, '/providers/Microsoft.CostManagement/externalBillingAccounts/{externalBillingAccountName}' for ExternalBillingAccount scope, and '/providers/Microsoft.CostManagement/externalSubscriptions/{externalSubscriptionName}' for ExternalSubscription scope."
        },
        "createdOn": {
          "type": "string",
          "format": "date-time",
          "description": "Date the user created this view.",
          "readOnly": true
        },
        "modifiedOn": {
          "type": "string",
          "format": "date-time",
          "description": "Date when the user last modified this view.",
          "readOnly": true
        },
        "dateRange": {
          "type": "string",
          "description": "Date range of the current view.",
          "readOnly": true
        },
        "currency": {
          "type": "string",
          "description": "Currency of the current view.",
          "readOnly": true
        },
        "query": {
          "$ref": "#/definitions/ReportConfigDefinition",
          "description": "Query body configuration. Required."
        },
        "chart": {
          "$ref": "#/definitions/ChartType",
          "description": "Chart type of the main view in Cost Analysis. Required."
        },
        "accumulated": {
          "$ref": "#/definitions/AccumulatedType",
          "description": "Show costs accumulated over time."
        },
        "metric": {
          "$ref": "#/definitions/MetricType",
          "description": "Metric to use when displaying costs."
        },
        "kpis": {
          "type": "array",
          "description": "List of KPIs to show in Cost Analysis UI.",
          "items": {
            "$ref": "#/definitions/KpiProperties"
          }
        },
        "pivots": {
          "type": "array",
          "description": "Configuration of 3 sub-views in the Cost Analysis UI.",
          "items": {
            "$ref": "#/definitions/PivotProperties"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "WeeksOfMonth": {
      "type": "string",
      "enum": [
        "First",
        "Second",
        "Third",
        "Fourth",
        "Last"
      ],
      "x-ms-enum": {
        "name": "WeeksOfMonth",
        "modelAsString": true
      }
    }
  },
  "parameters": {
    "Azure.Core.Foundations.ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "description": "The API version to use for this operation.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "x-ms-parameter-location": "method",
      "x-ms-client-name": "apiVersion"
    },
    "Azure.ResourceManager.ResourceUriParameter": {
      "name": "resourceUri",
      "in": "path",
      "description": "The fully qualified Azure Resource manager identifier of the resource.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method",
      "x-ms-skip-url-encoding": true
    }
  }
}
