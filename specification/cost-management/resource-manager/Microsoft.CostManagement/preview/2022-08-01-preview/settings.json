{
    "swagger": "2.0",
    "info": {
      "title": "CostManagementClient",
      "version": "2022-08-01-preview"
    },
    "host": "management.azure.com",
    "schemes": [
      "https"
    ],
    "consumes": [
      "application/json"
    ],
    "produces": [
      "application/json"
    ],
    "security": [
      {
        "azure_auth": [
          "user_impersonation"
        ]
      }
    ],
    "securityDefinitions": {
      "azure_auth": {
        "type": "oauth2",
        "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
        "flow": "implicit",
        "description": "Azure Active Directory OAuth2 Flow.",
        "scopes": {
          "user_impersonation": "impersonate your user account"
        }
      }
    },
    "paths": {
      "/{scope}/providers/Microsoft.CostManagement/settings": {
        "get": {
          "tags": [
            "Settings"
          ],
          "operationId": "Settings_List",
          "description": "List all cost management settings in the requested scope.",
          "externalDocs": {
            "url": "https://docs.microsoft.com/rest/api/cost-management/"
          },
          "x-ms-examples": {
            "SettingsList": {
              "$ref": "./examples/settingsList.json"
            }
          },
          "parameters": [
            {
              "$ref": "#/parameters/scopeParameter"
            },
            {
              "$ref": "#/parameters/apiVersionParameter"
            }
          ],
          "responses": {
            "200": {
              "description": "OK. The request has succeeded.",
              "schema": {
                "$ref": "#/definitions/SettingsListResult"
              }
            },
            "default": {
              "description": "Error response describing why the operation failed.",
              "schema": {
                "$ref": "#/definitions/ErrorResponse"
              }
            }
          }
        }
      },
      "/{scope}/providers/Microsoft.CostManagement/settings/{type}": {
        "put": {
          "tags": [
            "Settings"
          ],
          "operationId": "Settings_CreateOrUpdateByScope",
          "description": "Create or update a setting within the given scope.",
          "x-ms-examples": {
            "CreateOrUpdateSettingByScope": {
              "$ref": "./examples/settings-createOrUpdate.json"
            }
          },
          "parameters": [
            {
              "$ref": "#/parameters/scopeParameter"
            },
            {
              "$ref": "#/parameters/settingTypeParameter"
            },
            {
              "$ref": "#/parameters/apiVersionParameter"
            },
            {
              "name": "setting",
              "description": "Setting to be created or updated.",
              "in": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/Setting"
              }
            }
          ],
          "responses": {
            "201": {
              "description": "Created.",
              "schema": {
                "$ref": "#/definitions/Setting"
              }
            },
            "default": {
              "description": "Error response describing why the operation failed.",
              "schema": {
                "$ref": "#/definitions/ErrorResponse"
              }
            }
          }
        },
        "get": {
          "tags": [
            "Settings"
          ],
          "operationId": "Settings_GetByScope",
          "description": "Get the setting from the given scope by name.",
          "externalDocs": {
            "url": "https://docs.microsoft.com/rest/api/cost-management/"
          },
          "x-ms-examples": {
            "SettingByScope": {
              "$ref": "./examples/setting-get.json"
            }
          },
          "parameters": [
            {
              "$ref": "#/parameters/scopeParameter"
            },
            {
              "$ref": "#/parameters/settingTypeParameter"
            },
            {
              "$ref": "#/parameters/apiVersionParameter"
            }
          ],
          "responses": {
            "200": {
              "description": "OK. The request has succeeded.",
              "schema": {
                "$ref": "#/definitions/Setting"
              }
            },
            "default": {
              "description": "Error response describing why the operation failed.",
              "schema": {
                "$ref": "#/definitions/ErrorResponse"
              }
            }
          }
        },
        "delete": {
          "tags": [
            "Settings"
          ],
          "operationId": "Settings_DeleteByScope",
          "description": "Delete a setting within the given scope.",
          "externalDocs": {
            "url": "https://docs.microsoft.com/rest/api/cost-management/"
          },
          "x-ms-examples": {
            "SettingDeleteByScope": {
              "$ref": "./examples/setting-delete.json"
            }
          },
          "parameters": [
            {
              "$ref": "#/parameters/scopeParameter"
            },
            {
              "$ref": "#/parameters/settingTypeParameter"
            },
            {
              "$ref": "#/parameters/apiVersionParameter"
            }
          ],
          "responses": {
            "200": {
              "description": "OK. The request has succeeded."
            },
            "default": {
              "description": "Error response describing why the operation failed.",
              "schema": {
                "$ref": "#/definitions/ErrorResponse"
              }
            }
          }
        }
      }
    },
    "definitions": {
      "ErrorResponse": {
        "description": "Error response indicates that the service is not able to process the incoming request. The reason is provided in the error message. \n\nSome Error responses: \n\n * 429 TooManyRequests - Request is throttled. Retry after waiting for the time specified in the \"x-ms-ratelimit-microsoft.consumption-retry-after\" header. \n\n * 503 ServiceUnavailable - Service is temporarily unavailable. Retry after waiting for the time specified in the \"Retry-After\" header.",
        "type": "object",
        "properties": {
          "error": {
            "description": "The details of the error.",
            "$ref": "#/definitions/ErrorDetails"
          }
        }
      },
      "ErrorDetails": {
        "description": "The details of the error.",
        "type": "object",
        "properties": {
          "code": {
            "description": "Error code.",
            "type": "string",
            "readOnly": true
          },
          "message": {
            "description": "Error message indicating why the operation failed.",
            "type": "string",
            "readOnly": true
          }
        }
      },
      "SettingProxyResource": {
        "description": "The Resource model definition.",
        "properties": {
          "id": {
            "readOnly": true,
            "type": "string",
            "description": "Resource Id."
          },
          "name": {
            "readOnly": true,
            "type": "string",
            "description": "Resource name."
          },
          "type": {
            "readOnly": true,
            "type": "string",
            "description": "Resource type."
          }
        },
        "type": "object",
        "x-ms-azure-resource": true
      },
      "Setting": {
        "description": "Setting definition.",
        "type": "object",
        "allOf": [
          {
            "$ref": "#/definitions/SettingProxyResource"
          }
        ],
        "properties": {
          "properties": {
            "x-ms-client-flatten": true,
            "$ref": "#/definitions/TagInheritanceProperties",
            "title": "Tag Inheritance properties"
          }
        }
      },
      "SettingsListResult": {
        "description": "Setting list result. It contains a list of settings.",
        "type": "object",
        "properties": {
          "value": {
            "description": "The list of settings.",
            "type": "array",
            "readOnly": true,
            "items": {
              "$ref": "#/definitions/Setting"
            }
          }
        }
      },
      "TagInheritanceProperties": {
        "type": "object",
        "description": "The properties of the tag inheritance setting.",
        "required": [
          "preferContainerTags"
        ],
        "properties": {
          "preferContainerTags": {
            "description": "Prefer Container tags to overide container tags with resource tags in case of conflicts.",
            "type": "boolean"
          }
        }
      }
    },
    "parameters": {
      "apiVersionParameter": {
        "name": "api-version",
        "in": "query",
        "required": true,
        "type": "string",
        "description": "Version of the API to be used with the client request."
      },
      "scopeParameter": {
        "name": "scope",
        "in": "path",
        "required": true,
        "type": "string",
        "description": "The scope associated with setting. This includes 'subscriptions/{subscriptionId}' for subscription scope, 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}' for Billing Account scope, 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}' for Billingprofile scope.",
        "x-ms-parameter-location": "method"
      },
      "settingTypeParameter": {
        "name": "type",
        "in": "path",
        "description": "Setting type.",
        "required": true,
        "type": "string",
        "x-ms-parameter-location": "method",
        "enum": [
          "taginheritance"
        ],
        "x-ms-enum": {
          "name": "SettingType",
          "modelAsString": true,
          "values": [
            {
              "value": "taginheritance",
              "description": "Tag Inheritance Settings is to inherit user defined tags from container(subscription/resource group) to its respective resources.",
              "name": "TagInheritance"
            }
          ]
        }
      }
    }
  }
  