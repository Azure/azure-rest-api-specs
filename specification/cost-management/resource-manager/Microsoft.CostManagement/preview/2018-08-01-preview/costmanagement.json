{
  "swagger": "2.0",
  "info": {
    "version": "2018-08-01-preview",
    "title": "CostManagementClient"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Azure Active Directory OAuth2 Flow.",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "paths": {
    "/subscriptions/{subscriptionId}/providers/Microsoft.CostManagement/reports": {
      "get": {
        "tags": [
          "Reports"
        ],
        "operationId": "Reports_List",
        "description": "Lists all reports for a subscription.",
        "externalDocs": {
          "url": "https://docs.microsoft.com/en-us/rest/api/costmanagement/"
        },
        "x-ms-examples": {
          "ReportList": {
            "$ref": "./examples/ReportList.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/ReportListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CostManagement/reports": {
      "get": {
        "tags": [
          "Reports"
        ],
        "operationId": "Reports_ListByResourceGroupName",
        "description": "Lists all reports for a resource group under a subscription.",
        "externalDocs": {
          "url": "https://docs.microsoft.com/en-us/rest/api/costmanagement/"
        },
        "x-ms-examples": {
          "ReportList": {
            "$ref": "./examples/ReportList.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/ReportListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/providers/Microsoft.CostManagement/reports": {
      "get": {
        "tags": [
          "Reports"
        ],
        "operationId": "Reports_ListByBillingAccount",
        "description": "Lists all reports for a billing account.",
        "externalDocs": {
          "url": "https://docs.microsoft.com/en-us/rest/api/costmanagement/"
        },
        "x-ms-examples": {
          "ReportList": {
            "$ref": "./examples/ReportListByBillingAccount.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "$ref": "#/parameters/billingAccountIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/ReportListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/providers/Microsoft.Billing/departments/{departmentId}/providers/Microsoft.CostManagement/reports": {
      "get": {
        "tags": [
          "Reports"
        ],
        "operationId": "Reports_ListByDepartment",
        "description": "Lists all reports for a department.",
        "externalDocs": {
          "url": "https://docs.microsoft.com/en-us/rest/api/costmanagement/"
        },
        "x-ms-examples": {
          "ReportList": {
            "$ref": "./examples/ReportListByDepartment.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "$ref": "#/parameters/departmentIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/ReportListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.CostManagement/reports/{reportName}": {
      "get": {
        "tags": [
          "Reports"
        ],
        "operationId": "Reports_Get",
        "description": "Gets the report for a subscription by report name.",
        "externalDocs": {
          "url": "https://docs.microsoft.com/en-us/rest/api/costmanagement/"
        },
        "x-ms-examples": {
          "Report": {
            "$ref": "./examples/Report.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/reportNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/Report"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Reports"
        ],
        "operationId": "Reports_CreateOrUpdate",
        "description": "The operation to create or update a report. Update operation requires latest eTag to be set in the request mandatorily. You may obtain the latest eTag by performing a get operation. Create operation does not require eTag.",
        "externalDocs": {
          "url": "https://docs.microsoft.com/en-us/rest/api/costmanagement/"
        },
        "x-ms-examples": {
          "CreateOrUpdateReport": {
            "$ref": "./examples/ReportCreateOrUpdate.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/reportNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Report"
            },
            "description": "Parameters supplied to the CreateOrUpdate Report operation."
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/Report"
            }
          },
          "201": {
            "description": "Created.",
            "schema": {
              "$ref": "#/definitions/Report"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Reports"
        ],
        "operationId": "Reports_Delete",
        "description": "The operation to delete a report.",
        "externalDocs": {
          "url": "https://docs.microsoft.com/en-us/rest/api/costmanagement/"
        },
        "x-ms-examples": {
          "DeleteReport": {
            "$ref": "./examples/ReportDelete.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/reportNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The request has succeeded."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CostManagement/reports/{reportName}": {
      "get": {
        "tags": [
          "Reports"
        ],
        "operationId": "Reports_GetByResourceGroupName",
        "description": "Gets the report for a resource group under a subscription by report name.",
        "externalDocs": {
          "url": "https://docs.microsoft.com/en-us/rest/api/costmanagement/"
        },
        "x-ms-examples": {
          "Report": {
            "$ref": "./examples/Report.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/reportNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/Report"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Reports"
        ],
        "operationId": "Reports_CreateOrUpdateByResourceGroupName",
        "description": "The operation to create or update a report. Update operation requires latest eTag to be set in the request mandatorily. You may obtain the latest eTag by performing a get operation. Create operation does not require eTag.",
        "externalDocs": {
          "url": "https://docs.microsoft.com/en-us/rest/api/costmanagement/"
        },
        "x-ms-examples": {
          "CreateOrUpdateReport": {
            "$ref": "./examples/ReportCreateOrUpdate.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/reportNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Report"
            },
            "description": "Parameters supplied to the CreateOrUpdate Report operation."
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/Report"
            }
          },
          "201": {
            "description": "Created.",
            "schema": {
              "$ref": "#/definitions/Report"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Reports"
        ],
        "operationId": "Reports_DeleteByResourceGroupName",
        "description": "The operation to delete a report.",
        "externalDocs": {
          "url": "https://docs.microsoft.com/en-us/rest/api/costmanagement/"
        },
        "x-ms-examples": {
          "DeleteReport": {
            "$ref": "./examples/ReportDelete.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/reportNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The request has succeeded."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/providers/Microsoft.CostManagement/reports/{reportName}": {
      "get": {
        "tags": [
          "Reports"
        ],
        "operationId": "Reports_GetByBillingAccount",
        "description": "Gets the report for a billing account by report name.",
        "externalDocs": {
          "url": "https://docs.microsoft.com/en-us/rest/api/costmanagement/"
        },
        "x-ms-examples": {
          "Report": {
            "$ref": "./examples/ReportByBillingAccount.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "$ref": "#/parameters/billingAccountIdParameter"
          },
          {
            "$ref": "#/parameters/reportNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/Report"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Reports"
        ],
        "operationId": "Reports_CreateOrUpdateByBillingAccount",
        "description": "The operation to create or update a report for billingAccount. Update operation requires latest eTag to be set in the request mandatorily. You may obtain the latest eTag by performing a get operation. Create operation does not require eTag.",
        "externalDocs": {
          "url": "https://docs.microsoft.com/en-us/rest/api/costmanagement/"
        },
        "x-ms-examples": {
          "CreateOrUpdateReport": {
            "$ref": "./examples/ReportCreateOrUpdateByBillingAccount.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "$ref": "#/parameters/billingAccountIdParameter"
          },
          {
            "$ref": "#/parameters/reportNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Report"
            },
            "description": "Parameters supplied to the CreateOrUpdate Report operation."
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/Report"
            }
          },
          "201": {
            "description": "Created.",
            "schema": {
              "$ref": "#/definitions/Report"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Reports"
        ],
        "operationId": "Reports_DeleteByBillingAccount",
        "description": "The operation to delete a report for billing account.",
        "externalDocs": {
          "url": "https://docs.microsoft.com/en-us/rest/api/costmanagement/"
        },
        "x-ms-examples": {
          "DeleteReport": {
            "$ref": "./examples/ReportDeleteByBillingAccount.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "$ref": "#/parameters/billingAccountIdParameter"
          },
          {
            "$ref": "#/parameters/reportNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The request has succeeded."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/providers/Microsoft.Billing/departments/{departmentId}/providers/Microsoft.CostManagement/reports/{reportName}": {
      "get": {
        "tags": [
          "Reports"
        ],
        "operationId": "Reports_GetByDepartment",
        "description": "Gets the report for a department by report name.",
        "externalDocs": {
          "url": "https://docs.microsoft.com/en-us/rest/api/costmanagement/"
        },
        "x-ms-examples": {
          "Report": {
            "$ref": "./examples/ReportByDepartment.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "$ref": "#/parameters/departmentIdParameter"
          },
          {
            "$ref": "#/parameters/reportNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/Report"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Reports"
        ],
        "operationId": "Reports_CreateOrUpdateByDepartment",
        "description": "The operation to create or update a report for department. Update operation requires latest eTag to be set in the request mandatorily. You may obtain the latest eTag by performing a get operation. Create operation does not require eTag.",
        "externalDocs": {
          "url": "https://docs.microsoft.com/en-us/rest/api/costmanagement/"
        },
        "x-ms-examples": {
          "CreateOrUpdateReport": {
            "$ref": "./examples/ReportCreateOrUpdateByDepartment.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "$ref": "#/parameters/departmentIdParameter"
          },
          {
            "$ref": "#/parameters/reportNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Report"
            },
            "description": "Parameters supplied to the CreateOrUpdate Report operation."
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/Report"
            }
          },
          "201": {
            "description": "Created.",
            "schema": {
              "$ref": "#/definitions/Report"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Reports"
        ],
        "operationId": "Reports_DeleteByDepartment",
        "description": "The operation to delete a report for department.",
        "externalDocs": {
          "url": "https://docs.microsoft.com/en-us/rest/api/costmanagement/"
        },
        "x-ms-examples": {
          "DeleteReport": {
            "$ref": "./examples/ReportDeleteByDepartment.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "$ref": "#/parameters/departmentIdParameter"
          },
          {
            "$ref": "#/parameters/reportNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The request has succeeded."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.CostManagement/reports/{reportName}/run": {
      "post": {
        "tags": [
          "Reports"
        ],
        "operationId": "Reports_Execute",
        "description": "The operation to execute a report.",
        "externalDocs": {
          "url": "https://docs.microsoft.com/en-us/rest/api/costmanagement/"
        },
        "x-ms-examples": {
          "ExecuteReport": {
            "$ref": "./examples/ReportExecution.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/reportNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The request has succeeded."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CostManagement/reports/{reportName}/run": {
      "post": {
        "tags": [
          "Reports"
        ],
        "operationId": "Reports_ExecuteByResourceGroupName",
        "description": "The operation to execute a report.",
        "externalDocs": {
          "url": "https://docs.microsoft.com/en-us/rest/api/costmanagement/"
        },
        "x-ms-examples": {
          "ExecuteReport": {
            "$ref": "./examples/ReportExecution.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/reportNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The request has succeeded."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/providers/Microsoft.CostManagement/reports/{reportName}/run": {
      "post": {
        "tags": [
          "Reports"
        ],
        "operationId": "Reports_ExecuteByBillingAccount",
        "description": "The operation to execute a report by billing account.",
        "externalDocs": {
          "url": "https://docs.microsoft.com/en-us/rest/api/costmanagement/"
        },
        "x-ms-examples": {
          "ExecuteReport": {
            "$ref": "./examples/ReportExecutionByBillingAccount.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "$ref": "#/parameters/billingAccountIdParameter"
          },
          {
            "$ref": "#/parameters/reportNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The request has succeeded."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/providers/Microsoft.Billing/departments/{departmentId}/providers/Microsoft.CostManagement/reports/{reportName}/run": {
      "post": {
        "tags": [
          "Reports"
        ],
        "operationId": "Reports_ExecuteByDepartment",
        "description": "The operation to execute a report by department.",
        "externalDocs": {
          "url": "https://docs.microsoft.com/en-us/rest/api/costmanagement/"
        },
        "x-ms-examples": {
          "ExecuteReport": {
            "$ref": "./examples/ReportExecutionByDepartment.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "$ref": "#/parameters/departmentIdParameter"
          },
          {
            "$ref": "#/parameters/reportNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The request has succeeded."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.CostManagement/reports/{reportName}/runHistory": {
      "get": {
        "tags": [
          "Reports"
        ],
        "operationId": "Reports_GetExecutionHistory",
        "description": "Gets the execution history of a report for a subscription by report name.",
        "externalDocs": {
          "url": "https://docs.microsoft.com/en-us/rest/api/costmanagement/"
        },
        "x-ms-examples": {
          "ExecutionHistoryReport": {
            "$ref": "./examples/ReportExecutionList.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/reportNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/ReportExecutionListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CostManagement/reports/{reportName}/runHistory": {
      "get": {
        "tags": [
          "Reports"
        ],
        "operationId": "Reports_GetExecutionHistoryByResourceGroupName",
        "description": "Gets the execution history of a report for a resource group by report name.",
        "externalDocs": {
          "url": "https://docs.microsoft.com/en-us/rest/api/costmanagement/"
        },
        "x-ms-examples": {
          "ExecutionHistoryReport": {
            "$ref": "./examples/ReportExecutionList.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/reportNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/ReportExecutionListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/providers/Microsoft.CostManagement/reports/{reportName}/runHistory": {
      "get": {
        "tags": [
          "Reports"
        ],
        "operationId": "Reports_GetExecutionHistoryByBillingAccount",
        "description": "Gets the execution history of a report for a billing account by report name.",
        "externalDocs": {
          "url": "https://docs.microsoft.com/en-us/rest/api/costmanagement/"
        },
        "x-ms-examples": {
          "ExecutionHistoryReport": {
            "$ref": "./examples/ReportExecutionListByBillingAccount.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "$ref": "#/parameters/billingAccountIdParameter"
          },
          {
            "$ref": "#/parameters/reportNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/ReportExecutionListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/providers/Microsoft.Billing/departments/{departmentId}/providers/Microsoft.CostManagement/reports/{reportName}/runHistory": {
      "get": {
        "tags": [
          "Reports"
        ],
        "operationId": "Reports_GetExecutionHistoryByDepartment",
        "description": "Gets the execution history of a report for a department by report name.",
        "externalDocs": {
          "url": "https://docs.microsoft.com/en-us/rest/api/costmanagement/"
        },
        "x-ms-examples": {
          "ExecutionHistoryReport": {
            "$ref": "./examples/ReportExecutionListByDepartment.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "$ref": "#/parameters/departmentIdParameter"
          },
          {
            "$ref": "#/parameters/reportNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/ReportExecutionListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/providers/Microsoft.CostManagement/dimensions": {
      "get": {
        "tags": [
          "Dimensions"
        ],
        "x-ms-odata": "#/definitions/Dimension",
        "operationId": "BillingAccountDimensions_List",
        "description": "Lists the dimensions by billingAccount Id.",
        "externalDocs": {
          "url": "https://docs.microsoft.com/en-us/rest/api/costmanagement/"
        },
        "x-ms-examples": {
          "BillingAccountDimensionsList": {
            "$ref": "./examples/BillingAccountDimensionsList.json"
          },
          "BillingAccountDimensionsListExpandAndTop": {
            "$ref": "./examples/BillingAccountDimensionsListExpandAndTop.json"
          },
          "BillingAccountDimensionsListWithFilter": {
            "$ref": "./examples/BillingAccountDimensionsListWithFilter.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "$ref": "#/parameters/billingAccountIdParameter"
          },
          {
            "name": "$filter",
            "description": "May be used to filter dimensions by properties/category, properties/usageStart, properties/usageEnd. Supported operators are 'eq','lt', 'gt', 'le', 'ge'.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "description": "May be used to expand the properties/data within a dimension category. By default, data is not included when listing dimensions.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "$skiptoken",
            "description": "Skiptoken is only used if a previous operation returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skiptoken parameter that specifies a starting point to use for subsequent calls.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "description": "May be used to limit the number of results to the most recent N dimension data.",
            "in": "query",
            "required": false,
            "type": "integer",
            "minimum": 1,
            "maximum": 1000
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/DimensionsListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": null
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.CostManagement/dimensions": {
      "get": {
        "tags": [
          "Dimensions"
        ],
        "x-ms-odata": "#/definitions/Dimension",
        "operationId": "SubscriptionDimensions_List",
        "description": "Lists the dimensions by subscription Id.",
        "externalDocs": {
          "url": "https://docs.microsoft.com/en-us/rest/api/costmanagement/"
        },
        "x-ms-examples": {
          "SubscriptionDimensionsList": {
            "$ref": "./examples/SubscriptionDimensionsList.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "name": "$filter",
            "description": "May be used to filter dimensions by properties/category, properties/usageStart, properties/usageEnd. Supported operators are 'eq','lt', 'gt', 'le', 'ge'.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "description": "May be used to expand the properties/data within a dimension category. By default, data is not included when listing dimensions.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "$skiptoken",
            "description": "Skiptoken is only used if a previous operation returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skiptoken parameter that specifies a starting point to use for subsequent calls.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "description": "May be used to limit the number of results to the most recent N dimension data.",
            "in": "query",
            "required": false,
            "type": "integer",
            "minimum": 1,
            "maximum": 1000
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/DimensionsListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": null
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CostManagement/dimensions": {
      "get": {
        "tags": [
          "Dimensions"
        ],
        "x-ms-odata": "#/definitions/Dimension",
        "operationId": "ResourceGroupDimensions_List",
        "description": "Lists the dimensions by resource group Id.",
        "externalDocs": {
          "url": "https://docs.microsoft.com/en-us/rest/api/costmanagement/"
        },
        "x-ms-examples": {
          "ResourceGroupDimensionsList": {
            "$ref": "./examples/ResourceGroupDimensionsList.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "$filter",
            "description": "May be used to filter dimensions by properties/category, properties/usageStart, properties/usageEnd. Supported operators are 'eq','lt', 'gt', 'le', 'ge'.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "$expand",
            "description": "May be used to expand the properties/data within a dimension category. By default, data is not included when listing dimensions.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "$skiptoken",
            "description": "Skiptoken is only used if a previous operation returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skiptoken parameter that specifies a starting point to use for subsequent calls.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "description": "May be used to limit the number of results to the most recent N dimension data.",
            "in": "query",
            "required": false,
            "type": "integer",
            "minimum": 1,
            "maximum": 1000
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/DimensionsListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": null
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.CostManagement/Query": {
      "post": {
        "tags": [
          "Query"
        ],
        "operationId": "QuerySubscription",
        "description": "Lists the usage data for subscriptionId.",
        "externalDocs": {
          "url": "https://docs.microsoft.com/en-us/rest/api/costmanagement/"
        },
        "x-ms-examples": {
          "SubscriptionQuery": {
            "$ref": "./examples/SubscriptionQuery.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ReportDefinition"
            },
            "description": "Parameters supplied to the CreateOrUpdate Report operation."
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/QueryResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": null
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.CostManagement/Query": {
      "post": {
        "tags": [
          "Query"
        ],
        "operationId": "QueryResourceGroup",
        "description": "Lists the usage data for subscriptionId and resource group.",
        "externalDocs": {
          "url": "https://docs.microsoft.com/en-us/rest/api/costmanagement/"
        },
        "x-ms-examples": {
          "ResourceGroupQuery": {
            "$ref": "./examples/ResourceGroupQuery.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ReportDefinition"
            },
            "description": "Parameters supplied to the CreateOrUpdate Report operation."
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/QueryResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": null
        }
      }
    },
    "/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/providers/Microsoft.CostManagement/Query": {
      "post": {
        "tags": [
          "Query"
        ],
        "operationId": "QueryBillingAccount",
        "description": "Lists the usage data for billing account.",
        "externalDocs": {
          "url": "https://docs.microsoft.com/en-us/rest/api/costmanagement/"
        },
        "x-ms-examples": {
          "BillingAccountQuery": {
            "$ref": "./examples/BillingAccountQuery.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "$ref": "#/parameters/billingAccountIdParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ReportDefinition"
            },
            "description": "Parameters supplied to the CreateOrUpdate Report operation."
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/QueryResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": null
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.CostManagement/connectors": {
      "get": {
        "tags": [
          "Connectors"
        ],
        "operationId": "Connector_List",
        "description": "List all connector definitions for a subscription",
        "externalDocs": {
          "url": "https://docs.microsoft.com/en-us/rest/api/costmanagement/"
        },
        "x-ms-examples": {
          "Connector_List": {
            "$ref": "./examples/ConnectorList.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/ConnectorDefinitionListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": null
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.CostManagement/connectors": {
      "get": {
        "tags": [
          "Connectors"
        ],
        "operationId": "Connector_ListByResourceGroupName",
        "description": "List all connector definitions for a resource group under a subscription.",
        "externalDocs": {
          "url": "https://docs.microsoft.com/en-us/rest/api/costmanagement/"
        },
        "x-ms-examples": {
          "Connector_List": {
            "$ref": "./examples/ConnectorList.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/ConnectorDefinitionListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": null
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.CostManagement/connectors/{connectorName}": {
      "get": {
        "tags": [
          "Connectors"
        ],
        "operationId": "Connector_Get",
        "description": "Get a connector definition",
        "externalDocs": {
          "url": "https://docs.microsoft.com/en-us/rest/api/costmanagement/"
        },
        "x-ms-examples": {
          "Connector_Get": {
            "$ref": "./examples/ConnectorGet.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/connectorNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/ConnectorDefinition"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Connectors"
        ],
        "operationId": "Connector_CreateOrUpdate",
        "description": "Create or update a connector definition",
        "externalDocs": {
          "url": "https://docs.microsoft.com/en-us/rest/api/costmanagement/"
        },
        "x-ms-examples": {
          "Connector_Put": {
            "$ref": "./examples/ConnectorPut.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/connectorNameParameter"
          },
          {
            "name": "connector",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ConnectorDefinition"
            },
            "description": "Connector details"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/ConnectorDefinition"
            }
          },
          "201": {
            "description": "Created.",
            "schema": {
              "$ref": "#/definitions/ConnectorDefinition"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Connectors"
        ],
        "operationId": "Connector_Delete",
        "description": "Delete a connector definition",
        "externalDocs": {
          "url": "https://docs.microsoft.com/en-us/rest/api/costmanagement/"
        },
        "x-ms-examples": {
          "Connector_Delete": {
            "$ref": "./examples/ConnectorDelete.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/connectorNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The request has succeeded."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Connectors"
        ],
        "operationId": "Connector_Update",
        "description": "Update a connector definition",
        "externalDocs": {
          "url": "https://docs.microsoft.com/en-us/rest/api/costmanagement/"
        },
        "x-ms-examples": {
          "Connector_Patch": {
            "$ref": "./examples/ConnectorPatch.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/connectorNameParameter"
          },
          {
            "name": "connector",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ConnectorDefinition"
            },
            "description": "Connector details"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/ConnectorDefinition"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.CostManagement/alerts": {
      "get": {
        "tags": [
          "Alerts"
        ],
        "operationId": "Alerts_List",
        "description": "List all alerts for a subscription.",
        "x-ms-examples": {
          "Alert_List": {
            "$ref": "./examples/AlertList.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "name": "$filter",
            "description": "May be used to filter alerts by properties/definition/type, properties/definition/category, properties/definition/criteria, properties/costEntityId, properties/creationTime, properties/closeTime, properties/status, properties/source. Supported operators are 'eq','lt', 'gt', 'le', 'ge'.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "$skiptoken",
            "description": "Skiptoken is only used if a previous operation returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skiptoken parameter that specifies a starting point to use for subsequent calls.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "description": "May be used to limit the number of results to the most recent N alerts.",
            "in": "query",
            "required": false,
            "type": "integer",
            "minimum": 1,
            "maximum": 1000
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/AlertListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CostManagement/alerts": {
      "get": {
        "tags": [
          "Alerts"
        ],
        "operationId": "Alerts_ListByResourceGroupName",
        "description": "List all alerts for a resource group under a subscription.",
        "x-ms-examples": {
          "Alert_List": {
            "$ref": "./examples/AlertList.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "name": "$filter",
            "description": "May be used to filter alerts by properties/definition/type, properties/definition/category, properties/definition/criteria, properties/costEntityId, properties/creationTime, properties/closeTime, properties/status, properties/source. Supported operators are 'eq','lt', 'gt', 'le', 'ge'.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "$skiptoken",
            "description": "Skiptoken is only used if a previous operation returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skiptoken parameter that specifies a starting point to use for subsequent calls.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "description": "May be used to limit the number of results to the most recent N alerts.",
            "in": "query",
            "required": false,
            "type": "integer",
            "minimum": 1,
            "maximum": 1000
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/AlertListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/providers/Microsoft.CostManagement/alerts": {
      "get": {
        "tags": [
          "Alerts"
        ],
        "operationId": "Alerts_ListByEnrollment",
        "description": "List all alerts for an enrollment.",
        "x-ms-examples": {
          "Alert_List": {
            "$ref": "./examples/AlertList.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "$ref": "#/parameters/billingAccountIdParameter"
          },
          {
            "name": "$filter",
            "description": "May be used to filter alerts by properties/definition/type, properties/definition/category, properties/definition/criteria, properties/costEntityId, properties/creationTime, properties/closeTime, properties/status, properties/source. Supported operators are 'eq','lt', 'gt', 'le', 'ge'.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "$skiptoken",
            "description": "Skiptoken is only used if a previous operation returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skiptoken parameter that specifies a starting point to use for subsequent calls.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "description": "May be used to limit the number of results to the most recent N alerts.",
            "in": "query",
            "required": false,
            "type": "integer",
            "minimum": 1,
            "maximum": 1000
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/AlertListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/departments/{departmentId}/providers/Microsoft.CostManagement/alerts": {
      "get": {
        "tags": [
          "Alerts"
        ],
        "operationId": "Alerts_ListByDepartment",
        "description": "List all alerts for a department.",
        "x-ms-examples": {
          "Alert_List": {
            "$ref": "./examples/AlertList.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
		  {
            "$ref": "#/parameters/billingAccountIdParameter"
          },
          {
            "$ref": "#/parameters/departmentIdParameter"
          },
          {
            "name": "$filter",
            "description": "May be used to filter alerts by properties/definition/type, properties/definition/category, properties/definition/criteria, properties/costEntityId, properties/creationTime, properties/closeTime, properties/status, properties/source. Supported operators are 'eq','lt', 'gt', 'le', 'ge'.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "$skiptoken",
            "description": "Skiptoken is only used if a previous operation returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skiptoken parameter that specifies a starting point to use for subsequent calls.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "description": "May be used to limit the number of results to the most recent N alerts.",
            "in": "query",
            "required": false,
            "type": "integer",
            "minimum": 1,
            "maximum": 1000
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/AlertListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/enrollmentAccounts/{enrollmentAccountId}/providers/Microsoft.CostManagement/alerts": {
      "get": {
        "tags": [
          "Alerts"
        ],
        "operationId": "Alerts_ListByAccount",
        "description": "List all alerts for an account.",
        "x-ms-examples": {
          "Alert_List": {
            "$ref": "./examples/AlertList.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
		  {
            "$ref": "#/parameters/billingAccountIdParameter"
          },
          {
            "$ref": "#/parameters/enrollmentAccountIdParameter"
          },
          {
            "name": "$filter",
            "description": "May be used to filter alerts by properties/definition/type, properties/definition/category, properties/definition/criteria, properties/costEntityId, properties/creationTime, properties/closeTime, properties/status, properties/source. Supported operators are 'eq','lt', 'gt', 'le', 'ge'.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "$skiptoken",
            "description": "Skiptoken is only used if a previous operation returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skiptoken parameter that specifies a starting point to use for subsequent calls.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "description": "May be used to limit the number of results to the most recent N alerts.",
            "in": "query",
            "required": false,
            "type": "integer",
            "minimum": 1,
            "maximum": 1000
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/AlertListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
	"/providers/Microsoft.Management/managementGroups/{managementGroupId}/providers/Microsoft.CostManagement/alerts": {
      "get": {
        "tags": [
          "Alerts"
        ],
        "operationId": "Alerts_ListByManagementGroups",
        "description": "List all alerts for Management Groups.",
        "x-ms-examples": {
          "Alert_List": {
            "$ref": "./examples/AlertList.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "$ref": "#/parameters/managementGroupIdParameter"
          },
          {
            "name": "$filter",
            "description": "May be used to filter alerts by properties/definition/type, properties/definition/category, properties/definition/criteria, properties/costEntityId, properties/creationTime, properties/closeTime, properties/status, properties/source. Supported operators are 'eq','lt', 'gt', 'le', 'ge'.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "$skiptoken",
            "description": "Skiptoken is only used if a previous operation returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skiptoken parameter that specifies a starting point to use for subsequent calls.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "description": "May be used to limit the number of results to the most recent N alerts.",
            "in": "query",
            "required": false,
            "type": "integer",
            "minimum": 1,
            "maximum": 1000
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/AlertListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.CostManagement/alerts/{alertId}": {
      "get": {
        "tags": [
          "Alerts"
        ],
        "operationId": "Alerts_GetBySubscription",
        "description": "Gets the alert for a subscription by alert ID.",
        "externalDocs": {
          "url": "https://docs.microsoft.com/en-us/rest/api/costmanagement/"
        },
        "x-ms-examples": {
          "Alert": {
            "$ref": "./examples/Alert.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/alertIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/Alert"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CostManagement/alerts/{alertId}": {
      "get": {
        "tags": [
          "Alerts"
        ],
        "operationId": "Alerts_GetByResourceGroupName",
        "description": "Gets the alert for a resource group under a subscription by alert ID.",
        "externalDocs": {
          "url": "https://docs.microsoft.com/en-us/rest/api/costmanagement/"
        },
        "x-ms-examples": {
          "Alert": {
            "$ref": "./examples/Alert.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "$ref": "#/parameters/alertIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/Alert"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/providers/Microsoft.CostManagement/alerts/{alertId}": {
      "get": {
        "tags": [
          "Alerts"
        ],
        "operationId": "Alerts_GetByEnrollment",
        "description": "Gets the alert for an enrollment by alert ID.",
        "externalDocs": {
          "url": "https://docs.microsoft.com/en-us/rest/api/costmanagement/"
        },
        "x-ms-examples": {
          "Alert": {
            "$ref": "./examples/Alert.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "$ref": "#/parameters/billingAccountIdParameter"
          },
          {
            "$ref": "#/parameters/alertIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/Alert"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/departments/{departmentId}/providers/Microsoft.CostManagement/alerts/{alertId}": {
      "get": {
        "tags": [
          "Alerts"
        ],
        "operationId": "Alerts_GetByDepartment",
        "description": "Gets the alert for a department by alert ID.",
        "externalDocs": {
          "url": "https://docs.microsoft.com/en-us/rest/api/costmanagement/"
        },
        "x-ms-examples": {
          "Alert": {
            "$ref": "./examples/Alert.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
		  {
            "$ref": "#/parameters/billingAccountIdParameter"
          },
          {
            "$ref": "#/parameters/departmentIdParameter"
          },
          {
            "$ref": "#/parameters/alertIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/Alert"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/enrollmentAccounts/{enrollmentAccountId}/providers/Microsoft.CostManagement/alerts/{alertId}": {
      "get": {
        "tags": [
          "Alerts"
        ],
        "operationId": "Alerts_GetByAccount",
        "description": "Gets the alert for an account by alert ID.",
        "externalDocs": {
          "url": "https://docs.microsoft.com/en-us/rest/api/costmanagement/"
        },
        "x-ms-examples": {
          "Alert": {
            "$ref": "./examples/Alert.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
		  {
            "$ref": "#/parameters/billingAccountIdParameter"
          },
          {
            "$ref": "#/parameters/enrollmentAccountIdParameter"
          },
          {
            "$ref": "#/parameters/alertIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/Alert"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
	"/providers/Microsoft.Management/managementGroups/{managementGroupId}/providers/Microsoft.CostManagement/alerts/{alertId}": {
      "get": {
        "tags": [
          "Alerts"
        ],
        "operationId": "Alerts_GetAlertByManagementGroups",
        "description": "Gets an alert for Management Groups by alert ID.",
        "externalDocs": {
          "url": "https://docs.microsoft.com/en-us/rest/api/costmanagement/"
        },
        "x-ms-examples": {
          "Alert": {
            "$ref": "./examples/Alert.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "$ref": "#/parameters/managementGroupIdParameter"
          },
          {
            "$ref": "#/parameters/alertIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/Alert"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
	"/subscriptions/{subscriptionId}/providers/Microsoft.CostManagement/alerts/{alertId}/updateStatus": {
      "patch": {
        "tags": [
          "Alerts"
        ],
        "operationId": "Alerts_UpdateSubscriptionAlertStatus",
        "description": "Update alerts status for a subscription.",
        "x-ms-examples": {
          "Alert": {
            "$ref": "./examples/Alert.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
		  {
            "$ref": "#/parameters/alertIdParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Alert"
            },
            "description": "Parameters supplied to the update alerts status operation."
          } 
        ],
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/Alert"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
	"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CostManagement/alerts/{alertId}/updateStatus": {
      "patch": {
        "tags": [
          "Alerts"
        ],
        "operationId": "Alerts_UpdateResourceGroupNameAlertStatus",
        "description": "Update alerts status for a resource group under a subscription.",
        "x-ms-examples": {
          "Alert": {
            "$ref": "./examples/Alert.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/alertIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Alert"
            },
            "description": "Parameters supplied to the update alerts status operation."
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/Alert"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
	"/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/providers/Microsoft.CostManagement/alerts/{alertId}/updateStatus": {
      "patch": {
        "tags": [
          "Alerts"
        ],
        "operationId": "Alerts_UpdateBillingAccountAlertStatus",
        "description": "Update alerts status for billing account.",
        "x-ms-examples": {
          "Alert": {
            "$ref": "./examples/Alert.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "$ref": "#/parameters/billingAccountIdParameter"
          },
		  {
            "$ref": "#/parameters/alertIdParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Alert"
            },
            "description": "Parameters supplied to the update alerts status operation."
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/Alert"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
	"/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/departments/{departmentId}/providers/Microsoft.CostManagement/alerts/{alertId}/updateStatus": {
      "patch": {
        "tags": [
          "Alerts"
        ],
        "operationId": "Alerts_UpdateDepartmentsAlertStatus",
        "description": "Update alerts status for a department.",
        "x-ms-examples": {
          "Alert": {
            "$ref": "./examples/Alert.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
		  {
            "$ref": "#/parameters/billingAccountIdParameter"
          },
          {
            "$ref": "#/parameters/departmentIdParameter"
          },
		  {
            "$ref": "#/parameters/alertIdParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Alert"
            },
            "description": "Parameters supplied to the update alerts status operation."
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/Alert"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
	"/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/enrollmentAccounts/{enrollmentAccountId}/providers/Microsoft.CostManagement/alerts/{alertId}/updateStatus": {
      "patch": {
        "tags": [
          "Alerts"
        ],
        "operationId": "Alerts_UpdateEnrollmentAccountAlertStatus",
        "description": "Update alerts status for an enrollment account.",
        "x-ms-examples": {
          "Alert": {
            "$ref": "./examples/Alert.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
		  {
            "$ref": "#/parameters/billingAccountIdParameter"
          },
          {
            "$ref": "#/parameters/enrollmentAccountIdParameter"
          },
		  {
            "$ref": "#/parameters/alertIdParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Alert"
            },
            "description": "Parameters supplied to the update alerts status operation."
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/Alert"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
	"/providers/Microsoft.Management/managementGroups/{managementGroupId}/providers/Microsoft.CostManagement/alerts/{alertId}/UpdateStatus": {
      "patch": {
        "tags": [
          "Alerts"
        ],
        "operationId": "Alerts_UpdateManagementGroupAlertStatus",
        "description": "Update alerts status for management group.",
        "x-ms-examples": {
          "Alert": {
            "$ref": "./examples/Alert.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "$ref": "#/parameters/managementGroupIdParameter"
          },
		  {
            "$ref": "#/parameters/alertIdParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Alert"
            },
            "description": "Parameters supplied to the update alerts status operation."
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/Alert"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/providers/Microsoft.CostManagement/operations": {
      "get": {
        "tags": [
          "Operations"
        ],
        "operationId": "Operations_List",
        "description": "Lists all of the available cost management REST API operations.",
        "parameters": [
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/OperationListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    }
  },
  "definitions": {
    "Operation": {
      "description": "A Cost Management REST API operation.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Operation name: {provider}/{resource}/{operation}.",
          "type": "string",
          "readOnly": true
        },
        "display": {
          "description": "The object that represents the operation.",
          "properties": {
            "provider": {
              "description": "Service provider: Microsoft.CostManagement.",
              "type": "string",
              "readOnly": true
            },
            "resource": {
              "description": "Resource on which the operation is performed: UsageDetail, etc.",
              "type": "string",
              "readOnly": true
            },
            "operation": {
              "description": "Operation type: Read, write, delete, etc.",
              "type": "string",
              "readOnly": true
            }
          }
        }
      }
    },
    "OperationListResult": {
      "description": "Result of listing CostManagement operations. It contains a list of operations and a URL link to get the next set of results.",
      "properties": {
        "value": {
          "description": "List of CostManagement operations supported by the Microsoft.CostManagement resource provider.",
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/Operation"
          }
        },
        "nextLink": {
          "description": "URL to get the next set of operation list results if there are any.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "ErrorBase": {
      "description": "The details of the error.",
      "properties": {
        "code": {
          "type": "string",
          "description": "A machine readable error code.",
          "readOnly": true
        },
        "message": {
          "type": "string",
          "description": "A human readable error message.",
          "readOnly": true
        },
        "target": {
          "type": "string",
          "description": "Indicates which property in the request is responsible for the error.",
          "readOnly": true
        }
      }
    },
    "ErrorDetails": {
      "description": "The details of the error.",
      "properties": {
        "code": {
          "description": "A machine readable error code.",
          "type": "string",
          "readOnly": true
        },
        "message": {
          "description": "A human readable error message.",
          "type": "string",
          "readOnly": true
        },
        "target": {
          "description": "Indicates which property in the request is responsible for the error.",
          "type": "string"
        },
        "details": {
          "description": "error details.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ErrorBase"
          }
        }
      }
    },
    "ErrorResponse": {
      "description": "Error response indicates that the service is not able to process the incoming request. The reason is provided in the error message.",
      "type": "object",
      "properties": {
        "error": {
          "description": "The details of the error.",
          "$ref": "#/definitions/ErrorDetails"
        }
      }
    },
    "Resource": {
      "description": "The Resource model definition.",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Resource Id."
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Resource name."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "Resource type."
        },
        "tags": {
          "readOnly": true,
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Resource tags."
        }
      },
      "x-ms-azure-resource": true
    },
    "ReportListResult": {
      "description": "Result of listing reports. It contains a list of available reports in the scope provided.",
      "properties": {
        "value": {
          "description": "The list of reports.",
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/Report"
          }
        }
      }
    },
    "Report": {
      "description": "A report resource.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ReportProperties",
          "title": "Report properties"
        }
      }
    },
    "ReportProperties": {
      "description": "The properties of the report.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/CommonReportProperties"
        }
      ],
      "properties": {
        "schedule": {
          "description": "Has schedule information for the report.",
          "$ref": "#/definitions/ReportSchedule"
        }
      }
    },
    "CommonReportProperties": {
      "description": "The common properties of the report.",
      "properties": {
        "format": {
          "description": "The format of the report being delivered.",
          "type": "string",
          "enum": [
            "Csv"
          ],
          "x-ms-enum": {
            "name": "FormatType",
            "modelAsString": true
          }
        },
        "deliveryInfo": {
          "description": "Has delivery information for the report.",
          "$ref": "#/definitions/ReportDeliveryInfo"
        },
        "definition": {
          "description": "Has definition for the report.",
          "$ref": "#/definitions/ReportDefinition"
        }
      },
      "required": [
        "deliveryInfo",
        "definition"
      ]
    },
    "ReportSchedule": {
      "description": "The schedule associated with a report.",
      "properties": {
        "status": {
          "description": "The status of the schedule. Whether active or not. If inactive, the report's scheduled execution is paused.",
          "type": "string",
          "enum": [
            "Active",
            "Inactive"
          ],
          "x-ms-enum": {
            "name": "StatusType",
            "modelAsString": true
          }
        },
        "recurrence": {
          "description": "The schedule recurrence.",
          "type": "string",
          "enum": [
            "Daily",
            "Weekly",
            "Monthly",
            "Annually"
          ],
          "x-ms-enum": {
            "name": "RecurrenceType",
            "modelAsString": true
          }
        },
        "recurrencePeriod": {
          "description": "Has start and end date of the recurrence. The start date must be in future. If present, the end date must be greater than start date.",
          "$ref": "#/definitions/ReportRecurrencePeriod"
        }
      },
      "required": [
        "recurrence"
      ]
    },
    "ReportDeliveryInfo": {
      "description": "The delivery information associated with a report.",
      "properties": {
        "destination": {
          "description": "Has destination for the report being delivered.",
          "$ref": "#/definitions/ReportDeliveryDestination"
        }
      },
      "required": [
        "destination"
      ]
    },
    "ReportDefinition": {
      "description": "The definition of a report.",
      "properties": {
        "type": {
          "description": "The type of the report.",
          "type": "string",
          "enum": [
            "Usage"
          ],
          "x-ms-enum": {
            "name": "ReportType",
            "modelAsString": true
          }
        },
        "timeframe": {
          "description": "The time frame for pulling data for the report. If custom, then a specific time period must be provided.",
          "type": "string",
          "enum": [
            "WeekToDate",
            "MonthToDate",
            "Custom"
          ],
          "x-ms-enum": {
            "name": "TimeframeType",
            "modelAsString": true
          }
        },
        "timePeriod": {
          "description": "Has time period for pulling data for the report.",
          "$ref": "#/definitions/ReportTimePeriod"
        },
        "dataset": {
          "description": "Has definition for data in this report.",
          "$ref": "#/definitions/ReportDataset"
        }
      },
      "required": [
        "type",
        "timeframe"
      ]
    },
    "ReportRecurrencePeriod": {
      "description": "The start and end date for recurrence schedule.",
      "properties": {
        "from": {
          "description": "The start date of recurrence.",
          "type": "string",
          "format": "date-time"
        },
        "to": {
          "description": "The end date of recurrence.",
          "type": "string",
          "format": "date-time"
        }
      },
      "required": [
        "from"
      ]
    },
    "ReportDeliveryDestination": {
      "description": "The destination information for the delivery of the report.",
      "properties": {
        "resourceId": {
          "description": "The resource id of the storage account where reports will be delivered.",
          "type": "string"
        },
        "container": {
          "description": "The name of the container where reports will be uploaded.",
          "type": "string"
        },
        "rootFolderPath": {
          "description": "The name of the directory where reports will be uploaded.",
          "type": "string"
        }
      },
      "required": [
        "resourceId",
        "container"
      ]
    },
    "ReportTimePeriod": {
      "description": "The start and end date for pulling data for the report.",
      "properties": {
        "from": {
          "description": "The start date to pull data from.",
          "type": "string",
          "format": "date-time"
        },
        "to": {
          "description": "The end date to pull data to.",
          "type": "string",
          "format": "date-time"
        }
      },
      "required": [
        "from",
        "to"
      ]
    },
    "ReportDataset": {
      "description": "The definition of data present in the report.",
      "properties": {
        "granularity": {
          "description": "The granularity of rows in the report.",
          "type": "string",
          "enum": [
            "Daily"
          ],
          "x-ms-enum": {
            "name": "GranularityType",
            "modelAsString": true
          }
        },
        "configuration": {
          "description": "Has configuration information for the data in the report. The configuration will be ignored if aggregation and grouping are provided.",
          "$ref": "#/definitions/ReportDatasetConfiguration"
        },
        "aggregation": {
          "type": "object",
          "description": "Dictionary of aggregation expression to use in the report. The key of each item in the dictionary is the alias for the aggregated column. Report can have up to 2 aggregation clauses.",
          "additionalProperties": {
            "type": "object",
            "$ref": "#/definitions/ReportAggregation"
          },
          "maxItems": 2
        },
        "grouping": {
          "description": "Array of group by expression to use in the report. Report can have up to 2 group by clauses.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReportGrouping"
          },
          "maxItems": 2
        },
        "filter": {
          "type": "object",
          "description": "Has filter expression to use in the report.",
          "$ref": "#/definitions/ReportFilter"
        }
      }
    },
    "ReportDatasetConfiguration": {
      "description": "The configuration of dataset in the report.",
      "properties": {
        "columns": {
          "description": "Array of column names to be included in the report. Any valid report column name is allowed. If not provided, then report includes all columns.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ReportAggregation": {
      "description": "The aggregation expression to be used in the report.",
      "properties": {
        "name": {
          "description": "The name of the column to aggregate.",
          "type": "string"
        },
        "function": {
          "description": "The name of the aggregation function to use.",
          "type": "string",
          "enum": [
            "Sum"
          ],
          "x-ms-enum": {
            "name": "FunctionType",
            "modelAsString": true
          }
        }
      },
      "required": [
        "name",
        "function"
      ]
    },
    "ReportGrouping": {
      "description": "The group by expression to be used in the report.",
      "properties": {
        "type": {
          "description": "Has type of the column to group.",
          "$ref": "#/definitions/ReportColumnType"
        },
        "name": {
          "description": "The name of the column to group.",
          "type": "string"
        }
      },
      "required": [
        "type",
        "name"
      ]
    },
    "ReportFilter": {
      "description": "The filter expression to be used in the report.",
      "properties": {
        "and": {
          "description": "The logical \"AND\" expression. Must have at least 2 items.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReportFilter"
          },
          "minItems": 2
        },
        "or": {
          "description": "The logical \"OR\" expression. Must have at least 2 items.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReportFilter"
          },
          "minItems": 2
        },
        "not": {
          "description": "The logical \"NOT\" expression.",
          "$ref": "#/definitions/ReportFilter"
        },
        "dimension": {
          "description": "Has comparison expression for a dimension",
          "$ref": "#/definitions/ReportComparisonExpression"
        },
        "tag": {
          "description": "Has comparison expression for a tag",
          "$ref": "#/definitions/ReportComparisonExpression"
        }
      }
    },
    "ReportColumnType": {
      "description": "The type of the column in the report.",
      "type": "string",
      "enum": [
        "Tag",
        "Dimension"
      ],
      "x-ms-enum": {
        "name": "ReportColumnType",
        "modelAsString": true
      }
    },
    "ReportComparisonExpression": {
      "description": "The comparison expression to be used in the report.",
      "properties": {
        "name": {
          "description": "The name of the column to use in comparison.",
          "type": "string"
        },
        "operator": {
          "description": "The operator to use for comparison.",
          "type": "string",
          "enum": [
            "In"
          ],
          "x-ms-enum": {
            "name": "OperatorType",
            "modelAsString": true
          }
        },
        "values": {
          "description": "Array of values to use for comparison",
          "type": "array",
          "items": {
            "type": "string"
          },
          "minItems": 1
        }
      },
      "required": [
        "name",
        "operator",
        "values"
      ]
    },
    "ReportExecutionListResult": {
      "description": "Result of listing reports execution history of a report by name",
      "properties": {
        "value": {
          "description": "The list of report executions.",
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/ReportExecution"
          }
        }
      }
    },
    "ReportExecution" : {
      "description": "A report execution.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ReportExecutionProperties",
          "title": "Report execution properties"
        }
      }
    },
    "ReportExecutionProperties": {
      "description": "The properties of the report execution.",
      "properties": {
        "executionType": {
          "description": "The type of the report execution.",
          "type": "string",
          "enum": [
            "OnDemand",
            "Scheduled"
          ],
          "x-ms-enum": {
            "name": "ExecutionType",
            "modelAsString": true
          }
        },
        "status": {
          "description": "The status of the report execution.",
          "type": "string",
          "enum": [
            "Queud",
            "InProgress",
            "Completed",
            "Failed",
            "Timeout"
          ],
          "x-ms-enum": {
            "name": "ExecutionStatus",
            "modelAsString": true
          }
        },
        "submittedBy": {
          "description": "The identifier for the entity that executed the report. For OnDemand executions, it is the email id. For Scheduled executions, it is the constant value - System.",
          "type": "string"
        },
        "submittedTime": {
          "description": "The time when report was queued to be executed.",
          "type": "string",
          "format": "date-time"
        },
        "processingStartTime": {
          "description": "The time when report was picked up to be executed.",
          "type": "string",
          "format": "date-time"
        },
        "processingEndTime": {
          "description": "The time when report execution finished.",
          "type": "string",
          "format": "date-time"
        },
        "fileName": {
          "description": "The name of the file report got written to.",
          "type": "string"
        },
        "reportSettings": {
          "$ref": "#/definitions/CommonReportProperties"
        }
      }
    },
    "DimensionsListResult": {
      "description": "Result of listing dimensions. It contains a list of available dimensions.",
      "type": "object",
      "properties": {
        "value": {
          "description": "The list of dimensions.",
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/Dimension"
          }
        }
      }
    },
    "Dimension": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/DimensionProperties",
          "title": "Dimension properties"
        }
      }
    },
    "DimensionProperties": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "total": {
          "format": "int32",
          "type": "integer"
        },
        "category": {
          "type": "string"
        },
        "usageStart": {
          "format": "date-time",
          "type": "string"
        },
        "usageEnd": {
          "format": "date-time",
          "type": "string"
        },
        "nextLink": {
          "type": "string"
        }
      }
    },
    "QueryResult": {
      "description": "Result of query. It contains all columns listed under groupings and aggregation.",
      "type": "object",
      "properties": {
        "value": {
          "description": "The list of usage data.",
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/Query"
          }
        }
      }
    },
    "Query": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/QueryProperties",
          "title": "Query properties"
        }
      }
    },
    "QueryProperties": {
      "type": "object",
      "properties": {
        "nextLink": {
          "type": "string"
        },
        "columns": {
          "description": "Array of columns",
          "type": "array",
          "items": {
            "$ref": "#/definitions/QueryColumn"
          }
        },
        "rows": {
          "type": "array",
          "items": {
            "type": "array",
            "items": {}
          }
        }
      }
    },
    "QueryColumn": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "ConnectorDefinitionListResult": {
      "description": "Result of listing connector definitions. It contains a list of available connector definitions in the scope provided.",
      "properties": {
        "value": {
          "description": "The list of connector definitions.",
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/ConnectorDefinition"
          }
        }
      }
    },
    "ConnectorDefinition": {
      "type": "object",
      "description": "The Connector model definition",
      "properties": {
        "kind": {
          "type": "string",
          "description": "Connector kind (eg aws)"
        },
        "id": {
          "type": "string",
          "readOnly": true,
          "description": "Connector id"
        },
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "Connector name"
        },
        "type": {
          "type": "string",
          "readOnly": true,
          "description": "Connector type"
        },
        "location": {
          "type": "string",
          "x-ms-mutability": [
            "read",
            "create"
           ],
          "description": "Connector location"
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
           "type": "string"
          },
          "x-ms-mutability": [
           "read",
           "create",
           "update"
          ],
          "description": "Resource tags."
         },
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ConnectorProperties",
          "description": "Connector properties"
        }
      },
      "x-ms-azure-resource": true
    },
    "ConnectorProperties": {
      "type": "object",
      "description": "The properties of a Connector",
      "properties": {
        "displayName": {
          "type": "string",
          "x-ms-mutability": [
            "read",
            "create",
            "update"
          ],
          "description": "Connector DisplayName (defaults to Name)"
        },
        "providerAccountId": {
          "type": "string",
          "x-ms-mutability": [
            "read"
          ],
          "description": "Connector providerAccountId (determined from credentials)",
          "readOnly": true
        },
        "credentialsKey": {
          "type": "string",
          "x-ms-mutability": [
            "read",
            "create",
            "update"
          ],
          "description": "Credentials authentication key (eg AWS ARN)"
        },
        "credentialsSecret": {
          "type": "string",
          "x-ms-mutability": [
            "create",
            "update"
          ],
          "description": "Credentials secret (eg AWS ExternalId)"
        },
        "reportId": {
          "type": "string",
          "x-ms-mutability": [
            "read",
            "create",
            "update"
          ],
          "description": "Identifying source report. (For AWS this is a CUR report name, defined with Daily and with Resources)"
        },
        "createdOn": {
          "format": "date-time",
          "type": "string",
          "x-ms-mutability": [
            "read"
          ],
          "description": "Connector definition creation datetime",
          "readOnly": true
        },
        "modifiedOn": {
          "format": "date-time",
          "type": "string",
          "x-ms-mutability": [
            "read"
          ],
          "description": "Connector last modified datetime",
          "readOnly": true
        },
        "status": {
          "enum": [
            "active",
            "error",
            "suspended"
          ],
          "x-ms-enum": {
            "name": "ConnectorStatus",
            "modelAsString": true
          },
          "type": "string",
          "x-ms-mutability": [
            "read",
            "create",
            "update"
          ],
          "description": "Connector status"
        },
        "collection": {
          "$ref": "#/definitions/ConnectorCollectionInfo",
          "description": "Collection information",
          "readOnly": true
        }
      }
    },
    "ConnectorCollectionInfo": {
      "type": "object",
      "description": "Collection and ingestion information",
      "properties": {
        "lastRun": {
          "format": "date-time",
          "type": "string",
          "x-ms-mutability": [
            "read"
          ],
          "description": "Last time the data acquisition process completed (even if no new data was found)",
          "readOnly": true
        },
        "sourceLastUpdated": {
          "format": "date-time",
          "type": "string",
          "x-ms-mutability": [
            "read"
          ],
          "description": "Source timestamp of external data currently available in Azure (eg AWS last processed CUR file timestamp)",
          "readOnly": true
        },
        "lastUpdated": {
          "format": "date-time",
          "type": "string",
          "x-ms-mutability": [
            "read"
          ],
          "description": "Last time the external data was updated into Azure",
          "readOnly": true
        },
        "error": {
          "$ref": "#/definitions/ConnectorCollectionErrorInfo",
          "description": "Error information of last collection"
        }
      }
    },
    "ConnectorCollectionErrorInfo": {
      "type": "object",
      "description": "Details of any error encountered on last collection attempt",
      "properties": {
        "errorMessage": {
          "type": "string",
          "description": "Detailed error message",
          "readOnly": true
        },
        "errorCode": {
          "type": "string",
          "description": "Short error message",
          "readOnly": true
        },
        "errorStartTime": {
          "format": "date-time",
          "type": "string",
          "description": "Time the error started occurring (Last time error occurred in lastRun)",
          "readOnly": true
        }
      }
    },
    "AlertListResult": {
      "description": "Result of listing alerts. It contains a list of available alerts in the scope provided.",
      "properties": {
        "value": {
          "description": "The list of alerts.",
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/Alert"
          }
        },
        "nextLink": {
          "type": "string",
          "description": "The URI to fetch the next page of Alerts.",
          "readOnly": true
        }
      }
    },
    "Alert": {
      "type": "object",
      "description": "The Alert model definition",
      "properties": {
        "id": {
          "type": "string",
          "readOnly": true,
          "description": "Alert id"
        },
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "Alert name"
        },
        "type": {
          "type": "string",
          "readOnly": true,
          "description": "Alert type"
        },
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/AlertProperties",
          "description": "Alert properties"
        }
      }
    },
    "AlertProperties": {
      "description": "The properties of an Alert.",
      "properties": {
        "costEntityId": {
          "description": "The id of the creating cost-entity (budget, invoice, credit).",
          "type": "string",
          "readOnly": true
        },
        "definition": {
          "description": "The definition (rule) of an Alert",
          "$ref": "#/definitions/AlertDefinition",
          "readOnly": true
        },
        "description": {
          "description": "Description of an alert.",
          "type": "string",
          "readOnly": true
        },
        "scope": {
          "description": "The scope of an alert.",
          "type": "string",
          "readOnly": true
        },
        "source": {
          "description": "The source of an Alert",
          "type": "string",
          "enum": [
            "Preset",
            "User"
          ],
          "x-ms-enum": {
            "name": "AlertSource",
            "modelAsString": true
          },
          "readOnly": true
        },
        "details": {
          "description": "Specific details of an alert - key-value dictionary.",
          "x-ms-client-flatten": true,
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
		  "readOnly": true
        },
        "creationTime": {
          "format": "date-time",
          "description": "The time when the alert was created.",
          "type": "string",
          "readOnly": true
        },
        "closeTime": {
          "format": "date-time",
          "description": "The time when the alert was closed (resolved / overridden).",
          "type": "string",
          "readOnly": true
        },
        "status": {
          "description": "The current status of the alert.",
          "type": "string",
          "enum": [
            "Active",
            "Overridden",
            "Resolved",
            "Dismissed"
          ],
          "x-ms-enum": {
            "name": "AlertStatus",
            "modelAsString": true
          }
        },
		"statusModificationTime": {
          "description": "The current status when alert status was modified.",
		  "format": "date-time",
          "type": "string",
          "readOnly": true
        },
		"modificationTime": {
          "description": "The current status when alert was modified.",
		  "format": "date-time",
          "type": "string",
          "readOnly": true
        },
		"modificationUsername": {
          "description": "The username who modified the alert.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "AlertDefinition": {
      "description": "The definition (rule) of an Alert",
      "type": "object",
	  "readOnly": true,
      "properties" : {
        "category": {
          "description": "Category of the alert.",
          "type": "string",
          "readOnly": true,
          "enum": [
            "Cost",
            "Usage",
            "Billing"
          ],
          "x-ms-enum": {
            "name": "AlertCategory",
            "modelAsString": true
          }
        },
        "type": {
          "description": "The type of cost-entity the alert is defined on.",
          "type": "string",
          "readOnly": true,
          "enum": [
            "Budget",
            "Invoice",
            "Credit"
          ],
          "x-ms-enum": {
            "name": "AlertType",
            "modelAsString": true
          }
        },
        "criteria": {
          "description": "Criteria (condition) of the alert.",
          "type": "string",
          "readOnly": true,
          "enum": [
            "CostThresholdExceeded",
            "UsageThresholdExceeded",
            "CreditThresholdReached"
          ],
          "x-ms-enum": {
            "name": "AlertCriteria",
            "modelAsString": true
          }
        }
      }
    }
  },
  "parameters": {
    "apiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "required": true,
      "type": "string",
      "description": "Version of the API to be used with the client request. The current version is 2018-08-01-preview."
    },
    "subscriptionIdParameter": {
      "name": "subscriptionId",
      "in": "path",
      "description": "Azure Subscription ID.",
      "required": true,
      "type": "string"
    },
    "resourceGroupNameParameter": {
      "name": "resourceGroupName",
      "in": "path",
      "description": "Azure Resource Group Name.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "billingAccountIdParameter": {
      "name": "billingAccountId",
      "in": "path",
      "description": "BillingAccount ID",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "departmentIdParameter": {
      "name": "departmentId",
      "in": "path",
      "description": "Department ID",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
	"managementGroupIdParameter": {
      "name": "managementGroupId",
      "in": "path",
      "description": "Management Group ID",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
	"enrollmentAccountIdParameter": {
      "name": "enrollmentAccountId",
      "in": "path",
      "description": "Enrollment Account Id",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "reportNameParameter": {
      "name": "reportName",
      "in": "path",
      "description": "Report Name.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "connectorNameParameter": {
      "name": "connectorName",
      "in": "path",
      "description": "Connector Name.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "alertIdParameter": {
      "name": "alertId",
      "in": "path",
      "description": "Alert ID.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    }
  }
}