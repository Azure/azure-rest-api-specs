{
  "swagger": "2.0",
  "info": {
    "title": "HyperscaleCitusManagementClient",
    "description": "The Microsoft Azure management API provides create, read, update, and delete functionality for Cosmos DB for PostgreSQL resources including clusters, servers, databases, firewall rules, VNET rules, security alert policies, log files and configurations.",
    "version": "2022-11-08"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Azure Active Directory OAuth2 Flow",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "paths": {
    "/subscriptions/{subscriptionId}/providers/Microsoft.DBForPostgreSql/serverGroupsv2": {
      "get": {
        "tags": [
          "Clusters"
        ],
        "operationId": "Clusters_List",
        "x-ms-examples": {
          "List all the clusters": {
            "$ref": "./examples/ClusterList.json"
          }
        },
        "description": "List all the clusters in a given subscription.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ClusterListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBForPostgreSql/serverGroupsv2": {
      "get": {
        "tags": [
          "Clusters"
        ],
        "operationId": "Clusters_ListByResourceGroup",
        "x-ms-examples": {
          "List the clusters by resource group": {
            "$ref": "./examples/ClusterListByResourceGroup.json"
          }
        },
        "description": "List all the clusters in a given resource group.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ClusterListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBForPostgreSql/serverGroupsv2/{clusterName}": {
      "put": {
        "description": "Creates a new cluster with servers.",
        "tags": [
          "Clusters"
        ],
        "operationId": "Clusters_CreateOrUpdate",
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "Create a new cluster": {
            "$ref": "./examples/ClusterCreate.json"
          },
          "Create a new cluster as a point in time restore": {
            "$ref": "./examples/ClusterCreatePITR.json"
          },
          "Create a new cluster as a read replica": {
            "$ref": "./examples/ClusterCreateReadReplica.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ClusterNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Cluster"
            },
            "description": "The required parameters for creating or updating a cluster."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ClusterResponse"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/ClusterResponse"
            }
          },
          "202": {
            "description": "Accepted"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      },
      "get": {
        "description": "Gets information about a cluster.",
        "tags": [
          "Clusters"
        ],
        "operationId": "Clusters_Get",
        "x-ms-examples": {
          "Get the cluster": {
            "$ref": "./examples/ClusterGet.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ClusterNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ClusterResponse"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      },
      "delete": {
        "description": "Deletes a cluster together with servers in it.",
        "tags": [
          "Clusters"
        ],
        "operationId": "Clusters_Delete",
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "Delete the cluster": {
            "$ref": "./examples/ClusterDelete.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ClusterNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "202": {
            "description": "Accepted"
          },
          "204": {
            "description": "NoContent"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      },
      "patch": {
        "description": "Updates an existing cluster. The request body can contain one to many of the properties present in the normal cluster definition.",
        "tags": [
          "Clusters"
        ],
        "operationId": "Clusters_Update",
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "Update the cluster": {
            "$ref": "./examples/ClusterUpdate.json"
          },
          "Scale compute": {
            "$ref": "./examples/ClusterScaleCompute.json"
          },
          "Scale storage": {
            "$ref": "./examples/ClusterScaleStorage.json"
          },
          "Add new worker nodes": {
            "$ref": "./examples/ClusterAddNode.json"
          },
          "Update customer maintenance window": {
            "$ref": "./examples/ClusterUpdateMaintenanceWindow.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ClusterNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ClusterForUpdate"
            },
            "description": "The parameters for updating a cluster."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ClusterResponse"
            }
          },
          "202": {
            "description": "Accepted"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBForPostgreSql/serverGroupsv2/{clusterName}/servers": {
      "get": {
        "description": "Lists servers of a cluster.",
        "tags": [
          "Servers"
        ],
        "operationId": "Servers_ListByCluster",
        "x-ms-examples": {
          "List servers of the cluster": {
            "$ref": "./examples/ServerListByCluster.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ClusterNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ClusterServerListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": null
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBForPostgreSql/serverGroupsv2/{clusterName}/servers/{serverName}": {
      "get": {
        "description": "Gets information about a server in cluster.",
        "tags": [
          "Servers"
        ],
        "operationId": "Servers_Get",
        "x-ms-examples": {
          "Get the server of cluster": {
            "$ref": "./examples/ServerGet.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ClusterNameParameter"
          },
          {
            "$ref": "#/parameters/ServerNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ClusterServer"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBForPostgreSql/serverGroupsv2/{clusterName}/servers/{serverName}/configurations": {
      "get": {
        "description": "List all the configurations of a server in cluster.",
        "tags": [
          "Configurations"
        ],
        "operationId": "Configurations_ListByServer",
        "x-ms-examples": {
          "List configurations of the server that in the cluster": {
            "$ref": "./examples/ConfigurationListByServer.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ClusterNameParameter"
          },
          {
            "$ref": "#/parameters/ServerNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ServerConfigurationListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBForPostgreSql/serverGroupsv2/{clusterName}/configurations": {
      "get": {
        "description": "List all the configurations of a cluster.",
        "tags": [
          "Configurations"
        ],
        "operationId": "Configurations_ListByCluster",
        "x-ms-examples": {
          "List configurations of the cluster": {
            "$ref": "./examples/ConfigurationListByCluster.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ClusterNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ClusterConfigurationListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBForPostgreSql/serverGroupsv2/{clusterName}/configurations/{configurationName}/coordinator": {
      "put": {
        "description": "Updates configuration of coordinator in a cluster",
        "tags": [
          "Configurations"
        ],
        "operationId": "Configurations_Update",
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "Update single configuration of the cluster   ": {
            "$ref": "./examples/ConfigurationUpdateCoordinator.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ClusterNameParameter"
          },
          {
            "$ref": "#/parameters/ConfigurationNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ServerConfigurationRequest"
            },
            "description": "The required parameters for updating a cluster configuration."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ServerConfiguration"
            }
          },
          "202": {
            "description": "Accepted"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      },
      "get": {
        "description": "Gets information of a coordinator configuration.",
        "tags": [
          "Configurations"
        ],
        "operationId": "Configuration_Get_Coordinator",
        "x-ms-examples": {
          "Get single configuration of the cluster": {
            "$ref": "./examples/ConfigurationGetCoordinator.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ClusterNameParameter"
          },
          {
            "$ref": "#/parameters/ConfigurationNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ServerConfiguration"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBForPostgreSql/serverGroupsv2/{clusterName}/configurations/{configurationName}/node": {
      "put": {
        "description": "Updates configuration of nodes in a cluster",
        "tags": [
          "Configurations"
        ],
        "operationId": "Configurations_Update_Node",
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "Update single configuration of the cluster   ": {
            "$ref": "./examples/ConfigurationUpdateNode.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ClusterNameParameter"
          },
          {
            "$ref": "#/parameters/ConfigurationNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ServerConfigurationRequest"
            },
            "description": "The required parameters for updating a cluster configuration."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ServerConfiguration"
            }
          },
          "202": {
            "description": "Accepted"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      },
      "get": {
        "description": "Gets information of a node configuration.",
        "tags": [
          "Configurations"
        ],
        "operationId": "Configuration_Get_Node",
        "x-ms-examples": {
          "Get single configuration of the cluster": {
            "$ref": "./examples/ConfigurationGetNode.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ClusterNameParameter"
          },
          {
            "$ref": "#/parameters/ConfigurationNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ServerConfiguration"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBForPostgreSql/serverGroupsv2/{clusterName}/firewallRules/{firewallRuleName}": {
      "put": {
        "description": "Creates a new firewall rule or updates an existing firewall rule.",
        "tags": [
          "FirewallRules"
        ],
        "operationId": "FirewallRules_CreateOrUpdate",
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "Create a firewall rule of the cluster": {
            "$ref": "./examples/FirewallRuleCreate.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ClusterNameParameter"
          },
          {
            "$ref": "#/parameters/FirewallRuleNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FirewallRule"
            },
            "description": "The required parameters for creating or updating a firewall rule."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/FirewallRule"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/FirewallRule"
            }
          },
          "202": {
            "description": "Accepted"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      },
      "delete": {
        "description": "Deletes a cluster firewall rule.",
        "tags": [
          "FirewallRules"
        ],
        "operationId": "FirewallRules_Delete",
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "Delete the firewall rule of the cluster": {
            "$ref": "./examples/FirewallRuleDelete.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ClusterNameParameter"
          },
          {
            "$ref": "#/parameters/FirewallRuleNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "202": {
            "description": "Accepted"
          },
          "204": {
            "description": "NoContent"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      },
      "get": {
        "description": "Gets information about a cluster firewall rule.",
        "tags": [
          "FirewallRules"
        ],
        "operationId": "FirewallRules_Get",
        "x-ms-examples": {
          "Get the firewall rule of the cluster": {
            "$ref": "./examples/FirewallRuleGet.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ClusterNameParameter"
          },
          {
            "$ref": "#/parameters/FirewallRuleNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/FirewallRule"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBForPostgreSql/serverGroupsv2/{clusterName}/firewallRules": {
      "get": {
        "description": "List all the firewall rules in a given cluster.",
        "tags": [
          "FirewallRules"
        ],
        "operationId": "FirewallRules_ListByCluster",
        "x-ms-examples": {
          "List firewall rules of the cluster": {
            "$ref": "./examples/FirewallRuleListByCluster.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ClusterNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/FirewallRuleListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": null
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBForPostgreSql/serverGroupsv2/{clusterName}/roles/{roleName}": {
      "put": {
        "tags": [
          "Roles"
        ],
        "operationId": "Roles_Create",
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "RoleCreate": {
            "$ref": "./examples/RoleCreate.json"
          }
        },
        "description": "Creates a new role or updates an existing role.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ClusterNameParameter"
          },
          {
            "$ref": "#/parameters/RoleNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Role"
            },
            "description": "The required parameters for creating or updating a role."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Role"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/Role"
            }
          },
          "202": {
            "description": "Accepted"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Roles"
        ],
        "operationId": "Roles_Delete",
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "RoleDelete": {
            "$ref": "./examples/RoleDelete.json"
          }
        },
        "description": "Deletes a cluster role.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ClusterNameParameter"
          },
          {
            "$ref": "#/parameters/RoleNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "202": {
            "description": "Accepted"
          },
          "204": {
            "description": "NoContent"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBForPostgreSql/serverGroupsv2/{clusterName}/roles": {
      "get": {
        "tags": [
          "Roles"
        ],
        "operationId": "Roles_ListByCluster",
        "x-ms-examples": {
          "RoleList": {
            "$ref": "./examples/RoleListByCluster.json"
          }
        },
        "description": "List all the roles in a given cluster.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ClusterNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RoleListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": null
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBForPostgreSql/serverGroupsv2/{clusterName}/restart": {
      "post": {
        "description": "Restarts the cluster.",
        "tags": [
          "ClusterOperations"
        ],
        "operationId": "Cluster_Restart",
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "Restart all servers in the cluster": {
            "$ref": "./examples/ClusterRestart.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ClusterNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "202": {
            "description": "Accepted"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBForPostgreSql/serverGroupsv2/{clusterName}/start": {
      "post": {
        "description": "Starts the cluster.",
        "tags": [
          "ClusterOperations"
        ],
        "operationId": "Cluster_Start",
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "Start all servers in the cluster": {
            "$ref": "./examples/ClusterStart.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ClusterNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "202": {
            "description": "Accepted"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBForPostgreSql/serverGroupsv2/{clusterName}/stop": {
      "post": {
        "description": "Stops the cluster.",
        "tags": [
          "ClusterOperations"
        ],
        "operationId": "Cluster_Stop",
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "Stop all servers in the cluster": {
            "$ref": "./examples/ClusterStop.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ClusterNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "202": {
            "description": "Accepted"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBForPostgreSql/serverGroupsv2/{clusterName}/promote": {
      "post": {
        "description": "Promote the read replica cluster.",
        "tags": [
          "ClusterOperations"
        ],
        "operationId": "Cluster_PromoteReadReplica",
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "Promote the read replica": {
            "$ref": "./examples/ClusterPromoteReadReplica.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ClusterNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "202": {
            "description": "Accepted"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.DBForPostgreSql/checkNameAvailability": {
      "post": {
        "description": "Check the availability of name for resource",
        "tags": [
          "Clusters"
        ],
        "operationId": "Clusters_CheckNameAvailability",
        "x-ms-examples": {
          "Check name availability": {
            "$ref": "./examples/CheckNameAvailability.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "nameAvailabilityRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NameAvailabilityRequest"
            },
            "description": "The required parameters for checking if resource name is available."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/NameAvailability"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/providers/Microsoft.DBForPostgreSql/operations": {
      "get": {
        "description": "Lists all of the available REST API operations.",
        "tags": [
          "Operations"
        ],
        "operationId": "Operations_List",
        "x-ms-examples": {
          "List all available operations": {
            "$ref": "./examples/OperationList.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/OperationListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": null
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBForPostgreSql/serverGroupsv2/{clusterName}/privateEndpointConnections": {
      "get": {
        "description": "Gets list of private endpoint connections on a cluster.",
        "tags": [
          "PrivateEndpointConnections"
        ],
        "operationId": "PrivateEndpointConnections_ListByCluster",
        "x-ms-examples": {
          "Gets list of private endpoint connections on a cluster.": {
            "$ref": "./examples/PrivateEndpointConnectionsListByCluster.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ClusterNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved private endpoint connections.",
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnectionListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": null
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBForPostgreSql/serverGroupsv2/{clusterName}/privateEndpointConnections/{privateEndpointConnectionName}": {
      "get": {
        "description": "Gets private endpoint connection.",
        "tags": [
          "PrivateEndpointConnections"
        ],
        "operationId": "PrivateEndpointConnections_Get",
        "x-ms-examples": {
          "Gets private endpoint connection.": {
            "$ref": "./examples/PrivateEndpointConnectionsGet.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ClusterNameParameter"
          },
          {
            "$ref": "#/parameters/PrivateEndpointConnectionNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved a specified private endpoint connection.",
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": null
        }
      },
      "put": {
        "description": "Approve or reject a private endpoint connection with a given name.",
        "tags": [
          "PrivateEndpointConnections"
        ],
        "operationId": "PrivateEndpointConnections_CreateOrUpdate",
        "x-ms-examples": {
          "Approve or reject a private endpoint connection with a given name": {
            "$ref": "./examples/PrivateEndpointConnectionCreateOrUpdate.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ClusterNameParameter"
          },
          {
            "$ref": "#/parameters/PrivateEndpointConnectionNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnectionRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully approved or rejected private endpoint connection.",
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnection"
            }
          },
          "202": {
            "description": "Accepted"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": null
        }
      },
      "delete": {
        "description": "Deletes a private endpoint connection with a given name.",
        "tags": [
          "PrivateEndpointConnections"
        ],
        "operationId": "PrivateEndpointConnections_Delete",
        "x-ms-examples": {
          "Deletes a private endpoint connection with a given name.": {
            "$ref": "./examples/PrivateEndpointConnectionsDelete.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ClusterNameParameter"
          },
          {
            "$ref": "#/parameters/PrivateEndpointConnectionNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted private endpoint connection."
          },
          "202": {
            "description": "Accepted"
          },
          "204": {
            "description": "Private endpoint connection does not exist."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": null
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBForPostgreSql/serverGroupsv2/{clusterName}/privateLinkResources": {
      "get": {
        "description": "Gets the private link resources for cluster.",
        "tags": [
          "PrivateLinkResources"
        ],
        "operationId": "PrivateLinkResources_ListByCluster",
        "x-ms-examples": {
          "Gets the private link resources for cluster.": {
            "$ref": "./examples/PrivateLinkResourceListByCluster.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ClusterNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved private link resources.",
            "schema": {
              "$ref": "#/definitions/PrivateLinkResourceListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": null
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBForPostgreSql/serverGroupsv2/{clusterName}/privateLinkResources/{groupName}": {
      "get": {
        "description": "Gets a private link resource for cluster.",
        "tags": [
          "PrivateLinkResources"
        ],
        "operationId": "PrivateLinkResources_Get",
        "x-ms-examples": {
          "Gets a private link resource for cluster.": {
            "$ref": "./examples/PrivateLinkResourcesGet.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ClusterNameParameter"
          },
          {
            "$ref": "#/parameters/GroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved private link resources.",
            "schema": {
              "$ref": "#/definitions/PrivateLinkResource"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": null
        }
      }
    }
  },
  "definitions": {
    "ServerRole": {
      "type": "string",
      "description": "The role of a server.",
      "enum": [
        "Coordinator",
        "Worker"
      ],
      "x-ms-enum": {
        "name": "ServerRole",
        "modelAsString": true
      }
    },
    "ServerProperties": {
      "description": "The properties of a server.",
      "properties": {
        "serverEdition": {
          "type": "string",
          "description": "The edition of a server"
        },
        "storageQuotaInMb": {
          "type": "integer",
          "format": "int64",
          "description": "The storage of a server in MB (max: 2097152 = 2TiB)."
        },
        "vCores": {
          "type": "integer",
          "format": "int64",
          "description": "The vCores count of a server (max: 64)."
        },
        "enableHa": {
          "type": "boolean",
          "description": "If high availability is enabled or not for the server."
        },
        "enablePublicIp": {
          "type": "boolean",
          "description": "If public IP is requested or not for a server.",
          "readOnly": true
        }
      }
    },
    "ServerNameItem": {
      "description": "The name object for a server.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of a server."
        },
        "fullyQualifiedDomainName": {
          "type": "string",
          "description": "The fully qualified domain name of a server.",
          "readOnly": true
        }
      }
    },
    "ClusterServerProperties": {
      "description": "The properties of a server in cluster.",
      "allOf": [
        {
          "$ref": "#/definitions/ServerProperties"
        }
      ],
      "properties": {
        "fullyQualifiedDomainName": {
          "type": "string",
          "description": "The fully qualified domain name of a server.",
          "readOnly": true
        },
        "role": {
          "$ref": "#/definitions/ServerRole",
          "description": "The role of server in the cluster."
        },
        "state": {
          "type": "string",
          "description": "A state of a cluster/server that is visible to user.",
          "readOnly": true
        },
        "haState": {
          "type": "string",
          "description": "A state of HA feature for the cluster.",
          "readOnly": true
        },
        "administratorLogin": {
          "type": "string",
          "description": "The administrator's login name of a servers in cluster."
        },
        "postgresqlVersion": {
          "type": "string",
          "description": "The PostgreSQL version of server."
        },
        "citusVersion": {
          "type": "string",
          "description": "The Citus version of server."
        }
      }
    },
    "ClusterServer": {
      "description": "Represents a server in a cluster.",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v1/types.json#/definitions/ProxyResource"
        }
      ],
      "properties": {
        "systemData": {
          "description": "The system metadata relating to this resource",
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/systemData"
        },
        "properties": {
          "$ref": "#/definitions/ClusterServerProperties",
          "description": "The properties of a server in a cluster.",
          "x-ms-client-flatten": true
        }
      }
    },
    "ClusterServerListResult": {
      "description": "A list of servers in a cluster.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The list of servers in a cluster.",
          "items": {
            "$ref": "#/definitions/ClusterServer"
          }
        }
      }
    },
    "ClusterForUpdate": {
      "description": "Represents a cluster for update.",
      "properties": {
        "location": {
          "type": "string",
          "description": "The location the resource resides in."
        },
        "properties": {
          "$ref": "#/definitions/ClusterPropertiesForUpdate",
          "x-ms-client-flatten": true,
          "description": "Properties of the cluster."
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Application-specific metadata in the form of key-value pairs."
        }
      }
    },
    "ClusterPropertiesForUpdate": {
      "description": "The properties used to update a cluster.",
      "properties": {
        "administratorLoginPassword": {
          "type": "string",
          "x-ms-secret": true,
          "format": "password",
          "x-ms-mutability": [
            "create",
            "update"
          ],
          "description": "The password of the administrator login."
        },
        "postgresqlVersion": {
          "type": "string",
          "description": "The PostgreSQL version of the cluster."
        },
        "citusVersion": {
          "type": "string",
          "description": "The Citus version of the cluster."
        },
        "enableShardsOnCoordinator": {
          "type": "boolean",
          "description": "If shards on coordinator is enabled or not for the cluster."
        },
        "enableHa": {
          "type": "boolean",
          "description": "If high availability is enabled or not for the cluster."
        },
        "preferredPrimaryZone": {
          "type": "string",
          "description": "Preferred primary zone for the cluster"
        },
        "coordinatorServerEdition": {
          "type": "string",
          "description": "The edition of the coordinator (default: GeneralPurpose)."
        },
        "coordinatorStorageQuotaInMb": {
          "type": "integer",
          "format": "int64",
          "description": "The storage of the coordinator in MB (max: 2097152 = 2TiB)."
        },
        "coordinatorVCores": {
          "type": "integer",
          "format": "int64",
          "description": "The vCores count of the coordinator (max: 64)."
        },
        "coordinatorEnablePublicIpAccess": {
          "type": "boolean",
          "description": "If public IP is requested or not for the coordinator.",
          "readOnly": true
        },
        "nodeServerEdition": {
          "type": "string",
          "description": "The edition of a node (default: MemoryOptimized)."
        },
        "nodeCount": {
          "type": "integer",
          "format": "int64",
          "description": "Worker node count of the cluster"
        },
        "nodeStorageQuotaInMb": {
          "type": "integer",
          "format": "int64",
          "description": "The storage of a node in MB (max: 2097152 = 2TiB)."
        },
        "nodeVCores": {
          "type": "integer",
          "format": "int64",
          "description": "The vCores count of a node (max: 64)."
        },
        "nodeEnablePublicIpAccess": {
          "type": "boolean",
          "description": "If public IP is requested or not for a node.",
          "readOnly": true
        },
        "maintenanceWindow": {
          "$ref": "#/definitions/MaintenanceWindow",
          "description": "Maintenance window of a cluster."
        }
      }
    },
    "ClusterListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ClusterResponse"
          },
          "description": "The list of clusters"
        },
        "nextLink": {
          "description": "The link used to get the next page of operations.",
          "type": "string",
          "readOnly": true
        }
      },
      "description": "A list of clusters."
    },
    "Cluster": {
      "description": "Represents a cluster for create.",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v1/types.json#/definitions/TrackedResource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/ClusterProperties",
          "x-ms-client-flatten": true,
          "description": "Properties of the cluster create."
        }
      }
    },
    "ClusterProperties": {
      "description": "The properties used to create a new cluster.",
      "properties": {
        "administratorLoginPassword": {
          "type": "string",
          "x-ms-secret": true,
          "format": "password",
          "x-ms-mutability": [
            "create",
            "update"
          ],
          "description": "The password of the administrator login."
        },
        "postgresqlVersion": {
          "type": "string",
          "description": "The PostgreSQL version of cluster."
        },
        "citusVersion": {
          "type": "string",
          "description": "The Citus version of cluster."
        },
        "enableShardsOnCoordinator": {
          "type": "boolean",
          "description": "If shards on coordinator is enabled or not for the cluster."
        },
        "earliestRestoreTime": {
          "type": "string",
          "format": "date-time",
          "description": "The earliest restore point time (ISO8601 format) for the cluster.",
          "readOnly": true
        },
        "enableHa": {
          "type": "boolean",
          "description": "If high availability is enabled or not for the cluster."
        },
        "preferredPrimaryZone": {
          "type": "string",
          "description": "Preferred primary zone for the cluster"
        },
        "coordinatorServerEdition": {
          "type": "string",
          "description": "The edition of the coordinator (default: GeneralPurpose)."
        },
        "coordinatorStorageQuotaInMb": {
          "type": "integer",
          "format": "int64",
          "description": "The storage of the coordinator in MB (max: 2097152 = 2TiB)."
        },
        "coordinatorVCores": {
          "type": "integer",
          "format": "int64",
          "description": "The vCores count of the coordinator (max: 64)."
        },
        "coordinatorEnablePublicIpAccess": {
          "type": "boolean",
          "description": "If public IP is requested or not for the coordinator.",
          "readOnly": true
        },
        "nodeServerEdition": {
          "type": "string",
          "description": "The edition of a node (default: MemoryOptimized)."
        },
        "nodeCount": {
          "type": "integer",
          "format": "int64",
          "description": "Worker node count of the cluster"
        },
        "nodeStorageQuotaInMb": {
          "type": "integer",
          "format": "int64",
          "description": "The storage of a node in MB (max: 2097152 = 2TiB)."
        },
        "nodeVCores": {
          "type": "integer",
          "format": "int64",
          "description": "The vCores count of a node (max: 64)."
        },
        "nodeEnablePublicIpAccess": {
          "type": "boolean",
          "description": "If public IP is requested or not for a node.",
          "readOnly": true
        },
        "maintenanceWindow": {
          "$ref": "#/definitions/MaintenanceWindow",
          "description": "Maintenance window of a cluster."
        },
        "sourceResourceId": {
          "type": "string",
          "description": "The source resource id to restore from. It's required for 'PointInTimeRestore' or 'ReadReplica' operations",
          "x-ms-mutability": [
            "create"
          ]
        },
        "sourceLocation": {
          "type": "string",
          "description": "The source cluster location to restore from. It's required for 'PointInTimeRestore' or 'ReadReplica' operations",
          "x-ms-mutability": [
            "create"
          ]
        },
        "pointInTimeUTC": {
          "type": "string",
          "format": "date-time",
          "description": "Restore point creation time (ISO8601 format), specifying the time to restore from. It's required for'PointInTimeRestore' operation",
          "x-ms-mutability": [
            "create"
          ]
        }
      }
    },
    "ClusterResponse": {
      "description": "Represents a cluster in response body.",
      "properties": {
        "systemData": {
          "description": "The system metadata relating to this resource",
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/systemData"
        },
        "properties": {
          "$ref": "#/definitions/ClusterResponseProperties",
          "x-ms-client-flatten": true,
          "description": "Properties of the cluster response body."
        }
      }
    },
    "ClusterResponseProperties": {
      "description": "Properties of the cluster response body.",
      "properties": {
        "provisioningState":{
          "type": "string",
          "description": "Provisioning state of the cluster",
          "readOnly": true
        },
        "state": {
          "type": "string",
          "description": "A state of a cluster/server that is visible to user.",
          "readOnly": true
        },
        "administratorLogin": {
          "type": "string",
          "description": "Administrator Login username for the PostgreSQL"
        },
        "postgresqlVersion": {
          "type": "string",
          "description": "The PostgreSQL version of cluster."
        },
        "citusVersion": {
          "type": "string",
          "description": "The Citus version of cluster."
        },
        "maintenanceWindow": {
          "$ref": "#/definitions/MaintenanceWindow",
          "description": "Maintenance window of a cluster."
        },
        "preferredPrimaryZone": {
          "type": "string",
          "description": "Preferred primary zone for the cluster"
        },
        "enableShardsOnCoordinator": {
          "type": "boolean",
          "description": "If shards on coordinator is enabled or not for the cluster."
        },
        "enableHa": {
          "type": "boolean",
          "description": "If high availability is enabled or not for the server."
        },
        "coordinatorServerEdition": {
          "type": "string",
          "description": "The edition of a coordinator server (default: GeneralPurpose)."
        },
        "coordinatorStorageQuotaInMb": {
          "type": "integer",
          "format": "int64",
          "description": "The storage of a server in MB (max: 2097152 = 2TiB)."
        },
        "coordinatorVCores": {
          "type": "integer",
          "format": "int64",
          "description": "The vCores count of a server (max: 64)."
        },
        "coordinatorEnablePublicIpAccess": {
          "type": "boolean",
          "description": "If public IP is requested or not for a server.",
          "readOnly": true
        },
        "nodeServerEdition": {
          "type": "string",
          "description": "The edition of a node server (default: MemoryOptimized)."
        },
        "nodeCount": {
          "type": "integer",
          "format": "int64",
          "description": "Worker node count of the cluster"
        },
        "nodeStorageQuotaInMb": {
          "type": "integer",
          "format": "int64",
          "description": "The storage of a server in MB (max: 2097152 = 2TiB)."
        },
        "nodeVCores": {
          "type": "integer",
          "format": "int64",
          "description": "The vCores count of a server (max: 64)."
        },
        "nodeEnablePublicIpAccess": {
          "type": "boolean",
          "description": "If public IP is requested or not for a server.",
          "readOnly": true
        },
        "serverNames": {
          "type": "array",
          "description": "The list of server names in the cluster",
          "items": {
            "$ref": "#/definitions/ServerNameItem"
          },
          "x-ms-identifiers": [
            "name"
          ],
          "readOnly": true,
          "uniqueItems": true
        },
        "sourceCluster": {
          "type": "string",
          "description": "The source cluster id for read replica clusters.",
          "readOnly": true
        },
        "readReplicas": {
          "type": "array",
          "description": "The array of read replica clusters.",
          "items": {
            "type": "string"
          },
          "readOnly": true,
          "uniqueItems": true
        },
        "earliestRestoreTime": {
          "type": "string",
          "format": "date-time",
          "description": "The earliest restore point time (ISO8601 format) for the cluster.",
          "readOnly": true
        },
        "privateEndpointConnections": {
          "description": "The private endpoint connections for a cluster.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PrivateEndpointConnection"
          },
          "readOnly": true
        }
      }
    },
    "MaintenanceWindow": {
      "type": "object",
      "description": "Maintenance window of a cluster.",
      "properties": {
        "customWindow": {
          "type": "string",
          "description": "indicates whether custom window is enabled or disabled"
        },
        "startHour": {
          "type": "integer",
          "format": "int32",
          "description": "start hour for maintenance window"
        },
        "startMinute": {
          "type": "integer",
          "format": "int32",
          "description": "start minute for maintenance window"
        },
        "dayOfWeek": {
          "type": "integer",
          "format": "int32",
          "description": "day of week for maintenance window"
        }
      }
    },
    "ClusterConfigurationProperties": {
      "description": "The properties of cluster configuration.",
      "properties": {
        "description": {
          "type": "string",
          "description": "Description of the configuration.",
          "readOnly": true
        },
        "dataType": {
          "type": "string",
          "description": "Data type of the configuration.",
          "enum": [
            "Boolean",
            "Numeric",
            "Integer",
            "Enumeration"
          ],
          "x-ms-enum": {
            "name": "ConfigurationDataType",
            "modelAsString": true
          },
          "readOnly": true
        },
        "allowedValues": {
          "type": "string",
          "description": "Allowed values of the configuration.",
          "readOnly": true
        },
        "requiresRestart": {
          "type": "boolean",
          "description": "If configuration change requires restart."
        },
        "serverRoleGroupConfigurations": {
          "type": "array",
          "description": "The list of server role group configuration values.",
          "items": {
            "$ref": "#/definitions/ServerRoleGroupConfiguration"
          },
          "x-ms-identifiers": [],
          "uniqueItems": true
        }
      },
      "required": [
        "serverRoleGroupConfigurations"
      ]
    },
    "ClusterConfiguration": {
      "description": "Represents the configuration list of server role groups in a cluster.",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v1/types.json#/definitions/ProxyResource"
        }
      ],
      "properties": {
        "systemData": {
          "description": "The system metadata relating to this resource",
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/systemData"
        },
        "properties": {
          "$ref": "#/definitions/ClusterConfigurationProperties",
          "description": "The properties of cluster configuration.",
          "x-ms-client-flatten": true
        }
      }
    },
    "ServerRoleGroupConfiguration": {
      "description": "Represents server role group configuration value.",
      "properties": {
        "role": {
          "$ref": "#/definitions/ServerRole",
          "description": "The role of servers in the server role group."
        },
        "value": {
          "type": "string",
          "description": "Value of the configuration."
        },
        "defaultValue": {
          "type": "string",
          "description": "Default value of the configuration.",
          "readOnly": true
        },
        "source": {
          "type": "string",
          "description": "Source of the configuration.",
          "readOnly": true
        }
      },
      "required": [
        "role",
        "value"
      ]
    },
    "ClusterConfigurationListResult": {
      "description": "A list of cluster configurations.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The list of cluster configurations.",
          "items": {
            "$ref": "#/definitions/ClusterConfiguration"
          }
        },
        "nextLink": {
          "type": "string",
          "description": "Link to retrieve next page of results.",
          "readOnly": true
        }
      }
    },
    "ServerConfigurationProperties": {
      "description": "The properties of a configuration.",
      "properties": {
        "value": {
          "type": "string",
          "description": "Value of the configuration."
        },
        "source": {
          "type": "string",
          "description": "Source of the configuration.",
          "readOnly": true
        },
        "description": {
          "type": "string",
          "description": "Description of the configuration.",
          "readOnly": true
        },
        "defaultValue": {
          "type": "string",
          "description": "Default value of the configuration.",
          "readOnly": true
        },
        "dataType": {
          "type": "string",
          "description": "Data type of the configuration.",
          "enum": [
            "Boolean",
            "Numeric",
            "Integer",
            "Enumeration"
          ],
          "x-ms-enum": {
            "name": "ConfigurationDataType",
            "modelAsString": true
          },
          "readOnly": true
        },
        "allowedValues": {
          "type": "string",
          "description": "Allowed values of the configuration.",
          "readOnly": true
        },
        "requiresRestart": {
          "type": "boolean",
          "description": "If configuration change requires restart."
        }
      },
      "required": [
        "value"
      ]
    },
    "ServerConfigurationRequest": {
      "description": "Represents a configuration.",
      "properties": {
        "value":{
          "description": "Represents the value of a configuration.",
          "type": "string"
        }
      }
    },
    "ServerConfiguration": {
      "description": "Represents a configuration.",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v1/types.json#/definitions/ProxyResource"
        }
      ],
      "properties": {
        "systemData": {
          "description": "The system metadata relating to this resource",
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/systemData"
        },
        "properties": {
          "$ref": "#/definitions/ServerConfigurationProperties",
          "description": "The properties of a configuration.",
          "x-ms-client-flatten": true
        }
      }
    },
    "ServerConfigurationListResult": {
      "description": "A list of server configurations.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The list of server configurations.",
          "items": {
            "$ref": "#/definitions/ServerConfiguration"
          }
        },
        "nextLink": {
          "type": "string",
          "description": "Link to retrieve next page of results.",
          "readOnly": true
        }
      }
    },
    "FirewallRuleProperties": {
      "description": "The properties of a cluster firewall rule.",
      "properties": {
        "startIpAddress": {
          "type": "string",
          "description": "The start IP address of the cluster firewall rule. Must be IPv4 format.",
          "pattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$"
        },
        "endIpAddress": {
          "type": "string",
          "description": "The end IP address of the cluster firewall rule. Must be IPv4 format.",
          "pattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$"
        }
      },
      "required": [
        "startIpAddress",
        "endIpAddress"
      ]
    },
    "FirewallRule": {
      "description": "Represents a cluster firewall rule.",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v1/types.json#/definitions/ProxyResource"
        }
      ],
      "properties": {
        "systemData": {
          "description": "The system metadata relating to this resource",
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/systemData"
        },
        "properties": {
          "$ref": "#/definitions/FirewallRuleProperties",
          "x-ms-client-flatten": true,
          "description": "The properties of a firewall rule."
        }
      },
      "required": [
        "properties"
      ]
    },
    "FirewallRuleListResult": {
      "description": "A list of firewall rules.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The list of firewall rules in a cluster.",
          "items": {
            "$ref": "#/definitions/FirewallRule"
          }
        }
      }
    },
    "RoleProperties": {
      "properties": {
        "password": {
          "type": "string",
          "x-ms-secret": true,
          "format": "password",
          "x-ms-mutability": [
            "create",
            "update"
          ],
          "description": "The password of the cluster role."
        }
      },
      "required": [
        "password"
      ],
      "description": "The properties of a cluster role."
    },
    "Role": {
      "properties": {
        "systemData": {
          "description": "The system metadata relating to this resource",
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/systemData"
        },
        "properties": {
          "$ref": "#/definitions/RoleProperties",
          "x-ms-client-flatten": true,
          "description": "The properties of a role."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v1/types.json#/definitions/ProxyResource"
        }
      ],
      "description": "Represents a cluster role."
    },
    "RoleListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Role"
          },
          "description": "The list of roles in a cluster."
        }
      },
      "description": "A list of roles."
    },
    "OperationDisplay": {
      "description": "Display metadata associated with the operation.",
      "properties": {
        "provider": {
          "type": "string",
          "description": "Operation resource provider name.",
          "readOnly": true
        },
        "resource": {
          "type": "string",
          "description": "Resource on which the operation is performed.",
          "readOnly": true
        },
        "operation": {
          "type": "string",
          "description": "Localized friendly name for the operation.",
          "readOnly": true
        },
        "description": {
          "type": "string",
          "description": "Operation description.",
          "readOnly": true
        }
      }
    },
    "Operation": {
      "description": "REST API operation definition.",
      "properties": {
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "The name of the operation being performed on this particular object."
        },
        "display": {
          "$ref": "#/definitions/OperationDisplay",
          "readOnly": true,
          "description": "The localized display information for this particular operation or action."
        },
        "isDataAction": {
          "description": "Indicates whether the operation is a data action",
          "type": "boolean"
        },
        "origin": {
          "type": "string",
          "readOnly": true,
          "description": "The intended executor of the operation.",
          "enum": [
            "NotSpecified",
            "user",
            "system"
          ],
          "x-ms-enum": {
            "name": "OperationOrigin",
            "modelAsString": true
          }
        },
        "properties": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          },
          "readOnly": true,
          "x-ms-client-flatten": false,
          "description": "Additional descriptions for the operation."
        }
      }
    },
    "OperationListResult": {
      "description": "A list of resource provider operations.",
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of available operation details",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/Operation"
          },
          "x-ms-identifiers": [
            "name"
          ]
        },
        "nextLink": {
          "description": "URL client should use to fetch the next page (per server side paging).\r\nIt's null for now, added for future use.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "NameAvailabilityRequest": {
      "description": "Request from client to check resource name availability.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Resource name to verify."
        },
        "type": {
          "type": "string",
          "enum": [
            "Microsoft.DBforPostgreSQL/serverGroupsv2"
          ],
          "description": "Resource type used for verification.",
          "x-ms-enum": {
            "name": "CheckNameAvailabilityResourceType",
            "modelAsString": false
          }
        }
      },
      "required": [
        "name",
        "type"
      ]
    },
    "NameAvailability": {
      "description": "Represents a resource name availability.",
      "properties": {
        "message": {
          "type": "string",
          "description": "Error Message."
        },
        "nameAvailable": {
          "type": "boolean",
          "description": "Indicates whether the resource name is available."
        },
        "name": {
          "type": "string",
          "description": "name of the PostgreSQL server."
        },
        "type": {
          "type": "string",
          "description": "type of the server"
        }
      }
    },
    "PrivateEndpointProperty": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Resource id of the private endpoint."
        }
      }
    },
    "PrivateEndpointConnection": {
      "description": "A private endpoint connection",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v1/types.json#/definitions/ProxyResource"
        }
      ],
      "properties": {
        "systemData": {
          "description": "The system metadata relating to this resource",
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/systemData"
        },
        "properties": {
          "$ref": "#/definitions/PrivateEndpointConnectionProperties",
          "x-ms-client-flatten": true,
          "description": "Properties of the private endpoint connection."
        }
      }
    },
    "PrivateEndpointConnectionRequest": {
      "description": "A private endpoint connection",
      "properties": {
        "properties": {
          "$ref": "#/definitions/PrivateEndpointConnectionRequestProperties",
          "x-ms-client-flatten": true,
          "description": "Properties of the private endpoint connection."
        }
      }
    },
    "PrivateEndpointConnectionListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PrivateEndpointConnection"
          },
          "description": "The list of private endpoint connections"
        },
        "nextLink": {
          "description": "Link to retrieve next page of results.",
          "type": "string",
          "readOnly": true
        }
      },
      "description": "A list of private endpoint connections."
    },
    "PrivateLinkResource": {
      "description": "A private link resource",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v1/types.json#/definitions/ProxyResource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/PrivateLinkResourceProperties",
          "description": "Properties of the private link resource."
        }
      }
    },
    "PrivateLinkResourceProperties": {
      "description": "Properties of a private link resource.",
      "properties": {
        "groupId": {
          "type": "string",
          "description": "The private link resource group id."
        },
        "memberNames": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The private link resource required member names."
        },
        "zoneNames": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The private link resource zone names."
        }
      }
    },
    "PrivateLinkResourceListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PrivateLinkResource"
          },
          "description": "The list of private link resources."
        },
        "nextLink": {
          "description": "The link used to get the next page of private link resources.",
          "type": "string",
          "readOnly": true
        }
      },
      "description": "A list of private link resources."
    },
    "PrivateEndpointConnectionRequestProperties": {
      "description": "The properties used to create a private endpoint connection",
      "properties": {
        "privateEndpoint": {
          "$ref": "#/definitions/PrivateEndpointProperty",
          "description": "Private endpoint which the connection belongs to."
        },
        "privateLinkServiceConnectionState": {
          "$ref": "#/definitions/PrivateLinkServiceConnectionStateProperty",
          "description": "Connection state of the private endpoint connection."
        }
      }
    },
    "PrivateEndpointConnectionProperties": {
      "description": "The properties in private endpoint connection",
      "properties": {
        "privateEndpoint": {
          "$ref": "#/definitions/PrivateEndpointProperty",
          "description": "Private endpoint which the connection belongs to."
        },
        "privateLinkServiceConnectionState": {
          "$ref": "#/definitions/PrivateLinkServiceConnectionStateProperty",
          "description": "Connection state of the private endpoint connection."
        },
        "provisioningState": {
          "type": "string",
          "description": "State of the private endpoint connection."
        }
      }
    },
    "PrivateLinkServiceConnectionStateProperty": {
      "type": "object",
      "properties": {
        "actionsRequired": {
          "type": "string",
          "description": "The actions required for private link service connection."
        },
        "description": {
          "type": "string",
          "description": "The private link service connection description."
        },
        "status": {
          "type": "string",
          "description": "The private link service connection status."
        }
      }
    },
    "CloudError": {
      "x-ms-external": true,
      "description": "An error response from the Batch service.",
      "properties": {
        "error": {
          "$ref": "#/definitions/CloudErrorBody",
          "description": "The error."
        }
      }
    },
    "CloudErrorBody": {
      "x-ms-external": true,
      "description": "An error response from the Batch service.",
      "properties": {
        "code": {
          "type": "string",
          "description": "An identifier for the error. Codes are invariant and are intended to be consumed programmatically."
        },
        "message": {
          "type": "string",
          "description": "A message describing the error, intended to be suitable for display in a user interface."
        },
        "target": {
          "type": "string",
          "description": "The target of the particular error. For example, the name of the property in error."
        },
        "details": {
          "type": "array",
          "description": "A list of additional details about the error.",
          "items": {
            "$ref": "#/definitions/CloudErrorBody"
          },
          "x-ms-identifiers": [
            "code"
          ]
        }
      }
    }
  },
  "parameters": {
    "ClusterNameParameter": {
      "name": "clusterGroupName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the cluster.",
      "minLength": 1,
      "maxLength": 90,
      "x-ms-parameter-location": "method"
    },
    "ServerNameParameter": {
      "name": "serverName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the server.",
      "minLength": 1,
      "maxLength": 90,
      "x-ms-parameter-location": "method"
    },
    "ConfigurationNameParameter": {
      "name": "configurationName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the cluster configuration.",
      "minLength": 1,
      "maxLength": 90,
      "x-ms-parameter-location": "method"
    },
    "FirewallRuleNameParameter": {
      "name": "firewallRuleName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the cluster firewall rule.",
      "x-ms-parameter-location": "method"
    },
    "RoleNameParameter": {
      "name": "roleName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the cluster role.",
      "x-ms-parameter-location": "method"
    },
    "PrivateEndpointConnectionNameParameter": {
      "name": "privateEndpointConnectionName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the private endpoint connection.",
      "x-ms-parameter-location": "method"
    },
    "GroupNameParameter": {
      "name": "groupName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the private link resource.",
      "x-ms-parameter-location": "method"
    }
  }
}
