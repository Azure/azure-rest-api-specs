{
  "swagger": "2.0",
  "info": {
    "title": "MariaDBManagementClient",
    "description": "The Microsoft Azure management API provides create, read, update, and delete functionality for Azure MariaDB resources including servers, databases, firewall rules, VNET rules, log files and configurations with new business model.",
    "version": "2018-06-01"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Azure Active Directory OAuth2 Flow",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "paths": {
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMariaDB/servers/{serverName}": {
      "put": {
        "tags": [
          "Servers"
        ],
        "operationId": "Servers_Create",
        "x-ms-examples": {
          "Create a new server": {
            "$ref": "./examples/ServerCreate.json"
          },
          "Create a database as a point in time restore": {
            "$ref": "./examples/ServerCreatePointInTimeRestore.json"
          },
          "Create a server as a geo restore ": {
            "$ref": "./examples/ServerCreateGeoRestoreMode.json"
          },
          "Create a replica server": {
            "$ref": "./examples/ServerCreateReplicaMode.json"
          }
        },
        "description": "Creates a new server or updates an existing server. The update action will overwrite the existing server.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServerNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ServerForCreate"
            },
            "description": "The required parameters for creating or updating a server."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Server"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/Server"
            }
          },
          "202": {
            "description": "Accepted"
          }
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "tags": [
          "Servers"
        ],
        "operationId": "Servers_Update",
        "x-ms-examples": {
          "ServerUpdate": {
            "$ref": "./examples/ServerUpdate.json"
          }
        },
        "description": "Updates an existing server. The request body can contain one to many of the properties present in the normal server definition.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServerNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ServerUpdateParameters"
            },
            "description": "The required parameters for updating a server."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Server"
            }
          },
          "202": {
            "description": "Accepted"
          }
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "tags": [
          "Servers"
        ],
        "operationId": "Servers_Delete",
        "x-ms-examples": {
          "ServerDelete": {
            "$ref": "./examples/ServerDelete.json"
          }
        },
        "description": "Deletes a server.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServerNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "202": {
            "description": "Accepted"
          },
          "204": {
            "description": "NoContent"
          }
        },
        "x-ms-long-running-operation": true
      },
      "get": {
        "tags": [
          "Servers"
        ],
        "operationId": "Servers_Get",
        "x-ms-examples": {
          "ServerGet": {
            "$ref": "./examples/ServerGet.json"
          }
        },
        "description": "Gets information about a server.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServerNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Server"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMariaDB/servers": {
      "get": {
        "tags": [
          "Servers"
        ],
        "operationId": "Servers_ListByResourceGroup",
        "x-ms-examples": {
          "ServerListByResourceGroup": {
            "$ref": "./examples/ServerListByResourceGroup.json"
          }
        },
        "description": "List all the servers in a given resource group.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ServerListResult"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": null
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.DBforMariaDB/servers": {
      "get": {
        "tags": [
          "Servers"
        ],
        "operationId": "Servers_List",
        "x-ms-examples": {
          "ServerList": {
            "$ref": "./examples/ServerList.json"
          }
        },
        "description": "List all the servers in a given subscription.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ServerListResult"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": null
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMariaDB/servers/{serverName}/restart": {
      "post": {
        "tags": [
          "ServerRestart"
        ],
        "operationId": "Servers_Restart",
        "x-ms-examples": {
          "ServerRestart": {
            "$ref": "./examples/ServerRestart.json"
          }
        },
        "description": "Restarts a server.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServerNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "202": {
            "description": "Accepted"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMariaDB/servers/{serverName}/replicas": {
      "get": {
        "tags": [
          "Replicas"
        ],
        "operationId": "Replicas_ListByServer",
        "x-ms-examples": {
          "ReplicasListByServer": {
            "$ref": "./examples/ReplicasListByServer.json"
          }
        },
        "description": "List all the replicas for a given server.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServerNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ServerListResult"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": null
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMariaDB/servers/{serverName}/firewallRules/{firewallRuleName}": {
      "put": {
        "tags": [
          "FirewallRules"
        ],
        "operationId": "FirewallRules_CreateOrUpdate",
        "x-ms-examples": {
          "FirewallRuleCreate": {
            "$ref": "./examples/FirewallRuleCreate.json"
          }
        },
        "description": "Creates a new firewall rule or updates an existing firewall rule.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServerNameParameter"
          },
          {
            "$ref": "#/parameters/FirewallRuleNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FirewallRule"
            },
            "description": "The required parameters for creating or updating a firewall rule."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/FirewallRule"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/FirewallRule"
            }
          },
          "202": {
            "description": "Accepted"
          }
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "tags": [
          "FirewallRules"
        ],
        "operationId": "FirewallRules_Delete",
        "x-ms-examples": {
          "FirewallRuleDelete": {
            "$ref": "./examples/FirewallRuleDelete.json"
          }
        },
        "description": "Deletes a server firewall rule.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServerNameParameter"
          },
          {
            "$ref": "#/parameters/FirewallRuleNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "202": {
            "description": "Accepted"
          },
          "204": {
            "description": "NoContent"
          }
        },
        "x-ms-long-running-operation": true
      },
      "get": {
        "tags": [
          "FirewallRules"
        ],
        "operationId": "FirewallRules_Get",
        "x-ms-examples": {
          "FirewallRuleGet": {
            "$ref": "./examples/FirewallRuleGet.json"
          }
        },
        "description": "Gets information about a server firewall rule.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServerNameParameter"
          },
          {
            "$ref": "#/parameters/FirewallRuleNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/FirewallRule"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMariaDB/servers/{serverName}/firewallRules": {
      "get": {
        "tags": [
          "FirewallRules"
        ],
        "operationId": "FirewallRules_ListByServer",
        "x-ms-examples": {
          "FirewallRuleList": {
            "$ref": "./examples/FirewallRuleListByServer.json"
          }
        },
        "description": "List all the firewall rules in a given server.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServerNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/FirewallRuleListResult"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": null
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMariaDB/servers/{serverName}/virtualNetworkRules/{virtualNetworkRuleName}": {
      "get": {
        "tags": [
          "VirtualNetworkRules"
        ],
        "description": "Gets a virtual network rule.",
        "operationId": "VirtualNetworkRules_Get",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServerNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/virtualNetworkRuleNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved a specified virtual network rule.",
            "schema": {
              "$ref": "#/definitions/VirtualNetworkRule"
            }
          },
          "default": {
            "description": "*** Error Responses: ***\n\n * 404 SubscriptionDoesNotHaveServer - The requested server was not found\n\n * 404 ResourceNotFound - The requested resource was not found."
          }
        },
        "x-ms-examples": {
          "Gets a virtual network rule": {
            "$ref": "./examples/VirtualNetworkRulesGet.json"
          }
        }
      },
      "put": {
        "tags": [
          "VirtualNetworkRules"
        ],
        "description": "Creates or updates an existing virtual network rule.",
        "operationId": "VirtualNetworkRules_CreateOrUpdate",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServerNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/virtualNetworkRuleNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "The requested virtual Network Rule Resource state.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VirtualNetworkRule"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully updated a virtual network rule.",
            "schema": {
              "$ref": "#/definitions/VirtualNetworkRule"
            }
          },
          "default": {
            "description": "*** Error Responses: ***\n\n * 400 InvalidResourceId - Invalid resource identifier.\n\n * 400 MismatchingSubscriptionWithUrl - The provided subscription did not match the subscription in the Url.\n\n * 400 MismatchingResourceGroupNameWithUrl - The provided resource group name did not match the name in the Url.\n\n * 400 MismatchingServerNameWithUrl - The provided server name did not match the name in the Url.\n\n * 400 NullVirtualNetworkRequest - Virtual Network Request is Null\n\n * 400 NullVirtualNetworkRequestParameters - Virtual Network Request Parameters are Null\n\n * 400 NullVirtualNetworkSubnetId - The Virtual Network Subnet Id is null\n\n * 404 SubscriptionDoesNotHaveServer - The requested server was not found\n\n * 404 VirtualNetworkRuleNotEnabled - Azure SQL Server Virtual Network Rule feature is not enabled\n\n * 404 OperationIdNotFound - The operation with Id does not exist.\n\n * 409 OperationCancelled - The operation has been cancelled by user.\n\n * 409 OperationInterrupted - The operation on the resource could not be completed because it was interrupted by another operation on the same resource.\n\n * 500 OperationTimedOut - The operation timed out and automatically rolled back. Please retry the operation."
          },
          "202": {
            "description": "Accepted"
          },
          "201": {
            "description": "Successfully created a virtual network rule.",
            "schema": {
              "$ref": "#/definitions/VirtualNetworkRule"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "Create or update a virtual network rule": {
            "$ref": "./examples/VirtualNetworkRulesCreateOrUpdate.json"
          }
        }
      },
      "delete": {
        "tags": [
          "VirtualNetworkRules"
        ],
        "description": "Deletes the virtual network rule with the given name.",
        "operationId": "VirtualNetworkRules_Delete",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServerNameParameter"
          },
          {
            "$ref": "#/parameters/virtualNetworkRuleNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted the virtual network rule."
          },
          "default": {
            "description": "*** Error Responses: ***\n\n * 400 InvalidResourceId - Invalid resource identifier.\n\n * 400 MismatchingSubscriptionWithUrl - The provided subscription did not match the subscription in the Url.\n\n * 400 MismatchingResourceGroupNameWithUrl - The provided resource group name did not match the name in the Url.\n\n * 400 MismatchingServerNameWithUrl - The provided server name did not match the name in the Url.\n\n * 400 NullVirtualNetworkRequest - Virtual Network Request is Null\n\n * 400 NullVirtualNetworkRequestParameters - Virtual Network Request Parameters are Null\n\n * 404 SubscriptionDoesNotHaveServer - The requested server was not found\n\n * 404 OperationIdNotFound - The operation with Id does not exist.\n\n * 409 OperationCancelled - The operation has been cancelled by user.\n\n * 409 OperationInterrupted - The operation on the resource could not be completed because it was interrupted by another operation on the same resource.\n\n * 500 OperationTimedOut - The operation timed out and automatically rolled back. Please retry the operation."
          },
          "202": {
            "description": "Accepted"
          },
          "204": {
            "description": "The specified virtual network rule does not exist."
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "Delete a virtual network rule": {
            "$ref": "./examples/VirtualNetworkRulesDelete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMariaDB/servers/{serverName}/virtualNetworkRules": {
      "get": {
        "tags": [
          "VirtualNetworkRules"
        ],
        "description": "Gets a list of virtual network rules in a server.",
        "operationId": "VirtualNetworkRules_ListByServer",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServerNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the list of virtual network rules.",
            "schema": {
              "$ref": "#/definitions/VirtualNetworkRuleListResult"
            }
          },
          "default": {
            "description": "*** Error Responses: ***\n\n * 404 SubscriptionDoesNotHaveServer - The requested server was not found\n\n * 404 ResourceNotFound - The requested resource was not found."
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "List virtual network rules": {
            "$ref": "./examples/VirtualNetworkRulesList.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMariaDB/servers/{serverName}/databases/{databaseName}": {
      "put": {
        "tags": [
          "Databases"
        ],
        "operationId": "Databases_CreateOrUpdate",
        "x-ms-examples": {
          "DatabaseCreate": {
            "$ref": "./examples/DatabaseCreate.json"
          }
        },
        "description": "Creates a new database or updates an existing database.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServerNameParameter"
          },
          {
            "$ref": "#/parameters/DatabaseNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Database"
            },
            "description": "The required parameters for creating or updating a database."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Database"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/Database"
            }
          },
          "202": {
            "description": "Accepted"
          }
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "tags": [
          "Databases"
        ],
        "operationId": "Databases_Delete",
        "x-ms-examples": {
          "DatabaseDelete": {
            "$ref": "./examples/DatabaseDelete.json"
          }
        },
        "description": "Deletes a database.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServerNameParameter"
          },
          {
            "$ref": "#/parameters/DatabaseNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "202": {
            "description": "Accepted"
          },
          "204": {
            "description": "NoContent"
          }
        },
        "x-ms-long-running-operation": true
      },
      "get": {
        "tags": [
          "Databases"
        ],
        "operationId": "Databases_Get",
        "x-ms-examples": {
          "DatabaseGet": {
            "$ref": "./examples/DatabaseGet.json"
          }
        },
        "description": "Gets information about a database.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServerNameParameter"
          },
          {
            "$ref": "#/parameters/DatabaseNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Database"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMariaDB/servers/{serverName}/databases": {
      "get": {
        "tags": [
          "Databases"
        ],
        "operationId": "Databases_ListByServer",
        "x-ms-examples": {
          "DatabaseList": {
            "$ref": "./examples/DatabaseListByServer.json"
          }
        },
        "description": "List all the databases in a given server.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServerNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DatabaseListResult"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": null
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMariaDB/servers/{serverName}/configurations/{configurationName}": {
      "put": {
        "tags": [
          "Configurations"
        ],
        "operationId": "Configurations_CreateOrUpdate",
        "x-ms-examples": {
          "ConfigurationCreateOrUpdate": {
            "$ref": "./examples/ConfigurationCreateOrUpdate.json"
          }
        },
        "description": "Updates a configuration of a server.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServerNameParameter"
          },
          {
            "$ref": "#/parameters/ConfigurationNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Configuration"
            },
            "description": "The required parameters for updating a server configuration."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Configuration"
            }
          },
          "202": {
            "description": "Accepted"
          }
        },
        "x-ms-long-running-operation": true
      },
      "get": {
        "tags": [
          "Configurations"
        ],
        "operationId": "Configurations_Get",
        "x-ms-examples": {
          "ConfigurationGet": {
            "$ref": "./examples/ConfigurationGet.json"
          }
        },
        "description": "Gets information about a configuration of server.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServerNameParameter"
          },
          {
            "$ref": "#/parameters/ConfigurationNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Configuration"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMariaDB/servers/{serverName}/configurations": {
      "get": {
        "tags": [
          "Configurations"
        ],
        "operationId": "Configurations_ListByServer",
        "x-ms-examples": {
          "ConfigurationList": {
            "$ref": "./examples/ConfigurationListByServer.json"
          }
        },
        "description": "List all the configurations in a given server.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServerNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ConfigurationListResult"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": null
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMariaDB/servers/{serverName}/logFiles": {
      "get": {
        "tags": [
          "LogFiles"
        ],
        "operationId": "LogFiles_ListByServer",
        "x-ms-examples": {
          "LogFileList": {
            "$ref": "./examples/LogFileListByServer.json"
          }
        },
        "description": "List all the log files in a given server.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServerNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/LogFileListResult"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": null
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.DBforMariaDB/locations/{locationName}/performanceTiers": {
      "get": {
        "tags": [
          "LocationBasedPerformanceTier"
        ],
        "operationId": "LocationBasedPerformanceTier_List",
        "x-ms-examples": {
          "PerformanceTiersList": {
            "$ref": "./examples/PerformanceTiersListByLocation.json"
          }
        },
        "description": "List all the performance tiers at specified location in a given subscription.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/LocationNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PerformanceTierListResult"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": null
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.DBforMariaDB/checkNameAvailability": {
      "post": {
        "tags": [
          "CheckNameAvailability"
        ],
        "operationId": "CheckNameAvailability_Execute",
        "x-ms-examples": {
          "NameAvailability": {
            "$ref": "./examples/CheckNameAvailability.json"
          }
        },
        "description": "Check the availability of name for resource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "nameAvailabilityRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NameAvailabilityRequest"
            },
            "description": "The required parameters for checking if resource name is available."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/NameAvailability"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMariaDB/servers/{serverName}/securityAlertPolicies/{securityAlertPolicyName}": {
      "get": {
        "tags": [
          "ServerSecurityAlertPolicies"
        ],
        "description": "Get a server's security alert policy.",
        "operationId": "ServerSecurityAlertPolicies_Get",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServerNameParameter"
          },
          {
            "name": "securityAlertPolicyName",
            "in": "path",
            "description": "The name of the security alert policy.",
            "required": true,
            "type": "string",
            "enum": [
              "Default"
            ],
            "x-ms-enum": {
              "name": "SecurityAlertPolicyName",
              "modelAsString": true
            }
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the server threat detection policy.",
            "schema": {
              "$ref": "#/definitions/ServerSecurityAlertPolicy"
            }
          },
          "default": {
            "description": "Error response describing why the operation of getting security alert policies failed."
          }
        },
        "x-ms-examples": {
          "Get a server's threat detection policy": {
            "$ref": "./examples/ServerSecurityAlertsGet.json"
          }
        }
      },
      "put": {
        "tags": [
          "ServerSecurityAlertPolicies"
        ],
        "description": "Creates or updates a threat detection policy.",
        "operationId": "ServerSecurityAlertPolicies_CreateOrUpdate",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServerNameParameter"
          },
          {
            "name": "securityAlertPolicyName",
            "in": "path",
            "description": "The name of the threat detection policy.",
            "required": true,
            "type": "string",
            "enum": [
              "Default"
            ],
            "x-ms-enum": {
              "name": "SecurityAlertPolicyName",
              "modelAsString": true
            }
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "The server security alert policy.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ServerSecurityAlertPolicy"
            }
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully updated the threat detection policy.",
            "schema": {
              "$ref": "#/definitions/ServerSecurityAlertPolicy"
            }
          },
          "default": {
            "description": "Error response describing why the operation of setting security alert policies failed."
          },
          "202": {
            "description": "Created request to set the server threat detection policy."
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "Update a server's threat detection policy with all parameters": {
            "$ref": "./examples/ServerSecurityAlertsCreateMax.json"
          },
          "Update a server's threat detection policy with minimal parameters": {
            "$ref": "./examples/ServerSecurityAlertsCreateMin.json"
          }
        }
      }
    },
    "/providers/Microsoft.DBforMariaDB/operations": {
      "get": {
        "tags": [
          "Operations"
        ],
        "operationId": "Operations_List",
        "x-ms-examples": {
          "OperationList": {
            "$ref": "./examples/OperationList.json"
          }
        },
        "description": "Lists all of the available REST API operations.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/OperationListResult"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "ServerVersion": {
      "type": "string",
      "description": "The version of a server.",
      "enum": [
        "5.6",
        "5.7"
      ],
      "x-ms-enum": {
        "name": "ServerVersion",
        "modelAsString": true
      }
    },
    "SslEnforcement": {
      "type": "string",
      "description": "Enable ssl enforcement or not when connect to server.",
      "enum": [
        "Enabled",
        "Disabled"
      ],
      "x-ms-enum": {
        "name": "SslEnforcementEnum",
        "modelAsString": false
      }
    },
    "PublicNetworkAccess": {
      "type": "string",
      "description": "Whether or not public network access is allowed for this server. Value is optional but if passed in, must be 'Enabled' or 'Disabled'",
      "enum": [
        "Enabled",
        "Disabled"
      ],
      "x-ms-enum": {
        "name": "PublicNetworkAccessEnum",
        "modelAsString": true
      }
    },
    "ServerPrivateEndpointConnection": {
      "description": "A private endpoint connection under a server",
      "type": "object",
      "properties": {
        "id": {
          "description": "Resource Id of the private endpoint connection.",
          "type": "string",
          "readOnly": true
        },
        "properties": {
          "$ref": "#/definitions/ServerPrivateEndpointConnectionProperties",
          "description": "Private endpoint connection properties",
          "readOnly": true
        }
      }
    },
    "ServerPrivateEndpointConnectionProperties": {
      "description": "Properties of a private endpoint connection.",
      "type": "object",
      "properties": {
        "privateEndpoint": {
          "$ref": "#/definitions/PrivateEndpointProperty",
          "description": "Private endpoint which the connection belongs to."
        },
        "privateLinkServiceConnectionState": {
          "$ref": "#/definitions/ServerPrivateLinkServiceConnectionStateProperty",
          "description": "Connection state of the private endpoint connection."
        },
        "provisioningState": {
          "description": "State of the private endpoint connection.",
          "enum": [
            "Approving",
            "Ready",
            "Dropping",
            "Failed",
            "Rejecting"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "PrivateEndpointProvisioningState",
            "modelAsString": true
          }
        }
      }
    },
    "PrivateEndpointProperty": {
      "type": "object",
      "properties": {
        "id": {
          "description": "Resource id of the private endpoint.",
          "type": "string"
        }
      },
      "x-ms-azure-resource": true
    },
    "ServerPrivateLinkServiceConnectionStateProperty": {
      "required": [
        "status",
        "description"
      ],
      "type": "object",
      "properties": {
        "status": {
          "description": "The private link service connection status.",
          "enum": [
            "Approved",
            "Pending",
            "Rejected",
            "Disconnected"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "PrivateLinkServiceConnectionStateStatus",
            "modelAsString": true
          }
        },
        "description": {
          "description": "The private link service connection description.",
          "type": "string"
        },
        "actionsRequired": {
          "description": "The actions required for private link service connection.",
          "enum": [
            "None"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "PrivateLinkServiceConnectionStateActionsRequire",
            "modelAsString": true
          }
        }
      }
    },
    "TrackedResource": {
      "description": "Resource properties including location and tags for track resources.",
      "properties": {
        "location": {
          "type": "string",
          "x-ms-mutability": [
            "read",
            "create"
          ],
          "description": "The location the resource resides in."
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Application-specific metadata in the form of key-value pairs."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v1/types.json#/definitions/ProxyResource"
        }
      ],
      "required": [
        "location"
      ]
    },
    "ServerProperties": {
      "properties": {
        "administratorLogin": {
          "type": "string",
          "description": "The administrator's login name of a server. Can only be specified when the server is being created (and is required for creation)."
        },
        "version": {
          "$ref": "#/definitions/ServerVersion",
          "description": "Server version."
        },
        "sslEnforcement": {
          "$ref": "#/definitions/SslEnforcement",
          "description": "Enable ssl enforcement or not when connect to server."
        },
        "userVisibleState": {
          "type": "string",
          "description": "A state of a server that is visible to user.",
          "enum": [
            "Ready",
            "Dropping",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "ServerState",
            "modelAsString": true
          }
        },
        "fullyQualifiedDomainName": {
          "type": "string",
          "description": "The fully qualified domain name of a server."
        },
        "earliestRestoreDate": {
          "type": "string",
          "format": "date-time",
          "description": "Earliest restore point creation time (ISO8601 format)"
        },
        "storageProfile": {
          "$ref": "#/definitions/StorageProfile",
          "description": "Storage profile of a server."
        },
        "replicationRole": {
          "type": "string",
          "description": "The replication role of the server."
        },
        "masterServerId": {
          "type": "string",
          "description": "The master server id of a replica server."
        },
        "replicaCapacity": {
          "type": "integer",
          "format": "int32",
          "minimum": 0,
          "description": "The maximum number of replicas that a master server can have."
        },
        "publicNetworkAccess": {
          "$ref": "#/definitions/PublicNetworkAccess",
          "description": "Whether or not public network access is allowed for this server. Value is optional but if passed in, must be 'Enabled' or 'Disabled'"
        },
        "privateEndpointConnections": {
          "description": "List of private endpoint connections on a server",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ServerPrivateEndpointConnection"
          },
          "readOnly": true
        }
      },
      "description": "The properties of a server."
    },
    "StorageProfile": {
      "properties": {
        "backupRetentionDays": {
          "type": "integer",
          "description": "Backup retention days for the server."
        },
        "geoRedundantBackup": {
          "type": "string",
          "description": "Enable Geo-redundant or not for server backup.",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "GeoRedundantBackup",
            "modelAsString": true
          }
        },
        "storageMB": {
          "type": "integer",
          "format": "int32",
          "description": "Max storage allowed for a server."
        },
        "storageAutogrow": {
          "type": "string",
          "description": "Enable Storage Auto Grow.",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "StorageAutogrow",
            "modelAsString": true
          }
        }
      },
      "description": "Storage Profile properties of a server"
    },
    "ServerPropertiesForCreate": {
      "discriminator": "createMode",
      "required": [
        "createMode"
      ],
      "properties": {
        "version": {
          "$ref": "#/definitions/ServerVersion",
          "description": "Server version."
        },
        "sslEnforcement": {
          "$ref": "#/definitions/SslEnforcement",
          "description": "Enable ssl enforcement or not when connect to server."
        },
        "publicNetworkAccess": {
          "$ref": "#/definitions/PublicNetworkAccess",
          "description": "Whether or not public network access is allowed for this server. Value is optional but if passed in, must be 'Enabled' or 'Disabled'"
        },
        "storageProfile": {
          "$ref": "#/definitions/StorageProfile",
          "description": "Storage profile of a server."
        },
        "createMode": {
          "type": "string",
          "description": "The mode to create a new server.",
          "enum": [
            "Default",
            "PointInTimeRestore",
            "GeoRestore",
            "Replica"
          ],
          "x-ms-enum": {
            "name": "CreateMode",
            "modelAsString": true
          }
        }
      },
      "description": "The properties used to create a new server."
    },
    "ServerPropertiesForDefaultCreate": {
      "x-ms-discriminator-value": "Default",
      "allOf": [
        {
          "$ref": "#/definitions/ServerPropertiesForCreate"
        }
      ],
      "properties": {
        "administratorLogin": {
          "type": "string",
          "description": "The administrator's login name of a server. Can only be specified when the server is being created (and is required for creation)."
        },
        "administratorLoginPassword": {
          "type": "string",
          "format": "password",
          "description": "The password of the administrator login."
        }
      },
      "required": [
        "administratorLogin",
        "administratorLoginPassword"
      ],
      "description": "The properties used to create a new server."
    },
    "ServerPropertiesForRestore": {
      "x-ms-discriminator-value": "PointInTimeRestore",
      "allOf": [
        {
          "$ref": "#/definitions/ServerPropertiesForCreate"
        }
      ],
      "properties": {
        "sourceServerId": {
          "type": "string",
          "description": "The source server id to restore from."
        },
        "restorePointInTime": {
          "type": "string",
          "format": "date-time",
          "description": "Restore point creation time (ISO8601 format), specifying the time to restore from."
        }
      },
      "required": [
        "sourceServerId",
        "restorePointInTime"
      ],
      "description": "The properties used to create a new server by restoring from a backup."
    },
    "ServerPropertiesForGeoRestore": {
      "x-ms-discriminator-value": "GeoRestore",
      "allOf": [
        {
          "$ref": "#/definitions/ServerPropertiesForCreate"
        }
      ],
      "properties": {
        "sourceServerId": {
          "type": "string",
          "description": "The source server id to restore from."
        }
      },
      "required": [
        "sourceServerId"
      ],
      "description": "The properties used to create a new server by restoring to a different region from a geo replicated backup."
    },
    "ServerPropertiesForReplica": {
      "x-ms-discriminator-value": "Replica",
      "allOf": [
        {
          "$ref": "#/definitions/ServerPropertiesForCreate"
        }
      ],
      "properties": {
        "sourceServerId": {
          "type": "string",
          "description": "The master server id to create replica from."
        }
      },
      "required": [
        "sourceServerId"
      ],
      "description": "The properties to create a new replica."
    },
    "Sku": {
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the sku, typically, tier + family + cores, e.g. B_Gen4_1, GP_Gen5_8."
        },
        "tier": {
          "type": "string",
          "description": "The tier of the particular SKU, e.g. Basic.",
          "enum": [
            "Basic",
            "GeneralPurpose",
            "MemoryOptimized"
          ],
          "x-ms-enum": {
            "name": "SkuTier",
            "modelAsString": true
          }
        },
        "capacity": {
          "type": "integer",
          "format": "int32",
          "minimum": 0,
          "description": "The scale up/out capacity, representing server's compute units."
        },
        "size": {
          "type": "string",
          "description": "The size code, to be interpreted by resource as appropriate."
        },
        "family": {
          "type": "string",
          "description": "The family of hardware."
        }
      },
      "description": "Billing information related properties of a server."
    },
    "Server": {
      "properties": {
        "sku": {
          "$ref": "#/definitions/Sku",
          "description": "The SKU (pricing tier) of the server."
        },
        "properties": {
          "$ref": "#/definitions/ServerProperties",
          "x-ms-client-flatten": true,
          "description": "Properties of the server."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/TrackedResource"
        }
      ],
      "description": "Represents a server."
    },
    "ServerForCreate": {
      "properties": {
        "sku": {
          "$ref": "#/definitions/Sku",
          "description": "The SKU (pricing tier) of the server."
        },
        "properties": {
          "$ref": "#/definitions/ServerPropertiesForCreate",
          "x-ms-client-flatten": false,
          "description": "Properties of the server."
        },
        "location": {
          "type": "string",
          "description": "The location the resource resides in."
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Application-specific metadata in the form of key-value pairs."
        }
      },
      "required": [
        "properties",
        "location"
      ],
      "description": "Represents a server to be created."
    },
    "ServerUpdateParameters": {
      "properties": {
        "sku": {
          "$ref": "#/definitions/Sku",
          "description": "The SKU (pricing tier) of the server."
        },
        "properties": {
          "properties": {
            "storageProfile": {
              "$ref": "#/definitions/StorageProfile",
              "description": "Storage profile of a server."
            },
            "administratorLoginPassword": {
              "type": "string",
              "format": "password",
              "description": "The password of the administrator login."
            },
            "version": {
              "$ref": "#/definitions/ServerVersion",
              "description": "The version of a server."
            },
            "sslEnforcement": {
              "$ref": "#/definitions/SslEnforcement",
              "description": "Enable ssl enforcement or not when connect to server."
            },
            "publicNetworkAccess": {
              "$ref": "#/definitions/PublicNetworkAccess",
              "description": "Whether or not public network access is allowed for this server. Value is optional but if passed in, must be 'Enabled' or 'Disabled'"
            },
            "replicationRole": {
              "type": "string",
              "description": "The replication role of the server."
            }
          },
          "x-ms-client-flatten": true,
          "description": "The properties that can be updated for a server."
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Application-specific metadata in the form of key-value pairs."
        }
      },
      "description": "Parameters allowed to update for a server."
    },
    "ServerListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Server"
          },
          "description": "The list of servers"
        }
      },
      "description": "A list of servers."
    },
    "FirewallRuleProperties": {
      "properties": {
        "startIpAddress": {
          "type": "string",
          "pattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$",
          "description": "The start IP address of the server firewall rule. Must be IPv4 format."
        },
        "endIpAddress": {
          "type": "string",
          "pattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$",
          "description": "The end IP address of the server firewall rule. Must be IPv4 format."
        }
      },
      "required": [
        "startIpAddress",
        "endIpAddress"
      ],
      "description": "The properties of a server firewall rule."
    },
    "FirewallRule": {
      "properties": {
        "properties": {
          "$ref": "#/definitions/FirewallRuleProperties",
          "x-ms-client-flatten": true,
          "description": "The properties of a firewall rule."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v1/types.json#/definitions/ProxyResource"
        }
      ],
      "required": [
        "properties"
      ],
      "description": "Represents a server firewall rule."
    },
    "FirewallRuleListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FirewallRule"
          },
          "description": "The list of firewall rules in a server."
        }
      },
      "description": "A list of firewall rules."
    },
    "VirtualNetworkRuleProperties": {
      "description": "Properties of a virtual network rule.",
      "required": [
        "virtualNetworkSubnetId"
      ],
      "type": "object",
      "properties": {
        "virtualNetworkSubnetId": {
          "description": "The ARM resource id of the virtual network subnet.",
          "type": "string"
        },
        "ignoreMissingVnetServiceEndpoint": {
          "description": "Create firewall rule before the virtual network has vnet service endpoint enabled.",
          "type": "boolean"
        },
        "state": {
          "description": "Virtual Network Rule State",
          "enum": [
            "Initializing",
            "InProgress",
            "Ready",
            "Deleting",
            "Unknown"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "VirtualNetworkRuleState",
            "modelAsString": true
          }
        }
      }
    },
    "VirtualNetworkRule": {
      "description": "A virtual network rule.",
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v1/types.json#/definitions/ProxyResource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/VirtualNetworkRuleProperties",
          "description": "Resource properties.",
          "x-ms-client-flatten": true
        }
      }
    },
    "VirtualNetworkRuleListResult": {
      "description": "A list of virtual network rules.",
      "type": "object",
      "properties": {
        "value": {
          "description": "Array of results.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/VirtualNetworkRule"
          },
          "readOnly": true
        },
        "nextLink": {
          "description": "Link to retrieve next page of results.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "DatabaseProperties": {
      "properties": {
        "charset": {
          "type": "string",
          "description": "The charset of the database."
        },
        "collation": {
          "type": "string",
          "description": "The collation of the database."
        }
      },
      "description": "The properties of a database."
    },
    "Database": {
      "properties": {
        "properties": {
          "$ref": "#/definitions/DatabaseProperties",
          "x-ms-client-flatten": true,
          "description": "The properties of a database."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v1/types.json#/definitions/ProxyResource"
        }
      ],
      "description": "Represents a Database."
    },
    "DatabaseListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Database"
          },
          "description": "The list of databases housed in a server"
        }
      },
      "description": "A List of databases."
    },
    "ConfigurationProperties": {
      "properties": {
        "value": {
          "type": "string",
          "description": "Value of the configuration."
        },
        "description": {
          "type": "string",
          "readOnly": true,
          "description": "Description of the configuration."
        },
        "defaultValue": {
          "type": "string",
          "readOnly": true,
          "description": "Default value of the configuration."
        },
        "dataType": {
          "type": "string",
          "readOnly": true,
          "description": "Data type of the configuration."
        },
        "allowedValues": {
          "type": "string",
          "readOnly": true,
          "description": "Allowed values of the configuration."
        },
        "source": {
          "type": "string",
          "description": "Source of the configuration."
        }
      },
      "description": "The properties of a configuration."
    },
    "Configuration": {
      "properties": {
        "properties": {
          "$ref": "#/definitions/ConfigurationProperties",
          "x-ms-client-flatten": true,
          "description": "The properties of a configuration."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v1/types.json#/definitions/ProxyResource"
        }
      ],
      "description": "Represents a Configuration."
    },
    "ConfigurationListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Configuration"
          },
          "description": "The list of server configurations."
        }
      },
      "description": "A list of server configurations."
    },
    "OperationDisplay": {
      "properties": {
        "provider": {
          "type": "string",
          "readOnly": true,
          "description": "Operation resource provider name."
        },
        "resource": {
          "type": "string",
          "readOnly": true,
          "description": "Resource on which the operation is performed."
        },
        "operation": {
          "type": "string",
          "readOnly": true,
          "description": "Localized friendly name for the operation."
        },
        "description": {
          "type": "string",
          "readOnly": true,
          "description": "Operation description."
        }
      },
      "readOnly": true,
      "description": "Display metadata associated with the operation."
    },
    "Operation": {
      "properties": {
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "The name of the operation being performed on this particular object."
        },
        "display": {
          "$ref": "#/definitions/OperationDisplay",
          "readOnly": true,
          "description": "The localized display information for this particular operation or action."
        },
        "origin": {
          "type": "string",
          "readOnly": true,
          "description": "The intended executor of the operation.",
          "enum": [
            "NotSpecified",
            "user",
            "system"
          ],
          "x-ms-enum": {
            "name": "OperationOrigin",
            "modelAsString": true
          }
        },
        "properties": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          },
          "readOnly": true,
          "x-ms-client-flatten": false,
          "description": "Additional descriptions for the operation."
        }
      },
      "description": "REST API operation definition."
    },
    "OperationListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Operation"
          },
          "description": "The list of resource provider operations."
        }
      },
      "description": "A list of resource provider operations."
    },
    "LogFileProperties": {
      "properties": {
        "sizeInKB": {
          "type": "integer",
          "format": "int64",
          "description": "Size of the log file."
        },
        "createdTime": {
          "type": "string",
          "readOnly": true,
          "format": "date-time",
          "description": "Creation timestamp of the log file."
        },
        "lastModifiedTime": {
          "type": "string",
          "readOnly": true,
          "format": "date-time",
          "description": "Last modified timestamp of the log file."
        },
        "type": {
          "type": "string",
          "description": "Type of the log file."
        },
        "url": {
          "type": "string",
          "readOnly": true,
          "description": "The url to download the log file from."
        }
      },
      "description": "The properties of a log file."
    },
    "LogFile": {
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the log file."
        },
        "properties": {
          "$ref": "#/definitions/LogFileProperties",
          "x-ms-client-flatten": true,
          "description": "The properties of the log file."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v1/types.json#/definitions/ProxyResource"
        }
      ],
      "description": "Represents a log file."
    },
    "LogFileListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LogFile"
          },
          "description": "The list of log files."
        }
      },
      "description": "A list of log files."
    },
    "PerformanceTierServiceLevelObjectives": {
      "properties": {
        "id": {
          "type": "string",
          "description": "ID for the service level objective."
        },
        "edition": {
          "type": "string",
          "description": "Edition of the performance tier."
        },
        "vCore": {
          "type": "integer",
          "description": "vCore associated with the service level objective"
        },
        "hardwareGeneration": {
          "type": "string",
          "description": "Hardware generation associated with the service level objective"
        },
        "maxBackupRetentionDays": {
          "type": "integer",
          "description": "Maximum Backup retention in days for the performance tier edition"
        },
        "minBackupRetentionDays": {
          "type": "integer",
          "description": "Minimum Backup retention in days for the performance tier edition"
        },
        "maxStorageMB": {
          "type": "integer",
          "format": "int32",
          "description": "Max storage allowed for a server."
        },
        "minStorageMB": {
          "type": "integer",
          "format": "int32",
          "description": "Max storage allowed for a server."
        }
      },
      "description": "Service level objectives for performance tier."
    },
    "PerformanceTierProperties": {
      "properties": {
        "id": {
          "type": "string",
          "description": "ID of the performance tier."
        },
        "serviceLevelObjectives": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PerformanceTierServiceLevelObjectives"
          },
          "description": "Service level objectives associated with the performance tier"
        }
      },
      "description": "Performance tier properties"
    },
    "PerformanceTierListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PerformanceTierProperties"
          },
          "description": "The list of performance tiers"
        }
      },
      "description": "A list of performance tiers."
    },
    "NameAvailabilityRequest": {
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "type": "string",
          "description": "Resource name to verify."
        },
        "type": {
          "type": "string",
          "description": "Resource type used for verification."
        }
      },
      "description": "Request from client to check resource name availability."
    },
    "NameAvailability": {
      "properties": {
        "message": {
          "type": "string",
          "description": "Error Message."
        },
        "nameAvailable": {
          "type": "boolean",
          "description": "Indicates whether the resource name is available."
        },
        "reason": {
          "type": "string",
          "description": "Reason for name being unavailable."
        }
      },
      "description": "Represents a resource name availability."
    },
    "SecurityAlertPolicyProperties": {
      "description": "Properties of a security alert policy.",
      "required": [
        "state"
      ],
      "type": "object",
      "properties": {
        "state": {
          "description": "Specifies the state of the policy, whether it is enabled or disabled.",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "ServerSecurityAlertPolicyState",
            "modelAsString": false
          }
        },
        "disabledAlerts": {
          "description": "Specifies an array of alerts that are disabled. Allowed values are: Sql_Injection, Sql_Injection_Vulnerability, Access_Anomaly",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "emailAddresses": {
          "description": "Specifies an array of e-mail addresses to which the alert is sent.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "emailAccountAdmins": {
          "description": "Specifies that the alert is sent to the account administrators.",
          "type": "boolean"
        },
        "storageEndpoint": {
          "description": "Specifies the blob storage endpoint (e.g. https://MyAccount.blob.core.windows.net). This blob storage will hold all Threat Detection audit logs.",
          "type": "string"
        },
        "storageAccountAccessKey": {
          "description": "Specifies the identifier key of the Threat Detection audit storage account.",
          "type": "string"
        },
        "retentionDays": {
          "format": "int32",
          "description": "Specifies the number of days to keep in the Threat Detection audit logs.",
          "type": "integer"
        }
      }
    },
    "ServerSecurityAlertPolicy": {
      "description": "A server security alert policy.",
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v1/types.json#/definitions/ProxyResource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/SecurityAlertPolicyProperties",
          "description": "Resource properties.",
          "x-ms-client-flatten": true
        }
      }
    },
    "CloudError": {
      "x-ms-external": true,
      "properties": {
        "error": {
          "$ref": "../../../../../common-types/resource-management/v1/types.json#/definitions/ErrorResponse"
        }
      },
      "description": "An error response from the Batch service."
    }
  },
  "parameters": {
    "ServerNameParameter": {
      "name": "serverName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the server.",
      "x-ms-parameter-location": "method"
    },
    "FirewallRuleNameParameter": {
      "name": "firewallRuleName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the server firewall rule.",
      "x-ms-parameter-location": "method"
    },
    "virtualNetworkRuleNameParameter": {
      "name": "virtualNetworkRuleName",
      "in": "path",
      "description": "The name of the virtual network rule.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "DatabaseNameParameter": {
      "name": "databaseName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the database.",
      "x-ms-parameter-location": "method"
    },
    "ConfigurationNameParameter": {
      "name": "configurationName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the server configuration.",
      "x-ms-parameter-location": "method"
    },
    "LocationNameParameter": {
      "name": "locationName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the location.",
      "x-ms-parameter-location": "method"
    },
    "SecurityAlertPolicyNameParameter": {
      "name": "securityAlertPolicyName",
      "in": "path",
      "description": "The name of the security alert policy.",
      "required": true,
      "type": "string",
      "enum": [
        "default"
      ],
      "x-ms-parameter-location": "method"
    }
  }
}
