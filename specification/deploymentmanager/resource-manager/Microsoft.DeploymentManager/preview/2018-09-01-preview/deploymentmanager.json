{
  "swagger": "2.0",
  "info": {
    "version": "2018-09-01-preview",
    "title": "AzureDeploymentManager",
    "description": "REST APIs for orchestrating deployments using the Azure Deployment Manager (ADM). See https://docs.microsoft.com/en-us/azure/azure-resource-manager/deployment-manager-overview for more information."
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "paths": {
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DeploymentManager/serviceTopologies/{serviceTopologyName}": {
      "parameters": [
        {
          "$ref": "#/parameters/subscriptionId"
        },
        {
          "$ref": "#/parameters/resourceGroupName"
        },
        {
          "$ref": "#/parameters/serviceTopologyName"
        },
        {
          "$ref": "#/parameters/ApiVersionParameter"
        }
      ],
      "put": {
        "tags": [
          "ServiceTopologies"
        ],
        "operationId": "ServiceTopologies_CreateOrUpdate",
        "summary": "Creates or updates a service topology.",
        "description": "Synchronously creates a new service topology or updates an existing service topology.",
        "x-ms-examples": {
          "Create a topology with Artifact Source": {
            "$ref": "./examples/servicetopology_createorupdate.json"
          },
          "Create a topology without Artifact Source": {
            "$ref": "./examples/servicetopology_createorupdate_noartifactsource.json"
          }
        },
        "parameters": [
          {
            "in": "body",
            "name": "serviceTopologyInfo",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ServiceTopologyResource"
            },
            "description": "Source topology object defines the resource."
          }
        ],
        "responses": {
          "201": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ServiceTopologyResource"
            }
          },
          "default": {
            "description": "All non-success conditions are handled using the standard Error contract.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      },
      "get": {
        "tags": [
          "ServiceTopologies"
        ],
        "operationId": "ServiceTopologies_Get",
        "summary": "Gets a topology resource.",
        "x-ms-examples": {
          "Get topology": {
            "$ref": "./examples/servicetopology_get.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/serviceTopologyName"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ServiceTopologyResource"
            }
          },
          "default": {
            "description": "All non-success conditions are handled using the standard error contract.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ServiceTopologies"
        ],
        "operationId": "ServiceTopologies_Delete",
        "summary": "Deletes a topology resource.",
        "x-ms-examples": {
          "Delete topology": {
            "$ref": "./examples/servicetopology_delete.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/serviceTopologyName"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The topology was successfully deleted"
          },
          "204": {
            "description": "The topology was not found and the operation is considered success."
          },
          "default": {
            "description": "All non-success conditions are handled using the standard error contract.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DeploymentManager/serviceTopologies/{serviceTopologyName}/services/{serviceName}": {
      "put": {
        "tags": [
          "Services"
        ],
        "operationId": "Services_CreateOrUpdate",
        "summary": "Creates or updates a service in the topology.",
        "description": "Synchronously creates a new service or updates an existing service.",
        "x-ms-examples": {
          "Create service": {
            "$ref": "./examples/service_createorupdate.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/serviceTopologyName"
          },
          {
            "$ref": "#/parameters/serviceName"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "in": "body",
            "name": "serviceInfo",
            "description": "The topoogy group resource object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ServiceResource"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ServiceResource"
            }
          },
          "default": {
            "description": "All non-success conditions are handled using the standard error contract.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      },
      "get": {
        "tags": [
          "Services"
        ],
        "operationId": "Services_Get",
        "summary": "Gets a service resource.",
        "x-ms-examples": {
          "Get service": {
            "$ref": "./examples/service_get.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/serviceTopologyName"
          },
          {
            "$ref": "#/parameters/serviceName"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ServiceResource"
            }
          },
          "default": {
            "description": "All non-success conditions are handled using the standard error contract.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Services"
        ],
        "operationId": "Services_Delete",
        "summary": "Deletes a service resource.",
        "x-ms-examples": {
          "Delete service": {
            "$ref": "./examples/service_delete.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/serviceTopologyName"
          },
          {
            "$ref": "#/parameters/serviceName"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The service was successfully deleted"
          },
          "204": {
            "description": "The service was not found and the operation is considered success."
          },
          "default": {
            "description": "All non-success conditions are handled using the standard error contract.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DeploymentManager/serviceTopologies/{serviceTopologyName}/services/{serviceName}/serviceUnits/{serviceUnitName}": {
      "put": {
        "tags": [
          "ServiceUnits"
        ],
        "operationId": "ServiceUnits_CreateOrUpdate",
        "x-ms-long-running-operation": true,
        "summary": "Creates or updates a service unit in the service within the referenced topology resource.",
        "description": "This is an asynchronous operation and can be polled to completion using the operation resource returned by this operation.",
        "x-ms-examples": {
          "Create service unit using relative paths into the artifact source": {
            "$ref": "./examples/serviceunit_createorupdate.json"
          },
          "Create service unit using SAS URIs": {
            "$ref": "./examples/serviceunit_createorupdate_noartifactsource.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/serviceTopologyName"
          },
          {
            "$ref": "#/parameters/serviceName"
          },
          {
            "$ref": "#/parameters/serviceUnitName"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "in": "body",
            "name": "serviceUnitInfo",
            "description": "The service unit resource object.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ServiceUnitResource"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "This is a long running operation. The operation returns a 201 if the validation is complete. The response includes an Azure-AsyncOperation header that contains a status URL. Clients are expected to poll the status URL for the status of the operation.",
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "Contains the status URL on which clients are expected to poll the status of the operation."
              }
            },
            "schema": {
              "$ref": "#/definitions/ServiceUnitResource"
            }
          },
          "default": {
            "description": "All non-success conditions are handled using the standard error contract.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      },
      "get": {
        "tags": [
          "ServiceUnits"
        ],
        "operationId": "ServiceUnits_Get",
        "summary": "Gets a service unit resource.",
        "x-ms-examples": {
          "Get service unit": {
            "$ref": "./examples/serviceunit_get.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/serviceTopologyName"
          },
          {
            "$ref": "#/parameters/serviceName"
          },
          {
            "$ref": "#/parameters/serviceUnitName"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ServiceUnitResource"
            }
          },
          "default": {
            "description": "All non-success conditions are handled using the standard error contract.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ServiceUnits"
        ],
        "operationId": "ServiceUnits_Delete",
        "summary": "Deletes a service unit resource.",
        "x-ms-examples": {
          "Delete service unit": {
            "$ref": "./examples/serviceunit_delete.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/serviceTopologyName"
          },
          {
            "$ref": "#/parameters/serviceName"
          },
          {
            "$ref": "#/parameters/serviceUnitName"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The service unit was successfully deleted"
          },
          "204": {
            "description": "The service unit was not found and the operation is considered success."
          },
          "default": {
            "description": "All non-success conditions are handled using the standard error contract.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DeploymentManager/steps/{stepName}": {
      "put": {
        "tags": [
          "Steps"
        ],
        "operationId": "Steps_CreateOrUpdate",
        "summary": "Creates or updates a deployment step.",
        "description": "Synchronously creates a new step or updates an existing step.",
        "x-ms-examples": {
          "Create deployment step": {
            "$ref": "./examples/step_createorupdate.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/stepName"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "in": "body",
            "name": "stepInfo",
            "description": "The resource object.",
            "schema": {
              "$ref": "#/definitions/StepResource"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/StepResource"
            }
          },
          "default": {
            "description": "All non-success conditions are handled using the standard error contract.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      },
      "get": {
        "tags": [
          "Steps"
        ],
        "operationId": "Steps_Get",
        "summary": "Gets a topology resource.",
        "x-ms-examples": {
          "Get deployment step": {
            "$ref": "./examples/step_get.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/stepName"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/StepResource"
            }
          },
          "default": {
            "description": "All non-success conditions are handled using the standard error contract.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Steps"
        ],
        "operationId": "Steps_Delete",
        "summary": "Deletes a deployment step.",
        "x-ms-examples": {
          "Delete deployment step": {
            "$ref": "./examples/step_delete.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/stepName"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The step was successfully deleted"
          },
          "204": {
            "description": "The step was not found and the operation is considered success."
          },
          "default": {
            "description": "All non-success conditions are handled using the standard error contract.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DeploymentManager/rollouts/{rolloutName}": {
      "put": {
        "tags": [
          "Rollouts"
        ],
        "operationId": "Rollouts_CreateOrUpdate",
        "x-ms-long-running-operation": true,
        "summary": "Creates or updates a rollout.",
        "description": "This is an asynchronous operation and can be polled to completion using the location header returned by this operation.",
        "x-ms-examples": {
          "Create or update rollout": {
            "$ref": "./examples/rollout_createorupdate.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/rolloutName"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "in": "body",
            "name": "rolloutRequest",
            "description": "Source rollout request object that defines the rollout.",
            "schema": {
              "$ref": "#/definitions/RolloutRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "This is a long running operation. The operation returns a 201 if the request was successfully registered and basic validation is successful. The response includes an Azure-AsyncOperation header that contains the operation status URL. Clients are expected to poll the status URL for the status of the operation.",
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "Contains the status URL on which clients are expected to poll the status of the operation."
              }
            },
            "schema": {
              "$ref": "#/definitions/RolloutRequest"
            }
          },
          "default": {
            "description": "All non-success conditions are handled using the standard error contract.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      },
      "get": {
        "tags": [
          "Rollouts"
        ],
        "operationId": "Rollouts_Get",
        "summary": "Gets detailed information of an ongoing or completed rollout.",
        "x-ms-examples": {
          "Get rollout": {
            "$ref": "./examples/rollout_get.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/rolloutName"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/retryAttempt"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Rollout"
            }
          },
          "default": {
            "description": "All non-success conditions are handled using the standard error contract.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Rollouts"
        ],
        "operationId": "Rollouts_Delete",
        "summary": "Deletes a rollout resource.",
        "description": "A rollout can only be deleted if it is in a terminal state.",
        "x-ms-examples": {
          "Delete rollout": {
            "$ref": "./examples/rollout_delete.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/rolloutName"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The rollout was successfully deleted"
          },
          "204": {
            "description": "The rollout was not found and the operation is considered success."
          },
          "default": {
            "description": "All non-success conditions are handled using the standard error contract.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DeploymentManager/rollouts/{rolloutName}/cancel": {
      "post": {
        "tags": [
          "Rollouts"
        ],
        "operationId": "Rollouts_Cancel",
        "summary": "Stops a running rollout.",
        "description": "A rollout can be canceled only if it is in running state.",
        "x-ms-examples": {
          "Cancel rollout": {
            "$ref": "./examples/rollout_post_cancel.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/rolloutName"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Rollout"
            }
          },
          "default": {
            "description": "All non-success conditions are handled using the standard error contract.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DeploymentManager/rollouts/{rolloutName}/restart": {
      "post": {
        "tags": [
          "Rollouts"
        ],
        "operationId": "Rollouts_Restart",
        "summary": "Restarts a failed rollout and optionally skips all succeeded steps.",
        "description": "A rollout can be restarted only if is in a terminal state and failed.",
        "x-ms-examples": {
          "Restart rollout": {
            "$ref": "./examples/rollout_post_restart.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/rolloutName"
          },
          {
            "name": "skipSucceeded",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "If true, will skip all succeeded steps so far in the rollout. If false, will execute the entire rollout again regardless of the current state of individual resources. Defaults to false if not specified."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Rollout"
            }
          },
          "default": {
            "description": "All non-success conditions are handled using the standard error contract.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DeploymentManager/artifactSources/{artifactSourceName}": {
      "put": {
        "tags": [
          "ArtifactSources"
        ],
        "operationId": "ArtifactSources_CreateOrUpdate",
        "summary": "Creates or updates an Artifact source.",
        "description": "Synchronously creates a new artifact source or updates an existing artifact source.",
        "x-ms-examples": {
          "Create artifact source": {
            "$ref": "./examples/artifactsource_createorupdate.json"
          },
          "Create artifact source with artifact root, an offset into the storage container": {
            "$ref": "./examples/artifactsource_createorupdate_artifactroot.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/artifactSourceName"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "in": "body",
            "name": "artifactSourceInfo",
            "description": "Source object that defines the resource.",
            "schema": {
              "$ref": "#/definitions/ArtifactSource"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/ArtifactSource"
            }
          },
          "default": {
            "description": "All non-success conditions are handled using the standard error contract.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      },
      "get": {
        "tags": [
          "ArtifactSources"
        ],
        "operationId": "ArtifactSources_Get",
        "summary": "Gets an artifact resource.",
        "x-ms-examples": {
          "Get artifact source": {
            "$ref": "./examples/artifactsource_get.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/artifactSourceName"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ArtifactSource"
            }
          },
          "default": {
            "description": "All non-success conditions are handled using the standard error contract.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ArtifactSources"
        ],
        "operationId": "ArtifactSources_Delete",
        "summary": "Deletes an artifact source resource.",
        "x-ms-examples": {
          "Delete artifact source": {
            "$ref": "./examples/artifactsource_delete.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/artifactSourceName"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The artifact source was successfully deleted"
          },
          "204": {
            "description": "The artifact source was not found and the operation is considered success."
          },
          "default": {
            "description": "All non-success conditions are handled using the standard error contract.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.DeploymentManager/operations": {
      "get": {
        "tags": [
          "Operations"
        ],
        "operationId": "Operations_Get",
        "summary": "Gets an operation resource.",
        "x-ms-examples": {
          "Get operations": {
            "$ref": "./examples/operations_get.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The operation details are successfully returned. The response code does not determine if the request which this operation corresponds to is successful. Check the response content for the status and any error information on failures.",
            "schema": {
              "$ref": "#/definitions/OperationsList"
            }
          },
          "default": {
            "description": "All non-success conditions are handled using the standard error contract.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Identity": {
      "description": "Identity for the resource.",
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "description": "The identity type."
        },
        "identityIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The list of identities."
        }
      },
      "required": [
        "type",
        "identityIds"
      ]
    },
    "RolloutRequest": {
      "description": "Defines the resource format for creating a rollout.",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v1/types.json#/definitions/TrackedResource"
        }
      ],
      "properties": {
        "identity": {
          "description": "Identity for the resource.",
          "$ref": "#/definitions/Identity"
        },
        "properties": {
          "description": "Defines the properties that make up a rollout request.",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/RolloutRequestProperties"
        }
      },
      "required": [
        "identity",
        "properties"
      ]
    },
    "RolloutRequestProperties": {
      "description": "The properties for defining a rollout.",
      "properties": {
        "buildVersion": {
          "type": "string",
          "description": "The version of the build being deployed.",
          "example": "1.0.0.1"
        },
        "artifactSourceId": {
          "type": "string",
          "description": "The reference to the ARM resource Id where the payload is located.",
          "example": "Microsoft.DeploymentManager/artifactSources/payloadStore1"
        },
        "targetServiceTopologyId": {
          "type": "string",
          "description": "The reference to the resource Id of the service topology from which services are chosen to be deployed.",
          "example": "Microsoft.DeploymentManager/serviceTopologies/myServiceTopology"
        },
        "stepGroups": {
          "description": "The list of steps that define the orchestration.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Step"
          }
        }
      },
      "required": [
        "stepGroups",
        "targetServiceTopologyId",
        "buildVersion"
      ]
    },
    "Step": {
      "description": "The properties that define an Azure Deployment Manager step.",
      "properties": {
        "name": {
          "description": "The name of the step.",
          "type": "string"
        },
        "dependsOnStepGroup": {
          "description": "The list of step names on which this step depends.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "example": [
            "stepGroup1",
            "stepGroup2"
          ]
        },
        "preDeploymentSteps": {
          "description": "The list of step names to be run before deploying the target.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PrePostStep"
          }
        },
        "deploymentTargetId": {
          "description": "The reference to the ARM service unit resource to be deployed.",
          "type": "string",
          "example": "Microsoft.DeploymentManager/serviceTopologies/myServiceTopology/services/myService/serviceUnits/database"
        },
        "postDeploymentSteps": {
          "description": "The list of step names to be run after deploying the target.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PrePostStep"
          }
        }
      },
      "required": [
        "deploymentTargetId",
        "name"
      ]
    },
    "PrePostStep": {
      "description": "The properties that define a step.",
      "properties": {
        "stepId": {
          "type": "string",
          "description": "The reference to the ARM resource Id of a step.",
          "example": "Microsoft.DeploymentManager/steps/healthCheckStep1"
        }
      },
      "required": [
        "stepId"
      ]
    },
    "ArtifactSource": {
      "description": "The resource that define the source location where the artifacts are located.",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v1/types.json#/definitions/TrackedResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "Defines the properties that make up an artifact source.",
          "x-ms-client-flatten": true,
          "allOf": [
            {
              "$ref": "#/definitions/ArtifactSourceProperties"
            }
          ]
        }
      }
    },
    "ArtifactSourceProperties": {
      "description": "The properties that define the source location where the artifacts are located.",
      "properties": {
        "sourceType": {
          "type": "string",
          "description": "The type of artifact source used.",
          "example": "AzureStorage"
        },
        "artifactRoot": {
          "type": "string",
          "description": "The root folder under which all artifacts for all environments are expected to be organized."
        },
        "authentication": {
          "description": "The authentication method to use to access the artifact source.",
          "$ref": "#/definitions/Authentication"
        }
      },
      "required": [
        "sourceType",
        "authentication"
      ]
    },
    "Authentication": {
      "description": "Defines the authentication method and properties to access the artifacts.",
      "type": "object",
      "discriminator": "type",
      "properties": {
        "type": {
          "type": "string",
          "description": "The authentication type"
        }
      },
      "required": [
        "type"
      ]
    },
    "SasAuthentication": {
      "x-ms-discriminator-value": "Sas",
      "type": "object",
      "description": "Defines the authentication properties to access the artifacts using Azure Storage SAS URI.",
      "allOf": [
        {
          "$ref": "#/definitions/Authentication"
        }
      ],
      "properties": {
        "properties": {
          "description": "The SAS properties",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/SasProperties"
        }
      }
    },
    "SasProperties": {
      "description": "The properties that define SAS authentication.",
      "properties": {
        "sasUri": {
          "type": "string",
          "description": "The complete SAS URI to the location of the artifacts."
        }
      },
      "required": [
        "sasUri"
      ]
    },
    "Rollout": {
      "description": "Defines the rollout resource.",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v1/types.json#/definitions/TrackedResource"
        }
      ],
      "properties": {
        "identity": {
          "description": "Identity for the resource.",
          "$ref": "#/definitions/Identity"
        },
        "properties": {
          "description": "The properties that define a rollout.",
          "x-ms-client-flatten": true,
          "allOf": [
            {
              "$ref": "#/definitions/RolloutRequestProperties"
            },
            {
              "$ref": "#/definitions/RolloutProperties"
            }
          ]
        }
      }
    },
    "RolloutProperties": {
      "description": "Defines the properties of a rollout.",
      "properties": {
        "status": {
          "type": "string",
          "readOnly": true,
          "description": "The current status of the rollout."
        },
        "totalRetryAttempts": {
          "type": "integer",
          "format": "int32",
          "readOnly": true,
          "description": "The cardinal count of total number of retries performed on the rollout at a given time."
        },
        "operationInfo": {
          "readOnly": true,
          "$ref": "#/definitions/RolloutOperationInfo",
          "description": "Operational information of the rollout."
        },
        "services": {
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/Service"
          },
          "description": "Set of detailed step result information on target resource groups."
        }
      }
    },
    "RolloutOperationInfo": {
      "description": "Detailed runtime information of the rollout.",
      "properties": {
        "retryAttempt": {
          "type": "integer",
          "format": "int32",
          "readOnly": true,
          "description": "The ordinal count of retry attempt. 0 if no retries of the rollout have been performed."
        },
        "skipSucceededOnRetry": {
          "type": "boolean",
          "readOnly": true,
          "description": "True if skipping all successful steps in the given retry attempt was chosen. False otherwise."
        },
        "startTime": {
          "type": "string",
          "format": "date-time",
          "readOnly": true,
          "description": "The start time of the rollout in UTC."
        },
        "endTime": {
          "type": "string",
          "format": "date-time",
          "readOnly": true,
          "description": "The start time of the rollout in UTC. This property will not be set if the rollout has not completed yet."
        },
        "error": {
          "description": "The detailed error information for any failure.",
          "readOnly": true,
          "$ref": "#/definitions/CloudErrorBody"
        }
      }
    },
    "ServiceTopologyResource": {
      "description": "The resource representation of a service topology.",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v1/types.json#/definitions/TrackedResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "The properties that define the service.",
          "x-ms-client-flatten": true,
          "allOf": [
            {
              "$ref": "#/definitions/ServiceTopologyProperties"
            }
          ]
        }
      },
      "required": [
        "properties"
      ]
    },
    "ServiceTopologyProperties": {
      "description": "The properties of a service topology.",
      "properties": {
        "artifactSourceId": {
          "type": "string",
          "description": "The artifact source that contains the artifacts that can be referenced in the service units."
        }
      }
    },
    "ServiceResource": {
      "description": "The resource representation of a service in a topology.",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v1/types.json#/definitions/TrackedResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "The properties that define a service in a topology.",
          "x-ms-client-flatten": true,
          "allOf": [
            {
              "$ref": "#/definitions/ServiceProperties"
            }
          ]
        }
      },
      "required": [
        "properties"
      ]
    },
    "Service": {
      "description": "Defines a service.",
      "allOf": [
        {
          "$ref": "#/definitions/ServiceProperties"
        }
      ],
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the service."
        },
        "serviceUnits": {
          "description": "The detailed information about the units that make up the service.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ServiceUnit"
          }
        }
      }
    },
    "ServiceProperties": {
      "description": "The properties of a service.",
      "properties": {
        "targetLocation": {
          "type": "string",
          "description": "The Azure location to which the resources in the service belong to."
        },
        "targetSubscriptionId": {
          "type": "string",
          "description": "The subscription to which the resources in the service belong to."
        }
      },
      "required": [
        "targetLocation",
        "targetSubscriptionId"
      ]
    },
    "ServiceUnitResource": {
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v1/types.json#/definitions/TrackedResource"
        }
      ],
      "description": "Represents the response of a service unit resource.",
      "properties": {
        "properties": {
          "description": "The properties that define the service unit.",
          "x-ms-client-flatten": true,
          "allOf": [
            {
              "$ref": "#/definitions/ServiceUnitProperties"
            }
          ]
        }
      },
      "required": [
        "properties"
      ]
    },
    "ServiceUnit": {
      "description": "Defines a service unit.",
      "allOf": [
        {
          "$ref": "#/definitions/ServiceUnitProperties"
        }
      ],
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the service unit."
        },
        "steps": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RolloutStep"
          },
          "description": "Detailed step information, if present."
        }
      }
    },
    "ServiceUnitProperties": {
      "description": "Defines the properties of a service unit.",
      "properties": {
        "targetResourceGroup": {
          "type": "string",
          "description": "The Azure Resource Group to which the resources in the service unit belong to."
        },
        "deploymentMode": {
          "type": "string",
          "enum": [
            "Incremental",
            "Complete"
          ],
          "x-ms-enum": {
            "name": "DeploymentMode",
            "modelAsString": false
          },
          "description": "Describes the type of ARM deployment to be performed on the resource."
        },
        "artifacts": {
          "type": "object",
          "description": "The artifacts for the service unit.",
          "$ref": "#/definitions/ServiceUnitArtifacts"
          }
      },
      "required": [
        "targetResourceGroup",
        "deploymentMode"
      ]
    },
    "ServiceUnitArtifacts":
    {
      "description": "Defines the artifacts of a service unit.",
      "properties":{
        "templateUri": {
          "type": "string",
          "description": "The full URI of the ARM template file with the SAS token.",
          "example": "https://teststore.blob.core.windows.net/payloadcontainer/template.json?sasUri"
        },
        "parametersUri": {
          "type": "string",
          "description": "The full URI of the ARM parameters file with the SAS token.",
          "example": "https://teststore.blob.core.windows.net/payloadcontainer/parameters.json?sasUri"
        },
        "templateArtifactSourceRelativePath": {
          "type": "string",
          "description": "The path to the ARM template file relative to the artifact source.",
          "example": "/templates/resource1.template.json"
        },
        "parametersArtifactSourceRelativePath": {
          "type": "string",
          "description": "The path to the ARM parameters file relative to the artifact source.",
          "example": "/parameters/resource1.parameters.json"
        }
      }
    },
    "RolloutStep": {
      "description": "Defines a specific step on a target service unit.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the step as specified in the rollout specification input artifact."
        },
        "status": {
          "type": "string",
          "readOnly": true,
          "description": "Current state of the step."
        },
        "stepGroup": {
          "type": "string",
          "description": "The step group the current step is part of."
        },
        "operationInfo": {
          "readOnly": true,
          "$ref": "#/definitions/StepOperationInfo",
          "description": "Detailed information of specific action execution."
        },
        "resourceOperations": {
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/ResourceOperation"
          },
          "description": "Set of resource operations that were performed on the Azure resource that the action acted upon."
        },
        "messages": {
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/Message"
          },
          "description": "Supplementary informative messages during rollout."
        }
      },
      "required": [
        "name"
      ]
    },
    "StepOperationInfo": {
      "description": "Detailed information of specific step execution.",
      "properties": {
        "deploymentName": {
          "type": "string",
          "readOnly": true,
          "description": "The name of the Azure Resource Manager deployment initiated as part of the step."
        },
        "correlationId": {
          "type": "string",
          "readOnly": true,
          "description": "Unique identifier to track the request for ARM-based resources."
        },
        "startTime": {
          "type": "string",
          "format": "date-time",
          "readOnly": true,
          "description": "Start time of the action in UTC."
        },
        "endTime": {
          "type": "string",
          "format": "date-time",
          "readOnly": true,
          "description": "End time of the action in UTC."
        },
        "lastUpdatedTime": {
          "type": "string",
          "format": "date-time",
          "readOnly": true,
          "description": "Last time in UTC this operation was updated."
        },
        "error": {
          "description": "The errors, if any, for the action.",
          "$ref": "#/definitions/CloudErrorBody"
        }
      }
    },
    "ResourceOperation": {
      "description": "Individial resource operation information.",
      "properties": {
        "resourceName": {
          "type": "string",
          "description": "Name of the resource as specified in the artifacts. For ARM resources, this is the name of the resource specified in the template."
        },
        "operationId": {
          "type": "string",
          "readOnly": true,
          "description": "Unique identifier of the operation. For ARM resources, this is the operationId obtained from ARM service."
        },
        "resourceType": {
          "type": "string",
          "description": "Type of the resource as specified in the artifacts. For ARM resources, this is the type of the resource specified in the template."
        },
        "provisioningState": {
          "type": "string",
          "readOnly": true,
          "description": "State of the resource deployment. For ARM resources, this is the current provisioning state of the resource."
        },
        "statusMessage": {
          "type": "string",
          "readOnly": true,
          "description": "Descriptive information of the resource operation."
        },
        "statusCode": {
          "type": "string",
          "readOnly": true,
          "description": "Http status code of the operation."
        }
      }
    },
    "Message": {
      "description": "Supplementary contextual messages during a rollout.",
      "properties": {
        "timeStamp": {
          "type": "string",
          "format": "date-time",
          "readOnly": true,
          "description": "Time in UTC this message was provided."
        },
        "message": {
          "type": "string",
          "readOnly": true,
          "description": "The actual message text."
        }
      }
    },
    "CloudError": {
      "description": "The error information object.",
      "x-ms-external": true,
      "properties": {
        "error": {
          "description": "The properties that define the error.",
          "$ref": "#/definitions/CloudErrorBody"
        }
      }
    },
    "CloudErrorBody": {
      "description": "Detailed error information of any failure.",
      "properties": {
        "code": {
          "type": "string",
          "readOnly": true,
          "description": "Error code string."
        },
        "message": {
          "type": "string",
          "readOnly": true,
          "description": "Descriptive error information."
        },
        "target": {
          "type": "string",
          "description": "Error target"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CloudErrorBody"
          },
          "description": "More detailed error information."
        }
      }
    },
    "OperationsList": {
      "description": "The list of supported operations.",
      "type": "array",
      "items": {
        "$ref": "#/definitions/Operation"
      }
    },
    "Operation": {
      "description": "Represents an operation that can be performed on the service.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the operation."
        },
        "display": {
          "description": "The display name of the operation.",
          "$ref": "#/definitions/OperationDetail"
        },
        "origin": {
          "type": "string",
          "description": "The origin of the operation."
        },
        "properties": {
          "description": "The properties of the operation.",
          "type": "object",
          "x-ms-client-flatten": true
        }
      }
    },
    "OperationDetail": {
      "description": "The detail about an operation.",
      "properties": {
        "provider": {
          "type": "string",
          "description": "The name of the provider that supports the operation."
        },
        "resource": {
          "type": "string",
          "description": "The resource type on which this operation can be performed."
        },
        "operation": {
          "type": "string",
          "description": "The name of the operation."
        },
        "description": {
          "type": "string",
          "description": "The description of the operation."
        }
      }
    },
    "StepResource": {
      "description": "The resource representation of a deployment step.",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v1/types.json#/definitions/TrackedResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "The properties for the resource.",
          "$ref": "#/definitions/StepProperties"
        }
      },
      "required": [
        "properties"
      ]
    },
    "StepProperties": {
      "description": "The properties of a step resource.",
      "type": "object",
      "discriminator": "stepType",
      "properties": {
        "stepType": {
          "type": "string",
          "description": "The type of step.",
          "example": "Wait"
        }
      },
      "required": [
        "stepType"
      ]
    },
    "WaitStepProperties": {
      "x-ms-discriminator-value": "Wait",
      "type": "object",
      "description": "Defines the properties of a Wait step.",
      "allOf": [
        {
          "$ref": "#/definitions/StepProperties"
        }
      ],
      "properties": {
        "attributes": {
          "description": "The Wait attributes",
          "$ref": "#/definitions/WaitStepAttributes"
        }
      }
    },
    "WaitStepAttributes": {
      "type": "object",
      "description": "The parameters for the wait step.",
      "properties": {
        "duration": {
          "type": "string",
          "description": "The duration in ISO 8601 format of how long the wait should be."
        }
      },
      "required": [
        "duration"
      ]
    }
  },
  "parameters": {
    "artifactSourceName": {
      "description": "The name of the artifact source.",
      "name": "artifactSourceName",
      "type": "string",
      "in": "path",
      "required": true,
      "x-ms-parameter-location": "method"
    },
    "serviceTopologyName": {
      "name": "serviceTopologyName",
      "in": "path",
      "description": "The name of the service topology .",
      "type": "string",
      "required": true,
      "x-ms-parameter-location": "method"
    },
    "serviceName": {
      "name": "serviceName",
      "in": "path",
      "description": "The name of the service resource.",
      "type": "string",
      "required": true,
      "x-ms-parameter-location": "method"
    },
    "serviceUnitName": {
      "name": "serviceUnitName",
      "in": "path",
      "description": "The name of the service unit resource.",
      "type": "string",
      "required": true,
      "x-ms-parameter-location": "method"
    },
    "stepName": {
      "name": "stepName",
      "in": "path",
      "description": "The name of the deployment step.",
      "type": "string",
      "required": true,
      "x-ms-parameter-location": "method"
    },
    "subscriptionId": {
      "name": "subscriptionId",
      "in": "path",
      "description": "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
      "type": "string",
      "required": true,
      "x-ms-parameter-location": "client"
    },
    "resourceGroupName": {
      "description": "The name of the resource group. The name is case insensitive.",
      "name": "resourceGroupName",
      "type": "string",
      "in": "path",
      "required": true,
      "x-ms-parameter-location": "method",
      "pattern": "^[-\\w\\._\\(\\)]+$",
      "minLength": 1,
      "maxLength": 90
    },
    "rolloutName": {
      "description": "The rollout name.",
      "name": "rolloutName",
      "type": "string",
      "in": "path",
      "required": true,
      "x-ms-parameter-location": "method"
    },
    "retryAttempt": {
      "name": "retryAttempt",
      "in": "query",
      "required": false,
      "type": "integer",
      "description": "Rollout retry attempt ordinal to get the result of. If not specified, result of the latest attempt will be returned.",
      "x-ms-parameter-location": "method"
    },
    "ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "required": true,
      "type": "string",
      "description": "The API version to use for this operation.",
      "x-ms-parameter-location": "client"
    }
  },
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "description": "Azure Active Directory OAuth2 Flow",
      "flow": "implicit",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  }
}