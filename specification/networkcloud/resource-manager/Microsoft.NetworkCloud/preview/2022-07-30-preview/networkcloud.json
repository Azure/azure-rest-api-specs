{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "https"
  ],
  "swagger": "2.0",
  "info": {
    "description": "The Network Cloud APIs provide management of the on-premises clusters and their resources, such as, racks, bare metal hosts, virtual machines, workload networks and more.",
    "title": "NetworkCloud",
    "version": "2022-07-30-preview"
  },
  "host": "management.azure.com",
  "paths": {
    "/providers/Microsoft.NetworkCloud/operations": {
      "get": {
        "description": "Get a list of all available resource provider operations. It contains a URL link to get the next set of results.",
        "summary": "List resource provider operations.",
        "operationId": "Operations_List",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/OperationListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List resource provider operations": {
            "$ref": "./examples/Operations_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.NetworkCloud/bareMetalMachines": {
      "get": {
        "description": "Get a list of bare metal machines in the provided subscription. The API returns 200 OK when the operation is successful.",
        "summary": "List bare metal machines in the subscription.",
        "operationId": "BareMetalMachines_ListBySubscription",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BareMetalMachineList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List bare metal machines for subscription": {
            "$ref": "./examples/BareMetalMachines_ListBySubscription.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.NetworkCloud/cloudServicesNetworks": {
      "get": {
        "description": "Get a list of cloud services networks in the provided subscription. The API returns 200 OK when the operation is successful.",
        "summary": "List cloud services networks in the subscription.",
        "operationId": "CloudServicesNetworks_ListBySubscription",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CloudServicesNetworkList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List cloud services networks for subscription": {
            "$ref": "./examples/CloudServicesNetworks_ListBySubscription.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.NetworkCloud/clusterManagers": {
      "get": {
        "description": "Get a list of cluster managers in the provided subscription.",
        "summary": "List cluster managers in the subscription.",
        "operationId": "ClusterManagers_ListBySubscription",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ClusterManagerList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List cluster managers for subscription": {
            "$ref": "./examples/ClusterManagers_ListBySubscription.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.NetworkCloud/clusters": {
      "get": {
        "description": "Get a list of clusters in the provided subscription.",
        "summary": "List clusters in the subscription.",
        "operationId": "Clusters_ListBySubscription",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ClusterList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List clusters for subscription": {
            "$ref": "./examples/Clusters_ListBySubscription.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.NetworkCloud/defaultCniNetworks": {
      "get": {
        "description": "Get a list of default CNI networks in the provided subscription. The API returns 200 OK when the operation is successful.",
        "summary": "List default CNI networks in the subscription.",
        "operationId": "DefaultCniNetworks_ListBySubscription",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DefaultCniNetworkList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List default CNI networks for subscription": {
            "$ref": "./examples/DefaultCniNetworks_ListBySubscription.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.NetworkCloud/disks": {
      "get": {
        "description": "Get a list of disks in the provided subscription. The API returns 200 OK when the operation is successful.",
        "summary": "List disks in the subscription.",
        "operationId": "Disks_ListBySubscription",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DiskList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List disks for subscription": {
            "$ref": "./examples/Disks_ListBySubscription.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.NetworkCloud/hybridAksClusters": {
      "get": {
        "description": "Get a list of additional details related to Hybrid AKS provisioned clusters in the provided subscription. The API returns 200 OK when the operation is successful.",
        "summary": "List additional details related to Hybrid AKS provisioned clusters in the subscription.",
        "operationId": "HybridAksClusters_ListBySubscription",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/HybridAksClusterList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List Hybrid AKS provisioned clusters data for subscription": {
            "$ref": "./examples/HybridAksClusters_ListBySubscription.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.NetworkCloud/l2Networks": {
      "get": {
        "description": "Get a list of layer 2 (L2) networks in the provided subscription. The API returns 200 OK when the operation is successful.",
        "summary": "List layer 2 (L2) networks in the subscription.",
        "operationId": "L2Networks_ListBySubscription",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/L2NetworkList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List L2 networks for subscription": {
            "$ref": "./examples/L2Networks_ListBySubscription.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.NetworkCloud/l3Networks": {
      "get": {
        "description": "Get a list of layer 3 (L3) networks in the provided subscription. The API returns 200 OK when the operation is successful.",
        "summary": "List layer 3 (L3) networks in the subscription.",
        "operationId": "L3Networks_ListBySubscription",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/L3NetworkList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List L3 networks for subscription": {
            "$ref": "./examples/L3Networks_ListBySubscription.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.NetworkCloud/rackSkus": {
      "get": {
        "description": "Get a list of rack SKUs in the provided subscription. The API returns 200 OK when the API is successful.",
        "summary": "List rack SKUs in the subscription.",
        "operationId": "RackSkus_ListBySubscription",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RackSkuList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List rack SKUs for subscription": {
            "$ref": "./examples/RackSkus_ListBySubscription.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.NetworkCloud/rackSkus/{rackSkuName}": {
      "get": {
        "description": "Get the properties of the provided rack SKU. The API returns 200 OK when the operation is successful.",
        "summary": "Retrieve the rack SKU.",
        "operationId": "RackSkus_Get",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/RackSkuNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RackSku"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get rack SKU resource": {
            "$ref": "./examples/RackSkus_Get.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.NetworkCloud/racks": {
      "get": {
        "description": "Get a list of racks in the provided subscription. The API returns 200 OK when the operation is successful.",
        "summary": "List racks in the subscription.",
        "operationId": "Racks_ListBySubscription",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RackList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List racks for subscription": {
            "$ref": "./examples/Racks_ListBySubscription.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.NetworkCloud/storageAppliances": {
      "get": {
        "description": "Get a list of storage appliances in the provided subscription. The API returns 200 OK when the operation is successful.",
        "summary": "List storage appliances in the subscription.",
        "operationId": "StorageAppliances_ListBySubscription",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/StorageApplianceList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List storage appliances for subscription": {
            "$ref": "./examples/StorageAppliances_ListBySubscription.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.NetworkCloud/trunkedNetworks": {
      "get": {
        "description": "Get a list of trunked networks in the provided subscription. The API returns 200 OK when the operation is successful.",
        "summary": "List trunked networks in the subscription.",
        "operationId": "TrunkedNetworks_ListBySubscription",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TrunkedNetworkList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List trunked networks for subscription": {
            "$ref": "./examples/TrunkedNetworks_ListBySubscription.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.NetworkCloud/virtualMachines": {
      "get": {
        "description": "Get a list of virtual machines in the provided subscription. The API returns 200 OK when the operation is successful.",
        "summary": "List virtual machines in the subscription.",
        "operationId": "VirtualMachines_ListBySubscription",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/VirtualMachineList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List virtual machines for subscription": {
            "$ref": "./examples/VirtualMachines_ListBySubscription.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetworkCloud/bareMetalMachines": {
      "get": {
        "description": "Get a list of bare metal machines in the provided resource group. The API returns 200 OK when the operation is successful.",
        "summary": "List bare metal machines in the resource group.",
        "operationId": "BareMetalMachines_ListByResourceGroup",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BareMetalMachineList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List bare metal machines for resource group": {
            "$ref": "./examples/BareMetalMachines_ListByResourceGroup.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetworkCloud/bareMetalMachines/{bareMetalMachineName}": {
      "get": {
        "description": "Get properties of the provided bare metal machine. The API returns 200 OK when the operation is successful.",
        "summary": "Retrieve the bare metal machine.",
        "operationId": "BareMetalMachines_Get",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/BareMetalMachineNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BareMetalMachine"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get bare metal machine": {
            "$ref": "./examples/BareMetalMachines_Get.json"
          }
        }
      },
      "put": {
        "description": "Create a new bare metal machine or update the properties of the existing one. The API returns 200 OK in case of the successful creation or update. 201 Created is returned when the operation is performed asynchronously.\nAll customer initiated requests will be rejected as the life cycle of this resource is managed by the system.",
        "summary": "Create or update the bare metal machine.",
        "operationId": "BareMetalMachines_CreateOrUpdate",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/BareMetalMachineNameParameter"
          },
          {
            "description": "The request body.",
            "name": "bareMetalMachineParameters",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/BareMetalMachine"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BareMetalMachine"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/BareMetalMachine"
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "The URL to retrieve the status of the asynchronous operation."
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Create or update bare metal machine": {
            "$ref": "./examples/BareMetalMachines_Create.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      },
      "delete": {
        "description": "Delete the provided bare metal machine. The API returns 200 OK when the deletion is successful. 202 Accepted is returned when the operation is performed asynchronously.",
        "summary": "Delete the bare metal machine.",
        "operationId": "BareMetalMachines_Delete",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/BareMetalMachineNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The URL to retrieve the status of the asynchronous operation."
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete bare metal machine": {
            "$ref": "./examples/BareMetalMachines_Delete.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      },
      "patch": {
        "description": "Patch properties of the provided bare metal machine, or update tags associated with the bare metal machine. Properties and tag updates can be done independently. The API returns 200 OK when the operation is successful. 202 Accepted is returned when the operation is performed asynchronously.",
        "summary": "Patch the bare metal machine.",
        "operationId": "BareMetalMachines_Update",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/BareMetalMachineNameParameter"
          },
          {
            "description": "The request body.",
            "name": "bareMetalMachineUpdateParameters",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/BareMetalMachinePatchParameters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BareMetalMachine"
            }
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/BareMetalMachine"
            },
            "headers": {
              "Location": {
                "type": "string",
                "description": "The URL to retrieve the status of the asynchronous operation."
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Patch bare metal machine": {
            "$ref": "./examples/BareMetalMachines_Patch.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetworkCloud/bareMetalMachines/{bareMetalMachineName}/cordon": {
      "post": {
        "description": "Cordon the provided bare metal machine's Kubernetes node. The API returns 202 Accepted as the operation is performed.",
        "summary": "Cordon the bare metal machine.",
        "operationId": "BareMetalMachines_Cordon",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/BareMetalMachineNameParameter"
          },
          {
            "description": "The request body.",
            "name": "bareMetalMachineCordonParameters",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/BareMetalMachineCordonParameters"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The URL to retrieve the status of the asynchronous operation."
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Cordon bare metal machine": {
            "$ref": "./examples/BareMetalMachines_Cordon.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetworkCloud/bareMetalMachines/{bareMetalMachineName}/powerOff": {
      "post": {
        "description": "Power off the provided bare metal machine. The API returns 202 Accepted as the operation is performed asynchronously.",
        "summary": "Power off the bare metal machine.",
        "operationId": "BareMetalMachines_PowerOff",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/BareMetalMachineNameParameter"
          },
          {
            "description": "The request body.",
            "name": "bareMetalMachinePowerOffParameters",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/BareMetalMachinePowerOffParameters"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The URL to retrieve the status of the asynchronous operation."
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Power off bare metal machine": {
            "$ref": "./examples/BareMetalMachines_PowerOff.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetworkCloud/bareMetalMachines/{bareMetalMachineName}/reimage": {
      "post": {
        "description": "Reimage the provided bare metal machine. The API returns 202 Accepted as the operation is performed asynchronously.",
        "summary": "Reimage the bare metal machine.",
        "operationId": "BareMetalMachines_Reimage",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/BareMetalMachineNameParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The URL to retrieve the status of the asynchronous operation."
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Reimage bare metal machine": {
            "$ref": "./examples/BareMetalMachines_Reimage.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetworkCloud/bareMetalMachines/{bareMetalMachineName}/replace": {
      "post": {
        "description": "Replace the provided bare metal machine. The API returns 202 Accepted as the operation is performed asynchronously.",
        "summary": "Replace (service) the bare metal machine.",
        "operationId": "BareMetalMachines_Replace",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/BareMetalMachineNameParameter"
          },
          {
            "description": "The request body.",
            "name": "bareMetalMachineReplaceParameters",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/BareMetalMachineReplaceParameters"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The URL to retrieve the status of the asynchronous operation."
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Replace bare metal machine": {
            "$ref": "./examples/BareMetalMachines_Replace.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetworkCloud/bareMetalMachines/{bareMetalMachineName}/restart": {
      "post": {
        "description": "Restart the provided bare metal machine. The API returns 202 Accepted as the operation is performed asynchronously.",
        "summary": "Restart the bare metal machine.",
        "operationId": "BareMetalMachines_Restart",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/BareMetalMachineNameParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The URL to retrieve the status of the asynchronous operation."
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Restart bare metal machine": {
            "$ref": "./examples/BareMetalMachines_Restart.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetworkCloud/bareMetalMachines/{bareMetalMachineName}/runCommand": {
      "post": {
        "description": "Run the command or the script on the provided bare metal machine. The API returns 202 Accepted as the operation is performed asynchronously. The URL to storage account with the command execution results and the command exit code can be retrieved from the operation status API once available.",
        "summary": "Run the command on the bare metal machine.",
        "operationId": "BareMetalMachines_RunCommand",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/BareMetalMachineNameParameter"
          },
          {
            "description": "The request body.",
            "name": "bareMetalMachineRunCommandParameters",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/BareMetalMachineRunCommandParameters"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The URL to retrieve the status of the asynchronous operation."
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Run command on bare metal machine": {
            "$ref": "./examples/BareMetalMachines_RunCommand.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetworkCloud/bareMetalMachines/{bareMetalMachineName}/runReadCommands": {
      "post": {
        "description": "Run and retrieve output from read only commands on the provided bare metal machine. The API returns 202 Accepted as the operation is performed asynchronously.",
        "summary": "Retrieve output from read-only commands exercised against a bare metal machine.",
        "operationId": "BareMetalMachines_RunReadCommands",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/BareMetalMachineNameParameter"
          },
          {
            "description": "The request body.",
            "name": "bareMetalMachineRunReadCommandsParameters",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/BareMetalMachineRunReadCommandsParameters"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The URL to retrieve the status of the asynchronous operation."
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Run and retrieve output from read only commands on bare metal machine.": {
            "$ref": "./examples/BareMetalMachines_RunReadCommands.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetworkCloud/bareMetalMachines/{bareMetalMachineName}/start": {
      "post": {
        "description": "Start the provided bare metal machine. The API returns 202 Accepted as the operation is performed asynchronously.",
        "summary": "Start the bare metal machine.",
        "operationId": "BareMetalMachines_Start",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/BareMetalMachineNameParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The URL to retrieve the status of the asynchronous operation."
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Start bare metal machine": {
            "$ref": "./examples/BareMetalMachines_Start.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetworkCloud/bareMetalMachines/{bareMetalMachineName}/uncordon": {
      "post": {
        "description": "Uncordon the provided bare metal machine's Kubernetes node. The API returns 202 Accepted as the operation is performed.",
        "summary": "Uncordon the bare metal machine.",
        "operationId": "BareMetalMachines_Uncordon",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/BareMetalMachineNameParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The URL to retrieve the status of the asynchronous operation."
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Uncordon bare metal machine": {
            "$ref": "./examples/BareMetalMachines_Uncordon.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetworkCloud/bareMetalMachines/{bareMetalMachineName}/validateHardware": {
      "post": {
        "description": "Validate the hardware of the provided bare metal machine. The API returns 202 Accepted as the operation is performed asynchronously.",
        "summary": "Trigger hardware validation of the bare metal machine.",
        "operationId": "BareMetalMachines_ValidateHardware",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/BareMetalMachineNameParameter"
          },
          {
            "description": "The request body.",
            "name": "bareMetalMachineValidateHardwareParameters",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/BareMetalMachineValidateHardwareParameters"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The URL to retrieve the status of the asynchronous operation."
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Validate the bare metal machine hardware": {
            "$ref": "./examples/BareMetalMachines_ValidateHardware.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetworkCloud/cloudServicesNetworks": {
      "get": {
        "description": "Get a list of cloud services networks in the provided resource group. The API returns 200 OK when the operation is successful.",
        "summary": "List cloud services networks in the resource group.",
        "operationId": "CloudServicesNetworks_ListByResourceGroup",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CloudServicesNetworkList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List cloud services networks for resource group": {
            "$ref": "./examples/CloudServicesNetworks_ListByResourceGroup.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetworkCloud/cloudServicesNetworks/{cloudServicesNetworkName}": {
      "get": {
        "description": "Get properties of the provided cloud services network. The API returns 200 OK when the operation is successful.",
        "summary": "Retrieve the cloud services network.",
        "operationId": "CloudServicesNetworks_Get",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/CloudServicesNetworkNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CloudServicesNetwork"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get cloud services network": {
            "$ref": "./examples/CloudServicesNetworks_Get.json"
          }
        }
      },
      "put": {
        "description": "Create a new cloud services network or update the properties of the existing cloud services network. The API returns 200 OK in case of the successful creation or update. 201 Created is returned when the operation is performed asynchronously.",
        "summary": "Create or update the cloud services network.",
        "operationId": "CloudServicesNetworks_CreateOrUpdate",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/CloudServicesNetworkNameParameter"
          },
          {
            "description": "The request body.",
            "name": "cloudServicesNetworkParameters",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/CloudServicesNetwork"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CloudServicesNetwork"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/CloudServicesNetwork"
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "The URL to retrieve the status of the asynchronous operation."
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Create or update cloud services network": {
            "$ref": "./examples/CloudServicesNetworks_Create.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      },
      "delete": {
        "description": "Delete the provided cloud services network. The API returns 200 OK when the deletion is successful. 202 Accepted is returned when the operation is performed asynchronously.",
        "summary": "Delete the cloud services network.",
        "operationId": "CloudServicesNetworks_Delete",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/CloudServicesNetworkNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The URL to retrieve the status of the asynchronous operation."
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete cloud services network": {
            "$ref": "./examples/CloudServicesNetworks_Delete.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      },
      "patch": {
        "description": "Update tags associated with the provided cloud services network. The API returns 200 OK when the operation is successful.",
        "summary": "Patch the cloud services network.",
        "operationId": "CloudServicesNetworks_Update",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/CloudServicesNetworkNameParameter"
          },
          {
            "description": "The request body.",
            "name": "cloudServicesNetworkUpdateParameters",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/CloudServicesNetworkPatchParameters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CloudServicesNetwork"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Patch cloud services network": {
            "$ref": "./examples/CloudServicesNetworks_Patch.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetworkCloud/clusterManagers": {
      "get": {
        "description": "Get a list of cluster managers in the provided resource group.",
        "summary": "List cluster managers in the resource group.",
        "operationId": "ClusterManagers_ListByResourceGroup",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ClusterManagerList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List cluster managers for resource group": {
            "$ref": "./examples/ClusterManagers_ListByResourceGroup.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetworkCloud/clusterManagers/{clusterManagerName}": {
      "get": {
        "description": "Get the properties of the provided cluster manager.",
        "summary": "Retrieve the cluster manager.",
        "operationId": "ClusterManagers_Get",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ClusterManagerNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ClusterManager"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get cluster manager": {
            "$ref": "./examples/ClusterManagers_Get.json"
          }
        }
      },
      "put": {
        "description": "Create a new cluster manager or update properties of the cluster manager if it exists. The API returns 200 OK in case of the successful creation or update. 201 Created is returned when the operation is performed asynchronously.",
        "summary": "Create or update the cluster manager.",
        "operationId": "ClusterManagers_CreateOrUpdate",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ClusterManagerNameParameter"
          },
          {
            "description": "The request body.",
            "name": "clusterManagerParameters",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/ClusterManager"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ClusterManager"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/ClusterManager"
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "The URL to retrieve the status of the asynchronous operation."
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Create or update cluster manager": {
            "$ref": "./examples/ClusterManagers_Create.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      },
      "delete": {
        "description": "Delete the provided cluster manager.The API returns 200 OK when the cluster manager is deleted successfully. 202 Accepted is returned when the operation is performed asynchronously.",
        "summary": "Delete the cluster manager.",
        "operationId": "ClusterManagers_Delete",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ClusterManagerNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The URL to retrieve the status of the asynchronous operation."
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete cluster manager": {
            "$ref": "./examples/ClusterManagers_Delete.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      },
      "patch": {
        "description": "Patch properties of the provided cluster manager, or update the tags assigned to the cluster manager. Properties and tag updates can be done independently. The API returns 200 OK when the operation is successful.",
        "summary": "Patch the cluster manager.",
        "operationId": "ClusterManagers_Update",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ClusterManagerNameParameter"
          },
          {
            "description": "The request body.",
            "name": "clusterManagerUpdateParameters",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/ClusterManagerPatchParameters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ClusterManager"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Patch cluster manager": {
            "$ref": "./examples/ClusterManagers_Patch.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetworkCloud/clusters": {
      "get": {
        "description": "Get a list of clusters in the provided resource group.",
        "summary": "List clusters in the resource group.",
        "operationId": "Clusters_ListByResourceGroup",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ClusterList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List clusters for resource group": {
            "$ref": "./examples/Clusters_ListByResourceGroup.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetworkCloud/clusters/{clusterName}": {
      "get": {
        "description": "Get properties of the provided cluster.",
        "summary": "Retrieve the cluster.",
        "operationId": "Clusters_Get",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ClusterNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Cluster"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get cluster": {
            "$ref": "./examples/Clusters_Get.json"
          }
        }
      },
      "put": {
        "description": "Create a new cluster or update the properties of the cluster if it exists. The API returns 200 OK in case of the successful creation or update. 201 Created is returned when the operation is performed asynchronously.",
        "summary": "Create or update the cluster.",
        "operationId": "Clusters_CreateOrUpdate",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ClusterNameParameter"
          },
          {
            "description": "The request body.",
            "name": "clusterParameters",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Cluster"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Cluster"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/Cluster"
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "The URL to retrieve the status of the asynchronous operation."
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Create or update cluster": {
            "$ref": "./examples/Clusters_Create.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      },
      "delete": {
        "description": "Delete the provided cluster. The API returns 200 OK when the deletion is successful. 202 Accepted is returned when the operation is performed asynchronously.",
        "summary": "Delete the cluster.",
        "operationId": "Clusters_Delete",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ClusterNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The URL to retrieve the status of the asynchronous operation."
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete cluster": {
            "$ref": "./examples/Clusters_Delete.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      },
      "patch": {
        "description": "Patch the properties of the provided cluster, or update the tags associated with the cluster. Properties and tag updates can be done independently. The API returns 200 OK when the update is successful. 202 Accepted is returned when the operation is performed asynchronously.",
        "summary": "Patch the cluster.",
        "operationId": "Clusters_Update",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ClusterNameParameter"
          },
          {
            "description": "The request body.",
            "name": "clusterUpdateParameters",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/ClusterPatchParameters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Cluster"
            }
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/Cluster"
            },
            "headers": {
              "Location": {
                "type": "string",
                "description": "The URL to retrieve the status of the asynchronous operation."
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Patch cluster": {
            "$ref": "./examples/Clusters_Patch.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetworkCloud/clusters/{clusterName}/deploy": {
      "post": {
        "description": "Deploy the cluster to the provided rack. The API returns 202 Accepted as the operation is performed asynchronously.",
        "summary": "Deploy the cluster to the rack.",
        "operationId": "Clusters_Deploy",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ClusterNameParameter"
          },
          {
            "description": "The request body.",
            "name": "clusterDeployParameters",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/ClusterDeployParameters"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The URL to retrieve the status of the asynchronous operation."
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Deploy cluster": {
            "$ref": "./examples/Clusters_Deploy.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetworkCloud/clusters/{clusterName}/updateVersion": {
      "post": {
        "description": "Update the version of the provided cluster to one of the available supported versions. The API returns 202 Accepted as the operation is performed asynchronously.",
        "summary": "Update the cluster version.",
        "operationId": "Clusters_UpdateVersion",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ClusterNameParameter"
          },
          {
            "description": "The request body.",
            "name": "clusterUpdateVersionParameters",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/ClusterUpdateVersionParameters"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The URL to retrieve the status of the asynchronous operation."
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Update cluster version": {
            "$ref": "./examples/Clusters_UpdateVersion.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetworkCloud/defaultCniNetworks": {
      "get": {
        "description": "Get a list of default CNI networks in the provided resource group. The API returns 200 OK when the operation is successful.",
        "summary": "List default CNI networks in the resource group.",
        "operationId": "DefaultCniNetworks_ListByResourceGroup",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DefaultCniNetworkList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List default CNI networks for resource group": {
            "$ref": "./examples/DefaultCniNetworks_ListByResourceGroup.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetworkCloud/defaultCniNetworks/{defaultCniNetworkName}": {
      "get": {
        "description": "Get properties of the provided default CNI network. The API returns 200 OK when the API operation is successful.",
        "summary": "Retrieve the default CNI network.",
        "operationId": "DefaultCniNetworks_Get",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/DefaultCniNetworkNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DefaultCniNetwork"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get default CNI network": {
            "$ref": "./examples/DefaultCniNetworks_Get.json"
          }
        }
      },
      "put": {
        "description": "Create a new default CNI network or update the properties of the existing default CNI network. The API returns 200 OK in case of the successful creation or update. 201 Created is returned when the operation is performed asynchronously.",
        "summary": "Create or update the default CNI network.",
        "operationId": "DefaultCniNetworks_CreateOrUpdate",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/DefaultCniNetworkNameParameter"
          },
          {
            "description": "The request body.",
            "name": "defaultCniNetworkParameters",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/DefaultCniNetwork"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DefaultCniNetwork"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/DefaultCniNetwork"
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "The URL to retrieve the status of the asynchronous operation."
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Create or update default CNI network": {
            "$ref": "./examples/DefaultCniNetworks_Create.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      },
      "delete": {
        "description": "Delete the provided default CNI network. The API returns 200 OK when the deletion is successful. 202 Accepted is returned when the operation is performed asynchronously.",
        "summary": "Delete the default CNI network.",
        "operationId": "DefaultCniNetworks_Delete",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/DefaultCniNetworkNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The URL to retrieve the status of the asynchronous operation."
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete default CNI network": {
            "$ref": "./examples/DefaultCniNetworks_Delete.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      },
      "patch": {
        "description": "Update tags associated with the provided default CNI network. The API returns 200 OK when the operation is successful.",
        "summary": "Patch the default CNI network.",
        "operationId": "DefaultCniNetworks_Update",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/DefaultCniNetworkNameParameter"
          },
          {
            "description": "The request body.",
            "name": "defaultCniNetworkUpdateParameters",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/DefaultCniNetworkPatchParameters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DefaultCniNetwork"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Patch default CNI network": {
            "$ref": "./examples/DefaultCniNetworks_Patch.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetworkCloud/disks": {
      "get": {
        "description": "Get a list of disks in the provided resource group. The API returns 200 OK when the operation is successful.",
        "summary": "List disks in the resource group.",
        "operationId": "Disks_ListByResourceGroup",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DiskList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List disks for resource group": {
            "$ref": "./examples/Disks_ListByResourceGroup.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetworkCloud/disks/{diskName}": {
      "get": {
        "description": "Get properties of the provided disk. The API returns 200 OK when the operation is successful.",
        "summary": "Retrieve the disk.",
        "operationId": "Disks_Get",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/DiskNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Disk"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get disk": {
            "$ref": "./examples/Disks_Get.json"
          }
        }
      },
      "put": {
        "description": "Create a new disk or update the properties of the disk if it exists. The API returns 200 OK in case of the successful creation or update. 201 Created is returned when the operation is performed asynchronously.",
        "summary": "Create or update the disk.",
        "operationId": "Disks_CreateOrUpdate",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/DiskNameParameter"
          },
          {
            "description": "The request body.",
            "name": "diskParameters",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Disk"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Disk"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/Disk"
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "The URL to retrieve the status of the asynchronous operation."
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Create or update disk": {
            "$ref": "./examples/Disks_Create.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      },
      "delete": {
        "description": "Delete the provided disk. The API returns 200 OK when the deletion is successful. 202 Accepted is returned when the operation is performed asynchronously.",
        "summary": "Delete the disk.",
        "operationId": "Disks_Delete",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/DiskNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The URL to retrieve the status of the asynchronous operation."
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete disk": {
            "$ref": "./examples/Disks_Delete.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      },
      "patch": {
        "description": "Update tags associated with the disk. The API returns 200 OK when the operation is successful.",
        "summary": "Patch the disk.",
        "operationId": "Disks_Update",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/DiskNameParameter"
          },
          {
            "description": "The request body.",
            "name": "diskUpdateParameters",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/DiskPatchParameters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Disk"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Patch disk": {
            "$ref": "./examples/Disks_Patch.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetworkCloud/hybridAksClusters": {
      "get": {
        "description": "Get a list of additional details for Hybrid AKS provisioned clusters in the provided resource group. The API returns 200 OK when the operation is successful.",
        "summary": "List additional details related to Hybrid AKS provisioned clusters in the resource group.",
        "operationId": "HybridAksClusters_ListByResourceGroup",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/HybridAksClusterList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List Hybrid AKS provisioned clusters data for resource group": {
            "$ref": "./examples/HybridAksClusters_ListByResourceGroup.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetworkCloud/hybridAksClusters/{hybridAksClusterName}": {
      "get": {
        "description": "Get the additional details related to the provided Hybrid AKS provisioned cluster. The API returns 200 OK when the operation is successful.",
        "summary": "Retrieve the additional details related to the Hybrid AKS provisioned cluster.",
        "operationId": "HybridAksClusters_Get",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/HybridAksClusterNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/HybridAksCluster"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get Hybrid AKS provisioned cluster data": {
            "$ref": "./examples/HybridAksClusters_Get.json"
          }
        }
      },
      "put": {
        "description": "Create new additional details related to the Hybrid AKS provisioned cluster or update the existing one. The API returns 200 OK in case of the successful creation or update. 201 Created is returned when the operation is performed asynchronously.\nAll customer initiated requests will be rejected as the life cycle of this resource is managed by the system.",
        "summary": "Create or update the additional details related to the Hybrid AKS provisioned cluster.",
        "operationId": "HybridAksClusters_CreateOrUpdate",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/HybridAksClusterNameParameter"
          },
          {
            "description": "The request body.",
            "name": "hybridAksClusterParameters",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/HybridAksCluster"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/HybridAksCluster"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/HybridAksCluster"
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "The URL to retrieve the status of the asynchronous operation."
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Create or update Hybrid AKS provisioned cluster data": {
            "$ref": "./examples/HybridAksClusters_Create.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      },
      "delete": {
        "description": "Delete the additional details related to the provided Hybrid AKS provisioned cluster. The API returns 200 OK when the deletion is successful. 202 Accepted is returned when the operation is performed asynchronously.",
        "summary": "Delete the additional details related to the Hybrid AKS provisioned cluster.",
        "operationId": "HybridAksClusters_Delete",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/HybridAksClusterNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The URL to retrieve the status of the asynchronous operation."
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete Hybrid AKS provisioned cluster data": {
            "$ref": "./examples/HybridAksClusters_Delete.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      },
      "patch": {
        "description": "Update tags associated with the additional details related to the Hybrid AKS provisioned cluster. The API returns 200 OK when the operation is successful.",
        "summary": "Patch the additional details related to the Hybrid AKS provisioned cluster.",
        "operationId": "HybridAksClusters_Update",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/HybridAksClusterNameParameter"
          },
          {
            "description": "The request body.",
            "name": "hybridAksClusterUpdateParameters",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/HybridAksClusterPatchParameters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/HybridAksCluster"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Patch Hybrid AKS provisioned cluster data": {
            "$ref": "./examples/HybridAksClusters_Patch.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetworkCloud/hybridAksClusters/{hybridAksClusterName}/restartNode": {
      "post": {
        "description": "Restart a targeted node of a Hybrid AKS cluster. The API returns a 202 Accepted as the operation is performed asynchronously.",
        "summary": "Restart a targeted node.",
        "operationId": "HybridAksClusters_RestartNode",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/HybridAksClusterNameParameter"
          },
          {
            "description": "The request body.",
            "name": "hybridAksClusterRestartNodeParameters",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/HybridAksClusterRestartNodeParameters"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The URL to retrieve the status of the asynchronous operation."
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Restart a Hybrid AKS cluster node": {
            "$ref": "./examples/HybridAksClusters_RestartNode.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetworkCloud/l2Networks": {
      "get": {
        "description": "Get a list of layer 2 (L2) networks in the provided resource group. The API returns 200 OK when the operation is successful.",
        "summary": "List layer 2 (L2) networks in the resource group.",
        "operationId": "L2Networks_ListByResourceGroup",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/L2NetworkList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List L2 networks for resource group": {
            "$ref": "./examples/L2Networks_ListByResourceGroup.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetworkCloud/l2Networks/{l2NetworkName}": {
      "get": {
        "description": "Get properties of the provided layer 2 (L2) network. The API returns 200 OK when the operation is successful.",
        "summary": "Retrieve the layer 2 (L2) network.",
        "operationId": "L2Networks_Get",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/L2NetworkNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/L2Network"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get L2 network": {
            "$ref": "./examples/L2Networks_Get.json"
          }
        }
      },
      "put": {
        "description": "Create a new layer 2 (L2) network or update the properties of the existing L2 network. The API returns 200 OK in case of the successful creation or update. 201 Created is returned when the operation is performed asynchronously.",
        "summary": "Create or update the layer 2 (L2) network.",
        "operationId": "L2Networks_CreateOrUpdate",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/L2NetworkNameParameter"
          },
          {
            "description": "The request body.",
            "name": "l2NetworkParameters",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/L2Network"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/L2Network"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/L2Network"
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "The URL to retrieve the status of the asynchronous operation."
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Create or update L2 network": {
            "$ref": "./examples/L2Networks_Create.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      },
      "delete": {
        "description": "Delete the provided L2 network. The API returns 200 OK when the deletion is successful. 202 Accepted is returned when the operation is performed asynchronously.",
        "summary": "Delete the L2 network.",
        "operationId": "L2Networks_Delete",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/L2NetworkNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The URL to retrieve the status of the asynchronous operation."
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete L2 network": {
            "$ref": "./examples/L2Networks_Delete.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      },
      "patch": {
        "description": "Update tags associated with the provided layer 2 (L2) network. The API returns 200 OK when the operation is successful.",
        "summary": "Patch the layer 2 (L2) network.",
        "operationId": "L2Networks_Update",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/L2NetworkNameParameter"
          },
          {
            "description": "The request body.",
            "name": "l2NetworkUpdateParameters",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/L2NetworkPatchParameters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/L2Network"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Patch L2 network": {
            "$ref": "./examples/L2Networks_Patch.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetworkCloud/l3Networks": {
      "get": {
        "description": "Get a list of layer 3 (L3) networks in the provided resource group. The API returns 200 OK when the operation is successful.",
        "summary": "List layer 3 (L3) networks in the resource group.",
        "operationId": "L3Networks_ListByResourceGroup",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/L3NetworkList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List L3 networks for resource group": {
            "$ref": "./examples/L3Networks_ListByResourceGroup.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetworkCloud/l3Networks/{l3NetworkName}": {
      "get": {
        "description": "Get properties of the provided layer 3 (L3) network. The API returns 200 OK when the operation is successful.",
        "summary": "Retrieve the layer 3 (L3) network.",
        "operationId": "L3Networks_Get",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/L3NetworkNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/L3Network"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get L3network": {
            "$ref": "./examples/L3Networks_Get.json"
          }
        }
      },
      "put": {
        "description": "Create a new layer 3 (L3) network or update the properties of the existing L3 network. The API returns 200 OK in case of the successful creation or update. 201 Created is returned when the operation is performed asynchronously.",
        "summary": "Create or update the layer 3 (L3) network.",
        "operationId": "L3Networks_CreateOrUpdate",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/L3NetworkNameParameter"
          },
          {
            "description": "The request body.",
            "name": "l3NetworkParameters",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/L3Network"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/L3Network"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/L3Network"
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "The URL to retrieve the status of the asynchronous operation."
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Create or update L3 network": {
            "$ref": "./examples/L3Networks_Create.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      },
      "delete": {
        "description": "Delete the provided layer 3 (L3) network. The API returns 200 OK when the deletion is successful. 202 Accepted is returned when the operation is performed asynchronously.",
        "summary": "Delete the layer 3 (L3) network.",
        "operationId": "L3Networks_Delete",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/L3NetworkNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The URL to retrieve the status of the asynchronous operation."
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete L3 network": {
            "$ref": "./examples/L3Networks_Delete.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      },
      "patch": {
        "description": "Update tags associated with the provided layer 3 (L3) network. The API returns 200 OK when the operation is successful.",
        "summary": "Patch the layer 3 (L3) network.",
        "operationId": "L3Networks_Update",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/L3NetworkNameParameter"
          },
          {
            "description": "The request body.",
            "name": "l3NetworkUpdateParameters",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/L3NetworkPatchParameters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/L3Network"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Patch L3 network": {
            "$ref": "./examples/L3Networks_Patch.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetworkCloud/racks": {
      "get": {
        "description": "Get a list of racks in the provided resource group. The API returns 200 OK when the operation is successful.",
        "summary": "List racks in the resource group.",
        "operationId": "Racks_ListByResourceGroup",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RackList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List racks for resource group": {
            "$ref": "./examples/Racks_ListByResourceGroup.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetworkCloud/racks/{rackName}": {
      "get": {
        "description": "Get properties of the provided rack. The API returns 200 OK when the operation is successful.",
        "summary": "Retrieve the rack.",
        "operationId": "Racks_Get",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/RackNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Rack"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get rack": {
            "$ref": "./examples/Racks_Get.json"
          }
        }
      },
      "put": {
        "description": "Create a new rack or update properties of the existing one. The API returns 200 OK in case of the successful update. 201 Created is returned when the operation is performed asynchronously.\nAll customer initiated requests will be rejected as the life cycle of this resource is managed by the system.",
        "summary": "Create or update the rack.",
        "operationId": "Racks_CreateOrUpdate",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/RackNameParameter"
          },
          {
            "description": "The request body.",
            "name": "rackParameters",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Rack"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Rack"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/Rack"
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "The URL to retrieve the status of the asynchronous operation."
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Create or update rack": {
            "$ref": "./examples/Racks_Create.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      },
      "delete": {
        "description": "Delete the provided rack. The API returns 200 OK when the deletion is successful. 202 Accepted is returned when the operation is performed asynchronously.",
        "summary": "Delete the rack.",
        "operationId": "Racks_Delete",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/RackNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The URL to retrieve the status of the asynchronous operation."
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete rack": {
            "$ref": "./examples/Racks_Delete.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      },
      "patch": {
        "description": "Patch properties of the provided rack, or update the tags associated with the rack. Properties and tag updates can be done independently. The API returns 200 OK when the update is successful. 202 Accepted is returned when the operation is performed asynchronously.",
        "summary": "Patch the rack.",
        "operationId": "Racks_Update",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/RackNameParameter"
          },
          {
            "description": "The request body.",
            "name": "rackUpdateParameters",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/RackPatchParameters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Rack"
            }
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/Rack"
            },
            "headers": {
              "Location": {
                "type": "string",
                "description": "The URL to retrieve the status of the asynchronous operation."
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Patch rack": {
            "$ref": "./examples/Racks_Patch.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetworkCloud/storageAppliances": {
      "get": {
        "description": "Get a list of storage appliances in the provided resource group. The API returns 200 OK when the operation is successful.",
        "summary": "List storage appliances in the resource group.",
        "operationId": "StorageAppliances_ListByResourceGroup",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/StorageApplianceList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List storage appliances for resource group": {
            "$ref": "./examples/StorageAppliances_ListByResourceGroup.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetworkCloud/storageAppliances/{storageApplianceName}": {
      "get": {
        "description": "Get properties of the provided storage appliance. The API returns 200 OK when the operation is successful.",
        "summary": "Retrieve the storage appliance.",
        "operationId": "StorageAppliances_Get",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/StorageApplianceNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/StorageAppliance"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get storage appliance": {
            "$ref": "./examples/StorageAppliances_Get.json"
          }
        }
      },
      "put": {
        "description": "Create a new storage appliance or update the properties of the existing one. The API returns 200 OK in case of the successful creation or update. 201 Created is returned when the operation is performed asynchronously.\nAll customer initiated requests will be rejected as the life cycle of this resource is managed by the system.",
        "summary": "Create or update the storage appliance.",
        "operationId": "StorageAppliances_CreateOrUpdate",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/StorageApplianceNameParameter"
          },
          {
            "description": "The request body.",
            "name": "storageApplianceParameters",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/StorageAppliance"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/StorageAppliance"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/StorageAppliance"
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "The URL to retrieve the status of the asynchronous operation."
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Create or update storage appliance": {
            "$ref": "./examples/StorageAppliances_Create.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      },
      "delete": {
        "description": "Delete the provided storage appliance. The API returns 200 OK when the deletion is successful. 202 Accepted is returned when the operation is performed asynchronously.",
        "summary": "Delete the storage appliance.",
        "operationId": "StorageAppliances_Delete",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/StorageApplianceNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The URL to retrieve the status of the asynchronous operation."
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete storage appliance": {
            "$ref": "./examples/StorageAppliances_Delete.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      },
      "patch": {
        "description": "Patch properties of the provided bare metal machine, or update tags associated with the bare metal machine. Properties and tag updates can be done independently. The API returns 200 OK when the operation is successful. 202 Accepted is returned when the operation is performed asynchronously.",
        "summary": "Patch the storage appliance.",
        "operationId": "StorageAppliances_Update",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/StorageApplianceNameParameter"
          },
          {
            "description": "The request body.",
            "name": "storageApplianceUpdateParameters",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/StorageAppliancePatchParameters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/StorageAppliance"
            }
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/StorageAppliance"
            },
            "headers": {
              "Location": {
                "type": "string",
                "description": "The URL to retrieve the status of the asynchronous operation."
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Patch storage appliance": {
            "$ref": "./examples/StorageAppliances_Patch.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetworkCloud/storageAppliances/{storageApplianceName}/disableRemoteVendorManagement": {
      "post": {
        "description": "Disable remote vendor management of the provided storage appliance. The API returns 202 Accepted as the operation is performed asynchronously.",
        "summary": "Turn off remote vendor management for a storage appliance, if supported.",
        "operationId": "StorageAppliances_DisableRemoteVendorManagement",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/StorageApplianceNameParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The URL to retrieve the status of the asynchronous operation."
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Turn off remote vendor management for storage appliance": {
            "$ref": "./examples/StorageAppliances_DisableRemoteVendorManagement.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetworkCloud/storageAppliances/{storageApplianceName}/enableRemoteVendorManagement": {
      "post": {
        "description": "Enable remote vendor management of the provided storage appliance. The API returns 202 Accepted as the operation is performed asynchronously.",
        "summary": "Turn on remote vendor management for a storage appliance, if supported.",
        "operationId": "StorageAppliances_EnableRemoteVendorManagement",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/StorageApplianceNameParameter"
          },
          {
            "description": "The request body.",
            "name": "storageApplianceEnableRemoteVendorManagementParameters",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/StorageApplianceEnableRemoteVendorManagementParameters"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The URL to retrieve the status of the asynchronous operation."
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Turn on remote vendor management for storage appliance": {
            "$ref": "./examples/StorageAppliances_EnableRemoteVendorManagement.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetworkCloud/storageAppliances/{storageApplianceName}/runReadCommands": {
      "post": {
        "description": "Run and retrieve output from read only commands on the provided storage appliance. The API returns 202 Accepted as the operation is performed asynchronously.",
        "summary": "Retrieve output from read-only commands exercised against a storage appliance.",
        "operationId": "StorageAppliances_RunReadCommands",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/StorageApplianceNameParameter"
          },
          {
            "description": "The request body.",
            "name": "storageApplianceRunReadCommandsParameters",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/StorageApplianceRunReadCommandsParameters"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The URL to retrieve the status of the asynchronous operation."
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Run and retrieve output from read only commands on storage appliance.": {
            "$ref": "./examples/StorageAppliances_RunReadCommands.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetworkCloud/storageAppliances/{storageApplianceName}/validateHardware": {
      "post": {
        "description": "Validate the hardware of the provided storage appliance. The API returns 202 Accepted as the operation is performed asynchronously.",
        "summary": "Trigger hardware validation of the storage appliance.",
        "operationId": "StorageAppliances_ValidateHardware",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/StorageApplianceNameParameter"
          },
          {
            "description": "The request body.",
            "name": "storageApplianceValidateHardwareParameters",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/StorageApplianceValidateHardwareParameters"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The URL to retrieve the status of the asynchronous operation."
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Validate the storage appliance hardware": {
            "$ref": "./examples/StorageAppliances_ValidateHardware.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetworkCloud/trunkedNetworks": {
      "get": {
        "description": "Get a list of trunked networks in the provided resource group. The API returns 200 OK when the operation is successful.",
        "summary": "List trunked networks in the resource group.",
        "operationId": "TrunkedNetworks_ListByResourceGroup",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TrunkedNetworkList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List Trunked networks for resource group": {
            "$ref": "./examples/TrunkedNetworks_ListByResourceGroup.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetworkCloud/trunkedNetworks/{trunkedNetworkName}": {
      "get": {
        "description": "Get properties of the provided trunked network. The API returns 200 OK when the API operation is successful.",
        "summary": "Retrieve the trunked network.",
        "operationId": "TrunkedNetworks_Get",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/TrunkedNetworkNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TrunkedNetwork"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get Trunked network": {
            "$ref": "./examples/TrunkedNetworks_Get.json"
          }
        }
      },
      "put": {
        "description": "Create a new trunked network or update the properties of the existing trunked network. The API returns 200 OK in case of the successful creation or update. 201 Created is returned when the operation is performed asynchronously.",
        "summary": "Create or update the trunked network.",
        "operationId": "TrunkedNetworks_CreateOrUpdate",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/TrunkedNetworkNameParameter"
          },
          {
            "description": "The request body.",
            "name": "trunkedNetworkParameters",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/TrunkedNetwork"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TrunkedNetwork"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/TrunkedNetwork"
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "The URL to retrieve the status of the asynchronous operation."
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Create or update trunked network": {
            "$ref": "./examples/TrunkedNetworks_Create.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      },
      "delete": {
        "description": "Delete the provided trunked network. The API returns 200 OK when the deletion is successful. 202 Accepted is returned when the operation is performed asynchronously.",
        "summary": "Delete the trunked network.",
        "operationId": "TrunkedNetworks_Delete",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/TrunkedNetworkNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The URL to retrieve the status of the asynchronous operation."
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete trunked network": {
            "$ref": "./examples/TrunkedNetworks_Delete.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      },
      "patch": {
        "description": "Update tags associated with the provided trunked network. The API returns 200 OK when the operation is successful.",
        "summary": "Patch the trunked network.",
        "operationId": "TrunkedNetworks_Update",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/TrunkedNetworkNameParameter"
          },
          {
            "description": "The request body.",
            "name": "trunkedNetworkUpdateParameters",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/TrunkedNetworkPatchParameters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TrunkedNetwork"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Patch trunked network": {
            "$ref": "./examples/TrunkedNetworks_Patch.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetworkCloud/virtualMachines": {
      "get": {
        "description": "Get a list of virtual machines in the provided resource group. The API returns 200 OK when the operation is successful.",
        "summary": "List virtual machines in the resource group.",
        "operationId": "VirtualMachines_ListByResourceGroup",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/VirtualMachineList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List virtual machines for resource group": {
            "$ref": "./examples/VirtualMachines_ListByResourceGroup.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetworkCloud/virtualMachines/{virtualMachineName}": {
      "get": {
        "description": "Get properties of the provided virtual machine. The API returns 200 OK when the operation is successful.",
        "summary": "Retrieve the virtual machine.",
        "operationId": "VirtualMachines_Get",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/VirtualMachineNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/VirtualMachine"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get virtual machine": {
            "$ref": "./examples/VirtualMachines_Get.json"
          }
        }
      },
      "put": {
        "description": "Create a new virtual machine or update the properties of the existing virtual machine. The API returns 200 OK in case of the successful creation or update. 201 Created is returned when the operation is performed asynchronously.",
        "summary": "Create or update the virtual machine.",
        "operationId": "VirtualMachines_CreateOrUpdate",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/VirtualMachineNameParameter"
          },
          {
            "description": "The request body.",
            "name": "virtualMachineParameters",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/VirtualMachine"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/VirtualMachine"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/VirtualMachine"
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "The URL to retrieve the status of the asynchronous operation."
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Create or update virtual machine": {
            "$ref": "./examples/VirtualMachines_Create.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      },
      "delete": {
        "description": "Delete the provided virtual machine. The API returns 200 OK when the deletion is successful. 202 Accepted is returned when the operation is performed asynchronously.",
        "summary": "Delete the virtual machine.",
        "operationId": "VirtualMachines_Delete",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/VirtualMachineNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The URL to retrieve the status of the asynchronous operation."
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete virtual machine": {
            "$ref": "./examples/VirtualMachines_Delete.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      },
      "patch": {
        "description": "Update tags associated with the virtual machine. The API returns 200 OK when the operation is successful.",
        "summary": "Patch the virtual machine.",
        "operationId": "VirtualMachines_Update",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/VirtualMachineNameParameter"
          },
          {
            "description": "The request body.",
            "name": "virtualMachineUpdateParameters",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/VirtualMachinePatchParameters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/VirtualMachine"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Patch virtual machine": {
            "$ref": "./examples/VirtualMachines_Patch.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetworkCloud/virtualMachines/{virtualMachineName}/powerOff": {
      "post": {
        "description": "Power off the provided virtual machine. The API returns 202 Accepted as the operation is performed asynchronously.",
        "summary": "Power off the virtual machine.",
        "operationId": "VirtualMachines_PowerOff",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/VirtualMachineNameParameter"
          },
          {
            "description": "The request body.",
            "name": "virtualMachinePowerOffParameters",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/VirtualMachinePowerOffParameters"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The URL to retrieve the status of the asynchronous operation."
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Power off virtual machine": {
            "$ref": "./examples/VirtualMachines_PowerOff.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetworkCloud/virtualMachines/{virtualMachineName}/reimage": {
      "post": {
        "description": "Reimage the provided virtual machine. The API returns 202 Accepted as the operation is performed asynchronously.",
        "summary": "Reimage the virtual machine.",
        "operationId": "VirtualMachines_Reimage",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/VirtualMachineNameParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The URL to retrieve the status of the asynchronous operation."
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Reimage virtual machine": {
            "$ref": "./examples/VirtualMachines_Reimage.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetworkCloud/virtualMachines/{virtualMachineName}/restart": {
      "post": {
        "description": "Restart the provided virtual machine. The API returns 202 Accepted as the operation is performed asynchronously.",
        "summary": "Restart the virtual machine.",
        "operationId": "VirtualMachines_Restart",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/VirtualMachineNameParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The URL to retrieve the status of the asynchronous operation."
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Restart virtual machine": {
            "$ref": "./examples/VirtualMachines_Restart.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetworkCloud/virtualMachines/{virtualMachineName}/start": {
      "post": {
        "description": "Start the provided virtual machine. The API returns 202 Accepted as the operation is performed asynchronously.",
        "summary": "Start the virtual machine.",
        "operationId": "VirtualMachines_Start",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/VirtualMachineNameParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The URL to retrieve the status of the asynchronous operation."
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Start virtual machine": {
            "$ref": "./examples/VirtualMachines_Start.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    }
  },
  "definitions": {
    "BareMetalMachine": {
      "type": "object",
      "title": "BareMetalMachine represents the physical machine in the rack.",
      "required": [
        "extendedLocation",
        "properties"
      ],
      "properties": {
        "extendedLocation": {
          "$ref": "#/definitions/ExtendedLocation",
          "description": "The extended location of the cluster associated with the resource."
        },
        "properties": {
          "$ref": "#/definitions/BareMetalMachineProperties",
          "description": "The list of the resource properties.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/TrackedResource"
        }
      ],
      "x-ms-azure-resource": true
    },
    "BareMetalMachineCommandSpecification": {
      "type": "object",
      "title": "BareMetalMachineCommandSpecification represents the command and optional arguments to exercise against the bare metal machine.",
      "required": [
        "command"
      ],
      "properties": {
        "arguments": {
          "description": "The list of string arguments that will be passed to the script in order as separate arguments.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "command": {
          "description": "The command to exercise against the bare metal machine.",
          "type": "string",
          "enum": [
            "Traceroute",
            "Ping",
            "Ethtool",
            "KubectlLogs",
            "KubectlGet",
            "KubectlDescribe",
            "Ifconfig",
            "IpRouteShowTableAll",
            "Netstat",
            "Numastat",
            "Numactl",
            "Route",
            "VirshList",
            "Tcpdump"
          ],
          "x-ms-enum": {
            "modelAsString": true,
            "name": "BareMetalMachineRunReadCommands"
          }
        }
      }
    },
    "BareMetalMachineConfigurationData": {
      "type": "object",
      "title": "BareMetalMachineConfigurationData represents configuration for the bare metal machine.",
      "required": [
        "rackSlot",
        "bootMacAddress",
        "bmcCredentials",
        "bmcMacAddress",
        "serialNumber"
      ],
      "properties": {
        "bmcConnectionString": {
          "description": "The connection string for the baseboard management controller including IP address and protocol.",
          "type": "string",
          "readOnly": true
        },
        "bmcCredentials": {
          "$ref": "#/definitions/DeviceAdministrativeCredentials"
        },
        "bmcMacAddress": {
          "description": "The MAC address of the BMC for this machine.",
          "type": "string"
        },
        "bootMacAddress": {
          "description": "The MAC address associated with the PXE NIC card.",
          "type": "string"
        },
        "machineDetails": {
          "description": "The free-form additional information about the machine, e.g. an asset tag.",
          "type": "string"
        },
        "machineName": {
          "description": "The user-provided name for the bare metal machine created from this specification.\nIf not provided, the machine name will be generated programmatically.",
          "type": "string"
        },
        "rackSlot": {
          "description": "The slot the physical machine is in the rack based on the BOM configuration.",
          "type": "integer",
          "format": "int64",
          "maxLength": 256,
          "minLength": 1
        },
        "serialNumber": {
          "description": "The serial number of the machine. Hardware suppliers may use an alternate value. For example, service tag.",
          "type": "string"
        }
      }
    },
    "BareMetalMachineCordonParameters": {
      "type": "object",
      "title": "BareMetalMachineCordonParameters represents the body of the request to evacuate workloads from node on a bare metal machine.",
      "properties": {
        "evacuate": {
          "description": "The indicator of whether to evacuate the node workload when the bare metal machine is cordoned.",
          "type": "string",
          "default": "False",
          "enum": [
            "True",
            "False"
          ],
          "x-ms-enum": {
            "modelAsString": true,
            "name": "BareMetalMachineEvacuate"
          }
        }
      }
    },
    "BareMetalMachineList": {
      "type": "object",
      "title": "BareMetalMachineList represents a list of bare metal machines.",
      "properties": {
        "nextLink": {
          "description": "The link used to get the next page of operations.",
          "type": "string"
        },
        "value": {
          "description": "The list of bare metal machines.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/BareMetalMachine"
          }
        }
      }
    },
    "BareMetalMachinePatchParameters": {
      "type": "object",
      "title": "BareMetalMachinePatchParameters represents the body of the request to patch bare metal machine properties.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/BareMetalMachinePatchProperties",
          "description": "The list of the resource properties.",
          "x-ms-client-flatten": true
        },
        "tags": {
          "description": "The Azure resource tags that will replace the existing ones.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "BareMetalMachinePatchProperties": {
      "type": "object",
      "title": "BareMetalMachinePatchProperties represents the properties of the bare metal machine that can be patched.",
      "properties": {
        "bootMacAddress": {
          "description": "The MAC address of the NIC connected to the PXE network.",
          "type": "string"
        },
        "machineDetails": {
          "description": "The details provided by the customer during the creation of rack manifests\nthat allows for custom data to be associated with this machine.",
          "type": "string"
        },
        "serialNumber": {
          "description": "The serial number of the bare metal machine.",
          "type": "string"
        }
      }
    },
    "BareMetalMachinePowerOffParameters": {
      "type": "object",
      "title": "BareMetalMachinePowerOffParameters represents the body of the request to power off bare metal machine.",
      "properties": {
        "skipShutdown": {
          "description": "The indicator of whether to skip the graceful OS shutdown and power off the bare metal machine immediately.",
          "type": "string",
          "default": "False",
          "enum": [
            "True",
            "False"
          ],
          "x-ms-enum": {
            "modelAsString": true,
            "name": "BareMetalMachineSkipShutdown"
          }
        }
      }
    },
    "BareMetalMachineProperties": {
      "type": "object",
      "title": "BareMetalMachineProperties represents the properties of a bare metal machine.",
      "required": [
        "rackId",
        "machineSkuId",
        "rackSlot",
        "machineName",
        "bootMacAddress",
        "bmcCredentials",
        "bmcConnectionString",
        "machineDetails",
        "serialNumber"
      ],
      "properties": {
        "bmcConnectionString": {
          "description": "The connection string for the bare metal controller on this bare metal machine.",
          "type": "string"
        },
        "bmcCredentials": {
          "$ref": "#/definitions/BmcCredentials"
        },
        "bootMacAddress": {
          "description": "The MAC address of a NIC connected to the PXE network.",
          "type": "string"
        },
        "clusterId": {
          "description": "The resource ID of the cluster this bare metal machine is associated with.",
          "type": "string",
          "readOnly": true
        },
        "cordonStatus": {
          "description": "The cordon status of the bare metal machine.",
          "type": "string",
          "enum": [
            "Cordoned",
            "Uncordoned"
          ],
          "x-ms-enum": {
            "modelAsString": true,
            "name": "BareMetalMachineCordonStatus"
          },
          "readOnly": true
        },
        "detailedStatus": {
          "description": "The more detailed status of the bare metal machine.",
          "type": "string",
          "enum": [
            "Preparing",
            "Error",
            "Available",
            "Provisioning",
            "Provisioned",
            "Deprovisioning"
          ],
          "x-ms-enum": {
            "modelAsString": true,
            "name": "BareMetalMachineDetailedStatus"
          },
          "readOnly": true
        },
        "detailedStatusMessage": {
          "description": "The descriptive message about the current detailed status.",
          "type": "string",
          "readOnly": true
        },
        "hardwareInventory": {
          "$ref": "#/definitions/HardwareInventory"
        },
        "hybridAksClustersAssociatedIds": {
          "description": "The list of the resource IDs for the HybridAksClusters that have nodes hosted on this bare metal machine.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "kubernetesNodeName": {
          "description": "The name of this machine represented by the host object in the Cluster's Kubernetes control plane.",
          "type": "string",
          "readOnly": true
        },
        "machineDetails": {
          "description": "The custom details provided by the customer.",
          "type": "string"
        },
        "machineName": {
          "description": "The OS-level hostname assigned to this machine.",
          "type": "string"
        },
        "machineSkuId": {
          "description": "The unique internal identifier of the bare metal machine SKU.",
          "type": "string"
        },
        "powerState": {
          "description": "The power state derived from the baseboard management controller.",
          "type": "string",
          "enum": [
            "On",
            "Off"
          ],
          "x-ms-enum": {
            "modelAsString": true,
            "name": "BareMetalMachinePowerState"
          },
          "readOnly": true
        },
        "provisioningState": {
          "description": "The provisioning state of the bare metal machine.",
          "type": "string",
          "enum": [
            "Succeeded",
            "Failed",
            "Canceled",
            "Provisioning",
            "Accepted"
          ],
          "x-ms-enum": {
            "modelAsString": true,
            "name": "BareMetalMachineProvisioningState"
          },
          "readOnly": true
        },
        "rackId": {
          "description": "The resource ID of the rack where this bare metal machine resides.",
          "type": "string"
        },
        "rackSlot": {
          "description": "The rack slot in which this bare metal machine is located, ordered from the bottom up i.e. the lowest slot is 1.",
          "type": "integer",
          "format": "int64"
        },
        "readyState": {
          "description": "The indicator of whether the bare metal machine is ready to receive workloads.",
          "type": "string",
          "enum": [
            "True",
            "False"
          ],
          "x-ms-enum": {
            "modelAsString": true,
            "name": "BareMetalMachineReadyState"
          },
          "readOnly": true
        },
        "serialNumber": {
          "description": "The serial number of the bare metal machine.",
          "type": "string"
        },
        "serviceTag": {
          "description": "The discovered value of the machine's service tag.",
          "type": "string",
          "readOnly": true
        },
        "virtualMachinesAssociatedIds": {
          "description": "The list of the resource IDs for the VirtualMachines that are hosted on this bare metal machine.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "readOnly": true
        }
      }
    },
    "BareMetalMachineReplaceParameters": {
      "type": "object",
      "title": "BareMetalMachineReplaceParameters represents the body of the request to physically swap a bare metal machine for another.",
      "required": [
        "bootMacAddress",
        "bmcCredentials",
        "serialNumber",
        "bmcMacAddress",
        "machineName"
      ],
      "properties": {
        "bmcCredentials": {
          "$ref": "#/definitions/BmcCredentials"
        },
        "bmcMacAddress": {
          "description": "The MAC address of the BMC device.",
          "type": "string"
        },
        "bootMacAddress": {
          "description": "The MAC address of a NIC connected to the PXE network.",
          "type": "string"
        },
        "machineName": {
          "description": "The OS-level hostname assigned to this machine.",
          "type": "string"
        },
        "serialNumber": {
          "description": "The serial number of the bare metal machine.",
          "type": "string"
        }
      }
    },
    "BareMetalMachineRunCommandParameters": {
      "type": "object",
      "title": "BareMetalMachineRunCommandParameters represents the body of the request to execute a script on the bare metal machine.",
      "required": [
        "script",
        "limitTimeSeconds"
      ],
      "properties": {
        "arguments": {
          "description": "The list of string arguments that will be passed to the script in order as separate arguments.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "limitTimeSeconds": {
          "description": "The maximum time the script is allowed to run.\nIf the execution time exceeds the maximum, the script will be stopped, any output produced until then will be captured, and the exit code matching a timeout will be returned (252).",
          "type": "integer",
          "format": "int64",
          "maximum": 14400,
          "minimum": 60
        },
        "script": {
          "description": "The base64 encoded script to execute on the bare metal machine.",
          "type": "string"
        }
      }
    },
    "BareMetalMachineRunReadCommandsParameters": {
      "type": "object",
      "title": "BareMetalMachineRunReadCommandsParameters represents the body of request containing list of read only commands to run on the bare metal machine.",
      "required": [
        "commands",
        "limitTimeSeconds"
      ],
      "properties": {
        "commands": {
          "description": "The list of read commands to run.",
          "type": "array",
          "minItems": 1,
          "items": {
            "$ref": "#/definitions/BareMetalMachineCommandSpecification"
          },
          "x-ms-identifiers": []
        },
        "limitTimeSeconds": {
          "description": "The maximum time the commands are allowed to run.\nIf the execution time exceeds the maximum, the script will be stopped, any output produced until then will be captured, and the exit code matching a timeout will be returned (252).",
          "type": "integer",
          "format": "int64",
          "maximum": 14400,
          "minimum": 60
        }
      }
    },
    "BareMetalMachineValidateHardwareParameters": {
      "type": "object",
      "title": "BareMetalMachineValidateHardwareParameters represents the body of the request to validate the physical hardware of a bare metal machine.",
      "required": [
        "validationCategory"
      ],
      "properties": {
        "validationCategory": {
          "description": "The category of hardware validation to perform.",
          "type": "string",
          "enum": [
            "BasicValidation"
          ],
          "x-ms-enum": {
            "modelAsString": true,
            "name": "BareMetalMachineHardwareValidationCategory"
          }
        }
      }
    },
    "BgpPeer": {
      "type": "object",
      "title": "BgpPeer represents the IP address and ASN(Autonomous System Number) to peer with Hybrid AKS cluster.",
      "required": [
        "peerIp",
        "asNumber"
      ],
      "properties": {
        "asNumber": {
          "description": "The ASN (Autonomous System Number) of the BGP peer.",
          "type": "string",
          "maximum": 4294967295,
          "minimum": 0,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "password": {
          "description": "The password for this peering neighbor. It defaults to no password if not specified.",
          "type": "string",
          "maxLength": 80,
          "pattern": "^[a-zA-Z0-9]{0,80}$",
          "x-ms-mutability": [
            "create"
          ],
          "x-ms-secret": true
        },
        "peerIp": {
          "description": "The IP address to peer the Hybrid AKS cluster with.",
          "type": "string",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      }
    },
    "BmcCredentials": {
      "type": "object",
      "title": "BmcCredentials represents the credentials for the baseboard management controller device on this bare metal machine.",
      "required": [
        "username"
      ],
      "properties": {
        "password": {
          "description": "The baseboard management controller device server password.",
          "type": "string",
          "x-ms-secret": true
        },
        "username": {
          "description": "The baseboard management controller device user name",
          "type": "string"
        }
      }
    },
    "CloudServicesNetwork": {
      "description": "CloudServicesNetwork represents additional egress information that will be used by associated virtual machines or hybrid\nAKS clusters. Upon creation, the additional services that are provided by the platform will be allocated and\nrepresented in the status of this resource. All resources associated with this cloud services network will be part\nof the same layer 2 (L2) isolation domain. At least one service network must be created but may be reused across many\nvirtual machines and/or Hybrid AKS clusters.",
      "type": "object",
      "required": [
        "extendedLocation",
        "properties"
      ],
      "properties": {
        "extendedLocation": {
          "$ref": "#/definitions/ExtendedLocation",
          "description": "The extended location of the cluster associated with the resource."
        },
        "properties": {
          "$ref": "#/definitions/CloudServicesNetworkProperties",
          "description": "The list of the resource properties.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/TrackedResource"
        }
      ],
      "x-ms-azure-resource": true
    },
    "CloudServicesNetworkList": {
      "type": "object",
      "title": "CloudServicesNetworkList represents a list of cloud services networks.",
      "properties": {
        "nextLink": {
          "description": "The link used to get the next page of operations.",
          "type": "string"
        },
        "value": {
          "description": "The list of cloud services networks.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CloudServicesNetwork"
          }
        }
      }
    },
    "CloudServicesNetworkPatchParameters": {
      "type": "object",
      "title": "CloudServicesNetworkPatchParameters represents the body of the request to patch the cloud services network.",
      "properties": {
        "tags": {
          "description": "The Azure resource tags that will replace the existing ones.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "CloudServicesNetworkProperties": {
      "type": "object",
      "title": "CloudServicesNetworkProperties represents properties of the cloud services network.",
      "required": [
        "additionalEgressEndpoints",
        "l2IsolationDomainId"
      ],
      "properties": {
        "additionalEgressEndpoints": {
          "description": "The list of egress endpoints. This allows for connection from a Hybrid AKS cluster to the specified endpoint for\na common purpose.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/EgressEndpoint"
          },
          "x-ms-identifiers": [],
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "clusterId": {
          "description": "The resource ID of the Network Cloud cluster this cloud services network is associated with.",
          "type": "string",
          "readOnly": true
        },
        "hybridAksClustersAssociatedIds": {
          "description": "The list of Hybrid AKS cluster resource IDs that are associated with this cloud services network.",
          "type": "array",
          "minItems": 0,
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "interfaceName": {
          "description": "The interface related to the cloud services network.",
          "type": "string",
          "readOnly": true
        },
        "l2IsolationDomainId": {
          "description": "The resource ID of the Network Fabric l2IsolationDomain.",
          "type": "string",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "provisioningState": {
          "description": "The provisioning state of the cloud services network.",
          "type": "string",
          "enum": [
            "Succeeded",
            "Failed",
            "Canceled",
            "Provisioning",
            "Accepted"
          ],
          "x-ms-enum": {
            "modelAsString": true,
            "name": "CloudServicesNetworkProvisioningState"
          },
          "readOnly": true
        },
        "virtualMachinesAssociatedIds": {
          "description": "The list of virtual machine resource IDs, excluding any Hybrid AKS virtual machines, that are currently using this cloud services network.",
          "type": "array",
          "minItems": 0,
          "items": {
            "type": "string"
          },
          "readOnly": true
        }
      }
    },
    "CloudServicesNetworkSpec": {
      "description": "It is a separate struct to help with the downstream operators mapping.",
      "type": "object",
      "title": "CloudServicesNetworkSpec represents the properties that are used as an input to the operator.",
      "required": [
        "additionalEgressEndpoints",
        "l2IsolationDomainId"
      ],
      "properties": {
        "additionalEgressEndpoints": {
          "description": "The list of egress endpoints. This allows for connection from a Hybrid AKS cluster to the specified endpoint for\na common purpose.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/EgressEndpoint"
          },
          "x-ms-identifiers": [],
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "l2IsolationDomainId": {
          "description": "The resource ID of the Network Fabric l2IsolationDomain.",
          "type": "string",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      }
    },
    "CloudServicesNetworkStatus": {
      "type": "object",
      "title": "CloudServicesNetworkStatus represents the properties produced by the API implementing logic in the operator.",
      "properties": {
        "clusterId": {
          "description": "The resource ID of the Network Cloud cluster this cloud services network is associated with.",
          "type": "string",
          "readOnly": true
        },
        "hybridAksClustersAssociatedIds": {
          "description": "The list of Hybrid AKS cluster resource IDs that are associated with this cloud services network.",
          "type": "array",
          "minItems": 0,
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "interfaceName": {
          "description": "The interface related to the cloud services network.",
          "type": "string",
          "readOnly": true
        },
        "virtualMachinesAssociatedIds": {
          "description": "The list of virtual machine resource IDs, excluding any Hybrid AKS virtual machines, that are currently using this cloud services network.",
          "type": "array",
          "minItems": 0,
          "items": {
            "type": "string"
          },
          "readOnly": true
        }
      }
    },
    "Cluster": {
      "type": "object",
      "title": "Cluster represents the on-premises Network Cloud cluster.",
      "required": [
        "extendedLocation",
        "properties"
      ],
      "properties": {
        "extendedLocation": {
          "$ref": "#/definitions/ExtendedLocation",
          "description": "The extended location of the cluster manager associated with the cluster."
        },
        "properties": {
          "$ref": "#/definitions/ClusterProperties",
          "description": "The list of the resource properties.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/TrackedResource"
        }
      ],
      "x-ms-azure-resource": true
    },
    "ClusterAvailableUpgradeVersion": {
      "type": "object",
      "title": "ClusterAvailableUpgradeVersion represents the various cluster upgrade parameters.",
      "properties": {
        "controlImpact": {
          "description": "The indicator of whether the control plane will be impacted during the upgrade.",
          "type": "string",
          "enum": [
            "True",
            "False"
          ],
          "x-ms-enum": {
            "modelAsString": true,
            "name": "ControlImpact"
          },
          "readOnly": true
        },
        "expectedDuration": {
          "description": "The expected duration needed for this upgrade.",
          "type": "string",
          "readOnly": true
        },
        "impactDescription": {
          "description": "The impact description including the specific details and release notes.",
          "type": "string",
          "readOnly": true
        },
        "supportExpiryDate": {
          "description": "The last date the version of the platform is supported.",
          "type": "string",
          "readOnly": true
        },
        "targetClusterVersion": {
          "description": "The target version this cluster will be upgraded to.",
          "type": "string",
          "readOnly": true
        },
        "workloadImpact": {
          "description": "The indicator of whether the workload will be impacted during the upgrade.",
          "type": "string",
          "enum": [
            "True",
            "False"
          ],
          "x-ms-enum": {
            "modelAsString": true,
            "name": "WorkloadImpact"
          },
          "readOnly": true
        }
      }
    },
    "ClusterAvailableVersion": {
      "type": "object",
      "title": "ClusterAvailableVersion represents the cluster version that the cluster manager can be asked to create and manage.",
      "properties": {
        "supportExpiryDate": {
          "description": "The last date the version of the platform is supported.",
          "type": "string",
          "readOnly": true
        },
        "targetClusterVersion": {
          "description": "The version of the cluster to be deployed.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "ClusterCapacity": {
      "type": "object",
      "title": "ClusterCapacity represents various details regarding compute capacity.",
      "properties": {
        "availableApplianceStorageGB": {
          "description": "The remaining appliance-based storage in GB available for workload use.",
          "type": "integer",
          "format": "int64"
        },
        "availableCoreCount": {
          "description": "The remaining number of cores that are available in this cluster for workload use.",
          "type": "integer",
          "format": "int64"
        },
        "availableHostStorageGB": {
          "description": "The remaining machine or host-based storage in GB available for workload use.",
          "type": "integer",
          "format": "int64"
        },
        "availableMemoryGB": {
          "description": "The remaining memory in GB that are available in this cluster for workload use.",
          "type": "integer",
          "format": "int64"
        },
        "totalApplianceStorageGB": {
          "description": "The total appliance-based storage in GB supported by this cluster for workload use.",
          "type": "integer",
          "format": "int64"
        },
        "totalCoreCount": {
          "description": "The total number of cores that are supported by this cluster for workload use.",
          "type": "integer",
          "format": "int64"
        },
        "totalHostStorageGB": {
          "description": "The total machine or host-based storage in GB supported by this cluster for workload use.",
          "type": "integer",
          "format": "int64"
        },
        "totalMemoryGB": {
          "description": "The total memory supported by this cluster for workload use.",
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ClusterDeployParameters": {
      "type": "object",
      "title": "ClusterDeployParameters represents the body of the request to deploy cluster.",
      "properties": {
        "rackName": {
          "description": "The name of the rack (rack-manifest) to use for bootstrapping the deployment. The system will determine which rack to use if this is not provided.",
          "type": "string"
        }
      }
    },
    "ClusterList": {
      "type": "object",
      "title": "ClusterList represents a list of clusters.",
      "properties": {
        "nextLink": {
          "description": "The link used to get the next page of operations.",
          "type": "string"
        },
        "value": {
          "description": "The list of clusters.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Cluster"
          }
        }
      }
    },
    "ClusterManager": {
      "type": "object",
      "title": "ClusterManager represents a control-plane to manage one or more on-premises clusters.",
      "required": [
        "properties"
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/ClusterManagerProperties",
          "description": "The list of the resource properties.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/TrackedResource"
        }
      ],
      "x-ms-azure-resource": true
    },
    "ClusterManagerList": {
      "type": "object",
      "title": "ClusterManagerList represents a list of cluster manager objects.",
      "properties": {
        "nextLink": {
          "description": "The link used to get the next page of operations.",
          "type": "string"
        },
        "value": {
          "description": "The list of cluster managers.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ClusterManager"
          }
        }
      }
    },
    "ClusterManagerPatchParameters": {
      "type": "object",
      "title": "ClusterManagerPatchParameters represents the body of the request to patch the cluster properties.",
      "properties": {
        "tags": {
          "description": "The Azure resource tags that will replace the existing ones.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "ClusterManagerPatchProperties": {
      "type": "object",
      "title": "ClusterManagerPatchProperties represents the properties of the cluster for patching."
    },
    "ClusterManagerProperties": {
      "description": "ClusterManagerProperties represents the properties of a cluster manager",
      "type": "object",
      "required": [
        "fabricControllerId"
      ],
      "properties": {
        "analyticsWorkspaceId": {
          "description": "The resource ID of the Log Analytics workspace that is used for the logs collection.",
          "type": "string",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "clusterVersions": {
          "description": "The list of the cluster versions the manager supports. It is used as input in clusterVersion property of a cluster resource.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ClusterAvailableVersion"
          },
          "x-ms-identifiers": [
            "targetClusterVersion"
          ],
          "readOnly": true
        },
        "fabricControllerId": {
          "description": "The resource ID of the fabric controller that has one to one mapping with the cluster manager.",
          "type": "string",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "managedResourceGroupConfiguration": {
          "$ref": "#/definitions/ManagedResourceGroupConfiguration",
          "description": "The configuration of the managed resource group associated with the resource."
        },
        "managerExtendedLocation": {
          "$ref": "#/definitions/ExtendedLocation",
          "description": "The extended location (custom location) that represents the cluster manager's control plane location.\n This extended location is used when creating cluster and rack manifest resources.",
          "readOnly": true
        },
        "provisioningState": {
          "description": "The provisioning state of the cluster manager.",
          "type": "string",
          "enum": [
            "Succeeded",
            "Failed",
            "Canceled",
            "Provisioning",
            "Accepted"
          ],
          "x-ms-enum": {
            "modelAsString": true,
            "name": "ClusterManagerProvisioningState"
          },
          "readOnly": true
        }
      }
    },
    "ClusterPatchParameters": {
      "type": "object",
      "title": "ClusterPatchParameters represents the body of the request to patch the cluster properties.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ClusterPatchProperties",
          "description": "The list of the resource properties.",
          "x-ms-client-flatten": true
        },
        "tags": {
          "description": "The Azure resource tags that will replace the existing ones.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "ClusterPatchProperties": {
      "type": "object",
      "title": "ClusterPatchProperties represents the properties of the cluster for patching.",
      "properties": {
        "clusterLocation": {
          "description": "The customer-provided location information to identify where the cluster resides.",
          "type": "string"
        }
      }
    },
    "ClusterProperties": {
      "type": "object",
      "title": "ClusterProperties represents the properties of a cluster.",
      "required": [
        "networkFabricId",
        "clusterType",
        "clusterVersion",
        "aggregatorOrSingleRackDefinition",
        "computeRackDefinitions"
      ],
      "properties": {
        "aggregatorOrSingleRackDefinition": {
          "$ref": "#/definitions/RackDefinition"
        },
        "analyticsWorkspaceId": {
          "description": "The resource ID of the Log Analytics Workspace that will be used for storing relevant logs.",
          "type": "string",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "availableUpgradeVersions": {
          "description": "The list of cluster runtime version upgrades available for this cluster.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ClusterAvailableUpgradeVersion"
          },
          "x-ms-identifiers": [
            "targetClusterVersion"
          ],
          "readOnly": true
        },
        "clusterCapacity": {
          "$ref": "#/definitions/ClusterCapacity"
        },
        "clusterConnectionStatus": {
          "description": "The latest heartbeat status between the cluster manager and the cluster.",
          "type": "string",
          "enum": [
            "Connected",
            "Timeout",
            "Undefined"
          ],
          "x-ms-enum": {
            "modelAsString": true,
            "name": "ClusterConnectionStatus"
          },
          "readOnly": true
        },
        "clusterExtendedLocation": {
          "$ref": "#/definitions/ExtendedLocation",
          "description": "The extended location (custom location) that represents the cluster's control plane location.\nThis extended location is used to route the requests of child objects of the cluster that are handled by the platform operator.",
          "readOnly": true
        },
        "clusterLocation": {
          "description": "The customer-provided location information to identify where the cluster resides.",
          "type": "string"
        },
        "clusterManagerConnectionStatus": {
          "description": "The latest connectivity status between cluster manager and the cluster.",
          "type": "string",
          "enum": [
            "Connected",
            "Unreachable"
          ],
          "x-ms-enum": {
            "modelAsString": true,
            "name": "ClusterManagerConnectionStatus"
          },
          "readOnly": true
        },
        "clusterManagerId": {
          "description": "The resource ID of the cluster manager that manages this cluster. This is set by the Cluster Manager when the cluster is created.",
          "type": "string",
          "readOnly": true
        },
        "clusterType": {
          "description": "The type of rack configuration for the cluster.",
          "type": "string",
          "enum": [
            "SingleRack",
            "MultiRack"
          ],
          "x-ms-enum": {
            "modelAsString": true,
            "name": "ClusterType"
          },
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "clusterVersion": {
          "description": "The current runtime version of the cluster.",
          "type": "string",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "computeRackDefinitions": {
          "description": "The list of rack definitions for the compute racks in a multi-rack\ncluster, or an empty list in a single-rack cluster.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/RackDefinition"
          },
          "x-ms-identifiers": [
            "networkRackId"
          ]
        },
        "deploymentState": {
          "description": "The state of the cluster's deployment.",
          "type": "string",
          "enum": [
            "PendingNetworkData",
            "PendingDeployment",
            "StagingDeployment",
            "ConnectingToAzure",
            "InstallingManagementSoftware",
            "ProvisioningClusterNodes",
            "Deployed",
            "DeploymentFailed"
          ],
          "x-ms-enum": {
            "modelAsString": true,
            "name": "ClusterDeploymentState"
          },
          "readOnly": true
        },
        "hybridAksExtendedLocation": {
          "$ref": "#/definitions/ExtendedLocation",
          "description": "The extended location (custom location) that represents the Hybrid AKS control plane location.\nThis extended location is used when creating provisioned clusters (Hybrid AKS clusters).",
          "readOnly": true
        },
        "managedResourceGroupConfiguration": {
          "$ref": "#/definitions/ManagedResourceGroupConfiguration",
          "description": "The configuration of the managed resource group associated with the resource."
        },
        "networkFabricId": {
          "description": "The resource ID of the Network Fabric associated with the cluster.",
          "type": "string",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "provisioningState": {
          "description": "The provisioning state of the cluster.",
          "type": "string",
          "enum": [
            "Succeeded",
            "Failed",
            "Canceled",
            "Validating",
            "Provisioning",
            "Accepted"
          ],
          "x-ms-enum": {
            "modelAsString": true,
            "name": "ClusterProvisioningState"
          },
          "readOnly": true
        },
        "supportExpiryDate": {
          "description": "The support end date of the runtime version of the cluster.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "ClusterUpdateVersionParameters": {
      "type": "object",
      "title": "ClusterUpdateVersionParameters represents the body of the request to update cluster version.",
      "properties": {
        "targetClusterVersion": {
          "description": "The version to be applied to the cluster during update.",
          "type": "string"
        }
      }
    },
    "CniBgpConfiguration": {
      "type": "object",
      "title": "CniBgpConfiguration represents the Calico BGP configuration.",
      "required": [
        "serviceExternalPrefixes",
        "serviceLoadBalancerPrefixes",
        "communityAdvertisements",
        "bgpPeers"
      ],
      "properties": {
        "bgpPeers": {
          "description": "The list of BGP peer entities.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/BgpPeer"
          },
          "x-ms-identifiers": [
            "peerIp"
          ],
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "communityAdvertisements": {
          "description": "The list of prefix community advertisement properties. Each prefix community specifies a prefix, and the\ncommunities that should be associated with that prefix when it is announced.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CommunityAdvertisement"
          },
          "x-ms-identifiers": [],
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "nodeMeshPassword": {
          "description": "The password of the Calico node mesh. It defaults to a randomly-generated string when not provided.",
          "type": "string",
          "maxLength": 80,
          "pattern": "^[a-zA-Z0-9]{0,80}$",
          "x-ms-mutability": [
            "create"
          ],
          "x-ms-secret": true
        },
        "serviceExternalPrefixes": {
          "description": "The subnet blocks in CIDR format for Kubernetes service external IPs to be advertised over BGP.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "serviceLoadBalancerPrefixes": {
          "description": "The subnet blocks in CIDR format for Kubernetes load balancers. Load balancer IPs will only be advertised if they\nare within one of these blocks.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      }
    },
    "CommunityAdvertisement": {
      "type": "object",
      "title": "CommunityAdvertisement represents the prefix and the communities that should be associated with that prefix.",
      "required": [
        "subnetPrefix",
        "communities"
      ],
      "properties": {
        "communities": {
          "description": "The list of community strings to announce with this prefix.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "subnetPrefix": {
          "description": "The subnet in CIDR format for which properties should be advertised.",
          "type": "string",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      }
    },
    "DefaultCniNetwork": {
      "description": "DefaultCniNetwork represents the user-managed portions of the default CNI (pod) network that is created in\nsupport of a Hybrid AKS Cluster.",
      "type": "object",
      "required": [
        "extendedLocation",
        "properties"
      ],
      "properties": {
        "extendedLocation": {
          "$ref": "#/definitions/ExtendedLocation",
          "description": "The extended location of the cluster associated with the resource."
        },
        "properties": {
          "$ref": "#/definitions/DefaultCniNetworkProperties",
          "description": "The list of the resource properties.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/TrackedResource"
        }
      ],
      "x-ms-azure-resource": true
    },
    "DefaultCniNetworkList": {
      "type": "object",
      "title": "DefaultCniNetworkList represents a list of default CNI networks.",
      "properties": {
        "nextLink": {
          "description": "The link used to get the next page of operations.",
          "type": "string"
        },
        "value": {
          "description": "The list of default CNI networks.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DefaultCniNetwork"
          }
        }
      }
    },
    "DefaultCniNetworkPatchParameters": {
      "type": "object",
      "title": "DefaultCniNetworkPatchParameters represents the body of the request to patch the Default CNI network.",
      "properties": {
        "tags": {
          "description": "The Azure resource tags that will replace the existing ones.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "DefaultCniNetworkProperties": {
      "type": "object",
      "title": "DefaultCniNetworkProperties represents properties of the default CNI network.",
      "required": [
        "l3IsolationDomainId",
        "vlan"
      ],
      "properties": {
        "clusterId": {
          "description": "The resource ID of the Network Cloud cluster this default CNI network is associated with.",
          "type": "string",
          "readOnly": true
        },
        "cniBgpConfiguration": {
          "$ref": "#/definitions/CniBgpConfiguration"
        },
        "hybridAksClustersAssociatedIds": {
          "description": "The list of Hybrid AKS cluster resource ID(s) that are associated with this default CNI network.",
          "type": "array",
          "minItems": 0,
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "interfaceName": {
          "description": "The interface related to the L3 network.",
          "type": "string",
          "x-ms-mutability": [
            "read"
          ],
          "readOnly": true
        },
        "ipAllocationType": {
          "description": "The type of the IP address allocation.",
          "type": "string",
          "default": "DualStack",
          "enum": [
            "IPV4",
            "IPV6",
            "DualStack"
          ],
          "x-ms-enum": {
            "modelAsString": true,
            "name": "IpAllocationType"
          },
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "ipv4ConnectedPrefix": {
          "description": "The IPV4 prefix (CIDR) assigned to this default CNI network. It is required when the IP allocation type\nis IPV4 or DualStack.",
          "type": "string",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "ipv6ConnectedPrefix": {
          "description": "The IPV6 prefix (CIDR) assigned to this default CNI network. It is required when the IP allocation type\nis IPV6 or DualStack.",
          "type": "string",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "l2IsolationDomainId": {
          "description": "The resource ID of the Network Fabric l2IsolationDomain.",
          "type": "string",
          "readOnly": true
        },
        "l3IsolationDomainId": {
          "description": "The resource ID of the Network Fabric l3IsolationDomain.",
          "type": "string",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "provisioningState": {
          "description": "The provisioning state of the default CNI network.",
          "type": "string",
          "enum": [
            "Succeeded",
            "Failed",
            "Canceled",
            "Provisioning",
            "Accepted"
          ],
          "x-ms-enum": {
            "modelAsString": true,
            "name": "DefaultCniNetworkProvisioningState"
          },
          "readOnly": true
        },
        "vlan": {
          "description": "The VLAN from the l3IsolationDomain that is used for this network.",
          "type": "integer",
          "format": "int64",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      }
    },
    "DeviceAdministrativeCredentials": {
      "type": "object",
      "title": "DeviceAdministrativeCredentials represents the admin credentials for the device.",
      "required": [
        "username",
        "password"
      ],
      "properties": {
        "password": {
          "description": "The password of the administrator of the device used during initialization.",
          "type": "string",
          "minLength": 1,
          "x-ms-secret": true
        },
        "username": {
          "description": "The username of the administrator of the device used during initialization.",
          "type": "string",
          "minLength": 1
        }
      }
    },
    "Disk": {
      "type": "object",
      "title": "Disk represents an allocation of a volume against a storage appliance within a cluster.",
      "required": [
        "extendedLocation",
        "properties"
      ],
      "properties": {
        "extendedLocation": {
          "$ref": "#/definitions/ExtendedLocation",
          "description": "The extended location of the cluster associated with the resource."
        },
        "properties": {
          "$ref": "#/definitions/DiskProperties",
          "description": "The list of the resource properties.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/TrackedResource"
        }
      ],
      "x-ms-azure-resource": true
    },
    "DiskList": {
      "description": "DiskList represents a list of disks",
      "type": "object",
      "properties": {
        "nextLink": {
          "description": "The link used to get the next page of operations",
          "type": "string"
        },
        "value": {
          "description": "The list of disks.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Disk"
          }
        }
      }
    },
    "DiskPatchParameters": {
      "type": "object",
      "title": "DiskPatchParameters represents the body of the request to patch a disk.",
      "properties": {
        "tags": {
          "description": "The Azure resource tags that will replace the existing ones.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "DiskProperties": {
      "type": "object",
      "title": "DiskProperties represents the properties of a disk.",
      "required": [
        "storageProviderId",
        "diskSizeGB",
        "storageClass"
      ],
      "properties": {
        "clusterId": {
          "description": "The resource ID of the cluster this disk is associated with.\nThis value is set when the disk is created and derived from an extended location.",
          "type": "string",
          "readOnly": true
        },
        "diskSizeGB": {
          "description": "The storage size allocated for this disk in GB.",
          "type": "integer",
          "format": "int64",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "diskState": {
          "description": "The disk attachment state.",
          "type": "string",
          "enum": [
            "Attached",
            "Unattached"
          ],
          "x-ms-enum": {
            "modelAsString": true,
            "name": "DiskState"
          },
          "readOnly": true
        },
        "hybridAksClustersAssociatedIds": {
          "description": "The list of Hybrid AKS cluster resource IDs that are associated with this disk.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "provisioningState": {
          "description": "The provisioning state of the disk.",
          "type": "string",
          "enum": [
            "Succeeded",
            "Failed",
            "Canceled",
            "Provisioning",
            "Accepted"
          ],
          "x-ms-enum": {
            "modelAsString": true,
            "name": "DiskProvisioningState"
          },
          "readOnly": true
        },
        "storageClass": {
          "description": "The performance characteristic class for this disk.",
          "type": "string",
          "enum": [
            "Enhanced",
            "Standard"
          ],
          "x-ms-enum": {
            "modelAsString": true,
            "name": "DiskStorageClass"
          },
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "storageProviderId": {
          "description": "The resource ID of the storage appliance, or other resource that is providing the storage for this disk.",
          "type": "string",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "virtualMachinesAssociatedIds": {
          "description": "The list of Hybrid AKS virtual machines resource IDs that are associated with this disk.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "readOnly": true
        }
      }
    },
    "EgressEndpoint": {
      "type": "object",
      "title": "EgressEndpoint represents the connection from a cloud services network to the specified endpoint for a common purpose.",
      "required": [
        "category",
        "endpoints"
      ],
      "properties": {
        "category": {
          "description": "The descriptive category name of endpoints accessible by the AKS agent node, e.g. azure-resource-management, API server, etc.",
          "type": "string",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "endpoints": {
          "description": "The list of endpoint dependencies.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/EndpointDependency"
          },
          "x-ms-identifiers": [],
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      }
    },
    "EndpointDependency": {
      "type": "object",
      "title": "EndpointDependency represents the definition of an endpoint, including the domain and details.",
      "required": [
        "domainName",
        "port"
      ],
      "properties": {
        "domainName": {
          "description": "The domain name of the dependency.",
          "type": "string",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "port": {
          "description": "The port of this endpoint.",
          "type": "integer",
          "format": "int64",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      }
    },
    "ExtendedLocation": {
      "type": "object",
      "title": "ExtendedLocation represents the Azure custom location where the resource will be created.",
      "required": [
        "type",
        "name"
      ],
      "properties": {
        "name": {
          "description": "The resource ID of the extended location on which the resource will be created.",
          "type": "string",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "type": {
          "description": "The extended location type, for example, CustomLocation.",
          "type": "string",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      }
    },
    "HardwareInventory": {
      "description": "including information acquired from the model/sku information and from the ironic inspector.",
      "type": "object",
      "title": "HardwareInventory represents the hardware configuration of this machine as exposed to the customer,",
      "properties": {
        "nics": {
          "description": "The list of network interface cards and associated details for the bare metal machine.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Nic"
          },
          "x-ms-identifiers": [
            "name"
          ],
          "readOnly": true
        }
      }
    },
    "HybridAksCluster": {
      "description": "The details are specific to the Network Cloud use of the Hybrid AKS provisioned cluster.",
      "type": "object",
      "title": "HybridAksCluster represents the additional details regarding the Hybrid AKS provisioned cluster.",
      "required": [
        "extendedLocation",
        "properties"
      ],
      "properties": {
        "extendedLocation": {
          "$ref": "#/definitions/ExtendedLocation",
          "description": "The extended location of the cluster associated with the resource."
        },
        "properties": {
          "$ref": "#/definitions/HybridAksClusterProperties",
          "description": "The list of the resource properties.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/TrackedResource"
        }
      ],
      "x-ms-azure-resource": true
    },
    "HybridAksClusterList": {
      "type": "object",
      "title": "HybridAksClusterList represents a list of Hybrid AKS provisioned clusters.",
      "properties": {
        "nextLink": {
          "description": "The link used to get the next page of operations.",
          "type": "string"
        },
        "value": {
          "description": "The list of additional details related to Hybrid AKS provisioned clusters.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/HybridAksCluster"
          }
        }
      }
    },
    "HybridAksClusterPatchParameters": {
      "type": "object",
      "title": "HybridAksClusterPatchParameters represents the body of the request to patch the Hybrid AKS provisioned cluster.",
      "properties": {
        "tags": {
          "description": "The Azure resource tags that will replace the existing ones.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "HybridAksClusterProperties": {
      "type": "object",
      "title": "HybridAksClusterProperties represents the properties of Hybrid AKS provisioned cluster resource.",
      "required": [
        "hybridAksProvisionedClusterId",
        "associatedNetworkIds",
        "controlPlaneCount",
        "workerCount"
      ],
      "properties": {
        "associatedNetworkIds": {
          "description": "The list of resource IDs for the workload networks associated with the Hybrid AKS provisioned cluster.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "cloudServicesNetworkId": {
          "description": "The resource ID of the associated cloud services network.",
          "type": "string",
          "readOnly": true
        },
        "clusterId": {
          "description": "The resource ID of the Network Cloud cluster hosting the Hybrid AKS provisioned cluster.",
          "type": "string",
          "readOnly": true
        },
        "controlPlaneCount": {
          "description": "The number of VMs requested for the cluster control plane.",
          "type": "integer",
          "format": "int64"
        },
        "controlPlaneNodes": {
          "description": "The list of node configurations detailing associated VMs that are part of the control plane nodes of this Hybrid AKS Cluster.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/NodeConfiguration"
          },
          "x-ms-identifiers": [
            "nodePoolName"
          ],
          "readOnly": true
        },
        "defaultCniNetworkId": {
          "description": "The resource ID of the associated default CNI network.",
          "type": "string",
          "readOnly": true
        },
        "hybridAksProvisionedClusterId": {
          "description": "The resource ID of the Hybrid AKS provisioned cluster that this additional information is for.",
          "type": "string"
        },
        "provisioningState": {
          "description": "The provisioning state of the Hybrid AKS cluster resource.",
          "type": "string",
          "enum": [
            "Succeeded",
            "Failed",
            "Canceled"
          ],
          "x-ms-enum": {
            "modelAsString": true,
            "name": "HybridAksClusterProvisioningState"
          },
          "readOnly": true
        },
        "workerCount": {
          "description": "The number of VMs requested for the worker nodes.",
          "type": "integer",
          "format": "int64"
        },
        "workerNodes": {
          "description": "The list of node configurations detailing associated VMs that are part of the worker nodes of this Hybrid AKS Cluster.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/NodeConfiguration"
          },
          "x-ms-identifiers": [
            "nodePoolName"
          ],
          "readOnly": true
        }
      }
    },
    "HybridAksClusterRestartNodeParameters": {
      "type": "object",
      "title": "HybridAksClusterRestartNodeParameters represents the body of the request to restart the node of a Hybrid AKS cluster.",
      "required": [
        "nodeName"
      ],
      "properties": {
        "nodeName": {
          "description": "The name of the node to restart.",
          "type": "string"
        }
      }
    },
    "L2Network": {
      "type": "object",
      "title": "L2Network represents a network that utilizes a single isolation domain set up for layer-2 resources.",
      "required": [
        "extendedLocation",
        "properties"
      ],
      "properties": {
        "extendedLocation": {
          "$ref": "#/definitions/ExtendedLocation",
          "description": "The extended location of the cluster associated with the resource."
        },
        "properties": {
          "$ref": "#/definitions/L2NetworkProperties",
          "description": "The list of the resource properties.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/TrackedResource"
        }
      ],
      "x-ms-azure-resource": true
    },
    "L2NetworkList": {
      "type": "object",
      "title": "L2NetworkList represents a list of L2 networks.",
      "properties": {
        "nextLink": {
          "description": "The link used to get the next page of operations.",
          "type": "string"
        },
        "value": {
          "description": "The list of L2 networks.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/L2Network"
          }
        }
      }
    },
    "L2NetworkPatchParameters": {
      "type": "object",
      "title": "L2NetworkPatchParameters represents the body of the request to patch the L2 network.",
      "properties": {
        "tags": {
          "description": "The Azure resource tags that will replace the existing ones.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "L2NetworkProperties": {
      "type": "object",
      "title": "L2NetworkProperties represents properties of the L2 network.",
      "required": [
        "l2IsolationDomainId"
      ],
      "properties": {
        "clusterId": {
          "description": "The resource ID of the Network Cloud cluster this L2 network is associated with.",
          "type": "string",
          "readOnly": true
        },
        "hybridAksClustersAssociatedIds": {
          "description": "The list of Hybrid AKS cluster resource ID(s) that are associated with this L2 network.",
          "type": "array",
          "minItems": 0,
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "hybridAksPluginType": {
          "description": "The network plugin type for Hybrid AKS, defaults to \"HostDevice\".",
          "type": "string",
          "default": "HostDevice",
          "enum": [
            "HostDevice",
            "MACVLAN",
            "DPDK"
          ],
          "x-ms-enum": {
            "modelAsString": true,
            "name": "HybridAksPluginType"
          },
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "interfaceName": {
          "description": "The interface related to the L2 network.",
          "type": "string",
          "maxLength": 12,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "l2IsolationDomainId": {
          "description": "The resource ID of the Network Fabric l2IsolationDomain.",
          "type": "string",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "provisioningState": {
          "description": "The provisioning state of the L2 network.",
          "type": "string",
          "enum": [
            "Succeeded",
            "Failed",
            "Canceled",
            "Provisioning",
            "Accepted"
          ],
          "x-ms-enum": {
            "modelAsString": true,
            "name": "L2NetworkProvisioningState"
          },
          "readOnly": true
        },
        "virtualMachinesAssociatedIds": {
          "description": "The list of virtual machine resource ID(s), excluding any Hybrid AKS virtual machines, that are currently using this L2 network.",
          "type": "array",
          "minItems": 0,
          "items": {
            "type": "string"
          },
          "readOnly": true
        }
      }
    },
    "L3Network": {
      "type": "object",
      "title": "L3Network represents a network that utilizes a single isolation domain set up for layer-3 resources.",
      "required": [
        "extendedLocation",
        "properties"
      ],
      "properties": {
        "extendedLocation": {
          "$ref": "#/definitions/ExtendedLocation",
          "description": "The extended location of the cluster associated with the resource."
        },
        "properties": {
          "$ref": "#/definitions/L3NetworkProperties",
          "description": "The list of the resource properties.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/TrackedResource"
        }
      ],
      "x-ms-azure-resource": true
    },
    "L3NetworkList": {
      "type": "object",
      "title": "L3NetworkList represents a list of L3 networks.",
      "properties": {
        "nextLink": {
          "description": "The link used to get the next page of operations.",
          "type": "string"
        },
        "value": {
          "description": "The list of L3 networks.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/L3Network"
          }
        }
      }
    },
    "L3NetworkPatchParameters": {
      "type": "object",
      "title": "L3NetworkPatchParameters represents the body of the request to patch the cloud services network.",
      "properties": {
        "tags": {
          "description": "The Azure resource tags that will replace the existing ones.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "L3NetworkProperties": {
      "type": "object",
      "title": "L3NetworkProperties represents properties of the L3 network.",
      "required": [
        "l3IsolationDomainId",
        "vlan"
      ],
      "properties": {
        "clusterId": {
          "description": "The resource ID of the Network Cloud cluster this L3 network is associated with.",
          "type": "string",
          "readOnly": true
        },
        "hybridAksClustersAssociatedIds": {
          "description": "The list of Hybrid AKS cluster resource IDs that are associated with this L3 network.",
          "type": "array",
          "minItems": 0,
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "hybridAksIpamEnabled": {
          "description": "The indicator of whether or not to disable IPAM allocation on the network attachment definition injected into the Hybrid AKS Cluster.",
          "type": "string",
          "enum": [
            "True",
            "False"
          ],
          "x-ms-enum": {
            "modelAsString": true,
            "name": "HybridAksIpamEnabled"
          },
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "hybridAksPluginType": {
          "description": "The network plugin type for Hybrid AKS, defaults to \"HostDevice\".",
          "type": "string",
          "default": "HostDevice",
          "enum": [
            "HostDevice",
            "MACVLAN",
            "DPDK"
          ],
          "x-ms-enum": {
            "modelAsString": true,
            "name": "HybridAksPluginType"
          },
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "interfaceName": {
          "description": "The interface related to the L3 network.",
          "type": "string",
          "maxLength": 12,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "ipAllocationType": {
          "description": "The type of the IP address allocation, defaulted to \"DualStack\".",
          "type": "string",
          "default": "DualStack",
          "enum": [
            "IPV4",
            "IPV6",
            "DualStack"
          ],
          "x-ms-enum": {
            "modelAsString": true,
            "name": "IpAllocationType"
          }
        },
        "ipv4ConnectedPrefix": {
          "description": "The IPV4 prefix (CIDR) assigned to this L3 network. Required when the IP allocation type\nis IPV4 or DualStack.",
          "type": "string",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "ipv6ConnectedPrefix": {
          "description": "The IPV6 prefix (CIDR) assigned to this L3 network. Required when the IP allocation type\nis IPV6 or DualStack.",
          "type": "string",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "l3IsolationDomainId": {
          "description": "The resource ID of the Network Fabric l3IsolationDomain.",
          "type": "string",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "provisioningState": {
          "description": "The provisioning state of the L3 network.",
          "type": "string",
          "enum": [
            "Succeeded",
            "Failed",
            "Canceled",
            "Provisioning",
            "Accepted"
          ],
          "x-ms-enum": {
            "modelAsString": true,
            "name": "L3NetworkProvisioningState"
          },
          "readOnly": true
        },
        "virtualMachinesAssociatedIds": {
          "description": "The list of virtual machine resource IDs, excluding any Hybrid AKS virtual machines, that are currently using this L3 network.",
          "type": "array",
          "minItems": 0,
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "vlan": {
          "description": "The VLAN from the l3IsolationDomain that is used for this network.",
          "type": "integer",
          "format": "int64",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      }
    },
    "MachineDisk": {
      "type": "object",
      "title": "Disk represents the properties of the disk.",
      "properties": {
        "capacityGB": {
          "description": "The maximum amount of storage in GB.",
          "type": "integer",
          "format": "int64",
          "readOnly": true
        },
        "connection": {
          "description": "The connection type of the rack SKU resource.",
          "type": "string",
          "enum": [
            "PCIE",
            "SATA",
            "RAID",
            "SAS"
          ],
          "x-ms-enum": {
            "modelAsString": true,
            "name": "MachineSkuDiskConnectionType"
          },
          "readOnly": true
        },
        "type": {
          "description": "The disk type of rack SKU resource.",
          "type": "string",
          "enum": [
            "HDD",
            "SSD"
          ],
          "x-ms-enum": {
            "modelAsString": true,
            "name": "DiskType"
          },
          "readOnly": true
        }
      }
    },
    "MachineSkuProperties": {
      "type": "object",
      "title": "MachineSkuProperties represents the properties of the machine SKU.",
      "properties": {
        "bootstrapProtocol": {
          "description": "The type of bootstrap protocol used.",
          "type": "string",
          "enum": [
            "PXE"
          ],
          "x-ms-enum": {
            "modelAsString": true,
            "name": "BootstrapProtocol"
          },
          "readOnly": true
        },
        "cpuCores": {
          "description": "The count of CPU cores for this machine.",
          "type": "integer",
          "format": "int64",
          "readOnly": true
        },
        "cpuSockets": {
          "description": "The count of CPU sockets for this machine.",
          "type": "integer",
          "format": "int64",
          "readOnly": true
        },
        "disks": {
          "description": "The list of disks.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/MachineDisk"
          },
          "x-ms-identifiers": [],
          "readOnly": true
        },
        "generation": {
          "description": "The generation of the architecture.",
          "type": "string",
          "readOnly": true
        },
        "hardwareVersion": {
          "description": "The hardware version of the machine.",
          "type": "string",
          "readOnly": true
        },
        "memoryCapacityGB": {
          "description": "The maximum amount of memory in GB.",
          "type": "integer",
          "format": "int64",
          "readOnly": true
        },
        "model": {
          "description": "The model of the machine.",
          "type": "string",
          "readOnly": true
        },
        "networkInterfaces": {
          "description": "The list of network interfaces.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/NetworkInterface"
          },
          "x-ms-identifiers": [],
          "readOnly": true
        },
        "totalThreads": {
          "description": "The count of SMT and physical core threads for this machine.",
          "type": "integer",
          "format": "int64",
          "readOnly": true
        },
        "vendor": {
          "description": "The make of the machine.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "MachineSkuSlot": {
      "type": "object",
      "title": "MachineSkuSlot represents a single SKU and rack slot associated with the machine.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/MachineSkuProperties",
          "description": "The list of the resource properties.",
          "x-ms-client-flatten": true
        },
        "rackSlot": {
          "description": "The position in the rack for the machine.",
          "type": "integer",
          "format": "int64",
          "readOnly": true
        }
      }
    },
    "ManagedResourceGroupConfiguration": {
      "type": "object",
      "title": "ManagedResourceGroupConfiguration represents the configuration of the resource group managed by Azure.",
      "properties": {
        "location": {
          "description": "The location of the managed resource group. If not specified, the location of the parent resource is chosen.",
          "type": "string",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "name": {
          "description": "The name for the managed resource group. If not specified, the unique name is automatically generated.",
          "type": "string",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      }
    },
    "NetworkAttachment": {
      "type": "object",
      "title": "NetworkAttachment represents the single network attachment.",
      "required": [
        "attachedNetworkId",
        "ipAllocationMethod"
      ],
      "properties": {
        "attachedNetworkId": {
          "description": "The resource ID of the associated network attached to the virtual machine.\nIt can be one of cloudServicesNetwork, l3Network, l2Network or trunkedNetwork resources.",
          "type": "string",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "defaultGateway": {
          "description": "The indicator of whether this is the default gateway.\nOnly one of the attached networks (including the CloudServicesNetwork attachment) for a single machine may be specified as True.",
          "type": "string",
          "enum": [
            "True",
            "False"
          ],
          "x-ms-enum": {
            "modelAsString": true,
            "name": "DefaultGateway"
          }
        },
        "ipAllocationMethod": {
          "description": "The IP allocation mechanism for the virtual machine.\nDynamic and Static are only valid for l3Network which may also specify Disabled.\nOtherwise, Disabled is the only permitted value.",
          "type": "string",
          "enum": [
            "Dynamic",
            "Static",
            "Disabled"
          ],
          "x-ms-enum": {
            "modelAsString": true,
            "name": "VirtualMachineIPAllocationMethod"
          },
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "ipv4Address": {
          "description": "The IPv4 address of the virtual machine.\n\nThis field is used only if the attached network has IPAllocationType of IPV4 or DualStack.\n\nIf IPAllocationMethod is:\nStatic - this field must contain a user specified IPv4 address from within the subnet specified in the attached network.\nDynamic - this field is read-only, but will be populated with an address from within the subnet specified in the attached network.\nDisabled - this field will be empty.",
          "type": "string",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "ipv6Address": {
          "description": "The IPv6 address of the virtual machine.\n\nThis field is used only if the attached network has IPAllocationType of IPV6 or DualStack.\n\nIf IPAllocationMethod is:\nStatic - this field must contain an IPv6 address range from within the range specified in the attached network.\nDynamic - this field is read-only, but will be populated with an range from within the subnet specified in the attached network.\nDisabled - this field will be empty.",
          "type": "string",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "macAddress": {
          "description": "The MAC address of the interface for the virtual machine that corresponds to this network attachment.",
          "type": "string",
          "readOnly": true
        },
        "networkAttachmentName": {
          "description": "The associated network's interface name.\nIf specified, the network attachment name has a maximum length of 15 characters and must be unique to this virtual machine.\nIf the user doesn’t specify this value, the default interface name of the network resource will be used.\nFor a CloudServicesNetwork resource, this name will be ignored.",
          "type": "string",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      }
    },
    "NetworkInterface": {
      "type": "object",
      "title": "NetworkInterface represents properties of the network interface.",
      "properties": {
        "address": {
          "description": "The partial address of Peripheral Component Interconnect (PCI).",
          "type": "string",
          "readOnly": true
        },
        "deviceConnectionType": {
          "description": "The connection type of the device.",
          "type": "string",
          "enum": [
            "PCI"
          ],
          "x-ms-enum": {
            "modelAsString": true,
            "name": "DeviceConnectionType"
          },
          "readOnly": true
        },
        "model": {
          "description": "The model name of the device.",
          "type": "string",
          "readOnly": true
        },
        "physicalSlot": {
          "description": "The physical slot for this device.",
          "type": "integer",
          "format": "int64",
          "readOnly": true
        },
        "portCount": {
          "description": "The number of ports on the device.",
          "type": "integer",
          "format": "int64",
          "readOnly": true
        },
        "portSpeed": {
          "description": "The maximum amount of data in GB that the line card transmits through a port at any given second.",
          "type": "integer",
          "format": "int64",
          "readOnly": true
        },
        "vendor": {
          "description": "The vendor name of the device.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "Nic": {
      "type": "object",
      "title": "Nic represents the network interface card details.",
      "properties": {
        "macAddress": {
          "description": "The MAC address associated with this NIC.",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "description": "The name of the NIC/interface.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "Node": {
      "type": "object",
      "title": "Node denotes the list of node that utilizes configuration.",
      "properties": {
        "bareMetalMachineId": {
          "description": "The resource ID of the BareMetalMachine that hosts this node.",
          "type": "string",
          "readOnly": true
        },
        "diskAttachmentIds": {
          "description": "The list of disk resource IDs. Each ID represents the backing disk resource for an attached persistent volume.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "imageId": {
          "description": "The machine image last used to deploy this node.",
          "type": "string",
          "readOnly": true
        },
        "networkAttachments": {
          "description": "The list of network attachments to the virtual machine.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/NetworkAttachment"
          },
          "x-ms-identifiers": [
            "networkAttachmentName"
          ]
        },
        "nodeName": {
          "description": "The name of this node, as realized in the Hybrid AKS Provisioned Cluster.",
          "type": "string",
          "readOnly": true
        },
        "powerState": {
          "description": "The power state (On | Off) of the node.",
          "type": "string",
          "enum": [
            "On",
            "Off"
          ],
          "x-ms-enum": {
            "modelAsString": true,
            "name": "HybridAksClusterMachinePowerState"
          },
          "readOnly": true
        }
      }
    },
    "NodeConfiguration": {
      "type": "object",
      "title": "NodeConfiguration contains configuration for a VM associated with a node.",
      "properties": {
        "cpuCores": {
          "description": "The number of CPU cores in the virtual machine.",
          "type": "integer",
          "format": "int64",
          "minimum": 1
        },
        "diskSizeGB": {
          "description": "The root disk size of the virtual machine in GB.",
          "type": "integer",
          "format": "int64",
          "minimum": 1
        },
        "imageId": {
          "description": "The reference to the image that is intended to be used for the nodes.",
          "type": "string",
          "readOnly": true
        },
        "memorySizeGB": {
          "description": "The memory size of the virtual machine in GB.",
          "type": "integer",
          "format": "int64",
          "minimum": 1
        },
        "nodePoolName": {
          "description": "The name of the node pool that contains the nodes in this configuration.",
          "type": "string",
          "readOnly": true
        },
        "nodes": {
          "description": "The list of nodes that utilize this configuration.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Node"
          },
          "x-ms-identifiers": [
            "nodeName"
          ],
          "readOnly": true
        }
      }
    },
    "OsDisk": {
      "type": "object",
      "title": "OsDisk represents configuration of the boot disk.",
      "required": [
        "diskSizeGB"
      ],
      "properties": {
        "createOption": {
          "description": "CreateOption represents the strategy for creating the OS disk.",
          "type": "string",
          "default": "Ephemeral",
          "enum": [
            "Ephemeral"
          ],
          "x-ms-enum": {
            "modelAsString": true,
            "name": "OsDiskCreateOption"
          }
        },
        "deleteOption": {
          "description": "DeleteOption represents the strategy for deleting the OS disk.",
          "type": "string",
          "default": "Delete",
          "enum": [
            "Delete"
          ],
          "x-ms-enum": {
            "modelAsString": true,
            "name": "OsDiskDeleteOption"
          }
        },
        "diskSizeGB": {
          "description": "The size of the disk in gigabytes. Required if the createOption is Ephemeral.",
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "Rack": {
      "type": "object",
      "title": "Rack represents the hardware of the rack and is dependent upon the cluster for lifecycle.",
      "required": [
        "extendedLocation",
        "properties"
      ],
      "properties": {
        "extendedLocation": {
          "$ref": "#/definitions/ExtendedLocation",
          "description": "The extended location of the cluster associated with the resource."
        },
        "properties": {
          "$ref": "#/definitions/RackProperties",
          "description": "The list of the resource properties.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/TrackedResource"
        }
      ],
      "x-ms-azure-resource": true
    },
    "RackDefinition": {
      "type": "object",
      "title": "RackDefinition represents details regarding the rack.",
      "required": [
        "networkRackId",
        "rackSkuId",
        "rackSerialNumber",
        "storageApplianceConfigurationData",
        "bareMetalMachineConfigurationData"
      ],
      "properties": {
        "availabilityZone": {
          "description": "The zone name used for this rack when created",
          "type": "string",
          "pattern": "[a-zA-Z0-9]{1,10}"
        },
        "bareMetalMachineConfigurationData": {
          "description": "The unordered list of bare metal machine configuration.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/BareMetalMachineConfigurationData"
          },
          "x-ms-identifiers": []
        },
        "networkRackId": {
          "description": "The resource ID of the network rack that matches this rack definition.",
          "type": "string"
        },
        "rackLocation": {
          "description": "The free-form description of the rack's location.",
          "type": "string",
          "maxLength": 256
        },
        "rackSerialNumber": {
          "description": "The unique identifier for the rack within Network Cloud cluster. An alternate unique alphanumeric value other than a serial number may be provided if desired.",
          "type": "string",
          "minLength": 1
        },
        "rackSkuId": {
          "description": "The resource ID of the sku for the rack being added.",
          "type": "string"
        },
        "storageApplianceConfigurationData": {
          "description": "The list of storage appliance configuration data for this rack.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/StorageApplianceConfigurationData"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "RackList": {
      "type": "object",
      "title": "RackList represents a list of racks.",
      "properties": {
        "nextLink": {
          "description": "The link used to get the next page of operations.",
          "type": "string"
        },
        "value": {
          "description": "The list of racks.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Rack"
          }
        }
      }
    },
    "RackPatchParameters": {
      "type": "object",
      "title": "RackPatchParameters represents the body of the request to patch the rack properties.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/RacksPatchProperties",
          "description": "The list of the resource properties.",
          "x-ms-client-flatten": true
        },
        "tags": {
          "description": "The Azure resource tags that will replace the existing ones.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "RackProperties": {
      "type": "object",
      "title": "RackProperties represents the properties of the rack.",
      "required": [
        "rackSkuId",
        "rackSerialNumber",
        "availabilityZone",
        "rackLocation"
      ],
      "properties": {
        "availabilityZone": {
          "description": "The value that will be used for machines in this rack to represent the availability zones that can be referenced by Hybrid AKS Clusters for node arrangement.",
          "type": "string",
          "pattern": "^[a-zA-Z0-9]{1,10}$"
        },
        "clusterId": {
          "description": "The resource ID of the cluster the rack is created for. This value is set when the rack is created by the cluster.",
          "type": "string",
          "readOnly": true
        },
        "provisioningState": {
          "description": "The provisioning state of the rack resource.",
          "type": "string",
          "enum": [
            "Succeeded",
            "Failed",
            "Canceled",
            "Provisioning",
            "Accepted"
          ],
          "x-ms-enum": {
            "modelAsString": true,
            "name": "RackProvisioningState"
          },
          "readOnly": true
        },
        "rackLocation": {
          "description": "The free-form description of the rack location. (e.g. “DTN Datacenter, Floor 3, Isle 9, Rack 2B”)",
          "type": "string"
        },
        "rackSerialNumber": {
          "description": "The unique identifier for the rack within Network Cloud cluster. An alternate unique alphanumeric value other than a serial number may be provided if desired.",
          "type": "string"
        },
        "rackSkuId": {
          "description": "The SKU for the rack.",
          "type": "string"
        }
      }
    },
    "RackSku": {
      "type": "object",
      "title": "RackSku represents the SKU information of the rack.",
      "required": [
        "properties"
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/RackSkuProperties",
          "description": "The list of the resource properties.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/Resource"
        }
      ],
      "x-ms-azure-resource": true
    },
    "RackSkuList": {
      "type": "object",
      "title": "RackSkuList represents a list of rack SKUs.",
      "properties": {
        "nextLink": {
          "description": "The link used to get the next page of operations.",
          "type": "string"
        },
        "value": {
          "description": "The list of Rack SKUs.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/RackSku"
          }
        }
      }
    },
    "RackSkuProperties": {
      "type": "object",
      "title": "RackSkuProperties represents the properties of compute-related hardware for a rack. This supports both aggregator and compute racks.",
      "properties": {
        "computeMachines": {
          "description": "The list of machine SKUs and associated rack slot for the compute-dedicated machines in this rack model.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/MachineSkuSlot"
          },
          "x-ms-identifiers": [],
          "readOnly": true
        },
        "controllerMachines": {
          "description": "The list of machine SKUs and associated rack slot for the control-plane dedicated machines in this rack model.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/MachineSkuSlot"
          },
          "x-ms-identifiers": [],
          "readOnly": true
        },
        "description": {
          "description": "The free-form text describing the rack.",
          "type": "string",
          "readOnly": true
        },
        "maxClusterSlots": {
          "description": "The maximum number of compute racks supported by an aggregator rack. 0 if this is a compute rack or a rack for a single rack cluster(rackType=\"Single\").",
          "type": "integer",
          "format": "int64",
          "readOnly": true
        },
        "provisioningState": {
          "description": "The provisioning state of the rack SKU resource.",
          "type": "string",
          "enum": [
            "Succeeded"
          ],
          "x-ms-enum": {
            "modelAsString": true,
            "name": "RackSkuProvisioningState"
          },
          "readOnly": true
        },
        "rackType": {
          "description": "The type of the rack.",
          "type": "string",
          "enum": [
            "Aggregator",
            "Compute",
            "Single"
          ],
          "x-ms-enum": {
            "modelAsString": true,
            "name": "RackSkuType"
          },
          "readOnly": true
        },
        "storageAppliances": {
          "description": "The list of appliance SKUs and associated rack slot for the storage appliance(s) in this rack model.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/StorageApplianceSkuSlot"
          },
          "x-ms-identifiers": [],
          "readOnly": true
        },
        "supportedRackSkuIds": {
          "description": "The list of supported SKUs if the rack is an aggregator.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "readOnly": true
        }
      }
    },
    "RacksPatchProperties": {
      "type": "object",
      "title": "RacksPatchProperties represents the properties of the rack during patching.",
      "properties": {
        "rackLocation": {
          "description": "The free-form description of the rack location. (e.g. “DTN Datacenter, Floor 3, Isle 9, Rack 2B”)",
          "type": "string"
        },
        "rackSerialNumber": {
          "description": "The globally unique identifier for the rack.",
          "type": "string"
        }
      }
    },
    "SshPublicKey": {
      "type": "object",
      "title": "SshPublicKey represents the public key used to authenticate with the virtual machine through SSH.",
      "required": [
        "keyData"
      ],
      "properties": {
        "keyData": {
          "description": "The base64 encoded public ssh key of the user.",
          "type": "string",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      }
    },
    "StorageAppliance": {
      "type": "object",
      "title": "StorageAppliance represents on-premises Network Cloud storage appliance.",
      "required": [
        "extendedLocation",
        "properties"
      ],
      "properties": {
        "extendedLocation": {
          "$ref": "#/definitions/ExtendedLocation",
          "description": "The extended location of the cluster associated with the resource."
        },
        "properties": {
          "$ref": "#/definitions/StorageApplianceProperties",
          "description": "The list of the resource properties.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/TrackedResource"
        }
      ],
      "x-ms-azure-resource": true
    },
    "StorageApplianceCommandSpecification": {
      "type": "object",
      "title": "StorageApplianceCommandSpecification represents the read only command and optional arguments to exercise against a storage appliance.",
      "required": [
        "command"
      ],
      "properties": {
        "arguments": {
          "description": "The list of string arguments that will be passed to the script in order as separate arguments.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "command": {
          "description": "The read only command to exercise against a storage appliance.",
          "type": "string",
          "enum": [
            "AlertList",
            "HostList",
            "ArrayList",
            "PortList",
            "DriveList",
            "AdminList",
            "HardwareList",
            "AuditList",
            "NetworkPing",
            "NetworkList",
            "DnsList"
          ],
          "x-ms-enum": {
            "modelAsString": true,
            "name": "StorageApplianceRunReadCommands"
          }
        }
      }
    },
    "StorageApplianceConfigurationData": {
      "type": "object",
      "title": "StorageApplianceConfigurationData represents configuration for the storage application.",
      "required": [
        "rackSlot",
        "adminMacAddress",
        "adminCredentials",
        "serialNumber"
      ],
      "properties": {
        "adminCredentials": {
          "$ref": "#/definitions/DeviceAdministrativeCredentials"
        },
        "adminMacAddress": {
          "description": "The MAC address associated with the administrative interface of the storage appliance.",
          "type": "string"
        },
        "rackSlot": {
          "description": "The slot that storage appliance is in the rack based on the BOM configuration.",
          "type": "integer",
          "format": "int64"
        },
        "serialNumber": {
          "description": "The serial number of the appliance.",
          "type": "string"
        },
        "storageApplianceName": {
          "description": "The user-provided name for the storage appliance that will be created from this specification.",
          "type": "string"
        }
      }
    },
    "StorageApplianceEnableRemoteVendorManagementParameters": {
      "type": "object",
      "title": "StorageApplianceEnableRemoteVendorManagementParameters represents the body of the request to enable remote vendor management of a storage appliance.",
      "required": [
        "supportEndpoints"
      ],
      "properties": {
        "supportEndpoints": {
          "description": "One or more IPv4 subnets (in CIDR format), IPv6 subnets (in CIDR format), or hostnames that the storage appliance needs accessible in order to turn on the remote vendor management.",
          "type": "array",
          "minItems": 1,
          "items": {
            "type": "string"
          }
        }
      }
    },
    "StorageApplianceList": {
      "type": "object",
      "title": "StorageApplianceList represents a list of storage appliances.",
      "properties": {
        "nextLink": {
          "description": "The link used to get the next page of operations.",
          "type": "string"
        },
        "value": {
          "description": "The list of storage appliances.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/StorageAppliance"
          }
        }
      }
    },
    "StorageAppliancePatchParameters": {
      "type": "object",
      "title": "StorageAppliancePatchParameters represents the body of the request to patch storage appliance properties.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/StorageAppliancePatchProperties",
          "description": "The list of the resource properties.",
          "x-ms-client-flatten": true
        },
        "tags": {
          "description": "The Azure resource tags that will replace the existing ones.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "StorageAppliancePatchProperties": {
      "type": "object",
      "title": "StorageAppliancePatchProperties represents the properties of the storage appliance that can be patched.",
      "properties": {
        "serialNumber": {
          "description": "The serial number for the storage appliance.",
          "type": "string"
        }
      }
    },
    "StorageApplianceProperties": {
      "type": "object",
      "title": "StorageApplianceProperties represents the properties of the storage appliance.",
      "required": [
        "storageApplianceSkuId",
        "serialNumber",
        "administratorCredentialsKeyVaultId"
      ],
      "properties": {
        "administratorCredentialsKeyVaultId": {
          "description": "The administrator credentials for the storage appliance. Initially this entry would point to the factory defaults.",
          "type": "string",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "capacity": {
          "description": "The total capacity of the storage appliance.",
          "type": "integer",
          "format": "int64",
          "readOnly": true
        },
        "capacityUsed": {
          "description": "The amount of storage consumed.",
          "type": "integer",
          "format": "int64",
          "readOnly": true
        },
        "clusterId": {
          "description": "The resource ID of the cluster this storage appliance is associated with.",
          "type": "string",
          "readOnly": true
        },
        "csiDriver": {
          "description": "The CSI driver that is to be used to access this storage appliance in Hybrid AKS provisioned clusters.",
          "type": "string",
          "readOnly": true
        },
        "provisioningState": {
          "description": "The provisioning state of the storage appliance.",
          "type": "string",
          "enum": [
            "Succeeded",
            "Failed",
            "Canceled",
            "Provisioning",
            "Accepted"
          ],
          "x-ms-enum": {
            "modelAsString": true,
            "name": "StorageApplianceProvisioningState"
          },
          "readOnly": true
        },
        "remoteVendorManagementFeature": {
          "description": "The indicator of whether the storage appliance supports remote vendor management.",
          "type": "string",
          "enum": [
            "Supported",
            "Unsupported"
          ],
          "x-ms-enum": {
            "modelAsString": true,
            "name": "RemoteVendorManagementFeature"
          },
          "readOnly": true
        },
        "remoteVendorManagementStatus": {
          "description": "The indicator of whether the remote vendor management feature is enabled or disabled, or unsupported if it is an unsupported feature.",
          "type": "string",
          "enum": [
            "Enabled",
            "Disabled",
            "Unsupported"
          ],
          "x-ms-enum": {
            "modelAsString": true,
            "name": "RemoteVendorManagementStatus"
          },
          "readOnly": true
        },
        "serialNumber": {
          "description": "The serial number for the storage appliance.",
          "type": "string"
        },
        "storageApplianceSkuId": {
          "description": "The SKU for the storage appliance.",
          "type": "string",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      }
    },
    "StorageApplianceRunReadCommandsParameters": {
      "type": "object",
      "title": "StorageApplianceRunReadCommandsParameters represents the body of request containing list of read only commands to run for a storage appliance.",
      "required": [
        "commands",
        "limitTimeSeconds"
      ],
      "properties": {
        "commands": {
          "description": "The list of read commands to run.",
          "type": "array",
          "minItems": 1,
          "items": {
            "$ref": "#/definitions/StorageApplianceCommandSpecification"
          },
          "x-ms-identifiers": []
        },
        "limitTimeSeconds": {
          "description": "The maximum time the commands are allowed to run.\nIf the execution time exceeds the maximum, the script will be stopped, any output produced until then will be captured, and the exit code matching a timeout will be returned (252).",
          "type": "integer",
          "format": "int64",
          "maximum": 14400,
          "minimum": 60
        }
      }
    },
    "StorageApplianceSkuProperties": {
      "type": "object",
      "title": "StorageApplianceSkuProperties represents the properties of the storage appliance SKU.",
      "properties": {
        "capacityGB": {
          "description": "The maximum capacity of the storage appliance.",
          "type": "integer",
          "format": "int64",
          "readOnly": true
        },
        "model": {
          "description": "The model of the storage appliance.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "StorageApplianceSkuSlot": {
      "type": "object",
      "title": "StorageApplianceSkuSlot represents the single SKU and rack slot associated with the storage appliance.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/StorageApplianceSkuProperties",
          "description": "The list of the resource properties.",
          "x-ms-client-flatten": true
        },
        "rackSlot": {
          "description": "The position in the rack for the storage appliance.",
          "type": "integer",
          "format": "int64",
          "readOnly": true
        }
      }
    },
    "StorageApplianceValidateHardwareParameters": {
      "type": "object",
      "title": "StorageApplianceValidateHardwareParameters represents the body of the request to validate the physical hardware of a storage appliance.",
      "required": [
        "validationCategory"
      ],
      "properties": {
        "validationCategory": {
          "description": "The category of hardware validation to perform.",
          "type": "string",
          "enum": [
            "BasicValidation"
          ],
          "x-ms-enum": {
            "modelAsString": true,
            "name": "StorageApplianceHardwareValidationCategory"
          }
        }
      }
    },
    "StorageProfile": {
      "type": "object",
      "title": "StorageProfile represents information about a disk.",
      "required": [
        "osDisk"
      ],
      "properties": {
        "osDisk": {
          "$ref": "#/definitions/OsDisk"
        }
      }
    },
    "TagsParameter": {
      "type": "object",
      "title": "TagsParameter represents the resource tags.",
      "properties": {
        "tags": {
          "description": "The Azure resource tags that will replace the existing ones.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "TrunkedNetwork": {
      "type": "object",
      "title": "TrunkedNetwork represents a network that utilizes multiple isolation domains and specified VLANs to create a trunked network.",
      "required": [
        "extendedLocation",
        "properties"
      ],
      "properties": {
        "extendedLocation": {
          "$ref": "#/definitions/ExtendedLocation",
          "description": "The extended location of the cluster associated with the resource."
        },
        "properties": {
          "$ref": "#/definitions/TrunkedNetworkProperties",
          "description": "The list of the resource properties.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/TrackedResource"
        }
      ],
      "x-ms-azure-resource": true
    },
    "TrunkedNetworkList": {
      "type": "object",
      "title": "TrunkedNetworkList represents a list of trunked networks.",
      "properties": {
        "nextLink": {
          "description": "The link used to get the next page of operations.",
          "type": "string"
        },
        "value": {
          "description": "The list of trunked networks.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TrunkedNetwork"
          }
        }
      }
    },
    "TrunkedNetworkPatchParameters": {
      "type": "object",
      "title": "TrunkedNetworkPatchParameters represents the body of the request to patch the Trunked network.",
      "properties": {
        "tags": {
          "description": "The Azure resource tags that will replace the existing ones.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "TrunkedNetworkProperties": {
      "type": "object",
      "title": "TrunkedNetworkProperties represents properties of the trunked network.",
      "required": [
        "isolationDomainIds",
        "vlans"
      ],
      "properties": {
        "clusterId": {
          "description": "The resource ID of the Network Cloud cluster this trunked network is associated with.",
          "type": "string",
          "x-ms-mutability": [
            "read"
          ],
          "readOnly": true
        },
        "hybridAksClustersAssociatedIds": {
          "description": "The list of Hybrid AKS cluster resource IDs that are associated with this trunked network.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-ms-mutability": [
            "read"
          ],
          "readOnly": true
        },
        "hybridAksPluginType": {
          "description": "The network plugin type for Hybrid AKS, defaults to \"HostDevice\".",
          "type": "string",
          "default": "HostDevice",
          "enum": [
            "HostDevice",
            "MACVLAN",
            "DPDK"
          ],
          "x-ms-enum": {
            "modelAsString": true,
            "name": "HybridAksPluginType"
          },
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "interfaceName": {
          "description": "The interface related to the trunked network.",
          "type": "string",
          "maxLength": 12,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "isolationDomainIds": {
          "description": "The resource ID of a Network Fabric isolationDomain.",
          "type": "array",
          "minLength": 1,
          "items": {
            "type": "string"
          },
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "provisioningState": {
          "description": "The provisioning state of the trunked network.",
          "type": "string",
          "enum": [
            "Succeeded",
            "Failed",
            "Canceled",
            "Provisioning",
            "Accepted"
          ],
          "x-ms-enum": {
            "modelAsString": true,
            "name": "TrunkedNetworkProvisioningState"
          },
          "readOnly": true
        },
        "virtualMachinesAssociatedIds": {
          "description": "The list of virtual machine resource IDs, excluding any Hybrid AKS virtual machines, that are currently using this trunked network.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-ms-mutability": [
            "read"
          ],
          "readOnly": true
        },
        "vlans": {
          "description": "The list of vlans that are selected from the isolationDomains for trunking.",
          "type": "array",
          "minLength": 1,
          "items": {
            "type": "integer",
            "format": "int64"
          },
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      }
    },
    "VirtualMachine": {
      "type": "object",
      "title": "VirtualMachine represents the on-premises Network Cloud virtual machine.",
      "required": [
        "extendedLocation",
        "properties"
      ],
      "properties": {
        "extendedLocation": {
          "$ref": "#/definitions/ExtendedLocation",
          "description": "The extended location of the cluster associated with the resource."
        },
        "properties": {
          "$ref": "#/definitions/VirtualMachineProperties",
          "description": "The list of the resource properties.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/TrackedResource"
        }
      ],
      "x-ms-azure-resource": true
    },
    "VirtualMachineList": {
      "type": "object",
      "title": "VirtualMachineList represents a list of virtual machines.",
      "properties": {
        "nextLink": {
          "description": "The link used to get the next page of operations.",
          "type": "string"
        },
        "value": {
          "description": "The list of virtual machines.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/VirtualMachine"
          }
        }
      }
    },
    "VirtualMachinePatchParameters": {
      "type": "object",
      "title": "VirtualMachinePatchParameters represents the body of the request to patch the virtual machine.",
      "properties": {
        "tags": {
          "description": "The Azure resource tags that will replace the existing ones.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "VirtualMachinePlacementHint": {
      "type": "object",
      "title": "VirtualMachinePlacementHint represents a single scheduling hint of the virtual machine.",
      "required": [
        "hintType",
        "schedulingExecution",
        "resourceId",
        "scope"
      ],
      "properties": {
        "hintType": {
          "description": "The specification of whether this hint supports affinity or anti-affinity with the referenced resources.",
          "type": "string",
          "enum": [
            "Affinity",
            "AntiAffinity"
          ],
          "x-ms-enum": {
            "modelAsString": true,
            "name": "VirtualMachinePlacementHintType"
          },
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "resourceId": {
          "description": "The resource ID of the target object that the placement hints will be checked against, e.g., the bare metal node to host the virtual machine.",
          "type": "string",
          "minLength": 1,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "schedulingExecution": {
          "description": "The indicator of whether the hint is a hard or soft requirement during scheduling.",
          "type": "string",
          "enum": [
            "Hard",
            "Soft"
          ],
          "x-ms-enum": {
            "modelAsString": true,
            "name": "VirtualMachineSchedulingExecution"
          },
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "scope": {
          "description": "The scope for the virtual machine affinity or anti-affinity placement hint. It should always be \"Machine\" in the case of node affinity.",
          "type": "string",
          "enum": [
            "Rack",
            "Machine"
          ],
          "x-ms-enum": {
            "modelAsString": true,
            "name": "VirtualMachinePlacementHintPodAffinityScope"
          },
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      }
    },
    "VirtualMachinePowerOffParameters": {
      "type": "object",
      "title": "VirtualMachinePowerOffParameters represents the body of the request to power off virtual machine.",
      "properties": {
        "skipShutdown": {
          "description": "The indicator of whether to skip the graceful OS shutdown and power off the virtual machine immediately.",
          "type": "string",
          "default": "False",
          "enum": [
            "True",
            "False"
          ],
          "x-ms-enum": {
            "modelAsString": true,
            "name": "SkipShutdown"
          }
        }
      }
    },
    "VirtualMachineProperties": {
      "type": "object",
      "title": "VirtualMachineProperties represents the properties of the virtual machine.",
      "required": [
        "vmImage",
        "cpuCores",
        "memorySizeGB",
        "storageProfile",
        "cloudServicesNetworkAttachment",
        "networkAttachments",
        "adminUsername",
        "sshPublicKeys"
      ],
      "properties": {
        "adminUsername": {
          "description": "The name of the administrator to which the ssh public keys will be added into the authorized keys.",
          "type": "string",
          "maxLength": 32,
          "minLength": 1,
          "pattern": "[a-z_][a-z0-9_]{0,31}",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "bareMetalMachineId": {
          "description": "The resource ID of the bare metal machine the virtual machine has landed to.",
          "type": "string",
          "readOnly": true
        },
        "bootMethod": {
          "description": "Selects the boot method for the virtual machine.",
          "type": "string",
          "default": "UEFI",
          "enum": [
            "UEFI",
            "BIOS"
          ],
          "x-ms-enum": {
            "modelAsString": true,
            "name": "VirtualMachineBootMethod"
          },
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "cloudServicesNetworkAttachment": {
          "$ref": "#/definitions/NetworkAttachment"
        },
        "clusterId": {
          "description": "The resource ID of the cluster the virtual machine is created for.",
          "type": "string",
          "readOnly": true
        },
        "cpuCores": {
          "description": "The number of CPU cores in the virtual machine.",
          "type": "integer",
          "format": "int64",
          "minimum": 2,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "memorySizeGB": {
          "description": "The memory size of the virtual machine in GB.",
          "type": "integer",
          "format": "int64",
          "minimum": 1,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "networkAttachments": {
          "description": "The list of network attachments to the virtual machine.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/NetworkAttachment"
          },
          "x-ms-identifiers": [],
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "networkData": {
          "description": "The Base64 encoded cloud-init network data.",
          "type": "string",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "placementHints": {
          "description": "The scheduling hints for the virtual machine.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/VirtualMachinePlacementHint"
          },
          "x-ms-identifiers": [],
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "powerState": {
          "description": "The power state of the virtual machine.",
          "type": "string",
          "enum": [
            "On",
            "Off"
          ],
          "x-ms-enum": {
            "modelAsString": true,
            "name": "VirtualMachinePowerState"
          },
          "readOnly": true
        },
        "provisioningState": {
          "description": "The provisioning state of the virtual machine.",
          "type": "string",
          "enum": [
            "Succeeded",
            "Failed",
            "Canceled",
            "Provisioning",
            "Accepted"
          ],
          "x-ms-enum": {
            "modelAsString": true,
            "name": "VirtualMachineProvisioningState"
          },
          "readOnly": true
        },
        "sshPublicKeys": {
          "description": "A list of ssh public keys. Each key will be added to the virtual machine using the cloud-init\nssh_authorized_keys mechanism for the adminUsername",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SshPublicKey"
          },
          "x-ms-identifiers": [],
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "storageProfile": {
          "$ref": "#/definitions/StorageProfile"
        },
        "userData": {
          "description": "The Base64 encoded cloud-init user data.",
          "type": "string",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "vmImage": {
          "description": "The URL to virtual machine OCI image, could be from ACR or other OCI repository.",
          "type": "string",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      }
    }
  },
  "parameters": {
    "BareMetalMachineNameParameter": {
      "type": "string",
      "x-ms-parameter-location": "method",
      "description": "The name of the bare metal machine.",
      "name": "bareMetalMachineName",
      "in": "path",
      "required": true
    },
    "CloudServicesNetworkNameParameter": {
      "type": "string",
      "x-ms-parameter-location": "method",
      "description": "The name of the cloud services network.",
      "name": "cloudServicesNetworkName",
      "in": "path",
      "required": true
    },
    "ClusterManagerNameParameter": {
      "type": "string",
      "x-ms-parameter-location": "method",
      "description": "The name of the cluster manager.",
      "name": "clusterManagerName",
      "in": "path",
      "required": true
    },
    "ClusterNameParameter": {
      "type": "string",
      "x-ms-parameter-location": "method",
      "description": "The name of the cluster.",
      "name": "clusterName",
      "in": "path",
      "required": true
    },
    "DefaultCniNetworkNameParameter": {
      "type": "string",
      "x-ms-parameter-location": "method",
      "description": "The name of the default CNI network.",
      "name": "defaultCniNetworkName",
      "in": "path",
      "required": true
    },
    "DiskNameParameter": {
      "type": "string",
      "x-ms-parameter-location": "method",
      "description": "The name of the disk.",
      "name": "diskName",
      "in": "path",
      "required": true
    },
    "HybridAksClusterNameParameter": {
      "type": "string",
      "x-ms-parameter-location": "method",
      "description": "The name of the Hybrid AKS cluster.",
      "name": "hybridAksClusterName",
      "in": "path",
      "required": true
    },
    "L2NetworkNameParameter": {
      "type": "string",
      "x-ms-parameter-location": "method",
      "description": "The name of the L2 network.",
      "name": "l2NetworkName",
      "in": "path",
      "required": true
    },
    "L3NetworkNameParameter": {
      "type": "string",
      "x-ms-parameter-location": "method",
      "description": "The name of the L3 network.",
      "name": "l3NetworkName",
      "in": "path",
      "required": true
    },
    "RackNameParameter": {
      "type": "string",
      "x-ms-parameter-location": "method",
      "description": "The name of the rack.",
      "name": "rackName",
      "in": "path",
      "required": true
    },
    "RackSkuNameParameter": {
      "type": "string",
      "x-ms-parameter-location": "method",
      "description": "The name of the rack SKU.",
      "name": "rackSkuName",
      "in": "path",
      "required": true
    },
    "StorageApplianceNameParameter": {
      "type": "string",
      "x-ms-parameter-location": "method",
      "description": "The name of the storage appliance.",
      "name": "storageApplianceName",
      "in": "path",
      "required": true
    },
    "TrunkedNetworkNameParameter": {
      "type": "string",
      "x-ms-parameter-location": "method",
      "description": "The name of the trunked network.",
      "name": "trunkedNetworkName",
      "in": "path",
      "required": true
    },
    "VirtualMachineNameParameter": {
      "type": "string",
      "x-ms-parameter-location": "method",
      "description": "The name of the virtual machine.",
      "name": "virtualMachineName",
      "in": "path",
      "required": true
    }
  },
  "securityDefinitions": {
    "azure_auth": {
      "description": "Azure Active Directory OAuth2 Flow",
      "type": "oauth2",
      "flow": "implicit",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ]
}
