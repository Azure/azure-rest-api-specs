{
  "swagger": "2.0",
  "info": {
    "title": "Microsoft.App Dynamic Sessions service",
    "version": "2024-09-01",
    "x-typespec-generated": [
      {
        "emitter": "@azure-tools/typespec-autorest"
      }
    ]
  },
  "schemes": [
    "https"
  ],
  "x-ms-parameterized-host": {
    "hostTemplate": "{endpoint}",
    "useSchemePrefix": false,
    "parameters": [
      {
        "name": "endpoint",
        "in": "path",
        "description": "The management endpoint of the session pool.",
        "required": true,
        "type": "string"
      }
    ]
  },
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "security": [
    {
      "AadOauth2Auth": [
        "https://dynamicsessions.io/.default"
      ]
    }
  ],
  "securityDefinitions": {
    "AadOauth2Auth": {
      "type": "oauth2",
      "description": "The Azure Active Directory OAuth2 Flow",
      "flow": "accessCode",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
        "https://dynamicsessions.io/.default": ""
      },
      "tokenUrl": "https://login.microsoftonline.com/common/oauth2/token"
    }
  },
  "tags": [],
  "paths": {
    "/execute": {
      "post": {
        "operationId": "ExecuteCode",
        "description": "Execute code in a session.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SessionIdentifier"
          },
          {
            "name": "codeExecutionRequest",
            "in": "body",
            "description": "The request to execute code.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SessionCodeExecutionRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/SessionCodeExecutionResponse"
            }
          },
          "202": {
            "description": "The request has been accepted for processing, but processing has not yet completed.",
            "schema": {
              "$ref": "#/definitions/SessionCodeExecutionResponse"
            },
            "headers": {
              "location": {
                "type": "string",
                "description": "The location for monitoring the code execution state."
              },
              "operation-id": {
                "type": "string",
                "description": "The async code execution operation id."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "ExecuteCode_Result": {
            "$ref": "./examples/ExecuteCode_Result.json"
          },
          "ExecuteCode_StandardOut": {
            "$ref": "./examples/ExecuteCode_StandardOut.json"
          }
        }
      }
    },
    "/execute/{executionId}": {
      "get": {
        "operationId": "GetCodeExecutionResult",
        "description": "Get the code execution result.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SessionIdentifier"
          },
          {
            "$ref": "#/parameters/CodeExecutionIdentifier"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/SessionCodeExecutionResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "GetCodeExecutionResult": {
            "$ref": "./examples/GetCodeExecutionResult.json"
          }
        }
      }
    },
    "/files": {
      "get": {
        "operationId": "SessionResourceFiles_ListFilesMetadata",
        "description": "List the file resources.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SessionIdentifier"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/PagedSessionResourceFile"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "SessionResourceFiles_ListFilesMetadata": {
            "$ref": "./examples/SessionResourceFiles_ListFilesMetadata.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/files/{fileName}": {
      "get": {
        "operationId": "SessionResourceFiles_GetFileMetadata",
        "description": "Get the file resource.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "fileName",
            "in": "path",
            "description": "The name of the file.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/SessionIdentifier"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/SessionResourceFile"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "SessionResourceFiles_GetFileMetadata": {
            "$ref": "./examples/SessionResourceFiles_GetFileMetadata.json"
          }
        }
      },
      "delete": {
        "operationId": "SessionResourceFiles_DeleteFile",
        "description": "Delete the file.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "fileName",
            "in": "path",
            "description": "The name of the file.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/SessionIdentifier"
          }
        ],
        "responses": {
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful. "
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "SessionResourceFiles_DeleteFile": {
            "$ref": "./examples/SessionResourceFiles_DeleteFile.json"
          }
        }
      }
    },
    "/files/{fileName}:downloadFile": {
      "post": {
        "operationId": "SessionResourceFiles_DownloadFile",
        "description": "Upload a file to a session.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "fileName",
            "in": "path",
            "description": "The name of the file.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/SessionIdentifier"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "type": "object",
              "properties": {
                "content": {
                  "type": "string",
                  "format": "byte"
                }
              },
              "required": [
                "content"
              ]
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "SessionResourceFiles_DownloadFile": {
            "$ref": "./examples/SessionResourceFiles_DownloadFile.json"
          }
        }
      }
    },
    "/files:uploadFile": {
      "post": {
        "operationId": "SessionResourceFiles_UploadFile",
        "description": "Upload a file to a session.",
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SessionresourceFilePathParameter"
          },
          {
            "$ref": "#/parameters/SessionIdentifier"
          },
          {
            "name": "file",
            "in": "formData",
            "description": "The file to upload.",
            "required": true,
            "type": "file"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/SessionResourceFile"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "SessionResourceFiles_UploadFile": {
            "$ref": "./examples/SessionResourceFiles_UploadFile.json"
          }
        }
      }
    }
  },
  "definitions": {
    "Azure.Core.Foundations.Error": {
      "type": "object",
      "description": "The error object.",
      "properties": {
        "code": {
          "type": "string",
          "description": "One of a server-defined set of error codes."
        },
        "message": {
          "type": "string",
          "description": "A human-readable representation of the error."
        },
        "target": {
          "type": "string",
          "description": "The target of the error."
        },
        "details": {
          "type": "array",
          "description": "An array of details about specific errors that led to this reported error.",
          "items": {
            "$ref": "#/definitions/Azure.Core.Foundations.Error"
          },
          "x-ms-identifiers": []
        },
        "innererror": {
          "$ref": "#/definitions/Azure.Core.Foundations.InnerError",
          "description": "An object containing more specific information than the current object about the error."
        }
      },
      "required": [
        "code",
        "message"
      ]
    },
    "Azure.Core.Foundations.ErrorResponse": {
      "type": "object",
      "description": "A response containing error details.",
      "properties": {
        "error": {
          "$ref": "#/definitions/Azure.Core.Foundations.Error",
          "description": "The error object."
        }
      },
      "required": [
        "error"
      ]
    },
    "Azure.Core.Foundations.InnerError": {
      "type": "object",
      "description": "An object containing more specific information about the error. As per Microsoft One API guidelines - https://github.com/Microsoft/api-guidelines/blob/vNext/Guidelines.md#7102-error-condition-responses.",
      "properties": {
        "code": {
          "type": "string",
          "description": "One of a server-defined set of error codes."
        },
        "innererror": {
          "$ref": "#/definitions/Azure.Core.Foundations.InnerError",
          "description": "Inner error."
        }
      }
    },
    "CodeExecutionStatus": {
      "type": "string",
      "description": "Code execution status.",
      "enum": [
        "Success",
        "Failure"
      ],
      "x-ms-enum": {
        "name": "CodeExecutionStatus",
        "modelAsString": true,
        "values": [
          {
            "name": "Success",
            "value": "Success",
            "description": "The code execution succeeded."
          },
          {
            "name": "Failure",
            "value": "Failure",
            "description": "The code execution failed."
          }
        ]
      }
    },
    "CodeInputType": {
      "type": "string",
      "description": "Code input type.",
      "enum": [
        "Inline",
        "InlineBase64",
        "InlineText"
      ],
      "x-ms-enum": {
        "name": "CodeInputType",
        "modelAsString": true,
        "values": [
          {
            "name": "inline",
            "value": "Inline",
            "description": "Inline."
          },
          {
            "name": "inlineBase64",
            "value": "InlineBase64",
            "description": "InlineBase64."
          },
          {
            "name": "inlineText",
            "value": "InlineText",
            "description": "InlineText."
          }
        ]
      }
    },
    "ExecutionType": {
      "type": "string",
      "description": "Execution Type",
      "enum": [
        "Synchronous",
        "Asynchronous"
      ],
      "x-ms-enum": {
        "name": "ExecutionType",
        "modelAsString": true,
        "values": [
          {
            "name": "synchronous",
            "value": "Synchronous",
            "description": "Synchronous"
          },
          {
            "name": "asynchronous",
            "value": "Asynchronous",
            "description": "Asynchronous"
          }
        ]
      }
    },
    "MultiArrayStatus": {
      "type": "string",
      "description": "Multi array status.",
      "enum": [
        "MultiArrayEnabled",
        "MultiArrayDisabled"
      ],
      "x-ms-enum": {
        "name": "MultiArrayStatus",
        "modelAsString": true,
        "values": [
          {
            "name": "multiArrayEnabled",
            "value": "MultiArrayEnabled",
            "description": "Multi array enabled"
          },
          {
            "name": "multiArrayDisabled",
            "value": "MultiArrayDisabled",
            "description": "Multi array disabled."
          }
        ]
      }
    },
    "NetworkStatus": {
      "type": "string",
      "description": "Network status.",
      "enum": [
        "EgressEnabled",
        "EgressDisabled"
      ],
      "x-ms-enum": {
        "name": "NetworkStatus",
        "modelAsString": true,
        "values": [
          {
            "name": "egressEnabled",
            "value": "EgressEnabled",
            "description": "Session egress enabled."
          },
          {
            "name": "egressDisabled",
            "value": "EgressDisabled",
            "description": "Session egress disabled."
          }
        ]
      }
    },
    "PagedSessionResourceFile": {
      "type": "object",
      "description": "Paged collection of SessionResourceFile items",
      "properties": {
        "value": {
          "type": "array",
          "description": "The SessionResourceFile items on this page",
          "items": {
            "$ref": "#/definitions/SessionResourceFile"
          },
          "x-ms-identifiers": []
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "SessionCodeExecutionAsyncResponse": {
      "type": "object",
      "description": "The response of the async code execution.",
      "properties": {
        "codeInputType": {
          "$ref": "#/definitions/CodeInputType",
          "description": "The code input type of the code execution request."
        },
        "executionType": {
          "$ref": "#/definitions/ExecutionType",
          "description": "The execution type of the code execution request."
        },
        "networkStatus": {
          "$ref": "#/definitions/NetworkStatus",
          "description": "The network status of the code execution session."
        },
        "multiArrayStatus": {
          "$ref": "#/definitions/MultiArrayStatus",
          "description": "The multi array status of the code execution session."
        },
        "code": {
          "type": "string",
          "description": "The string of the code to execute, based on CodeInputType."
        },
        "timeoutInSeconds": {
          "type": "integer",
          "format": "int64",
          "description": "Code execution timeout in seconds."
        },
        "id": {
          "type": "string",
          "description": "Session code execution id.",
          "readOnly": true
        },
        "status": {
          "$ref": "#/definitions/CodeExecutionStatus",
          "description": "The status of the code execution, indicates whether succeeded or not."
        },
        "stdout": {
          "type": "string",
          "description": "The standard output of the code execution."
        },
        "stderr": {
          "type": "string",
          "description": "The standard error of the code execution."
        },
        "result": {
          "description": "The result of the code execution."
        },
        "executionTimeInMilliseconds": {
          "type": "integer",
          "format": "int64",
          "description": "The execution time of the code in milliseconds."
        }
      },
      "required": [
        "codeInputType",
        "executionType",
        "networkStatus",
        "multiArrayStatus",
        "code",
        "timeoutInSeconds",
        "id",
        "status",
        "stdout",
        "stderr",
        "result",
        "executionTimeInMilliseconds"
      ]
    },
    "SessionCodeExecutionRequest": {
      "type": "object",
      "description": "The request to execute code.",
      "properties": {
        "codeInputType": {
          "$ref": "#/definitions/CodeInputType",
          "description": "The code input type of the code execution request."
        },
        "executionType": {
          "$ref": "#/definitions/ExecutionType",
          "description": "The execution type of the code execution request."
        },
        "networkStatus": {
          "$ref": "#/definitions/NetworkStatus",
          "description": "The network status of the code execution session."
        },
        "multiArrayStatus": {
          "$ref": "#/definitions/MultiArrayStatus",
          "description": "The multi array status of the code execution session."
        },
        "code": {
          "type": "string",
          "description": "The string of the code to execute, based on CodeInputType."
        },
        "timeoutInSeconds": {
          "type": "integer",
          "format": "int64",
          "description": "Code execution timeout in seconds."
        }
      },
      "required": [
        "codeInputType",
        "executionType",
        "networkStatus",
        "multiArrayStatus",
        "code",
        "timeoutInSeconds"
      ]
    },
    "SessionCodeExecutionResponse": {
      "type": "object",
      "description": "The response containing the result of the code execution.",
      "properties": {
        "codeInputType": {
          "$ref": "#/definitions/CodeInputType",
          "description": "The code input type of the code execution request."
        },
        "executionType": {
          "$ref": "#/definitions/ExecutionType",
          "description": "The execution type of the code execution request."
        },
        "networkStatus": {
          "$ref": "#/definitions/NetworkStatus",
          "description": "The network status of the code execution session."
        },
        "multiArrayStatus": {
          "$ref": "#/definitions/MultiArrayStatus",
          "description": "The multi array status of the code execution session."
        },
        "code": {
          "type": "string",
          "description": "The string of the code to execute, based on CodeInputType."
        },
        "timeoutInSeconds": {
          "type": "integer",
          "format": "int64",
          "description": "Code execution timeout in seconds."
        },
        "id": {
          "type": "string",
          "description": "Session code execution id.",
          "readOnly": true
        },
        "status": {
          "$ref": "#/definitions/CodeExecutionStatus",
          "description": "The status of the code execution, indicates whether succeeded or not."
        },
        "stdout": {
          "type": "string",
          "description": "The standard output of the code execution."
        },
        "stderr": {
          "type": "string",
          "description": "The standard error of the code execution."
        },
        "result": {
          "description": "The result of the code execution."
        },
        "executionTimeInMilliseconds": {
          "type": "integer",
          "format": "int64",
          "description": "The execution time of the code in milliseconds."
        }
      },
      "required": [
        "codeInputType",
        "executionType",
        "networkStatus",
        "multiArrayStatus",
        "code",
        "timeoutInSeconds",
        "id",
        "status",
        "stdout",
        "stderr",
        "result",
        "executionTimeInMilliseconds"
      ]
    },
    "SessionResourceFile": {
      "type": "object",
      "description": "Code execution file resource.",
      "properties": {
        "fileName": {
          "type": "string",
          "description": "The name of the file.",
          "x-ms-mutability": [
            "read",
            "update",
            "create"
          ]
        },
        "sizeInBytes": {
          "type": "integer",
          "format": "int64",
          "description": "The size of the file."
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "The date time in RFC3339 format when the file was uploaded."
        },
        "lastModifiedAt": {
          "type": "string",
          "format": "date-time",
          "description": "The date time in RFC3339 format when the file was last modified."
        }
      },
      "required": [
        "fileName",
        "sizeInBytes",
        "createdAt",
        "lastModifiedAt"
      ]
    },
    "SessionResourceFileCollection": {
      "type": "object",
      "description": "Code execution file resource collection.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The files uploaded.",
          "items": {
            "$ref": "#/definitions/SessionResourceFile"
          },
          "x-ms-identifiers": []
        }
      },
      "required": [
        "value"
      ]
    },
    "SessionResourceFileNameParameter": {
      "type": "object",
      "description": "The session resource file name parameter.",
      "properties": {
        "fileName": {
          "type": "string",
          "description": "The name of the file."
        }
      },
      "required": [
        "fileName"
      ]
    }
  },
  "parameters": {
    "Azure.Core.Foundations.ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "description": "The API version to use for this operation.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "x-ms-parameter-location": "method",
      "x-ms-client-name": "apiVersion"
    },
    "CodeExecutionIdentifier": {
      "name": "executionId",
      "in": "path",
      "description": "The identifier of code execution.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "client"
    },
    "SessionIdentifier": {
      "name": "identifier",
      "in": "query",
      "description": "The identifier of the session.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "client"
    },
    "SessionresourceFilePathParameter": {
      "name": "path",
      "in": "query",
      "description": "The path of the file after uploaded.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "client"
    }
  }
}
