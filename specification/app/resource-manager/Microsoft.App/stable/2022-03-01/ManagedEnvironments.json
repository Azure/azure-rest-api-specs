{
  "swagger": "2.0",
  "info": {
    "version": "2022-03-01",
    "title": "ContainerApps API Client"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/subscriptions/{subscriptionId}/providers/Microsoft.App/managedEnvironments": {
      "get": {
        "tags": [
          "ManagedEnvironments"
        ],
        "summary": "Get all Environments for a subscription.",
        "description": "Get all Managed Environments for a subscription.",
        "operationId": "ManagedEnvironments_ListBySubscription",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ManagedEnvironmentsCollection"
            }
          },
          "default": {
            "description": "Common error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "List environments by subscription": {
            "$ref": "./examples/ManagedEnvironments_ListBySubscription.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/managedEnvironments": {
      "get": {
        "tags": [
          "ManagedEnvironments"
        ],
        "summary": "Get all the Environments in a resource group.",
        "description": "Get all the Managed Environments in a resource group.",
        "operationId": "ManagedEnvironments_ListByResourceGroup",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ManagedEnvironmentsCollection"
            }
          },
          "default": {
            "description": "Common error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "List environments by resource group": {
            "$ref": "./examples/ManagedEnvironments_ListByResourceGroup.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/managedEnvironments/{environmentName}": {
      "get": {
        "tags": [
          "ManagedEnvironments"
        ],
        "summary": "Get the properties of a Managed Environment.",
        "description": "Get the properties of a Managed Environment used to host container apps.",
        "operationId": "ManagedEnvironments_Get",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "environmentName",
            "in": "path",
            "description": "Name of the Environment.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ManagedEnvironment"
            }
          },
          "default": {
            "description": "Common error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get environments by name": {
            "$ref": "./examples/ManagedEnvironments_Get.json"
          }
        }
      },
      "put": {
        "tags": [
          "ManagedEnvironments"
        ],
        "summary": "Creates or updates a Managed Environment.",
        "description": "Creates or updates a Managed Environment used to host container apps.",
        "operationId": "ManagedEnvironments_CreateOrUpdate",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "environmentName",
            "in": "path",
            "description": "Name of the Environment.",
            "required": true,
            "type": "string"
          },
          {
            "name": "environmentEnvelope",
            "in": "body",
            "description": "Configuration details of the Environment.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ManagedEnvironment"
            }
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ManagedEnvironment"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/ManagedEnvironment"
            }
          },
          "default": {
            "description": "Common error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "Create environments": {
            "$ref": "./examples/ManagedEnvironments_CreateOrUpdate.json"
          }
        }
      },
      "delete": {
        "tags": [
          "ManagedEnvironments"
        ],
        "summary": "Delete a Managed Environment.",
        "description": "Delete a Managed Environment if it does not have any container apps.",
        "operationId": "ManagedEnvironments_Delete",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "environmentName",
            "in": "path",
            "description": "Name of the Environment.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete operation completed"
          },
          "202": {
            "description": "Delete operation is in progress"
          },
          "204": {
            "description": "Environment does not exist"
          },
          "default": {
            "description": "Common error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete environment by name": {
            "$ref": "./examples/ManagedEnvironments_Delete.json"
          }
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "tags": [
          "ManagedEnvironments"
        ],
        "summary": "Update Managed Environment's properties.",
        "description": "Patches a Managed Environment using JSON Merge Patch",
        "operationId": "ManagedEnvironments_Update",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "environmentName",
            "in": "path",
            "description": "Name of the Environment.",
            "required": true,
            "type": "string"
          },
          {
            "name": "environmentEnvelope",
            "in": "body",
            "description": "Configuration details of the Environment.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ManagedEnvironment"
            }
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok.",
            "schema": {
              "$ref": "#/definitions/ManagedEnvironment"
            }
          },
          "202": {
            "description": "Patch operation is in progress."
          },
          "default": {
            "description": "Common error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Patch Managed Environment": {
            "$ref": "./examples/ManagedEnvironments_Patch.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/managedEnvironments/{environmentName}/certificates": {
      "get": {
        "tags": [
          "ManagedEnvironments",
          "Certificates"
        ],
        "summary": "Get the Certificates in a given managed environment.",
        "operationId": "Certificates_List",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "environmentName",
            "in": "path",
            "description": "Name of the Managed Environment.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CertificateCollection"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List Certificates by Managed Environment": {
            "$ref": "./examples/Certificates_ListByManagedEnvironment.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/managedEnvironments/{environmentName}/certificates/{certificateName}": {
      "get": {
        "tags": [
          "ManagedEnvironments",
          "Certificates"
        ],
        "summary": "Get the specified Certificate.",
        "operationId": "Certificates_Get",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "environmentName",
            "in": "path",
            "description": "Name of the Managed Environment.",
            "required": true,
            "type": "string"
          },
          {
            "name": "certificateName",
            "in": "path",
            "description": "Name of the Certificate.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Certificate"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get Certificate": {
            "$ref": "./examples/Certificate_Get.json"
          }
        }
      },
      "put": {
        "tags": [
          "ManagedEnvironments",
          "Certificates"
        ],
        "summary": "Create or Update a Certificate.",
        "operationId": "Certificates_CreateOrUpdate",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "environmentName",
            "in": "path",
            "description": "Name of the Managed Environment.",
            "required": true,
            "type": "string"
          },
          {
            "name": "certificateName",
            "in": "path",
            "description": "Name of the Certificate.",
            "required": true,
            "type": "string"
          },
          {
            "name": "certificateEnvelope",
            "in": "body",
            "description": "Certificate to be created or updated",
            "schema": {
              "$ref": "#/definitions/Certificate"
            }
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Certificate"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Create or Update Certificate": {
            "$ref": "./examples/Certificate_CreateOrUpdate.json"
          }
        }
      },
      "delete": {
        "tags": [
          "ManagedEnvironments",
          "Certificates"
        ],
        "summary": "Deletes the specified Certificate.",
        "operationId": "Certificates_Delete",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "environmentName",
            "in": "path",
            "description": "Name of the Managed Environment.",
            "required": true,
            "type": "string"
          },
          {
            "name": "certificateName",
            "in": "path",
            "description": "Name of the Certificate.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete operation completed"
          },
          "204": {
            "description": "Certificate does not exist"
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete Certificate": {
            "$ref": "./examples/Certificate_Delete.json"
          }
        }
      },
      "patch": {
        "tags": [
          "ManagedEnvironments",
          "Certificates"
        ],
        "summary": "Update properties of a certificate",
        "description": "Patches a certificate. Currently only patching of tags is supported",
        "operationId": "Certificates_Update",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "environmentName",
            "in": "path",
            "description": "Name of the Managed Environment.",
            "required": true,
            "type": "string"
          },
          {
            "name": "certificateName",
            "in": "path",
            "description": "Name of the Certificate.",
            "required": true,
            "type": "string"
          },
          {
            "name": "certificateEnvelope",
            "in": "body",
            "required": true,
            "description": "Properties of a certificate that need to be updated",
            "schema": {
              "$ref": "#/definitions/CertificatePatch"
            }
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Container App updated successfully.",
            "schema": {
              "$ref": "#/definitions/Certificate"
            }
          },
          "default": {
            "description": "Common error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Patch Certificate": {
            "$ref": "./examples/Certificates_Patch.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/managedEnvironments/{environmentName}/checkNameAvailability": {
      "post": {
        "tags": [
          "ManagedEnvironments"
        ],
        "summary": "Checks the resource name availability.",
        "description": "Checks if resource name is available.",
        "operationId": "Namespaces_CheckNameAvailability",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "environmentName",
            "in": "path",
            "description": "Name of the Managed Environment.",
            "required": true,
            "type": "string"
          },
          {
            "name": "checkNameAvailabilityRequest",
            "in": "body",
            "description": "The check name availability request.",
            "required": true,
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/CheckNameAvailabilityRequest"
            }
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/CheckNameAvailabilityResponse"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ContainerApps_CheckNameAvailability": {
            "$ref": "./examples/ContainerApps_CheckNameAvailability.json"
          },
          "Certificates_CheckNameAvailability": {
            "$ref": "./examples/Certificates_CheckNameAvailability.json"
          }
        }
      }
    }
  },
  "definitions": {
    "AppLogsConfiguration": {
      "description": "Configuration of application logs",
      "type": "object",
      "properties": {
        "destination": {
          "description": "Logs destination, can be 'log-analytics', 'azure-monitor' or 'none'",
          "type": "string"
        },
        "logAnalyticsConfiguration": {
          "description": "Log Analytics configuration, must only be provided when destination is configured as 'log-analytics'",
          "$ref": "#/definitions/LogAnalyticsConfiguration"
        }
      }
    },
    "VnetConfiguration": {
      "type": "object",
      "description": "Configuration properties for apps environment to join a Virtual Network",
      "properties": {
        "internal": {
          "type": "boolean",
          "description": "Boolean indicating the environment only has an internal load balancer. These environments do not have a public static IP resource. They must provide runtimeSubnetId and infrastructureSubnetId if enabling this property",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "infrastructureSubnetId": {
          "type": "string",
          "description": "Resource ID of a subnet for infrastructure components. This subnet must be in the same VNET as the subnet defined in runtimeSubnetId. Must not overlap with any other provided IP ranges.",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "runtimeSubnetId": {
          "type": "string",
          "description": "This field is deprecated and not used. If you wish to provide your own subnet that Container App containers are injected into, then you should leverage the infrastructureSubnetId.",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "dockerBridgeCidr": {
          "type": "string",
          "description": "CIDR notation IP range assigned to the Docker bridge, network. Must not overlap with any other provided IP ranges.",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "platformReservedCidr": {
          "type": "string",
          "description": "IP range in CIDR notation that can be reserved for environment infrastructure IP addresses. Must not overlap with any other provided IP ranges.",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "platformReservedDnsIP": {
          "type": "string",
          "description": " An IP address from the IP range defined by platformReservedCidr that will be reserved for the internal DNS server.",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      }
    },
    "ManagedEnvironment": {
      "description": "An environment for hosting container apps",
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/TrackedResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "Managed environment resource specific properties",
          "type": "object",
          "properties": {
            "provisioningState": {
              "description": "Provisioning state of the Environment.",
              "enum": [
                "Succeeded",
                "Failed",
                "Canceled",
                "Waiting",
                "InitializationInProgress",
                "InfrastructureSetupInProgress",
                "InfrastructureSetupComplete",
                "ScheduledForDelete",
                "UpgradeRequested",
                "UpgradeFailed"
              ],
              "type": "string",
              "readOnly": true,
              "x-ms-enum": {
                "name": "EnvironmentProvisioningState",
                "modelAsString": true
              }
            },
            "daprAIInstrumentationKey": {
              "type": "string",
              "description": "Azure Monitor instrumentation key used by Dapr to export Service to Service communication telemetry",
              "x-ms-secret": true
            },
            "daprAIConnectionString": {
              "type": "string",
              "description": "Application Insights connection string used by Dapr to export Service to Service communication telemetry",
              "x-ms-mutability": [
                "create",
                "read"
              ],
              "x-ms-secret": true
            },
            "vnetConfiguration": {
              "description": "Vnet configuration for the environment",
              "$ref": "#/definitions/VnetConfiguration"
            },
            "deploymentErrors": {
              "description": "Any errors that occurred during deployment or deployment validation",
              "type": "string",
              "readOnly": true
            },
            "defaultDomain": {
              "description": "Default Domain Name for the cluster",
              "type": "string",
              "readOnly": true
            },
            "staticIp": {
              "description": "Static IP of the Environment",
              "type": "string",
              "readOnly": true
            },
            "appLogsConfiguration": {
              "$ref": "#/definitions/AppLogsConfiguration",
              "description": "Cluster configuration which enables the log daemon to export\napp logs to a destination. Currently only \"log-analytics\" is\nsupported"
            },
            "zoneRedundant": {
              "description": "Whether or not this Managed Environment is zone-redundant.",
              "type": "boolean",
              "x-ms-mutability": [
                "create",
                "read"
              ]
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "ManagedEnvironmentsCollection": {
      "description": "Collection of Environments",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ManagedEnvironment"
          }
        },
        "nextLink": {
          "description": "Link to next page of resources.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "LogAnalyticsConfiguration": {
      "description": "Log Analytics configuration, must only be provided when destination is configured as 'log-analytics'",
      "type": "object",
      "properties": {
        "customerId": {
          "description": "Log analytics customer id",
          "type": "string"
        },
        "sharedKey": {
          "description": "Log analytics customer key",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "update"
          ],
          "x-ms-secret": true
        }
      }
    },
    "Certificate": {
      "description": "Certificate used for Custom Domain bindings of Container Apps in a Managed Environment",
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/TrackedResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "Certificate resource specific properties",
          "type": "object",
          "properties": {
            "provisioningState": {
              "description": "Provisioning state of the certificate.",
              "enum": [
                "Succeeded",
                "Failed",
                "Canceled",
                "DeleteFailed",
                "Pending"
              ],
              "type": "string",
              "readOnly": true,
              "x-ms-enum": {
                "name": "CertificateProvisioningState",
                "modelAsString": true
              }
            },
            "password": {
              "description": "Certificate password.",
              "type": "string",
              "x-ms-mutability": [
                "create"
              ],
              "x-ms-secret": true
            },
            "subjectName": {
              "description": "Subject name of the certificate.",
              "type": "string",
              "readOnly": true
            },
            "value": {
              "format": "byte",
              "description": "PFX or PEM blob",
              "type": "string",
              "x-ms-mutability": [
                "create"
              ],
              "x-ms-secret": true
            },
            "issuer": {
              "description": "Certificate issuer.",
              "type": "string",
              "readOnly": true
            },
            "issueDate": {
              "format": "date-time",
              "description": "Certificate issue Date.",
              "type": "string",
              "readOnly": true
            },
            "expirationDate": {
              "format": "date-time",
              "description": "Certificate expiration date.",
              "type": "string",
              "readOnly": true
            },
            "thumbprint": {
              "description": "Certificate thumbprint.",
              "type": "string",
              "readOnly": true
            },
            "valid": {
              "description": "Is the certificate valid?.",
              "type": "boolean",
              "readOnly": true
            },
            "publicKeyHash": {
              "description": "Public key hash.",
              "type": "string",
              "readOnly": true
            }
          }
        }
      },
      "x-ms-client-flatten": true
    },
    "CertificateCollection": {
      "description": "Collection of Certificates.",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Certificate"
          }
        },
        "nextLink": {
          "description": "Link to next page of resources.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "CertificatePatch": {
      "description": "A certificate to update",
      "type": "object",
      "properties": {
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Application-specific metadata in the form of key-value pairs."
        }
      }
    }
  },
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "description": "Azure Active Directory OAuth2 Flow",
      "flow": "implicit",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ]
}
