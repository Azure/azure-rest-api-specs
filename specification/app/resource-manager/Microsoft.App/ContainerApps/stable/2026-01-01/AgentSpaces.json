{
  "swagger": "2.0",
  "info": {
    "title": "ContainerApps API Client",
    "version": "2026-01-01"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/subscriptions/{subscriptionId}/providers/Microsoft.App/agentSpaces": {
      "get": {
        "tags": [
          "AgentSpaces"
        ],
        "summary": "Get all agent spaces for a subscription.",
        "operationId": "AgentSpaces_ListBySubscription",
        "parameters": [
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AgentSpaceCollection"
            }
          },
          "default": {
            "description": "Common error response.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "List agent spaces by subscription": {
            "$ref": "./examples/AgentSpaces_ListBySubscription.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/agentSpaces": {
      "get": {
        "tags": [
          "AgentSpaces"
        ],
        "summary": "Get all the agent spaces in a resource group.",
        "operationId": "AgentSpaces_ListByResourceGroup",
        "parameters": [
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AgentSpaceCollection"
            }
          },
          "default": {
            "description": "Common error response.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "List agent spaces by resource group": {
            "$ref": "./examples/AgentSpaces_ListByResourceGroup.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/agentSpaces/{agentSpaceName}": {
      "get": {
        "tags": [
          "AgentSpaces"
        ],
        "summary": "Get the properties of an Agent Space.",
        "operationId": "AgentSpaces_Get",
        "parameters": [
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "agentSpaceName",
            "in": "path",
            "description": "Name of the agent space.",
            "required": true,
            "type": "string",
            "pattern": "^[A-Za-z]([-A-Za-z0-9]*[A-Za-z0-9])$"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AgentSpace"
            }
          },
          "default": {
            "description": "Common error response.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get an agent space by name": {
            "$ref": "./examples/AgentSpaces_Get.json"
          }
        }
      },
      "put": {
        "tags": [
          "AgentSpaces"
        ],
        "summary": "Creates or updates an Agent Space.",
        "operationId": "AgentSpaces_CreateOrUpdate",
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "parameters": [
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "agentSpaceName",
            "in": "path",
            "description": "Name of the agent space.",
            "required": true,
            "type": "string"
          },
          {
            "name": "agentSpaceEnvelope",
            "in": "body",
            "description": "Details of the agent space.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AgentSpace"
            }
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AgentSpace"
            }
          },
          "201": {
            "description": "Created",
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/AgentSpace"
            }
          },
          "default": {
            "description": "Common error response.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Create or update an agent space": {
            "$ref": "./examples/AgentSpaces_CreateOrUpdate.json"
          }
        }
      },
      "patch": {
        "tags": [
          "AgentSpaces"
        ],
        "summary": "Update Agent Space's properties.",
        "operationId": "AgentSpaces_Update",
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "parameters": [
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "agentSpaceName",
            "in": "path",
            "description": "Name of the agent space.",
            "required": true,
            "type": "string"
          },
          {
            "name": "agentSpaceEnvelope",
            "in": "body",
            "description": "Details of the agent space.",
            "schema": {
              "$ref": "#/definitions/AgentSpacePatch"
            }
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AgentSpace"
            }
          },
          "202": {
            "description": "Patch operation is in progress.",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Common error response.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Patch an agent space": {
            "$ref": "./examples/AgentSpaces_Patch.json"
          }
        }
      },
      "delete": {
        "tags": [
          "AgentSpaces"
        ],
        "summary": "Delete an Agent Space.",
        "operationId": "AgentSpaces_Delete",
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "parameters": [
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "agentSpaceName",
            "in": "path",
            "description": "Name of the agent space.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "../../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Delete operation is accepted",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Common error response.",
            "schema": {
              "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete an agent space": {
            "$ref": "./examples/AgentSpaces_Delete.json"
          }
        }
      }
    }
  },
  "definitions": {
    "AgentSpaceCollection": {
      "description": "Collection of AgentSpaces",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AgentSpace"
          }
        },
        "nextLink": {
          "description": "Link to next page of resources.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "AgentSpace": {
      "description": "SRE AgentSpace",
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../../../../common-types/resource-management/v5/types.json#/definitions/TrackedResource"
        }
      ],
      "properties": {
        "identity": {
          "description": "Managed identities for the Agent space to interact with other Azure services without maintaining any secrets or credentials in code.",
          "$ref": "../../../../../../common-types/resource-management/v3/managedidentity.json#/definitions/ManagedServiceIdentity"
        },
        "properties": {
          "description": "Agent space specific properties",
          "$ref": "#/definitions/AgentSpaceProperties"
        }
      }
    },
    "AgentSpacePatch": {
      "description": "SRE AgentSpace Patch payload",
      "type": "object",
      "allOf": [
        {
          "$ref": "./CommonDefinitions.json#/definitions/ResourceTags"
        }
      ],
      "properties": {
        "identity": {
          "description": "Managed identities for the Agent space to interact with other Azure services without maintaining any secrets or credentials in code.",
          "$ref": "../../../../../../common-types/resource-management/v3/managedidentity.json#/definitions/ManagedServiceIdentity"
        },
        "properties": {
          "description": "Agent space specific properties",
          "$ref": "#/definitions/AgentSpaceProperties"
        }
      }
    },
    "AgentSpaceProperties": {
      "description": "Agent space specific properties",
      "type": "object",
      "properties": {
        "provisioningState": {
          "description": "Provisioning state of the Agent space.",
          "enum": [
            "InProgress",
            "Succeeded",
            "Failed",
            "Canceled",
            "Deleting"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "AgentSpaceProvisioningState",
            "modelAsString": true
          }
        },
        "currentAgentCount": {
          "description": "Current number of agents in the Agent space.",
          "type": "integer",
          "format": "int32",
          "readOnly": true
        },
        "memberAgents": {
          "description": "List of agents referencing the Agent space.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "lastPolicyPropagation": {
          "description": "Timestamp of the last policy propagation to agents in this Agent Space.",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "complianceStatus": {
          "description": "Compliance status of the Agent Space.",
          "$ref": "#/definitions/AgentSpaceComplianceStatus",
          "readOnly": true
        },
        "description": {
          "description": "Description of the Agent Space.",
          "type": "string"
        },
        "policies": {
          "description": "Policy configurations for the Agent Space.",
          "$ref": "#/definitions/AgentSpacePolicies"
        },
        "maxAgentCount": {
          "description": "Maximum number of agents allowed in the Agent Space.",
          "type": "integer",
          "format": "int32"
        },
        "serviceTreeId": {
          "description": "Universal unique ID (UUID) of the Service Tree associated with this Agent Space.",
          "type": "string"
        }
      }
    },
    "AgentSpaceComplianceStatus": {
      "description": "Compliance status of the Agent Space",
      "type": "object",
      "properties": {
        "isCompliant": {
          "description": "Indicates whether the Agent Space is compliant.",
          "type": "boolean"
        },
        "complianceIssues": {
          "description": "List of compliance issues found in the Agent Space.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "lastComplianceCheck": {
          "description": "Timestamp of the last compliance check.",
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "AgentSpacePolicies": {
      "description": "Policy configurations for an Agent Space.",
      "type": "object",
      "properties": {
        "allowedActions": {
          "description": "List of allowed actions for the Agent Space.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "genevaActionsConfiguration": {
          "description": "Configuration for Geneva Actions policy.",
          "$ref": "#/definitions/GenevaActionsPolicy"
        }
      }
    },
    "GenevaActionsPolicy": {
      "description": "Geneva Actions policy configuration for Agent Space.",
      "type": "object",
      "properties": {
        "acisEndpoint": {
          "description": "ACIS (Azure Container Instance Service) endpoint URL.",
          "type": "string"
        },
        "clientId": {
          "description": "Client ID for authentication.",
          "type": "string"
        },
        "certificateSubjectName": {
          "description": "Subject name of the certificate used for authentication.",
          "type": "string"
        },
        "authenticationMode": {
          "description": "Authentication mode for Geneva Actions.",
          "enum": [
            "OAuth",
            "WS-Trust"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "GenevaActionAuthenticationMode",
            "modelAsString": true
          }
        },
        "extensionName": {
          "description": "Name of the Geneva extension.",
          "type": "string"
        },
        "allowedActions": {
          "description": "Collection of allowed Geneva actions.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/GenevaActionConfig"
          }
        },
        "certificateSubjectAlternativeName": {
          "description": "Subject alternative name of the certificate used for authentication.",
          "type": "string"
        }
      }
    },
    "GenevaActionConfig": {
      "description": "Configuration for a Geneva action.",
      "type": "object",
      "properties": {
        "actionName": {
          "description": "Name of the Geneva action.",
          "type": "string"
        },
        "extension": {
          "description": "Extension associated with the action.",
          "type": "string"
        },
        "actionParameters": {
          "description": "Parameters for the Geneva action.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/GenevaActionParameter"
          }
        },
        "approvalRequired": {
          "description": "Indicates whether approval is required for this action.",
          "type": "boolean"
        }
      }
    },
    "GenevaActionParameter": {
      "description": "Parameter for a Geneva action.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Name of the parameter.",
          "type": "string"
        },
        "type": {
          "description": "Type of the parameter.",
          "type": "string"
        }
      }
    }
  },
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "description": "Azure Active Directory OAuth2 Flow",
      "flow": "implicit",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ]
}
