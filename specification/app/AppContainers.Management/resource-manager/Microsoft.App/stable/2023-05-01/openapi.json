{
  "swagger": "2.0",
  "info": {
    "title": "ContainerApps API Client",
    "version": "2023-05-01",
    "description": "// FIXME: (missing-service-description) Add service description",
    "x-typespec-generated": [
      {
        "emitter": "@azure-tools/typespec-autorest"
      }
    ]
  },
  "schemes": [
    "https"
  ],
  "host": "management.azure.com",
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "security": [
    {
      "AadOauth2Auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "AadOauth2Auth": {
      "type": "oauth2",
      "description": "The Azure Active Directory OAuth2 Flow",
      "flow": "accessCode",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
        "user_impersonation": ""
      },
      "tokenUrl": "https://login.microsoftonline.com/common/oauth2/token"
    }
  },
  "tags": [
    {
      "name": "Operations"
    },
    {
      "name": "AuthConfigs"
    },
    {
      "name": "ContainerApps"
    },
    {
      "name": "ConnectedEnvironments"
    },
    {
      "name": "Certificates"
    },
    {
      "name": "DaprComponents"
    },
    {
      "name": "ConnectedEnvironmentStorages"
    },
    {
      "name": "Revisions"
    },
    {
      "name": "Replicas"
    },
    {
      "name": "DiagnosticsOperationGroup"
    },
    {
      "name": "ManagedEnvironments"
    },
    {
      "name": "Jobs"
    },
    {
      "name": "JobExecutions"
    },
    {
      "name": "ManagedCertificates"
    },
    {
      "name": "ManagedEnvironmentStorages"
    },
    {
      "name": "SourceControls"
    }
  ],
  "paths": {
    "/providers/Microsoft.App/operations": {
      "get": {
        "operationId": "Operations_List",
        "tags": [
          "Operations"
        ],
        "description": "List the operations for the provider",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/OperationListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.App/connectedEnvironments": {
      "get": {
        "operationId": "ConnectedEnvironments_ListBySubscription",
        "tags": [
          "ConnectedEnvironments"
        ],
        "description": "Get all connectedEnvironments for a subscription.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ConnectedEnvironmentListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List connected environments by subscription": {
            "$ref": "./examples/ConnectedEnvironments_ListBySubscription.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.App/containerApps": {
      "get": {
        "operationId": "ContainerApps_ListBySubscription",
        "tags": [
          "ContainerApps"
        ],
        "description": "Get the Container Apps in a given subscription.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ContainerAppListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List Container Apps by subscription": {
            "$ref": "./examples/ContainerApps_ListBySubscription.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.App/jobs": {
      "get": {
        "operationId": "Jobs_ListBySubscription",
        "tags": [
          "Jobs"
        ],
        "description": "Get the Container Apps Jobs in a given subscription.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/JobListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List Container Apps Jobs by subscription": {
            "$ref": "./examples/Jobs_ListBySubscription.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.App/locations/{location}/availableManagedEnvironmentsWorkloadProfileTypes": {
      "get": {
        "operationId": "AvailableWorkloadProfilesOperations_Get",
        "summary": "Get available workload profiles by location.",
        "description": "Get all available workload profiles for a location.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "location",
            "in": "path",
            "description": "The name of Azure region.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/PagedAvailableWorkloadProfile"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.App/locations/{location}/billingMeters": {
      "get": {
        "operationId": "BillingMetersOperations_Get",
        "summary": "Get billing meters by location.",
        "description": "Get all billingMeters for a location.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "location",
            "in": "path",
            "description": "The name of Azure region.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/BillingMeterCollection"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.App/managedEnvironments": {
      "get": {
        "operationId": "ManagedEnvironmentsOperations_ListBySubscription",
        "summary": "Get all Environments for a subscription.",
        "description": "Get all Managed Environments for a subscription.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/PagedManagedEnvironment"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/connectedEnvironments": {
      "get": {
        "operationId": "ConnectedEnvironments_ListByResourceGroup",
        "tags": [
          "ConnectedEnvironments"
        ],
        "description": "Get all connectedEnvironments in a resource group.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ConnectedEnvironmentListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List environments by resource group": {
            "$ref": "./examples/ConnectedEnvironments_ListByResourceGroup.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/connectedEnvironments/{connectedEnvironmentName}": {
      "get": {
        "operationId": "ConnectedEnvironments_Get",
        "tags": [
          "ConnectedEnvironments"
        ],
        "description": "Get the properties of an connectedEnvironment.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "connectedEnvironmentName",
            "in": "path",
            "description": "Name of the connectedEnvironment.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ConnectedEnvironment"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get connected environment by connectedEnvironmentName": {
            "$ref": "./examples/ConnectedEnvironments_Get.json"
          }
        }
      },
      "put": {
        "operationId": "ConnectedEnvironments_CreateOrUpdate",
        "tags": [
          "ConnectedEnvironments"
        ],
        "description": "Creates or updates an connectedEnvironment.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "connectedEnvironmentName",
            "in": "path",
            "description": "Name of the connectedEnvironment.",
            "required": true,
            "type": "string"
          },
          {
            "name": "environmentEnvelope",
            "in": "body",
            "description": "Configuration details of the connectedEnvironment.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ConnectedEnvironment"
            },
            "x-ms-client-name": "environmentEnvelope"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'ConnectedEnvironment' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/ConnectedEnvironment"
            }
          },
          "201": {
            "description": "Resource 'ConnectedEnvironment' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/ConnectedEnvironment"
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Create kube environments": {
            "$ref": "./examples/ConnectedEnvironments_CreateOrUpdate.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "ConnectedEnvironments_Update",
        "tags": [
          "ConnectedEnvironments"
        ],
        "description": "Patches a Managed Environment. Only patching of tags is supported currently",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "connectedEnvironmentName",
            "in": "path",
            "description": "Name of the connectedEnvironment.",
            "required": true,
            "type": "string"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "The resource properties to be updated.",
            "required": true,
            "schema": {
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ConnectedEnvironment"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Patch Managed Environment": {
            "$ref": "./examples/ConnectedEnvironments_Update.json"
          }
        }
      },
      "delete": {
        "operationId": "ConnectedEnvironments_Delete",
        "tags": [
          "ConnectedEnvironments"
        ],
        "description": "Delete an connectedEnvironment.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "connectedEnvironmentName",
            "in": "path",
            "description": "Name of the connectedEnvironment.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete connected environment by connectedEnvironmentName": {
            "$ref": "./examples/ConnectedEnvironments_Delete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/connectedEnvironments/{connectedEnvironmentName}/certificates": {
      "get": {
        "operationId": "ConnectedEnvironmentsCertificates_List",
        "tags": [
          "Certificates"
        ],
        "description": "Get the Certificates in a given connected environment.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "connectedEnvironmentName",
            "in": "path",
            "description": "Name of the connectedEnvironment.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/CertificateListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List Certificates by Connected Environment": {
            "$ref": "./examples/ConnectedEnvironmentsCertificates_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/connectedEnvironments/{connectedEnvironmentName}/certificates/{certificateName}": {
      "get": {
        "operationId": "ConnectedEnvironmentsCertificates_Get",
        "tags": [
          "Certificates"
        ],
        "description": "Get the specified Certificate.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "connectedEnvironmentName",
            "in": "path",
            "description": "Name of the connectedEnvironment.",
            "required": true,
            "type": "string"
          },
          {
            "name": "certificateName",
            "in": "path",
            "description": "Name of the Certificate.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Certificate"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get Certificate": {
            "$ref": "./examples/ConnectedEnvironmentsCertificates_Get.json"
          }
        }
      },
      "put": {
        "operationId": "ConnectedEnvironmentsCertificates_CreateOrUpdate",
        "tags": [
          "Certificates"
        ],
        "description": "Create or Update a Certificate.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "connectedEnvironmentName",
            "in": "path",
            "description": "Name of the connectedEnvironment.",
            "required": true,
            "type": "string"
          },
          {
            "name": "certificateName",
            "in": "path",
            "description": "Name of the Certificate.",
            "required": true,
            "type": "string"
          },
          {
            "name": "certificateEnvelope",
            "in": "body",
            "description": "Certificate to be created or updated",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Certificate"
            },
            "x-ms-client-name": "certificateEnvelope"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'Certificate' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/Certificate"
            }
          },
          "201": {
            "description": "Resource 'Certificate' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/Certificate"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Create or Update Certificate": {
            "$ref": "./examples/ConnectedEnvironmentsCertificates_CreateOrUpdate.json"
          }
        }
      },
      "patch": {
        "operationId": "ConnectedEnvironmentsCertificates_Update",
        "tags": [
          "Certificates"
        ],
        "description": "Patches a certificate. Currently only patching of tags is supported",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "connectedEnvironmentName",
            "in": "path",
            "description": "Name of the connectedEnvironment.",
            "required": true,
            "type": "string"
          },
          {
            "name": "certificateName",
            "in": "path",
            "description": "Name of the Certificate.",
            "required": true,
            "type": "string"
          },
          {
            "name": "certificateEnvelope",
            "in": "body",
            "description": "Properties of a certificate that need to be updated",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CertificatePatch"
            },
            "x-ms-client-name": "certificateEnvelope"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Certificate"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Patch Certificate": {
            "$ref": "./examples/ConnectedEnvironmentsCertificates_Update.json"
          }
        }
      },
      "delete": {
        "operationId": "ConnectedEnvironmentsCertificates_Delete",
        "tags": [
          "Certificates"
        ],
        "description": "Deletes the specified Certificate.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "connectedEnvironmentName",
            "in": "path",
            "description": "Name of the connectedEnvironment.",
            "required": true,
            "type": "string"
          },
          {
            "name": "certificateName",
            "in": "path",
            "description": "Name of the Certificate.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete Certificate": {
            "$ref": "./examples/ConnectedEnvironmentsCertificates_Delete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/connectedEnvironments/{connectedEnvironmentName}/checkNameAvailability": {
      "post": {
        "operationId": "ConnectedEnvironments_CheckNameAvailability",
        "tags": [
          "ConnectedEnvironments"
        ],
        "description": "Checks if resource connectedEnvironmentName is available.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "connectedEnvironmentName",
            "in": "path",
            "description": "Name of the connectedEnvironment.",
            "required": true,
            "type": "string"
          },
          {
            "name": "checkNameAvailabilityRequest",
            "in": "body",
            "description": "The check connectedEnvironmentName availability request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CheckNameAvailabilityRequest"
            },
            "x-ms-client-name": "checkNameAvailabilityRequest"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/CheckNameAvailabilityResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Certificates_CheckNameAvailability": {
            "$ref": "./examples/ConnectedEnvironments_CheckNameAvailability.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/connectedEnvironments/{connectedEnvironmentName}/daprComponents": {
      "get": {
        "operationId": "ConnectedEnvironmentsDaprComponents_List",
        "tags": [
          "DaprComponents"
        ],
        "description": "Get the Dapr Components for a connected environment.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "connectedEnvironmentName",
            "in": "path",
            "description": "Name of the connectedEnvironment.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DaprComponentListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List Dapr Components": {
            "$ref": "./examples/ConnectedEnvironmentsDaprComponents_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/connectedEnvironments/{connectedEnvironmentName}/daprComponents/{componentName}": {
      "get": {
        "operationId": "ConnectedEnvironmentsDaprComponents_Get",
        "tags": [
          "DaprComponents"
        ],
        "description": "Get a dapr component.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "connectedEnvironmentName",
            "in": "path",
            "description": "Name of the connectedEnvironment.",
            "required": true,
            "type": "string"
          },
          {
            "name": "componentName",
            "in": "path",
            "description": "Name of the Dapr Component.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DaprComponent"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get Dapr Component": {
            "$ref": "./examples/ConnectedEnvironmentsDaprComponents_Get.json"
          }
        }
      },
      "put": {
        "operationId": "ConnectedEnvironmentsDaprComponents_CreateOrUpdate",
        "tags": [
          "DaprComponents"
        ],
        "description": "Creates or updates a Dapr Component in a connected environment.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "connectedEnvironmentName",
            "in": "path",
            "description": "Name of the connectedEnvironment.",
            "required": true,
            "type": "string"
          },
          {
            "name": "componentName",
            "in": "path",
            "description": "Name of the Dapr Component.",
            "required": true,
            "type": "string"
          },
          {
            "name": "daprComponentEnvelope",
            "in": "body",
            "description": "Configuration details of the Dapr Component.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DaprComponent"
            },
            "x-ms-client-name": "daprComponentEnvelope"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'DaprComponent' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/DaprComponent"
            }
          },
          "201": {
            "description": "Resource 'DaprComponent' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/DaprComponent"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Create or update dapr component": {
            "$ref": "./examples/ConnectedEnvironmentsDaprComponents_CreateOrUpdate.json"
          }
        }
      },
      "delete": {
        "operationId": "ConnectedEnvironmentsDaprComponents_Delete",
        "tags": [
          "DaprComponents"
        ],
        "description": "Delete a Dapr Component from a connected environment.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "connectedEnvironmentName",
            "in": "path",
            "description": "Name of the connectedEnvironment.",
            "required": true,
            "type": "string"
          },
          {
            "name": "componentName",
            "in": "path",
            "description": "Name of the Dapr Component.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete dapr component": {
            "$ref": "./examples/ConnectedEnvironmentsDaprComponents_Delete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/connectedEnvironments/{connectedEnvironmentName}/daprComponents/{componentName}/listSecrets": {
      "post": {
        "operationId": "ConnectedEnvironmentsDaprComponents_ListSecrets",
        "tags": [
          "DaprComponents"
        ],
        "description": "List secrets for a dapr component",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "connectedEnvironmentName",
            "in": "path",
            "description": "Name of the connectedEnvironment.",
            "required": true,
            "type": "string"
          },
          {
            "name": "componentName",
            "in": "path",
            "description": "Name of the Dapr Component.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DaprSecretsCollection"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List Container Apps Secrets": {
            "$ref": "./examples/ConnectedEnvironmentsDaprComponents_ListSecrets.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/connectedEnvironments/{connectedEnvironmentName}/storages": {
      "get": {
        "operationId": "ConnectedEnvironmentsStorages_List",
        "tags": [
          "ConnectedEnvironmentStorages"
        ],
        "description": "Get all storages for a connectedEnvironment.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "connectedEnvironmentName",
            "in": "path",
            "description": "Name of the connectedEnvironment.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ConnectedEnvironmentStorageListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List environments storages by subscription": {
            "$ref": "./examples/ConnectedEnvironmentsStorages_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/connectedEnvironments/{connectedEnvironmentName}/storages/{storageName}": {
      "get": {
        "operationId": "ConnectedEnvironmentsStorages_Get",
        "tags": [
          "ConnectedEnvironmentStorages"
        ],
        "description": "Get storage for a connectedEnvironment.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "connectedEnvironmentName",
            "in": "path",
            "description": "Name of the connectedEnvironment.",
            "required": true,
            "type": "string"
          },
          {
            "name": "storageName",
            "in": "path",
            "description": "Name of the storage.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ConnectedEnvironmentStorage"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "get a environments storage properties by subscription": {
            "$ref": "./examples/ConnectedEnvironmentsStorages_Get.json"
          }
        }
      },
      "put": {
        "operationId": "ConnectedEnvironmentsStorages_CreateOrUpdate",
        "tags": [
          "ConnectedEnvironmentStorages"
        ],
        "description": "Create or update storage for a connectedEnvironment.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "connectedEnvironmentName",
            "in": "path",
            "description": "Name of the connectedEnvironment.",
            "required": true,
            "type": "string"
          },
          {
            "name": "storageName",
            "in": "path",
            "description": "Name of the storage.",
            "required": true,
            "type": "string"
          },
          {
            "name": "storageEnvelope",
            "in": "body",
            "description": "Configuration details of storage.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ConnectedEnvironmentStorage"
            },
            "x-ms-client-name": "storageEnvelope"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'ConnectedEnvironmentStorage' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/ConnectedEnvironmentStorage"
            }
          },
          "201": {
            "description": "Resource 'ConnectedEnvironmentStorage' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/ConnectedEnvironmentStorage"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Create or update environments storage": {
            "$ref": "./examples/ConnectedEnvironmentsStorages_CreateOrUpdate.json"
          }
        }
      },
      "delete": {
        "operationId": "ConnectedEnvironmentsStorages_Delete",
        "tags": [
          "ConnectedEnvironmentStorages"
        ],
        "description": "Delete storage for a connectedEnvironment.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "connectedEnvironmentName",
            "in": "path",
            "description": "Name of the connectedEnvironment.",
            "required": true,
            "type": "string"
          },
          {
            "name": "storageName",
            "in": "path",
            "description": "Name of the storage.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List environments storages by subscription": {
            "$ref": "./examples/ConnectedEnvironmentsStorages_Delete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/containerApps": {
      "get": {
        "operationId": "ContainerApps_ListByResourceGroup",
        "tags": [
          "ContainerApps"
        ],
        "description": "Get the Container Apps in a given resource group.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ContainerAppListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List Container Apps by resource group": {
            "$ref": "./examples/ContainerApps_ListByResourceGroup.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/containerApps/{containerAppName}": {
      "get": {
        "operationId": "ContainerApps_Get",
        "tags": [
          "ContainerApps"
        ],
        "description": "Get the properties of a Container App.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "containerAppName",
            "in": "path",
            "description": "Name of the Container App.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ContainerApp"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get Container App": {
            "$ref": "./examples/ContainerApps_Get.json"
          }
        }
      },
      "put": {
        "operationId": "ContainerApps_CreateOrUpdate",
        "tags": [
          "ContainerApps"
        ],
        "description": "Create or update a Container App.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "containerAppName",
            "in": "path",
            "description": "Name of the Container App.",
            "required": true,
            "type": "string"
          },
          {
            "name": "containerAppEnvelope",
            "in": "body",
            "description": "Properties used to create a container app",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ContainerApp"
            },
            "x-ms-client-name": "containerAppEnvelope"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'ContainerApp' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/ContainerApp"
            }
          },
          "201": {
            "description": "Resource 'ContainerApp' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/ContainerApp"
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Create or Update Container App": {
            "$ref": "./examples/ContainerApps_CreateOrUpdate_Create_Or_Update_Container_App.json"
          },
          "Create or Update ManagedBy App": {
            "$ref": "./examples/ContainerApps_CreateOrUpdate_Create_Or_Update_Managed_By_App.json"
          },
          "Create or Update Tcp App": {
            "$ref": "./examples/ContainerApps_CreateOrUpdate_Create_Or_Update_Tcp_App.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "ContainerApps_Delete",
        "tags": [
          "ContainerApps"
        ],
        "description": "Delete a Container App.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "containerAppName",
            "in": "path",
            "description": "Name of the Container App.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete Container App": {
            "$ref": "./examples/ContainerApps_Delete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/containerApps/{containerAppName}/authConfigs": {
      "get": {
        "operationId": "ContainerAppsAuthConfigs_ListByContainerApp",
        "tags": [
          "AuthConfigs"
        ],
        "description": "Get the Container App AuthConfigs in a given resource group.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "containerAppName",
            "in": "path",
            "description": "Name of the Container App.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/AuthConfigListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List Auth Configs by Container Apps": {
            "$ref": "./examples/ContainerAppsAuthConfigs_ListByContainerApp.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/containerApps/{containerAppName}/authConfigs/{authConfigName}": {
      "get": {
        "operationId": "ContainerAppsAuthConfigs_Get",
        "tags": [
          "AuthConfigs"
        ],
        "description": "Get a AuthConfig of a Container App.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "containerAppName",
            "in": "path",
            "description": "Name of the Container App.",
            "required": true,
            "type": "string"
          },
          {
            "name": "authConfigName",
            "in": "path",
            "description": "Name of the Container App AuthConfig.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/AuthConfig"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get Container App's AuthConfig": {
            "$ref": "./examples/ContainerAppsAuthConfigs_Get.json"
          }
        }
      },
      "put": {
        "operationId": "ContainerAppsAuthConfigs_CreateOrUpdate",
        "tags": [
          "AuthConfigs"
        ],
        "description": "Create or update the AuthConfig for a Container App.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "containerAppName",
            "in": "path",
            "description": "Name of the Container App.",
            "required": true,
            "type": "string"
          },
          {
            "name": "authConfigName",
            "in": "path",
            "description": "Name of the Container App AuthConfig.",
            "required": true,
            "type": "string"
          },
          {
            "name": "authConfigEnvelope",
            "in": "body",
            "description": "Properties used to create a Container App AuthConfig",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AuthConfig"
            },
            "x-ms-client-name": "authConfigEnvelope"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'AuthConfig' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/AuthConfig"
            }
          },
          "201": {
            "description": "Resource 'AuthConfig' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/AuthConfig"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Create or Update Container App AuthConfig": {
            "$ref": "./examples/ContainerAppsAuthConfigs_CreateOrUpdate.json"
          }
        }
      },
      "delete": {
        "operationId": "ContainerAppsAuthConfigs_Delete",
        "tags": [
          "AuthConfigs"
        ],
        "description": "Delete a Container App AuthConfig.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "containerAppName",
            "in": "path",
            "description": "Name of the Container App.",
            "required": true,
            "type": "string"
          },
          {
            "name": "authConfigName",
            "in": "path",
            "description": "Name of the Container App AuthConfig.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete Container App AuthConfig": {
            "$ref": "./examples/ContainerAppsAuthConfigs_Delete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/containerApps/{containerAppName}/containerApps/{name}": {
      "patch": {
        "operationId": "ContainerApps_Update",
        "tags": [
          "ContainerApps"
        ],
        "description": "Patches a Container App using JSON Merge Patch",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "containerAppName",
            "in": "path",
            "description": "Name of the Container App.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the Container App.",
            "required": true,
            "type": "string"
          },
          {
            "name": "containerAppEnvelope",
            "in": "body",
            "description": "Properties of a Container App that need to be updated",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ContainerApp"
            },
            "x-ms-client-name": "containerAppEnvelope"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ContainerApp"
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Patch Container App": {
            "$ref": "./examples/ContainerApps_Update.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/containerApps/{containerAppName}/detectorProperties/revisionsApi/revisions": {
      "get": {
        "operationId": "ContainerAppsDiagnosticsOperations_ListRevisions",
        "summary": "Get the Revisions for a given Container App.",
        "description": "Get the Revisions for a given Container App.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "containerAppName",
            "in": "path",
            "description": "Name of the Container App for which Revisions are needed.",
            "required": true,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The filter to apply on the operation.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/RevisionListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/containerApps/{containerAppName}/detectorProperties/revisionsApi/revisions/{revisionName}": {
      "get": {
        "operationId": "ContainerAppsDiagnosticsOperations_GetRevision",
        "summary": "Get a revision of a Container App.",
        "description": "Get a revision of a Container App.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "containerAppName",
            "in": "path",
            "description": "Name of the Container App.",
            "required": true,
            "type": "string"
          },
          {
            "name": "revisionName",
            "in": "path",
            "description": "Name of the Container App Revision.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/Revision"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/containerApps/{containerAppName}/detectorProperties/rootApi": {
      "get": {
        "operationId": "ContainerAppsDiagnosticsOperations_GetRoot",
        "summary": "Get the properties of a Container App.",
        "description": "Get the properties of a Container App.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "containerAppName",
            "in": "path",
            "description": "Name of the Container App.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/ContainerApp"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/containerApps/{containerAppName}/detectors": {
      "get": {
        "operationId": "ContainerAppsDiagnostics_ListDetectors",
        "tags": [
          "DiagnosticsOperationGroup"
        ],
        "description": "Get the list of diagnostics for a given Container App.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "containerAppName",
            "in": "path",
            "description": "Name of the Container App.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DiagnosticsListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get the list of available diagnostics for a given Container App": {
            "$ref": "./examples/ContainerAppsDiagnostics_ListDetectors.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/containerApps/{containerAppName}/detectors/{detectorName}": {
      "get": {
        "operationId": "ContainerAppsDiagnostics_GetDetector",
        "tags": [
          "DiagnosticsOperationGroup"
        ],
        "description": "Get a diagnostics result of a Container App.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "containerAppName",
            "in": "path",
            "description": "Name of the Container App.",
            "required": true,
            "type": "string"
          },
          {
            "name": "detectorName",
            "in": "path",
            "description": "Name of the Container App Detector.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Diagnostics"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get Container App's diagnostics info": {
            "$ref": "./examples/ContainerAppsDiagnostics_GetDetector.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/containerApps/{containerAppName}/getAuthToken": {
      "post": {
        "operationId": "ContainerApps_GetAuthToken",
        "tags": [
          "ContainerApps"
        ],
        "description": "Get auth token for a container app",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "containerAppName",
            "in": "path",
            "description": "Name of the Container App.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ContainerAppAuthToken"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get Container App Auth Token": {
            "$ref": "./examples/ContainerApps_GetAuthToken.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/containerApps/{containerAppName}/listCustomHostNameAnalysis": {
      "post": {
        "operationId": "ContainerApps_ListCustomHostNameAnalysis",
        "tags": [
          "ContainerApps"
        ],
        "description": "Analyzes a custom hostname for a Container App",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "customHostname",
            "in": "query",
            "description": "Custom hostname.",
            "required": false,
            "type": "string"
          },
          {
            "name": "containerAppName",
            "in": "path",
            "description": "Name of the Container App.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/CustomHostnameAnalysisResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Analyze Custom Hostname": {
            "$ref": "./examples/ContainerApps_ListCustomHostNameAnalysis.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/containerApps/{containerAppName}/listSecrets": {
      "post": {
        "operationId": "ContainerApps_ListSecrets",
        "tags": [
          "ContainerApps"
        ],
        "description": "List secrets for a container app",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "containerAppName",
            "in": "path",
            "description": "Name of the Container App.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/SecretsCollection"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List Container Apps Secrets": {
            "$ref": "./examples/ContainerApps_ListSecrets.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/containerApps/{containerAppName}/revisions": {
      "get": {
        "operationId": "ContainerAppsRevisions_ListRevisions",
        "tags": [
          "Revisions"
        ],
        "description": "Get the Revisions for a given Container App.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The filter to apply on the operation.",
            "required": false,
            "type": "string"
          },
          {
            "name": "containerAppName",
            "in": "path",
            "description": "Name of the Container App.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/RevisionListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List Container App's revisions": {
            "$ref": "./examples/ContainerAppsRevisions_ListRevisions.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/containerApps/{containerAppName}/revisions/{revisionName}": {
      "get": {
        "operationId": "ContainerAppsRevisions_GetRevision",
        "tags": [
          "Revisions"
        ],
        "description": "Get a revision of a Container App.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "containerAppName",
            "in": "path",
            "description": "Name of the Container App.",
            "required": true,
            "type": "string"
          },
          {
            "name": "revisionName",
            "in": "path",
            "description": "Name of the Container App Revision.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Revision"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get Container App's revision": {
            "$ref": "./examples/ContainerAppsRevisions_GetRevision.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/containerApps/{containerAppName}/revisions/{revisionName}/activateRevision": {
      "post": {
        "operationId": "ContainerAppsRevisions_ActivateRevision",
        "tags": [
          "Revisions"
        ],
        "description": "Activates a revision for a Container App",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "containerAppName",
            "in": "path",
            "description": "Name of the Container App.",
            "required": true,
            "type": "string"
          },
          {
            "name": "revisionName",
            "in": "path",
            "description": "Name of the Container App Revision.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "ARM operation completed successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Activate Container App's revision": {
            "$ref": "./examples/ContainerAppsRevisions_ActivateRevision.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/containerApps/{containerAppName}/revisions/{revisionName}/deactivateRevision": {
      "post": {
        "operationId": "ContainerAppsRevisions_DeactivateRevision",
        "tags": [
          "Revisions"
        ],
        "description": "Deactivates a revision for a Container App",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "containerAppName",
            "in": "path",
            "description": "Name of the Container App.",
            "required": true,
            "type": "string"
          },
          {
            "name": "revisionName",
            "in": "path",
            "description": "Name of the Container App Revision.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "ARM operation completed successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Deactivate Container App's revision": {
            "$ref": "./examples/ContainerAppsRevisions_DeactivateRevision.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/containerApps/{containerAppName}/revisions/{revisionName}/replicas": {
      "get": {
        "operationId": "ContainerAppsRevisionReplicas_ListReplicas",
        "tags": [
          "Replicas"
        ],
        "description": "List replicas for a Container App Revision.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "containerAppName",
            "in": "path",
            "description": "Name of the Container App.",
            "required": true,
            "type": "string"
          },
          {
            "name": "revisionName",
            "in": "path",
            "description": "Name of the Container App Revision.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ReplicaListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List Container App's replicas": {
            "$ref": "./examples/ContainerAppsRevisionReplicas_ListReplicas.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/containerApps/{containerAppName}/revisions/{revisionName}/replicas/{replicaName}": {
      "get": {
        "operationId": "ContainerAppsRevisionReplicas_GetReplica",
        "tags": [
          "Replicas"
        ],
        "description": "Get a replica for a Container App Revision.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "containerAppName",
            "in": "path",
            "description": "Name of the Container App.",
            "required": true,
            "type": "string"
          },
          {
            "name": "revisionName",
            "in": "path",
            "description": "Name of the Container App Revision.",
            "required": true,
            "type": "string"
          },
          {
            "name": "replicaName",
            "in": "path",
            "description": "Name of the Container App Revision Replica.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Replica"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get Container App's revision replica": {
            "$ref": "./examples/ContainerAppsRevisionReplicas_GetReplica.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/containerApps/{containerAppName}/revisions/{revisionName}/restartRevision": {
      "post": {
        "operationId": "ContainerAppsRevisions_RestartRevision",
        "tags": [
          "Revisions"
        ],
        "description": "Restarts a revision for a Container App",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "containerAppName",
            "in": "path",
            "description": "Name of the Container App.",
            "required": true,
            "type": "string"
          },
          {
            "name": "revisionName",
            "in": "path",
            "description": "Name of the Container App Revision.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "ARM operation completed successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Restart Container App's revision": {
            "$ref": "./examples/ContainerAppsRevisions_RestartRevision.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/containerApps/{containerAppName}/sourcecontrols": {
      "get": {
        "operationId": "ContainerAppsSourceControls_ListByContainerApp",
        "tags": [
          "SourceControls"
        ],
        "description": "Get the Container App SourceControls in a given resource group.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "containerAppName",
            "in": "path",
            "description": "Name of the Container App.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/SourceControlListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List App's Source Controls": {
            "$ref": "./examples/ContainerAppsSourceControls_ListByContainerApp.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/containerApps/{containerAppName}/sourcecontrols/{sourceControlName}": {
      "get": {
        "operationId": "ContainerAppsSourceControls_Get",
        "tags": [
          "SourceControls"
        ],
        "description": "Get a SourceControl of a Container App.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "containerAppName",
            "in": "path",
            "description": "Name of the Container App.",
            "required": true,
            "type": "string"
          },
          {
            "name": "sourceControlName",
            "in": "path",
            "description": "Name of the Container App SourceControl.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/SourceControl"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get Container App's SourceControl": {
            "$ref": "./examples/ContainerAppsSourceControls_Get.json"
          }
        }
      },
      "put": {
        "operationId": "ContainerAppsSourceControls_CreateOrUpdate",
        "tags": [
          "SourceControls"
        ],
        "description": "Create or update the SourceControl for a Container App.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "containerAppName",
            "in": "path",
            "description": "Name of the Container App.",
            "required": true,
            "type": "string"
          },
          {
            "name": "sourceControlName",
            "in": "path",
            "description": "Name of the Container App SourceControl.",
            "required": true,
            "type": "string"
          },
          {
            "name": "sourceControlEnvelope",
            "in": "body",
            "description": "Properties used to create a Container App SourceControl",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SourceControl"
            },
            "x-ms-client-name": "sourceControlEnvelope"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'SourceControl' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/SourceControl"
            }
          },
          "201": {
            "description": "Resource 'SourceControl' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/SourceControl"
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Create or Update Container App SourceControl": {
            "$ref": "./examples/ContainerAppsSourceControls_CreateOrUpdate.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "ContainerAppsSourceControls_Delete",
        "tags": [
          "SourceControls"
        ],
        "description": "Delete a Container App SourceControl.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "containerAppName",
            "in": "path",
            "description": "Name of the Container App.",
            "required": true,
            "type": "string"
          },
          {
            "name": "sourceControlName",
            "in": "path",
            "description": "Name of the Container App SourceControl.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete Container App SourceControl": {
            "$ref": "./examples/ContainerAppsSourceControls_Delete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/containerApps/{containerAppName}/start": {
      "post": {
        "operationId": "ContainerApps_Start",
        "tags": [
          "ContainerApps"
        ],
        "description": "Start a container app",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "containerAppName",
            "in": "path",
            "description": "Name of the Container App.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ContainerApp"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Start Container App": {
            "$ref": "./examples/ContainerApps_Start.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/containerApps/{containerAppName}/stop": {
      "post": {
        "operationId": "ContainerApps_Stop",
        "tags": [
          "ContainerApps"
        ],
        "description": "Stop a container app",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "containerAppName",
            "in": "path",
            "description": "Name of the Container App.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ContainerApp"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Stop Container App": {
            "$ref": "./examples/ContainerApps_Stop.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/detectorProperties/rootApi": {
      "get": {
        "operationId": "ManagedEnvironmentsDiagnostics_GetRoot",
        "tags": [
          "ManagedEnvironments"
        ],
        "description": "Get the properties of a Managed Environment used to host container apps.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ManagedEnvironment"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get environments by name": {
            "$ref": "./examples/ManagedEnvironmentsDiagnostics_GetRoot.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/jobs": {
      "get": {
        "operationId": "Jobs_ListByResourceGroup",
        "tags": [
          "Jobs"
        ],
        "description": "Get the Container Apps Jobs in a given resource group.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/JobListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List Container Apps Jobs by resource group": {
            "$ref": "./examples/Jobs_ListByResourceGroup.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/jobs/{jobName}": {
      "get": {
        "operationId": "Jobs_Get",
        "tags": [
          "Jobs"
        ],
        "description": "Get the properties of a Container Apps Job.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "jobName",
            "in": "path",
            "description": "Job Name",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Job"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get Container Apps Job": {
            "$ref": "./examples/Jobs_Get.json"
          }
        }
      },
      "put": {
        "operationId": "Jobs_CreateOrUpdate",
        "tags": [
          "Jobs"
        ],
        "description": "Create or Update a Container Apps Job.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "jobName",
            "in": "path",
            "description": "Job Name",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$"
          },
          {
            "name": "JobEnvelope",
            "in": "body",
            "description": "Properties used to create a container apps job",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Job"
            },
            "x-ms-client-name": "JobEnvelope"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'Job' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/Job"
            }
          },
          "201": {
            "description": "Resource 'Job' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/Job"
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Create or Update Container Apps Job": {
            "$ref": "./examples/Jobs_CreateOrUpdate_Create_Or_Update_Container_Apps_Job.json"
          },
          "Create or Update Container Apps Job With Event Driven Trigger": {
            "$ref": "./examples/Jobs_CreateOrUpdate_Create_Or_Update_Container_Apps_Job_With_Event_Driven_Trigger.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "Jobs_Update",
        "tags": [
          "Jobs"
        ],
        "description": "Patches a Container Apps Job using JSON Merge Patch",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "jobName",
            "in": "path",
            "description": "Job Name",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$"
          },
          {
            "name": "JobEnvelope",
            "in": "body",
            "description": "Properties used to create a container apps job",
            "required": true,
            "schema": {
              "$ref": "#/definitions/JobPatchProperties"
            },
            "x-ms-client-name": "JobEnvelope"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Job"
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Patch Container Apps Job": {
            "$ref": "./examples/Jobs_Update.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "Jobs_Delete",
        "tags": [
          "Jobs"
        ],
        "description": "Delete a Container Apps Job.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "jobName",
            "in": "path",
            "description": "Job Name",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete Container Apps Job": {
            "$ref": "./examples/Jobs_Delete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/jobs/{jobName}/executions": {
      "get": {
        "operationId": "JobsExecutions_List",
        "tags": [
          "JobExecutions"
        ],
        "description": "Get a Container Apps Job's executions",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The filter to apply on the operation.",
            "required": false,
            "type": "string"
          },
          {
            "name": "jobName",
            "in": "path",
            "description": "Job Name",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/JobExecutionListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get a Container Apps Job Executions": {
            "$ref": "./examples/JobsExecutions_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/jobs/{jobName}/executions/{jobExecutionName}": {
      "get": {
        "operationId": "JobExecution",
        "tags": [
          "JobExecutions"
        ],
        "description": "Get details of a single job execution",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "jobName",
            "in": "path",
            "description": "Job Name",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$"
          },
          {
            "name": "jobExecutionName",
            "in": "path",
            "description": "Job execution name.",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/JobExecution"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get a single Job Execution": {
            "$ref": "./examples/JobExecution.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/jobs/{jobName}/executions/{jobExecutionName}/stopExecution": {
      "post": {
        "operationId": "Jobs_StopExecution",
        "tags": [
          "JobExecutions"
        ],
        "description": "Terminates execution of a running container apps job",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "jobName",
            "in": "path",
            "description": "Job Name",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$"
          },
          {
            "name": "jobExecutionName",
            "in": "path",
            "description": "Job execution name.",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "204": {
            "description": "ARM operation completed successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Terminate a Container Apps Job": {
            "$ref": "./examples/Jobs_StopExecution.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/jobs/{jobName}/listSecrets": {
      "post": {
        "operationId": "Jobs_ListSecrets",
        "tags": [
          "Jobs"
        ],
        "description": "List secrets for a container apps job",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "jobName",
            "in": "path",
            "description": "Job Name",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/JobSecretsCollection"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List Container Apps Job Secrets": {
            "$ref": "./examples/Jobs_ListSecrets.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/jobs/{jobName}/start": {
      "post": {
        "operationId": "Jobs_Start",
        "tags": [
          "Jobs"
        ],
        "description": "Start a Container Apps Job",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "jobName",
            "in": "path",
            "description": "Job Name",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$"
          },
          {
            "name": "template",
            "in": "body",
            "description": "Properties used to start a job execution.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/JobExecutionTemplate"
            },
            "x-ms-client-name": "template"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/JobExecutionBase"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Run a Container Apps Job": {
            "$ref": "./examples/Jobs_Start.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/jobs/{jobName}/stopMultipleExecutions": {
      "post": {
        "operationId": "Jobs_StopMultipleExecutions",
        "tags": [
          "Jobs"
        ],
        "description": "Terminates execution of a running container apps job",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "jobName",
            "in": "path",
            "description": "Job Name",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/JobExecutionListResult"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Terminate Multiple Container Apps Job": {
            "$ref": "./examples/Jobs_StopMultipleExecutions.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true,
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/managedCertificates": {
      "get": {
        "operationId": "ManagedCertificates_List",
        "tags": [
          "ManagedCertificates"
        ],
        "description": "Get the Managed Certificates in a given managed environment.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ManagedCertificateListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List Managed Certificates by Managed Environment": {
            "$ref": "./examples/ManagedCertificates_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/managedCertificates/{managedCertificateName}": {
      "get": {
        "operationId": "ManagedCertificates_Get",
        "tags": [
          "ManagedCertificates"
        ],
        "description": "Get the specified Managed Certificate.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "managedCertificateName",
            "in": "path",
            "description": "Name of the Managed Certificate.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ManagedCertificate"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get Certificate": {
            "$ref": "./examples/ManagedCertificates_Get.json"
          }
        }
      },
      "put": {
        "operationId": "ManagedCertificates_CreateOrUpdate",
        "tags": [
          "ManagedCertificates"
        ],
        "description": "Create or Update a Managed Certificate.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "managedCertificateName",
            "in": "path",
            "description": "Name of the Managed Certificate.",
            "required": true,
            "type": "string"
          },
          {
            "name": "managedCertificateEnvelope",
            "in": "body",
            "description": "Managed Certificate to be created or updated",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ManagedCertificate"
            },
            "x-ms-client-name": "managedCertificateEnvelope"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'ManagedCertificate' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/ManagedCertificate"
            }
          },
          "201": {
            "description": "Resource 'ManagedCertificate' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/ManagedCertificate"
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Create or Update Certificate": {
            "$ref": "./examples/ManagedCertificates_CreateOrUpdate.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "ManagedCertificates_Update",
        "tags": [
          "ManagedCertificates"
        ],
        "description": "Patches a managed certificate. Oly patching of tags is supported",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "managedCertificateName",
            "in": "path",
            "description": "Name of the Managed Certificate.",
            "required": true,
            "type": "string"
          },
          {
            "name": "managedCertificateEnvelope",
            "in": "body",
            "description": "Properties of a managed certificate that need to be updated",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ManagedCertificatePatch"
            },
            "x-ms-client-name": "managedCertificateEnvelope"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ManagedCertificate"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Patch Managed Certificate": {
            "$ref": "./examples/ManagedCertificates_Update.json"
          }
        }
      },
      "delete": {
        "operationId": "ManagedCertificates_Delete",
        "tags": [
          "ManagedCertificates"
        ],
        "description": "Deletes the specified Managed Certificate.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "managedCertificateName",
            "in": "path",
            "description": "Name of the Managed Certificate.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete Certificate": {
            "$ref": "./examples/ManagedCertificates_Delete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/managedEnvironments": {
      "get": {
        "operationId": "ManagedEnvironmentsOperations_ListByResourceGroup",
        "summary": "Get all the Environments in a resource group.",
        "description": "Get all the Managed Environments in a resource group.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/PagedManagedEnvironment"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/managedEnvironments/{environmentName}": {
      "get": {
        "operationId": "ManagedEnvironmentsOperations_Get",
        "summary": "Get the properties of a Managed Environment.",
        "description": "Get the properties of a Managed Environment used to host container apps.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "environmentName",
            "in": "path",
            "description": "Name of the Environment.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/ManagedEnvironment"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        }
      },
      "put": {
        "operationId": "ManagedEnvironmentsOperations_CreateOrUpdate",
        "summary": "Creates or updates a Managed Environment.",
        "description": "Creates or updates a Managed Environment used to host container apps.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "environmentName",
            "in": "path",
            "description": "Name of the Environment.",
            "required": true,
            "type": "string"
          },
          {
            "name": "environmentEnvelope",
            "in": "body",
            "description": "Configuration details of the Environment.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ManagedEnvironment"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/ManagedEnvironment"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "ManagedEnvironmentsOperations_Update",
        "summary": "Update Managed Environment's properties.",
        "description": "Patches a Managed Environment using JSON Merge Patch",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "environmentName",
            "in": "path",
            "description": "Name of the Environment.",
            "required": true,
            "type": "string"
          },
          {
            "name": "environmentEnvelope",
            "in": "body",
            "description": "Configuration details of the Environment.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ManagedEnvironmentUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/ManagedEnvironment"
            }
          },
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful. "
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "ManagedEnvironmentsOperations_Delete",
        "summary": "Delete a Managed Environment.",
        "description": "Delete a Managed Environment if it does not have any container apps.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "environmentName",
            "in": "path",
            "description": "Name of the Environment.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful. "
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/managedEnvironments/{environmentName}/certificates": {
      "get": {
        "operationId": "CertificatesOperations_List",
        "summary": "Get the Certificates in a given managed environment.",
        "description": "Get the Certificates in a given managed environment.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "environmentName",
            "in": "path",
            "description": "Name of the Managed Environment.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/CertificateListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/managedEnvironments/{environmentName}/certificates/{certificateName}": {
      "get": {
        "operationId": "CertificatesOperations_Get",
        "summary": "Get the specified Certificate.",
        "description": "Get the specified Certificate.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "environmentName",
            "in": "path",
            "description": "Name of the Managed Environment.",
            "required": true,
            "type": "string"
          },
          {
            "name": "certificateName",
            "in": "path",
            "description": "Name of the Certificate.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/Certificate"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        }
      },
      "put": {
        "operationId": "CertificatesOperations_CreateOrUpdate",
        "summary": "Create or Update a Certificate.",
        "description": "Create or Update a Certificate.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "environmentName",
            "in": "path",
            "description": "Name of the Managed Environment.",
            "required": true,
            "type": "string"
          },
          {
            "name": "certificateName",
            "in": "path",
            "description": "Name of the Certificate.",
            "required": true,
            "type": "string"
          },
          {
            "name": "certificateEnvelope",
            "in": "body",
            "description": "Certificate to be created or updated",
            "required": false,
            "schema": {
              "$ref": "#/definitions/Certificate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/Certificate"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "CertificatesOperations_Update",
        "summary": "Update properties of a certificate",
        "description": "Patches a certificate. Currently only patching of tags is supported",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "environmentName",
            "in": "path",
            "description": "Name of the Managed Environment.",
            "required": true,
            "type": "string"
          },
          {
            "name": "certificateName",
            "in": "path",
            "description": "Name of the Certificate.",
            "required": true,
            "type": "string"
          },
          {
            "name": "certificateEnvelope",
            "in": "body",
            "description": "Properties of a certificate that need to be updated",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CertificatePatch"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/Certificate"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "CertificatesOperations_Delete",
        "summary": "Deletes the specified Certificate.",
        "description": "Deletes the specified Certificate.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "environmentName",
            "in": "path",
            "description": "Name of the Managed Environment.",
            "required": true,
            "type": "string"
          },
          {
            "name": "certificateName",
            "in": "path",
            "description": "Name of the Certificate.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful. "
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/managedEnvironments/{environmentName}/checkNameAvailability": {
      "post": {
        "operationId": "NamespacesOperations_CheckNameAvailability",
        "summary": "Checks the resource name availability.",
        "description": "Checks if resource name is available.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "environmentName",
            "in": "path",
            "description": "Name of the Managed Environment.",
            "required": true,
            "type": "string"
          },
          {
            "name": "checkNameAvailabilityRequest",
            "in": "body",
            "description": "The check name availability request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CheckNameAvailabilityRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/CheckNameAvailabilityResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/managedEnvironments/{environmentName}/daprComponents": {
      "get": {
        "operationId": "DaprComponentsOperations_List",
        "summary": "Get the Dapr Components for a managed environment.",
        "description": "Get the Dapr Components for a managed environment.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "environmentName",
            "in": "path",
            "description": "Name of the Managed Environment.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/DaprComponentListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/managedEnvironments/{environmentName}/daprComponents/{componentName}": {
      "get": {
        "operationId": "DaprComponentsOperations_Get",
        "summary": "Get a dapr component.",
        "description": "Get a dapr component.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "environmentName",
            "in": "path",
            "description": "Name of the Managed Environment.",
            "required": true,
            "type": "string"
          },
          {
            "name": "componentName",
            "in": "path",
            "description": "Name of the Dapr Component.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/DaprComponent"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        }
      },
      "put": {
        "operationId": "DaprComponentsOperations_CreateOrUpdate",
        "summary": "Creates or updates a Dapr Component.",
        "description": "Creates or updates a Dapr Component in a Managed Environment.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "environmentName",
            "in": "path",
            "description": "Name of the Managed Environment.",
            "required": true,
            "type": "string"
          },
          {
            "name": "componentName",
            "in": "path",
            "description": "Name of the Dapr Component.",
            "required": true,
            "type": "string"
          },
          {
            "name": "daprComponentEnvelope",
            "in": "body",
            "description": "Configuration details of the Dapr Component.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DaprComponent"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/DaprComponent"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "DaprComponentsOperations_Delete",
        "summary": "Delete a Dapr Component.",
        "description": "Delete a Dapr Component from a Managed Environment.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "environmentName",
            "in": "path",
            "description": "Name of the Managed Environment.",
            "required": true,
            "type": "string"
          },
          {
            "name": "componentName",
            "in": "path",
            "description": "Name of the Dapr Component.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful. "
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/managedEnvironments/{environmentName}/daprComponents/{componentName}/listSecrets": {
      "post": {
        "operationId": "DaprComponentsOperations_ListSecrets",
        "summary": "List secrets for a dapr component",
        "description": "List secrets for a dapr component",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "environmentName",
            "in": "path",
            "description": "Name of the Managed Environment.",
            "required": true,
            "type": "string"
          },
          {
            "name": "componentName",
            "in": "path",
            "description": "Name of the Dapr Component.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/DaprSecretsCollection"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/managedEnvironments/{environmentName}/detectors": {
      "get": {
        "operationId": "ManagedEnvironmentDiagnosticsOperations_ListDetectors",
        "summary": "Get the list of diagnostics for a given Managed Environment.",
        "description": "Get the list of diagnostics for a Managed Environment used to host container apps.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "environmentName",
            "in": "path",
            "description": "Name of the Environment.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/DiagnosticsListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/managedEnvironments/{environmentName}/detectors/{detectorName}": {
      "get": {
        "operationId": "ManagedEnvironmentDiagnosticsOperations_GetDetector",
        "summary": "Get the diagnostics data for a given Managed Environment.",
        "description": "Get the diagnostics data for a Managed Environment used to host container apps.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "environmentName",
            "in": "path",
            "description": "Name of the Environment.",
            "required": true,
            "type": "string"
          },
          {
            "name": "detectorName",
            "in": "path",
            "description": "Name of the Managed Environment detector.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/Diagnostics"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/managedEnvironments/{environmentName}/getAuthtoken": {
      "post": {
        "operationId": "ManagedEnvironmentsOperations_GetAuthToken",
        "summary": "Get auth token for a managed environment",
        "description": "Checks if resource name is available.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "environmentName",
            "in": "path",
            "description": "Name of the Managed Environment.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/EnvironmentAuthToken"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/managedEnvironments/{environmentName}/workloadProfileStates": {
      "get": {
        "operationId": "ManagedEnvironmentsOperations_ListWorkloadProfileStates",
        "summary": "Get all workload Profile States for a Managed Environment..",
        "description": "Get all workload Profile States for a Managed Environment.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90
          },
          {
            "name": "environmentName",
            "in": "path",
            "description": "Name of the Managed Environment.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/PagedWorkloadProfileStates"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/storages": {
      "get": {
        "operationId": "ManagedEnvironmentsStorages_List",
        "tags": [
          "ManagedEnvironmentStorages"
        ],
        "description": "Get all storages for a managedEnvironment.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ManagedEnvironmentStorageListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List environments storages by subscription": {
            "$ref": "./examples/ManagedEnvironmentsStorages_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/storages/{storageName}": {
      "get": {
        "operationId": "ManagedEnvironmentsStorages_Get",
        "tags": [
          "ManagedEnvironmentStorages"
        ],
        "description": "Get storage for a managedEnvironment.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "storageName",
            "in": "path",
            "description": "Name of the storage.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ManagedEnvironmentStorage"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "get a environments storage properties by subscription": {
            "$ref": "./examples/ManagedEnvironmentsStorages_Get.json"
          }
        }
      },
      "put": {
        "operationId": "ManagedEnvironmentsStorages_CreateOrUpdate",
        "tags": [
          "ManagedEnvironmentStorages"
        ],
        "description": "Create or update storage for a managedEnvironment.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "storageName",
            "in": "path",
            "description": "Name of the storage.",
            "required": true,
            "type": "string"
          },
          {
            "name": "storageEnvelope",
            "in": "body",
            "description": "Configuration details of storage.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ManagedEnvironmentStorage"
            },
            "x-ms-client-name": "storageEnvelope"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'ManagedEnvironmentStorage' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/ManagedEnvironmentStorage"
            }
          },
          "201": {
            "description": "Resource 'ManagedEnvironmentStorage' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/ManagedEnvironmentStorage"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Create or update environments storage": {
            "$ref": "./examples/ManagedEnvironmentsStorages_CreateOrUpdate.json"
          }
        }
      },
      "delete": {
        "operationId": "ManagedEnvironmentsStorages_Delete",
        "tags": [
          "ManagedEnvironmentStorages"
        ],
        "description": "Delete storage for a managedEnvironment.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "storageName",
            "in": "path",
            "description": "Name of the storage.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List environments storages by subscription": {
            "$ref": "./examples/ManagedEnvironmentsStorages_Delete.json"
          }
        }
      }
    }
  },
  "definitions": {
    "AccessMode": {
      "type": "string",
      "description": "Access mode for storage",
      "enum": [
        "ReadOnly",
        "ReadWrite"
      ],
      "x-ms-enum": {
        "name": "AccessMode",
        "modelAsString": true
      }
    },
    "Action": {
      "type": "string",
      "description": "Allow or Deny rules to determine for incoming IP. Note: Rules can only consist of ALL Allow or ALL Deny",
      "enum": [
        "Allow",
        "Deny"
      ],
      "x-ms-enum": {
        "name": "Action",
        "modelAsString": true
      }
    },
    "ActiveRevisionsMode": {
      "type": "string",
      "description": "ActiveRevisionsMode controls how active revisions are handled for the Container app:\n<list><item>Multiple: multiple revisions can be active.</item><item>Single: Only one revision can be active at a time. Revision weights can not be used in this mode. If no value if provided, this is the default.</item></list>",
      "enum": [
        "Multiple",
        "Single"
      ],
      "x-ms-enum": {
        "name": "ActiveRevisionsMode",
        "modelAsString": true
      }
    },
    "Affinity": {
      "type": "string",
      "description": "Sticky Session Affinity",
      "enum": [
        "sticky",
        "none"
      ],
      "x-ms-enum": {
        "name": "Affinity",
        "modelAsString": true
      }
    },
    "AllowedAudiencesValidation": {
      "type": "object",
      "description": "The configuration settings of the Allowed Audiences validation flow.",
      "properties": {
        "allowedAudiences": {
          "type": "array",
          "description": "The configuration settings of the allowed list of audiences from which to validate the JWT token.",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "AllowedPrincipals": {
      "type": "object",
      "description": "The configuration settings of the Azure Active Directory allowed principals.",
      "properties": {
        "groups": {
          "type": "array",
          "description": "The list of the allowed groups.",
          "items": {
            "type": "string"
          }
        },
        "identities": {
          "type": "array",
          "description": "The list of the allowed identities.",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "AppLogsConfiguration": {
      "type": "object",
      "description": "Configuration of application logs",
      "properties": {
        "destination": {
          "type": "string",
          "description": "Logs destination, can be 'log-analytics', 'azure-monitor' or 'none'"
        },
        "logAnalyticsConfiguration": {
          "$ref": "#/definitions/LogAnalyticsConfiguration",
          "description": "Log Analytics configuration, must only be provided when destination is configured as 'log-analytics'"
        }
      }
    },
    "AppProtocol": {
      "type": "string",
      "description": "Tells Dapr which protocol your application is using. Valid options are http and grpc. Default is http",
      "enum": [
        "http",
        "grpc"
      ],
      "x-ms-enum": {
        "name": "AppProtocol",
        "modelAsString": true
      }
    },
    "AppRegistration": {
      "type": "object",
      "description": "The configuration settings of the app registration for providers that have app ids and app secrets",
      "properties": {
        "appId": {
          "type": "string",
          "description": "The App ID of the app used for login."
        },
        "appSecretSettingName": {
          "type": "string",
          "description": "The app setting name that contains the app secret."
        }
      }
    },
    "Apple": {
      "type": "object",
      "description": "The configuration settings of the Apple provider.",
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "<code>false</code> if the Apple provider should not be enabled despite the set registration; otherwise, <code>true</code>.",
          "x-ms-client-name": "IsEnabled"
        },
        "registration": {
          "$ref": "#/definitions/AppleRegistration",
          "description": "The configuration settings of the Apple registration."
        },
        "login": {
          "$ref": "#/definitions/LoginScopes",
          "description": "The configuration settings of the login flow."
        }
      }
    },
    "AppleRegistration": {
      "type": "object",
      "description": "The configuration settings of the registration for the Apple provider",
      "properties": {
        "clientId": {
          "type": "string",
          "description": "The Client ID of the app used for login."
        },
        "clientSecretSettingName": {
          "type": "string",
          "description": "The app setting name that contains the client secret."
        }
      }
    },
    "Applicability": {
      "type": "string",
      "description": "indicates whether the profile is default for the location.",
      "enum": [
        "LocationDefault",
        "Custom"
      ],
      "x-ms-enum": {
        "name": "Applicability",
        "modelAsString": true
      }
    },
    "AuthConfig": {
      "type": "object",
      "description": "Configuration settings for the Azure ContainerApp Service Authentication / Authorization feature.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/AuthConfigProperties",
          "description": "AuthConfig resource specific properties",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "AuthConfigListResult": {
      "type": "object",
      "description": "The response of a AuthConfig list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The AuthConfig items on this page",
          "items": {
            "$ref": "#/definitions/AuthConfig"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "AuthConfigProperties": {
      "type": "object",
      "description": "AuthConfig resource specific properties",
      "properties": {
        "platform": {
          "$ref": "#/definitions/AuthPlatform",
          "description": "The configuration settings of the platform of ContainerApp Service Authentication/Authorization."
        },
        "globalValidation": {
          "$ref": "#/definitions/GlobalValidation",
          "description": "The configuration settings that determines the validation flow of users using  Service Authentication/Authorization."
        },
        "identityProviders": {
          "$ref": "#/definitions/IdentityProviders",
          "description": "The configuration settings of each of the identity providers used to configure ContainerApp Service Authentication/Authorization."
        },
        "login": {
          "$ref": "#/definitions/Login",
          "description": "The configuration settings of the login flow of users using ContainerApp Service Authentication/Authorization."
        },
        "httpSettings": {
          "$ref": "#/definitions/HttpSettings",
          "description": "The configuration settings of the HTTP requests for authentication and authorization requests made against ContainerApp Service Authentication/Authorization."
        }
      }
    },
    "AuthPlatform": {
      "type": "object",
      "description": "The configuration settings of the platform of ContainerApp Service Authentication/Authorization.",
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "<code>true</code> if the Authentication / Authorization feature is enabled for the current app; otherwise, <code>false</code>.",
          "x-ms-client-name": "IsEnabled"
        },
        "runtimeVersion": {
          "type": "string",
          "description": "The RuntimeVersion of the Authentication / Authorization feature in use for the current app.\nThe setting in this value can control the behavior of certain features in the Authentication / Authorization module."
        }
      }
    },
    "AvailableWorkloadProfile": {
      "type": "object",
      "description": "A workload profile with specific hardware configure to run container apps.",
      "properties": {
        "location": {
          "type": "string",
          "description": "Region of the workload profile."
        },
        "properties": {
          "$ref": "#/definitions/AvailableWorkloadProfileProperties",
          "description": "Revision resource specific properties"
        }
      }
    },
    "AvailableWorkloadProfileProperties": {
      "type": "object",
      "description": "Revision resource specific properties",
      "properties": {
        "category": {
          "type": "string",
          "description": "Used to categorize workload profiles."
        },
        "applicability": {
          "$ref": "#/definitions/Applicability",
          "description": "indicates whether the profile is default for the location."
        },
        "cores": {
          "type": "integer",
          "format": "int32",
          "description": "Number of cores in CPU."
        },
        "memoryGiB": {
          "type": "integer",
          "format": "int32",
          "description": "Memory in GiB."
        },
        "displayName": {
          "type": "string",
          "description": "The everyday name of the workload profile."
        }
      }
    },
    "Azure.Core.Foundations.Error": {
      "type": "object",
      "description": "The error object.",
      "properties": {
        "code": {
          "type": "string",
          "description": "One of a server-defined set of error codes."
        },
        "message": {
          "type": "string",
          "description": "A human-readable representation of the error."
        },
        "target": {
          "type": "string",
          "description": "The target of the error."
        },
        "details": {
          "type": "array",
          "description": "An array of details about specific errors that led to this reported error.",
          "items": {
            "$ref": "#/definitions/Azure.Core.Foundations.Error"
          },
          "x-ms-identifiers": []
        },
        "innererror": {
          "$ref": "#/definitions/Azure.Core.Foundations.InnerError",
          "description": "An object containing more specific information than the current object about the error."
        }
      },
      "required": [
        "code",
        "message"
      ]
    },
    "Azure.Core.Foundations.ErrorResponse": {
      "type": "object",
      "description": "A response containing error details.",
      "properties": {
        "error": {
          "$ref": "#/definitions/Azure.Core.Foundations.Error",
          "description": "The error object."
        }
      },
      "required": [
        "error"
      ]
    },
    "Azure.Core.Foundations.InnerError": {
      "type": "object",
      "description": "An object containing more specific information about the error. As per Microsoft One API guidelines - https://github.com/Microsoft/api-guidelines/blob/vNext/Guidelines.md#7102-error-condition-responses.",
      "properties": {
        "code": {
          "type": "string",
          "description": "One of a server-defined set of error codes."
        },
        "innererror": {
          "$ref": "#/definitions/Azure.Core.Foundations.InnerError",
          "description": "Inner error."
        }
      }
    },
    "Azure.ResourceManager.Foundations.CheckNameAvailabilityReason": {
      "type": "string",
      "description": "Possible reasons for a name not being available.",
      "enum": [
        "Invalid",
        "AlreadyExists"
      ],
      "x-ms-enum": {
        "name": "CheckNameAvailabilityReason",
        "modelAsString": true,
        "values": [
          {
            "name": "Invalid",
            "value": "Invalid",
            "description": "Name is invalid."
          },
          {
            "name": "AlreadyExists",
            "value": "AlreadyExists",
            "description": "Name already exists."
          }
        ]
      }
    },
    "Azure.ResourceManager.Foundations.ManagedIdentityProperties": {
      "type": "object",
      "description": "The properties of the managed service identities assigned to this resource.",
      "properties": {
        "tenantId": {
          "type": "string",
          "description": "The Active Directory tenant id of the principal.",
          "readOnly": true
        },
        "principalId": {
          "type": "string",
          "description": "The active directory identifier of this principal.",
          "readOnly": true
        },
        "type": {
          "$ref": "#/definitions/Azure.ResourceManager.Foundations.ManagedIdentityType",
          "description": "The type of managed identity assigned to this resource."
        },
        "userAssignedIdentities": {
          "type": "object",
          "description": "The identities assigned to this resource by the user.",
          "additionalProperties": {
            "$ref": "#/definitions/Azure.ResourceManager.Foundations.UserAssignedIdentity"
          }
        }
      },
      "required": [
        "type"
      ]
    },
    "Azure.ResourceManager.Foundations.ManagedIdentityType": {
      "type": "string",
      "description": "The kind of managed identity assigned to this resource.",
      "enum": [
        "None",
        "SystemAssigned",
        "UserAssigned",
        "SystemAssigned, UserAssigned"
      ],
      "x-ms-enum": {
        "name": "ManagedIdentityType",
        "modelAsString": true,
        "values": [
          {
            "name": "None",
            "value": "None",
            "description": "No managed identity."
          },
          {
            "name": "SystemAssigned",
            "value": "SystemAssigned",
            "description": "System assigned managed identity."
          },
          {
            "name": "UserAssigned",
            "value": "UserAssigned",
            "description": "User assigned managed identity."
          },
          {
            "name": "SystemAndUserAssigned",
            "value": "SystemAssigned, UserAssigned",
            "description": "System and user assigned managed identity."
          }
        ]
      }
    },
    "Azure.ResourceManager.Foundations.UserAssignedIdentity": {
      "type": "object",
      "description": "A managed identity assigned by the user.",
      "properties": {
        "clientId": {
          "type": "string",
          "description": "The active directory client identifier for this principal."
        },
        "principalId": {
          "type": "string",
          "description": "The active directory identifier for this principal."
        }
      }
    },
    "Azure.ResourceManager.ManagedServiceIdentity": {
      "type": "object",
      "description": "The managed service identities envelope.",
      "properties": {
        "identity": {
          "$ref": "#/definitions/Azure.ResourceManager.Foundations.ManagedIdentityProperties",
          "description": "The managed service identities assigned to this resource."
        }
      }
    },
    "AzureActiveDirectory": {
      "type": "object",
      "description": "The configuration settings of the Azure Active directory provider.",
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "<code>false</code> if the Azure Active Directory provider should not be enabled despite the set registration; otherwise, <code>true</code>.",
          "x-ms-client-name": "IsEnabled"
        },
        "registration": {
          "$ref": "#/definitions/AzureActiveDirectoryRegistration",
          "description": "The configuration settings of the Azure Active Directory app registration."
        },
        "login": {
          "$ref": "#/definitions/AzureActiveDirectoryLogin",
          "description": "The configuration settings of the Azure Active Directory login flow."
        },
        "validation": {
          "$ref": "#/definitions/AzureActiveDirectoryValidation",
          "description": "The configuration settings of the Azure Active Directory token validation flow."
        },
        "isAutoProvisioned": {
          "type": "boolean",
          "description": "Gets a value indicating whether the Azure AD configuration was auto-provisioned using 1st party tooling.\nThis is an internal flag primarily intended to support the Azure Management Portal. Users should not\nread or write to this property."
        }
      }
    },
    "AzureActiveDirectoryLogin": {
      "type": "object",
      "description": "The configuration settings of the Azure Active Directory login flow.",
      "properties": {
        "loginParameters": {
          "type": "array",
          "description": "Login parameters to send to the OpenID Connect authorization endpoint when\na user logs in. Each parameter must be in the form \"key=value\".",
          "items": {
            "type": "string"
          }
        },
        "disableWWWAuthenticate": {
          "type": "boolean",
          "description": "<code>true</code> if the www-authenticate provider should be omitted from the request; otherwise, <code>false</code>."
        }
      }
    },
    "AzureActiveDirectoryRegistration": {
      "type": "object",
      "description": "The configuration settings of the Azure Active Directory app registration.",
      "properties": {
        "openIdIssuer": {
          "type": "string",
          "description": "The OpenID Connect Issuer URI that represents the entity which issues access tokens for this application.\nWhen using Azure Active Directory, this value is the URI of the directory tenant, e.g. https://login.microsoftonline.com/v2.0/{tenant-guid}/.\nThis URI is a case-sensitive identifier for the token issuer.\nMore information on OpenID Connect Discovery: http://openid.net/specs/openid-connect-discovery-1_0.html"
        },
        "clientId": {
          "type": "string",
          "description": "The Client ID of this relying party application, known as the client_id.\nThis setting is required for enabling OpenID Connection authentication with Azure Active Directory or\nother 3rd party OpenID Connect providers.\nMore information on OpenID Connect: http://openid.net/specs/openid-connect-core-1_0.html"
        },
        "clientSecretSettingName": {
          "type": "string",
          "description": "The app setting name that contains the client secret of the relying party application."
        },
        "clientSecretCertificateThumbprint": {
          "type": "string",
          "description": "An alternative to the client secret, that is the thumbprint of a certificate used for signing purposes. This property acts as\na replacement for the Client Secret. It is also optional."
        },
        "clientSecretCertificateSubjectAlternativeName": {
          "type": "string",
          "description": "An alternative to the client secret thumbprint, that is the subject alternative name of a certificate used for signing purposes. This property acts as\na replacement for the Client Secret Certificate Thumbprint. It is also optional."
        },
        "clientSecretCertificateIssuer": {
          "type": "string",
          "description": "An alternative to the client secret thumbprint, that is the issuer of a certificate used for signing purposes. This property acts as\na replacement for the Client Secret Certificate Thumbprint. It is also optional."
        }
      }
    },
    "AzureActiveDirectoryValidation": {
      "type": "object",
      "description": "The configuration settings of the Azure Active Directory token validation flow.",
      "properties": {
        "jwtClaimChecks": {
          "$ref": "#/definitions/JwtClaimChecks",
          "description": "The configuration settings of the checks that should be made while validating the JWT Claims."
        },
        "allowedAudiences": {
          "type": "array",
          "description": "The list of audiences that can make successful authentication/authorization requests.",
          "items": {
            "type": "string"
          }
        },
        "defaultAuthorizationPolicy": {
          "$ref": "#/definitions/DefaultAuthorizationPolicy",
          "description": "The configuration settings of the default authorization policy."
        }
      }
    },
    "AzureCredentials": {
      "type": "object",
      "description": "Container App credentials.",
      "properties": {
        "clientId": {
          "type": "string",
          "description": "Client Id.",
          "x-ms-mutability": [
            "update",
            "create"
          ]
        },
        "clientSecret": {
          "type": "string",
          "description": "Client Secret.",
          "x-ms-mutability": [
            "update",
            "create"
          ]
        },
        "tenantId": {
          "type": "string",
          "description": "Tenant Id.",
          "x-ms-mutability": [
            "update",
            "create"
          ]
        },
        "kind": {
          "type": "string",
          "description": "Kind of auth github does for deploying the template",
          "x-ms-mutability": [
            "update",
            "create"
          ]
        },
        "subscriptionId": {
          "type": "string",
          "description": "Subscription Id."
        }
      }
    },
    "AzureFileProperties": {
      "type": "object",
      "description": "Azure File Properties.",
      "properties": {
        "accountName": {
          "type": "string",
          "description": "Storage account name for azure file."
        },
        "accountKey": {
          "type": "string",
          "description": "Storage account key for azure file."
        },
        "accessMode": {
          "$ref": "#/definitions/AccessMode",
          "description": "Access mode for storage"
        },
        "shareName": {
          "type": "string",
          "description": "Azure file share name."
        }
      }
    },
    "AzureStaticWebApps": {
      "type": "object",
      "description": "The configuration settings of the Azure Static Web Apps provider.",
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "<code>false</code> if the Azure Static Web Apps provider should not be enabled despite the set registration; otherwise, <code>true</code>.",
          "x-ms-client-name": "IsEnabled"
        },
        "registration": {
          "$ref": "#/definitions/AzureStaticWebAppsRegistration",
          "description": "The configuration settings of the Azure Static Web Apps registration."
        }
      }
    },
    "AzureStaticWebAppsRegistration": {
      "type": "object",
      "description": "The configuration settings of the registration for the Azure Static Web Apps provider",
      "properties": {
        "clientId": {
          "type": "string",
          "description": "The Client ID of the app used for login."
        }
      }
    },
    "BaseContainer": {
      "type": "object",
      "description": "Container App base container definition.",
      "properties": {
        "image": {
          "type": "string",
          "description": "Container image tag."
        },
        "name": {
          "type": "string",
          "description": "Custom container name."
        },
        "command": {
          "type": "array",
          "description": "Container start command.",
          "items": {
            "type": "string"
          }
        },
        "args": {
          "type": "array",
          "description": "Container start command arguments.",
          "items": {
            "type": "string"
          }
        },
        "env": {
          "type": "array",
          "description": "Container environment variables.",
          "items": {
            "$ref": "#/definitions/EnvironmentVar"
          },
          "x-ms-identifiers": []
        },
        "resources": {
          "$ref": "#/definitions/ContainerResources",
          "description": "Container resource requirements."
        },
        "volumeMounts": {
          "type": "array",
          "description": "Container volume mounts.",
          "items": {
            "$ref": "#/definitions/VolumeMount"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "BillingMeter": {
      "type": "object",
      "description": "Billing meter.",
      "properties": {
        "location": {
          "type": "string",
          "description": "Region for the billing meter."
        },
        "properties": {
          "$ref": "#/definitions/BillingMeterProperties",
          "description": "Revision resource specific properties"
        }
      }
    },
    "BillingMeterCollection": {
      "type": "object",
      "description": "Collection of billing meters.",
      "properties": {
        "value": {
          "type": "array",
          "description": "Collection of billing meters.",
          "items": {
            "$ref": "#/definitions/BillingMeter"
          },
          "x-ms-identifiers": []
        }
      },
      "required": [
        "value"
      ]
    },
    "BillingMeterProperties": {
      "type": "object",
      "description": "Revision resource specific properties",
      "properties": {
        "category": {
          "type": "string",
          "description": "Used to categorize billing meters."
        },
        "meterType": {
          "type": "string",
          "description": "Billing meter type."
        },
        "displayName": {
          "type": "string",
          "description": "The everyday name of the billing meter."
        }
      }
    },
    "BindingType": {
      "type": "string",
      "description": "Custom Domain binding type.",
      "enum": [
        "Disabled",
        "SniEnabled"
      ],
      "x-ms-enum": {
        "name": "BindingType",
        "modelAsString": true
      }
    },
    "Certificate": {
      "type": "object",
      "description": "Certificate used for Custom Domain bindings of Container Apps in a Managed Environment",
      "properties": {
        "properties": {
          "$ref": "#/definitions/CertificateProperties",
          "description": "Certificate resource specific properties",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "CertificateListResult": {
      "type": "object",
      "description": "The response of a Certificate list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The Certificate items on this page",
          "items": {
            "$ref": "#/definitions/Certificate"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "CertificatePatch": {
      "type": "object",
      "description": "A certificate to update",
      "properties": {
        "tags": {
          "type": "object",
          "description": "Application-specific metadata in the form of key-value pairs.",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "CertificateProperties": {
      "type": "object",
      "description": "Certificate resource specific properties",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/CertificateProvisioningState",
          "description": "Provisioning state of the certificate.",
          "readOnly": true
        },
        "password": {
          "type": "string",
          "description": "Certificate password.",
          "x-ms-mutability": [
            "create"
          ]
        },
        "subjectName": {
          "type": "string",
          "description": "Subject name of the certificate.",
          "readOnly": true
        },
        "subjectAlternativeNames": {
          "type": "array",
          "description": "Subject alternative names the certificate applies to.",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "value": {
          "type": "string",
          "format": "byte",
          "description": "PFX or PEM blob",
          "x-ms-mutability": [
            "create"
          ]
        },
        "issuer": {
          "type": "string",
          "description": "Certificate issuer.",
          "readOnly": true
        },
        "issueDate": {
          "type": "string",
          "format": "date-time",
          "description": "Certificate issue Date.",
          "readOnly": true
        },
        "expirationDate": {
          "type": "string",
          "format": "date-time",
          "description": "Certificate expiration date.",
          "readOnly": true
        },
        "thumbprint": {
          "type": "string",
          "description": "Certificate thumbprint.",
          "readOnly": true
        },
        "valid": {
          "type": "boolean",
          "description": "Is the certificate valid?.",
          "readOnly": true
        },
        "publicKeyHash": {
          "type": "string",
          "description": "Public key hash.",
          "readOnly": true
        }
      }
    },
    "CertificateProvisioningState": {
      "type": "string",
      "description": "Provisioning state of the certificate.",
      "enum": [
        "Succeeded",
        "Failed",
        "Canceled",
        "DeleteFailed",
        "Pending"
      ],
      "x-ms-enum": {
        "name": "CertificateProvisioningState",
        "modelAsString": true
      },
      "readOnly": true
    },
    "CheckNameAvailabilityRequest": {
      "type": "object",
      "description": "The check availability request body.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the resource for which availability needs to be checked."
        },
        "type": {
          "type": "string",
          "description": "The resource type."
        }
      }
    },
    "CheckNameAvailabilityResponse": {
      "type": "object",
      "description": "The check availability result.",
      "properties": {
        "nameAvailable": {
          "type": "boolean",
          "description": "Indicates if the resource name is available."
        },
        "reason": {
          "$ref": "#/definitions/Azure.ResourceManager.Foundations.CheckNameAvailabilityReason",
          "description": "The reason why the given name is not available."
        },
        "message": {
          "type": "string",
          "description": "Detailed reason why the given name is available."
        }
      }
    },
    "ClientRegistration": {
      "type": "object",
      "description": "The configuration settings of the app registration for providers that have client ids and client secrets",
      "properties": {
        "clientId": {
          "type": "string",
          "description": "The Client ID of the app used for login."
        },
        "clientSecretSettingName": {
          "type": "string",
          "description": "The app setting name that contains the client secret."
        }
      }
    },
    "Configuration": {
      "type": "object",
      "description": "Non versioned Container App configuration properties that define the mutable settings of a Container app",
      "properties": {
        "secrets": {
          "type": "array",
          "description": "Collection of secrets used by a Container app",
          "items": {
            "$ref": "#/definitions/Secret"
          },
          "x-ms-identifiers": []
        },
        "activeRevisionsMode": {
          "$ref": "#/definitions/ActiveRevisionsMode",
          "description": "ActiveRevisionsMode controls how active revisions are handled for the Container app:\n<list><item>Multiple: multiple revisions can be active.</item><item>Single: Only one revision can be active at a time. Revision weights can not be used in this mode. If no value if provided, this is the default.</item></list>",
          "default": "Single"
        },
        "ingress": {
          "$ref": "#/definitions/Ingress",
          "description": "Ingress configurations."
        },
        "registries": {
          "type": "array",
          "description": "Collection of private container registry credentials for containers used by the Container app",
          "items": {
            "$ref": "#/definitions/RegistryCredentials"
          },
          "x-ms-identifiers": []
        },
        "dapr": {
          "$ref": "#/definitions/Dapr",
          "description": "Dapr configuration for the Container App."
        },
        "maxInactiveRevisions": {
          "type": "integer",
          "format": "int32",
          "description": "Optional. Max inactive revisions a Container App can have."
        },
        "service": {
          "$ref": "#/definitions/Service",
          "description": "Container App to be a dev Container App Service"
        }
      }
    },
    "ConnectedEnvironment": {
      "type": "object",
      "description": "An environment for Kubernetes cluster specialized for web workloads by Azure App Service",
      "properties": {
        "extendedLocation": {
          "$ref": "#/definitions/ExtendedLocation",
          "description": "The complex type of the extended location."
        },
        "properties": {
          "$ref": "#/definitions/ConnectedEnvironmentProperties",
          "description": "ConnectedEnvironment resource specific properties",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "ConnectedEnvironmentListResult": {
      "type": "object",
      "description": "The response of a ConnectedEnvironment list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The ConnectedEnvironment items on this page",
          "items": {
            "$ref": "#/definitions/ConnectedEnvironment"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "ConnectedEnvironmentProperties": {
      "type": "object",
      "description": "ConnectedEnvironment resource specific properties",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/ConnectedEnvironmentProvisioningState",
          "description": "Provisioning state of the Kubernetes Environment.",
          "readOnly": true
        },
        "deploymentErrors": {
          "type": "string",
          "description": "Any errors that occurred during deployment or deployment validation",
          "readOnly": true
        },
        "defaultDomain": {
          "type": "string",
          "description": "Default Domain Name for the cluster",
          "readOnly": true
        },
        "staticIp": {
          "type": "string",
          "description": "Static IP of the connectedEnvironment"
        },
        "daprAIConnectionString": {
          "type": "string",
          "description": "Application Insights connection string used by Dapr to export Service to Service communication telemetry"
        },
        "customDomainConfiguration": {
          "$ref": "#/definitions/CustomDomainConfiguration",
          "description": "Custom domain configuration for the environment"
        }
      }
    },
    "ConnectedEnvironmentProvisioningState": {
      "type": "string",
      "description": "Provisioning state of the Kubernetes Environment.",
      "enum": [
        "Succeeded",
        "Failed",
        "Canceled",
        "Waiting",
        "InitializationInProgress",
        "InfrastructureSetupInProgress",
        "InfrastructureSetupComplete",
        "ScheduledForDelete"
      ],
      "x-ms-enum": {
        "name": "ConnectedEnvironmentProvisioningState",
        "modelAsString": true
      },
      "readOnly": true
    },
    "ConnectedEnvironmentStorage": {
      "type": "object",
      "description": "Storage resource for connectedEnvironment.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ConnectedEnvironmentStorageProperties",
          "description": "Storage properties",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "ConnectedEnvironmentStorageListResult": {
      "type": "object",
      "description": "The response of a ConnectedEnvironmentStorage list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The ConnectedEnvironmentStorage items on this page",
          "items": {
            "$ref": "#/definitions/ConnectedEnvironmentStorage"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "ConnectedEnvironmentStorageProperties": {
      "type": "object",
      "description": "Storage properties",
      "properties": {
        "azureFile": {
          "$ref": "#/definitions/AzureFileProperties",
          "description": "Azure file properties"
        }
      }
    },
    "Container": {
      "type": "object",
      "description": "Container App container definition",
      "properties": {
        "probes": {
          "type": "array",
          "description": "List of probes for the container.",
          "items": {
            "$ref": "#/definitions/ContainerAppProbe"
          },
          "x-ms-identifiers": []
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/BaseContainer"
        }
      ]
    },
    "ContainerApp": {
      "type": "object",
      "description": "Container App.",
      "properties": {
        "extendedLocation": {
          "$ref": "#/definitions/ExtendedLocation",
          "description": "The complex type of the extended location."
        },
        "managedBy": {
          "type": "string",
          "description": "The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource.",
          "x-ms-mutability": [
            "read",
            "update",
            "create"
          ]
        },
        "properties": {
          "$ref": "#/definitions/ContainerAppProperties",
          "description": "ContainerApp resource specific properties",
          "x-ms-client-flatten": true
        },
        "identity": {
          "$ref": "#/definitions/Azure.ResourceManager.Foundations.ManagedIdentityProperties",
          "description": "The managed service identities assigned to this resource."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "ContainerAppAuthToken": {
      "type": "object",
      "description": "Container App Auth Token.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ContainerAppAuthTokenProperties",
          "description": "Container App auth token resource specific properties",
          "x-ms-client-flatten": true
        }
      }
    },
    "ContainerAppAuthTokenProperties": {
      "type": "object",
      "description": "Container App auth token resource specific properties",
      "properties": {
        "token": {
          "type": "string",
          "description": "Auth token value.",
          "readOnly": true
        },
        "expires": {
          "type": "string",
          "format": "date-time",
          "description": "Token expiration date.",
          "readOnly": true
        }
      }
    },
    "ContainerAppContainerRunningState": {
      "type": "string",
      "description": "Current running state of the container",
      "enum": [
        "Running",
        "Terminated",
        "Waiting"
      ],
      "x-ms-enum": {
        "name": "ContainerAppContainerRunningState",
        "modelAsString": true
      }
    },
    "ContainerAppListResult": {
      "type": "object",
      "description": "The response of a ContainerApp list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The ContainerApp items on this page",
          "items": {
            "$ref": "#/definitions/ContainerApp"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "ContainerAppProbe": {
      "type": "object",
      "description": "Probe describes a health check to be performed against a container to determine whether it is alive or ready to receive traffic.",
      "properties": {
        "failureThreshold": {
          "type": "integer",
          "format": "int32",
          "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1. Maximum value is 10."
        },
        "httpGet": {
          "$ref": "#/definitions/ContainerAppProbeHttpGet",
          "description": "HTTPGet specifies the http request to perform."
        },
        "initialDelaySeconds": {
          "type": "integer",
          "format": "int32",
          "description": "Number of seconds after the container has started before liveness probes are initiated. Minimum value is 1. Maximum value is 60."
        },
        "periodSeconds": {
          "type": "integer",
          "format": "int32",
          "description": "How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1. Maximum value is 240."
        },
        "successThreshold": {
          "type": "integer",
          "format": "int32",
          "description": "Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1. Maximum value is 10."
        },
        "tcpSocket": {
          "$ref": "#/definitions/ContainerAppProbeTcpSocket",
          "description": "TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported."
        },
        "terminationGracePeriodSeconds": {
          "type": "integer",
          "format": "int64",
          "description": "Optional duration in seconds the pod needs to terminate gracefully upon probe failure. The grace period is the duration in seconds after the processes running in the pod are sent a termination signal and the time when the processes are forcibly halted with a kill signal. Set this value longer than the expected cleanup time for your process. If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this value overrides the value provided by the pod spec. Value must be non-negative integer. The value zero indicates stop immediately via the kill signal (no opportunity to shut down). This is an alpha field and requires enabling ProbeTerminationGracePeriod feature gate. Maximum value is 3600 seconds (1 hour)"
        },
        "timeoutSeconds": {
          "type": "integer",
          "format": "int32",
          "description": "Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. Maximum value is 240."
        },
        "type": {
          "$ref": "#/definitions/Type",
          "description": "The type of probe."
        }
      }
    },
    "ContainerAppProbeHttpGet": {
      "type": "object",
      "description": "HTTPGet specifies the http request to perform.",
      "properties": {
        "host": {
          "type": "string",
          "description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead."
        },
        "httpHeaders": {
          "type": "array",
          "description": "Custom headers to set in the request. HTTP allows repeated headers.",
          "items": {
            "$ref": "#/definitions/ContainerAppProbeHttpGetHttpHeadersItem"
          },
          "x-ms-identifiers": []
        },
        "path": {
          "type": "string",
          "description": "Path to access on the HTTP server."
        },
        "port": {
          "type": "integer",
          "format": "int32",
          "description": "Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME."
        },
        "scheme": {
          "$ref": "#/definitions/Scheme",
          "description": "Scheme to use for connecting to the host. Defaults to HTTP."
        }
      },
      "required": [
        "port"
      ]
    },
    "ContainerAppProbeHttpGetHttpHeadersItem": {
      "type": "object",
      "description": "HTTPHeader describes a custom header to be used in HTTP probes",
      "properties": {
        "name": {
          "type": "string",
          "description": "The header field name"
        },
        "value": {
          "type": "string",
          "description": "The header field value"
        }
      },
      "required": [
        "name",
        "value"
      ]
    },
    "ContainerAppProbeTcpSocket": {
      "type": "object",
      "description": "TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported.",
      "properties": {
        "host": {
          "type": "string",
          "description": "Optional: Host name to connect to, defaults to the pod IP."
        },
        "port": {
          "type": "integer",
          "format": "int32",
          "description": "Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME."
        }
      },
      "required": [
        "port"
      ]
    },
    "ContainerAppProperties": {
      "type": "object",
      "description": "ContainerApp resource specific properties",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/ContainerAppProvisioningState",
          "description": "Provisioning state of the Container App.",
          "readOnly": true
        },
        "managedEnvironmentId": {
          "type": "string",
          "description": "Deprecated. Resource ID of the Container App's environment.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "environmentId": {
          "type": "string",
          "description": "Resource ID of environment.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "workloadProfileName": {
          "type": "string",
          "description": "Workload profile name to pin for container app execution."
        },
        "latestRevisionName": {
          "type": "string",
          "description": "Name of the latest revision of the Container App.",
          "readOnly": true
        },
        "latestReadyRevisionName": {
          "type": "string",
          "description": "Name of the latest ready revision of the Container App.",
          "readOnly": true
        },
        "latestRevisionFqdn": {
          "type": "string",
          "description": "Fully Qualified Domain Name of the latest revision of the Container App.",
          "readOnly": true
        },
        "customDomainVerificationId": {
          "type": "string",
          "description": "Id used to verify domain name ownership",
          "readOnly": true
        },
        "configuration": {
          "$ref": "#/definitions/Configuration",
          "description": "Non versioned Container App configuration properties."
        },
        "template": {
          "$ref": "#/definitions/Template",
          "description": "Container App versioned application definition."
        },
        "outboundIpAddresses": {
          "type": "array",
          "description": "Outbound IP Addresses for container app.",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "eventStreamEndpoint": {
          "type": "string",
          "description": "The endpoint of the eventstream of the container app.",
          "readOnly": true
        }
      }
    },
    "ContainerAppProvisioningState": {
      "type": "string",
      "description": "Provisioning state of the Container App.",
      "enum": [
        "InProgress",
        "Succeeded",
        "Failed",
        "Canceled",
        "Deleting"
      ],
      "x-ms-enum": {
        "name": "ContainerAppProvisioningState",
        "modelAsString": true
      },
      "readOnly": true
    },
    "ContainerAppReplicaRunningState": {
      "type": "string",
      "description": "Current running state of the replica",
      "enum": [
        "Running",
        "NotRunning",
        "Unknown"
      ],
      "x-ms-enum": {
        "name": "ContainerAppReplicaRunningState",
        "modelAsString": true
      }
    },
    "ContainerAppSecret": {
      "type": "object",
      "description": "Container App Secret.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Secret Name.",
          "readOnly": true
        },
        "value": {
          "type": "string",
          "description": "Secret Value.",
          "readOnly": true
        },
        "identity": {
          "type": "string",
          "description": "Resource ID of a managed identity to authenticate with Azure Key Vault, or System to use a system-assigned identity.",
          "readOnly": true
        },
        "keyVaultUrl": {
          "type": "string",
          "description": "Azure Key Vault URL pointing to the secret referenced by the container app.",
          "readOnly": true
        }
      }
    },
    "ContainerResources": {
      "type": "object",
      "description": "Container App container resource requirements.",
      "properties": {
        "cpu": {
          "type": "number",
          "format": "double",
          "description": "Required CPU in cores, e.g. 0.5"
        },
        "memory": {
          "type": "string",
          "description": "Required memory, e.g. \"250Mb\""
        },
        "ephemeralStorage": {
          "type": "string",
          "description": "Ephemeral Storage, e.g. \"1Gi\"",
          "readOnly": true
        }
      }
    },
    "CookieExpiration": {
      "type": "object",
      "description": "The configuration settings of the session cookie's expiration.",
      "properties": {
        "convention": {
          "$ref": "#/definitions/CookieExpirationConvention",
          "description": "The convention used when determining the session cookie's expiration."
        },
        "timeToExpiration": {
          "type": "string",
          "description": "The time after the request is made when the session cookie should expire."
        }
      }
    },
    "CookieExpirationConvention": {
      "type": "string",
      "description": "The convention used when determining the session cookie's expiration.",
      "enum": [
        "FixedTime",
        "IdentityProviderDerived"
      ],
      "x-ms-enum": {
        "name": "CookieExpirationConvention",
        "modelAsString": false
      }
    },
    "CorsPolicy": {
      "type": "object",
      "description": "Cross-Origin-Resource-Sharing policy",
      "properties": {
        "allowedOrigins": {
          "type": "array",
          "description": "Specifies the content for the access-control-allow-origins header",
          "items": {
            "type": "string"
          }
        },
        "allowedMethods": {
          "type": "array",
          "description": "Specifies the content for the access-control-allow-methods header",
          "items": {
            "type": "string"
          }
        },
        "allowedHeaders": {
          "type": "array",
          "description": "Specifies the content for the access-control-allow-headers header",
          "items": {
            "type": "string"
          }
        },
        "exposeHeaders": {
          "type": "array",
          "description": "Specifies the content for the access-control-expose-headers header",
          "items": {
            "type": "string"
          }
        },
        "maxAge": {
          "type": "integer",
          "format": "int32",
          "description": "Specifies the content for the access-control-max-age header"
        },
        "allowCredentials": {
          "type": "boolean",
          "description": "Specifies whether the resource allows credentials"
        }
      },
      "required": [
        "allowedOrigins"
      ]
    },
    "CustomDomain": {
      "type": "object",
      "description": "Custom Domain of a Container App",
      "properties": {
        "name": {
          "type": "string",
          "description": "Hostname."
        },
        "bindingType": {
          "$ref": "#/definitions/BindingType",
          "description": "Custom Domain binding type."
        },
        "certificateId": {
          "type": "string",
          "description": "Resource Id of the Certificate to be bound to this hostname. Must exist in the Managed Environment."
        }
      },
      "required": [
        "name"
      ]
    },
    "CustomDomainConfiguration": {
      "type": "object",
      "description": "Configuration properties for apps environment custom domain",
      "properties": {
        "customDomainVerificationId": {
          "type": "string",
          "description": "Id used to verify domain name ownership",
          "readOnly": true
        },
        "dnsSuffix": {
          "type": "string",
          "description": "Dns suffix for the environment domain",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "certificateValue": {
          "type": "string",
          "format": "byte",
          "description": "PFX or PEM blob"
        },
        "certificatePassword": {
          "type": "string",
          "description": "Certificate password"
        },
        "expirationDate": {
          "type": "string",
          "format": "date-time",
          "description": "Certificate expiration date.",
          "readOnly": true
        },
        "thumbprint": {
          "type": "string",
          "description": "Certificate thumbprint.",
          "readOnly": true
        },
        "subjectName": {
          "type": "string",
          "description": "Subject name of the certificate.",
          "readOnly": true
        }
      }
    },
    "CustomHostnameAnalysisResult": {
      "type": "object",
      "description": "Custom domain analysis.",
      "properties": {
        "hostName": {
          "type": "string",
          "description": "Host name that was analyzed",
          "readOnly": true
        },
        "isHostnameAlreadyVerified": {
          "type": "boolean",
          "description": "<code>true</code> if hostname is already verified; otherwise, <code>false</code>.",
          "readOnly": true
        },
        "customDomainVerificationTest": {
          "$ref": "#/definitions/DnsVerificationTestResult",
          "description": "DNS verification test result.",
          "readOnly": true
        },
        "customDomainVerificationFailureInfo": {
          "$ref": "#/definitions/CustomHostnameAnalysisResultCustomDomainVerificationFailureInfo",
          "description": "Raw failure information if DNS verification fails.",
          "readOnly": true
        },
        "hasConflictOnManagedEnvironment": {
          "type": "boolean",
          "description": "<code>true</code> if there is a conflict on the Container App's managed environment; otherwise, <code>false</code>.",
          "readOnly": true
        },
        "conflictWithEnvironmentCustomDomain": {
          "type": "boolean",
          "description": "<code>true</code> if there is a conflict on the Container App's managed environment level custom domain; otherwise, <code>false</code>.",
          "readOnly": true
        },
        "conflictingContainerAppResourceId": {
          "type": "string",
          "description": "Name of the conflicting Container App on the Managed Environment if it's within the same subscription.",
          "readOnly": true
        },
        "cNameRecords": {
          "type": "array",
          "description": "CName records visible for this hostname.",
          "items": {
            "type": "string"
          }
        },
        "txtRecords": {
          "type": "array",
          "description": "TXT records visible for this hostname.",
          "items": {
            "type": "string"
          }
        },
        "aRecords": {
          "type": "array",
          "description": "A records visible for this hostname.",
          "items": {
            "type": "string"
          }
        },
        "alternateCNameRecords": {
          "type": "array",
          "description": "Alternate CName records visible for this hostname.",
          "items": {
            "type": "string"
          }
        },
        "alternateTxtRecords": {
          "type": "array",
          "description": "Alternate TXT records visible for this hostname.",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "CustomHostnameAnalysisResultCustomDomainVerificationFailureInfo": {
      "type": "object",
      "description": "Raw failure information if DNS verification fails.",
      "properties": {
        "code": {
          "type": "string",
          "description": "Standardized string to programmatically identify the error.",
          "readOnly": true
        },
        "message": {
          "type": "string",
          "description": "Detailed error description and debugging information.",
          "readOnly": true
        },
        "target": {
          "type": "string",
          "description": "Detailed error description and debugging information.",
          "readOnly": true
        },
        "details": {
          "type": "array",
          "description": "Details or the error",
          "items": {
            "$ref": "#/definitions/CustomHostnameAnalysisResultCustomDomainVerificationFailureInfoDetailsItem"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "CustomHostnameAnalysisResultCustomDomainVerificationFailureInfoDetailsItem": {
      "type": "object",
      "description": "Detailed errors.",
      "properties": {
        "code": {
          "type": "string",
          "description": "Standardized string to programmatically identify the error.",
          "readOnly": true
        },
        "message": {
          "type": "string",
          "description": "Detailed error description and debugging information.",
          "readOnly": true
        },
        "target": {
          "type": "string",
          "description": "Detailed error description and debugging information.",
          "readOnly": true
        }
      }
    },
    "CustomOpenIdConnectProvider": {
      "type": "object",
      "description": "The configuration settings of the custom Open ID Connect provider.",
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "<code>false</code> if the custom Open ID provider provider should not be enabled; otherwise, <code>true</code>.",
          "x-ms-client-name": "IsEnabled"
        },
        "registration": {
          "$ref": "#/definitions/OpenIdConnectRegistration",
          "description": "The configuration settings of the app registration for the custom Open ID Connect provider."
        },
        "login": {
          "$ref": "#/definitions/OpenIdConnectLogin",
          "description": "The configuration settings of the login flow of the custom Open ID Connect provider."
        }
      }
    },
    "CustomScaleRule": {
      "type": "object",
      "description": "Container App container Custom scaling rule.",
      "properties": {
        "type": {
          "type": "string",
          "description": "Type of the custom scale rule\neg: azure-servicebus, redis etc."
        },
        "metadata": {
          "type": "object",
          "description": "Metadata properties to describe custom scale rule.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "auth": {
          "type": "array",
          "description": "Authentication secrets for the custom scale rule.",
          "items": {
            "$ref": "#/definitions/ScaleRuleAuth"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "Dapr": {
      "type": "object",
      "description": "Container App Dapr configuration.",
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Boolean indicating if the Dapr side car is enabled",
          "x-ms-client-name": "IsEnabled"
        },
        "appId": {
          "type": "string",
          "description": "Dapr application identifier"
        },
        "appProtocol": {
          "$ref": "#/definitions/AppProtocol",
          "description": "Tells Dapr which protocol your application is using. Valid options are http and grpc. Default is http",
          "default": "http"
        },
        "appPort": {
          "type": "integer",
          "format": "int32",
          "description": "Tells Dapr which port your application is listening on"
        },
        "httpReadBufferSize": {
          "type": "integer",
          "format": "int32",
          "description": "Dapr max size of http header read buffer in KB to handle when sending multi-KB headers. Default is 65KB."
        },
        "httpMaxRequestSize": {
          "type": "integer",
          "format": "int32",
          "description": "Increasing max size of request body http and grpc servers parameter in MB to handle uploading of big files. Default is 4 MB."
        },
        "logLevel": {
          "$ref": "#/definitions/LogLevel",
          "description": "Sets the log level for the Dapr sidecar. Allowed values are debug, info, warn, error. Default is info."
        },
        "enableApiLogging": {
          "type": "boolean",
          "description": "Enables API logging for the Dapr sidecar"
        }
      }
    },
    "DaprComponent": {
      "type": "object",
      "description": "Dapr Component.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/DaprComponentProperties",
          "description": "Dapr Component resource specific properties",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "DaprComponentListResult": {
      "type": "object",
      "description": "The response of a DaprComponent list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The DaprComponent items on this page",
          "items": {
            "$ref": "#/definitions/DaprComponent"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "DaprComponentProperties": {
      "type": "object",
      "description": "Dapr Component resource specific properties",
      "properties": {
        "componentType": {
          "type": "string",
          "description": "Component type"
        },
        "version": {
          "type": "string",
          "description": "Component version"
        },
        "ignoreErrors": {
          "type": "boolean",
          "description": "Boolean describing if the component errors are ignores"
        },
        "initTimeout": {
          "type": "string",
          "description": "Initialization timeout"
        },
        "secrets": {
          "type": "array",
          "description": "Collection of secrets used by a Dapr component",
          "items": {
            "$ref": "#/definitions/Secret"
          },
          "x-ms-identifiers": []
        },
        "secretStoreComponent": {
          "type": "string",
          "description": "Name of a Dapr component to retrieve component secrets from"
        },
        "metadata": {
          "type": "array",
          "description": "Component metadata",
          "items": {
            "$ref": "#/definitions/DaprMetadata"
          },
          "x-ms-identifiers": []
        },
        "scopes": {
          "type": "array",
          "description": "Names of container apps that can use this Dapr component",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "DaprConfiguration": {
      "type": "object",
      "description": "Configuration properties Dapr component",
      "properties": {
        "version": {
          "type": "string",
          "description": "The version of Dapr",
          "readOnly": true
        }
      }
    },
    "DaprMetadata": {
      "type": "object",
      "description": "Dapr component metadata.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Metadata property name."
        },
        "value": {
          "type": "string",
          "description": "Metadata property value."
        },
        "secretRef": {
          "type": "string",
          "description": "Name of the Dapr Component secret from which to pull the metadata property value."
        }
      }
    },
    "DaprSecret": {
      "type": "object",
      "description": "Dapr component Secret for ListSecrets Action",
      "properties": {
        "name": {
          "type": "string",
          "description": "Secret Name.",
          "readOnly": true
        },
        "value": {
          "type": "string",
          "description": "Secret Value.",
          "readOnly": true
        }
      }
    },
    "DaprSecretsCollection": {
      "type": "object",
      "description": "Dapr component Secrets Collection for ListSecrets Action.",
      "properties": {
        "value": {
          "type": "array",
          "description": "Collection of secrets used by a Dapr component",
          "items": {
            "$ref": "#/definitions/DaprSecret"
          },
          "x-ms-identifiers": []
        }
      },
      "required": [
        "value"
      ]
    },
    "DefaultAuthorizationPolicy": {
      "type": "object",
      "description": "The configuration settings of the Azure Active Directory default authorization policy.",
      "properties": {
        "allowedPrincipals": {
          "$ref": "#/definitions/AllowedPrincipals",
          "description": "The configuration settings of the Azure Active Directory allowed principals."
        },
        "allowedApplications": {
          "type": "array",
          "description": "The configuration settings of the Azure Active Directory allowed applications.",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "DefaultErrorResponse": {
      "type": "object",
      "description": "App Service error response.",
      "properties": {
        "error": {
          "$ref": "#/definitions/DefaultErrorResponseError",
          "description": "Error model.",
          "readOnly": true
        }
      }
    },
    "DefaultErrorResponseError": {
      "type": "object",
      "description": "Error model.",
      "properties": {
        "code": {
          "type": "string",
          "description": "Standardized string to programmatically identify the error.",
          "readOnly": true
        },
        "message": {
          "type": "string",
          "description": "Detailed error description and debugging information.",
          "readOnly": true
        },
        "target": {
          "type": "string",
          "description": "Detailed error description and debugging information.",
          "readOnly": true
        },
        "details": {
          "type": "array",
          "description": "Details or the error",
          "items": {
            "$ref": "#/definitions/DefaultErrorResponseErrorDetailsItem"
          },
          "x-ms-identifiers": []
        },
        "innererror": {
          "type": "string",
          "description": "More information to debug error.",
          "readOnly": true
        }
      }
    },
    "DefaultErrorResponseErrorDetailsItem": {
      "type": "object",
      "description": "Detailed errors.",
      "properties": {
        "code": {
          "type": "string",
          "description": "Standardized string to programmatically identify the error.",
          "readOnly": true
        },
        "message": {
          "type": "string",
          "description": "Detailed error description and debugging information.",
          "readOnly": true
        },
        "target": {
          "type": "string",
          "description": "Detailed error description and debugging information.",
          "readOnly": true
        }
      }
    },
    "DiagnosticDataProviderMetadata": {
      "type": "object",
      "description": "Details of a diagnostics data provider",
      "properties": {
        "providerName": {
          "type": "string",
          "description": "Name of data provider"
        },
        "propertyBag": {
          "type": "array",
          "description": "Collection of properties",
          "items": {
            "$ref": "#/definitions/DiagnosticDataProviderMetadataPropertyBagItem"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "DiagnosticDataProviderMetadataPropertyBagItem": {
      "type": "object",
      "description": "Property details",
      "properties": {
        "name": {
          "type": "string",
          "description": "Property name"
        },
        "value": {
          "type": "string",
          "description": "Property value"
        }
      }
    },
    "DiagnosticDataTableResponseColumn": {
      "type": "object",
      "description": "Diagnostics data column",
      "properties": {
        "columnName": {
          "type": "string",
          "description": "Column name"
        },
        "dataType": {
          "type": "string",
          "description": "Data type of the column"
        },
        "columnType": {
          "type": "string",
          "description": "Column type"
        }
      }
    },
    "DiagnosticDataTableResponseObject": {
      "type": "object",
      "description": "Diagnostics data table",
      "properties": {
        "tableName": {
          "type": "string",
          "description": "Table name"
        },
        "columns": {
          "type": "array",
          "description": "Columns in the table",
          "items": {
            "$ref": "#/definitions/DiagnosticDataTableResponseColumn"
          },
          "x-ms-identifiers": []
        },
        "rows": {
          "type": "array",
          "description": "Rows in the table",
          "items": {
            "type": "object",
            "additionalProperties": {}
          },
          "x-ms-identifiers": []
        }
      }
    },
    "DiagnosticRendering": {
      "type": "object",
      "description": "Rendering details of a diagnostics table",
      "properties": {
        "type": {
          "type": "integer",
          "format": "int32",
          "description": "Rendering type"
        },
        "title": {
          "type": "string",
          "description": "Title of the table"
        },
        "description": {
          "type": "string",
          "description": "Description of the table"
        },
        "isVisible": {
          "type": "boolean",
          "description": "Flag if the table should be rendered"
        }
      }
    },
    "DiagnosticSupportTopic": {
      "type": "object",
      "description": "Support topic information",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique topic identifier",
          "readOnly": true
        },
        "pesId": {
          "type": "string",
          "description": "PES identifier",
          "readOnly": true
        }
      }
    },
    "Diagnostics": {
      "type": "object",
      "description": "Diagnostics data for a resource.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/DiagnosticsProperties",
          "description": "Diagnostics resource specific properties",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "DiagnosticsDataApiResponse": {
      "type": "object",
      "description": "Diagnostics data returned from a detector",
      "properties": {
        "table": {
          "$ref": "#/definitions/DiagnosticDataTableResponseObject",
          "description": "Table response"
        },
        "renderingProperties": {
          "$ref": "#/definitions/DiagnosticRendering",
          "description": "Details of the table response"
        }
      }
    },
    "DiagnosticsDefinition": {
      "type": "object",
      "description": "Metadata of the diagnostics response",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique detector name",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "Display Name of the detector",
          "readOnly": true
        },
        "description": {
          "type": "string",
          "description": "Details of the diagnostics info",
          "readOnly": true
        },
        "author": {
          "type": "string",
          "description": "Authors' names of the detector",
          "readOnly": true
        },
        "category": {
          "type": "string",
          "description": "Category of the detector",
          "readOnly": true
        },
        "supportTopicList": {
          "type": "array",
          "description": "List of support topics",
          "items": {
            "$ref": "#/definitions/DiagnosticSupportTopic"
          }
        },
        "analysisTypes": {
          "type": "array",
          "description": "List of analysis types",
          "items": {
            "type": "string"
          }
        },
        "type": {
          "type": "string",
          "description": "Authors' names of the detector",
          "readOnly": true
        },
        "score": {
          "type": "number",
          "format": "float",
          "description": "Authors' names of the detector",
          "readOnly": true
        }
      }
    },
    "DiagnosticsListResult": {
      "type": "object",
      "description": "The response of a Diagnostics list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The Diagnostics items on this page",
          "items": {
            "$ref": "#/definitions/Diagnostics"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "DiagnosticsProperties": {
      "type": "object",
      "description": "Diagnostics resource specific properties",
      "properties": {
        "metadata": {
          "$ref": "#/definitions/DiagnosticsDefinition",
          "description": "Metadata of the diagnostics response."
        },
        "dataset": {
          "type": "array",
          "description": "Set of data collections associated with the response.",
          "items": {
            "$ref": "#/definitions/DiagnosticsDataApiResponse"
          },
          "x-ms-identifiers": []
        },
        "status": {
          "$ref": "#/definitions/DiagnosticsStatus",
          "description": "Status of the diagnostics response."
        },
        "dataProviderMetadata": {
          "$ref": "#/definitions/DiagnosticDataProviderMetadata",
          "description": "List of data providers' metadata."
        }
      }
    },
    "DiagnosticsStatus": {
      "type": "object",
      "description": "Rendering details of a diagnostics table",
      "properties": {
        "message": {
          "type": "string",
          "description": "Diagnostic message"
        },
        "statusId": {
          "type": "integer",
          "format": "int32",
          "description": "Status"
        }
      }
    },
    "DnsVerificationTestResult": {
      "type": "string",
      "description": "DNS verification test result.",
      "enum": [
        "Passed",
        "Failed",
        "Skipped"
      ],
      "x-ms-enum": {
        "name": "DnsVerificationTestResult",
        "modelAsString": false
      }
    },
    "EnvironmentAuthToken": {
      "type": "object",
      "description": "Environment Auth Token.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/EnvironmentAuthTokenProperties",
          "description": "Environment auth token resource specific properties",
          "x-ms-client-flatten": true
        }
      }
    },
    "EnvironmentAuthTokenProperties": {
      "type": "object",
      "description": "Environment auth token resource specific properties",
      "properties": {
        "token": {
          "type": "string",
          "description": "Auth token value.",
          "readOnly": true
        },
        "expires": {
          "type": "string",
          "format": "date-time",
          "description": "Token expiration date.",
          "readOnly": true
        }
      }
    },
    "EnvironmentProvisioningState": {
      "type": "string",
      "description": "Provisioning state of the Environment.",
      "enum": [
        "Succeeded",
        "Failed",
        "Canceled",
        "Waiting",
        "InitializationInProgress",
        "InfrastructureSetupInProgress",
        "InfrastructureSetupComplete",
        "ScheduledForDelete",
        "UpgradeRequested",
        "UpgradeFailed"
      ],
      "x-ms-enum": {
        "name": "EnvironmentProvisioningState",
        "modelAsString": true
      },
      "readOnly": true
    },
    "EnvironmentVar": {
      "type": "object",
      "description": "Container App container environment variable.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Environment variable name."
        },
        "value": {
          "type": "string",
          "description": "Non-secret environment variable value."
        },
        "secretRef": {
          "type": "string",
          "description": "Name of the Container App secret from which to pull the environment variable value."
        }
      }
    },
    "ExtendedLocation": {
      "type": "object",
      "description": "The complex type of the extended location.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the extended location."
        },
        "type": {
          "$ref": "#/definitions/ExtendedLocationTypes",
          "description": "The type of the extended location."
        }
      }
    },
    "ExtendedLocationTypes": {
      "type": "string",
      "description": "The type of extendedLocation.",
      "enum": [
        "CustomLocation"
      ],
      "x-ms-enum": {
        "name": "ExtendedLocationTypes",
        "modelAsString": true
      }
    },
    "Facebook": {
      "type": "object",
      "description": "The configuration settings of the Facebook provider.",
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "<code>false</code> if the Facebook provider should not be enabled despite the set registration; otherwise, <code>true</code>.",
          "x-ms-client-name": "IsEnabled"
        },
        "registration": {
          "$ref": "#/definitions/AppRegistration",
          "description": "The configuration settings of the app registration for the Facebook provider."
        },
        "graphApiVersion": {
          "type": "string",
          "description": "The version of the Facebook api to be used while logging in."
        },
        "login": {
          "$ref": "#/definitions/LoginScopes",
          "description": "The configuration settings of the login flow."
        }
      }
    },
    "ForwardProxy": {
      "type": "object",
      "description": "The configuration settings of a forward proxy used to make the requests.",
      "properties": {
        "convention": {
          "$ref": "#/definitions/ForwardProxyConvention",
          "description": "The convention used to determine the url of the request made."
        },
        "customHostHeaderName": {
          "type": "string",
          "description": "The name of the header containing the host of the request."
        },
        "customProtoHeaderName": {
          "type": "string",
          "description": "The name of the header containing the scheme of the request."
        }
      }
    },
    "ForwardProxyConvention": {
      "type": "string",
      "description": "The convention used to determine the url of the request made.",
      "enum": [
        "NoProxy",
        "Standard",
        "Custom"
      ],
      "x-ms-enum": {
        "name": "ForwardProxyConvention",
        "modelAsString": false
      }
    },
    "GitHub": {
      "type": "object",
      "description": "The configuration settings of the GitHub provider.",
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "<code>false</code> if the GitHub provider should not be enabled despite the set registration; otherwise, <code>true</code>.",
          "x-ms-client-name": "IsEnabled"
        },
        "registration": {
          "$ref": "#/definitions/ClientRegistration",
          "description": "The configuration settings of the app registration for the GitHub provider."
        },
        "login": {
          "$ref": "#/definitions/LoginScopes",
          "description": "The configuration settings of the login flow."
        }
      }
    },
    "GithubActionConfiguration": {
      "type": "object",
      "description": "Configuration properties that define the mutable settings of a Container App SourceControl",
      "properties": {
        "registryInfo": {
          "$ref": "#/definitions/RegistryInfo",
          "description": "Registry configurations."
        },
        "azureCredentials": {
          "$ref": "#/definitions/AzureCredentials",
          "description": "AzureCredentials configurations."
        },
        "contextPath": {
          "type": "string",
          "description": "Context path"
        },
        "githubPersonalAccessToken": {
          "type": "string",
          "description": "One time Github PAT to configure github environment",
          "x-ms-mutability": [
            "update",
            "create"
          ]
        },
        "image": {
          "type": "string",
          "description": "Image name"
        },
        "publishType": {
          "type": "string",
          "description": "Code or Image"
        },
        "os": {
          "type": "string",
          "description": "Operation system"
        },
        "runtimeStack": {
          "type": "string",
          "description": "Runtime stack"
        },
        "runtimeVersion": {
          "type": "string",
          "description": "Runtime version"
        }
      }
    },
    "GlobalValidation": {
      "type": "object",
      "description": "The configuration settings that determines the validation flow of users using ContainerApp Service Authentication/Authorization.",
      "properties": {
        "unauthenticatedClientAction": {
          "$ref": "#/definitions/UnauthenticatedClientActionV2",
          "description": "The action to take when an unauthenticated client attempts to access the app."
        },
        "redirectToProvider": {
          "type": "string",
          "description": "The default authentication provider to use when multiple providers are configured.\nThis setting is only needed if multiple providers are configured and the unauthenticated client\naction is set to \"RedirectToLoginPage\"."
        },
        "excludedPaths": {
          "type": "array",
          "description": "The paths for which unauthenticated flow would not be redirected to the login page.",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "Google": {
      "type": "object",
      "description": "The configuration settings of the Google provider.",
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "<code>false</code> if the Google provider should not be enabled despite the set registration; otherwise, <code>true</code>.",
          "x-ms-client-name": "IsEnabled"
        },
        "registration": {
          "$ref": "#/definitions/ClientRegistration",
          "description": "The configuration settings of the app registration for the Google provider."
        },
        "login": {
          "$ref": "#/definitions/LoginScopes",
          "description": "The configuration settings of the login flow."
        },
        "validation": {
          "$ref": "#/definitions/AllowedAudiencesValidation",
          "description": "The configuration settings of the Azure Active Directory token validation flow."
        }
      }
    },
    "HttpScaleRule": {
      "type": "object",
      "description": "Container App container Http scaling rule.",
      "properties": {
        "metadata": {
          "type": "object",
          "description": "Metadata properties to describe http scale rule.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "auth": {
          "type": "array",
          "description": "Authentication secrets for the custom scale rule.",
          "items": {
            "$ref": "#/definitions/ScaleRuleAuth"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "HttpSettings": {
      "type": "object",
      "description": "The configuration settings of the HTTP requests for authentication and authorization requests made against ContainerApp Service Authentication/Authorization.",
      "properties": {
        "requireHttps": {
          "type": "boolean",
          "description": "<code>false</code> if the authentication/authorization responses not having the HTTPS scheme are permissible; otherwise, <code>true</code>."
        },
        "routes": {
          "$ref": "#/definitions/HttpSettingsRoutes",
          "description": "The configuration settings of the paths HTTP requests."
        },
        "forwardProxy": {
          "$ref": "#/definitions/ForwardProxy",
          "description": "The configuration settings of a forward proxy used to make the requests."
        }
      }
    },
    "HttpSettingsRoutes": {
      "type": "object",
      "description": "The configuration settings of the paths HTTP requests.",
      "properties": {
        "apiPrefix": {
          "type": "string",
          "description": "The prefix that should precede all the authentication/authorization paths."
        }
      }
    },
    "IdentityProviders": {
      "type": "object",
      "description": "The configuration settings of each of the identity providers used to configure ContainerApp Service Authentication/Authorization.",
      "properties": {
        "azureActiveDirectory": {
          "$ref": "#/definitions/AzureActiveDirectory",
          "description": "The configuration settings of the Azure Active directory provider."
        },
        "facebook": {
          "$ref": "#/definitions/Facebook",
          "description": "The configuration settings of the Facebook provider."
        },
        "gitHub": {
          "$ref": "#/definitions/GitHub",
          "description": "The configuration settings of the GitHub provider."
        },
        "google": {
          "$ref": "#/definitions/Google",
          "description": "The configuration settings of the Google provider."
        },
        "twitter": {
          "$ref": "#/definitions/Twitter",
          "description": "The configuration settings of the Twitter provider."
        },
        "apple": {
          "$ref": "#/definitions/Apple",
          "description": "The configuration settings of the Apple provider."
        },
        "azureStaticWebApps": {
          "$ref": "#/definitions/AzureStaticWebApps",
          "description": "The configuration settings of the Azure Static Web Apps provider."
        },
        "customOpenIdConnectProviders": {
          "type": "object",
          "description": "The map of the name of the alias of each custom Open ID Connect provider to the\nconfiguration settings of the custom Open ID Connect provider.",
          "additionalProperties": {
            "$ref": "#/definitions/CustomOpenIdConnectProvider"
          }
        }
      }
    },
    "Ingress": {
      "type": "object",
      "description": "Container App Ingress configuration.",
      "properties": {
        "fqdn": {
          "type": "string",
          "description": "Hostname.",
          "readOnly": true
        },
        "external": {
          "type": "boolean",
          "description": "Bool indicating if app exposes an external http endpoint"
        },
        "targetPort": {
          "type": "integer",
          "format": "int32",
          "description": "Target Port in containers for traffic from ingress"
        },
        "exposedPort": {
          "type": "integer",
          "format": "int32",
          "description": "Exposed Port in containers for TCP traffic from ingress"
        },
        "transport": {
          "$ref": "#/definitions/IngressTransportMethod",
          "description": "Ingress transport protocol",
          "default": "auto"
        },
        "traffic": {
          "type": "array",
          "description": "Traffic weights for app's revisions",
          "items": {
            "$ref": "#/definitions/TrafficWeight"
          },
          "x-ms-identifiers": []
        },
        "customDomains": {
          "type": "array",
          "description": "custom domain bindings for Container Apps' hostnames.",
          "items": {
            "$ref": "#/definitions/CustomDomain"
          },
          "x-ms-identifiers": []
        },
        "allowInsecure": {
          "type": "boolean",
          "description": "Bool indicating if HTTP connections to is allowed. If set to false HTTP connections are automatically redirected to HTTPS connections"
        },
        "ipSecurityRestrictions": {
          "type": "array",
          "description": "Rules to restrict incoming IP address.",
          "items": {
            "$ref": "#/definitions/IpSecurityRestrictionRule"
          },
          "x-ms-identifiers": []
        },
        "stickySessions": {
          "$ref": "#/definitions/IngressStickySessions",
          "description": "Sticky Sessions for Single Revision Mode"
        },
        "clientCertificateMode": {
          "$ref": "#/definitions/IngressClientCertificateMode",
          "description": "Client certificate mode for mTLS authentication. Ignore indicates server drops client certificate on forwarding. Accept indicates server forwards client certificate but does not require a client certificate. Require indicates server requires a client certificate."
        },
        "corsPolicy": {
          "$ref": "#/definitions/CorsPolicy",
          "description": "CORS policy for container app"
        }
      }
    },
    "IngressClientCertificateMode": {
      "type": "string",
      "description": "Client certificate mode for mTLS authentication. Ignore indicates server drops client certificate on forwarding. Accept indicates server forwards client certificate but does not require a client certificate. Require indicates server requires a client certificate.",
      "enum": [
        "ignore",
        "accept",
        "require"
      ],
      "x-ms-enum": {
        "name": "IngressClientCertificateMode",
        "modelAsString": true
      }
    },
    "IngressStickySessions": {
      "type": "object",
      "description": "Sticky Sessions for Single Revision Mode",
      "properties": {
        "affinity": {
          "$ref": "#/definitions/Affinity",
          "description": "Sticky Session Affinity"
        }
      }
    },
    "IngressTransportMethod": {
      "type": "string",
      "description": "Ingress transport protocol",
      "enum": [
        "auto",
        "http",
        "http2",
        "tcp"
      ],
      "x-ms-enum": {
        "name": "IngressTransportMethod",
        "modelAsString": true
      }
    },
    "InitContainer": {
      "type": "object",
      "description": "Container App init container definition",
      "allOf": [
        {
          "$ref": "#/definitions/BaseContainer"
        }
      ]
    },
    "IpSecurityRestrictionRule": {
      "type": "object",
      "description": "Rule to restrict incoming IP address.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name for the IP restriction rule."
        },
        "description": {
          "type": "string",
          "description": "Describe the IP restriction rule that is being sent to the container-app. This is an optional field."
        },
        "ipAddressRange": {
          "type": "string",
          "description": "CIDR notation to match incoming IP address"
        },
        "action": {
          "$ref": "#/definitions/Action",
          "description": "Allow or Deny rules to determine for incoming IP. Note: Rules can only consist of ALL Allow or ALL Deny"
        }
      },
      "required": [
        "name",
        "ipAddressRange",
        "action"
      ]
    },
    "Job": {
      "type": "object",
      "description": "Container App Job",
      "properties": {
        "properties": {
          "$ref": "#/definitions/JobProperties",
          "description": "Container Apps Job resource specific properties.",
          "x-ms-client-flatten": true
        },
        "identity": {
          "$ref": "#/definitions/Azure.ResourceManager.Foundations.ManagedIdentityProperties",
          "description": "The managed service identities assigned to this resource."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "JobConfiguration": {
      "type": "object",
      "description": "Non versioned Container Apps Job configuration properties",
      "properties": {
        "secrets": {
          "type": "array",
          "description": "Collection of secrets used by a Container Apps Job",
          "items": {
            "$ref": "#/definitions/Secret"
          },
          "x-ms-identifiers": []
        },
        "triggerType": {
          "$ref": "#/definitions/TriggerType",
          "description": "Trigger type of the job",
          "default": "Manual"
        },
        "replicaTimeout": {
          "type": "integer",
          "format": "int32",
          "description": "Maximum number of seconds a replica is allowed to run."
        },
        "replicaRetryLimit": {
          "type": "integer",
          "format": "int32",
          "description": "Maximum number of retries before failing the job."
        },
        "manualTriggerConfig": {
          "$ref": "#/definitions/JobConfigurationManualTriggerConfig",
          "description": "Manual trigger configuration for a single execution job. Properties replicaCompletionCount and parallelism would be set to 1 by default"
        },
        "scheduleTriggerConfig": {
          "$ref": "#/definitions/JobConfigurationScheduleTriggerConfig",
          "description": "Cron formatted repeating trigger schedule (\"* * * * *\") for cronjobs. Properties completions and parallelism would be set to 1 by default"
        },
        "eventTriggerConfig": {
          "$ref": "#/definitions/JobConfigurationEventTriggerConfig",
          "description": "Trigger configuration of an event driven job."
        },
        "registries": {
          "type": "array",
          "description": "Collection of private container registry credentials used by a Container apps job",
          "items": {
            "$ref": "#/definitions/RegistryCredentials"
          },
          "x-ms-identifiers": []
        }
      },
      "required": [
        "triggerType",
        "replicaTimeout"
      ]
    },
    "JobConfigurationEventTriggerConfig": {
      "type": "object",
      "description": "Trigger configuration of an event driven job.",
      "properties": {
        "replicaCompletionCount": {
          "type": "integer",
          "format": "int32",
          "description": "Minimum number of successful replica completions before overall job completion."
        },
        "parallelism": {
          "type": "integer",
          "format": "int32",
          "description": "Number of parallel replicas of a job that can run at a given time."
        },
        "scale": {
          "$ref": "#/definitions/JobScale",
          "description": "Scaling configurations for event driven jobs."
        }
      }
    },
    "JobConfigurationManualTriggerConfig": {
      "type": "object",
      "description": "Manual trigger configuration for a single execution job. Properties replicaCompletionCount and parallelism would be set to 1 by default",
      "properties": {
        "replicaCompletionCount": {
          "type": "integer",
          "format": "int32",
          "description": "Minimum number of successful replica completions before overall job completion."
        },
        "parallelism": {
          "type": "integer",
          "format": "int32",
          "description": "Number of parallel replicas of a job that can run at a given time."
        }
      }
    },
    "JobConfigurationScheduleTriggerConfig": {
      "type": "object",
      "description": "Cron formatted repeating trigger schedule (\"* * * * *\") for cronjobs. Properties completions and parallelism would be set to 1 by default",
      "properties": {
        "replicaCompletionCount": {
          "type": "integer",
          "format": "int32",
          "description": "Minimum number of successful replica completions before overall job completion."
        },
        "cronExpression": {
          "type": "string",
          "description": "Cron formatted repeating schedule (\"* * * * *\") of a Cron Job."
        },
        "parallelism": {
          "type": "integer",
          "format": "int32",
          "description": "Number of parallel replicas of a job that can run at a given time."
        }
      },
      "required": [
        "cronExpression"
      ]
    },
    "JobExecution": {
      "type": "object",
      "description": "Container Apps Job execution.",
      "properties": {
        "properties": {
          "type": "object",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "status": {
          "$ref": "#/definitions/JobExecutionRunningState",
          "description": "Current running State of the job",
          "readOnly": true
        },
        "startTime": {
          "type": "string",
          "format": "date-time",
          "description": "Job execution start time."
        },
        "endTime": {
          "type": "string",
          "format": "date-time",
          "description": "Job execution end time."
        },
        "template": {
          "$ref": "#/definitions/JobExecutionTemplate",
          "description": "Job's execution container."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "JobExecutionBase": {
      "type": "object",
      "description": "Container App's Job execution name.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Job execution name."
        },
        "id": {
          "type": "string",
          "description": "Job execution Id."
        }
      }
    },
    "JobExecutionContainer": {
      "type": "object",
      "description": "Container Apps Jobs execution container definition.",
      "properties": {
        "image": {
          "type": "string",
          "description": "Container image tag."
        },
        "name": {
          "type": "string",
          "description": "Custom container name."
        },
        "command": {
          "type": "array",
          "description": "Container start command.",
          "items": {
            "type": "string"
          }
        },
        "args": {
          "type": "array",
          "description": "Container start command arguments.",
          "items": {
            "type": "string"
          }
        },
        "env": {
          "type": "array",
          "description": "Container environment variables.",
          "items": {
            "$ref": "#/definitions/EnvironmentVar"
          },
          "x-ms-identifiers": []
        },
        "resources": {
          "$ref": "#/definitions/ContainerResources",
          "description": "Container resource requirements."
        }
      }
    },
    "JobExecutionListResult": {
      "type": "object",
      "description": "The response of a JobExecution list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The JobExecution items on this page",
          "items": {
            "$ref": "#/definitions/JobExecution"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "JobExecutionNamesCollection": {
      "type": "object",
      "description": "Container App executions names list.",
      "properties": {
        "value": {
          "type": "array",
          "description": "Collection of resources.",
          "items": {
            "$ref": "#/definitions/JobExecutionBase"
          }
        }
      },
      "required": [
        "value"
      ]
    },
    "JobExecutionRunningState": {
      "type": "string",
      "description": "Current running State of the job",
      "enum": [
        "Running",
        "Processing",
        "Stopped",
        "Degraded",
        "Failed",
        "Unknown",
        "Succeeded"
      ],
      "x-ms-enum": {
        "name": "JobExecutionRunningState",
        "modelAsString": true
      },
      "readOnly": true
    },
    "JobExecutionTemplate": {
      "type": "object",
      "description": "Job's execution template, containing container configuration for a job's execution",
      "properties": {
        "containers": {
          "type": "array",
          "description": "List of container definitions for the Container Apps Job.",
          "items": {
            "$ref": "#/definitions/JobExecutionContainer"
          },
          "x-ms-identifiers": []
        },
        "initContainers": {
          "type": "array",
          "description": "List of specialized containers that run before job containers.",
          "items": {
            "$ref": "#/definitions/JobExecutionContainer"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "JobListResult": {
      "type": "object",
      "description": "The response of a Job list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The Job items on this page",
          "items": {
            "$ref": "#/definitions/Job"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "JobPatchProperties": {
      "type": "object",
      "description": "Container Apps Job resource specific properties.",
      "properties": {
        "identity": {
          "$ref": "#/definitions/Azure.ResourceManager.ManagedServiceIdentity",
          "description": "Managed identities needed by a container app job to interact with other Azure services to not maintain any secrets or credentials in code."
        },
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          },
          "x-ms-mutability": [
            "read",
            "update",
            "create"
          ]
        },
        "properties": {
          "$ref": "#/definitions/JobPatchPropertiesProperties"
        }
      }
    },
    "JobPatchPropertiesProperties": {
      "type": "object",
      "properties": {
        "environmentId": {
          "type": "string",
          "description": "Resource ID of environment.",
          "x-ms-mutability": [
            "read",
            "update",
            "create"
          ]
        },
        "configuration": {
          "$ref": "#/definitions/JobConfiguration",
          "description": "Container Apps Job configuration properties."
        },
        "template": {
          "$ref": "#/definitions/JobTemplate",
          "description": "Container Apps job definition."
        },
        "outboundIpAddresses": {
          "type": "array",
          "description": "Outbound IP Addresses of a container apps job.",
          "items": {
            "type": "string"
          }
        },
        "eventStreamEndpoint": {
          "type": "string",
          "description": "The endpoint of the eventstream of the container apps job."
        }
      }
    },
    "JobProperties": {
      "type": "object",
      "description": "Container Apps Job resource specific properties.",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/JobProvisioningState",
          "description": "Provisioning state of the Container Apps Job.",
          "readOnly": true
        },
        "environmentId": {
          "type": "string",
          "description": "Resource ID of environment.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "workloadProfileName": {
          "type": "string",
          "description": "Workload profile name to pin for container apps job execution."
        },
        "configuration": {
          "$ref": "#/definitions/JobConfiguration",
          "description": "Container Apps Job configuration properties."
        },
        "template": {
          "$ref": "#/definitions/JobTemplate",
          "description": "Container Apps job definition."
        },
        "outboundIpAddresses": {
          "type": "array",
          "description": "Outbound IP Addresses of a container apps job.",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "eventStreamEndpoint": {
          "type": "string",
          "description": "The endpoint of the eventstream of the container apps job.",
          "readOnly": true
        }
      }
    },
    "JobProvisioningState": {
      "type": "string",
      "description": "Provisioning state of the Container Apps Job.",
      "enum": [
        "InProgress",
        "Succeeded",
        "Failed",
        "Canceled",
        "Deleting"
      ],
      "x-ms-enum": {
        "name": "JobProvisioningState",
        "modelAsString": true
      },
      "readOnly": true
    },
    "JobScale": {
      "type": "object",
      "description": "Scaling configurations for event driven jobs.",
      "properties": {
        "pollingInterval": {
          "type": "integer",
          "format": "int32",
          "description": "Interval to check each event source in seconds. Defaults to 30s"
        },
        "minExecutions": {
          "type": "integer",
          "format": "int32",
          "description": "Minimum number of job executions that are created for a trigger, default 0"
        },
        "maxExecutions": {
          "type": "integer",
          "format": "int32",
          "description": "Maximum number of job executions that are created for a trigger, default 100.",
          "default": 100
        },
        "rules": {
          "type": "array",
          "description": "Scaling rules.",
          "items": {
            "$ref": "#/definitions/JobScaleRule"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "JobScaleRule": {
      "type": "object",
      "description": "Scaling rule.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Scale Rule Name"
        },
        "type": {
          "type": "string",
          "description": "Type of the scale rule\neg: azure-servicebus, redis etc."
        },
        "metadata": {
          "type": "object",
          "description": "Metadata properties to describe the scale rule.",
          "additionalProperties": {}
        },
        "auth": {
          "type": "array",
          "description": "Authentication secrets for the scale rule.",
          "items": {
            "$ref": "#/definitions/ScaleRuleAuth"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "JobSecretsCollection": {
      "type": "object",
      "description": "Container Apps Job Secrets Collection ARM resource.",
      "properties": {
        "value": {
          "type": "array",
          "description": "Collection of resources.",
          "items": {
            "$ref": "#/definitions/Secret"
          },
          "x-ms-identifiers": []
        }
      },
      "required": [
        "value"
      ]
    },
    "JobTemplate": {
      "type": "object",
      "description": "Container Apps Job versioned application definition. Defines the desired state of an immutable revision. Any changes to this section Will result in a new revision being created",
      "properties": {
        "initContainers": {
          "type": "array",
          "description": "List of specialized containers that run before app containers.",
          "items": {
            "$ref": "#/definitions/InitContainer"
          },
          "x-ms-identifiers": []
        },
        "containers": {
          "type": "array",
          "description": "List of container definitions for the Container App.",
          "items": {
            "$ref": "#/definitions/Container"
          },
          "x-ms-identifiers": []
        },
        "volumes": {
          "type": "array",
          "description": "List of volume definitions for the Container App.",
          "items": {
            "$ref": "#/definitions/Volume"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "JwtClaimChecks": {
      "type": "object",
      "description": "The configuration settings of the checks that should be made while validating the JWT Claims.",
      "properties": {
        "allowedGroups": {
          "type": "array",
          "description": "The list of the allowed groups.",
          "items": {
            "type": "string"
          }
        },
        "allowedClientApplications": {
          "type": "array",
          "description": "The list of the allowed client applications.",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "KedaConfiguration": {
      "type": "object",
      "description": "Configuration properties Keda component",
      "properties": {
        "version": {
          "type": "string",
          "description": "The version of Keda",
          "readOnly": true
        }
      }
    },
    "LogAnalyticsConfiguration": {
      "type": "object",
      "description": "Log Analytics configuration, must only be provided when destination is configured as 'log-analytics'",
      "properties": {
        "customerId": {
          "type": "string",
          "description": "Log analytics customer id"
        },
        "sharedKey": {
          "type": "string",
          "description": "Log analytics customer key",
          "x-ms-mutability": [
            "update",
            "create"
          ]
        }
      }
    },
    "LogLevel": {
      "type": "string",
      "description": "Sets the log level for the Dapr sidecar. Allowed values are debug, info, warn, error. Default is info.",
      "enum": [
        "info",
        "debug",
        "warn",
        "error"
      ],
      "x-ms-enum": {
        "name": "LogLevel",
        "modelAsString": true
      }
    },
    "Login": {
      "type": "object",
      "description": "The configuration settings of the login flow of users using ContainerApp Service Authentication/Authorization.",
      "properties": {
        "routes": {
          "$ref": "#/definitions/LoginRoutes",
          "description": "The routes that specify the endpoints used for login and logout requests."
        },
        "preserveUrlFragmentsForLogins": {
          "type": "boolean",
          "description": "<code>true</code> if the fragments from the request are preserved after the login request is made; otherwise, <code>false</code>."
        },
        "allowedExternalRedirectUrls": {
          "type": "array",
          "description": "External URLs that can be redirected to as part of logging in or logging out of the app. Note that the query string part of the URL is ignored.\nThis is an advanced setting typically only needed by Windows Store application backends.\nNote that URLs within the current domain are always implicitly allowed.",
          "items": {
            "type": "string"
          }
        },
        "cookieExpiration": {
          "$ref": "#/definitions/CookieExpiration",
          "description": "The configuration settings of the session cookie's expiration."
        },
        "nonce": {
          "$ref": "#/definitions/Nonce",
          "description": "The configuration settings of the nonce used in the login flow."
        }
      }
    },
    "LoginRoutes": {
      "type": "object",
      "description": "The routes that specify the endpoints used for login and logout requests.",
      "properties": {
        "logoutEndpoint": {
          "type": "string",
          "description": "The endpoint at which a logout request should be made."
        }
      }
    },
    "LoginScopes": {
      "type": "object",
      "description": "The configuration settings of the login flow, including the scopes that should be requested.",
      "properties": {
        "scopes": {
          "type": "array",
          "description": "A list of the scopes that should be requested while authenticating.",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ManagedCertificate": {
      "type": "object",
      "description": "Managed certificates used for Custom Domain bindings of Container Apps in a Managed Environment",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ManagedCertificateProperties",
          "description": "Certificate resource specific properties",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "ManagedCertificateDomainControlValidation": {
      "type": "string",
      "description": "Selected type of domain control validation for managed certificates.",
      "enum": [
        "CNAME",
        "HTTP",
        "TXT"
      ],
      "x-ms-enum": {
        "name": "ManagedCertificateDomainControlValidation",
        "modelAsString": true
      }
    },
    "ManagedCertificateListResult": {
      "type": "object",
      "description": "The response of a ManagedCertificate list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The ManagedCertificate items on this page",
          "items": {
            "$ref": "#/definitions/ManagedCertificate"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "ManagedCertificatePatch": {
      "type": "object",
      "description": "A managed certificate to update",
      "properties": {
        "tags": {
          "type": "object",
          "description": "Application-specific metadata in the form of key-value pairs.",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "ManagedCertificateProperties": {
      "type": "object",
      "description": "Certificate resource specific properties",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/CertificateProvisioningState",
          "description": "Provisioning state of the certificate.",
          "readOnly": true
        },
        "subjectName": {
          "type": "string",
          "description": "Subject name of the certificate."
        },
        "error": {
          "type": "string",
          "description": "Any error occurred during the certificate provision.",
          "readOnly": true
        },
        "domainControlValidation": {
          "$ref": "#/definitions/ManagedCertificateDomainControlValidation",
          "description": "Selected type of domain control validation for managed certificates."
        },
        "validationToken": {
          "type": "string",
          "description": "A TXT token used for DNS TXT domain control validation when issuing this type of managed certificates.",
          "readOnly": true
        }
      }
    },
    "ManagedEnvironment": {
      "type": "object",
      "description": "An environment for hosting container apps",
      "properties": {
        "name": {
          "type": "string",
          "readOnly": true
        },
        "kind": {
          "type": "string",
          "description": "Kind of the Environment."
        },
        "properties": {
          "$ref": "#/definitions/ManagedEnvironmentProperties",
          "description": "Managed environment resource specific properties",
          "x-ms-client-flatten": true
        }
      },
      "required": [
        "name"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "ManagedEnvironmentProperties": {
      "type": "object",
      "description": "Managed environment resource specific properties",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/EnvironmentProvisioningState",
          "description": "Provisioning state of the Environment.",
          "readOnly": true
        },
        "daprAIInstrumentationKey": {
          "type": "string",
          "description": "Azure Monitor instrumentation key used by Dapr to export Service to Service communication telemetry"
        },
        "daprAIConnectionString": {
          "type": "string",
          "description": "Application Insights connection string used by Dapr to export Service to Service communication telemetry"
        },
        "vnetConfiguration": {
          "$ref": "#/definitions/VnetConfiguration",
          "description": "Vnet configuration for the environment"
        },
        "deploymentErrors": {
          "type": "string",
          "description": "Any errors that occurred during deployment or deployment validation",
          "readOnly": true
        },
        "defaultDomain": {
          "type": "string",
          "description": "Default Domain Name for the cluster",
          "readOnly": true
        },
        "staticIp": {
          "type": "string",
          "description": "Static IP of the Environment",
          "readOnly": true
        },
        "appLogsConfiguration": {
          "$ref": "#/definitions/AppLogsConfiguration",
          "description": "Cluster configuration which enables the log daemon to export\napp logs to a destination. Currently only \"log-analytics\" is\nsupported"
        },
        "zoneRedundant": {
          "type": "boolean",
          "description": "Whether or not this Managed Environment is zone-redundant.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "customDomainConfiguration": {
          "$ref": "#/definitions/CustomDomainConfiguration",
          "description": "Custom domain configuration for the environment"
        },
        "eventStreamEndpoint": {
          "type": "string",
          "description": "The endpoint of the eventstream of the Environment.",
          "readOnly": true
        },
        "workloadProfiles": {
          "type": "array",
          "description": "Workload profiles configured for the Managed Environment.",
          "items": {
            "$ref": "#/definitions/WorkloadProfile"
          },
          "x-ms-identifiers": []
        },
        "kedaConfiguration": {
          "$ref": "#/definitions/KedaConfiguration",
          "description": "The configuration of Keda component."
        },
        "daprConfiguration": {
          "$ref": "#/definitions/DaprConfiguration",
          "description": "The configuration of Dapr component."
        },
        "infrastructureResourceGroup": {
          "type": "string",
          "description": "Name of the platform-managed resource group created for the Managed Environment to host infrastructure resources. If a subnet ID is provided, this resource group will be created in the same subscription as the subnet.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "peerAuthentication": {
          "$ref": "#/definitions/ManagedEnvironmentPropertiesPeerAuthentication",
          "description": "Peer authentication settings for the Managed Environment"
        }
      }
    },
    "ManagedEnvironmentPropertiesPeerAuthentication": {
      "type": "object",
      "description": "Peer authentication settings for the Managed Environment",
      "properties": {
        "mtls": {
          "$ref": "#/definitions/Mtls",
          "description": "Mutual TLS authentication settings for the Managed Environment"
        }
      }
    },
    "ManagedEnvironmentStorage": {
      "type": "object",
      "description": "Storage resource for managedEnvironment.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ManagedEnvironmentStorageProperties",
          "description": "Storage properties",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "ManagedEnvironmentStorageListResult": {
      "type": "object",
      "description": "The response of a ManagedEnvironmentStorage list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The ManagedEnvironmentStorage items on this page",
          "items": {
            "$ref": "#/definitions/ManagedEnvironmentStorage"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "ManagedEnvironmentStorageProperties": {
      "type": "object",
      "description": "Storage properties",
      "properties": {
        "azureFile": {
          "$ref": "#/definitions/AzureFileProperties",
          "description": "Azure file properties"
        }
      }
    },
    "ManagedEnvironmentUpdate": {
      "type": "object",
      "description": "An environment for hosting container apps",
      "properties": {
        "kind": {
          "type": "string",
          "description": "Kind of the Environment."
        },
        "properties": {
          "$ref": "#/definitions/ManagedEnvironmentProperties",
          "description": "Managed environment resource specific properties",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "ManagedServiceIdentityType": {
      "type": "string",
      "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
      "enum": [
        "None",
        "SystemAssigned",
        "UserAssigned",
        "SystemAssigned,UserAssigned"
      ],
      "x-ms-enum": {
        "name": "ManagedServiceIdentityType",
        "modelAsString": true
      }
    },
    "Mtls": {
      "type": "object",
      "description": "Configuration properties for mutual TLS authentication",
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Boolean indicating whether the mutual TLS authentication is enabled",
          "x-ms-client-name": "IsEnabled"
        }
      }
    },
    "Nonce": {
      "type": "object",
      "description": "The configuration settings of the nonce used in the login flow.",
      "properties": {
        "validateNonce": {
          "type": "boolean",
          "description": "<code>false</code> if the nonce should not be validated while completing the login flow; otherwise, <code>true</code>."
        },
        "nonceExpirationInterval": {
          "type": "string",
          "description": "The time after the request is made when the nonce should expire."
        }
      }
    },
    "OpenIdConnectClientCredential": {
      "type": "object",
      "description": "The authentication client credentials of the custom Open ID Connect provider.",
      "properties": {
        "method": {
          "type": "string",
          "description": "The method that should be used to authenticate the user.",
          "enum": [
            "ClientSecretPost"
          ],
          "x-ms-enum": {
            "modelAsString": false
          }
        },
        "clientSecretSettingName": {
          "type": "string",
          "description": "The app setting that contains the client secret for the custom Open ID Connect provider."
        }
      }
    },
    "OpenIdConnectConfig": {
      "type": "object",
      "description": "The configuration settings of the endpoints used for the custom Open ID Connect provider.",
      "properties": {
        "authorizationEndpoint": {
          "type": "string",
          "description": "The endpoint to be used to make an authorization request."
        },
        "tokenEndpoint": {
          "type": "string",
          "description": "The endpoint to be used to request a token."
        },
        "issuer": {
          "type": "string",
          "description": "The endpoint that issues the token."
        },
        "certificationUri": {
          "type": "string",
          "description": "The endpoint that provides the keys necessary to validate the token."
        },
        "wellKnownOpenIdConfiguration": {
          "type": "string",
          "description": "The endpoint that contains all the configuration endpoints for the provider."
        }
      }
    },
    "OpenIdConnectLogin": {
      "type": "object",
      "description": "The configuration settings of the login flow of the custom Open ID Connect provider.",
      "properties": {
        "nameClaimType": {
          "type": "string",
          "description": "The name of the claim that contains the users name."
        },
        "scopes": {
          "type": "array",
          "description": "A list of the scopes that should be requested while authenticating.",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "OpenIdConnectRegistration": {
      "type": "object",
      "description": "The configuration settings of the app registration for the custom Open ID Connect provider.",
      "properties": {
        "clientId": {
          "type": "string",
          "description": "The client id of the custom Open ID Connect provider."
        },
        "clientCredential": {
          "$ref": "#/definitions/OpenIdConnectClientCredential",
          "description": "The authentication credentials of the custom Open ID Connect provider."
        },
        "openIdConnectConfiguration": {
          "$ref": "#/definitions/OpenIdConnectConfig",
          "description": "The configuration settings of the endpoints used for the custom Open ID Connect provider."
        }
      }
    },
    "OperationDetail": {
      "type": "object",
      "description": "Operation detail payload",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the operation"
        },
        "isDataAction": {
          "type": "boolean",
          "description": "Indicates whether the operation is a data action"
        },
        "display": {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/OperationDisplay",
          "description": "Display of the operation"
        },
        "origin": {
          "type": "string",
          "description": "Origin of the operation"
        }
      }
    },
    "PagedAvailableWorkloadProfile": {
      "type": "object",
      "description": "Collection of available workload profiles in the location.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The AvailableWorkloadProfile items on this page",
          "items": {
            "$ref": "#/definitions/AvailableWorkloadProfile"
          },
          "x-ms-identifiers": []
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "PagedManagedEnvironment": {
      "type": "object",
      "description": "Collection of Environments",
      "properties": {
        "value": {
          "type": "array",
          "description": "The ManagedEnvironment items on this page",
          "items": {
            "$ref": "#/definitions/ManagedEnvironment"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "PagedWorkloadProfileStates": {
      "type": "object",
      "description": "Collection of workloadProfileStates",
      "properties": {
        "value": {
          "type": "array",
          "description": "The WorkloadProfileStates items on this page",
          "items": {
            "$ref": "#/definitions/WorkloadProfileStates"
          },
          "x-ms-identifiers": []
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "QueueScaleRule": {
      "type": "object",
      "description": "Container App container Azure Queue based scaling rule.",
      "properties": {
        "queueName": {
          "type": "string",
          "description": "Queue name."
        },
        "queueLength": {
          "type": "integer",
          "format": "int32",
          "description": "Queue length."
        },
        "auth": {
          "type": "array",
          "description": "Authentication secrets for the queue scale rule.",
          "items": {
            "$ref": "#/definitions/ScaleRuleAuth"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "RegistryCredentials": {
      "type": "object",
      "description": "Container App Private Registry",
      "properties": {
        "server": {
          "type": "string",
          "description": "Container Registry Server"
        },
        "username": {
          "type": "string",
          "description": "Container Registry Username"
        },
        "passwordSecretRef": {
          "type": "string",
          "description": "The name of the Secret that contains the registry login password"
        },
        "identity": {
          "type": "string",
          "description": "A Managed Identity to use to authenticate with Azure Container Registry. For user-assigned identities, use the full user-assigned identity Resource ID. For system-assigned identities, use 'system'"
        }
      }
    },
    "RegistryInfo": {
      "type": "object",
      "description": "Container App registry information.",
      "properties": {
        "registryUrl": {
          "type": "string",
          "description": "registry server Url."
        },
        "registryUserName": {
          "type": "string",
          "description": "registry username."
        },
        "registryPassword": {
          "type": "string",
          "description": "registry secret.",
          "x-ms-mutability": [
            "update",
            "create"
          ]
        }
      }
    },
    "Replica": {
      "type": "object",
      "description": "Container App Revision Replica.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ReplicaProperties",
          "description": "Replica resource specific properties",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "ReplicaContainer": {
      "type": "object",
      "description": "Container object under Container App Revision Replica.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The Name of the Container"
        },
        "containerId": {
          "type": "string",
          "description": "The Id of the Container"
        },
        "ready": {
          "type": "boolean",
          "description": "The container ready status"
        },
        "started": {
          "type": "boolean",
          "description": "The container start status"
        },
        "restartCount": {
          "type": "integer",
          "format": "int32",
          "description": "The container restart count"
        },
        "runningState": {
          "$ref": "#/definitions/ContainerAppContainerRunningState",
          "description": "Current running state of the container",
          "readOnly": true
        },
        "runningStateDetails": {
          "type": "string",
          "description": "The details of container current running state",
          "readOnly": true
        },
        "logStreamEndpoint": {
          "type": "string",
          "description": "Log Stream endpoint",
          "readOnly": true
        },
        "execEndpoint": {
          "type": "string",
          "description": "Container exec endpoint",
          "readOnly": true
        }
      }
    },
    "ReplicaListResult": {
      "type": "object",
      "description": "The response of a Replica list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The Replica items on this page",
          "items": {
            "$ref": "#/definitions/Replica"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "ReplicaProperties": {
      "type": "object",
      "description": "Replica resource specific properties",
      "properties": {
        "createdTime": {
          "type": "string",
          "format": "date-time",
          "description": "Timestamp describing when the pod was created by controller",
          "readOnly": true
        },
        "runningState": {
          "$ref": "#/definitions/ContainerAppReplicaRunningState",
          "description": "Current running state of the replica",
          "readOnly": true
        },
        "runningStateDetails": {
          "type": "string",
          "description": "The details of replica current running state",
          "readOnly": true
        },
        "containers": {
          "type": "array",
          "description": "The containers collection under a replica.",
          "items": {
            "$ref": "#/definitions/ReplicaContainer"
          },
          "x-ms-identifiers": []
        },
        "initContainers": {
          "type": "array",
          "description": "The init containers collection under a replica.",
          "items": {
            "$ref": "#/definitions/ReplicaContainer"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "Resource": {
      "type": "object",
      "description": "Common fields that are returned in the response for all Azure Resource Manager resources",
      "properties": {
        "id": {
          "type": "string",
          "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/systemData",
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true
        }
      }
    },
    "Revision": {
      "type": "object",
      "description": "Container App Revision.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/RevisionProperties",
          "description": "Revision resource specific properties",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "RevisionHealthState": {
      "type": "string",
      "description": "Current health State of the revision",
      "enum": [
        "Healthy",
        "Unhealthy",
        "None"
      ],
      "x-ms-enum": {
        "name": "RevisionHealthState",
        "modelAsString": true
      }
    },
    "RevisionListResult": {
      "type": "object",
      "description": "The response of a Revision list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The Revision items on this page",
          "items": {
            "$ref": "#/definitions/Revision"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "RevisionProperties": {
      "type": "object",
      "description": "Revision resource specific properties",
      "properties": {
        "createdTime": {
          "type": "string",
          "format": "date-time",
          "description": "Timestamp describing when the revision was created\nby controller",
          "readOnly": true
        },
        "lastActiveTime": {
          "type": "string",
          "format": "date-time",
          "description": "Timestamp describing when the revision was last active. Only meaningful when revision is inactive",
          "readOnly": true
        },
        "fqdn": {
          "type": "string",
          "description": "Fully qualified domain name of the revision",
          "readOnly": true
        },
        "template": {
          "$ref": "#/definitions/Template",
          "description": "Container App Revision Template with all possible settings and the\ndefaults if user did not provide them. The defaults are populated\nas they were at the creation time",
          "readOnly": true
        },
        "active": {
          "type": "boolean",
          "description": "Boolean describing if the Revision is Active",
          "readOnly": true
        },
        "replicas": {
          "type": "integer",
          "format": "int32",
          "description": "Number of pods currently running for this revision",
          "readOnly": true
        },
        "trafficWeight": {
          "type": "integer",
          "format": "int32",
          "description": "Traffic weight assigned to this revision",
          "readOnly": true
        },
        "provisioningError": {
          "type": "string",
          "description": "Optional Field - Platform Error Message",
          "readOnly": true
        },
        "healthState": {
          "$ref": "#/definitions/RevisionHealthState",
          "description": "Current health State of the revision",
          "readOnly": true
        },
        "provisioningState": {
          "$ref": "#/definitions/RevisionProvisioningState",
          "description": "Current provisioning State of the revision",
          "readOnly": true
        },
        "runningState": {
          "$ref": "#/definitions/RevisionRunningState",
          "description": "Current running state of the revision",
          "readOnly": true
        }
      }
    },
    "RevisionProvisioningState": {
      "type": "string",
      "description": "Current provisioning State of the revision",
      "enum": [
        "Provisioning",
        "Provisioned",
        "Failed",
        "Deprovisioning",
        "Deprovisioned"
      ],
      "x-ms-enum": {
        "name": "RevisionProvisioningState",
        "modelAsString": true
      }
    },
    "RevisionRunningState": {
      "type": "string",
      "description": "Current running state of the revision",
      "enum": [
        "Running",
        "Processing",
        "Stopped",
        "Degraded",
        "Failed",
        "Unknown"
      ],
      "x-ms-enum": {
        "name": "RevisionRunningState",
        "modelAsString": true
      }
    },
    "Scale": {
      "type": "object",
      "description": "Container App scaling configurations.",
      "properties": {
        "minReplicas": {
          "type": "integer",
          "format": "int32",
          "description": "Optional. Minimum number of container replicas."
        },
        "maxReplicas": {
          "type": "integer",
          "format": "int32",
          "description": "Optional. Maximum number of container replicas. Defaults to 10 if not set.",
          "default": 10
        },
        "rules": {
          "type": "array",
          "description": "Scaling rules.",
          "items": {
            "$ref": "#/definitions/ScaleRule"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "ScaleRule": {
      "type": "object",
      "description": "Container App container scaling rule.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Scale Rule Name"
        },
        "azureQueue": {
          "$ref": "#/definitions/QueueScaleRule",
          "description": "Azure Queue based scaling."
        },
        "custom": {
          "$ref": "#/definitions/CustomScaleRule",
          "description": "Custom scale rule."
        },
        "http": {
          "$ref": "#/definitions/HttpScaleRule",
          "description": "HTTP requests based scaling."
        },
        "tcp": {
          "$ref": "#/definitions/TcpScaleRule",
          "description": "Tcp requests based scaling."
        }
      }
    },
    "ScaleRuleAuth": {
      "type": "object",
      "description": "Auth Secrets for Scale Rule",
      "properties": {
        "secretRef": {
          "type": "string",
          "description": "Name of the secret from which to pull the auth params."
        },
        "triggerParameter": {
          "type": "string",
          "description": "Trigger Parameter that uses the secret"
        }
      }
    },
    "Scheme": {
      "type": "string",
      "description": "Scheme to use for connecting to the host. Defaults to HTTP.",
      "enum": [
        "HTTP",
        "HTTPS"
      ],
      "x-ms-enum": {
        "name": "Scheme",
        "modelAsString": true
      }
    },
    "Secret": {
      "type": "object",
      "description": "Secret definition.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Secret Name."
        },
        "value": {
          "type": "string",
          "description": "Secret Value.",
          "x-ms-mutability": [
            "update",
            "create"
          ]
        },
        "identity": {
          "type": "string",
          "description": "Resource ID of a managed identity to authenticate with Azure Key Vault, or System to use a system-assigned identity."
        },
        "keyVaultUrl": {
          "type": "string",
          "description": "Azure Key Vault URL pointing to the secret referenced by the container app."
        }
      }
    },
    "SecretVolumeItem": {
      "type": "object",
      "description": "Secret to be added to volume.",
      "properties": {
        "secretRef": {
          "type": "string",
          "description": "Name of the Container App secret from which to pull the secret value."
        },
        "path": {
          "type": "string",
          "description": "Path to project secret to. If no path is provided, path defaults to name of secret listed in secretRef."
        }
      }
    },
    "SecretsCollection": {
      "type": "object",
      "description": "Container App Secrets Collection ARM resource.",
      "properties": {
        "value": {
          "type": "array",
          "description": "Collection of resources.",
          "items": {
            "$ref": "#/definitions/ContainerAppSecret"
          },
          "x-ms-identifiers": []
        }
      },
      "required": [
        "value"
      ]
    },
    "Service": {
      "type": "object",
      "description": "Container App to be a dev service",
      "properties": {
        "type": {
          "type": "string",
          "description": "Dev ContainerApp service type"
        }
      },
      "required": [
        "type"
      ]
    },
    "ServiceBind": {
      "type": "object",
      "description": "Configuration to bind a ContainerApp to a dev ContainerApp Service",
      "properties": {
        "serviceId": {
          "type": "string",
          "description": "Resource id of the target service"
        },
        "name": {
          "type": "string",
          "description": "Name of the service bind"
        }
      }
    },
    "SourceControl": {
      "type": "object",
      "description": "Container App SourceControl.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/SourceControlProperties",
          "description": "SourceControl resource specific properties",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "SourceControlListResult": {
      "type": "object",
      "description": "The response of a SourceControl list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The SourceControl items on this page",
          "items": {
            "$ref": "#/definitions/SourceControl"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "SourceControlOperationState": {
      "type": "string",
      "description": "Current provisioning State of the operation",
      "enum": [
        "InProgress",
        "Succeeded",
        "Failed",
        "Canceled"
      ],
      "x-ms-enum": {
        "name": "SourceControlOperationState",
        "modelAsString": true
      },
      "readOnly": true
    },
    "SourceControlProperties": {
      "type": "object",
      "description": "SourceControl resource specific properties",
      "properties": {
        "operationState": {
          "$ref": "#/definitions/SourceControlOperationState",
          "description": "Current provisioning State of the operation",
          "readOnly": true
        },
        "repoUrl": {
          "type": "string",
          "description": "The repo url which will be integrated to ContainerApp."
        },
        "branch": {
          "type": "string",
          "description": "The branch which will trigger the auto deployment"
        },
        "githubActionConfiguration": {
          "$ref": "#/definitions/GithubActionConfiguration",
          "description": "Container App Revision Template with all possible settings and the\ndefaults if user did not provide them. The defaults are populated\nas they were at the creation time"
        }
      }
    },
    "StorageType": {
      "type": "string",
      "description": "Storage type for the volume. If not provided, use EmptyDir.",
      "enum": [
        "AzureFile",
        "EmptyDir",
        "Secret"
      ],
      "x-ms-enum": {
        "name": "StorageType",
        "modelAsString": true
      }
    },
    "TcpScaleRule": {
      "type": "object",
      "description": "Container App container Tcp scaling rule.",
      "properties": {
        "metadata": {
          "type": "object",
          "description": "Metadata properties to describe tcp scale rule.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "auth": {
          "type": "array",
          "description": "Authentication secrets for the tcp scale rule.",
          "items": {
            "$ref": "#/definitions/ScaleRuleAuth"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "Template": {
      "type": "object",
      "description": "Container App versioned application definition.\nDefines the desired state of an immutable revision.\nAny changes to this section Will result in a new revision being created",
      "properties": {
        "revisionSuffix": {
          "type": "string",
          "description": "User friendly suffix that is appended to the revision name"
        },
        "terminationGracePeriodSeconds": {
          "type": "integer",
          "format": "int64",
          "description": "Optional duration in seconds the Container App Instance needs to terminate gracefully. Value must be non-negative integer. The value zero indicates stop immediately via the kill signal (no opportunity to shut down). If this value is nil, the default grace period will be used instead. Set this value longer than the expected cleanup time for your process. Defaults to 30 seconds."
        },
        "initContainers": {
          "type": "array",
          "description": "List of specialized containers that run before app containers.",
          "items": {
            "$ref": "#/definitions/InitContainer"
          },
          "x-ms-identifiers": []
        },
        "containers": {
          "type": "array",
          "description": "List of container definitions for the Container App.",
          "items": {
            "$ref": "#/definitions/Container"
          },
          "x-ms-identifiers": []
        },
        "scale": {
          "$ref": "#/definitions/Scale",
          "description": "Scaling properties for the Container App."
        },
        "volumes": {
          "type": "array",
          "description": "List of volume definitions for the Container App.",
          "items": {
            "$ref": "#/definitions/Volume"
          },
          "x-ms-identifiers": []
        },
        "serviceBinds": {
          "type": "array",
          "description": "List of container app services bound to the app",
          "items": {
            "$ref": "#/definitions/ServiceBind"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "TrafficWeight": {
      "type": "object",
      "description": "Traffic weight assigned to a revision",
      "properties": {
        "revisionName": {
          "type": "string",
          "description": "Name of a revision"
        },
        "weight": {
          "type": "integer",
          "format": "int32",
          "description": "Traffic weight assigned to a revision"
        },
        "latestRevision": {
          "type": "boolean",
          "description": "Indicates that the traffic weight belongs to a latest stable revision"
        },
        "label": {
          "type": "string",
          "description": "Associates a traffic label with a revision"
        }
      }
    },
    "TriggerType": {
      "type": "string",
      "description": "Trigger type of the job",
      "enum": [
        "Schedule",
        "Event",
        "Manual"
      ],
      "x-ms-enum": {
        "name": "TriggerType",
        "modelAsString": true
      }
    },
    "Twitter": {
      "type": "object",
      "description": "The configuration settings of the Twitter provider.",
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "<code>false</code> if the Twitter provider should not be enabled despite the set registration; otherwise, <code>true</code>.",
          "x-ms-client-name": "IsEnabled"
        },
        "registration": {
          "$ref": "#/definitions/TwitterRegistration",
          "description": "The configuration settings of the app registration for the Twitter provider."
        }
      }
    },
    "TwitterRegistration": {
      "type": "object",
      "description": "The configuration settings of the app registration for the Twitter provider.",
      "properties": {
        "consumerKey": {
          "type": "string",
          "description": "The OAuth 1.0a consumer key of the Twitter application used for sign-in.\nThis setting is required for enabling Twitter Sign-In.\nTwitter Sign-In documentation: https://dev.twitter.com/web/sign-in"
        },
        "consumerSecretSettingName": {
          "type": "string",
          "description": "The app setting name that contains the OAuth 1.0a consumer secret of the Twitter\napplication used for sign-in."
        }
      }
    },
    "Type": {
      "type": "string",
      "description": "The type of probe.",
      "enum": [
        "Liveness",
        "Readiness",
        "Startup"
      ],
      "x-ms-enum": {
        "name": "Type",
        "modelAsString": true
      }
    },
    "UnauthenticatedClientActionV2": {
      "type": "string",
      "description": "The action to take when an unauthenticated client attempts to access the app.",
      "enum": [
        "RedirectToLoginPage",
        "AllowAnonymous",
        "Return401",
        "Return403"
      ],
      "x-ms-enum": {
        "name": "UnauthenticatedClientActionV2",
        "modelAsString": false
      }
    },
    "Versions": {
      "type": "string",
      "description": "The available API versions.",
      "enum": [
        "2023-05-01"
      ],
      "x-ms-enum": {
        "name": "Versions",
        "modelAsString": true,
        "values": [
          {
            "name": "v2023_05_01",
            "value": "2023-05-01",
            "description": "The 2023-05-01 API version."
          }
        ]
      }
    },
    "VnetConfiguration": {
      "type": "object",
      "description": "Configuration properties for apps environment to join a Virtual Network",
      "properties": {
        "internal": {
          "type": "boolean",
          "description": "Boolean indicating the environment only has an internal load balancer. These environments do not have a public static IP resource. They must provide infrastructureSubnetId if enabling this property",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "infrastructureSubnetId": {
          "type": "string",
          "description": "Resource ID of a subnet for infrastructure components. Must not overlap with any other provided IP ranges.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "dockerBridgeCidr": {
          "type": "string",
          "description": "CIDR notation IP range assigned to the Docker bridge, network. Must not overlap with any other provided IP ranges.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "platformReservedCidr": {
          "type": "string",
          "description": "IP range in CIDR notation that can be reserved for environment infrastructure IP addresses. Must not overlap with any other provided IP ranges.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "platformReservedDnsIP": {
          "type": "string",
          "description": "An IP address from the IP range defined by platformReservedCidr that will be reserved for the internal DNS server.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      }
    },
    "Volume": {
      "type": "object",
      "description": "Volume definitions for the Container App.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Volume name."
        },
        "storageType": {
          "$ref": "#/definitions/StorageType",
          "description": "Storage type for the volume. If not provided, use EmptyDir."
        },
        "storageName": {
          "type": "string",
          "description": "Name of storage resource. No need to provide for EmptyDir and Secret."
        },
        "secrets": {
          "type": "array",
          "description": "List of secrets to be added in volume. If no secrets are provided, all secrets in collection will be added to volume.",
          "items": {
            "$ref": "#/definitions/SecretVolumeItem"
          },
          "x-ms-identifiers": []
        },
        "mountOptions": {
          "type": "string",
          "description": "Mount options used while mounting the AzureFile. Must be a comma-separated string."
        }
      }
    },
    "VolumeMount": {
      "type": "object",
      "description": "Volume mount for the Container App.",
      "properties": {
        "volumeName": {
          "type": "string",
          "description": "This must match the Name of a Volume."
        },
        "mountPath": {
          "type": "string",
          "description": "Path within the container at which the volume should be mounted.Must not contain ':'."
        },
        "subPath": {
          "type": "string",
          "description": "Path within the volume from which the container's volume should be mounted. Defaults to \"\" (volume's root)."
        }
      }
    },
    "WorkloadProfile": {
      "type": "object",
      "description": "Workload profile to scope container app execution.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Workload profile type for the workloads to run on."
        },
        "workloadProfileType": {
          "type": "string",
          "description": "Workload profile type for the workloads to run on."
        },
        "minimumCount": {
          "type": "integer",
          "format": "int32",
          "description": "The minimum capacity."
        },
        "maximumCount": {
          "type": "integer",
          "format": "int32",
          "description": "The maximum capacity."
        }
      },
      "required": [
        "name",
        "workloadProfileType"
      ]
    },
    "WorkloadProfileStates": {
      "type": "object",
      "description": "Collection of all the workload Profile States for a Managed Environment..",
      "properties": {
        "properties": {
          "$ref": "#/definitions/WorkloadProfileStatesProperties",
          "description": "Workload Profile resource specific properties."
        }
      }
    },
    "WorkloadProfileStatesProperties": {
      "type": "object",
      "description": "Workload Profile resource specific properties.",
      "properties": {
        "minimumCount": {
          "type": "integer",
          "format": "int32",
          "description": "Minimum count of instances."
        },
        "maximumCount": {
          "type": "integer",
          "format": "int32",
          "description": "Maximum count of nodes."
        },
        "currentCount": {
          "type": "integer",
          "format": "int32",
          "description": "Current count of nodes."
        }
      }
    }
  },
  "parameters": {
    "Azure.Core.Foundations.ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "description": "The API version to use for this operation.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "x-ms-parameter-location": "method",
      "x-ms-client-name": "apiVersion"
    }
  }
}
