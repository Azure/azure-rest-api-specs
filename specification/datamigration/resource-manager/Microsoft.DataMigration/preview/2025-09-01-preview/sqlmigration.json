{
  "swagger": "2.0",
  "info": {
    "version": "2025-09-01-preview",
    "title": "SqlMigrationManagementClient",
    "description": "The SQL Migration management API provides a RESTful set of web APIs that allow users to migrate their SQL Server databases to Azure SQL."
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{sqlDbInstanceName}/providers/Microsoft.DataMigration/databaseMigrations/{targetDbName}": {
      "get": {
        "tags": [
          "DatabaseMigrationsSqlDb"
        ],
        "description": "Retrieve the Database Migration resource.",
        "operationId": "DatabaseMigrationsSqlDb_Get",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          },
          {
            "name": "sqlDbInstanceName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/TargetDbNameParameter"
          },
          {
            "name": "migrationOperationId",
            "in": "query",
            "description": "Optional migration operation ID. If this is provided, then details of migration operation for that ID are retrieved. If not provided (default), then details related to most recent or current operation are retrieved.",
            "required": false,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "kind",
            "in": "query",
            "description": "Optional migration kind",
            "required": false,
            "type": "string",
            "enum": [
              "SqlMi",
              "SqlVm",
              "SqlDb",
              "OracleToSqlDb",
              "SqlConnectServiceTask",
              "MongoToCosmosDbMongo",
              "OracleToSqlMi",
              "OracleToSqlVm"
            ]
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The child resources to include in the response.",
            "required": false,
            "type": "string"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the Database Migration resource.",
            "schema": {
              "$ref": "#/definitions/DatabaseMigrationSqlDb"
            }
          },
          "default": {
            "description": "*** Error Responses: ***\n\n * 400 InvalidParameterValue - An invalid value was provided for parameter '{0}'.\n\n * 400 EmptyRequiredRequestBody - The request body must not be empty.\n\n * 400 GenericUser - User Failure when calling other Resource Provider.\n\n * 400 OperationIdNotFound - Operation ID '{0}' not found.\n\n * 400 OperationTypeNotFound - Operation Type '{0}' not found.\n\n * 400 InvalidArgument - Invalid argument '{0}'.\n\n * 400 TestConnectionFailed - Failed to test connections using provided Integration Runtime. Error details: '{0}'\n\n * 400 CutoverNotAllowedMigrationCompleteError - Cutover is not allowed as migration for database '{0}' is already complete\n\n * 400 DatabaseListInputMissingError - Database list null or empty. Task type GetUserTables must contain database list as input.\n\n * 400 IntegrationRuntimeIsNotOnline - Integration Runtime '{0}' is not online for resource group '{1}' subscription '{2}'\n\n * 400 DeleteMigrationServiceTaskNotAllowedInProgress - Migration service task '{0}' is currently in progress. To delete the task, please wait until the migration service task has completed or cancel the task manually, and then retry deleting the migration service task. Alternatively, use the force delete option to cancel ongoing operations and delete.\n\n * 400 InvalidStorageAccount - Invalid storage account: '{0}'. Only BlockBlobStorage kind is supported for premium tier.\n\n * 400 InvalidLocation - Invalid Location: '{0}'. Location should match selected Azure target location '{1}'.\n\n * 400 MigrationNotReadyForCancelError - Migration cannot be canceled as it is not in a cancelable state. Target server:'{0}', Target database: '{1}'.\n\n * 400 RestoreJobCompletedDuringCancel - Migration cannot be canceled as Restore Job was completed during the cancel process. Target server:'{0}', Target database: '{1}'.\n\n * 400 SqlVmGenericUserError - {0}\n\n * 400 RequestFailed - Request to the resource '{0}' failed. Error code : '{1}'. HTTP status code : '{2}'. Error message : '{3}'.\n\n * 400 InvalidContainerName - Invalid storage account container name: '{0}'. Container name 'backup' is not supported in SQL Managed Instance.\n\n * 400 DeleteMigrationNotAllowedMigrationInProgress - Database migration to the target resource '{0}' is currently in progress. To delete the migration, please wait until the migration has completed or cancel the migration manually, and then retry deleting the migration. Alternatively, use the force delete option to cancel ongoing operations and delete\n\n * 400 DeleteMigrationNotAllowedCancelInProgress - Database migration to the target resource '{0}' is currently being canceled. To delete the migration, please wait until the cancel operation is complete\n\n * 400 DeleteMigrationNotAllowedCutoverInProgress - DeleteMigrationNotAllowedCutoverInProgress\", \"Database migration to the target resource '{0}' is currently being cutover. To delete the migration, please wait until the cutover operation is complete\n\n * 400 DeleteMigrationNotAllowedDeleteInProgress - Database migration to the target resource '{0}' is currently deleting. Please wait until the delete operation is complete\n\n * 400 MigrationRetryNotAllowed - Migration is not in a retriable state. Migration must be in state WaitForRetry. Current state: '{0}', Target server:'{1}', Target database: '{2}'.\n\n * 400 MigrationStillValidating - Migration is still being validated. {0} cannot be performed. Target server:'{1}', Target database: '{2}'.\n\n * 400 IntegrationRuntimeDoesNotSupportSqlSchemaMigration - Current self-hosted IR '{0}' doesn't support SQL schema migration. Please download self-hosted IR version '{1}' or later.\n\n * 400 SourceTargetTablesCountMismatch - Source tables count '{0}' is not the same as target tables count '{1}'.\n\n * 400 InvalidTableNameFormat - Table name '{0}' is not in format of 'schema.table'.\n\n * 400 IntegrationRuntimeIsNotSelfHosted - Integration Runtime is not self-hosted for subscription '{0}' resource group '{1}' and name '{2}'\n\n * 400 MigrationNotReadyForCutoverError - Database '{0}' is not ready for Cutover operation\n\n * 400 CutoverFailedOrCancelled - Cutover failed or cancelled for database '{0}'. Error details: '{1}'\n\n * 400 MigrationCancelFailed - Cancel could not be performed on operation '{0}' for database '{1}'. This can happen if the migration with MigrationId '{0}' is already completed or canceled. Please check the migration for details.\n\n * 403 AccessDenied - Access denied.\n\n * 404 ResourceNotFound - The requested resource was not found.\n\n * 404 SubscriptionDoesNotExist - Subscription id does not exist.\n\n * 404 ResourceDoesNotExist - Resource does not exist.\n\n * 405 SubscriptionNotReady - Subscription is not in Ready state.\n\n * 409 OperationInProgress - Operation in progress on resource already.\n\n * 409 OperationCanceled - Operation Cancelled.\n\n * 409 ResourceAlreadyExists - Resource already exists.\n\n * 409 SubscriptionOperationInProgress - An operation on subscription is already in progress\n\n * 500 UnExpectedErrorOccurred - Unexpected error occurred.\n\n * 500 OperationTimeout - Operation timed out.\n\n * 500 GenericSystem - System Failure when calling other Resource Provider.\n\n * 500 CancelVmRestoreJobFailed - Failed to cancel VM restore job. Target server:'{0}', Target database: '{1}', Error details: '{2}'.\n\n * 500 AdfCleanupFailureAfterMigration - Failed to clean up ADF resources after migration has completed successfully. Target server:'{0}', Target database: '{1}', Error details: '{2}'.\n\n * 500 CancelMigrationFailed - Failed to cancel migration. Target server:'{0}', Target database: '{1}', Migration Id: '{2}', Error details: '{3}'."
          }
        }
      },
      "put": {
        "tags": [
          "DatabaseMigrationsSqlDb"
        ],
        "description": "Create or Update Database Migration resource.",
        "operationId": "DatabaseMigrationsSqlDb_CreateOrUpdate",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          },
          {
            "name": "sqlDbInstanceName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/TargetDbNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Details of Sql Db migration resource.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DatabaseMigrationSqlDb"
            }
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully updated the Database Migration resource.",
            "schema": {
              "$ref": "#/definitions/DatabaseMigrationSqlDb"
            }
          },
          "default": {
            "description": "*** Error Responses: ***\n\n * 400 InvalidParameterValue - An invalid value was provided for parameter '{0}'.\n\n * 400 EmptyRequiredRequestBody - The request body must not be empty.\n\n * 400 GenericUser - User Failure when calling other Resource Provider.\n\n * 400 OperationIdNotFound - Operation ID '{0}' not found.\n\n * 400 OperationTypeNotFound - Operation Type '{0}' not found.\n\n * 400 InvalidArgument - Invalid argument '{0}'.\n\n * 400 TestConnectionFailed - Failed to test connections using provided Integration Runtime. Error details: '{0}'\n\n * 400 CutoverNotAllowedMigrationCompleteError - Cutover is not allowed as migration for database '{0}' is already complete\n\n * 400 DatabaseListInputMissingError - Database list null or empty. Task type GetUserTables must contain database list as input.\n\n * 400 IntegrationRuntimeIsNotOnline - Integration Runtime '{0}' is not online for resource group '{1}' subscription '{2}'\n\n * 400 DeleteMigrationServiceTaskNotAllowedInProgress - Migration service task '{0}' is currently in progress. To delete the task, please wait until the migration service task has completed or cancel the task manually, and then retry deleting the migration service task. Alternatively, use the force delete option to cancel ongoing operations and delete.\n\n * 400 InvalidStorageAccount - Invalid storage account: '{0}'. Only BlockBlobStorage kind is supported for premium tier.\n\n * 400 InvalidLocation - Invalid Location: '{0}'. Location should match selected Azure target location '{1}'.\n\n * 400 MigrationNotReadyForCancelError - Migration cannot be canceled as it is not in a cancelable state. Target server:'{0}', Target database: '{1}'.\n\n * 400 RestoreJobCompletedDuringCancel - Migration cannot be canceled as Restore Job was completed during the cancel process. Target server:'{0}', Target database: '{1}'.\n\n * 400 SqlVmGenericUserError - {0}\n\n * 400 RequestFailed - Request to the resource '{0}' failed. Error code : '{1}'. HTTP status code : '{2}'. Error message : '{3}'.\n\n * 400 InvalidContainerName - Invalid storage account container name: '{0}'. Container name 'backup' is not supported in SQL Managed Instance.\n\n * 400 DeleteMigrationNotAllowedMigrationInProgress - Database migration to the target resource '{0}' is currently in progress. To delete the migration, please wait until the migration has completed or cancel the migration manually, and then retry deleting the migration. Alternatively, use the force delete option to cancel ongoing operations and delete\n\n * 400 DeleteMigrationNotAllowedCancelInProgress - Database migration to the target resource '{0}' is currently being canceled. To delete the migration, please wait until the cancel operation is complete\n\n * 400 DeleteMigrationNotAllowedCutoverInProgress - DeleteMigrationNotAllowedCutoverInProgress\", \"Database migration to the target resource '{0}' is currently being cutover. To delete the migration, please wait until the cutover operation is complete\n\n * 400 DeleteMigrationNotAllowedDeleteInProgress - Database migration to the target resource '{0}' is currently deleting. Please wait until the delete operation is complete\n\n * 400 MigrationRetryNotAllowed - Migration is not in a retriable state. Migration must be in state WaitForRetry. Current state: '{0}', Target server:'{1}', Target database: '{2}'.\n\n * 400 MigrationStillValidating - Migration is still being validated. {0} cannot be performed. Target server:'{1}', Target database: '{2}'.\n\n * 400 IntegrationRuntimeDoesNotSupportSqlSchemaMigration - Current self-hosted IR '{0}' doesn't support SQL schema migration. Please download self-hosted IR version '{1}' or later.\n\n * 400 SourceTargetTablesCountMismatch - Source tables count '{0}' is not the same as target tables count '{1}'.\n\n * 400 InvalidTableNameFormat - Table name '{0}' is not in format of 'schema.table'.\n\n * 400 IntegrationRuntimeIsNotSelfHosted - Integration Runtime is not self-hosted for subscription '{0}' resource group '{1}' and name '{2}'\n\n * 400 MigrationNotReadyForCutoverError - Database '{0}' is not ready for Cutover operation\n\n * 400 CutoverFailedOrCancelled - Cutover failed or cancelled for database '{0}'. Error details: '{1}'\n\n * 400 MigrationCancelFailed - Cancel could not be performed on operation '{0}' for database '{1}'. This can happen if the migration with MigrationId '{0}' is already completed or canceled. Please check the migration for details.\n\n * 403 AccessDenied - Access denied.\n\n * 404 ResourceNotFound - The requested resource was not found.\n\n * 404 SubscriptionDoesNotExist - Subscription id does not exist.\n\n * 404 ResourceDoesNotExist - Resource does not exist.\n\n * 405 SubscriptionNotReady - Subscription is not in Ready state.\n\n * 409 OperationInProgress - Operation in progress on resource already.\n\n * 409 OperationCanceled - Operation Cancelled.\n\n * 409 ResourceAlreadyExists - Resource already exists.\n\n * 409 SubscriptionOperationInProgress - An operation on subscription is already in progress\n\n * 500 UnExpectedErrorOccurred - Unexpected error occurred.\n\n * 500 OperationTimeout - Operation timed out.\n\n * 500 GenericSystem - System Failure when calling other Resource Provider.\n\n * 500 CancelVmRestoreJobFailed - Failed to cancel VM restore job. Target server:'{0}', Target database: '{1}', Error details: '{2}'.\n\n * 500 AdfCleanupFailureAfterMigration - Failed to clean up ADF resources after migration has completed successfully. Target server:'{0}', Target database: '{1}', Error details: '{2}'.\n\n * 500 CancelMigrationFailed - Failed to cancel migration. Target server:'{0}', Target database: '{1}', Migration Id: '{2}', Error details: '{3}'."
          },
          "201": {
            "description": "Successfully created the Database Migration resource.",
            "schema": {
              "$ref": "#/definitions/DatabaseMigrationSqlDb"
            }
          }
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "tags": [
          "DatabaseMigrationsSqlDb"
        ],
        "description": "Delete Database Migration resource.",
        "operationId": "DatabaseMigrationsSqlDb_Delete",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          },
          {
            "name": "sqlDbInstanceName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/TargetDbNameParameter"
          },
          {
            "name": "force",
            "in": "query",
            "description": "Optional force delete boolean. If this is provided as true, migration will be deleted even if active.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "kind",
            "in": "query",
            "description": "Optional migration kind",
            "required": false,
            "type": "string",
            "enum": [
              "SqlMi",
              "SqlVm",
              "SqlDb",
              "OracleToSqlDb",
              "SqlConnectServiceTask",
              "MongoToCosmosDbMongo",
              "OracleToSqlMi",
              "OracleToSqlVm"
            ]
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted the Database Migration resource."
          },
          "default": {
            "description": "*** Error Responses: ***\n\n * 400 InvalidParameterValue - An invalid value was provided for parameter '{0}'.\n\n * 400 EmptyRequiredRequestBody - The request body must not be empty.\n\n * 400 GenericUser - User Failure when calling other Resource Provider.\n\n * 400 OperationIdNotFound - Operation ID '{0}' not found.\n\n * 400 OperationTypeNotFound - Operation Type '{0}' not found.\n\n * 400 InvalidArgument - Invalid argument '{0}'.\n\n * 400 TestConnectionFailed - Failed to test connections using provided Integration Runtime. Error details: '{0}'\n\n * 400 CutoverNotAllowedMigrationCompleteError - Cutover is not allowed as migration for database '{0}' is already complete\n\n * 400 DatabaseListInputMissingError - Database list null or empty. Task type GetUserTables must contain database list as input.\n\n * 400 IntegrationRuntimeIsNotOnline - Integration Runtime '{0}' is not online for resource group '{1}' subscription '{2}'\n\n * 400 DeleteMigrationServiceTaskNotAllowedInProgress - Migration service task '{0}' is currently in progress. To delete the task, please wait until the migration service task has completed or cancel the task manually, and then retry deleting the migration service task. Alternatively, use the force delete option to cancel ongoing operations and delete.\n\n * 400 InvalidStorageAccount - Invalid storage account: '{0}'. Only BlockBlobStorage kind is supported for premium tier.\n\n * 400 InvalidLocation - Invalid Location: '{0}'. Location should match selected Azure target location '{1}'.\n\n * 400 MigrationNotReadyForCancelError - Migration cannot be canceled as it is not in a cancelable state. Target server:'{0}', Target database: '{1}'.\n\n * 400 RestoreJobCompletedDuringCancel - Migration cannot be canceled as Restore Job was completed during the cancel process. Target server:'{0}', Target database: '{1}'.\n\n * 400 SqlVmGenericUserError - {0}\n\n * 400 RequestFailed - Request to the resource '{0}' failed. Error code : '{1}'. HTTP status code : '{2}'. Error message : '{3}'.\n\n * 400 InvalidContainerName - Invalid storage account container name: '{0}'. Container name 'backup' is not supported in SQL Managed Instance.\n\n * 400 DeleteMigrationNotAllowedMigrationInProgress - Database migration to the target resource '{0}' is currently in progress. To delete the migration, please wait until the migration has completed or cancel the migration manually, and then retry deleting the migration. Alternatively, use the force delete option to cancel ongoing operations and delete\n\n * 400 DeleteMigrationNotAllowedCancelInProgress - Database migration to the target resource '{0}' is currently being canceled. To delete the migration, please wait until the cancel operation is complete\n\n * 400 DeleteMigrationNotAllowedCutoverInProgress - DeleteMigrationNotAllowedCutoverInProgress\", \"Database migration to the target resource '{0}' is currently being cutover. To delete the migration, please wait until the cutover operation is complete\n\n * 400 DeleteMigrationNotAllowedDeleteInProgress - Database migration to the target resource '{0}' is currently deleting. Please wait until the delete operation is complete\n\n * 400 MigrationRetryNotAllowed - Migration is not in a retriable state. Migration must be in state WaitForRetry. Current state: '{0}', Target server:'{1}', Target database: '{2}'.\n\n * 400 MigrationStillValidating - Migration is still being validated. {0} cannot be performed. Target server:'{1}', Target database: '{2}'.\n\n * 400 IntegrationRuntimeDoesNotSupportSqlSchemaMigration - Current self-hosted IR '{0}' doesn't support SQL schema migration. Please download self-hosted IR version '{1}' or later.\n\n * 400 SourceTargetTablesCountMismatch - Source tables count '{0}' is not the same as target tables count '{1}'.\n\n * 400 InvalidTableNameFormat - Table name '{0}' is not in format of 'schema.table'.\n\n * 400 IntegrationRuntimeIsNotSelfHosted - Integration Runtime is not self-hosted for subscription '{0}' resource group '{1}' and name '{2}'\n\n * 400 MigrationNotReadyForCutoverError - Database '{0}' is not ready for Cutover operation\n\n * 400 CutoverFailedOrCancelled - Cutover failed or cancelled for database '{0}'. Error details: '{1}'\n\n * 400 MigrationCancelFailed - Cancel could not be performed on operation '{0}' for database '{1}'. This can happen if the migration with MigrationId '{0}' is already completed or canceled. Please check the migration for details.\n\n * 403 AccessDenied - Access denied.\n\n * 404 ResourceNotFound - The requested resource was not found.\n\n * 404 SubscriptionDoesNotExist - Subscription id does not exist.\n\n * 404 ResourceDoesNotExist - Resource does not exist.\n\n * 405 SubscriptionNotReady - Subscription is not in Ready state.\n\n * 409 OperationInProgress - Operation in progress on resource already.\n\n * 409 OperationCanceled - Operation Cancelled.\n\n * 409 ResourceAlreadyExists - Resource already exists.\n\n * 409 SubscriptionOperationInProgress - An operation on subscription is already in progress\n\n * 500 UnExpectedErrorOccurred - Unexpected error occurred.\n\n * 500 OperationTimeout - Operation timed out.\n\n * 500 GenericSystem - System Failure when calling other Resource Provider.\n\n * 500 CancelVmRestoreJobFailed - Failed to cancel VM restore job. Target server:'{0}', Target database: '{1}', Error details: '{2}'.\n\n * 500 AdfCleanupFailureAfterMigration - Failed to clean up ADF resources after migration has completed successfully. Target server:'{0}', Target database: '{1}', Error details: '{2}'.\n\n * 500 CancelMigrationFailed - Failed to cancel migration. Target server:'{0}', Target database: '{1}', Migration Id: '{2}', Error details: '{3}'."
          },
          "202": {
            "description": "Deleting the Database Migration resource.",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          },
          "204": {
            "description": "The specified Database Migration resource does not exist."
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{sqlDbInstanceName}/providers/Microsoft.DataMigration/databaseMigrations/{targetDbName}/cancel": {
      "post": {
        "tags": [
          "DatabaseMigrationsSqlDb"
        ],
        "description": "Stop on going migration for the database.",
        "operationId": "DatabaseMigrationsSqlDb_cancel",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          },
          {
            "name": "sqlDbInstanceName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/TargetDbNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Required migration operation ID for which cancel will be initiated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MigrationOperationInput"
            }
          },
          {
            "name": "kind",
            "in": "query",
            "description": "Optional migration kind",
            "required": false,
            "type": "string",
            "enum": [
              "SqlMi",
              "SqlVm",
              "SqlDb",
              "OracleToSqlDb",
              "SqlConnectServiceTask",
              "MongoToCosmosDbMongo",
              "OracleToSqlMi",
              "OracleToSqlVm"
            ]
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "*** Error Responses: ***\n\n * 400 InvalidParameterValue - An invalid value was provided for parameter '{0}'.\n\n * 400 EmptyRequiredRequestBody - The request body must not be empty.\n\n * 400 GenericUser - User Failure when calling other Resource Provider.\n\n * 400 OperationIdNotFound - Operation ID '{0}' not found.\n\n * 400 OperationTypeNotFound - Operation Type '{0}' not found.\n\n * 400 InvalidArgument - Invalid argument '{0}'.\n\n * 400 TestConnectionFailed - Failed to test connections using provided Integration Runtime. Error details: '{0}'\n\n * 400 CutoverNotAllowedMigrationCompleteError - Cutover is not allowed as migration for database '{0}' is already complete\n\n * 400 DatabaseListInputMissingError - Database list null or empty. Task type GetUserTables must contain database list as input.\n\n * 400 IntegrationRuntimeIsNotOnline - Integration Runtime '{0}' is not online for resource group '{1}' subscription '{2}'\n\n * 400 DeleteMigrationServiceTaskNotAllowedInProgress - Migration service task '{0}' is currently in progress. To delete the task, please wait until the migration service task has completed or cancel the task manually, and then retry deleting the migration service task. Alternatively, use the force delete option to cancel ongoing operations and delete.\n\n * 400 InvalidStorageAccount - Invalid storage account: '{0}'. Only BlockBlobStorage kind is supported for premium tier.\n\n * 400 InvalidLocation - Invalid Location: '{0}'. Location should match selected Azure target location '{1}'.\n\n * 400 MigrationNotReadyForCancelError - Migration cannot be canceled as it is not in a cancelable state. Target server:'{0}', Target database: '{1}'.\n\n * 400 RestoreJobCompletedDuringCancel - Migration cannot be canceled as Restore Job was completed during the cancel process. Target server:'{0}', Target database: '{1}'.\n\n * 400 SqlVmGenericUserError - {0}\n\n * 400 RequestFailed - Request to the resource '{0}' failed. Error code : '{1}'. HTTP status code : '{2}'. Error message : '{3}'.\n\n * 400 InvalidContainerName - Invalid storage account container name: '{0}'. Container name 'backup' is not supported in SQL Managed Instance.\n\n * 400 DeleteMigrationNotAllowedMigrationInProgress - Database migration to the target resource '{0}' is currently in progress. To delete the migration, please wait until the migration has completed or cancel the migration manually, and then retry deleting the migration. Alternatively, use the force delete option to cancel ongoing operations and delete\n\n * 400 DeleteMigrationNotAllowedCancelInProgress - Database migration to the target resource '{0}' is currently being canceled. To delete the migration, please wait until the cancel operation is complete\n\n * 400 DeleteMigrationNotAllowedCutoverInProgress - DeleteMigrationNotAllowedCutoverInProgress\", \"Database migration to the target resource '{0}' is currently being cutover. To delete the migration, please wait until the cutover operation is complete\n\n * 400 DeleteMigrationNotAllowedDeleteInProgress - Database migration to the target resource '{0}' is currently deleting. Please wait until the delete operation is complete\n\n * 400 MigrationRetryNotAllowed - Migration is not in a retriable state. Migration must be in state WaitForRetry. Current state: '{0}', Target server:'{1}', Target database: '{2}'.\n\n * 400 MigrationStillValidating - Migration is still being validated. {0} cannot be performed. Target server:'{1}', Target database: '{2}'.\n\n * 400 IntegrationRuntimeDoesNotSupportSqlSchemaMigration - Current self-hosted IR '{0}' doesn't support SQL schema migration. Please download self-hosted IR version '{1}' or later.\n\n * 400 SourceTargetTablesCountMismatch - Source tables count '{0}' is not the same as target tables count '{1}'.\n\n * 400 InvalidTableNameFormat - Table name '{0}' is not in format of 'schema.table'.\n\n * 400 IntegrationRuntimeIsNotSelfHosted - Integration Runtime is not self-hosted for subscription '{0}' resource group '{1}' and name '{2}'\n\n * 400 MigrationNotReadyForCutoverError - Database '{0}' is not ready for Cutover operation\n\n * 400 CutoverFailedOrCancelled - Cutover failed or cancelled for database '{0}'. Error details: '{1}'\n\n * 400 MigrationCancelFailed - Cancel could not be performed on operation '{0}' for database '{1}'. This can happen if the migration with MigrationId '{0}' is already completed or canceled. Please check the migration for details.\n\n * 403 AccessDenied - Access denied.\n\n * 404 ResourceNotFound - The requested resource was not found.\n\n * 404 SubscriptionDoesNotExist - Subscription id does not exist.\n\n * 404 ResourceDoesNotExist - Resource does not exist.\n\n * 405 SubscriptionNotReady - Subscription is not in Ready state.\n\n * 409 OperationInProgress - Operation in progress on resource already.\n\n * 409 OperationCanceled - Operation Cancelled.\n\n * 409 ResourceAlreadyExists - Resource already exists.\n\n * 409 SubscriptionOperationInProgress - An operation on subscription is already in progress\n\n * 500 UnExpectedErrorOccurred - Unexpected error occurred.\n\n * 500 OperationTimeout - Operation timed out.\n\n * 500 GenericSystem - System Failure when calling other Resource Provider.\n\n * 500 CancelVmRestoreJobFailed - Failed to cancel VM restore job. Target server:'{0}', Target database: '{1}', Error details: '{2}'.\n\n * 500 AdfCleanupFailureAfterMigration - Failed to clean up ADF resources after migration has completed successfully. Target server:'{0}', Target database: '{1}', Error details: '{2}'.\n\n * 500 CancelMigrationFailed - Failed to cancel migration. Target server:'{0}', Target database: '{1}', Migration Id: '{2}', Error details: '{3}'."
          },
          "202": {
            "description": "Accepted cancellation of ongoing migration.",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{sqlDbInstanceName}/providers/Microsoft.DataMigration/databaseMigrations/{targetDbName}/retry": {
      "post": {
        "tags": [
          "DatabaseMigrationsSqlDb"
        ],
        "description": "Retry on going migration for the database.",
        "operationId": "DatabaseMigrationsSqlDb_retry",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          },
          {
            "name": "sqlDbInstanceName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/TargetDbNameParameter"
          },
          {
            "name": "migrationOperationInput",
            "in": "body",
            "description": "Required migration operation ID for which retry will be initiated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MigrationOperationInput"
            }
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Microsoft.SqlServer.Management.Service.ResourceProvider.Arm.SqlMigration.V20200901.Entities.SqlDbMigration.DatabaseMigrationsResourceSqlDb"
            }
          },
          "default": {
            "description": "*** Error Responses: ***\n\n * 400 InvalidParameterValue - An invalid value was provided for parameter '{0}'.\n\n * 400 EmptyRequiredRequestBody - The request body must not be empty.\n\n * 400 GenericUser - User Failure when calling other Resource Provider.\n\n * 400 OperationIdNotFound - Operation ID '{0}' not found.\n\n * 400 OperationTypeNotFound - Operation Type '{0}' not found.\n\n * 400 InvalidArgument - Invalid argument '{0}'.\n\n * 400 TestConnectionFailed - Failed to test connections using provided Integration Runtime. Error details: '{0}'\n\n * 400 CutoverNotAllowedMigrationCompleteError - Cutover is not allowed as migration for database '{0}' is already complete\n\n * 400 DatabaseListInputMissingError - Database list null or empty. Task type GetUserTables must contain database list as input.\n\n * 400 IntegrationRuntimeIsNotOnline - Integration Runtime '{0}' is not online for resource group '{1}' subscription '{2}'\n\n * 400 DeleteMigrationServiceTaskNotAllowedInProgress - Migration service task '{0}' is currently in progress. To delete the task, please wait until the migration service task has completed or cancel the task manually, and then retry deleting the migration service task. Alternatively, use the force delete option to cancel ongoing operations and delete.\n\n * 400 InvalidStorageAccount - Invalid storage account: '{0}'. Only BlockBlobStorage kind is supported for premium tier.\n\n * 400 InvalidLocation - Invalid Location: '{0}'. Location should match selected Azure target location '{1}'.\n\n * 400 MigrationNotReadyForCancelError - Migration cannot be canceled as it is not in a cancelable state. Target server:'{0}', Target database: '{1}'.\n\n * 400 RestoreJobCompletedDuringCancel - Migration cannot be canceled as Restore Job was completed during the cancel process. Target server:'{0}', Target database: '{1}'.\n\n * 400 SqlVmGenericUserError - {0}\n\n * 400 RequestFailed - Request to the resource '{0}' failed. Error code : '{1}'. HTTP status code : '{2}'. Error message : '{3}'.\n\n * 400 InvalidContainerName - Invalid storage account container name: '{0}'. Container name 'backup' is not supported in SQL Managed Instance.\n\n * 400 DeleteMigrationNotAllowedMigrationInProgress - Database migration to the target resource '{0}' is currently in progress. To delete the migration, please wait until the migration has completed or cancel the migration manually, and then retry deleting the migration. Alternatively, use the force delete option to cancel ongoing operations and delete\n\n * 400 DeleteMigrationNotAllowedCancelInProgress - Database migration to the target resource '{0}' is currently being canceled. To delete the migration, please wait until the cancel operation is complete\n\n * 400 DeleteMigrationNotAllowedCutoverInProgress - DeleteMigrationNotAllowedCutoverInProgress\", \"Database migration to the target resource '{0}' is currently being cutover. To delete the migration, please wait until the cutover operation is complete\n\n * 400 DeleteMigrationNotAllowedDeleteInProgress - Database migration to the target resource '{0}' is currently deleting. Please wait until the delete operation is complete\n\n * 400 MigrationRetryNotAllowed - Migration is not in a retriable state. Migration must be in state WaitForRetry. Current state: '{0}', Target server:'{1}', Target database: '{2}'.\n\n * 400 MigrationStillValidating - Migration is still being validated. {0} cannot be performed. Target server:'{1}', Target database: '{2}'.\n\n * 400 IntegrationRuntimeDoesNotSupportSqlSchemaMigration - Current self-hosted IR '{0}' doesn't support SQL schema migration. Please download self-hosted IR version '{1}' or later.\n\n * 400 SourceTargetTablesCountMismatch - Source tables count '{0}' is not the same as target tables count '{1}'.\n\n * 400 InvalidTableNameFormat - Table name '{0}' is not in format of 'schema.table'.\n\n * 400 IntegrationRuntimeIsNotSelfHosted - Integration Runtime is not self-hosted for subscription '{0}' resource group '{1}' and name '{2}'\n\n * 400 MigrationNotReadyForCutoverError - Database '{0}' is not ready for Cutover operation\n\n * 400 CutoverFailedOrCancelled - Cutover failed or cancelled for database '{0}'. Error details: '{1}'\n\n * 400 MigrationCancelFailed - Cancel could not be performed on operation '{0}' for database '{1}'. This can happen if the migration with MigrationId '{0}' is already completed or canceled. Please check the migration for details.\n\n * 403 AccessDenied - Access denied.\n\n * 404 ResourceNotFound - The requested resource was not found.\n\n * 404 SubscriptionDoesNotExist - Subscription id does not exist.\n\n * 404 ResourceDoesNotExist - Resource does not exist.\n\n * 405 SubscriptionNotReady - Subscription is not in Ready state.\n\n * 409 OperationInProgress - Operation in progress on resource already.\n\n * 409 OperationCanceled - Operation Cancelled.\n\n * 409 ResourceAlreadyExists - Resource already exists.\n\n * 409 SubscriptionOperationInProgress - An operation on subscription is already in progress\n\n * 500 UnExpectedErrorOccurred - Unexpected error occurred.\n\n * 500 OperationTimeout - Operation timed out.\n\n * 500 GenericSystem - System Failure when calling other Resource Provider.\n\n * 500 CancelVmRestoreJobFailed - Failed to cancel VM restore job. Target server:'{0}', Target database: '{1}', Error details: '{2}'.\n\n * 500 AdfCleanupFailureAfterMigration - Failed to clean up ADF resources after migration has completed successfully. Target server:'{0}', Target database: '{1}', Error details: '{2}'.\n\n * 500 CancelMigrationFailed - Failed to cancel migration. Target server:'{0}', Target database: '{1}', Migration Id: '{2}', Error details: '{3}'."
          },
          "202": {
            "description": "Accepted retry of migration.",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{sqlDbInstanceName}/providers/Microsoft.DataMigration/databaseMigrations/{targetDbName}/cutover": {
      "post": {
        "tags": [
          "DatabaseMigrationsSqlDb"
        ],
        "description": "Initiate cutover for online migration in progress for the database.",
        "operationId": "DatabaseMigrationsSqlDb_cutover",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          },
          {
            "name": "sqlDbInstanceName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/TargetDbNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Required migration operation ID for which cutover will be initiated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MigrationOperationInput"
            }
          },
          {
            "name": "kind",
            "in": "query",
            "description": "Optional migration kind",
            "required": false,
            "type": "string",
            "enum": [
              "SqlMi",
              "SqlVm",
              "SqlDb",
              "OracleToSqlDb",
              "SqlConnectServiceTask",
              "MongoToCosmosDbMongo",
              "OracleToSqlMi",
              "OracleToSqlVm"
            ]
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted cutover request for ongoing migration.",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          },
          "default": {
            "description": "*** Error Responses: ***\n\n * 400 InvalidParameterValue - An invalid value was provided for parameter '{0}'.\n\n * 400 EmptyRequiredRequestBody - The request body must not be empty.\n\n * 400 GenericUser - User Failure when calling other Resource Provider.\n\n * 400 OperationIdNotFound - Operation ID '{0}' not found.\n\n * 400 OperationTypeNotFound - Operation Type '{0}' not found.\n\n * 400 InvalidArgument - Invalid argument '{0}'.\n\n * 400 TestConnectionFailed - Failed to test connections using provided Integration Runtime. Error details: '{0}'\n\n * 400 CutoverNotAllowedMigrationCompleteError - Cutover is not allowed as migration for database '{0}' is already complete\n\n * 400 DatabaseListInputMissingError - Database list null or empty. Task type GetUserTables must contain database list as input.\n\n * 400 IntegrationRuntimeIsNotOnline - Integration Runtime '{0}' is not online for resource group '{1}' subscription '{2}'\n\n * 400 DeleteMigrationServiceTaskNotAllowedInProgress - Migration service task '{0}' is currently in progress. To delete the task, please wait until the migration service task has completed or cancel the task manually, and then retry deleting the migration service task. Alternatively, use the force delete option to cancel ongoing operations and delete.\n\n * 400 InvalidStorageAccount - Invalid storage account: '{0}'. Only BlockBlobStorage kind is supported for premium tier.\n\n * 400 InvalidLocation - Invalid Location: '{0}'. Location should match selected Azure target location '{1}'.\n\n * 400 MigrationNotReadyForCancelError - Migration cannot be canceled as it is not in a cancelable state. Target server:'{0}', Target database: '{1}'.\n\n * 400 RestoreJobCompletedDuringCancel - Migration cannot be canceled as Restore Job was completed during the cancel process. Target server:'{0}', Target database: '{1}'.\n\n * 400 SqlVmGenericUserError - {0}\n\n * 400 RequestFailed - Request to the resource '{0}' failed. Error code : '{1}'. HTTP status code : '{2}'. Error message : '{3}'.\n\n * 400 InvalidContainerName - Invalid storage account container name: '{0}'. Container name 'backup' is not supported in SQL Managed Instance.\n\n * 400 DeleteMigrationNotAllowedMigrationInProgress - Database migration to the target resource '{0}' is currently in progress. To delete the migration, please wait until the migration has completed or cancel the migration manually, and then retry deleting the migration. Alternatively, use the force delete option to cancel ongoing operations and delete\n\n * 400 DeleteMigrationNotAllowedCancelInProgress - Database migration to the target resource '{0}' is currently being canceled. To delete the migration, please wait until the cancel operation is complete\n\n * 400 DeleteMigrationNotAllowedCutoverInProgress - DeleteMigrationNotAllowedCutoverInProgress\", \"Database migration to the target resource '{0}' is currently being cutover. To delete the migration, please wait until the cutover operation is complete\n\n * 400 DeleteMigrationNotAllowedDeleteInProgress - Database migration to the target resource '{0}' is currently deleting. Please wait until the delete operation is complete\n\n * 400 MigrationRetryNotAllowed - Migration is not in a retriable state. Migration must be in state WaitForRetry. Current state: '{0}', Target server:'{1}', Target database: '{2}'.\n\n * 400 MigrationStillValidating - Migration is still being validated. {0} cannot be performed. Target server:'{1}', Target database: '{2}'.\n\n * 400 IntegrationRuntimeDoesNotSupportSqlSchemaMigration - Current self-hosted IR '{0}' doesn't support SQL schema migration. Please download self-hosted IR version '{1}' or later.\n\n * 400 SourceTargetTablesCountMismatch - Source tables count '{0}' is not the same as target tables count '{1}'.\n\n * 400 InvalidTableNameFormat - Table name '{0}' is not in format of 'schema.table'.\n\n * 400 IntegrationRuntimeIsNotSelfHosted - Integration Runtime is not self-hosted for subscription '{0}' resource group '{1}' and name '{2}'\n\n * 400 MigrationNotReadyForCutoverError - Database '{0}' is not ready for Cutover operation\n\n * 400 CutoverFailedOrCancelled - Cutover failed or cancelled for database '{0}'. Error details: '{1}'\n\n * 400 MigrationCancelFailed - Cancel could not be performed on operation '{0}' for database '{1}'. This can happen if the migration with MigrationId '{0}' is already completed or canceled. Please check the migration for details.\n\n * 403 AccessDenied - Access denied.\n\n * 404 ResourceNotFound - The requested resource was not found.\n\n * 404 SubscriptionDoesNotExist - Subscription id does not exist.\n\n * 404 ResourceDoesNotExist - Resource does not exist.\n\n * 405 SubscriptionNotReady - Subscription is not in Ready state.\n\n * 409 OperationInProgress - Operation in progress on resource already.\n\n * 409 OperationCanceled - Operation Cancelled.\n\n * 409 ResourceAlreadyExists - Resource already exists.\n\n * 409 SubscriptionOperationInProgress - An operation on subscription is already in progress\n\n * 500 UnExpectedErrorOccurred - Unexpected error occurred.\n\n * 500 OperationTimeout - Operation timed out.\n\n * 500 GenericSystem - System Failure when calling other Resource Provider.\n\n * 500 CancelVmRestoreJobFailed - Failed to cancel VM restore job. Target server:'{0}', Target database: '{1}', Error details: '{2}'.\n\n * 500 AdfCleanupFailureAfterMigration - Failed to clean up ADF resources after migration has completed successfully. Target server:'{0}', Target database: '{1}', Error details: '{2}'.\n\n * 500 CancelMigrationFailed - Failed to cancel migration. Target server:'{0}', Target database: '{1}', Migration Id: '{2}', Error details: '{3}'."
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{sqlDbInstanceName}/providers/Microsoft.DataMigration/databaseMigrations/{targetDbName}/performanceMonitorData": {
      "get": {
        "tags": [
          "DatabaseMigrationsSqlDb"
        ],
        "description": "Retrieves performance monitoring data for a migration.",
        "operationId": "DatabaseMigrationsSqlDb_performanceMonitorData",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          },
          {
            "name": "sqlDbInstanceName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/TargetDbNameParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved performance monitoring data."
          },
          "default": {
            "description": "*** Error Responses: ***\n\n * 400 InvalidParameterValue - An invalid value was provided for parameter '{0}'.\n\n * 400 EmptyRequiredRequestBody - The request body must not be empty.\n\n * 400 GenericUser - User Failure when calling other Resource Provider.\n\n * 400 OperationIdNotFound - Operation ID '{0}' not found.\n\n * 400 OperationTypeNotFound - Operation Type '{0}' not found.\n\n * 400 InvalidArgument - Invalid argument '{0}'.\n\n * 400 TestConnectionFailed - Failed to test connections using provided Integration Runtime. Error details: '{0}'\n\n * 400 CutoverNotAllowedMigrationCompleteError - Cutover is not allowed as migration for database '{0}' is already complete\n\n * 400 DatabaseListInputMissingError - Database list null or empty. Task type GetUserTables must contain database list as input.\n\n * 400 IntegrationRuntimeIsNotOnline - Integration Runtime '{0}' is not online for resource group '{1}' subscription '{2}'\n\n * 400 DeleteMigrationServiceTaskNotAllowedInProgress - Migration service task '{0}' is currently in progress. To delete the task, please wait until the migration service task has completed or cancel the task manually, and then retry deleting the migration service task. Alternatively, use the force delete option to cancel ongoing operations and delete.\n\n * 400 InvalidStorageAccount - Invalid storage account: '{0}'. Only BlockBlobStorage kind is supported for premium tier.\n\n * 400 InvalidLocation - Invalid Location: '{0}'. Location should match selected Azure target location '{1}'.\n\n * 400 MigrationNotReadyForCancelError - Migration cannot be canceled as it is not in a cancelable state. Target server:'{0}', Target database: '{1}'.\n\n * 400 RestoreJobCompletedDuringCancel - Migration cannot be canceled as Restore Job was completed during the cancel process. Target server:'{0}', Target database: '{1}'.\n\n * 400 SqlVmGenericUserError - {0}\n\n * 400 RequestFailed - Request to the resource '{0}' failed. Error code : '{1}'. HTTP status code : '{2}'. Error message : '{3}'.\n\n * 400 InvalidContainerName - Invalid storage account container name: '{0}'. Container name 'backup' is not supported in SQL Managed Instance.\n\n * 400 DeleteMigrationNotAllowedMigrationInProgress - Database migration to the target resource '{0}' is currently in progress. To delete the migration, please wait until the migration has completed or cancel the migration manually, and then retry deleting the migration. Alternatively, use the force delete option to cancel ongoing operations and delete\n\n * 400 DeleteMigrationNotAllowedCancelInProgress - Database migration to the target resource '{0}' is currently being canceled. To delete the migration, please wait until the cancel operation is complete\n\n * 400 DeleteMigrationNotAllowedCutoverInProgress - DeleteMigrationNotAllowedCutoverInProgress\", \"Database migration to the target resource '{0}' is currently being cutover. To delete the migration, please wait until the cutover operation is complete\n\n * 400 DeleteMigrationNotAllowedDeleteInProgress - Database migration to the target resource '{0}' is currently deleting. Please wait until the delete operation is complete\n\n * 400 MigrationRetryNotAllowed - Migration is not in a retriable state. Migration must be in state WaitForRetry. Current state: '{0}', Target server:'{1}', Target database: '{2}'.\n\n * 400 MigrationStillValidating - Migration is still being validated. {0} cannot be performed. Target server:'{1}', Target database: '{2}'.\n\n * 400 IntegrationRuntimeDoesNotSupportSqlSchemaMigration - Current self-hosted IR '{0}' doesn't support SQL schema migration. Please download self-hosted IR version '{1}' or later.\n\n * 400 SourceTargetTablesCountMismatch - Source tables count '{0}' is not the same as target tables count '{1}'.\n\n * 400 InvalidTableNameFormat - Table name '{0}' is not in format of 'schema.table'.\n\n * 400 IntegrationRuntimeIsNotSelfHosted - Integration Runtime is not self-hosted for subscription '{0}' resource group '{1}' and name '{2}'\n\n * 400 MigrationNotReadyForCutoverError - Database '{0}' is not ready for Cutover operation\n\n * 400 CutoverFailedOrCancelled - Cutover failed or cancelled for database '{0}'. Error details: '{1}'\n\n * 400 MigrationCancelFailed - Cancel could not be performed on operation '{0}' for database '{1}'. This can happen if the migration with MigrationId '{0}' is already completed or canceled. Please check the migration for details.\n\n * 403 AccessDenied - Access denied.\n\n * 404 ResourceNotFound - The requested resource was not found.\n\n * 404 SubscriptionDoesNotExist - Subscription id does not exist.\n\n * 404 ResourceDoesNotExist - Resource does not exist.\n\n * 405 SubscriptionNotReady - Subscription is not in Ready state.\n\n * 409 OperationInProgress - Operation in progress on resource already.\n\n * 409 OperationCanceled - Operation Cancelled.\n\n * 409 ResourceAlreadyExists - Resource already exists.\n\n * 409 SubscriptionOperationInProgress - An operation on subscription is already in progress\n\n * 500 UnExpectedErrorOccurred - Unexpected error occurred.\n\n * 500 OperationTimeout - Operation timed out.\n\n * 500 GenericSystem - System Failure when calling other Resource Provider.\n\n * 500 CancelVmRestoreJobFailed - Failed to cancel VM restore job. Target server:'{0}', Target database: '{1}', Error details: '{2}'.\n\n * 500 AdfCleanupFailureAfterMigration - Failed to clean up ADF resources after migration has completed successfully. Target server:'{0}', Target database: '{1}', Error details: '{2}'.\n\n * 500 CancelMigrationFailed - Failed to cancel migration. Target server:'{0}', Target database: '{1}', Migration Id: '{2}', Error details: '{3}'."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/providers/Microsoft.DataMigration/databaseMigrations/{targetDbName}": {
      "get": {
        "tags": [
          "DatabaseMigrationsSqlMi"
        ],
        "description": "Retrieve the Database Migration resource.",
        "operationId": "DatabaseMigrationsSqlMi_Get",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          },
          {
            "name": "managedInstanceName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/TargetDbNameParameter"
          },
          {
            "name": "migrationOperationId",
            "in": "query",
            "description": "Optional migration operation ID. If this is provided, then details of migration operation for that ID are retrieved. If not provided (default), then details related to most recent or current operation are retrieved.",
            "required": false,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "kind",
            "in": "query",
            "description": "Optional migration kind",
            "required": false,
            "type": "string",
            "enum": [
              "SqlMi",
              "SqlVm",
              "SqlDb",
              "OracleToSqlDb",
              "SqlConnectServiceTask",
              "MongoToCosmosDbMongo",
              "OracleToSqlMi",
              "OracleToSqlVm"
            ]
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The child resources to include in the response.",
            "required": false,
            "type": "string"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the Database Migration resource.",
            "schema": {
              "$ref": "#/definitions/DatabaseMigrationSqlMi"
            }
          },
          "default": {
            "description": "*** Error Responses: ***\n\n * 400 InvalidParameterValue - An invalid value was provided for parameter '{0}'.\n\n * 400 EmptyRequiredRequestBody - The request body must not be empty.\n\n * 400 GenericUser - User Failure when calling other Resource Provider.\n\n * 400 OperationIdNotFound - Operation ID '{0}' not found.\n\n * 400 OperationTypeNotFound - Operation Type '{0}' not found.\n\n * 400 InvalidArgument - Invalid argument '{0}'.\n\n * 400 TestConnectionFailed - Failed to test connections using provided Integration Runtime. Error details: '{0}'\n\n * 400 CutoverNotAllowedMigrationCompleteError - Cutover is not allowed as migration for database '{0}' is already complete\n\n * 400 DatabaseListInputMissingError - Database list null or empty. Task type GetUserTables must contain database list as input.\n\n * 400 IntegrationRuntimeIsNotOnline - Integration Runtime '{0}' is not online for resource group '{1}' subscription '{2}'\n\n * 400 DeleteMigrationServiceTaskNotAllowedInProgress - Migration service task '{0}' is currently in progress. To delete the task, please wait until the migration service task has completed or cancel the task manually, and then retry deleting the migration service task. Alternatively, use the force delete option to cancel ongoing operations and delete.\n\n * 400 InvalidStorageAccount - Invalid storage account: '{0}'. Only BlockBlobStorage kind is supported for premium tier.\n\n * 400 InvalidLocation - Invalid Location: '{0}'. Location should match selected Azure target location '{1}'.\n\n * 400 MigrationNotReadyForCancelError - Migration cannot be canceled as it is not in a cancelable state. Target server:'{0}', Target database: '{1}'.\n\n * 400 RestoreJobCompletedDuringCancel - Migration cannot be canceled as Restore Job was completed during the cancel process. Target server:'{0}', Target database: '{1}'.\n\n * 400 SqlVmGenericUserError - {0}\n\n * 400 RequestFailed - Request to the resource '{0}' failed. Error code : '{1}'. HTTP status code : '{2}'. Error message : '{3}'.\n\n * 400 InvalidContainerName - Invalid storage account container name: '{0}'. Container name 'backup' is not supported in SQL Managed Instance.\n\n * 400 DeleteMigrationNotAllowedMigrationInProgress - Database migration to the target resource '{0}' is currently in progress. To delete the migration, please wait until the migration has completed or cancel the migration manually, and then retry deleting the migration. Alternatively, use the force delete option to cancel ongoing operations and delete\n\n * 400 DeleteMigrationNotAllowedCancelInProgress - Database migration to the target resource '{0}' is currently being canceled. To delete the migration, please wait until the cancel operation is complete\n\n * 400 DeleteMigrationNotAllowedCutoverInProgress - DeleteMigrationNotAllowedCutoverInProgress\", \"Database migration to the target resource '{0}' is currently being cutover. To delete the migration, please wait until the cutover operation is complete\n\n * 400 DeleteMigrationNotAllowedDeleteInProgress - Database migration to the target resource '{0}' is currently deleting. Please wait until the delete operation is complete\n\n * 400 MigrationRetryNotAllowed - Migration is not in a retriable state. Migration must be in state WaitForRetry. Current state: '{0}', Target server:'{1}', Target database: '{2}'.\n\n * 400 MigrationStillValidating - Migration is still being validated. {0} cannot be performed. Target server:'{1}', Target database: '{2}'.\n\n * 400 IntegrationRuntimeDoesNotSupportSqlSchemaMigration - Current self-hosted IR '{0}' doesn't support SQL schema migration. Please download self-hosted IR version '{1}' or later.\n\n * 400 SourceTargetTablesCountMismatch - Source tables count '{0}' is not the same as target tables count '{1}'.\n\n * 400 InvalidTableNameFormat - Table name '{0}' is not in format of 'schema.table'.\n\n * 400 IntegrationRuntimeIsNotSelfHosted - Integration Runtime is not self-hosted for subscription '{0}' resource group '{1}' and name '{2}'\n\n * 400 MigrationNotReadyForCutoverError - Database '{0}' is not ready for Cutover operation\n\n * 400 CutoverFailedOrCancelled - Cutover failed or cancelled for database '{0}'. Error details: '{1}'\n\n * 400 MigrationCancelFailed - Cancel could not be performed on operation '{0}' for database '{1}'. This can happen if the migration with MigrationId '{0}' is already completed or canceled. Please check the migration for details.\n\n * 403 AccessDenied - Access denied.\n\n * 404 ResourceNotFound - The requested resource was not found.\n\n * 404 SubscriptionDoesNotExist - Subscription id does not exist.\n\n * 404 ResourceDoesNotExist - Resource does not exist.\n\n * 405 SubscriptionNotReady - Subscription is not in Ready state.\n\n * 409 OperationInProgress - Operation in progress on resource already.\n\n * 409 OperationCanceled - Operation Cancelled.\n\n * 409 ResourceAlreadyExists - Resource already exists.\n\n * 409 SubscriptionOperationInProgress - An operation on subscription is already in progress\n\n * 500 UnExpectedErrorOccurred - Unexpected error occurred.\n\n * 500 OperationTimeout - Operation timed out.\n\n * 500 GenericSystem - System Failure when calling other Resource Provider.\n\n * 500 CancelVmRestoreJobFailed - Failed to cancel VM restore job. Target server:'{0}', Target database: '{1}', Error details: '{2}'.\n\n * 500 AdfCleanupFailureAfterMigration - Failed to clean up ADF resources after migration has completed successfully. Target server:'{0}', Target database: '{1}', Error details: '{2}'.\n\n * 500 CancelMigrationFailed - Failed to cancel migration. Target server:'{0}', Target database: '{1}', Migration Id: '{2}', Error details: '{3}'."
          }
        }
      },
      "put": {
        "tags": [
          "DatabaseMigrationsSqlMi"
        ],
        "description": "Create or Update Database Migration resource.",
        "operationId": "DatabaseMigrationsSqlMi_CreateOrUpdate",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          },
          {
            "name": "managedInstanceName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/TargetDbNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Details of SqlMigrationService resource.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DatabaseMigrationSqlMi"
            }
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully updated the Database Migration resource.",
            "schema": {
              "$ref": "#/definitions/DatabaseMigrationSqlMi"
            }
          },
          "default": {
            "description": "*** Error Responses: ***\n\n * 400 InvalidParameterValue - An invalid value was provided for parameter '{0}'.\n\n * 400 EmptyRequiredRequestBody - The request body must not be empty.\n\n * 400 GenericUser - User Failure when calling other Resource Provider.\n\n * 400 OperationIdNotFound - Operation ID '{0}' not found.\n\n * 400 OperationTypeNotFound - Operation Type '{0}' not found.\n\n * 400 InvalidArgument - Invalid argument '{0}'.\n\n * 400 TestConnectionFailed - Failed to test connections using provided Integration Runtime. Error details: '{0}'\n\n * 400 CutoverNotAllowedMigrationCompleteError - Cutover is not allowed as migration for database '{0}' is already complete\n\n * 400 DatabaseListInputMissingError - Database list null or empty. Task type GetUserTables must contain database list as input.\n\n * 400 IntegrationRuntimeIsNotOnline - Integration Runtime '{0}' is not online for resource group '{1}' subscription '{2}'\n\n * 400 DeleteMigrationServiceTaskNotAllowedInProgress - Migration service task '{0}' is currently in progress. To delete the task, please wait until the migration service task has completed or cancel the task manually, and then retry deleting the migration service task. Alternatively, use the force delete option to cancel ongoing operations and delete.\n\n * 400 InvalidStorageAccount - Invalid storage account: '{0}'. Only BlockBlobStorage kind is supported for premium tier.\n\n * 400 InvalidLocation - Invalid Location: '{0}'. Location should match selected Azure target location '{1}'.\n\n * 400 MigrationNotReadyForCancelError - Migration cannot be canceled as it is not in a cancelable state. Target server:'{0}', Target database: '{1}'.\n\n * 400 RestoreJobCompletedDuringCancel - Migration cannot be canceled as Restore Job was completed during the cancel process. Target server:'{0}', Target database: '{1}'.\n\n * 400 SqlVmGenericUserError - {0}\n\n * 400 RequestFailed - Request to the resource '{0}' failed. Error code : '{1}'. HTTP status code : '{2}'. Error message : '{3}'.\n\n * 400 InvalidContainerName - Invalid storage account container name: '{0}'. Container name 'backup' is not supported in SQL Managed Instance.\n\n * 400 DeleteMigrationNotAllowedMigrationInProgress - Database migration to the target resource '{0}' is currently in progress. To delete the migration, please wait until the migration has completed or cancel the migration manually, and then retry deleting the migration. Alternatively, use the force delete option to cancel ongoing operations and delete\n\n * 400 DeleteMigrationNotAllowedCancelInProgress - Database migration to the target resource '{0}' is currently being canceled. To delete the migration, please wait until the cancel operation is complete\n\n * 400 DeleteMigrationNotAllowedCutoverInProgress - DeleteMigrationNotAllowedCutoverInProgress\", \"Database migration to the target resource '{0}' is currently being cutover. To delete the migration, please wait until the cutover operation is complete\n\n * 400 DeleteMigrationNotAllowedDeleteInProgress - Database migration to the target resource '{0}' is currently deleting. Please wait until the delete operation is complete\n\n * 400 MigrationRetryNotAllowed - Migration is not in a retriable state. Migration must be in state WaitForRetry. Current state: '{0}', Target server:'{1}', Target database: '{2}'.\n\n * 400 MigrationStillValidating - Migration is still being validated. {0} cannot be performed. Target server:'{1}', Target database: '{2}'.\n\n * 400 IntegrationRuntimeDoesNotSupportSqlSchemaMigration - Current self-hosted IR '{0}' doesn't support SQL schema migration. Please download self-hosted IR version '{1}' or later.\n\n * 400 SourceTargetTablesCountMismatch - Source tables count '{0}' is not the same as target tables count '{1}'.\n\n * 400 InvalidTableNameFormat - Table name '{0}' is not in format of 'schema.table'.\n\n * 400 IntegrationRuntimeIsNotSelfHosted - Integration Runtime is not self-hosted for subscription '{0}' resource group '{1}' and name '{2}'\n\n * 400 MigrationNotReadyForCutoverError - Database '{0}' is not ready for Cutover operation\n\n * 400 CutoverFailedOrCancelled - Cutover failed or cancelled for database '{0}'. Error details: '{1}'\n\n * 400 MigrationCancelFailed - Cancel could not be performed on operation '{0}' for database '{1}'. This can happen if the migration with MigrationId '{0}' is already completed or canceled. Please check the migration for details.\n\n * 403 AccessDenied - Access denied.\n\n * 404 ResourceNotFound - The requested resource was not found.\n\n * 404 SubscriptionDoesNotExist - Subscription id does not exist.\n\n * 404 ResourceDoesNotExist - Resource does not exist.\n\n * 405 SubscriptionNotReady - Subscription is not in Ready state.\n\n * 409 OperationInProgress - Operation in progress on resource already.\n\n * 409 OperationCanceled - Operation Cancelled.\n\n * 409 ResourceAlreadyExists - Resource already exists.\n\n * 409 SubscriptionOperationInProgress - An operation on subscription is already in progress\n\n * 500 UnExpectedErrorOccurred - Unexpected error occurred.\n\n * 500 OperationTimeout - Operation timed out.\n\n * 500 GenericSystem - System Failure when calling other Resource Provider.\n\n * 500 CancelVmRestoreJobFailed - Failed to cancel VM restore job. Target server:'{0}', Target database: '{1}', Error details: '{2}'.\n\n * 500 AdfCleanupFailureAfterMigration - Failed to clean up ADF resources after migration has completed successfully. Target server:'{0}', Target database: '{1}', Error details: '{2}'.\n\n * 500 CancelMigrationFailed - Failed to cancel migration. Target server:'{0}', Target database: '{1}', Migration Id: '{2}', Error details: '{3}'."
          },
          "201": {
            "description": "Successfully created the Database Migration resource.",
            "schema": {
              "$ref": "#/definitions/DatabaseMigrationSqlMi"
            }
          }
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "tags": [
          "DatabaseMigrationsSqlMi"
        ],
        "description": "Delete Database Migration resource.",
        "operationId": "DatabaseMigrationsSqlMi_Delete",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          },
          {
            "name": "managedInstanceName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/TargetDbNameParameter"
          },
          {
            "name": "force",
            "in": "query",
            "description": "Optional force delete boolean. If this is provided as true, migration will be deleted even if active.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "kind",
            "in": "query",
            "description": "Optional migration kind",
            "required": false,
            "type": "string",
            "enum": [
              "SqlMi",
              "SqlVm",
              "SqlDb",
              "OracleToSqlDb",
              "SqlConnectServiceTask",
              "MongoToCosmosDbMongo",
              "OracleToSqlMi",
              "OracleToSqlVm"
            ]
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted the Database Migration resource."
          },
          "default": {
            "description": "*** Error Responses: ***\n\n * 400 InvalidParameterValue - An invalid value was provided for parameter '{0}'.\n\n * 400 EmptyRequiredRequestBody - The request body must not be empty.\n\n * 400 GenericUser - User Failure when calling other Resource Provider.\n\n * 400 OperationIdNotFound - Operation ID '{0}' not found.\n\n * 400 OperationTypeNotFound - Operation Type '{0}' not found.\n\n * 400 InvalidArgument - Invalid argument '{0}'.\n\n * 400 TestConnectionFailed - Failed to test connections using provided Integration Runtime. Error details: '{0}'\n\n * 400 CutoverNotAllowedMigrationCompleteError - Cutover is not allowed as migration for database '{0}' is already complete\n\n * 400 DatabaseListInputMissingError - Database list null or empty. Task type GetUserTables must contain database list as input.\n\n * 400 IntegrationRuntimeIsNotOnline - Integration Runtime '{0}' is not online for resource group '{1}' subscription '{2}'\n\n * 400 DeleteMigrationServiceTaskNotAllowedInProgress - Migration service task '{0}' is currently in progress. To delete the task, please wait until the migration service task has completed or cancel the task manually, and then retry deleting the migration service task. Alternatively, use the force delete option to cancel ongoing operations and delete.\n\n * 400 InvalidStorageAccount - Invalid storage account: '{0}'. Only BlockBlobStorage kind is supported for premium tier.\n\n * 400 InvalidLocation - Invalid Location: '{0}'. Location should match selected Azure target location '{1}'.\n\n * 400 MigrationNotReadyForCancelError - Migration cannot be canceled as it is not in a cancelable state. Target server:'{0}', Target database: '{1}'.\n\n * 400 RestoreJobCompletedDuringCancel - Migration cannot be canceled as Restore Job was completed during the cancel process. Target server:'{0}', Target database: '{1}'.\n\n * 400 SqlVmGenericUserError - {0}\n\n * 400 RequestFailed - Request to the resource '{0}' failed. Error code : '{1}'. HTTP status code : '{2}'. Error message : '{3}'.\n\n * 400 InvalidContainerName - Invalid storage account container name: '{0}'. Container name 'backup' is not supported in SQL Managed Instance.\n\n * 400 DeleteMigrationNotAllowedMigrationInProgress - Database migration to the target resource '{0}' is currently in progress. To delete the migration, please wait until the migration has completed or cancel the migration manually, and then retry deleting the migration. Alternatively, use the force delete option to cancel ongoing operations and delete\n\n * 400 DeleteMigrationNotAllowedCancelInProgress - Database migration to the target resource '{0}' is currently being canceled. To delete the migration, please wait until the cancel operation is complete\n\n * 400 DeleteMigrationNotAllowedCutoverInProgress - DeleteMigrationNotAllowedCutoverInProgress\", \"Database migration to the target resource '{0}' is currently being cutover. To delete the migration, please wait until the cutover operation is complete\n\n * 400 DeleteMigrationNotAllowedDeleteInProgress - Database migration to the target resource '{0}' is currently deleting. Please wait until the delete operation is complete\n\n * 400 MigrationRetryNotAllowed - Migration is not in a retriable state. Migration must be in state WaitForRetry. Current state: '{0}', Target server:'{1}', Target database: '{2}'.\n\n * 400 MigrationStillValidating - Migration is still being validated. {0} cannot be performed. Target server:'{1}', Target database: '{2}'.\n\n * 400 IntegrationRuntimeDoesNotSupportSqlSchemaMigration - Current self-hosted IR '{0}' doesn't support SQL schema migration. Please download self-hosted IR version '{1}' or later.\n\n * 400 SourceTargetTablesCountMismatch - Source tables count '{0}' is not the same as target tables count '{1}'.\n\n * 400 InvalidTableNameFormat - Table name '{0}' is not in format of 'schema.table'.\n\n * 400 IntegrationRuntimeIsNotSelfHosted - Integration Runtime is not self-hosted for subscription '{0}' resource group '{1}' and name '{2}'\n\n * 400 MigrationNotReadyForCutoverError - Database '{0}' is not ready for Cutover operation\n\n * 400 CutoverFailedOrCancelled - Cutover failed or cancelled for database '{0}'. Error details: '{1}'\n\n * 400 MigrationCancelFailed - Cancel could not be performed on operation '{0}' for database '{1}'. This can happen if the migration with MigrationId '{0}' is already completed or canceled. Please check the migration for details.\n\n * 403 AccessDenied - Access denied.\n\n * 404 ResourceNotFound - The requested resource was not found.\n\n * 404 SubscriptionDoesNotExist - Subscription id does not exist.\n\n * 404 ResourceDoesNotExist - Resource does not exist.\n\n * 405 SubscriptionNotReady - Subscription is not in Ready state.\n\n * 409 OperationInProgress - Operation in progress on resource already.\n\n * 409 OperationCanceled - Operation Cancelled.\n\n * 409 ResourceAlreadyExists - Resource already exists.\n\n * 409 SubscriptionOperationInProgress - An operation on subscription is already in progress\n\n * 500 UnExpectedErrorOccurred - Unexpected error occurred.\n\n * 500 OperationTimeout - Operation timed out.\n\n * 500 GenericSystem - System Failure when calling other Resource Provider.\n\n * 500 CancelVmRestoreJobFailed - Failed to cancel VM restore job. Target server:'{0}', Target database: '{1}', Error details: '{2}'.\n\n * 500 AdfCleanupFailureAfterMigration - Failed to clean up ADF resources after migration has completed successfully. Target server:'{0}', Target database: '{1}', Error details: '{2}'.\n\n * 500 CancelMigrationFailed - Failed to cancel migration. Target server:'{0}', Target database: '{1}', Migration Id: '{2}', Error details: '{3}'."
          },
          "202": {
            "description": "Deleting the Database Migration resource.",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          },
          "204": {
            "description": "The specified Database Migration resource does not exist."
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/providers/Microsoft.DataMigration/databaseMigrations": {
      "get": {
        "tags": [
          "DatabaseMigrationsSqlMi"
        ],
        "description": "Retrieve Database Migration in the scope.",
        "operationId": "DatabaseMigrationsSqlMi_ListByScope",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          },
          {
            "name": "managedInstanceName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Get all Database Migration resources in the scope.",
            "schema": {
              "$ref": "#/definitions/DatabaseMigrationSqlMiListResult"
            }
          },
          "default": {
            "description": "*** Error Responses: ***\n\n * 400 InvalidParameterValue - An invalid value was provided for parameter '{0}'.\n\n * 400 EmptyRequiredRequestBody - The request body must not be empty.\n\n * 400 GenericUser - User Failure when calling other Resource Provider.\n\n * 400 OperationIdNotFound - Operation ID '{0}' not found.\n\n * 400 OperationTypeNotFound - Operation Type '{0}' not found.\n\n * 400 InvalidArgument - Invalid argument '{0}'.\n\n * 400 TestConnectionFailed - Failed to test connections using provided Integration Runtime. Error details: '{0}'\n\n * 400 CutoverNotAllowedMigrationCompleteError - Cutover is not allowed as migration for database '{0}' is already complete\n\n * 400 DatabaseListInputMissingError - Database list null or empty. Task type GetUserTables must contain database list as input.\n\n * 400 IntegrationRuntimeIsNotOnline - Integration Runtime '{0}' is not online for resource group '{1}' subscription '{2}'\n\n * 400 DeleteMigrationServiceTaskNotAllowedInProgress - Migration service task '{0}' is currently in progress. To delete the task, please wait until the migration service task has completed or cancel the task manually, and then retry deleting the migration service task. Alternatively, use the force delete option to cancel ongoing operations and delete.\n\n * 400 InvalidStorageAccount - Invalid storage account: '{0}'. Only BlockBlobStorage kind is supported for premium tier.\n\n * 400 InvalidLocation - Invalid Location: '{0}'. Location should match selected Azure target location '{1}'.\n\n * 400 MigrationNotReadyForCancelError - Migration cannot be canceled as it is not in a cancelable state. Target server:'{0}', Target database: '{1}'.\n\n * 400 RestoreJobCompletedDuringCancel - Migration cannot be canceled as Restore Job was completed during the cancel process. Target server:'{0}', Target database: '{1}'.\n\n * 400 SqlVmGenericUserError - {0}\n\n * 400 RequestFailed - Request to the resource '{0}' failed. Error code : '{1}'. HTTP status code : '{2}'. Error message : '{3}'.\n\n * 400 InvalidContainerName - Invalid storage account container name: '{0}'. Container name 'backup' is not supported in SQL Managed Instance.\n\n * 400 DeleteMigrationNotAllowedMigrationInProgress - Database migration to the target resource '{0}' is currently in progress. To delete the migration, please wait until the migration has completed or cancel the migration manually, and then retry deleting the migration. Alternatively, use the force delete option to cancel ongoing operations and delete\n\n * 400 DeleteMigrationNotAllowedCancelInProgress - Database migration to the target resource '{0}' is currently being canceled. To delete the migration, please wait until the cancel operation is complete\n\n * 400 DeleteMigrationNotAllowedCutoverInProgress - DeleteMigrationNotAllowedCutoverInProgress\", \"Database migration to the target resource '{0}' is currently being cutover. To delete the migration, please wait until the cutover operation is complete\n\n * 400 DeleteMigrationNotAllowedDeleteInProgress - Database migration to the target resource '{0}' is currently deleting. Please wait until the delete operation is complete\n\n * 400 MigrationRetryNotAllowed - Migration is not in a retriable state. Migration must be in state WaitForRetry. Current state: '{0}', Target server:'{1}', Target database: '{2}'.\n\n * 400 MigrationStillValidating - Migration is still being validated. {0} cannot be performed. Target server:'{1}', Target database: '{2}'.\n\n * 400 IntegrationRuntimeDoesNotSupportSqlSchemaMigration - Current self-hosted IR '{0}' doesn't support SQL schema migration. Please download self-hosted IR version '{1}' or later.\n\n * 400 SourceTargetTablesCountMismatch - Source tables count '{0}' is not the same as target tables count '{1}'.\n\n * 400 InvalidTableNameFormat - Table name '{0}' is not in format of 'schema.table'.\n\n * 400 IntegrationRuntimeIsNotSelfHosted - Integration Runtime is not self-hosted for subscription '{0}' resource group '{1}' and name '{2}'\n\n * 400 MigrationNotReadyForCutoverError - Database '{0}' is not ready for Cutover operation\n\n * 400 CutoverFailedOrCancelled - Cutover failed or cancelled for database '{0}'. Error details: '{1}'\n\n * 400 MigrationCancelFailed - Cancel could not be performed on operation '{0}' for database '{1}'. This can happen if the migration with MigrationId '{0}' is already completed or canceled. Please check the migration for details.\n\n * 403 AccessDenied - Access denied.\n\n * 404 ResourceNotFound - The requested resource was not found.\n\n * 404 SubscriptionDoesNotExist - Subscription id does not exist.\n\n * 404 ResourceDoesNotExist - Resource does not exist.\n\n * 405 SubscriptionNotReady - Subscription is not in Ready state.\n\n * 409 OperationInProgress - Operation in progress on resource already.\n\n * 409 OperationCanceled - Operation Cancelled.\n\n * 409 ResourceAlreadyExists - Resource already exists.\n\n * 409 SubscriptionOperationInProgress - An operation on subscription is already in progress\n\n * 500 UnExpectedErrorOccurred - Unexpected error occurred.\n\n * 500 OperationTimeout - Operation timed out.\n\n * 500 GenericSystem - System Failure when calling other Resource Provider.\n\n * 500 CancelVmRestoreJobFailed - Failed to cancel VM restore job. Target server:'{0}', Target database: '{1}', Error details: '{2}'.\n\n * 500 AdfCleanupFailureAfterMigration - Failed to clean up ADF resources after migration has completed successfully. Target server:'{0}', Target database: '{1}', Error details: '{2}'.\n\n * 500 CancelMigrationFailed - Failed to cancel migration. Target server:'{0}', Target database: '{1}', Migration Id: '{2}', Error details: '{3}'."
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/providers/Microsoft.DataMigration/databaseMigrations/{targetDbName}/cancel": {
      "post": {
        "tags": [
          "DatabaseMigrationsSqlMi"
        ],
        "description": "Stop migration in progress for the database.",
        "operationId": "DatabaseMigrationsSqlMi_cancel",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          },
          {
            "name": "managedInstanceName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/TargetDbNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Required migration operation ID for which cancel will be initiated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MigrationOperationInput"
            }
          },
          {
            "name": "kind",
            "in": "query",
            "description": "Optional migration kind",
            "required": false,
            "type": "string",
            "enum": [
              "SqlMi",
              "SqlVm",
              "SqlDb",
              "OracleToSqlDb",
              "SqlConnectServiceTask",
              "MongoToCosmosDbMongo",
              "OracleToSqlMi",
              "OracleToSqlVm"
            ]
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "default": {
            "description": "*** Error Responses: ***\n\n * 400 InvalidParameterValue - An invalid value was provided for parameter '{0}'.\n\n * 400 EmptyRequiredRequestBody - The request body must not be empty.\n\n * 400 GenericUser - User Failure when calling other Resource Provider.\n\n * 400 OperationIdNotFound - Operation ID '{0}' not found.\n\n * 400 OperationTypeNotFound - Operation Type '{0}' not found.\n\n * 400 InvalidArgument - Invalid argument '{0}'.\n\n * 400 TestConnectionFailed - Failed to test connections using provided Integration Runtime. Error details: '{0}'\n\n * 400 CutoverNotAllowedMigrationCompleteError - Cutover is not allowed as migration for database '{0}' is already complete\n\n * 400 DatabaseListInputMissingError - Database list null or empty. Task type GetUserTables must contain database list as input.\n\n * 400 IntegrationRuntimeIsNotOnline - Integration Runtime '{0}' is not online for resource group '{1}' subscription '{2}'\n\n * 400 DeleteMigrationServiceTaskNotAllowedInProgress - Migration service task '{0}' is currently in progress. To delete the task, please wait until the migration service task has completed or cancel the task manually, and then retry deleting the migration service task. Alternatively, use the force delete option to cancel ongoing operations and delete.\n\n * 400 InvalidStorageAccount - Invalid storage account: '{0}'. Only BlockBlobStorage kind is supported for premium tier.\n\n * 400 InvalidLocation - Invalid Location: '{0}'. Location should match selected Azure target location '{1}'.\n\n * 400 MigrationNotReadyForCancelError - Migration cannot be canceled as it is not in a cancelable state. Target server:'{0}', Target database: '{1}'.\n\n * 400 RestoreJobCompletedDuringCancel - Migration cannot be canceled as Restore Job was completed during the cancel process. Target server:'{0}', Target database: '{1}'.\n\n * 400 SqlVmGenericUserError - {0}\n\n * 400 RequestFailed - Request to the resource '{0}' failed. Error code : '{1}'. HTTP status code : '{2}'. Error message : '{3}'.\n\n * 400 InvalidContainerName - Invalid storage account container name: '{0}'. Container name 'backup' is not supported in SQL Managed Instance.\n\n * 400 DeleteMigrationNotAllowedMigrationInProgress - Database migration to the target resource '{0}' is currently in progress. To delete the migration, please wait until the migration has completed or cancel the migration manually, and then retry deleting the migration. Alternatively, use the force delete option to cancel ongoing operations and delete\n\n * 400 DeleteMigrationNotAllowedCancelInProgress - Database migration to the target resource '{0}' is currently being canceled. To delete the migration, please wait until the cancel operation is complete\n\n * 400 DeleteMigrationNotAllowedCutoverInProgress - DeleteMigrationNotAllowedCutoverInProgress\", \"Database migration to the target resource '{0}' is currently being cutover. To delete the migration, please wait until the cutover operation is complete\n\n * 400 DeleteMigrationNotAllowedDeleteInProgress - Database migration to the target resource '{0}' is currently deleting. Please wait until the delete operation is complete\n\n * 400 MigrationRetryNotAllowed - Migration is not in a retriable state. Migration must be in state WaitForRetry. Current state: '{0}', Target server:'{1}', Target database: '{2}'.\n\n * 400 MigrationStillValidating - Migration is still being validated. {0} cannot be performed. Target server:'{1}', Target database: '{2}'.\n\n * 400 IntegrationRuntimeDoesNotSupportSqlSchemaMigration - Current self-hosted IR '{0}' doesn't support SQL schema migration. Please download self-hosted IR version '{1}' or later.\n\n * 400 SourceTargetTablesCountMismatch - Source tables count '{0}' is not the same as target tables count '{1}'.\n\n * 400 InvalidTableNameFormat - Table name '{0}' is not in format of 'schema.table'.\n\n * 400 IntegrationRuntimeIsNotSelfHosted - Integration Runtime is not self-hosted for subscription '{0}' resource group '{1}' and name '{2}'\n\n * 400 MigrationNotReadyForCutoverError - Database '{0}' is not ready for Cutover operation\n\n * 400 CutoverFailedOrCancelled - Cutover failed or cancelled for database '{0}'. Error details: '{1}'\n\n * 400 MigrationCancelFailed - Cancel could not be performed on operation '{0}' for database '{1}'. This can happen if the migration with MigrationId '{0}' is already completed or canceled. Please check the migration for details.\n\n * 403 AccessDenied - Access denied.\n\n * 404 ResourceNotFound - The requested resource was not found.\n\n * 404 SubscriptionDoesNotExist - Subscription id does not exist.\n\n * 404 ResourceDoesNotExist - Resource does not exist.\n\n * 405 SubscriptionNotReady - Subscription is not in Ready state.\n\n * 409 OperationInProgress - Operation in progress on resource already.\n\n * 409 OperationCanceled - Operation Cancelled.\n\n * 409 ResourceAlreadyExists - Resource already exists.\n\n * 409 SubscriptionOperationInProgress - An operation on subscription is already in progress\n\n * 500 UnExpectedErrorOccurred - Unexpected error occurred.\n\n * 500 OperationTimeout - Operation timed out.\n\n * 500 GenericSystem - System Failure when calling other Resource Provider.\n\n * 500 CancelVmRestoreJobFailed - Failed to cancel VM restore job. Target server:'{0}', Target database: '{1}', Error details: '{2}'.\n\n * 500 AdfCleanupFailureAfterMigration - Failed to clean up ADF resources after migration has completed successfully. Target server:'{0}', Target database: '{1}', Error details: '{2}'.\n\n * 500 CancelMigrationFailed - Failed to cancel migration. Target server:'{0}', Target database: '{1}', Migration Id: '{2}', Error details: '{3}'."
          },
          "202": {
            "description": "Accepted cancellation of ongoing migration.",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/providers/Microsoft.DataMigration/databaseMigrations/{targetDbName}/cutover": {
      "post": {
        "tags": [
          "DatabaseMigrationsSqlMi"
        ],
        "description": "Initiate cutover for online migration in progress for the database.",
        "operationId": "DatabaseMigrationsSqlMi_cutover",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          },
          {
            "name": "managedInstanceName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/TargetDbNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Required migration operation ID for which cutover will be initiated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MigrationOperationInput"
            }
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted cutover request for ongoing migration.",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          },
          "default": {
            "description": "*** Error Responses: ***\n\n * 400 InvalidParameterValue - An invalid value was provided for parameter '{0}'.\n\n * 400 EmptyRequiredRequestBody - The request body must not be empty.\n\n * 400 GenericUser - User Failure when calling other Resource Provider.\n\n * 400 OperationIdNotFound - Operation ID '{0}' not found.\n\n * 400 OperationTypeNotFound - Operation Type '{0}' not found.\n\n * 400 InvalidArgument - Invalid argument '{0}'.\n\n * 400 TestConnectionFailed - Failed to test connections using provided Integration Runtime. Error details: '{0}'\n\n * 400 CutoverNotAllowedMigrationCompleteError - Cutover is not allowed as migration for database '{0}' is already complete\n\n * 400 DatabaseListInputMissingError - Database list null or empty. Task type GetUserTables must contain database list as input.\n\n * 400 IntegrationRuntimeIsNotOnline - Integration Runtime '{0}' is not online for resource group '{1}' subscription '{2}'\n\n * 400 DeleteMigrationServiceTaskNotAllowedInProgress - Migration service task '{0}' is currently in progress. To delete the task, please wait until the migration service task has completed or cancel the task manually, and then retry deleting the migration service task. Alternatively, use the force delete option to cancel ongoing operations and delete.\n\n * 400 InvalidStorageAccount - Invalid storage account: '{0}'. Only BlockBlobStorage kind is supported for premium tier.\n\n * 400 InvalidLocation - Invalid Location: '{0}'. Location should match selected Azure target location '{1}'.\n\n * 400 MigrationNotReadyForCancelError - Migration cannot be canceled as it is not in a cancelable state. Target server:'{0}', Target database: '{1}'.\n\n * 400 RestoreJobCompletedDuringCancel - Migration cannot be canceled as Restore Job was completed during the cancel process. Target server:'{0}', Target database: '{1}'.\n\n * 400 SqlVmGenericUserError - {0}\n\n * 400 RequestFailed - Request to the resource '{0}' failed. Error code : '{1}'. HTTP status code : '{2}'. Error message : '{3}'.\n\n * 400 InvalidContainerName - Invalid storage account container name: '{0}'. Container name 'backup' is not supported in SQL Managed Instance.\n\n * 400 DeleteMigrationNotAllowedMigrationInProgress - Database migration to the target resource '{0}' is currently in progress. To delete the migration, please wait until the migration has completed or cancel the migration manually, and then retry deleting the migration. Alternatively, use the force delete option to cancel ongoing operations and delete\n\n * 400 DeleteMigrationNotAllowedCancelInProgress - Database migration to the target resource '{0}' is currently being canceled. To delete the migration, please wait until the cancel operation is complete\n\n * 400 DeleteMigrationNotAllowedCutoverInProgress - DeleteMigrationNotAllowedCutoverInProgress\", \"Database migration to the target resource '{0}' is currently being cutover. To delete the migration, please wait until the cutover operation is complete\n\n * 400 DeleteMigrationNotAllowedDeleteInProgress - Database migration to the target resource '{0}' is currently deleting. Please wait until the delete operation is complete\n\n * 400 MigrationRetryNotAllowed - Migration is not in a retriable state. Migration must be in state WaitForRetry. Current state: '{0}', Target server:'{1}', Target database: '{2}'.\n\n * 400 MigrationStillValidating - Migration is still being validated. {0} cannot be performed. Target server:'{1}', Target database: '{2}'.\n\n * 400 IntegrationRuntimeDoesNotSupportSqlSchemaMigration - Current self-hosted IR '{0}' doesn't support SQL schema migration. Please download self-hosted IR version '{1}' or later.\n\n * 400 SourceTargetTablesCountMismatch - Source tables count '{0}' is not the same as target tables count '{1}'.\n\n * 400 InvalidTableNameFormat - Table name '{0}' is not in format of 'schema.table'.\n\n * 400 IntegrationRuntimeIsNotSelfHosted - Integration Runtime is not self-hosted for subscription '{0}' resource group '{1}' and name '{2}'\n\n * 400 MigrationNotReadyForCutoverError - Database '{0}' is not ready for Cutover operation\n\n * 400 CutoverFailedOrCancelled - Cutover failed or cancelled for database '{0}'. Error details: '{1}'\n\n * 400 MigrationCancelFailed - Cancel could not be performed on operation '{0}' for database '{1}'. This can happen if the migration with MigrationId '{0}' is already completed or canceled. Please check the migration for details.\n\n * 403 AccessDenied - Access denied.\n\n * 404 ResourceNotFound - The requested resource was not found.\n\n * 404 SubscriptionDoesNotExist - Subscription id does not exist.\n\n * 404 ResourceDoesNotExist - Resource does not exist.\n\n * 405 SubscriptionNotReady - Subscription is not in Ready state.\n\n * 409 OperationInProgress - Operation in progress on resource already.\n\n * 409 OperationCanceled - Operation Cancelled.\n\n * 409 ResourceAlreadyExists - Resource already exists.\n\n * 409 SubscriptionOperationInProgress - An operation on subscription is already in progress\n\n * 500 UnExpectedErrorOccurred - Unexpected error occurred.\n\n * 500 OperationTimeout - Operation timed out.\n\n * 500 GenericSystem - System Failure when calling other Resource Provider.\n\n * 500 CancelVmRestoreJobFailed - Failed to cancel VM restore job. Target server:'{0}', Target database: '{1}', Error details: '{2}'.\n\n * 500 AdfCleanupFailureAfterMigration - Failed to clean up ADF resources after migration has completed successfully. Target server:'{0}', Target database: '{1}', Error details: '{2}'.\n\n * 500 CancelMigrationFailed - Failed to cancel migration. Target server:'{0}', Target database: '{1}', Migration Id: '{2}', Error details: '{3}'."
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.SqlVirtualMachine/sqlVirtualMachines/{sqlVirtualMachineName}/providers/Microsoft.DataMigration/databaseMigrations/{targetDbName}": {
      "get": {
        "tags": [
          "DatabaseMigrationsSqlVm"
        ],
        "description": "Retrieve the Database Migration resource.",
        "operationId": "DatabaseMigrationsSqlVm_Get",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          },
          {
            "name": "sqlVirtualMachineName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/TargetDbNameParameter"
          },
          {
            "name": "migrationOperationId",
            "in": "query",
            "description": "Optional migration operation ID. If this is provided, then details of migration operation for that ID are retrieved. If not provided (default), then details related to most recent or current operation are retrieved.",
            "required": false,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "kind",
            "in": "query",
            "description": "Optional migration kind",
            "required": false,
            "type": "string",
            "enum": [
              "SqlMi",
              "SqlVm",
              "SqlDb",
              "OracleToSqlDb",
              "SqlConnectServiceTask",
              "MongoToCosmosDbMongo",
              "OracleToSqlMi",
              "OracleToSqlVm"
            ]
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The child resources to include in the response.",
            "required": false,
            "type": "string"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the Database Migration resource.",
            "schema": {
              "$ref": "#/definitions/DatabaseMigrationSqlVm"
            }
          },
          "default": {
            "description": "*** Error Responses: ***\n\n * 400 InvalidParameterValue - An invalid value was provided for parameter '{0}'.\n\n * 400 EmptyRequiredRequestBody - The request body must not be empty.\n\n * 400 GenericUser - User Failure when calling other Resource Provider.\n\n * 400 OperationIdNotFound - Operation ID '{0}' not found.\n\n * 400 OperationTypeNotFound - Operation Type '{0}' not found.\n\n * 400 InvalidArgument - Invalid argument '{0}'.\n\n * 400 TestConnectionFailed - Failed to test connections using provided Integration Runtime. Error details: '{0}'\n\n * 400 CutoverNotAllowedMigrationCompleteError - Cutover is not allowed as migration for database '{0}' is already complete\n\n * 400 DatabaseListInputMissingError - Database list null or empty. Task type GetUserTables must contain database list as input.\n\n * 400 IntegrationRuntimeIsNotOnline - Integration Runtime '{0}' is not online for resource group '{1}' subscription '{2}'\n\n * 400 DeleteMigrationServiceTaskNotAllowedInProgress - Migration service task '{0}' is currently in progress. To delete the task, please wait until the migration service task has completed or cancel the task manually, and then retry deleting the migration service task. Alternatively, use the force delete option to cancel ongoing operations and delete.\n\n * 400 InvalidStorageAccount - Invalid storage account: '{0}'. Only BlockBlobStorage kind is supported for premium tier.\n\n * 400 InvalidLocation - Invalid Location: '{0}'. Location should match selected Azure target location '{1}'.\n\n * 400 MigrationNotReadyForCancelError - Migration cannot be canceled as it is not in a cancelable state. Target server:'{0}', Target database: '{1}'.\n\n * 400 RestoreJobCompletedDuringCancel - Migration cannot be canceled as Restore Job was completed during the cancel process. Target server:'{0}', Target database: '{1}'.\n\n * 400 SqlVmGenericUserError - {0}\n\n * 400 RequestFailed - Request to the resource '{0}' failed. Error code : '{1}'. HTTP status code : '{2}'. Error message : '{3}'.\n\n * 400 InvalidContainerName - Invalid storage account container name: '{0}'. Container name 'backup' is not supported in SQL Managed Instance.\n\n * 400 DeleteMigrationNotAllowedMigrationInProgress - Database migration to the target resource '{0}' is currently in progress. To delete the migration, please wait until the migration has completed or cancel the migration manually, and then retry deleting the migration. Alternatively, use the force delete option to cancel ongoing operations and delete\n\n * 400 DeleteMigrationNotAllowedCancelInProgress - Database migration to the target resource '{0}' is currently being canceled. To delete the migration, please wait until the cancel operation is complete\n\n * 400 DeleteMigrationNotAllowedCutoverInProgress - DeleteMigrationNotAllowedCutoverInProgress\", \"Database migration to the target resource '{0}' is currently being cutover. To delete the migration, please wait until the cutover operation is complete\n\n * 400 DeleteMigrationNotAllowedDeleteInProgress - Database migration to the target resource '{0}' is currently deleting. Please wait until the delete operation is complete\n\n * 400 MigrationRetryNotAllowed - Migration is not in a retriable state. Migration must be in state WaitForRetry. Current state: '{0}', Target server:'{1}', Target database: '{2}'.\n\n * 400 MigrationStillValidating - Migration is still being validated. {0} cannot be performed. Target server:'{1}', Target database: '{2}'.\n\n * 400 IntegrationRuntimeDoesNotSupportSqlSchemaMigration - Current self-hosted IR '{0}' doesn't support SQL schema migration. Please download self-hosted IR version '{1}' or later.\n\n * 400 SourceTargetTablesCountMismatch - Source tables count '{0}' is not the same as target tables count '{1}'.\n\n * 400 InvalidTableNameFormat - Table name '{0}' is not in format of 'schema.table'.\n\n * 400 IntegrationRuntimeIsNotSelfHosted - Integration Runtime is not self-hosted for subscription '{0}' resource group '{1}' and name '{2}'\n\n * 400 MigrationNotReadyForCutoverError - Database '{0}' is not ready for Cutover operation\n\n * 400 CutoverFailedOrCancelled - Cutover failed or cancelled for database '{0}'. Error details: '{1}'\n\n * 400 MigrationCancelFailed - Cancel could not be performed on operation '{0}' for database '{1}'. This can happen if the migration with MigrationId '{0}' is already completed or canceled. Please check the migration for details.\n\n * 403 AccessDenied - Access denied.\n\n * 404 ResourceNotFound - The requested resource was not found.\n\n * 404 SubscriptionDoesNotExist - Subscription id does not exist.\n\n * 404 ResourceDoesNotExist - Resource does not exist.\n\n * 405 SubscriptionNotReady - Subscription is not in Ready state.\n\n * 409 OperationInProgress - Operation in progress on resource already.\n\n * 409 OperationCanceled - Operation Cancelled.\n\n * 409 ResourceAlreadyExists - Resource already exists.\n\n * 409 SubscriptionOperationInProgress - An operation on subscription is already in progress\n\n * 500 UnExpectedErrorOccurred - Unexpected error occurred.\n\n * 500 OperationTimeout - Operation timed out.\n\n * 500 GenericSystem - System Failure when calling other Resource Provider.\n\n * 500 CancelVmRestoreJobFailed - Failed to cancel VM restore job. Target server:'{0}', Target database: '{1}', Error details: '{2}'.\n\n * 500 AdfCleanupFailureAfterMigration - Failed to clean up ADF resources after migration has completed successfully. Target server:'{0}', Target database: '{1}', Error details: '{2}'.\n\n * 500 CancelMigrationFailed - Failed to cancel migration. Target server:'{0}', Target database: '{1}', Migration Id: '{2}', Error details: '{3}'."
          }
        }
      },
      "put": {
        "tags": [
          "DatabaseMigrationsSqlVm"
        ],
        "description": "Create or Update Database Migration resource.",
        "operationId": "DatabaseMigrationsSqlVm_CreateOrUpdate",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          },
          {
            "name": "sqlVirtualMachineName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/TargetDbNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Details of SqlMigrationService resource.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DatabaseMigrationSqlVm"
            }
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully updated the Database Migration resource.",
            "schema": {
              "$ref": "#/definitions/DatabaseMigrationSqlVm"
            }
          },
          "default": {
            "description": "*** Error Responses: ***\n\n * 400 InvalidParameterValue - An invalid value was provided for parameter '{0}'.\n\n * 400 EmptyRequiredRequestBody - The request body must not be empty.\n\n * 400 GenericUser - User Failure when calling other Resource Provider.\n\n * 400 OperationIdNotFound - Operation ID '{0}' not found.\n\n * 400 OperationTypeNotFound - Operation Type '{0}' not found.\n\n * 400 InvalidArgument - Invalid argument '{0}'.\n\n * 400 TestConnectionFailed - Failed to test connections using provided Integration Runtime. Error details: '{0}'\n\n * 400 CutoverNotAllowedMigrationCompleteError - Cutover is not allowed as migration for database '{0}' is already complete\n\n * 400 DatabaseListInputMissingError - Database list null or empty. Task type GetUserTables must contain database list as input.\n\n * 400 IntegrationRuntimeIsNotOnline - Integration Runtime '{0}' is not online for resource group '{1}' subscription '{2}'\n\n * 400 DeleteMigrationServiceTaskNotAllowedInProgress - Migration service task '{0}' is currently in progress. To delete the task, please wait until the migration service task has completed or cancel the task manually, and then retry deleting the migration service task. Alternatively, use the force delete option to cancel ongoing operations and delete.\n\n * 400 InvalidStorageAccount - Invalid storage account: '{0}'. Only BlockBlobStorage kind is supported for premium tier.\n\n * 400 InvalidLocation - Invalid Location: '{0}'. Location should match selected Azure target location '{1}'.\n\n * 400 MigrationNotReadyForCancelError - Migration cannot be canceled as it is not in a cancelable state. Target server:'{0}', Target database: '{1}'.\n\n * 400 RestoreJobCompletedDuringCancel - Migration cannot be canceled as Restore Job was completed during the cancel process. Target server:'{0}', Target database: '{1}'.\n\n * 400 SqlVmGenericUserError - {0}\n\n * 400 RequestFailed - Request to the resource '{0}' failed. Error code : '{1}'. HTTP status code : '{2}'. Error message : '{3}'.\n\n * 400 InvalidContainerName - Invalid storage account container name: '{0}'. Container name 'backup' is not supported in SQL Managed Instance.\n\n * 400 DeleteMigrationNotAllowedMigrationInProgress - Database migration to the target resource '{0}' is currently in progress. To delete the migration, please wait until the migration has completed or cancel the migration manually, and then retry deleting the migration. Alternatively, use the force delete option to cancel ongoing operations and delete\n\n * 400 DeleteMigrationNotAllowedCancelInProgress - Database migration to the target resource '{0}' is currently being canceled. To delete the migration, please wait until the cancel operation is complete\n\n * 400 DeleteMigrationNotAllowedCutoverInProgress - DeleteMigrationNotAllowedCutoverInProgress\", \"Database migration to the target resource '{0}' is currently being cutover. To delete the migration, please wait until the cutover operation is complete\n\n * 400 DeleteMigrationNotAllowedDeleteInProgress - Database migration to the target resource '{0}' is currently deleting. Please wait until the delete operation is complete\n\n * 400 MigrationRetryNotAllowed - Migration is not in a retriable state. Migration must be in state WaitForRetry. Current state: '{0}', Target server:'{1}', Target database: '{2}'.\n\n * 400 MigrationStillValidating - Migration is still being validated. {0} cannot be performed. Target server:'{1}', Target database: '{2}'.\n\n * 400 IntegrationRuntimeDoesNotSupportSqlSchemaMigration - Current self-hosted IR '{0}' doesn't support SQL schema migration. Please download self-hosted IR version '{1}' or later.\n\n * 400 SourceTargetTablesCountMismatch - Source tables count '{0}' is not the same as target tables count '{1}'.\n\n * 400 InvalidTableNameFormat - Table name '{0}' is not in format of 'schema.table'.\n\n * 400 IntegrationRuntimeIsNotSelfHosted - Integration Runtime is not self-hosted for subscription '{0}' resource group '{1}' and name '{2}'\n\n * 400 MigrationNotReadyForCutoverError - Database '{0}' is not ready for Cutover operation\n\n * 400 CutoverFailedOrCancelled - Cutover failed or cancelled for database '{0}'. Error details: '{1}'\n\n * 400 MigrationCancelFailed - Cancel could not be performed on operation '{0}' for database '{1}'. This can happen if the migration with MigrationId '{0}' is already completed or canceled. Please check the migration for details.\n\n * 403 AccessDenied - Access denied.\n\n * 404 ResourceNotFound - The requested resource was not found.\n\n * 404 SubscriptionDoesNotExist - Subscription id does not exist.\n\n * 404 ResourceDoesNotExist - Resource does not exist.\n\n * 405 SubscriptionNotReady - Subscription is not in Ready state.\n\n * 409 OperationInProgress - Operation in progress on resource already.\n\n * 409 OperationCanceled - Operation Cancelled.\n\n * 409 ResourceAlreadyExists - Resource already exists.\n\n * 409 SubscriptionOperationInProgress - An operation on subscription is already in progress\n\n * 500 UnExpectedErrorOccurred - Unexpected error occurred.\n\n * 500 OperationTimeout - Operation timed out.\n\n * 500 GenericSystem - System Failure when calling other Resource Provider.\n\n * 500 CancelVmRestoreJobFailed - Failed to cancel VM restore job. Target server:'{0}', Target database: '{1}', Error details: '{2}'.\n\n * 500 AdfCleanupFailureAfterMigration - Failed to clean up ADF resources after migration has completed successfully. Target server:'{0}', Target database: '{1}', Error details: '{2}'.\n\n * 500 CancelMigrationFailed - Failed to cancel migration. Target server:'{0}', Target database: '{1}', Migration Id: '{2}', Error details: '{3}'."
          },
          "201": {
            "description": "Successfully created the Database Migration resource.",
            "schema": {
              "$ref": "#/definitions/DatabaseMigrationSqlVm"
            }
          }
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "tags": [
          "DatabaseMigrationsSqlVm"
        ],
        "description": "Delete Database Migration resource.",
        "operationId": "DatabaseMigrationsSqlVm_Delete",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          },
          {
            "name": "sqlVirtualMachineName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/TargetDbNameParameter"
          },
          {
            "name": "force",
            "in": "query",
            "description": "Optional force delete boolean. If this is provided as true, migration will be deleted even if active.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "kind",
            "in": "query",
            "description": "Optional migration kind",
            "required": false,
            "type": "string",
            "enum": [
              "SqlMi",
              "SqlVm",
              "SqlDb",
              "OracleToSqlDb",
              "SqlConnectServiceTask",
              "MongoToCosmosDbMongo",
              "OracleToSqlMi",
              "OracleToSqlVm"
            ]
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted the Database Migration resource."
          },
          "default": {
            "description": "*** Error Responses: ***\n\n * 400 InvalidParameterValue - An invalid value was provided for parameter '{0}'.\n\n * 400 EmptyRequiredRequestBody - The request body must not be empty.\n\n * 400 GenericUser - User Failure when calling other Resource Provider.\n\n * 400 OperationIdNotFound - Operation ID '{0}' not found.\n\n * 400 OperationTypeNotFound - Operation Type '{0}' not found.\n\n * 400 InvalidArgument - Invalid argument '{0}'.\n\n * 400 TestConnectionFailed - Failed to test connections using provided Integration Runtime. Error details: '{0}'\n\n * 400 CutoverNotAllowedMigrationCompleteError - Cutover is not allowed as migration for database '{0}' is already complete\n\n * 400 DatabaseListInputMissingError - Database list null or empty. Task type GetUserTables must contain database list as input.\n\n * 400 IntegrationRuntimeIsNotOnline - Integration Runtime '{0}' is not online for resource group '{1}' subscription '{2}'\n\n * 400 DeleteMigrationServiceTaskNotAllowedInProgress - Migration service task '{0}' is currently in progress. To delete the task, please wait until the migration service task has completed or cancel the task manually, and then retry deleting the migration service task. Alternatively, use the force delete option to cancel ongoing operations and delete.\n\n * 400 InvalidStorageAccount - Invalid storage account: '{0}'. Only BlockBlobStorage kind is supported for premium tier.\n\n * 400 InvalidLocation - Invalid Location: '{0}'. Location should match selected Azure target location '{1}'.\n\n * 400 MigrationNotReadyForCancelError - Migration cannot be canceled as it is not in a cancelable state. Target server:'{0}', Target database: '{1}'.\n\n * 400 RestoreJobCompletedDuringCancel - Migration cannot be canceled as Restore Job was completed during the cancel process. Target server:'{0}', Target database: '{1}'.\n\n * 400 SqlVmGenericUserError - {0}\n\n * 400 RequestFailed - Request to the resource '{0}' failed. Error code : '{1}'. HTTP status code : '{2}'. Error message : '{3}'.\n\n * 400 InvalidContainerName - Invalid storage account container name: '{0}'. Container name 'backup' is not supported in SQL Managed Instance.\n\n * 400 DeleteMigrationNotAllowedMigrationInProgress - Database migration to the target resource '{0}' is currently in progress. To delete the migration, please wait until the migration has completed or cancel the migration manually, and then retry deleting the migration. Alternatively, use the force delete option to cancel ongoing operations and delete\n\n * 400 DeleteMigrationNotAllowedCancelInProgress - Database migration to the target resource '{0}' is currently being canceled. To delete the migration, please wait until the cancel operation is complete\n\n * 400 DeleteMigrationNotAllowedCutoverInProgress - DeleteMigrationNotAllowedCutoverInProgress\", \"Database migration to the target resource '{0}' is currently being cutover. To delete the migration, please wait until the cutover operation is complete\n\n * 400 DeleteMigrationNotAllowedDeleteInProgress - Database migration to the target resource '{0}' is currently deleting. Please wait until the delete operation is complete\n\n * 400 MigrationRetryNotAllowed - Migration is not in a retriable state. Migration must be in state WaitForRetry. Current state: '{0}', Target server:'{1}', Target database: '{2}'.\n\n * 400 MigrationStillValidating - Migration is still being validated. {0} cannot be performed. Target server:'{1}', Target database: '{2}'.\n\n * 400 IntegrationRuntimeDoesNotSupportSqlSchemaMigration - Current self-hosted IR '{0}' doesn't support SQL schema migration. Please download self-hosted IR version '{1}' or later.\n\n * 400 SourceTargetTablesCountMismatch - Source tables count '{0}' is not the same as target tables count '{1}'.\n\n * 400 InvalidTableNameFormat - Table name '{0}' is not in format of 'schema.table'.\n\n * 400 IntegrationRuntimeIsNotSelfHosted - Integration Runtime is not self-hosted for subscription '{0}' resource group '{1}' and name '{2}'\n\n * 400 MigrationNotReadyForCutoverError - Database '{0}' is not ready for Cutover operation\n\n * 400 CutoverFailedOrCancelled - Cutover failed or cancelled for database '{0}'. Error details: '{1}'\n\n * 400 MigrationCancelFailed - Cancel could not be performed on operation '{0}' for database '{1}'. This can happen if the migration with MigrationId '{0}' is already completed or canceled. Please check the migration for details.\n\n * 403 AccessDenied - Access denied.\n\n * 404 ResourceNotFound - The requested resource was not found.\n\n * 404 SubscriptionDoesNotExist - Subscription id does not exist.\n\n * 404 ResourceDoesNotExist - Resource does not exist.\n\n * 405 SubscriptionNotReady - Subscription is not in Ready state.\n\n * 409 OperationInProgress - Operation in progress on resource already.\n\n * 409 OperationCanceled - Operation Cancelled.\n\n * 409 ResourceAlreadyExists - Resource already exists.\n\n * 409 SubscriptionOperationInProgress - An operation on subscription is already in progress\n\n * 500 UnExpectedErrorOccurred - Unexpected error occurred.\n\n * 500 OperationTimeout - Operation timed out.\n\n * 500 GenericSystem - System Failure when calling other Resource Provider.\n\n * 500 CancelVmRestoreJobFailed - Failed to cancel VM restore job. Target server:'{0}', Target database: '{1}', Error details: '{2}'.\n\n * 500 AdfCleanupFailureAfterMigration - Failed to clean up ADF resources after migration has completed successfully. Target server:'{0}', Target database: '{1}', Error details: '{2}'.\n\n * 500 CancelMigrationFailed - Failed to cancel migration. Target server:'{0}', Target database: '{1}', Migration Id: '{2}', Error details: '{3}'."
          },
          "202": {
            "description": "Deleting the Database Migration resource.",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          },
          "204": {
            "description": "The specified Database Migration resource does not exist."
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.SqlVirtualMachine/sqlVirtualMachines/{sqlVirtualMachineName}/providers/Microsoft.DataMigration/databaseMigrations": {
      "get": {
        "tags": [
          "DatabaseMigrationsSqlVm"
        ],
        "description": "Retrieve Database Migration in the scope.",
        "operationId": "DatabaseMigrationsSqlVm_ListByScope",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          },
          {
            "name": "sqlVirtualMachineName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Get all Database Migration resources in the scope.",
            "schema": {
              "$ref": "#/definitions/DatabaseMigrationSqlVmListResult"
            }
          },
          "default": {
            "description": "*** Error Responses: ***\n\n * 400 InvalidParameterValue - An invalid value was provided for parameter '{0}'.\n\n * 400 EmptyRequiredRequestBody - The request body must not be empty.\n\n * 400 GenericUser - User Failure when calling other Resource Provider.\n\n * 400 OperationIdNotFound - Operation ID '{0}' not found.\n\n * 400 OperationTypeNotFound - Operation Type '{0}' not found.\n\n * 400 InvalidArgument - Invalid argument '{0}'.\n\n * 400 TestConnectionFailed - Failed to test connections using provided Integration Runtime. Error details: '{0}'\n\n * 400 CutoverNotAllowedMigrationCompleteError - Cutover is not allowed as migration for database '{0}' is already complete\n\n * 400 DatabaseListInputMissingError - Database list null or empty. Task type GetUserTables must contain database list as input.\n\n * 400 IntegrationRuntimeIsNotOnline - Integration Runtime '{0}' is not online for resource group '{1}' subscription '{2}'\n\n * 400 DeleteMigrationServiceTaskNotAllowedInProgress - Migration service task '{0}' is currently in progress. To delete the task, please wait until the migration service task has completed or cancel the task manually, and then retry deleting the migration service task. Alternatively, use the force delete option to cancel ongoing operations and delete.\n\n * 400 InvalidStorageAccount - Invalid storage account: '{0}'. Only BlockBlobStorage kind is supported for premium tier.\n\n * 400 InvalidLocation - Invalid Location: '{0}'. Location should match selected Azure target location '{1}'.\n\n * 400 MigrationNotReadyForCancelError - Migration cannot be canceled as it is not in a cancelable state. Target server:'{0}', Target database: '{1}'.\n\n * 400 RestoreJobCompletedDuringCancel - Migration cannot be canceled as Restore Job was completed during the cancel process. Target server:'{0}', Target database: '{1}'.\n\n * 400 SqlVmGenericUserError - {0}\n\n * 400 RequestFailed - Request to the resource '{0}' failed. Error code : '{1}'. HTTP status code : '{2}'. Error message : '{3}'.\n\n * 400 InvalidContainerName - Invalid storage account container name: '{0}'. Container name 'backup' is not supported in SQL Managed Instance.\n\n * 400 DeleteMigrationNotAllowedMigrationInProgress - Database migration to the target resource '{0}' is currently in progress. To delete the migration, please wait until the migration has completed or cancel the migration manually, and then retry deleting the migration. Alternatively, use the force delete option to cancel ongoing operations and delete\n\n * 400 DeleteMigrationNotAllowedCancelInProgress - Database migration to the target resource '{0}' is currently being canceled. To delete the migration, please wait until the cancel operation is complete\n\n * 400 DeleteMigrationNotAllowedCutoverInProgress - DeleteMigrationNotAllowedCutoverInProgress\", \"Database migration to the target resource '{0}' is currently being cutover. To delete the migration, please wait until the cutover operation is complete\n\n * 400 DeleteMigrationNotAllowedDeleteInProgress - Database migration to the target resource '{0}' is currently deleting. Please wait until the delete operation is complete\n\n * 400 MigrationRetryNotAllowed - Migration is not in a retriable state. Migration must be in state WaitForRetry. Current state: '{0}', Target server:'{1}', Target database: '{2}'.\n\n * 400 MigrationStillValidating - Migration is still being validated. {0} cannot be performed. Target server:'{1}', Target database: '{2}'.\n\n * 400 IntegrationRuntimeDoesNotSupportSqlSchemaMigration - Current self-hosted IR '{0}' doesn't support SQL schema migration. Please download self-hosted IR version '{1}' or later.\n\n * 400 SourceTargetTablesCountMismatch - Source tables count '{0}' is not the same as target tables count '{1}'.\n\n * 400 InvalidTableNameFormat - Table name '{0}' is not in format of 'schema.table'.\n\n * 400 IntegrationRuntimeIsNotSelfHosted - Integration Runtime is not self-hosted for subscription '{0}' resource group '{1}' and name '{2}'\n\n * 400 MigrationNotReadyForCutoverError - Database '{0}' is not ready for Cutover operation\n\n * 400 CutoverFailedOrCancelled - Cutover failed or cancelled for database '{0}'. Error details: '{1}'\n\n * 400 MigrationCancelFailed - Cancel could not be performed on operation '{0}' for database '{1}'. This can happen if the migration with MigrationId '{0}' is already completed or canceled. Please check the migration for details.\n\n * 403 AccessDenied - Access denied.\n\n * 404 ResourceNotFound - The requested resource was not found.\n\n * 404 SubscriptionDoesNotExist - Subscription id does not exist.\n\n * 404 ResourceDoesNotExist - Resource does not exist.\n\n * 405 SubscriptionNotReady - Subscription is not in Ready state.\n\n * 409 OperationInProgress - Operation in progress on resource already.\n\n * 409 OperationCanceled - Operation Cancelled.\n\n * 409 ResourceAlreadyExists - Resource already exists.\n\n * 409 SubscriptionOperationInProgress - An operation on subscription is already in progress\n\n * 500 UnExpectedErrorOccurred - Unexpected error occurred.\n\n * 500 OperationTimeout - Operation timed out.\n\n * 500 GenericSystem - System Failure when calling other Resource Provider.\n\n * 500 CancelVmRestoreJobFailed - Failed to cancel VM restore job. Target server:'{0}', Target database: '{1}', Error details: '{2}'.\n\n * 500 AdfCleanupFailureAfterMigration - Failed to clean up ADF resources after migration has completed successfully. Target server:'{0}', Target database: '{1}', Error details: '{2}'.\n\n * 500 CancelMigrationFailed - Failed to cancel migration. Target server:'{0}', Target database: '{1}', Migration Id: '{2}', Error details: '{3}'."
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.SqlVirtualMachine/sqlVirtualMachines/{sqlVirtualMachineName}/providers/Microsoft.DataMigration/databaseMigrations/{targetDbName}/cancel": {
      "post": {
        "tags": [
          "DatabaseMigrationsSqlVm"
        ],
        "description": "Stop ongoing migration for the database.",
        "operationId": "DatabaseMigrationsSqlVm_cancel",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          },
          {
            "name": "sqlVirtualMachineName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/TargetDbNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MigrationOperationInput"
            }
          },
          {
            "name": "kind",
            "in": "query",
            "description": "Optional migration kind",
            "required": false,
            "type": "string",
            "enum": [
              "SqlMi",
              "SqlVm",
              "SqlDb",
              "OracleToSqlDb",
              "SqlConnectServiceTask",
              "MongoToCosmosDbMongo",
              "OracleToSqlMi",
              "OracleToSqlVm"
            ]
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted cancellation of ongoing migration.",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          },
          "default": {
            "description": "*** Error Responses: ***\n\n * 400 InvalidParameterValue - An invalid value was provided for parameter '{0}'.\n\n * 400 EmptyRequiredRequestBody - The request body must not be empty.\n\n * 400 GenericUser - User Failure when calling other Resource Provider.\n\n * 400 OperationIdNotFound - Operation ID '{0}' not found.\n\n * 400 OperationTypeNotFound - Operation Type '{0}' not found.\n\n * 400 InvalidArgument - Invalid argument '{0}'.\n\n * 400 TestConnectionFailed - Failed to test connections using provided Integration Runtime. Error details: '{0}'\n\n * 400 CutoverNotAllowedMigrationCompleteError - Cutover is not allowed as migration for database '{0}' is already complete\n\n * 400 DatabaseListInputMissingError - Database list null or empty. Task type GetUserTables must contain database list as input.\n\n * 400 IntegrationRuntimeIsNotOnline - Integration Runtime '{0}' is not online for resource group '{1}' subscription '{2}'\n\n * 400 DeleteMigrationServiceTaskNotAllowedInProgress - Migration service task '{0}' is currently in progress. To delete the task, please wait until the migration service task has completed or cancel the task manually, and then retry deleting the migration service task. Alternatively, use the force delete option to cancel ongoing operations and delete.\n\n * 400 InvalidStorageAccount - Invalid storage account: '{0}'. Only BlockBlobStorage kind is supported for premium tier.\n\n * 400 InvalidLocation - Invalid Location: '{0}'. Location should match selected Azure target location '{1}'.\n\n * 400 MigrationNotReadyForCancelError - Migration cannot be canceled as it is not in a cancelable state. Target server:'{0}', Target database: '{1}'.\n\n * 400 RestoreJobCompletedDuringCancel - Migration cannot be canceled as Restore Job was completed during the cancel process. Target server:'{0}', Target database: '{1}'.\n\n * 400 SqlVmGenericUserError - {0}\n\n * 400 RequestFailed - Request to the resource '{0}' failed. Error code : '{1}'. HTTP status code : '{2}'. Error message : '{3}'.\n\n * 400 InvalidContainerName - Invalid storage account container name: '{0}'. Container name 'backup' is not supported in SQL Managed Instance.\n\n * 400 DeleteMigrationNotAllowedMigrationInProgress - Database migration to the target resource '{0}' is currently in progress. To delete the migration, please wait until the migration has completed or cancel the migration manually, and then retry deleting the migration. Alternatively, use the force delete option to cancel ongoing operations and delete\n\n * 400 DeleteMigrationNotAllowedCancelInProgress - Database migration to the target resource '{0}' is currently being canceled. To delete the migration, please wait until the cancel operation is complete\n\n * 400 DeleteMigrationNotAllowedCutoverInProgress - DeleteMigrationNotAllowedCutoverInProgress\", \"Database migration to the target resource '{0}' is currently being cutover. To delete the migration, please wait until the cutover operation is complete\n\n * 400 DeleteMigrationNotAllowedDeleteInProgress - Database migration to the target resource '{0}' is currently deleting. Please wait until the delete operation is complete\n\n * 400 MigrationRetryNotAllowed - Migration is not in a retriable state. Migration must be in state WaitForRetry. Current state: '{0}', Target server:'{1}', Target database: '{2}'.\n\n * 400 MigrationStillValidating - Migration is still being validated. {0} cannot be performed. Target server:'{1}', Target database: '{2}'.\n\n * 400 IntegrationRuntimeDoesNotSupportSqlSchemaMigration - Current self-hosted IR '{0}' doesn't support SQL schema migration. Please download self-hosted IR version '{1}' or later.\n\n * 400 SourceTargetTablesCountMismatch - Source tables count '{0}' is not the same as target tables count '{1}'.\n\n * 400 InvalidTableNameFormat - Table name '{0}' is not in format of 'schema.table'.\n\n * 400 IntegrationRuntimeIsNotSelfHosted - Integration Runtime is not self-hosted for subscription '{0}' resource group '{1}' and name '{2}'\n\n * 400 MigrationNotReadyForCutoverError - Database '{0}' is not ready for Cutover operation\n\n * 400 CutoverFailedOrCancelled - Cutover failed or cancelled for database '{0}'. Error details: '{1}'\n\n * 400 MigrationCancelFailed - Cancel could not be performed on operation '{0}' for database '{1}'. This can happen if the migration with MigrationId '{0}' is already completed or canceled. Please check the migration for details.\n\n * 403 AccessDenied - Access denied.\n\n * 404 ResourceNotFound - The requested resource was not found.\n\n * 404 SubscriptionDoesNotExist - Subscription id does not exist.\n\n * 404 ResourceDoesNotExist - Resource does not exist.\n\n * 405 SubscriptionNotReady - Subscription is not in Ready state.\n\n * 409 OperationInProgress - Operation in progress on resource already.\n\n * 409 OperationCanceled - Operation Cancelled.\n\n * 409 ResourceAlreadyExists - Resource already exists.\n\n * 409 SubscriptionOperationInProgress - An operation on subscription is already in progress\n\n * 500 UnExpectedErrorOccurred - Unexpected error occurred.\n\n * 500 OperationTimeout - Operation timed out.\n\n * 500 GenericSystem - System Failure when calling other Resource Provider.\n\n * 500 CancelVmRestoreJobFailed - Failed to cancel VM restore job. Target server:'{0}', Target database: '{1}', Error details: '{2}'.\n\n * 500 AdfCleanupFailureAfterMigration - Failed to clean up ADF resources after migration has completed successfully. Target server:'{0}', Target database: '{1}', Error details: '{2}'.\n\n * 500 CancelMigrationFailed - Failed to cancel migration. Target server:'{0}', Target database: '{1}', Migration Id: '{2}', Error details: '{3}'."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.SqlVirtualMachine/sqlVirtualMachines/{sqlVirtualMachineName}/providers/Microsoft.DataMigration/databaseMigrations/{targetDbName}/cutover": {
      "post": {
        "tags": [
          "DatabaseMigrationsSqlVm"
        ],
        "description": "Cutover online migration operation for the database.",
        "operationId": "DatabaseMigrationsSqlVm_cutover",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          },
          {
            "name": "sqlVirtualMachineName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/TargetDbNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MigrationOperationInput"
            }
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted cutover request for ongoing migration.",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          },
          "default": {
            "description": "*** Error Responses: ***\n\n * 400 InvalidParameterValue - An invalid value was provided for parameter '{0}'.\n\n * 400 EmptyRequiredRequestBody - The request body must not be empty.\n\n * 400 GenericUser - User Failure when calling other Resource Provider.\n\n * 400 OperationIdNotFound - Operation ID '{0}' not found.\n\n * 400 OperationTypeNotFound - Operation Type '{0}' not found.\n\n * 400 InvalidArgument - Invalid argument '{0}'.\n\n * 400 TestConnectionFailed - Failed to test connections using provided Integration Runtime. Error details: '{0}'\n\n * 400 CutoverNotAllowedMigrationCompleteError - Cutover is not allowed as migration for database '{0}' is already complete\n\n * 400 DatabaseListInputMissingError - Database list null or empty. Task type GetUserTables must contain database list as input.\n\n * 400 IntegrationRuntimeIsNotOnline - Integration Runtime '{0}' is not online for resource group '{1}' subscription '{2}'\n\n * 400 DeleteMigrationServiceTaskNotAllowedInProgress - Migration service task '{0}' is currently in progress. To delete the task, please wait until the migration service task has completed or cancel the task manually, and then retry deleting the migration service task. Alternatively, use the force delete option to cancel ongoing operations and delete.\n\n * 400 InvalidStorageAccount - Invalid storage account: '{0}'. Only BlockBlobStorage kind is supported for premium tier.\n\n * 400 InvalidLocation - Invalid Location: '{0}'. Location should match selected Azure target location '{1}'.\n\n * 400 MigrationNotReadyForCancelError - Migration cannot be canceled as it is not in a cancelable state. Target server:'{0}', Target database: '{1}'.\n\n * 400 RestoreJobCompletedDuringCancel - Migration cannot be canceled as Restore Job was completed during the cancel process. Target server:'{0}', Target database: '{1}'.\n\n * 400 SqlVmGenericUserError - {0}\n\n * 400 RequestFailed - Request to the resource '{0}' failed. Error code : '{1}'. HTTP status code : '{2}'. Error message : '{3}'.\n\n * 400 InvalidContainerName - Invalid storage account container name: '{0}'. Container name 'backup' is not supported in SQL Managed Instance.\n\n * 400 DeleteMigrationNotAllowedMigrationInProgress - Database migration to the target resource '{0}' is currently in progress. To delete the migration, please wait until the migration has completed or cancel the migration manually, and then retry deleting the migration. Alternatively, use the force delete option to cancel ongoing operations and delete\n\n * 400 DeleteMigrationNotAllowedCancelInProgress - Database migration to the target resource '{0}' is currently being canceled. To delete the migration, please wait until the cancel operation is complete\n\n * 400 DeleteMigrationNotAllowedCutoverInProgress - DeleteMigrationNotAllowedCutoverInProgress\", \"Database migration to the target resource '{0}' is currently being cutover. To delete the migration, please wait until the cutover operation is complete\n\n * 400 DeleteMigrationNotAllowedDeleteInProgress - Database migration to the target resource '{0}' is currently deleting. Please wait until the delete operation is complete\n\n * 400 MigrationRetryNotAllowed - Migration is not in a retriable state. Migration must be in state WaitForRetry. Current state: '{0}', Target server:'{1}', Target database: '{2}'.\n\n * 400 MigrationStillValidating - Migration is still being validated. {0} cannot be performed. Target server:'{1}', Target database: '{2}'.\n\n * 400 IntegrationRuntimeDoesNotSupportSqlSchemaMigration - Current self-hosted IR '{0}' doesn't support SQL schema migration. Please download self-hosted IR version '{1}' or later.\n\n * 400 SourceTargetTablesCountMismatch - Source tables count '{0}' is not the same as target tables count '{1}'.\n\n * 400 InvalidTableNameFormat - Table name '{0}' is not in format of 'schema.table'.\n\n * 400 IntegrationRuntimeIsNotSelfHosted - Integration Runtime is not self-hosted for subscription '{0}' resource group '{1}' and name '{2}'\n\n * 400 MigrationNotReadyForCutoverError - Database '{0}' is not ready for Cutover operation\n\n * 400 CutoverFailedOrCancelled - Cutover failed or cancelled for database '{0}'. Error details: '{1}'\n\n * 400 MigrationCancelFailed - Cancel could not be performed on operation '{0}' for database '{1}'. This can happen if the migration with MigrationId '{0}' is already completed or canceled. Please check the migration for details.\n\n * 403 AccessDenied - Access denied.\n\n * 404 ResourceNotFound - The requested resource was not found.\n\n * 404 SubscriptionDoesNotExist - Subscription id does not exist.\n\n * 404 ResourceDoesNotExist - Resource does not exist.\n\n * 405 SubscriptionNotReady - Subscription is not in Ready state.\n\n * 409 OperationInProgress - Operation in progress on resource already.\n\n * 409 OperationCanceled - Operation Cancelled.\n\n * 409 ResourceAlreadyExists - Resource already exists.\n\n * 409 SubscriptionOperationInProgress - An operation on subscription is already in progress\n\n * 500 UnExpectedErrorOccurred - Unexpected error occurred.\n\n * 500 OperationTimeout - Operation timed out.\n\n * 500 GenericSystem - System Failure when calling other Resource Provider.\n\n * 500 CancelVmRestoreJobFailed - Failed to cancel VM restore job. Target server:'{0}', Target database: '{1}', Error details: '{2}'.\n\n * 500 AdfCleanupFailureAfterMigration - Failed to clean up ADF resources after migration has completed successfully. Target server:'{0}', Target database: '{1}', Error details: '{2}'.\n\n * 500 CancelMigrationFailed - Failed to cancel migration. Target server:'{0}', Target database: '{1}', Migration Id: '{2}', Error details: '{3}'."
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataMigration/sqlMigrationServices/{sqlMigrationServiceName}/tasks/{taskName}": {
      "get": {
        "tags": [
          "MigrationServiceTaskResource"
        ],
        "description": "Retrieve the Migration service task resource.",
        "operationId": "MigrationServiceTaskResource_Get",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/parameters/SqlMigrationServiceNameParameter"
          },
          {
            "name": "taskName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "taskOperationId",
            "in": "query",
            "description": "Optional migration service task operation ID. If this is provided, then details of migration service task operation for that ID are retrieved. If not provided (default), then details related to most recent or current operation are retrieved.",
            "required": false,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The child resources to include in the response.",
            "required": false,
            "type": "string"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the Migration service task resource.",
            "schema": {
              "$ref": "#/definitions/MigrationServiceTaskResource[MigrationServiceTaskResourceProperties]"
            }
          },
          "default": {
            "description": "*** Error Responses: ***\n\n * 400 InvalidParameterValue - An invalid value was provided for parameter '{0}'.\n\n * 400 EmptyRequiredRequestBody - The request body must not be empty.\n\n * 400 GenericUser - User Failure when calling other Resource Provider.\n\n * 400 OperationIdNotFound - Operation ID '{0}' not found.\n\n * 400 OperationTypeNotFound - Operation Type '{0}' not found.\n\n * 400 InvalidArgument - Invalid argument '{0}'.\n\n * 400 TestConnectionFailed - Failed to test connections using provided Integration Runtime. Error details: '{0}'\n\n * 400 CutoverNotAllowedMigrationCompleteError - Cutover is not allowed as migration for database '{0}' is already complete\n\n * 400 DatabaseListInputMissingError - Database list null or empty. Task type GetUserTables must contain database list as input.\n\n * 400 IntegrationRuntimeIsNotOnline - Integration Runtime '{0}' is not online for resource group '{1}' subscription '{2}'\n\n * 400 DeleteMigrationServiceTaskNotAllowedInProgress - Migration service task '{0}' is currently in progress. To delete the task, please wait until the migration service task has completed or cancel the task manually, and then retry deleting the migration service task. Alternatively, use the force delete option to cancel ongoing operations and delete.\n\n * 400 InvalidStorageAccount - Invalid storage account: '{0}'. Only BlockBlobStorage kind is supported for premium tier.\n\n * 400 InvalidLocation - Invalid Location: '{0}'. Location should match selected Azure target location '{1}'.\n\n * 400 MigrationNotReadyForCancelError - Migration cannot be canceled as it is not in a cancelable state. Target server:'{0}', Target database: '{1}'.\n\n * 400 RestoreJobCompletedDuringCancel - Migration cannot be canceled as Restore Job was completed during the cancel process. Target server:'{0}', Target database: '{1}'.\n\n * 400 SqlVmGenericUserError - {0}\n\n * 400 RequestFailed - Request to the resource '{0}' failed. Error code : '{1}'. HTTP status code : '{2}'. Error message : '{3}'.\n\n * 400 InvalidContainerName - Invalid storage account container name: '{0}'. Container name 'backup' is not supported in SQL Managed Instance.\n\n * 400 DeleteMigrationNotAllowedMigrationInProgress - Database migration to the target resource '{0}' is currently in progress. To delete the migration, please wait until the migration has completed or cancel the migration manually, and then retry deleting the migration. Alternatively, use the force delete option to cancel ongoing operations and delete\n\n * 400 DeleteMigrationNotAllowedCancelInProgress - Database migration to the target resource '{0}' is currently being canceled. To delete the migration, please wait until the cancel operation is complete\n\n * 400 DeleteMigrationNotAllowedCutoverInProgress - DeleteMigrationNotAllowedCutoverInProgress\", \"Database migration to the target resource '{0}' is currently being cutover. To delete the migration, please wait until the cutover operation is complete\n\n * 400 DeleteMigrationNotAllowedDeleteInProgress - Database migration to the target resource '{0}' is currently deleting. Please wait until the delete operation is complete\n\n * 400 MigrationRetryNotAllowed - Migration is not in a retriable state. Migration must be in state WaitForRetry. Current state: '{0}', Target server:'{1}', Target database: '{2}'.\n\n * 400 MigrationStillValidating - Migration is still being validated. {0} cannot be performed. Target server:'{1}', Target database: '{2}'.\n\n * 400 IntegrationRuntimeDoesNotSupportSqlSchemaMigration - Current self-hosted IR '{0}' doesn't support SQL schema migration. Please download self-hosted IR version '{1}' or later.\n\n * 400 SourceTargetTablesCountMismatch - Source tables count '{0}' is not the same as target tables count '{1}'.\n\n * 400 InvalidTableNameFormat - Table name '{0}' is not in format of 'schema.table'.\n\n * 400 IntegrationRuntimeIsNotSelfHosted - Integration Runtime is not self-hosted for subscription '{0}' resource group '{1}' and name '{2}'\n\n * 400 MigrationNotReadyForCutoverError - Database '{0}' is not ready for Cutover operation\n\n * 400 CutoverFailedOrCancelled - Cutover failed or cancelled for database '{0}'. Error details: '{1}'\n\n * 400 MigrationCancelFailed - Cancel could not be performed on operation '{0}' for database '{1}'. This can happen if the migration with MigrationId '{0}' is already completed or canceled. Please check the migration for details.\n\n * 403 AccessDenied - Access denied.\n\n * 404 ResourceNotFound - The requested resource was not found.\n\n * 404 SubscriptionDoesNotExist - Subscription id does not exist.\n\n * 404 ResourceDoesNotExist - Resource does not exist.\n\n * 405 SubscriptionNotReady - Subscription is not in Ready state.\n\n * 409 OperationInProgress - Operation in progress on resource already.\n\n * 409 OperationCanceled - Operation Cancelled.\n\n * 409 ResourceAlreadyExists - Resource already exists.\n\n * 409 SubscriptionOperationInProgress - An operation on subscription is already in progress\n\n * 500 UnExpectedErrorOccurred - Unexpected error occurred.\n\n * 500 OperationTimeout - Operation timed out.\n\n * 500 GenericSystem - System Failure when calling other Resource Provider.\n\n * 500 CancelVmRestoreJobFailed - Failed to cancel VM restore job. Target server:'{0}', Target database: '{1}', Error details: '{2}'.\n\n * 500 AdfCleanupFailureAfterMigration - Failed to clean up ADF resources after migration has completed successfully. Target server:'{0}', Target database: '{1}', Error details: '{2}'.\n\n * 500 CancelMigrationFailed - Failed to cancel migration. Target server:'{0}', Target database: '{1}', Migration Id: '{2}', Error details: '{3}'."
          }
        }
      },
      "put": {
        "tags": [
          "MigrationServiceTaskResource"
        ],
        "description": "Create or Update migration service task resource.",
        "operationId": "MigrationServiceTaskResource_CreateOrUpdate",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/parameters/SqlMigrationServiceNameParameter"
          },
          {
            "name": "taskName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Details of migration service task resource.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MigrationServiceTaskResource[MigrationServiceTaskResourceProperties]"
            }
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully updated the migration service task resource.",
            "schema": {
              "$ref": "#/definitions/MigrationServiceTaskResource[MigrationServiceTaskResourceProperties]"
            }
          },
          "default": {
            "description": "*** Error Responses: ***\n\n * 400 InvalidParameterValue - An invalid value was provided for parameter '{0}'.\n\n * 400 EmptyRequiredRequestBody - The request body must not be empty.\n\n * 400 GenericUser - User Failure when calling other Resource Provider.\n\n * 400 OperationIdNotFound - Operation ID '{0}' not found.\n\n * 400 OperationTypeNotFound - Operation Type '{0}' not found.\n\n * 400 InvalidArgument - Invalid argument '{0}'.\n\n * 400 TestConnectionFailed - Failed to test connections using provided Integration Runtime. Error details: '{0}'\n\n * 400 CutoverNotAllowedMigrationCompleteError - Cutover is not allowed as migration for database '{0}' is already complete\n\n * 400 DatabaseListInputMissingError - Database list null or empty. Task type GetUserTables must contain database list as input.\n\n * 400 IntegrationRuntimeIsNotOnline - Integration Runtime '{0}' is not online for resource group '{1}' subscription '{2}'\n\n * 400 DeleteMigrationServiceTaskNotAllowedInProgress - Migration service task '{0}' is currently in progress. To delete the task, please wait until the migration service task has completed or cancel the task manually, and then retry deleting the migration service task. Alternatively, use the force delete option to cancel ongoing operations and delete.\n\n * 400 InvalidStorageAccount - Invalid storage account: '{0}'. Only BlockBlobStorage kind is supported for premium tier.\n\n * 400 InvalidLocation - Invalid Location: '{0}'. Location should match selected Azure target location '{1}'.\n\n * 400 MigrationNotReadyForCancelError - Migration cannot be canceled as it is not in a cancelable state. Target server:'{0}', Target database: '{1}'.\n\n * 400 RestoreJobCompletedDuringCancel - Migration cannot be canceled as Restore Job was completed during the cancel process. Target server:'{0}', Target database: '{1}'.\n\n * 400 SqlVmGenericUserError - {0}\n\n * 400 RequestFailed - Request to the resource '{0}' failed. Error code : '{1}'. HTTP status code : '{2}'. Error message : '{3}'.\n\n * 400 InvalidContainerName - Invalid storage account container name: '{0}'. Container name 'backup' is not supported in SQL Managed Instance.\n\n * 400 DeleteMigrationNotAllowedMigrationInProgress - Database migration to the target resource '{0}' is currently in progress. To delete the migration, please wait until the migration has completed or cancel the migration manually, and then retry deleting the migration. Alternatively, use the force delete option to cancel ongoing operations and delete\n\n * 400 DeleteMigrationNotAllowedCancelInProgress - Database migration to the target resource '{0}' is currently being canceled. To delete the migration, please wait until the cancel operation is complete\n\n * 400 DeleteMigrationNotAllowedCutoverInProgress - DeleteMigrationNotAllowedCutoverInProgress\", \"Database migration to the target resource '{0}' is currently being cutover. To delete the migration, please wait until the cutover operation is complete\n\n * 400 DeleteMigrationNotAllowedDeleteInProgress - Database migration to the target resource '{0}' is currently deleting. Please wait until the delete operation is complete\n\n * 400 MigrationRetryNotAllowed - Migration is not in a retriable state. Migration must be in state WaitForRetry. Current state: '{0}', Target server:'{1}', Target database: '{2}'.\n\n * 400 MigrationStillValidating - Migration is still being validated. {0} cannot be performed. Target server:'{1}', Target database: '{2}'.\n\n * 400 IntegrationRuntimeDoesNotSupportSqlSchemaMigration - Current self-hosted IR '{0}' doesn't support SQL schema migration. Please download self-hosted IR version '{1}' or later.\n\n * 400 SourceTargetTablesCountMismatch - Source tables count '{0}' is not the same as target tables count '{1}'.\n\n * 400 InvalidTableNameFormat - Table name '{0}' is not in format of 'schema.table'.\n\n * 400 IntegrationRuntimeIsNotSelfHosted - Integration Runtime is not self-hosted for subscription '{0}' resource group '{1}' and name '{2}'\n\n * 400 MigrationNotReadyForCutoverError - Database '{0}' is not ready for Cutover operation\n\n * 400 CutoverFailedOrCancelled - Cutover failed or cancelled for database '{0}'. Error details: '{1}'\n\n * 400 MigrationCancelFailed - Cancel could not be performed on operation '{0}' for database '{1}'. This can happen if the migration with MigrationId '{0}' is already completed or canceled. Please check the migration for details.\n\n * 403 AccessDenied - Access denied.\n\n * 404 ResourceNotFound - The requested resource was not found.\n\n * 404 SubscriptionDoesNotExist - Subscription id does not exist.\n\n * 404 ResourceDoesNotExist - Resource does not exist.\n\n * 405 SubscriptionNotReady - Subscription is not in Ready state.\n\n * 409 OperationInProgress - Operation in progress on resource already.\n\n * 409 OperationCanceled - Operation Cancelled.\n\n * 409 ResourceAlreadyExists - Resource already exists.\n\n * 409 SubscriptionOperationInProgress - An operation on subscription is already in progress\n\n * 500 UnExpectedErrorOccurred - Unexpected error occurred.\n\n * 500 OperationTimeout - Operation timed out.\n\n * 500 GenericSystem - System Failure when calling other Resource Provider.\n\n * 500 CancelVmRestoreJobFailed - Failed to cancel VM restore job. Target server:'{0}', Target database: '{1}', Error details: '{2}'.\n\n * 500 AdfCleanupFailureAfterMigration - Failed to clean up ADF resources after migration has completed successfully. Target server:'{0}', Target database: '{1}', Error details: '{2}'.\n\n * 500 CancelMigrationFailed - Failed to cancel migration. Target server:'{0}', Target database: '{1}', Migration Id: '{2}', Error details: '{3}'."
          },
          "201": {
            "description": "Successfully created the migration service task resource.",
            "schema": {
              "$ref": "#/definitions/MigrationServiceTaskResource[MigrationServiceTaskResourceProperties]"
            }
          }
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "tags": [
          "MigrationServiceTaskResource"
        ],
        "description": "Delete Migration Service task resource.",
        "operationId": "MigrationServiceTaskResource_Delete",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/parameters/SqlMigrationServiceNameParameter"
          },
          {
            "name": "taskName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "force",
            "in": "query",
            "description": "Optional force delete boolean. If this is provided as true, migration service task will be deleted even if active.",
            "required": false,
            "type": "boolean"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted the Migration service task resource."
          },
          "default": {
            "description": "*** Error Responses: ***\n\n * 400 InvalidParameterValue - An invalid value was provided for parameter '{0}'.\n\n * 400 EmptyRequiredRequestBody - The request body must not be empty.\n\n * 400 GenericUser - User Failure when calling other Resource Provider.\n\n * 400 OperationIdNotFound - Operation ID '{0}' not found.\n\n * 400 OperationTypeNotFound - Operation Type '{0}' not found.\n\n * 400 InvalidArgument - Invalid argument '{0}'.\n\n * 400 TestConnectionFailed - Failed to test connections using provided Integration Runtime. Error details: '{0}'\n\n * 400 CutoverNotAllowedMigrationCompleteError - Cutover is not allowed as migration for database '{0}' is already complete\n\n * 400 DatabaseListInputMissingError - Database list null or empty. Task type GetUserTables must contain database list as input.\n\n * 400 IntegrationRuntimeIsNotOnline - Integration Runtime '{0}' is not online for resource group '{1}' subscription '{2}'\n\n * 400 DeleteMigrationServiceTaskNotAllowedInProgress - Migration service task '{0}' is currently in progress. To delete the task, please wait until the migration service task has completed or cancel the task manually, and then retry deleting the migration service task. Alternatively, use the force delete option to cancel ongoing operations and delete.\n\n * 400 InvalidStorageAccount - Invalid storage account: '{0}'. Only BlockBlobStorage kind is supported for premium tier.\n\n * 400 InvalidLocation - Invalid Location: '{0}'. Location should match selected Azure target location '{1}'.\n\n * 400 MigrationNotReadyForCancelError - Migration cannot be canceled as it is not in a cancelable state. Target server:'{0}', Target database: '{1}'.\n\n * 400 RestoreJobCompletedDuringCancel - Migration cannot be canceled as Restore Job was completed during the cancel process. Target server:'{0}', Target database: '{1}'.\n\n * 400 SqlVmGenericUserError - {0}\n\n * 400 RequestFailed - Request to the resource '{0}' failed. Error code : '{1}'. HTTP status code : '{2}'. Error message : '{3}'.\n\n * 400 InvalidContainerName - Invalid storage account container name: '{0}'. Container name 'backup' is not supported in SQL Managed Instance.\n\n * 400 DeleteMigrationNotAllowedMigrationInProgress - Database migration to the target resource '{0}' is currently in progress. To delete the migration, please wait until the migration has completed or cancel the migration manually, and then retry deleting the migration. Alternatively, use the force delete option to cancel ongoing operations and delete\n\n * 400 DeleteMigrationNotAllowedCancelInProgress - Database migration to the target resource '{0}' is currently being canceled. To delete the migration, please wait until the cancel operation is complete\n\n * 400 DeleteMigrationNotAllowedCutoverInProgress - DeleteMigrationNotAllowedCutoverInProgress\", \"Database migration to the target resource '{0}' is currently being cutover. To delete the migration, please wait until the cutover operation is complete\n\n * 400 DeleteMigrationNotAllowedDeleteInProgress - Database migration to the target resource '{0}' is currently deleting. Please wait until the delete operation is complete\n\n * 400 MigrationRetryNotAllowed - Migration is not in a retriable state. Migration must be in state WaitForRetry. Current state: '{0}', Target server:'{1}', Target database: '{2}'.\n\n * 400 MigrationStillValidating - Migration is still being validated. {0} cannot be performed. Target server:'{1}', Target database: '{2}'.\n\n * 400 IntegrationRuntimeDoesNotSupportSqlSchemaMigration - Current self-hosted IR '{0}' doesn't support SQL schema migration. Please download self-hosted IR version '{1}' or later.\n\n * 400 SourceTargetTablesCountMismatch - Source tables count '{0}' is not the same as target tables count '{1}'.\n\n * 400 InvalidTableNameFormat - Table name '{0}' is not in format of 'schema.table'.\n\n * 400 IntegrationRuntimeIsNotSelfHosted - Integration Runtime is not self-hosted for subscription '{0}' resource group '{1}' and name '{2}'\n\n * 400 MigrationNotReadyForCutoverError - Database '{0}' is not ready for Cutover operation\n\n * 400 CutoverFailedOrCancelled - Cutover failed or cancelled for database '{0}'. Error details: '{1}'\n\n * 400 MigrationCancelFailed - Cancel could not be performed on operation '{0}' for database '{1}'. This can happen if the migration with MigrationId '{0}' is already completed or canceled. Please check the migration for details.\n\n * 403 AccessDenied - Access denied.\n\n * 404 ResourceNotFound - The requested resource was not found.\n\n * 404 SubscriptionDoesNotExist - Subscription id does not exist.\n\n * 404 ResourceDoesNotExist - Resource does not exist.\n\n * 405 SubscriptionNotReady - Subscription is not in Ready state.\n\n * 409 OperationInProgress - Operation in progress on resource already.\n\n * 409 OperationCanceled - Operation Cancelled.\n\n * 409 ResourceAlreadyExists - Resource already exists.\n\n * 409 SubscriptionOperationInProgress - An operation on subscription is already in progress\n\n * 500 UnExpectedErrorOccurred - Unexpected error occurred.\n\n * 500 OperationTimeout - Operation timed out.\n\n * 500 GenericSystem - System Failure when calling other Resource Provider.\n\n * 500 CancelVmRestoreJobFailed - Failed to cancel VM restore job. Target server:'{0}', Target database: '{1}', Error details: '{2}'.\n\n * 500 AdfCleanupFailureAfterMigration - Failed to clean up ADF resources after migration has completed successfully. Target server:'{0}', Target database: '{1}', Error details: '{2}'.\n\n * 500 CancelMigrationFailed - Failed to cancel migration. Target server:'{0}', Target database: '{1}', Migration Id: '{2}', Error details: '{3}'."
          },
          "202": {
            "description": "Deleting the Migration service task resource.",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          },
          "204": {
            "description": "The specified Migration service task resource does not exist."
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/providers/Microsoft.DataMigration/operations": {
      "get": {
        "tags": [
          "Operations"
        ],
        "description": "Lists all of the available SQL Migration REST API operations.",
        "operationId": "Operations_List",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved operations.",
            "schema": {
              "$ref": "#/definitions/OperationListResult"
            }
          },
          "default": {
            "description": "*** Error Responses: ***"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataMigration/sqlMigrationServices/{sqlMigrationServiceName}": {
      "get": {
        "tags": [
          "SqlMigrationServices"
        ],
        "description": "Retrieve the Migration Service.",
        "operationId": "SqlMigrationServices_Get",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/parameters/SqlMigrationServiceNameParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the Migration Service.",
            "schema": {
              "$ref": "#/definitions/SqlMigrationService"
            }
          },
          "default": {
            "description": "*** Error Responses: ***\n\n * 400 InvalidParameterValue - An invalid value was provided for parameter '{0}'.\n\n * 400 EmptyRequiredRequestBody - The request body must not be empty.\n\n * 400 GenericUser - User Failure when calling other Resource Provider.\n\n * 400 OperationIdNotFound - Operation ID '{0}' not found.\n\n * 400 OperationTypeNotFound - Operation Type '{0}' not found.\n\n * 400 InvalidArgument - Invalid argument '{0}'.\n\n * 400 RegenerateAuthenticationKeyNameInvalid - Key name '{0}' is invalid. Valid key names are authKey1 and authKey2.\n\n * 400 DeleteServiceNotAllowed - One or more migrations attached to the migration service '{0}' are currently running. To delete the migration service, please wait until all migrations have completed or cancel the migrations manually and retry deleting the service. Running migrations are: '{1}'\n\n * 400 IntegrationRuntimeIsNotSelfHosted - Integration Runtime is not self-hosted for subscription '{0}' resource group '{1}' and name '{2}'\n\n * 400 SerializationError - There was an error while processing response from RP Service : '{0}'\n\n * 400 ServiceNameInvalid - Service name '{0}' is not valid. Please refer https://aka.ms/dmsv2naming for naming rules.\n\n * 400 IntegrationRuntimeIsNotOnline - Integration Runtime '{0}' is not online for resource group '{1}' subscription '{2}'\n\n * 403 AccessDenied - Access denied.\n\n * 404 ResourceNotFound - The requested resource was not found.\n\n * 404 SubscriptionDoesNotExist - Subscription id does not exist.\n\n * 404 ResourceDoesNotExist - Resource does not exist.\n\n * 405 SubscriptionNotReady - Subscription is not in Ready state.\n\n * 409 OperationInProgress - Operation in progress on resource already.\n\n * 409 OperationCanceled - Operation Cancelled.\n\n * 409 ResourceAlreadyExists - Resource already exists.\n\n * 409 SubscriptionOperationInProgress - An operation on subscription is already in progress\n\n * 500 UnExpectedErrorOccurred - Unexpected error occurred.\n\n * 500 OperationTimeout - Operation timed out.\n\n * 500 GenericSystem - System Failure when calling other Resource Provider.\n\n * 500 NoAdfInRegion - \n\n * 500 DeleteServiceFailed - The migration service '{0}' deletion operation failed at stage '{1}'. The list of error messages are : '{2}'"
          }
        }
      },
      "put": {
        "tags": [
          "SqlMigrationServices"
        ],
        "description": "Create or Update SQL Migration Service.",
        "operationId": "SqlMigrationServices_CreateOrUpdate",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/parameters/SqlMigrationServiceNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Details of SqlMigrationService resource.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SqlMigrationService"
            }
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully updated the SQL migration Service.",
            "schema": {
              "$ref": "#/definitions/SqlMigrationService"
            }
          },
          "default": {
            "description": "*** Error Responses: ***\n\n * 400 InvalidParameterValue - An invalid value was provided for parameter '{0}'.\n\n * 400 EmptyRequiredRequestBody - The request body must not be empty.\n\n * 400 GenericUser - User Failure when calling other Resource Provider.\n\n * 400 OperationIdNotFound - Operation ID '{0}' not found.\n\n * 400 OperationTypeNotFound - Operation Type '{0}' not found.\n\n * 400 InvalidArgument - Invalid argument '{0}'.\n\n * 400 RegenerateAuthenticationKeyNameInvalid - Key name '{0}' is invalid. Valid key names are authKey1 and authKey2.\n\n * 400 DeleteServiceNotAllowed - One or more migrations attached to the migration service '{0}' are currently running. To delete the migration service, please wait until all migrations have completed or cancel the migrations manually and retry deleting the service. Running migrations are: '{1}'\n\n * 400 IntegrationRuntimeIsNotSelfHosted - Integration Runtime is not self-hosted for subscription '{0}' resource group '{1}' and name '{2}'\n\n * 400 SerializationError - There was an error while processing response from RP Service : '{0}'\n\n * 400 ServiceNameInvalid - Service name '{0}' is not valid. Please refer https://aka.ms/dmsv2naming for naming rules.\n\n * 400 IntegrationRuntimeIsNotOnline - Integration Runtime '{0}' is not online for resource group '{1}' subscription '{2}'\n\n * 403 AccessDenied - Access denied.\n\n * 404 ResourceNotFound - The requested resource was not found.\n\n * 404 SubscriptionDoesNotExist - Subscription id does not exist.\n\n * 404 ResourceDoesNotExist - Resource does not exist.\n\n * 405 SubscriptionNotReady - Subscription is not in Ready state.\n\n * 409 OperationInProgress - Operation in progress on resource already.\n\n * 409 OperationCanceled - Operation Cancelled.\n\n * 409 ResourceAlreadyExists - Resource already exists.\n\n * 409 SubscriptionOperationInProgress - An operation on subscription is already in progress\n\n * 500 UnExpectedErrorOccurred - Unexpected error occurred.\n\n * 500 OperationTimeout - Operation timed out.\n\n * 500 GenericSystem - System Failure when calling other Resource Provider.\n\n * 500 NoAdfInRegion - \n\n * 500 DeleteServiceFailed - The migration service '{0}' deletion operation failed at stage '{1}'. The list of error messages are : '{2}'"
          },
          "201": {
            "description": "Successfully created the SQL migration Service.",
            "schema": {
              "$ref": "#/definitions/SqlMigrationService"
            }
          }
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "tags": [
          "SqlMigrationServices"
        ],
        "description": "Delete SQL Migration Service.",
        "operationId": "SqlMigrationServices_Delete",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/parameters/SqlMigrationServiceNameParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted the SQL migration Service."
          },
          "default": {
            "description": "*** Error Responses: ***\n\n * 400 InvalidParameterValue - An invalid value was provided for parameter '{0}'.\n\n * 400 EmptyRequiredRequestBody - The request body must not be empty.\n\n * 400 GenericUser - User Failure when calling other Resource Provider.\n\n * 400 OperationIdNotFound - Operation ID '{0}' not found.\n\n * 400 OperationTypeNotFound - Operation Type '{0}' not found.\n\n * 400 InvalidArgument - Invalid argument '{0}'.\n\n * 400 RegenerateAuthenticationKeyNameInvalid - Key name '{0}' is invalid. Valid key names are authKey1 and authKey2.\n\n * 400 DeleteServiceNotAllowed - One or more migrations attached to the migration service '{0}' are currently running. To delete the migration service, please wait until all migrations have completed or cancel the migrations manually and retry deleting the service. Running migrations are: '{1}'\n\n * 400 IntegrationRuntimeIsNotSelfHosted - Integration Runtime is not self-hosted for subscription '{0}' resource group '{1}' and name '{2}'\n\n * 400 SerializationError - There was an error while processing response from RP Service : '{0}'\n\n * 400 ServiceNameInvalid - Service name '{0}' is not valid. Please refer https://aka.ms/dmsv2naming for naming rules.\n\n * 400 IntegrationRuntimeIsNotOnline - Integration Runtime '{0}' is not online for resource group '{1}' subscription '{2}'\n\n * 403 AccessDenied - Access denied.\n\n * 404 ResourceNotFound - The requested resource was not found.\n\n * 404 SubscriptionDoesNotExist - Subscription id does not exist.\n\n * 404 ResourceDoesNotExist - Resource does not exist.\n\n * 405 SubscriptionNotReady - Subscription is not in Ready state.\n\n * 409 OperationInProgress - Operation in progress on resource already.\n\n * 409 OperationCanceled - Operation Cancelled.\n\n * 409 ResourceAlreadyExists - Resource already exists.\n\n * 409 SubscriptionOperationInProgress - An operation on subscription is already in progress\n\n * 500 UnExpectedErrorOccurred - Unexpected error occurred.\n\n * 500 OperationTimeout - Operation timed out.\n\n * 500 GenericSystem - System Failure when calling other Resource Provider.\n\n * 500 NoAdfInRegion - \n\n * 500 DeleteServiceFailed - The migration service '{0}' deletion operation failed at stage '{1}'. The list of error messages are : '{2}'"
          },
          "202": {
            "description": "Deleting the SQL migration Service.",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          },
          "204": {
            "description": "The specified SQL migration Service does not exist."
          }
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "tags": [
          "SqlMigrationServices"
        ],
        "description": "Update SQL Migration Service.",
        "operationId": "SqlMigrationServices_Update",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/parameters/SqlMigrationServiceNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Details of SqlMigrationService resource.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SqlMigrationServiceUpdate"
            }
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully updated the SQL migration Service.",
            "schema": {
              "$ref": "#/definitions/SqlMigrationService"
            }
          },
          "default": {
            "description": "*** Error Responses: ***\n\n * 400 InvalidParameterValue - An invalid value was provided for parameter '{0}'.\n\n * 400 EmptyRequiredRequestBody - The request body must not be empty.\n\n * 400 GenericUser - User Failure when calling other Resource Provider.\n\n * 400 OperationIdNotFound - Operation ID '{0}' not found.\n\n * 400 OperationTypeNotFound - Operation Type '{0}' not found.\n\n * 400 InvalidArgument - Invalid argument '{0}'.\n\n * 400 RegenerateAuthenticationKeyNameInvalid - Key name '{0}' is invalid. Valid key names are authKey1 and authKey2.\n\n * 400 DeleteServiceNotAllowed - One or more migrations attached to the migration service '{0}' are currently running. To delete the migration service, please wait until all migrations have completed or cancel the migrations manually and retry deleting the service. Running migrations are: '{1}'\n\n * 400 IntegrationRuntimeIsNotSelfHosted - Integration Runtime is not self-hosted for subscription '{0}' resource group '{1}' and name '{2}'\n\n * 400 SerializationError - There was an error while processing response from RP Service : '{0}'\n\n * 400 ServiceNameInvalid - Service name '{0}' is not valid. Please refer https://aka.ms/dmsv2naming for naming rules.\n\n * 400 IntegrationRuntimeIsNotOnline - Integration Runtime '{0}' is not online for resource group '{1}' subscription '{2}'\n\n * 403 AccessDenied - Access denied.\n\n * 404 ResourceNotFound - The requested resource was not found.\n\n * 404 SubscriptionDoesNotExist - Subscription id does not exist.\n\n * 404 ResourceDoesNotExist - Resource does not exist.\n\n * 405 SubscriptionNotReady - Subscription is not in Ready state.\n\n * 409 OperationInProgress - Operation in progress on resource already.\n\n * 409 OperationCanceled - Operation Cancelled.\n\n * 409 ResourceAlreadyExists - Resource already exists.\n\n * 409 SubscriptionOperationInProgress - An operation on subscription is already in progress\n\n * 500 UnExpectedErrorOccurred - Unexpected error occurred.\n\n * 500 OperationTimeout - Operation timed out.\n\n * 500 GenericSystem - System Failure when calling other Resource Provider.\n\n * 500 NoAdfInRegion - \n\n * 500 DeleteServiceFailed - The migration service '{0}' deletion operation failed at stage '{1}'. The list of error messages are : '{2}'"
          },
          "201": {
            "description": "Successfully created the SQL migration Service.",
            "schema": {
              "$ref": "#/definitions/SqlMigrationService"
            }
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataMigration/sqlMigrationServices": {
      "get": {
        "tags": [
          "SqlMigrationServices"
        ],
        "description": "Retrieve all SQL migration services in the resource group.",
        "operationId": "SqlMigrationServices_ListByResourceGroup",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the Migration SErvices in the resource group.",
            "schema": {
              "$ref": "#/definitions/SqlMigrationListResult"
            }
          },
          "default": {
            "description": "*** Error Responses: ***\n\n * 400 InvalidParameterValue - An invalid value was provided for parameter '{0}'.\n\n * 400 EmptyRequiredRequestBody - The request body must not be empty.\n\n * 400 GenericUser - User Failure when calling other Resource Provider.\n\n * 400 OperationIdNotFound - Operation ID '{0}' not found.\n\n * 400 OperationTypeNotFound - Operation Type '{0}' not found.\n\n * 400 InvalidArgument - Invalid argument '{0}'.\n\n * 400 RegenerateAuthenticationKeyNameInvalid - Key name '{0}' is invalid. Valid key names are authKey1 and authKey2.\n\n * 400 DeleteServiceNotAllowed - One or more migrations attached to the migration service '{0}' are currently running. To delete the migration service, please wait until all migrations have completed or cancel the migrations manually and retry deleting the service. Running migrations are: '{1}'\n\n * 400 IntegrationRuntimeIsNotSelfHosted - Integration Runtime is not self-hosted for subscription '{0}' resource group '{1}' and name '{2}'\n\n * 400 SerializationError - There was an error while processing response from RP Service : '{0}'\n\n * 400 ServiceNameInvalid - Service name '{0}' is not valid. Please refer https://aka.ms/dmsv2naming for naming rules.\n\n * 400 IntegrationRuntimeIsNotOnline - Integration Runtime '{0}' is not online for resource group '{1}' subscription '{2}'\n\n * 403 AccessDenied - Access denied.\n\n * 404 ResourceNotFound - The requested resource was not found.\n\n * 404 SubscriptionDoesNotExist - Subscription id does not exist.\n\n * 404 ResourceDoesNotExist - Resource does not exist.\n\n * 405 SubscriptionNotReady - Subscription is not in Ready state.\n\n * 409 OperationInProgress - Operation in progress on resource already.\n\n * 409 OperationCanceled - Operation Cancelled.\n\n * 409 ResourceAlreadyExists - Resource already exists.\n\n * 409 SubscriptionOperationInProgress - An operation on subscription is already in progress\n\n * 500 UnExpectedErrorOccurred - Unexpected error occurred.\n\n * 500 OperationTimeout - Operation timed out.\n\n * 500 GenericSystem - System Failure when calling other Resource Provider.\n\n * 500 NoAdfInRegion - \n\n * 500 DeleteServiceFailed - The migration service '{0}' deletion operation failed at stage '{1}'. The list of error messages are : '{2}'"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataMigration/sqlMigrationServices/{sqlMigrationServiceName}/listAuthKeys": {
      "post": {
        "tags": [
          "SqlMigrationServices"
        ],
        "description": "Retrieve the List of Authentication Keys for Self Hosted Integration Runtime.",
        "operationId": "SqlMigrationServices_listAuthKeys",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/parameters/SqlMigrationServiceNameParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully return of List Authentication Keys.",
            "schema": {
              "$ref": "#/definitions/AuthenticationKeys"
            }
          },
          "default": {
            "description": "*** Error Responses: ***\n\n * 400 InvalidParameterValue - An invalid value was provided for parameter '{0}'.\n\n * 400 EmptyRequiredRequestBody - The request body must not be empty.\n\n * 400 GenericUser - User Failure when calling other Resource Provider.\n\n * 400 OperationIdNotFound - Operation ID '{0}' not found.\n\n * 400 OperationTypeNotFound - Operation Type '{0}' not found.\n\n * 400 InvalidArgument - Invalid argument '{0}'.\n\n * 400 RegenerateAuthenticationKeyNameInvalid - Key name '{0}' is invalid. Valid key names are authKey1 and authKey2.\n\n * 400 DeleteServiceNotAllowed - One or more migrations attached to the migration service '{0}' are currently running. To delete the migration service, please wait until all migrations have completed or cancel the migrations manually and retry deleting the service. Running migrations are: '{1}'\n\n * 400 IntegrationRuntimeIsNotSelfHosted - Integration Runtime is not self-hosted for subscription '{0}' resource group '{1}' and name '{2}'\n\n * 400 SerializationError - There was an error while processing response from RP Service : '{0}'\n\n * 400 ServiceNameInvalid - Service name '{0}' is not valid. Please refer https://aka.ms/dmsv2naming for naming rules.\n\n * 400 IntegrationRuntimeIsNotOnline - Integration Runtime '{0}' is not online for resource group '{1}' subscription '{2}'\n\n * 403 AccessDenied - Access denied.\n\n * 404 ResourceNotFound - The requested resource was not found.\n\n * 404 SubscriptionDoesNotExist - Subscription id does not exist.\n\n * 404 ResourceDoesNotExist - Resource does not exist.\n\n * 405 SubscriptionNotReady - Subscription is not in Ready state.\n\n * 409 OperationInProgress - Operation in progress on resource already.\n\n * 409 OperationCanceled - Operation Cancelled.\n\n * 409 ResourceAlreadyExists - Resource already exists.\n\n * 409 SubscriptionOperationInProgress - An operation on subscription is already in progress\n\n * 500 UnExpectedErrorOccurred - Unexpected error occurred.\n\n * 500 OperationTimeout - Operation timed out.\n\n * 500 GenericSystem - System Failure when calling other Resource Provider.\n\n * 500 NoAdfInRegion - \n\n * 500 DeleteServiceFailed - The migration service '{0}' deletion operation failed at stage '{1}'. The list of error messages are : '{2}'"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataMigration/sqlMigrationServices/{sqlMigrationServiceName}/regenerateAuthKeys": {
      "post": {
        "tags": [
          "SqlMigrationServices"
        ],
        "description": "Regenerate a new set of Authentication Keys for Self Hosted Integration Runtime.",
        "operationId": "SqlMigrationServices_regenerateAuthKeys",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/parameters/SqlMigrationServiceNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Details of SqlMigrationService resource.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RegenAuthKeys"
            }
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully regenerate of Authentication Keys.",
            "schema": {
              "$ref": "#/definitions/RegenAuthKeys"
            }
          },
          "default": {
            "description": "*** Error Responses: ***\n\n * 400 InvalidParameterValue - An invalid value was provided for parameter '{0}'.\n\n * 400 EmptyRequiredRequestBody - The request body must not be empty.\n\n * 400 GenericUser - User Failure when calling other Resource Provider.\n\n * 400 OperationIdNotFound - Operation ID '{0}' not found.\n\n * 400 OperationTypeNotFound - Operation Type '{0}' not found.\n\n * 400 InvalidArgument - Invalid argument '{0}'.\n\n * 400 RegenerateAuthenticationKeyNameInvalid - Key name '{0}' is invalid. Valid key names are authKey1 and authKey2.\n\n * 400 DeleteServiceNotAllowed - One or more migrations attached to the migration service '{0}' are currently running. To delete the migration service, please wait until all migrations have completed or cancel the migrations manually and retry deleting the service. Running migrations are: '{1}'\n\n * 400 IntegrationRuntimeIsNotSelfHosted - Integration Runtime is not self-hosted for subscription '{0}' resource group '{1}' and name '{2}'\n\n * 400 SerializationError - There was an error while processing response from RP Service : '{0}'\n\n * 400 ServiceNameInvalid - Service name '{0}' is not valid. Please refer https://aka.ms/dmsv2naming for naming rules.\n\n * 400 IntegrationRuntimeIsNotOnline - Integration Runtime '{0}' is not online for resource group '{1}' subscription '{2}'\n\n * 403 AccessDenied - Access denied.\n\n * 404 ResourceNotFound - The requested resource was not found.\n\n * 404 SubscriptionDoesNotExist - Subscription id does not exist.\n\n * 404 ResourceDoesNotExist - Resource does not exist.\n\n * 405 SubscriptionNotReady - Subscription is not in Ready state.\n\n * 409 OperationInProgress - Operation in progress on resource already.\n\n * 409 OperationCanceled - Operation Cancelled.\n\n * 409 ResourceAlreadyExists - Resource already exists.\n\n * 409 SubscriptionOperationInProgress - An operation on subscription is already in progress\n\n * 500 UnExpectedErrorOccurred - Unexpected error occurred.\n\n * 500 OperationTimeout - Operation timed out.\n\n * 500 GenericSystem - System Failure when calling other Resource Provider.\n\n * 500 NoAdfInRegion - \n\n * 500 DeleteServiceFailed - The migration service '{0}' deletion operation failed at stage '{1}'. The list of error messages are : '{2}'"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataMigration/sqlMigrationServices/{sqlMigrationServiceName}/deleteNode": {
      "post": {
        "tags": [
          "SqlMigrationServices"
        ],
        "description": "Delete the integration runtime node.",
        "operationId": "SqlMigrationServices_deleteNode",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/parameters/SqlMigrationServiceNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Details of SqlMigrationService resource.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/deleteNode"
            }
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully delete the integration runtime node.",
            "schema": {
              "$ref": "#/definitions/deleteNode"
            }
          },
          "default": {
            "description": "*** Error Responses: ***\n\n * 400 InvalidParameterValue - An invalid value was provided for parameter '{0}'.\n\n * 400 EmptyRequiredRequestBody - The request body must not be empty.\n\n * 400 GenericUser - User Failure when calling other Resource Provider.\n\n * 400 OperationIdNotFound - Operation ID '{0}' not found.\n\n * 400 OperationTypeNotFound - Operation Type '{0}' not found.\n\n * 400 InvalidArgument - Invalid argument '{0}'.\n\n * 400 RegenerateAuthenticationKeyNameInvalid - Key name '{0}' is invalid. Valid key names are authKey1 and authKey2.\n\n * 400 DeleteServiceNotAllowed - One or more migrations attached to the migration service '{0}' are currently running. To delete the migration service, please wait until all migrations have completed or cancel the migrations manually and retry deleting the service. Running migrations are: '{1}'\n\n * 400 IntegrationRuntimeIsNotSelfHosted - Integration Runtime is not self-hosted for subscription '{0}' resource group '{1}' and name '{2}'\n\n * 400 SerializationError - There was an error while processing response from RP Service : '{0}'\n\n * 400 ServiceNameInvalid - Service name '{0}' is not valid. Please refer https://aka.ms/dmsv2naming for naming rules.\n\n * 400 IntegrationRuntimeIsNotOnline - Integration Runtime '{0}' is not online for resource group '{1}' subscription '{2}'\n\n * 403 AccessDenied - Access denied.\n\n * 404 ResourceNotFound - The requested resource was not found.\n\n * 404 SubscriptionDoesNotExist - Subscription id does not exist.\n\n * 404 ResourceDoesNotExist - Resource does not exist.\n\n * 405 SubscriptionNotReady - Subscription is not in Ready state.\n\n * 409 OperationInProgress - Operation in progress on resource already.\n\n * 409 OperationCanceled - Operation Cancelled.\n\n * 409 ResourceAlreadyExists - Resource already exists.\n\n * 409 SubscriptionOperationInProgress - An operation on subscription is already in progress\n\n * 500 UnExpectedErrorOccurred - Unexpected error occurred.\n\n * 500 OperationTimeout - Operation timed out.\n\n * 500 GenericSystem - System Failure when calling other Resource Provider.\n\n * 500 NoAdfInRegion - \n\n * 500 DeleteServiceFailed - The migration service '{0}' deletion operation failed at stage '{1}'. The list of error messages are : '{2}'"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataMigration/sqlMigrationServices/{sqlMigrationServiceName}/listMigrations": {
      "get": {
        "tags": [
          "SqlMigrationServices"
        ],
        "description": "Retrieve the List of database migrations attached to the service.",
        "operationId": "SqlMigrationServices_listMigrations",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/parameters/SqlMigrationServiceNameParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully return of migrations attached to the service.",
            "schema": {
              "$ref": "#/definitions/DatabaseMigrationListResult"
            }
          },
          "default": {
            "description": "*** Error Responses: ***\n\n * 400 InvalidParameterValue - An invalid value was provided for parameter '{0}'.\n\n * 400 EmptyRequiredRequestBody - The request body must not be empty.\n\n * 400 GenericUser - User Failure when calling other Resource Provider.\n\n * 400 OperationIdNotFound - Operation ID '{0}' not found.\n\n * 400 OperationTypeNotFound - Operation Type '{0}' not found.\n\n * 400 InvalidArgument - Invalid argument '{0}'.\n\n * 400 RegenerateAuthenticationKeyNameInvalid - Key name '{0}' is invalid. Valid key names are authKey1 and authKey2.\n\n * 400 DeleteServiceNotAllowed - One or more migrations attached to the migration service '{0}' are currently running. To delete the migration service, please wait until all migrations have completed or cancel the migrations manually and retry deleting the service. Running migrations are: '{1}'\n\n * 400 IntegrationRuntimeIsNotSelfHosted - Integration Runtime is not self-hosted for subscription '{0}' resource group '{1}' and name '{2}'\n\n * 400 SerializationError - There was an error while processing response from RP Service : '{0}'\n\n * 400 ServiceNameInvalid - Service name '{0}' is not valid. Please refer https://aka.ms/dmsv2naming for naming rules.\n\n * 400 IntegrationRuntimeIsNotOnline - Integration Runtime '{0}' is not online for resource group '{1}' subscription '{2}'\n\n * 403 AccessDenied - Access denied.\n\n * 404 ResourceNotFound - The requested resource was not found.\n\n * 404 SubscriptionDoesNotExist - Subscription id does not exist.\n\n * 404 ResourceDoesNotExist - Resource does not exist.\n\n * 405 SubscriptionNotReady - Subscription is not in Ready state.\n\n * 409 OperationInProgress - Operation in progress on resource already.\n\n * 409 OperationCanceled - Operation Cancelled.\n\n * 409 ResourceAlreadyExists - Resource already exists.\n\n * 409 SubscriptionOperationInProgress - An operation on subscription is already in progress\n\n * 500 UnExpectedErrorOccurred - Unexpected error occurred.\n\n * 500 OperationTimeout - Operation timed out.\n\n * 500 GenericSystem - System Failure when calling other Resource Provider.\n\n * 500 NoAdfInRegion - \n\n * 500 DeleteServiceFailed - The migration service '{0}' deletion operation failed at stage '{1}'. The list of error messages are : '{2}'"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataMigration/sqlMigrationServices/{sqlMigrationServiceName}/listMonitoringData": {
      "post": {
        "tags": [
          "SqlMigrationServices"
        ],
        "description": "Retrieve the Monitoring Data.",
        "operationId": "SqlMigrationServices_listMonitoringData",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/parameters/SqlMigrationServiceNameParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the monitoring data.",
            "schema": {
              "$ref": "#/definitions/IntegrationRuntimeMonitoringData"
            }
          },
          "default": {
            "description": "*** Error Responses: ***\n\n * 400 InvalidParameterValue - An invalid value was provided for parameter '{0}'.\n\n * 400 EmptyRequiredRequestBody - The request body must not be empty.\n\n * 400 GenericUser - User Failure when calling other Resource Provider.\n\n * 400 OperationIdNotFound - Operation ID '{0}' not found.\n\n * 400 OperationTypeNotFound - Operation Type '{0}' not found.\n\n * 400 InvalidArgument - Invalid argument '{0}'.\n\n * 400 RegenerateAuthenticationKeyNameInvalid - Key name '{0}' is invalid. Valid key names are authKey1 and authKey2.\n\n * 400 DeleteServiceNotAllowed - One or more migrations attached to the migration service '{0}' are currently running. To delete the migration service, please wait until all migrations have completed or cancel the migrations manually and retry deleting the service. Running migrations are: '{1}'\n\n * 400 IntegrationRuntimeIsNotSelfHosted - Integration Runtime is not self-hosted for subscription '{0}' resource group '{1}' and name '{2}'\n\n * 400 SerializationError - There was an error while processing response from RP Service : '{0}'\n\n * 400 ServiceNameInvalid - Service name '{0}' is not valid. Please refer https://aka.ms/dmsv2naming for naming rules.\n\n * 400 IntegrationRuntimeIsNotOnline - Integration Runtime '{0}' is not online for resource group '{1}' subscription '{2}'\n\n * 403 AccessDenied - Access denied.\n\n * 404 ResourceNotFound - The requested resource was not found.\n\n * 404 SubscriptionDoesNotExist - Subscription id does not exist.\n\n * 404 ResourceDoesNotExist - Resource does not exist.\n\n * 405 SubscriptionNotReady - Subscription is not in Ready state.\n\n * 409 OperationInProgress - Operation in progress on resource already.\n\n * 409 OperationCanceled - Operation Cancelled.\n\n * 409 ResourceAlreadyExists - Resource already exists.\n\n * 409 SubscriptionOperationInProgress - An operation on subscription is already in progress\n\n * 500 UnExpectedErrorOccurred - Unexpected error occurred.\n\n * 500 OperationTimeout - Operation timed out.\n\n * 500 GenericSystem - System Failure when calling other Resource Provider.\n\n * 500 NoAdfInRegion - \n\n * 500 DeleteServiceFailed - The migration service '{0}' deletion operation failed at stage '{1}'. The list of error messages are : '{2}'"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataMigration/sqlMigrationServices/{sqlMigrationServiceName}/MonitoringData": {
      "get": {
        "tags": [
          "SqlMigrationServices"
        ],
        "description": "Retrieve the Monitoring Data.",
        "operationId": "SqlMigrationServices_MonitoringData",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/parameters/SqlMigrationServiceNameParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the monitoring data.",
            "schema": {
              "$ref": "#/definitions/IntegrationRuntimeMonitoringData"
            }
          },
          "default": {
            "description": "*** Error Responses: ***\n\n * 400 InvalidParameterValue - An invalid value was provided for parameter '{0}'.\n\n * 400 EmptyRequiredRequestBody - The request body must not be empty.\n\n * 400 GenericUser - User Failure when calling other Resource Provider.\n\n * 400 OperationIdNotFound - Operation ID '{0}' not found.\n\n * 400 OperationTypeNotFound - Operation Type '{0}' not found.\n\n * 400 InvalidArgument - Invalid argument '{0}'.\n\n * 400 RegenerateAuthenticationKeyNameInvalid - Key name '{0}' is invalid. Valid key names are authKey1 and authKey2.\n\n * 400 DeleteServiceNotAllowed - One or more migrations attached to the migration service '{0}' are currently running. To delete the migration service, please wait until all migrations have completed or cancel the migrations manually and retry deleting the service. Running migrations are: '{1}'\n\n * 400 IntegrationRuntimeIsNotSelfHosted - Integration Runtime is not self-hosted for subscription '{0}' resource group '{1}' and name '{2}'\n\n * 400 SerializationError - There was an error while processing response from RP Service : '{0}'\n\n * 400 ServiceNameInvalid - Service name '{0}' is not valid. Please refer https://aka.ms/dmsv2naming for naming rules.\n\n * 400 IntegrationRuntimeIsNotOnline - Integration Runtime '{0}' is not online for resource group '{1}' subscription '{2}'\n\n * 403 AccessDenied - Access denied.\n\n * 404 ResourceNotFound - The requested resource was not found.\n\n * 404 SubscriptionDoesNotExist - Subscription id does not exist.\n\n * 404 ResourceDoesNotExist - Resource does not exist.\n\n * 405 SubscriptionNotReady - Subscription is not in Ready state.\n\n * 409 OperationInProgress - Operation in progress on resource already.\n\n * 409 OperationCanceled - Operation Cancelled.\n\n * 409 ResourceAlreadyExists - Resource already exists.\n\n * 409 SubscriptionOperationInProgress - An operation on subscription is already in progress\n\n * 500 UnExpectedErrorOccurred - Unexpected error occurred.\n\n * 500 OperationTimeout - Operation timed out.\n\n * 500 GenericSystem - System Failure when calling other Resource Provider.\n\n * 500 NoAdfInRegion - \n\n * 500 DeleteServiceFailed - The migration service '{0}' deletion operation failed at stage '{1}'. The list of error messages are : '{2}'"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataMigration/sqlMigrationServices/{sqlMigrationServiceName}/validateIR": {
      "post": {
        "tags": [
          "SqlMigrationServices"
        ],
        "description": "Validate IR connectivity to Linked Services.",
        "operationId": "SqlMigrationServices_validateIR",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/parameters/SqlMigrationServiceNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Details of SqlMigrationService resource.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/validateIR"
            }
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully executed the validations on the integration runtime.",
            "schema": {
              "$ref": "#/definitions/validateIR"
            }
          },
          "default": {
            "description": "*** Error Responses: ***\n\n * 400 InvalidParameterValue - An invalid value was provided for parameter '{0}'.\n\n * 400 EmptyRequiredRequestBody - The request body must not be empty.\n\n * 400 GenericUser - User Failure when calling other Resource Provider.\n\n * 400 OperationIdNotFound - Operation ID '{0}' not found.\n\n * 400 OperationTypeNotFound - Operation Type '{0}' not found.\n\n * 400 InvalidArgument - Invalid argument '{0}'.\n\n * 400 RegenerateAuthenticationKeyNameInvalid - Key name '{0}' is invalid. Valid key names are authKey1 and authKey2.\n\n * 400 DeleteServiceNotAllowed - One or more migrations attached to the migration service '{0}' are currently running. To delete the migration service, please wait until all migrations have completed or cancel the migrations manually and retry deleting the service. Running migrations are: '{1}'\n\n * 400 IntegrationRuntimeIsNotSelfHosted - Integration Runtime is not self-hosted for subscription '{0}' resource group '{1}' and name '{2}'\n\n * 400 SerializationError - There was an error while processing response from RP Service : '{0}'\n\n * 400 ServiceNameInvalid - Service name '{0}' is not valid. Please refer https://aka.ms/dmsv2naming for naming rules.\n\n * 400 IntegrationRuntimeIsNotOnline - Integration Runtime '{0}' is not online for resource group '{1}' subscription '{2}'\n\n * 403 AccessDenied - Access denied.\n\n * 404 ResourceNotFound - The requested resource was not found.\n\n * 404 SubscriptionDoesNotExist - Subscription id does not exist.\n\n * 404 ResourceDoesNotExist - Resource does not exist.\n\n * 405 SubscriptionNotReady - Subscription is not in Ready state.\n\n * 409 OperationInProgress - Operation in progress on resource already.\n\n * 409 OperationCanceled - Operation Cancelled.\n\n * 409 ResourceAlreadyExists - Resource already exists.\n\n * 409 SubscriptionOperationInProgress - An operation on subscription is already in progress\n\n * 500 UnExpectedErrorOccurred - Unexpected error occurred.\n\n * 500 OperationTimeout - Operation timed out.\n\n * 500 GenericSystem - System Failure when calling other Resource Provider.\n\n * 500 NoAdfInRegion - \n\n * 500 DeleteServiceFailed - The migration service '{0}' deletion operation failed at stage '{1}'. The list of error messages are : '{2}'"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.DataMigration/sqlMigrationServices": {
      "get": {
        "tags": [
          "SqlMigrationServices"
        ],
        "description": "Retrieve all SQL migration services in the subscription.",
        "operationId": "SqlMigrationServices_ListBySubscription",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the Migration Services in the Subscription.",
            "schema": {
              "$ref": "#/definitions/SqlMigrationListResult"
            }
          },
          "default": {
            "description": "*** Error Responses: ***\n\n * 400 InvalidParameterValue - An invalid value was provided for parameter '{0}'.\n\n * 400 EmptyRequiredRequestBody - The request body must not be empty.\n\n * 400 GenericUser - User Failure when calling other Resource Provider.\n\n * 400 OperationIdNotFound - Operation ID '{0}' not found.\n\n * 400 OperationTypeNotFound - Operation Type '{0}' not found.\n\n * 400 InvalidArgument - Invalid argument '{0}'.\n\n * 400 RegenerateAuthenticationKeyNameInvalid - Key name '{0}' is invalid. Valid key names are authKey1 and authKey2.\n\n * 400 DeleteServiceNotAllowed - One or more migrations attached to the migration service '{0}' are currently running. To delete the migration service, please wait until all migrations have completed or cancel the migrations manually and retry deleting the service. Running migrations are: '{1}'\n\n * 400 IntegrationRuntimeIsNotSelfHosted - Integration Runtime is not self-hosted for subscription '{0}' resource group '{1}' and name '{2}'\n\n * 400 SerializationError - There was an error while processing response from RP Service : '{0}'\n\n * 400 ServiceNameInvalid - Service name '{0}' is not valid. Please refer https://aka.ms/dmsv2naming for naming rules.\n\n * 400 IntegrationRuntimeIsNotOnline - Integration Runtime '{0}' is not online for resource group '{1}' subscription '{2}'\n\n * 403 AccessDenied - Access denied.\n\n * 404 ResourceNotFound - The requested resource was not found.\n\n * 404 SubscriptionDoesNotExist - Subscription id does not exist.\n\n * 404 ResourceDoesNotExist - Resource does not exist.\n\n * 405 SubscriptionNotReady - Subscription is not in Ready state.\n\n * 409 OperationInProgress - Operation in progress on resource already.\n\n * 409 OperationCanceled - Operation Cancelled.\n\n * 409 ResourceAlreadyExists - Resource already exists.\n\n * 409 SubscriptionOperationInProgress - An operation on subscription is already in progress\n\n * 500 UnExpectedErrorOccurred - Unexpected error occurred.\n\n * 500 OperationTimeout - Operation timed out.\n\n * 500 GenericSystem - System Failure when calling other Resource Provider.\n\n * 500 NoAdfInRegion - \n\n * 500 DeleteServiceFailed - The migration service '{0}' deletion operation failed at stage '{1}'. The list of error messages are : '{2}'"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    }
  },
  "definitions": {
    "systemData": {
      "description": "Metadata pertaining to creation and last modification of the resource.",
      "type": "object",
      "properties": {
        "createdBy": {
          "description": "A string identifier for the identity that created the resource.",
          "type": "string",
          "readOnly": true
        },
        "createdByType": {
          "description": "The type of identity that created the resource: <User|Application|ManagedIdentity|Key>",
          "enum": [
            "User",
            "Application",
            "ManagedIdentity",
            "Key"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "createdByType",
            "modelAsString": true
          }
        },
        "createdAt": {
          "format": "date-time",
          "description": "The timestamp of resource creation (UTC).",
          "type": "string",
          "readOnly": true
        },
        "lastModifiedBy": {
          "description": "A string identifier for the identity that last modified the resource.",
          "type": "string",
          "readOnly": true
        },
        "lastModifiedByType": {
          "description": "The type of identity that last modified the resource: <User|Application|ManagedIdentity|Key>",
          "enum": [
            "User",
            "Application",
            "ManagedIdentity",
            "Key"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "createdByType",
            "modelAsString": true
          }
        },
        "lastModifiedAt": {
          "format": "date-time",
          "description": "The timestamp of last modification (UTC).",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "DatabaseMigrationPropertiesSqlDb": {
      "description": "Database Migration Resource properties for SQL database.",
      "type": "object",
      "properties": {
        "migrationStatusDetails": {
          "$ref": "#/definitions/SqlDbMigrationStatusDetails",
          "description": "Detailed migration status. Not included by default.",
          "readOnly": true
        },
        "sqlDataCopyThresholds": {
          "$ref": "#/definitions/SqlDataCopyThresholds",
          "description": "Minimum Row count and size of a table with a clustered index required to perform parallel data copy",
          "readOnly": true
        },
        "offlineConfiguration": {
          "$ref": "#/definitions/SqlDbOfflineConfiguration",
          "description": "Offline configuration.",
          "readOnly": true
        },
        "backupConfiguration": {
          "$ref": "#/definitions/SqlDbBackupConfiguration",
          "description": "Source Location details of backups.",
          "readOnly": true
        },
        "sqlDataMigrationConfiguration": {
          "$ref": "#/definitions/SqlDataMigrationConfiguration",
          "description": "Sql data migration configuration.",
          "readOnly": true
        },
        "sqlSchemaMigrationConfiguration": {
          "$ref": "#/definitions/SqlSchemaMigrationConfiguration",
          "description": "Sql schema migration configuration.",
          "readOnly": true
        },
        "targetSqlConnection": {
          "$ref": "#/definitions/SqlConnectionInformation",
          "description": "Target SQL DB connection details."
        },
        "sourceOracleConnection": {
          "$ref": "#/definitions/OracleConnectionInformation",
          "description": "Source Oracle connection details."
        },
        "landingZoneConfiguration": {
          "$ref": "#/definitions/LandingZoneConfiguration",
          "description": "Landing zone configuration info."
        },
        "cdcOptionsConfiguration": {
          "$ref": "#/definitions/CdcOptionsConfiguration",
          "description": "Landing zone configuration info."
        },
        "cdcMigrationStatus": {
          "$ref": "#/definitions/CdcMigrationStatus",
          "description": "Landing zone configuration info."
        },
        "tableList": {
          "description": "List of tables to copy.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "targetTableList": {
          "description": "Tables for migration.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "keyVault": {
          "$ref": "#/definitions/KeyVaultProperties",
          "description": "Key Vault Properties",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "sourceSqlConnection": {
          "$ref": "#/definitions/SqlConnectionInformation",
          "description": "Source SQL Server connection details."
        },
        "sourceServerName": {
          "description": "Name of the source sql server.",
          "type": "string",
          "readOnly": true
        },
        "sourceDatabaseName": {
          "description": "Name of the source database.",
          "type": "string"
        },
        "targetDatabaseCollation": {
          "description": "Database collation to be used for the target database.",
          "type": "string"
        },
        "sqlServerInstanceId": {
          "description": "Optional property - Resource Id for the source Sql server instance. Validations are performed on this property to ensure that it follows the correct format.",
          "type": "string",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "scope": {
          "description": "Resource Id of the target resource.",
          "type": "string",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "provisioningState": {
          "description": "Provisioning State of migration. ProvisioningState as Succeeded implies that validations have been performed and migration has started.",
          "type": "string",
          "readOnly": true
        },
        "migrationStatus": {
          "description": "Migration status.",
          "type": "string",
          "readOnly": true
        },
        "startedOn": {
          "format": "date-time",
          "description": "Database migration start time.",
          "type": "string",
          "readOnly": true
        },
        "endedOn": {
          "format": "date-time",
          "description": "Database migration end time.",
          "type": "string",
          "readOnly": true
        },
        "migrationService": {
          "description": "Resource Id of the Migration Service.",
          "type": "string"
        },
        "migrationOperationId": {
          "description": "ID tracking current migration operation.",
          "type": "string"
        },
        "migrationFailureError": {
          "$ref": "#/definitions/ErrorInfo",
          "description": "Error details in case of migration failure.",
          "readOnly": true
        },
        "provisioningError": {
          "description": "Error message for migration provisioning failure, if any.",
          "type": "string"
        },
        "kind": {
          "description": "Resource Type",
          "enum": [
            "SqlMi",
            "SqlVm",
            "SqlDb",
            "OracleToSqlDb",
            "SqlConnectServiceTask",
            "MongoToCosmosDbMongo",
            "OracleToSqlMi",
            "OracleToSqlVm"
          ],
          "type": "string",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      }
    },
    "SqlDbMigrationStatusDetails": {
      "description": "Detailed status of current Sql Db migration.",
      "type": "object",
      "properties": {
        "migrationState": {
          "description": "Current State of Migration.",
          "type": "string",
          "readOnly": true
        },
        "sqlDataCopyErrors": {
          "description": "Sql Data Copy errors, if any.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "listOfCopyProgressDetails": {
          "description": "Details on progress of ADF copy activities.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CopyProgressDetails"
          },
          "readOnly": true
        },
        "sqlSchemaMigrationStatus": {
          "$ref": "#/definitions/SqlSchemaMigrationStatus",
          "description": "Detailed status of current Sql Schema migration.",
          "readOnly": true
        }
      }
    },
    "SqlDataCopyThresholds": {
      "description": "Minimum Row count and size of a table with a clustered index required to perform parallel data copy",
      "type": "object",
      "properties": {
        "cidxRowThreshold": {
          "format": "int32",
          "description": "Minimum row count of a table with clustered index to perform parallel data copy",
          "type": "integer"
        },
        "cidxKbsThreshold": {
          "format": "int32",
          "description": "Minimum required size in kbs of  atable with a clustered index to perform parallel data copy",
          "type": "integer"
        }
      }
    },
    "SqlDbOfflineConfiguration": {
      "description": "Offline configuration",
      "type": "object",
      "properties": {
        "offline": {
          "description": "Offline migration",
          "type": "boolean",
          "readOnly": true
        }
      }
    },
    "SqlDbBackupConfiguration": {
      "description": "Backup Configuration",
      "type": "object",
      "properties": {
        "sourceLocation": {
          "$ref": "#/definitions/SqlDbSourceBackupLocation",
          "description": "Source location of backups.",
          "readOnly": true
        }
      }
    },
    "SqlDataMigrationConfiguration": {
      "description": "SQL data migration configuration",
      "type": "object",
      "properties": {
        "enableDataMigration": {
          "description": "Enable data migration",
          "type": "boolean"
        }
      }
    },
    "SqlSchemaMigrationConfiguration": {
      "description": "SQL schema migration configuration",
      "type": "object",
      "properties": {
        "enableSchemaMigration": {
          "description": "Enable data migration",
          "type": "boolean"
        }
      }
    },
    "SqlConnectionInformation": {
      "description": "Source SQL Connection",
      "type": "object",
      "properties": {
        "dataSource": {
          "description": "Data source.",
          "type": "string"
        },
        "authentication": {
          "description": "Authentication type.",
          "type": "string"
        },
        "userName": {
          "description": "User name to connect to source SQL.",
          "type": "string"
        },
        "password": {
          "description": "Password to connect to source SQL.",
          "type": "string"
        },
        "encryptConnection": {
          "description": "Whether to encrypt connection or not.",
          "type": "boolean"
        },
        "trustServerCertificate": {
          "description": "Whether to trust server certificate or not.",
          "type": "boolean"
        },
        "testConnectivity": {
          "description": "Indicates whether to test connectivity to this resource.",
          "type": "boolean",
          "readOnly": true
        }
      }
    },
    "OracleConnectionInformation": {
      "description": "Source Oracle Connection",
      "type": "object",
      "properties": {
        "host": {
          "description": "Host.",
          "type": "string"
        },
        "port": {
          "description": "Port.",
          "type": "string"
        },
        "sid": {
          "description": "Sid.",
          "type": "string"
        },
        "serviceName": {
          "description": "Service name.",
          "type": "string"
        },
        "userName": {
          "description": "User name to connect to source SQL.",
          "type": "string"
        },
        "password": {
          "description": "Password to connect to source SQL.",
          "type": "string"
        },
        "testConnectivity": {
          "description": "Indicates whether to test connectivity to this resource.",
          "type": "boolean",
          "readOnly": true
        }
      }
    },
    "LandingZoneConfiguration": {
      "description": "Landing zone Configuration",
      "type": "object",
      "properties": {
        "azureBlobFS": {
          "$ref": "#/definitions/AzureBlobFS",
          "description": "Source Azure Blob."
        }
      }
    },
    "CdcOptionsConfiguration": {
      "description": "CDC Configuration",
      "type": "object",
      "properties": {
        "cdcMigrationOption": {
          "description": "CDC migration option",
          "enum": [
            "FullAndIncrementalLoad",
            "InitialDataLoad",
            "IncrementalLoad",
            "Offline"
          ],
          "type": "string"
        },
        "cdcRunIntervalSeconds": {
          "format": "int32",
          "description": "Interval between CDC migration runs",
          "type": "integer"
        },
        "pipelineRunMaxRetryCount": {
          "format": "int32",
          "description": "Mapping dataflow max retry count",
          "type": "integer"
        },
        "snapshotViaCopy": {
          "description": "Flag indicating whether taking snapshot via copy activity",
          "type": "boolean"
        },
        "startWatermark": {
          "description": "Start watermark",
          "type": "string"
        },
        "lookbackFilesCount": {
          "format": "int32",
          "description": "Archived log files count to look back for initial CDC",
          "type": "integer"
        },
        "logMiningType": {
          "description": "Log mining type",
          "enum": [
            "Default",
            "OnlineLog",
            "ArchivedLog",
            "All"
          ],
          "type": "string"
        },
        "readerQueueSize": {
          "format": "int32",
          "description": "Queue size for CDC reader",
          "type": "integer"
        },
        "snapshotViaFlashbackQuery": {
          "description": "Flag indicating whether taking snapshot via copy activity",
          "type": "boolean"
        },
        "azureIrCoreCount": {
          "format": "int32",
          "description": "Azure IR core count",
          "type": "integer"
        },
        "azureIrTtl": {
          "format": "int32",
          "description": "Azure IR ttl",
          "type": "integer"
        },
        "lookbackOperationsCount": {
          "format": "int32",
          "description": "Look back operations count",
          "type": "integer"
        },
        "parserWorkerCount": {
          "format": "int32",
          "description": "Parser workers count used to process CDC records",
          "type": "integer"
        },
        "parserWorkerQueueSize": {
          "format": "int32",
          "description": "Parser workers queue size used to store CDC records",
          "type": "integer"
        }
      }
    },
    "CdcMigrationStatus": {
      "description": "CDC migration status",
      "type": "object",
      "properties": {
        "cdcMigrationOption": {
          "description": "CDC migration option",
          "type": "string"
        }
      }
    },
    "KeyVaultProperties": {
      "description": "Key Vault properties for user credentials.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Key Vault Name.",
          "type": "string"
        },
        "sourceUsernameSecretName": {
          "description": "Key Vault Secret Name corresponding to source username.",
          "type": "string"
        },
        "sourcePasswordSecretName": {
          "description": "Key Vault Secret Name corresponding to source password.",
          "type": "string"
        },
        "fileShareUsernameSecretName": {
          "description": "Key Vault Secret Name corresponding to file share username.",
          "type": "string"
        },
        "fileSharePasswordSecretName": {
          "description": "Key Vault Secret Name corresponding to file share password.",
          "type": "string"
        }
      }
    },
    "ErrorInfo": {
      "description": "Error details",
      "type": "object",
      "properties": {
        "code": {
          "description": "Error code.",
          "type": "string",
          "readOnly": true
        },
        "message": {
          "description": "Error message.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "Resource": {
      "description": "ARM resource.",
      "type": "object",
      "properties": {
        "id": {
          "description": "Resource ID.",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "description": "Resource name.",
          "type": "string",
          "readOnly": true
        },
        "type": {
          "description": "Resource type.",
          "type": "string",
          "readOnly": true
        }
      },
      "x-ms-azure-resource": true
    },
    "CopyProgressDetails": {
      "description": "Details on progress of ADF copy activity",
      "type": "object",
      "properties": {
        "tableName": {
          "description": "Table Name",
          "type": "string",
          "readOnly": true
        },
        "status": {
          "description": "Staus of the Copy activity (InProgress, Succeeded, Failed, Canceled).",
          "type": "string",
          "readOnly": true
        },
        "parallelCopyType": {
          "description": "Type of parallel copy (Dynamic range, Physical partition, none).",
          "type": "string",
          "readOnly": true
        },
        "usedParallelCopies": {
          "format": "int32",
          "description": "The degree of parallelization.",
          "type": "integer",
          "readOnly": true
        },
        "dataRead": {
          "format": "int64",
          "description": "Bytes read",
          "type": "integer",
          "readOnly": true
        },
        "dataWritten": {
          "format": "int64",
          "description": "Bytes written",
          "type": "integer",
          "readOnly": true
        },
        "rowsRead": {
          "format": "int64",
          "description": "Rows read",
          "type": "integer",
          "readOnly": true
        },
        "rowsCopied": {
          "format": "int64",
          "description": "Rows Copied",
          "type": "integer",
          "readOnly": true
        },
        "copyStart": {
          "format": "date-time",
          "description": "Copy Start",
          "type": "string",
          "readOnly": true
        },
        "copyThroughput": {
          "format": "double",
          "description": "Copy throughput in KBps",
          "type": "number",
          "readOnly": true
        },
        "copyDuration": {
          "format": "int32",
          "description": "Copy Duration in seconds",
          "type": "integer",
          "readOnly": true
        },
        "errors": {
          "description": "Table Level Errors",
          "type": "array",
          "items": {
            "type": "string"
          },
          "readOnly": true
        }
      }
    },
    "SqlSchemaMigrationStatus": {
      "description": "Detailed status of current Sql Schema migration.",
      "type": "object",
      "properties": {
        "errors": {
          "description": "Sql Schema Copy errors, if any.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "status": {
          "description": "Sql Schema Copy Status.",
          "type": "string",
          "readOnly": true
        },
        "objectsCollection": {
          "$ref": "#/definitions/ObjectsCollection",
          "description": "Objects Collection Progress in Sql Schema Migration.",
          "readOnly": true
        },
        "scriptGeneration": {
          "$ref": "#/definitions/ScriptGeneration",
          "description": "Script Generation Progress in Sql Schema Migration.",
          "readOnly": true
        },
        "scriptDeployment": {
          "$ref": "#/definitions/ScriptDeployment",
          "description": "Script Deployment Progress in Sql Schema Migration.",
          "readOnly": true
        }
      }
    },
    "SqlDbSourceBackupLocation": {
      "description": "Source Location details of backups.",
      "type": "object",
      "properties": {
        "fileStorageType": {
          "description": "Backup storage Type.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "AzureBlobFS": {
      "description": "Azure Blob FS Details",
      "type": "object",
      "properties": {
        "storageAccountResourceId": {
          "description": "Resource Id of the storage account where backups are stored.",
          "type": "string"
        },
        "accountKey": {
          "description": "Storage Account Key.",
          "type": "string"
        },
        "fileSystemName": {
          "description": "Blob file system name.",
          "type": "string"
        },
        "folderPath": {
          "description": "Folder path.",
          "type": "string"
        }
      }
    },
    "ObjectsCollection": {
      "description": "Objects Collection Progress in Sql Schema Migration.",
      "type": "object",
      "properties": {
        "totalCountOfObjectsCollected": {
          "format": "int32",
          "description": "The total count of objects collected.",
          "type": "integer",
          "readOnly": true
        },
        "startedOn": {
          "format": "date-time",
          "description": "The start time.",
          "type": "string",
          "readOnly": true
        },
        "endedOn": {
          "format": "date-time",
          "description": "The end time.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "ScriptGeneration": {
      "description": "Script Generation Progress in Sql Schema Migration.",
      "type": "object",
      "properties": {
        "progressInPercentage": {
          "format": "double",
          "description": "The progress in percentage.",
          "type": "number",
          "readOnly": true
        },
        "scriptedObjectsCount": {
          "format": "int32",
          "description": "The scripted objects count.",
          "type": "integer",
          "readOnly": true
        },
        "scriptedObjectsFailedCount": {
          "format": "int32",
          "description": "The scripted objects failed count.",
          "type": "integer",
          "readOnly": true
        },
        "startedOn": {
          "format": "date-time",
          "description": "The start time.",
          "type": "string",
          "readOnly": true
        },
        "endedOn": {
          "format": "date-time",
          "description": "The end time.",
          "type": "string",
          "readOnly": true
        },
        "errors": {
          "description": "Script generation errors, if any.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "readOnly": true
        }
      }
    },
    "ScriptDeployment": {
      "description": "Script Deployment Progress in Sql Schema Migration.",
      "type": "object",
      "properties": {
        "progressInPercentage": {
          "format": "double",
          "description": "The progress in percentage.",
          "type": "number",
          "readOnly": true
        },
        "startedOn": {
          "format": "date-time",
          "description": "The start time.",
          "type": "string",
          "readOnly": true
        },
        "endedOn": {
          "format": "date-time",
          "description": "The end time.",
          "type": "string",
          "readOnly": true
        },
        "succeededDeploymentCount": {
          "format": "int32",
          "description": "The count of succeeded deployment.",
          "type": "integer",
          "readOnly": true
        },
        "failedDeploymentCount": {
          "format": "int32",
          "description": "The count of failed deployment.",
          "type": "integer",
          "readOnly": true
        },
        "errors": {
          "description": "Script deployment errors, if any.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "readOnly": true
        }
      }
    },
    "ProxyResource": {
      "description": "ARM proxy resource.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {}
    },
    "DatabaseMigrationSqlDb": {
      "description": "Database Migration Resource for SQL Database.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProxyResource"
        }
      ],
      "properties": {
        "location": {
          "description": "Location of database migration service.",
          "type": "string",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "systemData": {
          "$ref": "#/definitions/systemData",
          "description": "Metadata pertaining to creation and last modification of the resource.",
          "readOnly": true
        },
        "properties": {
          "$ref": "#/definitions/DatabaseMigrationPropertiesSqlDb",
          "description": "Resource properties.",
          "x-ms-client-flatten": true
        }
      }
    },
    "MigrationOperationInput": {
      "description": "Migration Operation Input",
      "type": "object",
      "properties": {
        "migrationOperationId": {
          "format": "uuid",
          "description": "ID tracking migration operation.",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        }
      }
    },
    "DatabaseMigrationPropertiesSqlMi": {
      "description": "Database Migration Resource properties for SQL Managed Instance.",
      "type": "object",
      "properties": {
        "migrationStatusDetails": {
          "$ref": "#/definitions/MigrationStatusDetails",
          "description": "Detailed migration status. Not included by default.",
          "readOnly": true
        },
        "backupConfiguration": {
          "$ref": "#/definitions/BackupConfiguration",
          "description": "Backup configuration info."
        },
        "autoCutoverConfiguration": {
          "$ref": "#/definitions/AutoCutoverConfiguration",
          "description": "Auto cutover configuration."
        },
        "offlineConfiguration": {
          "$ref": "#/definitions/OfflineConfiguration",
          "description": "Offline configuration."
        },
        "migrationStatusWarnings": {
          "$ref": "#/definitions/MigrationStatusWarnings",
          "description": "List of warnings for current migration for restore and cutover."
        },
        "targetSqlConnection": {
          "$ref": "#/definitions/SqlConnectionInformation",
          "description": "Target SQL DB connection details."
        },
        "sourceOracleConnection": {
          "$ref": "#/definitions/OracleConnectionInformation",
          "description": "Source Oracle connection details."
        },
        "landingZoneConfiguration": {
          "$ref": "#/definitions/LandingZoneConfiguration",
          "description": "Landing zone configuration info."
        },
        "cdcOptionsConfiguration": {
          "$ref": "#/definitions/CdcOptionsConfiguration",
          "description": "Landing zone configuration info."
        },
        "cdcMigrationStatus": {
          "$ref": "#/definitions/CdcMigrationStatus",
          "description": "Landing zone configuration info."
        },
        "tableList": {
          "description": "List of tables to copy.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "targetTableList": {
          "description": "Tables for migration.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "keyVault": {
          "$ref": "#/definitions/KeyVaultProperties",
          "description": "Key Vault Properties",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "sourceSqlConnection": {
          "$ref": "#/definitions/SqlConnectionInformation",
          "description": "Source SQL Server connection details."
        },
        "sourceServerName": {
          "description": "Name of the source sql server.",
          "type": "string",
          "readOnly": true
        },
        "sourceDatabaseName": {
          "description": "Name of the source database.",
          "type": "string"
        },
        "targetDatabaseCollation": {
          "description": "Database collation to be used for the target database.",
          "type": "string"
        },
        "sqlServerInstanceId": {
          "description": "Optional property - Resource Id for the source Sql server instance. Validations are performed on this property to ensure that it follows the correct format.",
          "type": "string",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "scope": {
          "description": "Resource Id of the target resource.",
          "type": "string",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "provisioningState": {
          "description": "Provisioning State of migration. ProvisioningState as Succeeded implies that validations have been performed and migration has started.",
          "type": "string",
          "readOnly": true
        },
        "migrationStatus": {
          "description": "Migration status.",
          "type": "string",
          "readOnly": true
        },
        "startedOn": {
          "format": "date-time",
          "description": "Database migration start time.",
          "type": "string",
          "readOnly": true
        },
        "endedOn": {
          "format": "date-time",
          "description": "Database migration end time.",
          "type": "string",
          "readOnly": true
        },
        "migrationService": {
          "description": "Resource Id of the Migration Service.",
          "type": "string"
        },
        "migrationOperationId": {
          "description": "ID tracking current migration operation.",
          "type": "string"
        },
        "migrationFailureError": {
          "$ref": "#/definitions/ErrorInfo",
          "description": "Error details in case of migration failure.",
          "readOnly": true
        },
        "provisioningError": {
          "description": "Error message for migration provisioning failure, if any.",
          "type": "string"
        },
        "kind": {
          "description": "Resource Type",
          "enum": [
            "SqlMi",
            "SqlVm",
            "SqlDb",
            "OracleToSqlDb",
            "SqlConnectServiceTask",
            "MongoToCosmosDbMongo",
            "OracleToSqlMi",
            "OracleToSqlVm"
          ],
          "type": "string",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      }
    },
    "MigrationStatusDetails": {
      "description": "Detailed status of current migration.",
      "type": "object",
      "properties": {
        "migrationState": {
          "description": "Current State of Migration.",
          "type": "string",
          "readOnly": true
        },
        "fullBackupSetInfo": {
          "$ref": "#/definitions/SqlBackupSetInfo",
          "description": "Details of full backup set.",
          "readOnly": true
        },
        "lastRestoredBackupSetInfo": {
          "$ref": "#/definitions/SqlBackupSetInfo",
          "description": "Last applied backup set information.",
          "readOnly": true
        },
        "activeBackupSets": {
          "description": "Backup sets that are currently active.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SqlBackupSetInfo"
          },
          "readOnly": true
        },
        "invalidFiles": {
          "description": "Files that are not valid backup files.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "blobContainerName": {
          "description": "Name of blob container.",
          "type": "string",
          "readOnly": true
        },
        "isFullBackupRestored": {
          "description": "Whether full backup has been applied to the target database or not.",
          "type": "boolean",
          "readOnly": true
        },
        "restoreBlockingReason": {
          "description": "Restore blocking reason, if any",
          "type": "string",
          "readOnly": true
        },
        "completeRestoreErrorMessage": {
          "description": "Complete restore error message, if any",
          "type": "string",
          "readOnly": true
        },
        "fileUploadBlockingErrors": {
          "description": "File upload blocking errors, if any.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "currentRestoringFilename": {
          "description": "File name that is currently being restored.",
          "type": "string",
          "readOnly": true
        },
        "lastRestoredFilename": {
          "description": "Last restored file name.",
          "type": "string",
          "readOnly": true
        },
        "pendingLogBackupsCount": {
          "format": "int32",
          "description": "Total pending log backups.",
          "type": "integer",
          "readOnly": true
        },
        "pendingDiffBackupsCount": {
          "format": "int32",
          "description": "Total pending diff backups.",
          "type": "integer",
          "readOnly": true
        }
      }
    },
    "BackupConfiguration": {
      "description": "Backup Configuration",
      "type": "object",
      "properties": {
        "sourceLocation": {
          "$ref": "#/definitions/SourceLocation",
          "description": "Source location of backups."
        },
        "targetLocation": {
          "$ref": "#/definitions/TargetLocation",
          "description": "Target location for copying backups."
        }
      }
    },
    "AutoCutoverConfiguration": {
      "description": "Auto cutover configuration",
      "type": "object",
      "properties": {
        "autoCutover": {
          "description": "Auto cutover migration",
          "type": "boolean"
        },
        "lastBackupName": {
          "description": "Last backup name for auto cutover. This is optional for migrations from file share. If it is not provided, then the service will determine the last backup file name based on latest backup files present in file share.",
          "type": "string"
        }
      }
    },
    "OfflineConfiguration": {
      "description": "Offline configuration",
      "type": "object",
      "properties": {
        "offline": {
          "description": "Offline migration",
          "type": "boolean"
        },
        "lastBackupName": {
          "description": "Last backup name for offline migration. This is optional for migrations from file share. If it is not provided, then the service will determine the last backup file name based on latest backup files present in file share.",
          "type": "string"
        }
      }
    },
    "MigrationStatusWarnings": {
      "description": "List of warnings for current migration for restore and cutover.",
      "type": "object",
      "properties": {
        "restoreBlockingReason": {
          "description": "Restore blocking reason, if any",
          "type": "string",
          "readOnly": true
        },
        "completeRestoreErrorMessage": {
          "description": "Complete restore error message, if any",
          "type": "string",
          "readOnly": true
        },
        "fileUploadBlockingErrorCount": {
          "format": "int32",
          "description": "File upload blocking errors count",
          "type": "integer",
          "readOnly": true
        }
      }
    },
    "SqlBackupSetInfo": {
      "description": "Information of backup set",
      "type": "object",
      "properties": {
        "backupSetId": {
          "format": "uuid",
          "description": "Backup set id.",
          "type": "string",
          "readOnly": true,
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "firstLSN": {
          "description": "First LSN of the backup set.",
          "type": "string",
          "readOnly": true
        },
        "lastLSN": {
          "description": "Last LSN of the backup set.",
          "type": "string",
          "readOnly": true
        },
        "backupType": {
          "description": "Backup type.",
          "type": "string",
          "readOnly": true
        },
        "listOfBackupFiles": {
          "description": "List of files in the backup set.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SqlBackupFileInfo"
          },
          "readOnly": true
        },
        "backupStartDate": {
          "format": "date-time",
          "description": "Backup start date.",
          "type": "string",
          "readOnly": true
        },
        "backupFinishDate": {
          "format": "date-time",
          "description": "Backup end time.",
          "type": "string",
          "readOnly": true
        },
        "isBackupRestored": {
          "description": "Whether this backup set has been restored or not.",
          "type": "boolean",
          "readOnly": true
        },
        "hasBackupChecksums": {
          "description": "Has Backup Checksums",
          "type": "boolean",
          "readOnly": true
        },
        "familyCount": {
          "format": "int32",
          "description": "Media family count",
          "type": "integer",
          "readOnly": true
        },
        "ignoreReasons": {
          "description": "The reasons why the backup set is ignored",
          "type": "array",
          "items": {
            "type": "string"
          },
          "readOnly": true
        }
      }
    },
    "SourceLocation": {
      "description": "Source Location details of backups.",
      "type": "object",
      "properties": {
        "azureBlob": {
          "$ref": "#/definitions/AzureBlob",
          "description": "Source Azure Blob."
        },
        "fileShare": {
          "$ref": "#/definitions/SqlFileShare",
          "description": "Source File share."
        },
        "fileStorageType": {
          "description": "Backup storage Type.",
          "type": "string",
          "readOnly": true
        },
        "testConnectivity": {
          "description": "Indicates whether to test connectivity to this resource.",
          "type": "boolean",
          "readOnly": true
        }
      }
    },
    "TargetLocation": {
      "description": "Target Location details for optional copy of backups",
      "type": "object",
      "properties": {
        "storageAccountResourceId": {
          "description": "Resource Id of the storage account copying backups.",
          "type": "string"
        },
        "accountKey": {
          "description": "Storage Account Key.",
          "type": "string"
        },
        "testConnectivity": {
          "description": "Indicates whether to test connectivity to this resource.",
          "type": "boolean",
          "readOnly": true
        }
      }
    },
    "SqlBackupFileInfo": {
      "description": "Information of backup file",
      "type": "object",
      "properties": {
        "fileName": {
          "description": "File name.",
          "type": "string",
          "readOnly": true
        },
        "status": {
          "description": "Status of the file. (Initial, Uploading, Uploaded, Restoring, Restored or Skipped)",
          "type": "string",
          "readOnly": true
        },
        "totalSize": {
          "format": "int64",
          "description": "File size in bytes",
          "type": "integer",
          "readOnly": true
        },
        "dataRead": {
          "format": "int64",
          "description": "Bytes read",
          "type": "integer",
          "readOnly": true
        },
        "dataWritten": {
          "format": "int64",
          "description": "Bytes written",
          "type": "integer",
          "readOnly": true
        },
        "copyThroughput": {
          "format": "double",
          "description": "Copy throughput in KBps",
          "type": "number",
          "readOnly": true
        },
        "copyDuration": {
          "format": "int32",
          "description": "Copy Duration in seconds",
          "type": "integer",
          "readOnly": true
        },
        "familySequenceNumber": {
          "format": "int32",
          "description": "Media family sequence number",
          "type": "integer",
          "readOnly": true
        }
      }
    },
    "AzureBlob": {
      "description": "Azure Blob Details",
      "type": "object",
      "properties": {
        "authType": {
          "description": "Authentication type used for accessing Azure Blob Storage.",
          "enum": [
            "AccountKey",
            "ManagedIdentity"
          ],
          "type": "string"
        },
        "identity": {
          "$ref": "#/definitions/ManagedServiceIdentity",
          "description": "Identity details for authentication using Managed Identity or User Identity."
        },
        "storageAccountResourceId": {
          "description": "Resource Id of the storage account where backups are stored.",
          "type": "string"
        },
        "accountKey": {
          "description": "Storage Account Key.",
          "type": "string"
        },
        "blobContainerName": {
          "description": "Blob container name where backups are stored.",
          "type": "string"
        }
      }
    },
    "SqlFileShare": {
      "description": "File share",
      "type": "object",
      "properties": {
        "path": {
          "description": "Location as SMB share or local drive where backups are placed.",
          "type": "string"
        },
        "diffAndLogBackupFilePath": {
          "description": "Location as SMB share or local drive where diff and log backups are placed.",
          "type": "string"
        },
        "username": {
          "description": "Username to access the file share location for backups.",
          "type": "string"
        },
        "password": {
          "description": "Password for username to access file share location.",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "update"
          ]
        }
      }
    },
    "ManagedServiceIdentity": {
      "type": "object",
      "properties": {
        "principalId": {
          "format": "uuid",
          "type": "string",
          "readOnly": true,
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "tenantId": {
          "format": "uuid",
          "type": "string",
          "readOnly": true,
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "managedServiceIdentityType": {
          "$ref": "#/definitions/ManagedServiceIdentityType"
        },
        "userAssignedIdentities": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/UserAssignedIdentity"
          },
          "readOnly": true
        }
      }
    },
    "ManagedServiceIdentityType": {
      "type": "object",
      "properties": {}
    },
    "UserAssignedIdentity": {
      "type": "object",
      "properties": {
        "principalId": {
          "format": "uuid",
          "type": "string",
          "readOnly": true,
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "clientId": {
          "format": "uuid",
          "type": "string",
          "readOnly": true,
          "example": "00000000-0000-0000-0000-000000000000"
        }
      }
    },
    "DatabaseMigrationSqlMi": {
      "description": "Database Migration Resource for SQL Managed Instance.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProxyResource"
        }
      ],
      "properties": {
        "location": {
          "description": "Location of database migration service.",
          "type": "string",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "systemData": {
          "$ref": "#/definitions/systemData",
          "description": "Metadata pertaining to creation and last modification of the resource.",
          "readOnly": true
        },
        "properties": {
          "$ref": "#/definitions/DatabaseMigrationPropertiesSqlMi",
          "description": "Resource properties.",
          "x-ms-client-flatten": true
        }
      }
    },
    "DatabaseMigrationSqlMiListResult": {
      "description": "A list of Database Migrations for SQL Managed Instance.",
      "type": "object",
      "properties": {
        "value": {
          "description": "Array of results.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DatabaseMigrationSqlMi"
          },
          "readOnly": true
        },
        "nextLink": {
          "description": "Link to retrieve next page of results.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "DatabaseMigrationPropertiesSqlVm": {
      "description": "Database Migration Resource properties for SQL Virtual Machine.",
      "type": "object",
      "properties": {
        "migrationStatusDetails": {
          "$ref": "#/definitions/MigrationStatusDetails",
          "description": "Detailed migration status. Not included by default.",
          "readOnly": true
        },
        "backupConfiguration": {
          "$ref": "#/definitions/BackupConfiguration",
          "description": "Backup configuration info."
        },
        "autoCutoverConfiguration": {
          "$ref": "#/definitions/AutoCutoverConfiguration",
          "description": "Auto cutover configuration."
        },
        "offlineConfiguration": {
          "$ref": "#/definitions/OfflineConfiguration",
          "description": "Offline configuration."
        },
        "migrationStatusWarnings": {
          "$ref": "#/definitions/MigrationStatusWarnings",
          "description": "List of warnings for current migration for restore and cutover."
        },
        "targetSqlConnection": {
          "$ref": "#/definitions/SqlConnectionInformation",
          "description": "Target SQL DB connection details."
        },
        "sourceOracleConnection": {
          "$ref": "#/definitions/OracleConnectionInformation",
          "description": "Source Oracle connection details."
        },
        "landingZoneConfiguration": {
          "$ref": "#/definitions/LandingZoneConfiguration",
          "description": "Landing zone configuration info."
        },
        "cdcOptionsConfiguration": {
          "$ref": "#/definitions/CdcOptionsConfiguration",
          "description": "Landing zone configuration info."
        },
        "cdcMigrationStatus": {
          "$ref": "#/definitions/CdcMigrationStatus",
          "description": "Landing zone configuration info."
        },
        "tableList": {
          "description": "List of tables to copy.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "targetTableList": {
          "description": "Tables for migration.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "keyVault": {
          "$ref": "#/definitions/KeyVaultProperties",
          "description": "Key Vault Properties",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "sourceSqlConnection": {
          "$ref": "#/definitions/SqlConnectionInformation",
          "description": "Source SQL Server connection details."
        },
        "sourceServerName": {
          "description": "Name of the source sql server.",
          "type": "string",
          "readOnly": true
        },
        "sourceDatabaseName": {
          "description": "Name of the source database.",
          "type": "string"
        },
        "targetDatabaseCollation": {
          "description": "Database collation to be used for the target database.",
          "type": "string"
        },
        "sqlServerInstanceId": {
          "description": "Optional property - Resource Id for the source Sql server instance. Validations are performed on this property to ensure that it follows the correct format.",
          "type": "string",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "scope": {
          "description": "Resource Id of the target resource.",
          "type": "string",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "provisioningState": {
          "description": "Provisioning State of migration. ProvisioningState as Succeeded implies that validations have been performed and migration has started.",
          "type": "string",
          "readOnly": true
        },
        "migrationStatus": {
          "description": "Migration status.",
          "type": "string",
          "readOnly": true
        },
        "startedOn": {
          "format": "date-time",
          "description": "Database migration start time.",
          "type": "string",
          "readOnly": true
        },
        "endedOn": {
          "format": "date-time",
          "description": "Database migration end time.",
          "type": "string",
          "readOnly": true
        },
        "migrationService": {
          "description": "Resource Id of the Migration Service.",
          "type": "string"
        },
        "migrationOperationId": {
          "description": "ID tracking current migration operation.",
          "type": "string"
        },
        "migrationFailureError": {
          "$ref": "#/definitions/ErrorInfo",
          "description": "Error details in case of migration failure.",
          "readOnly": true
        },
        "provisioningError": {
          "description": "Error message for migration provisioning failure, if any.",
          "type": "string"
        },
        "kind": {
          "description": "Resource Type",
          "enum": [
            "SqlMi",
            "SqlVm",
            "SqlDb",
            "OracleToSqlDb",
            "SqlConnectServiceTask",
            "MongoToCosmosDbMongo",
            "OracleToSqlMi",
            "OracleToSqlVm"
          ],
          "type": "string",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      }
    },
    "DatabaseMigrationSqlVm": {
      "description": "Database Migration Resource for SQL Virtual Machine.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProxyResource"
        }
      ],
      "properties": {
        "location": {
          "description": "Location of database migration service.",
          "type": "string",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "systemData": {
          "$ref": "#/definitions/systemData",
          "description": "Metadata pertaining to creation and last modification of the resource.",
          "readOnly": true
        },
        "properties": {
          "$ref": "#/definitions/DatabaseMigrationPropertiesSqlVm",
          "description": "Resource properties.",
          "x-ms-client-flatten": true
        }
      }
    },
    "DatabaseMigrationSqlVmListResult": {
      "description": "A list of Database Migrations for SQL Virtual Machine.",
      "type": "object",
      "properties": {
        "value": {
          "description": "Array of results.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DatabaseMigrationSqlVm"
          },
          "readOnly": true
        },
        "nextLink": {
          "description": "Link to retrieve next page of results.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "DatabaseMigrationProperties": {
      "description": "Database Migration Resource properties.",
      "type": "object",
      "properties": {
        "taskStatusDetails": {
          "$ref": "#/definitions/MigrationServiceTaskStatusDetails",
          "description": "Detailed migration service task status.",
          "readOnly": true
        },
        "scope": {
          "description": "Scope of the database.",
          "type": "string",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "provisioningState": {
          "description": "Provisioning State of migration. ProvisioningState as Succeeded implies that validations have been performed and migration has started.",
          "type": "string",
          "readOnly": true
        },
        "taskStatus": {
          "description": "Migration status.",
          "type": "string",
          "readOnly": true
        },
        "startedOn": {
          "format": "date-time",
          "description": "Database migration start time.",
          "type": "string",
          "readOnly": true
        },
        "endedOn": {
          "format": "date-time",
          "description": "Database migration end time.",
          "type": "string",
          "readOnly": true
        },
        "sqlConnection": {
          "$ref": "#/definitions/SqlConnectionInformation",
          "description": "SQL Server connection details."
        },
        "databaseList": {
          "description": "Database list.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "oracleConnection": {
          "$ref": "#/definitions/OracleConnectionInformation",
          "description": "Oracle Server connection details."
        },
        "schemaList": {
          "description": "Schema list.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "migrationService": {
          "description": "Resource Id of the Migration Service.",
          "type": "string"
        },
        "taskOperationId": {
          "description": "ID tracking current migration operation.",
          "type": "string"
        },
        "taskFailureError": {
          "$ref": "#/definitions/TaskErrorInfo",
          "description": "Error details in case of migration failure.",
          "readOnly": true
        },
        "provisioningError": {
          "description": "Error message for migration provisioning failure, if any.",
          "type": "string"
        },
        "taskType": {
          "description": "Resource Type",
          "enum": [
            "SqlConnect",
            "SqlConnectAzureSqlDb",
            "GetUserTables",
            "OracleConnect",
            "GetUserSchemaTables"
          ],
          "type": "string",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      }
    },
    "MigrationServiceTaskStatusDetails": {
      "description": "Detailed status of current migration service task.",
      "type": "object",
      "properties": {
        "taskState": {
          "description": "Current State of task.",
          "type": "string",
          "readOnly": true
        },
        "migrationServiceTaskErrors": {
          "description": "Migration service task errors, if any.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "listOfDatabaseDetails": {
          "description": "List of database details.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DatabaseDetails"
          },
          "readOnly": true
        },
        "databaseTableListMap": {
          "description": "Map of database name and list of table details.",
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/Microsoft.SqlServer.Management.Service.ResourceProvider.Arm.SqlMigration.V20200901.Entities.Common.TableDetails"
            }
          },
          "readOnly": true
        },
        "listOfSchemaDetails": {
          "description": "List of schema details.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SchemaDetails"
          },
          "readOnly": true
        },
        "schemaTableListMap": {
          "description": "Map of schema name and list of table details.",
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/Microsoft.SqlServer.Management.Service.ResourceProvider.Arm.SqlMigration.V20200901.Entities.Common.TableDetails"
            }
          },
          "readOnly": true
        }
      }
    },
    "TaskErrorInfo": {
      "description": "Error details",
      "type": "object",
      "properties": {
        "code": {
          "description": "Error code.",
          "type": "string",
          "readOnly": true
        },
        "message": {
          "description": "Error message.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "DatabaseDetails": {
      "description": "Details of database",
      "type": "object",
      "properties": {
        "databaseName": {
          "description": "Database Name",
          "type": "string",
          "readOnly": true
        },
        "state": {
          "description": "State of the database (eg. Online, Restoring, Offline).",
          "type": "string",
          "readOnly": true
        },
        "databaseSizeInMb": {
          "format": "double",
          "description": "Size of the database in MB",
          "type": "number",
          "readOnly": true
        },
        "collation": {
          "description": "Collation of the database",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "SchemaDetails": {
      "description": "Details of schema",
      "type": "object",
      "properties": {
        "schemaName": {
          "description": "Schema Name",
          "type": "string",
          "readOnly": true
        },
        "tablesCount": {
          "format": "int64",
          "description": "Tables count in this schema.",
          "type": "integer",
          "readOnly": true
        },
        "schemaSizeInMb": {
          "format": "double",
          "description": "Size of the schema in MB",
          "type": "number",
          "readOnly": true
        }
      }
    },
    "MigrationServiceTaskResource[MigrationServiceTaskResourceProperties]": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProxyResource"
        }
      ],
      "properties": {
        "location": {
          "description": "Location of database migration service.",
          "type": "string",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "systemData": {
          "$ref": "#/definitions/systemData",
          "description": "Metadata pertaining to creation and last modification of the resource.",
          "readOnly": true
        },
        "properties": {
          "$ref": "#/definitions/DatabaseMigrationProperties",
          "description": "Resource properties.",
          "x-ms-client-flatten": true
        }
      }
    },
    "OperationListResult": {
      "description": "Result of the request to list SQL operations.",
      "type": "object",
      "properties": {
        "value": {
          "description": "Array of results.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Operation"
          },
          "readOnly": true
        },
        "nextLink": {
          "description": "Link to retrieve next page of results.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "Operation": {
      "description": "SQL REST API operation definition.",
      "type": "object",
      "properties": {
        "name": {
          "description": "The name of the operation being performed on this particular object.",
          "type": "string",
          "readOnly": true
        },
        "display": {
          "$ref": "#/definitions/OperationDisplay",
          "description": "The localized display information for this particular operation / action.",
          "readOnly": true
        },
        "origin": {
          "description": "The intended executor of the operation.",
          "enum": [
            "user",
            "system"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "OperationOrigin",
            "modelAsString": true
          }
        },
        "properties": {
          "description": "Additional descriptions for the operation.",
          "type": "object",
          "additionalProperties": {
            "type": "object"
          },
          "readOnly": true,
          "x-ms-client-flatten": false
        }
      }
    },
    "OperationDisplay": {
      "description": "Display metadata associated with the operation.",
      "type": "object",
      "properties": {
        "provider": {
          "description": "The localized friendly form of the resource provider name.",
          "type": "string",
          "readOnly": true
        },
        "resource": {
          "description": "The localized friendly form of the resource type related to this action/operation.",
          "type": "string",
          "readOnly": true
        },
        "operation": {
          "description": "The localized friendly name for the operation.",
          "type": "string",
          "readOnly": true
        },
        "description": {
          "description": "The localized friendly description for the operation.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "SqlMigrationServiceIdentity": {
      "description": "The SQL Migration Service managed identity.",
      "type": "object",
      "properties": {
        "type": {
          "description": "Type of the Managed Identity",
          "type": "string"
        },
        "principalId": {
          "description": "Principal id of the Managed Identity",
          "type": "string",
          "readOnly": true
        },
        "tenantId": {
          "description": "Tenant id of the Managed Identity",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "SqlMigrationServiceProperties": {
      "description": "The SQL Migration Service properties.",
      "type": "object",
      "properties": {
        "provisioningState": {
          "description": "Provisioning state to track the async operation status.",
          "type": "string",
          "readOnly": true
        },
        "integrationRuntimeState": {
          "description": "Current state of the Integration runtime.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "TrackedResource": {
      "description": "ARM tracked top level resource.",
      "required": [
        "location"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "location": {
          "description": "Resource location.",
          "type": "string",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "tags": {
          "description": "Resource tags.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "SqlMigrationService": {
      "description": "A SQL Migration Service.",
      "required": [
        "location"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/TrackedResource"
        }
      ],
      "properties": {
        "systemData": {
          "$ref": "#/definitions/systemData",
          "description": "Metadata pertaining to creation and last modification of the resource.",
          "readOnly": true
        },
        "identity": {
          "$ref": "#/definitions/SqlMigrationServiceIdentity",
          "description": "Type of the managed identity tied to the resource."
        },
        "properties": {
          "$ref": "#/definitions/SqlMigrationServiceProperties",
          "description": "Resource properties.",
          "x-ms-client-flatten": true
        }
      }
    },
    "SqlMigrationServiceUpdate": {
      "description": "An update to a SQL Migration Service.",
      "type": "object",
      "properties": {
        "identity": {
          "$ref": "#/definitions/SqlMigrationServiceIdentity",
          "description": "Type of the managed identity tied to the resource.",
          "readOnly": true
        },
        "tags": {
          "description": "Resource tags.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "SqlMigrationListResult": {
      "description": "A list of SQL Migration Service.",
      "type": "object",
      "properties": {
        "value": {
          "description": "Array of results.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SqlMigrationService"
          },
          "readOnly": true
        },
        "nextLink": {
          "description": "Link to retrieve next page of results.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "AuthenticationKeys": {
      "description": "An authentication key.",
      "type": "object",
      "properties": {
        "authKey1": {
          "description": "The first authentication key.",
          "type": "string",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "authKey2": {
          "description": "The second authentication key.",
          "type": "string",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      }
    },
    "RegenAuthKeys": {
      "description": "An authentication key to regenerate.",
      "type": "object",
      "properties": {
        "keyName": {
          "description": "The name of authentication key to generate.",
          "type": "string",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "authKey1": {
          "description": "The first authentication key.",
          "type": "string",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "authKey2": {
          "description": "The second authentication key.",
          "type": "string",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      }
    },
    "deleteNode": {
      "description": "Details of node to be deleted.",
      "type": "object",
      "properties": {
        "nodeName": {
          "description": "The name of node to delete.",
          "type": "string",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "integrationRuntimeName": {
          "description": "The name of integration runtime.",
          "type": "string",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      }
    },
    "DatabaseMigrationListResult": {
      "description": "A list of Database Migrations.",
      "type": "object",
      "properties": {
        "value": {
          "description": "Array of results.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DatabaseMigration"
          },
          "readOnly": true
        },
        "nextLink": {
          "description": "Link to retrieve next page of results.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "DatabaseMigration": {
      "description": "Database Migration Resource.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProxyResource"
        }
      ],
      "properties": {
        "location": {
          "description": "Location of database migration service.",
          "type": "string",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "systemData": {
          "$ref": "#/definitions/systemData",
          "description": "Metadata pertaining to creation and last modification of the resource.",
          "readOnly": true
        },
        "properties": {
          "$ref": "#/definitions/DatabaseMigrationProperties",
          "description": "Resource properties.",
          "x-ms-client-flatten": true
        }
      }
    },
    "IntegrationRuntimeMonitoringData": {
      "description": "Integration Runtime Monitoring Data.",
      "type": "object",
      "properties": {
        "name": {
          "description": "The name of Integration Runtime.",
          "type": "string",
          "readOnly": true
        },
        "nodes": {
          "description": "Integration Runtime node monitoring data.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/NodeMonitoringData"
          },
          "readOnly": true
        }
      }
    },
    "NodeMonitoringData": {
      "type": "object",
      "properties": {
        "additionalProperties": {
          "description": " Unmatched properties from the message are deserialized in this collection.",
          "type": "object",
          "additionalProperties": {
            "type": "object"
          },
          "readOnly": true
        },
        "nodeName": {
          "description": "Name of the integration runtime node.",
          "type": "string",
          "readOnly": true
        },
        "availableMemoryInMB": {
          "format": "int32",
          "description": "Available memory (MB) on the integration runtime node.",
          "type": "integer",
          "readOnly": true
        },
        "cpuUtilization": {
          "format": "int32",
          "description": "CPU percentage on the integration runtime node.",
          "type": "integer",
          "readOnly": true
        },
        "concurrentJobsLimit": {
          "format": "int32",
          "description": "Maximum concurrent jobs on the integration runtime node.",
          "type": "integer",
          "readOnly": true
        },
        "concurrentJobsRunning": {
          "format": "int32",
          "description": "The number of jobs currently running on the integration runtime node.",
          "type": "integer",
          "readOnly": true
        },
        "maxConcurrentJobs": {
          "format": "int32",
          "description": "The maximum concurrent jobs in this integration runtime.",
          "type": "integer",
          "readOnly": true
        },
        "sentBytes": {
          "format": "double",
          "description": "Sent bytes on the integration runtime node.",
          "type": "number",
          "readOnly": true
        },
        "receivedBytes": {
          "format": "double",
          "description": "Received bytes on the integration runtime node.",
          "type": "number",
          "readOnly": true
        },
        "ipAddress": {
          "description": "IP address of the integration runtime node.",
          "type": "string",
          "readOnly": true
        },
        "status": {
          "description": "Node runtime status.",
          "type": "string",
          "readOnly": true
        },
        "registerTime": {
          "format": "date-time",
          "description": "Node register time.",
          "type": "string",
          "readOnly": true
        },
        "expiryTime": {
          "format": "date-time",
          "description": "Node expiry time.",
          "type": "string",
          "readOnly": true
        },
        "isActiveDispatcher": {
          "description": "True if node is the active dispatcher for integration runtime requests.",
          "type": "boolean",
          "readOnly": true
        },
        "lastConnectTime": {
          "format": "date-time",
          "description": "Node last connect time.",
          "type": "string",
          "readOnly": true
        },
        "lastStartUpdateTime": {
          "format": "date-time",
          "description": "Node last start update time.",
          "type": "string",
          "readOnly": true
        },
        "lastEndUpdateTime": {
          "format": "date-time",
          "description": "Node last end update time.",
          "type": "string",
          "readOnly": true
        },
        "lastStartTime": {
          "format": "date-time",
          "description": "Node last start time.",
          "type": "string",
          "readOnly": true
        },
        "lastStopTime": {
          "format": "date-time",
          "description": "Node last stop time.",
          "type": "string",
          "readOnly": true
        },
        "version": {
          "description": "Node version.",
          "type": "string",
          "readOnly": true
        },
        "versionStatus": {
          "description": "Node version status.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "validateIR": {
      "description": "IR validations",
      "type": "object",
      "properties": {
        "kind": {
          "description": "Resource Type",
          "enum": [
            "SqlMi",
            "SqlVm",
            "SqlDb",
            "OracleToSqlDb",
            "SqlConnectServiceTask",
            "MongoToCosmosDbMongo",
            "OracleToSqlMi",
            "OracleToSqlVm"
          ],
          "type": "string",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "sourceDatabaseName": {
          "description": "Name of the source database.",
          "type": "string"
        },
        "sourceSqlConnection": {
          "$ref": "#/definitions/SqlConnectionInformation",
          "description": "Source SQL Server connection details."
        },
        "sourceOracleConnection": {
          "$ref": "#/definitions/OracleConnectionInformation",
          "description": "Source Oracle connection details."
        },
        "landingZoneConnectionInfo": {
          "$ref": "#/definitions/LandingZoneLocation",
          "description": "Landing zone connection details."
        },
        "cdcMigrationOption": {
          "description": "CDC migration option.",
          "enum": [
            "FullAndIncrementalLoad",
            "InitialDataLoad",
            "IncrementalLoad",
            "Offline"
          ],
          "type": "string"
        },
        "targetDatabaseName": {
          "description": "Name of the target database.",
          "type": "string"
        },
        "targetSqlConnection": {
          "$ref": "#/definitions/SqlConnectionInformation",
          "description": "Target SQL Server connection details."
        },
        "backupConfiguration": {
          "$ref": "#/definitions/BackupConfiguration",
          "description": "Backup configuration info."
        },
        "succeeded": {
          "description": "Validation result.",
          "type": "boolean"
        },
        "errors": {
          "description": "Validation errors.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TestConnectivityData"
          }
        },
        "validateIntegrationRuntimeOnline": {
          "description": "Validate IR online.",
          "type": "boolean"
        },
        "sourceMongoConnectionString": {
          "description": "Source mongo Server connection details.",
          "type": "string"
        },
        "targetMongoConnectionString": {
          "description": "Target cosmosdb mongo Server connection details.",
          "type": "string"
        },
        "collectionList": {
          "description": "List of collections to be migrated.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/MongoMigrationCollection"
          }
        }
      }
    },
    "LandingZoneLocation": {
      "description": "Landing Zone Location details",
      "type": "object",
      "properties": {
        "storageAccountResourceId": {
          "description": "Resource Id of the storage account.",
          "type": "string"
        },
        "accountKey": {
          "description": "Storage Account Key.",
          "type": "string"
        },
        "testConnectivity": {
          "description": "Indicates whether to test connectivity to this resource.",
          "type": "boolean",
          "readOnly": true
        }
      }
    },
    "TestConnectivityData": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "MongoMigrationCollection": {
      "type": "object",
      "properties": {
        "sourceDatabase": {
          "type": "string"
        },
        "sourceCollection": {
          "type": "string"
        },
        "targetDatabase": {
          "type": "string"
        },
        "targetCollection": {
          "type": "string"
        }
      }
    }
  },
  "parameters": {
    "SubscriptionIdParameter": {
      "name": "subscriptionId",
      "in": "path",
      "description": "Subscription ID that identifies an Azure subscription.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "client"
    },
    "ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "description": "API version to use for the request.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "client"
    },
    "ResourceGroupParameter": {
      "name": "resourceGroupName",
      "in": "path",
      "description": "Name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "SqlMigrationServiceNameParameter": {
      "name": "sqlMigrationServiceName",
      "in": "path",
      "description": "Name of the SQL Migration Service.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "TargetDbNameParameter": {
      "name": "targetDbName",
      "in": "path",
      "description": "The name of the target database.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "LoginNameParameter": {
      "name": "loginName",
      "in": "path",
      "description": "The Login Name for migration.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    }
  },
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "description": "Azure Active Directory OAuth2 Flow",
      "flow": "implicit",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  }
}
