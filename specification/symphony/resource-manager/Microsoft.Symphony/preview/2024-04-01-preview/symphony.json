{
  "swagger": "2.0",
  "info": {
    "title": "Azure Symphony",
    "version": "2024-04-01-preview",
    "description": "Azure Symphony Resource Provider.",
    "x-typespec-generated": [
      {
        "emitter": "@azure-tools/typespec-autorest"
      }
    ]
  },
  "schemes": [
    "https"
  ],
  "host": "management.azure.com",
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "description": "Azure Active Directory OAuth2 Flow.",
      "flow": "implicit",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "tags": [
    {
      "name": "Solutions"
    },
    {
      "name": "Operations"
    },
    {
      "name": "Targets"
    },
    {
      "name": "SolutionVersions"
    },
    {
      "name": "Instances"
    },
    {
      "name": "Campaigns"
    },
    {
      "name": "Activations"
    },
    {
      "name": "Catalogs"
    }
  ],
  "paths": {
    "/providers/Microsoft.Symphony/operations": {
      "get": {
        "operationId": "Operations_List",
        "tags": [
          "Operations"
        ],
        "description": "List the operations for the provider",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/OperationListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Operations_List - generated by [MaximumSet] rule - generated by [MaximumSet] rule": {
            "$ref": "./examples/Operations_List_MaximumSet_Gen.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Symphony/activations": {
      "get": {
        "operationId": "Activations_ListBySubscription",
        "tags": [
          "Activations"
        ],
        "description": "Lists services within an Azure subscription.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ActivationListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Activations_ListBySubscription - generated by [MaximumSet] rule - generated by [MaximumSet] rule": {
            "$ref": "./examples/Activations_ListBySubscription_MaximumSet_Gen.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Symphony/campaigns": {
      "get": {
        "operationId": "Campaigns_ListBySubscription",
        "tags": [
          "Campaigns"
        ],
        "description": "Lists services within an Azure subscription.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/CampaignListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Campaigns_ListBySubscription - generated by [MaximumSet] rule - generated by [MaximumSet] rule": {
            "$ref": "./examples/Campaigns_ListBySubscription_MaximumSet_Gen.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Symphony/catalogs": {
      "get": {
        "operationId": "Catalogs_ListBySubscription",
        "tags": [
          "Catalogs"
        ],
        "description": "Lists services within an Azure subscription.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/CatalogListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Catalogs_ListBySubscription - generated by [MaximumSet] rule - generated by [MaximumSet] rule": {
            "$ref": "./examples/Catalogs_ListBySubscription_MaximumSet_Gen.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Symphony/instances": {
      "get": {
        "operationId": "Instances_ListBySubscription",
        "tags": [
          "Instances"
        ],
        "description": "Lists services within an Azure subscription.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/InstanceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Instances_ListBySubscription - generated by [MaximumSet] rule - generated by [MaximumSet] rule": {
            "$ref": "./examples/Instances_ListBySubscription_MaximumSet_Gen.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Symphony/solutions": {
      "get": {
        "operationId": "Solutions_ListBySubscription",
        "tags": [
          "Solutions"
        ],
        "description": "Lists services within an Azure subscription.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/SolutionListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Solutions_ListBySubscription - generated by [MaximumSet] rule - generated by [MaximumSet] rule": {
            "$ref": "./examples/Solutions_ListBySubscription_MaximumSet_Gen.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Symphony/targets": {
      "get": {
        "operationId": "Targets_ListBySubscription",
        "tags": [
          "Targets"
        ],
        "description": "Lists services within an Azure subscription.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/TargetListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Targets_ListBySubscription - generated by [MaximumSet] rule - generated by [MaximumSet] rule": {
            "$ref": "./examples/Targets_ListBySubscription_MaximumSet_Gen.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Symphony/activations": {
      "get": {
        "operationId": "Activations_ListByResourceGroup",
        "tags": [
          "Activations"
        ],
        "description": "Returns a collection of services within the resource group.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ActivationListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Activations_ListByResourceGroup - generated by [MaximumSet] rule - generated by [MaximumSet] rule": {
            "$ref": "./examples/Activations_ListByResourceGroup_MaximumSet_Gen.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Symphony/activations/{activationName}": {
      "get": {
        "operationId": "Activations_Get",
        "tags": [
          "Activations"
        ],
        "description": "Returns details of the service.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "activationName",
            "in": "path",
            "description": "The name of Azure API Center service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "pattern": "^[a-zA-Z0-9-]{3,90}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Activation"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Activations_Get - generated by [MaximumSet] rule - generated by [MaximumSet] rule": {
            "$ref": "./examples/Activations_Get_MaximumSet_Gen.json"
          }
        }
      },
      "put": {
        "operationId": "Activations_CreateOrUpdate",
        "tags": [
          "Activations"
        ],
        "description": "Creates new or updates existing API.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "activationName",
            "in": "path",
            "description": "The name of Azure API Center service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "pattern": "^[a-zA-Z0-9-]{3,90}$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Activation"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'Activation' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/Activation"
            }
          },
          "201": {
            "description": "Resource 'Activation' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/Activation"
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Activations_CreateOrUpdate - generated by [MaximumSet] rule - generated by [MaximumSet] rule": {
            "$ref": "./examples/Activations_CreateOrUpdate_MaximumSet_Gen.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "Activations_Update",
        "tags": [
          "Activations"
        ],
        "description": "Updates existing service.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "activationName",
            "in": "path",
            "description": "The name of Azure API Center service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "pattern": "^[a-zA-Z0-9-]{3,90}$"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "The resource properties to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ActivationUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Activation"
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Activations_Update - generated by [MaximumSet] rule - generated by [MaximumSet] rule": {
            "$ref": "./examples/Activations_Update_MaximumSet_Gen.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "Activations_Delete",
        "tags": [
          "Activations"
        ],
        "description": "Deletes specified service.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "activationName",
            "in": "path",
            "description": "The name of Azure API Center service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "pattern": "^[a-zA-Z0-9-]{3,90}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Activations_Delete - generated by [MaximumSet] rule - generated by [MaximumSet] rule": {
            "$ref": "./examples/Activations_Delete_MaximumSet_Gen.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Symphony/campaigns": {
      "get": {
        "operationId": "Campaigns_ListByResourceGroup",
        "tags": [
          "Campaigns"
        ],
        "description": "Returns a collection of services within the resource group.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/CampaignListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Campaigns_ListByResourceGroup - generated by [MaximumSet] rule - generated by [MaximumSet] rule": {
            "$ref": "./examples/Campaigns_ListByResourceGroup_MaximumSet_Gen.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Symphony/campaigns/{campaignName}": {
      "get": {
        "operationId": "Campaigns_Get",
        "tags": [
          "Campaigns"
        ],
        "description": "Returns details of the service.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "campaignName",
            "in": "path",
            "description": "The name of Azure API Center service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "pattern": "^[a-zA-Z0-9-]{3,90}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Campaign"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Campaigns_Get - generated by [MaximumSet] rule - generated by [MaximumSet] rule": {
            "$ref": "./examples/Campaigns_Get_MaximumSet_Gen.json"
          }
        }
      },
      "put": {
        "operationId": "Campaigns_CreateOrUpdate",
        "tags": [
          "Campaigns"
        ],
        "description": "Creates new or updates existing API.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "campaignName",
            "in": "path",
            "description": "The name of Azure API Center service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "pattern": "^[a-zA-Z0-9-]{3,90}$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Campaign"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'Campaign' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/Campaign"
            }
          },
          "201": {
            "description": "Resource 'Campaign' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/Campaign"
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Campaigns_CreateOrUpdate - generated by [MaximumSet] rule - generated by [MaximumSet] rule": {
            "$ref": "./examples/Campaigns_CreateOrUpdate_MaximumSet_Gen.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "Campaigns_Update",
        "tags": [
          "Campaigns"
        ],
        "description": "Updates existing service.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "campaignName",
            "in": "path",
            "description": "The name of Azure API Center service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "pattern": "^[a-zA-Z0-9-]{3,90}$"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "The resource properties to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CampaignUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Campaign"
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Campaigns_Update - generated by [MaximumSet] rule - generated by [MaximumSet] rule": {
            "$ref": "./examples/Campaigns_Update_MaximumSet_Gen.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "Campaigns_Delete",
        "tags": [
          "Campaigns"
        ],
        "description": "Deletes specified service.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "campaignName",
            "in": "path",
            "description": "The name of Azure API Center service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "pattern": "^[a-zA-Z0-9-]{3,90}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Campaigns_Delete - generated by [MaximumSet] rule - generated by [MaximumSet] rule": {
            "$ref": "./examples/Campaigns_Delete_MaximumSet_Gen.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Symphony/catalogs": {
      "get": {
        "operationId": "Catalogs_ListByResourceGroup",
        "tags": [
          "Catalogs"
        ],
        "description": "Returns a collection of services within the resource group.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/CatalogListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Catalogs_ListByResourceGroup - generated by [MaximumSet] rule - generated by [MaximumSet] rule": {
            "$ref": "./examples/Catalogs_ListByResourceGroup_MaximumSet_Gen.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Symphony/catalogs/{catalogName}": {
      "get": {
        "operationId": "Catalogs_Get",
        "tags": [
          "Catalogs"
        ],
        "description": "Returns details of the service.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "catalogName",
            "in": "path",
            "description": "The name of Azure API Center service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "pattern": "^[a-zA-Z0-9-]{3,90}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Catalog"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Catalogs_Get - generated by [MaximumSet] rule - generated by [MaximumSet] rule": {
            "$ref": "./examples/Catalogs_Get_MaximumSet_Gen.json"
          }
        }
      },
      "put": {
        "operationId": "Catalogs_CreateOrUpdate",
        "tags": [
          "Catalogs"
        ],
        "description": "Creates new or updates existing API.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "catalogName",
            "in": "path",
            "description": "The name of Azure API Center service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "pattern": "^[a-zA-Z0-9-]{3,90}$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Catalog"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'Catalog' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/Catalog"
            }
          },
          "201": {
            "description": "Resource 'Catalog' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/Catalog"
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Catalogs_CreateOrUpdate - generated by [MaximumSet] rule - generated by [MaximumSet] rule": {
            "$ref": "./examples/Catalogs_CreateOrUpdate_MaximumSet_Gen.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "Catalogs_Update",
        "tags": [
          "Catalogs"
        ],
        "description": "Updates existing service.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "catalogName",
            "in": "path",
            "description": "The name of Azure API Center service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "pattern": "^[a-zA-Z0-9-]{3,90}$"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "The resource properties to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CatalogUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Catalog"
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Catalogs_Update - generated by [MaximumSet] rule - generated by [MaximumSet] rule": {
            "$ref": "./examples/Catalogs_Update_MaximumSet_Gen.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "Catalogs_Delete",
        "tags": [
          "Catalogs"
        ],
        "description": "Deletes specified service.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "catalogName",
            "in": "path",
            "description": "The name of Azure API Center service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "pattern": "^[a-zA-Z0-9-]{3,90}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Catalogs_Delete - generated by [MaximumSet] rule - generated by [MaximumSet] rule": {
            "$ref": "./examples/Catalogs_Delete_MaximumSet_Gen.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Symphony/instances": {
      "get": {
        "operationId": "Instances_ListByResourceGroup",
        "tags": [
          "Instances"
        ],
        "description": "Returns a collection of services within the resource group.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/InstanceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Instances_ListByResourceGroup - generated by [MaximumSet] rule - generated by [MaximumSet] rule": {
            "$ref": "./examples/Instances_ListByResourceGroup_MaximumSet_Gen.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Symphony/instances/{instanceName}": {
      "get": {
        "operationId": "Instances_Get",
        "tags": [
          "Instances"
        ],
        "description": "Returns details of the service.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "instanceName",
            "in": "path",
            "description": "The name of Azure API Center service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "pattern": "^[a-zA-Z0-9-]{3,90}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Instance"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Instances_Get - generated by [MaximumSet] rule - generated by [MaximumSet] rule": {
            "$ref": "./examples/Instances_Get_MaximumSet_Gen.json"
          }
        }
      },
      "put": {
        "operationId": "Instances_CreateOrUpdate",
        "tags": [
          "Instances"
        ],
        "description": "Creates new or updates existing API.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "instanceName",
            "in": "path",
            "description": "The name of Azure API Center service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "pattern": "^[a-zA-Z0-9-]{3,90}$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Instance"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'Instance' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/Instance"
            }
          },
          "201": {
            "description": "Resource 'Instance' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/Instance"
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Instances_CreateOrUpdate - generated by [MaximumSet] rule - generated by [MaximumSet] rule": {
            "$ref": "./examples/Instances_CreateOrUpdate_MaximumSet_Gen.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "Instances_Update",
        "tags": [
          "Instances"
        ],
        "description": "Updates existing service.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "instanceName",
            "in": "path",
            "description": "The name of Azure API Center service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "pattern": "^[a-zA-Z0-9-]{3,90}$"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "The resource properties to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/InstanceUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Instance"
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Instances_Update - generated by [MaximumSet] rule - generated by [MaximumSet] rule": {
            "$ref": "./examples/Instances_Update_MaximumSet_Gen.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "Instances_Delete",
        "tags": [
          "Instances"
        ],
        "description": "Deletes specified service.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "instanceName",
            "in": "path",
            "description": "The name of Azure API Center service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "pattern": "^[a-zA-Z0-9-]{3,90}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Instances_Delete - generated by [MaximumSet] rule - generated by [MaximumSet] rule": {
            "$ref": "./examples/Instances_Delete_MaximumSet_Gen.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Symphony/solutions": {
      "get": {
        "operationId": "Solutions_ListByResourceGroup",
        "tags": [
          "Solutions"
        ],
        "description": "Returns a collection of services within the resource group.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/SolutionListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Solutions_ListByResourceGroup - generated by [MaximumSet] rule - generated by [MaximumSet] rule": {
            "$ref": "./examples/Solutions_ListByResourceGroup_MaximumSet_Gen.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Symphony/solutions/{solutionName}": {
      "get": {
        "operationId": "Solutions_Get",
        "tags": [
          "Solutions"
        ],
        "description": "Returns details of the service.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "solutionName",
            "in": "path",
            "description": "The name of Azure API Center service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "pattern": "^[a-zA-Z0-9-]{3,90}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Solution"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Solutions_Get - generated by [MaximumSet] rule - generated by [MaximumSet] rule": {
            "$ref": "./examples/Solutions_Get_MaximumSet_Gen.json"
          }
        }
      },
      "put": {
        "operationId": "Solutions_CreateOrUpdate",
        "tags": [
          "Solutions"
        ],
        "description": "Creates new or updates existing API.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "solutionName",
            "in": "path",
            "description": "The name of Azure API Center service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "pattern": "^[a-zA-Z0-9-]{3,90}$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Solution"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'Solution' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/Solution"
            }
          },
          "201": {
            "description": "Resource 'Solution' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/Solution"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Solutions_CreateOrUpdate - generated by [MaximumSet] rule - generated by [MaximumSet] rule": {
            "$ref": "./examples/Solutions_CreateOrUpdate_MaximumSet_Gen.json"
          }
        }
      },
      "patch": {
        "operationId": "Solutions_Update",
        "tags": [
          "Solutions"
        ],
        "description": "Updates existing service.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "solutionName",
            "in": "path",
            "description": "The name of Azure API Center service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "pattern": "^[a-zA-Z0-9-]{3,90}$"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "The resource properties to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SolutionUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Solution"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Solutions_Update - generated by [MaximumSet] rule - generated by [MaximumSet] rule": {
            "$ref": "./examples/Solutions_Update_MaximumSet_Gen.json"
          }
        }
      },
      "delete": {
        "operationId": "Solutions_Delete",
        "tags": [
          "Solutions"
        ],
        "description": "Deletes specified service.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "solutionName",
            "in": "path",
            "description": "The name of Azure API Center service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "pattern": "^[a-zA-Z0-9-]{3,90}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Solutions_Delete - generated by [MaximumSet] rule - generated by [MaximumSet] rule": {
            "$ref": "./examples/Solutions_Delete_MaximumSet_Gen.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Symphony/solutions/{solutionName}/versions": {
      "get": {
        "operationId": "SolutionVersions_ListBySolution",
        "tags": [
          "SolutionVersions"
        ],
        "description": "List SolutionVersion resources by Solution",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "solutionName",
            "in": "path",
            "description": "The name of Azure API Center service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "pattern": "^[a-zA-Z0-9-]{3,90}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/SolutionVersionListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Symphony/solutions/{solutionName}/versions/{versionName}": {
      "get": {
        "operationId": "SolutionVersions_Get",
        "tags": [
          "SolutionVersions"
        ],
        "description": "Returns details of the service.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "solutionName",
            "in": "path",
            "description": "The name of Azure API Center service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "pattern": "^[a-zA-Z0-9-]{3,90}$"
          },
          {
            "name": "versionName",
            "in": "path",
            "description": "The name of Azure API Center service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "pattern": "^[a-zA-Z0-9-]{3,90}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/SolutionVersion"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "operationId": "SolutionVersions_CreateOrUpdate",
        "tags": [
          "SolutionVersions"
        ],
        "description": "Creates new or updates existing API.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "solutionName",
            "in": "path",
            "description": "The name of Azure API Center service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "pattern": "^[a-zA-Z0-9-]{3,90}$"
          },
          {
            "name": "versionName",
            "in": "path",
            "description": "The name of Azure API Center service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "pattern": "^[a-zA-Z0-9-]{3,90}$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SolutionVersion"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'SolutionVersion' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/SolutionVersion"
            }
          },
          "201": {
            "description": "Resource 'SolutionVersion' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/SolutionVersion"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "patch": {
        "operationId": "SolutionVersions_Update",
        "tags": [
          "SolutionVersions"
        ],
        "description": "Updates existing service.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "solutionName",
            "in": "path",
            "description": "The name of Azure API Center service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "pattern": "^[a-zA-Z0-9-]{3,90}$"
          },
          {
            "name": "versionName",
            "in": "path",
            "description": "The name of Azure API Center service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "pattern": "^[a-zA-Z0-9-]{3,90}$"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "The resource properties to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SolutionVersionUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/SolutionVersion"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "operationId": "SolutionVersions_Delete",
        "tags": [
          "SolutionVersions"
        ],
        "description": "Deletes specified service.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "solutionName",
            "in": "path",
            "description": "The name of Azure API Center service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "pattern": "^[a-zA-Z0-9-]{3,90}$"
          },
          {
            "name": "versionName",
            "in": "path",
            "description": "The name of Azure API Center service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "pattern": "^[a-zA-Z0-9-]{3,90}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Symphony/targets": {
      "get": {
        "operationId": "Targets_ListByResourceGroup",
        "tags": [
          "Targets"
        ],
        "description": "Returns a collection of services within the resource group.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/TargetListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Targets_ListByResourceGroup - generated by [MaximumSet] rule - generated by [MaximumSet] rule": {
            "$ref": "./examples/Targets_ListByResourceGroup_MaximumSet_Gen.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Symphony/targets/{targetName}": {
      "get": {
        "operationId": "Targets_Get",
        "tags": [
          "Targets"
        ],
        "description": "Returns details of the service.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "targetName",
            "in": "path",
            "description": "The name of Azure API Center service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "pattern": "^[a-zA-Z0-9-]{3,90}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Target"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Targets_Get - generated by [MaximumSet] rule - generated by [MaximumSet] rule": {
            "$ref": "./examples/Targets_Get_MaximumSet_Gen.json"
          }
        }
      },
      "put": {
        "operationId": "Targets_CreateOrUpdate",
        "tags": [
          "Targets"
        ],
        "description": "Creates new or updates existing API.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "targetName",
            "in": "path",
            "description": "The name of Azure API Center service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "pattern": "^[a-zA-Z0-9-]{3,90}$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Target"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'Target' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/Target"
            }
          },
          "201": {
            "description": "Resource 'Target' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/Target"
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Targets_CreateOrUpdate - generated by [MaximumSet] rule - generated by [MaximumSet] rule": {
            "$ref": "./examples/Targets_CreateOrUpdate_MaximumSet_Gen.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "Targets_Update",
        "tags": [
          "Targets"
        ],
        "description": "Updates existing service.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "targetName",
            "in": "path",
            "description": "The name of Azure API Center service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "pattern": "^[a-zA-Z0-9-]{3,90}$"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "The resource properties to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TargetUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Target"
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Targets_Update - generated by [MaximumSet] rule - generated by [MaximumSet] rule": {
            "$ref": "./examples/Targets_Update_MaximumSet_Gen.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "Targets_Delete",
        "tags": [
          "Targets"
        ],
        "description": "Deletes specified service.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "targetName",
            "in": "path",
            "description": "The name of Azure API Center service.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "pattern": "^[a-zA-Z0-9-]{3,90}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Targets_Delete - generated by [MaximumSet] rule - generated by [MaximumSet] rule": {
            "$ref": "./examples/Targets_Delete_MaximumSet_Gen.json"
          }
        }
      }
    }
  },
  "definitions": {
    "Activation": {
      "type": "object",
      "description": "The service entity.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ActivationProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "extendedLocation": {
          "$ref": "#/definitions/ExtendedLocation",
          "description": "Edge location of the resource.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "required": [
        "extendedLocation"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "ActivationListResult": {
      "type": "object",
      "description": "The response of a Activation list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The Activation items on this page",
          "items": {
            "$ref": "#/definitions/Activation"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "ActivationProperties": {
      "type": "object",
      "description": "The properties of the service.",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "Provisioning state of the service.",
          "readOnly": true
        },
        "inputs": {
          "type": "object",
          "additionalProperties": {}
        },
        "name": {
          "type": "string"
        },
        "stage": {
          "type": "string"
        },
        "campaign": {
          "type": "string"
        },
        "status": {
          "$ref": "#/definitions/ActivationStatusProperties",
          "readOnly": true
        }
      },
      "required": [
        "campaign"
      ]
    },
    "ActivationStatusProperties": {
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "additionalProperties": {}
        },
        "outputs": {
          "type": "object",
          "additionalProperties": {}
        },
        "stage": {
          "type": "string"
        },
        "isActive": {
          "type": "boolean"
        },
        "nextStage": {
          "type": "string"
        },
        "errorMessage": {
          "type": "string"
        },
        "activationGeneration": {
          "type": "string"
        },
        "updateTime": {
          "type": "string"
        },
        "status": {
          "type": "integer",
          "format": "int32"
        }
      },
      "required": [
        "stage"
      ]
    },
    "ActivationUpdate": {
      "type": "object",
      "description": "The type used for update operations of the Activation.",
      "properties": {
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "$ref": "#/definitions/ActivationUpdateProperties",
          "x-ms-client-flatten": true
        }
      }
    },
    "ActivationUpdateProperties": {
      "type": "object",
      "description": "The updatable properties of the Activation.",
      "properties": {
        "inputs": {
          "type": "object",
          "additionalProperties": {}
        },
        "name": {
          "type": "string"
        },
        "stage": {
          "type": "string"
        },
        "campaign": {
          "type": "string"
        }
      }
    },
    "BindingProperties": {
      "type": "object",
      "description": "Defines a desired runtime binding",
      "properties": {
        "provider": {
          "type": "string"
        },
        "config": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "role": {
          "type": "string"
        }
      },
      "required": [
        "provider",
        "role"
      ]
    },
    "Campaign": {
      "type": "object",
      "description": "The service entity.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/CampaignProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "extendedLocation": {
          "$ref": "#/definitions/ExtendedLocation",
          "description": "Edge location of the resource.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "required": [
        "extendedLocation"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "CampaignListResult": {
      "type": "object",
      "description": "The response of a Campaign list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The Campaign items on this page",
          "items": {
            "$ref": "#/definitions/Campaign"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "CampaignProperties": {
      "type": "object",
      "description": "The properties of the service.",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "Provisioning state of the service.",
          "readOnly": true
        },
        "firstStage": {
          "type": "string"
        },
        "selfDriving": {
          "type": "boolean"
        },
        "stages": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/StageProperties"
          }
        }
      }
    },
    "CampaignUpdate": {
      "type": "object",
      "description": "The type used for update operations of the Campaign.",
      "properties": {
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "$ref": "#/definitions/CampaignUpdateProperties",
          "x-ms-client-flatten": true
        }
      }
    },
    "CampaignUpdateProperties": {
      "type": "object",
      "description": "The updatable properties of the Campaign.",
      "properties": {
        "firstStage": {
          "type": "string"
        },
        "selfDriving": {
          "type": "boolean"
        },
        "stages": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/StageProperties"
          }
        }
      }
    },
    "Catalog": {
      "type": "object",
      "description": "The service entity.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/CatalogProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "extendedLocation": {
          "$ref": "#/definitions/ExtendedLocation",
          "description": "Edge location of the resource.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "required": [
        "extendedLocation"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "CatalogListResult": {
      "type": "object",
      "description": "The response of a Catalog list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The Catalog items on this page",
          "items": {
            "$ref": "#/definitions/Catalog"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "CatalogProperties": {
      "type": "object",
      "description": "The properties of the service.",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "Provisioning state of the service.",
          "readOnly": true
        },
        "properties": {
          "type": "object",
          "additionalProperties": {}
        },
        "metadata": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "parentName": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "required": [
        "properties",
        "type"
      ]
    },
    "CatalogUpdate": {
      "type": "object",
      "description": "The type used for update operations of the Catalog.",
      "properties": {
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "$ref": "#/definitions/CatalogUpdateProperties",
          "x-ms-client-flatten": true
        }
      }
    },
    "CatalogUpdateProperties": {
      "type": "object",
      "description": "The updatable properties of the Catalog.",
      "properties": {
        "properties": {
          "type": "object",
          "additionalProperties": {}
        },
        "metadata": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "parentName": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "ComponentProperties": {
      "type": "object",
      "description": "Defines a desired runtime component",
      "properties": {
        "name": {
          "type": "string",
          "description": "Array of field values."
        },
        "metadata": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "type": "object",
          "additionalProperties": {}
        },
        "constraints": {
          "type": "string"
        },
        "dependencies": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "type": {
          "type": "string"
        }
      },
      "required": [
        "name",
        "type"
      ]
    },
    "ExtendedLocation": {
      "type": "object",
      "description": "Extended location is an extension of Azure locations. They provide a way to use their Azure ARC enabled Kubernetes clusters as target locations for deploying Azure services instances.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the extended location."
        },
        "type": {
          "type": "string",
          "description": "The type of the extended location."
        }
      },
      "required": [
        "name",
        "type"
      ]
    },
    "FilterProperties": {
      "type": "object",
      "description": "The properties of the route.",
      "properties": {
        "direction": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "parameters": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "required": [
        "direction",
        "type"
      ]
    },
    "Instance": {
      "type": "object",
      "description": "The service entity.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/InstanceProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "extendedLocation": {
          "$ref": "#/definitions/ExtendedLocation",
          "description": "Edge location of the resource.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "required": [
        "extendedLocation"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "InstanceListResult": {
      "type": "object",
      "description": "The response of a Instance list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The Instance items on this page",
          "items": {
            "$ref": "#/definitions/Instance"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "InstanceProperties": {
      "type": "object",
      "description": "The properties of the service.",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "Provisioning state of the service.",
          "readOnly": true
        },
        "metadata": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "displayName": {
          "type": "string"
        },
        "scope": {
          "type": "string"
        },
        "solution": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "target": {
          "$ref": "#/definitions/InstanceTargetProperties"
        },
        "reconciliationPolicy": {
          "$ref": "#/definitions/ReconciliationPolicyProperties"
        }
      },
      "required": [
        "solution"
      ]
    },
    "InstanceTargetProperties": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "selector": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "InstanceUpdate": {
      "type": "object",
      "description": "The type used for update operations of the Instance.",
      "properties": {
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "$ref": "#/definitions/InstanceUpdateProperties",
          "x-ms-client-flatten": true
        }
      }
    },
    "InstanceUpdateProperties": {
      "type": "object",
      "description": "The updatable properties of the Instance.",
      "properties": {
        "metadata": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "displayName": {
          "type": "string"
        },
        "scope": {
          "type": "string"
        },
        "solution": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "target": {
          "$ref": "#/definitions/InstanceTargetProperties"
        },
        "reconciliationPolicy": {
          "$ref": "#/definitions/ReconciliationPolicyPropertiesUpdate"
        }
      }
    },
    "ProvisioningState": {
      "type": "string",
      "description": "The provisioning state of the resource",
      "enum": [
        "Succeeded",
        "Failed",
        "Canceled"
      ],
      "x-ms-enum": {
        "name": "ProvisioningState",
        "modelAsString": true,
        "values": [
          {
            "name": "Succeeded",
            "value": "Succeeded",
            "description": "Resource has been created."
          },
          {
            "name": "Failed",
            "value": "Failed",
            "description": "Resource creation failed."
          },
          {
            "name": "Canceled",
            "value": "Canceled",
            "description": "Resource creation was canceled."
          }
        ]
      },
      "readOnly": true
    },
    "ReconciliationPolicyProperties": {
      "type": "object",
      "properties": {
        "state": {
          "type": "string"
        },
        "interval": {
          "type": "string"
        }
      },
      "required": [
        "state",
        "interval"
      ]
    },
    "ReconciliationPolicyPropertiesUpdate": {
      "type": "object",
      "properties": {
        "state": {
          "type": "string"
        },
        "interval": {
          "type": "string"
        }
      }
    },
    "ScheduleProperties": {
      "type": "object",
      "properties": {
        "date": {
          "type": "string"
        },
        "time": {
          "type": "string"
        },
        "zone": {
          "type": "string"
        }
      },
      "required": [
        "date",
        "time",
        "zone"
      ]
    },
    "Solution": {
      "type": "object",
      "description": "The service entity.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/SolutionProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "extendedLocation": {
          "$ref": "#/definitions/ExtendedLocation",
          "description": "Edge location of the resource.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "required": [
        "extendedLocation"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "SolutionListResult": {
      "type": "object",
      "description": "The response of a Solution list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The Solution items on this page",
          "items": {
            "$ref": "#/definitions/Solution"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "SolutionProperties": {
      "type": "object",
      "description": "The properties of the service.",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "Provisioning state of the service.",
          "readOnly": true
        }
      }
    },
    "SolutionUpdate": {
      "type": "object",
      "description": "The type used for update operations of the Solution.",
      "properties": {
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "SolutionVersion": {
      "type": "object",
      "description": "The service entity.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/SolutionVersionProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "extendedLocation": {
          "$ref": "#/definitions/ExtendedLocation",
          "description": "Edge location of the resource.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "required": [
        "extendedLocation"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "SolutionVersionListResult": {
      "type": "object",
      "description": "The response of a SolutionVersion list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The SolutionVersion items on this page",
          "items": {
            "$ref": "#/definitions/SolutionVersion"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "SolutionVersionProperties": {
      "type": "object",
      "description": "The properties of the service.",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "Provisioning state of the service.",
          "readOnly": true
        },
        "components": {
          "type": "array",
          "description": "A list of components",
          "items": {
            "$ref": "#/definitions/ComponentProperties"
          },
          "x-ms-identifiers": []
        },
        "displayName": {
          "type": "string"
        },
        "metadata": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "SolutionVersionUpdate": {
      "type": "object",
      "description": "The type used for update operations of the SolutionVersion.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/SolutionVersionUpdateProperties",
          "x-ms-client-flatten": true
        }
      }
    },
    "SolutionVersionUpdateProperties": {
      "type": "object",
      "description": "The updatable properties of the SolutionVersion.",
      "properties": {
        "components": {
          "type": "array",
          "description": "A list of components",
          "items": {
            "$ref": "#/definitions/ComponentProperties"
          },
          "x-ms-identifiers": []
        },
        "displayName": {
          "type": "string"
        },
        "metadata": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "StageProperties": {
      "type": "object",
      "properties": {
        "contexts": {
          "type": "string"
        },
        "config": {
          "type": "object",
          "additionalProperties": {}
        },
        "inputs": {
          "type": "object",
          "additionalProperties": {}
        },
        "name": {
          "type": "string"
        },
        "provider": {
          "type": "string"
        },
        "stageSelector": {
          "type": "string"
        },
        "schedule": {
          "$ref": "#/definitions/ScheduleProperties"
        }
      },
      "required": [
        "schedule"
      ]
    },
    "Target": {
      "type": "object",
      "description": "The service entity.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/TargetProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "extendedLocation": {
          "$ref": "#/definitions/ExtendedLocation",
          "description": "Edge location of the resource.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "required": [
        "extendedLocation"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "TargetListResult": {
      "type": "object",
      "description": "The response of a Target list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The Target items on this page",
          "items": {
            "$ref": "#/definitions/Target"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "TargetProperties": {
      "type": "object",
      "description": "The properties of the service.",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "Provisioning state of the service.",
          "readOnly": true
        },
        "metadata": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "displayName": {
          "type": "string"
        },
        "constraints": {
          "type": "string"
        },
        "scope": {
          "type": "string"
        },
        "topologies": {
          "type": "array",
          "description": "A list of topologies",
          "items": {
            "$ref": "#/definitions/TopologyProperties"
          },
          "x-ms-identifiers": []
        },
        "components": {
          "type": "array",
          "description": "A list of components",
          "items": {
            "$ref": "#/definitions/ComponentProperties"
          },
          "x-ms-identifiers": []
        },
        "reconciliationPolicy": {
          "$ref": "#/definitions/ReconciliationPolicyProperties"
        }
      }
    },
    "TargetUpdate": {
      "type": "object",
      "description": "The type used for update operations of the Target.",
      "properties": {
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "$ref": "#/definitions/TargetUpdateProperties",
          "x-ms-client-flatten": true
        }
      }
    },
    "TargetUpdateProperties": {
      "type": "object",
      "description": "The updatable properties of the Target.",
      "properties": {
        "metadata": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "displayName": {
          "type": "string"
        },
        "constraints": {
          "type": "string"
        },
        "scope": {
          "type": "string"
        },
        "topologies": {
          "type": "array",
          "description": "A list of topologies",
          "items": {
            "$ref": "#/definitions/TopologyProperties"
          },
          "x-ms-identifiers": []
        },
        "components": {
          "type": "array",
          "description": "A list of components",
          "items": {
            "$ref": "#/definitions/ComponentProperties"
          },
          "x-ms-identifiers": []
        },
        "reconciliationPolicy": {
          "$ref": "#/definitions/ReconciliationPolicyPropertiesUpdate"
        }
      }
    },
    "TopologyProperties": {
      "type": "object",
      "description": "Defines a desired runtime topology",
      "properties": {
        "bindings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BindingProperties"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "Versions": {
      "type": "string",
      "description": "Versions info.",
      "enum": [
        "2024-04-01-preview"
      ],
      "x-ms-enum": {
        "name": "Versions",
        "modelAsString": true,
        "values": [
          {
            "name": "2024-04-01-preview",
            "value": "2024-04-01-preview",
            "description": "2024-04-01-preview preview version"
          }
        ]
      }
    }
  },
  "parameters": {}
}
