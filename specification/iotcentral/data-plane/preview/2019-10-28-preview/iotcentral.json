{
    "swagger": "2.0",
    "info": {
        "version": "1.0.0",
        "title": "Azure IoT Central",
        "description": "Azure IoT Central is a service that makes it easy to connect, monitor, and manage your IoT devices at scale."
    },
    "host": "apps.azureiotcentral.com",
    "basePath": "/api/preview",
    "schemes": ["https"],
    "consumes": ["application/json"],
    "produces": ["application/json"],
    "definitions": {
        "ApiToken": {
            "type": "object",
            "allOf": [{
                "$ref": "#/definitions/Permission"
            }, {
                "properties": {
                    "id": {
                        "description": "Unique ID of the api token.",
                        "type": "string",
                        "readOnly": true
                    },
                    "token": {
                        "description": "Value of the api token.",
                        "type": "string",
                        "readOnly": true
                    },
                    "expiry": {
                        "description": "String-formatted date representing the time when the token expires",
                        "type": "string",
                        "format": "date-time"
                    }
                }
            }]
        },
        "ApiTokenCollection": {
            "type": "object",
            "properties": {
                "value": {
                    "description": "The collection of api tokens.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ApiToken"
                    }
                }
            },
            "required": ["value"]
        },
        "Application": {
            "type": "object",
            "properties": {
                "id": {
                    "description": "Unique ID of the application.",
                    "type": "string",
                    "readOnly": true
                },
                "displayName": {
                    "description": "Display name of the application.",
                    "type": "string"
                },
                "subdomain": {
                    "description": "The URL subdomain of the application.",
                    "type": "string"
                },
                "host": {
                    "description": "The URL host of the application.",
                    "type": "string"
                }
            },
            "required": ["subdomain", "host"]
        },
        "ApplicationCollection": {
            "type": "object",
            "properties": {
                "value": {
                    "description": "The collection of applications.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Application"
                    }
                }
            },
            "required": ["value"]
        },
        "Interface": {
            "type": "object",
            "allOf": [{
                "$ref": "#/definitions/Entity"
            }, {
                "properties": {
                    "contents": {
                        "description": "The data definitions contained by the interface.",
                        "type": "array",
                        "items": {
                            "$ref": "#/definitions/NamedEntity"
                        }
                    }
                }
            }]
        },
        "Component": {
            "type": "object",
            "allOf": [{
                "$ref": "#/definitions/NamedEntity"
            }, {
                "properties": {
                    "schema": {
                        "description": "The interface used by this component.",
                        "$ref": "#/definitions/Interface"
                    }
                }
            }]
        },
        "CapabilityModel": {
            "type": "object",
            "allOf": [{
                "$ref": "#/definitions/Entity"
            }, {
                "properties": {
                    "implements": {
                        "description": "The component implemented by the capability model.",
                        "type": "array",
                        "items": {
                            "$ref": "#/definitions/Component"
                        }
                    },
                    "contents": {
                        "description": "The relationships contained by the capability model.",
                        "type": "array",
                        "items": {
                            "$ref": "#/definitions/NamedEntity"
                        }
                    }
                }
            }]
        },
        "Endpoint": {
            "type": "object",
            "properties": {
                "type": {
                    "description": "Type of the endpoint.",
                    "type": "string"
                },
                "connectionString": {
                    "description": "Information for connecting to the endpoint.",
                    "type": "string"
                },
                "name": {
                    "description": "Name of the entity to send data to.",
                    "type": "string"
                }
            },
            "required": ["type", "connectionString", "name"],
            "discriminator": "type"
        },
        "StorageEndpoint": {
            "allOf": [{
                "$ref": "#/definitions/Endpoint"
            }]
        },
        "EventHubsEndpoint": {
            "allOf": [{
                "$ref": "#/definitions/Endpoint"
            }]
        },
        "ServiceBusQueueEndpoint": {
            "allOf": [{
                "$ref": "#/definitions/Endpoint"
            }]
        },
        "ServiceBusTopicEndpoint": {
            "allOf": [{
                "$ref": "#/definitions/Endpoint"
            }]
        },
        "ContinuousDataExport": {
            "type": "object",
            "properties": {
                "id": {
                    "description": "Unique ID of the continuous data export.",
                    "type": "string",
                    "readOnly": true
                },
                "displayName": {
                    "description": "Display name of the continuous data export.",
                    "type": "string"
                },
                "endpoint": {
                    "description": "Location where exported data should be sent.",
                    "$ref": "#/definitions/Endpoint"
                },
                "status": {
                    "description": "Indicates whether the continuous data export is starting, running, etc.",
                    "type": "string",
                    "readOnly": true
                },
                "enabled": {
                    "description": "Boolean indicating whether the continuous data export should be running or not.",
                    "type": "boolean"
                },
                "sources": {
                    "description": "Data sources to export to the endpoint.",
                    "type": "array",
                    "items": {
                        "type": "string",
                        "enum": ["devices", "deviceTemplates", "telemetry"]
                    }
                }
            },
            "required": ["endpoint", "enabled", "sources"]
        },
        "ContinuousDataExportCollection": {
            "type": "object",
            "properties": {
                "value": {
                    "description": "The collection of continuous data exports.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ContinuousDataExport"
                    }
                }
            },
            "required": ["value"]
        },
        "Device": {
            "type": "object",
            "properties": {
                "id": {
                    "description": "Unique ID of the device.",
                    "type": "string",
                    "readOnly": true
                },
                "etag": {
                    "description": "ETag used to prevent conflict in device updates.",
                    "type": "string"
                },
                "displayName": {
                    "description": "Display name of the device.",
                    "type": "string"
                },
                "description": {
                    "description": "Detailed description of the device.",
                    "type": "string"
                },
                "instanceOf": {
                    "description": "The model definition for the device.",
                    "type": "string"
                },
                "simulated": {
                    "description": "Whether the device is simulated.",
                    "type": "boolean"
                },
                "approved": {
                    "description": "Whether the device has been approved to connect to IoT Central.",
                    "type": "boolean"
                },
                "provisioned": {
                    "description": "Whether resources have been allocated for the device.",
                    "type": "boolean",
                    "readOnly": true
                }
            },
            "required": ["instanceOf", "simulated"]
        },
        "DeviceCollection": {
            "type": "object",
            "properties": {
                "value": {
                    "description": "The collection of devices.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Device"
                    }
                },
                "nextLink": {
                    "description": "URL to get the next page of devices.",
                    "type": "string"
                }
            },
            "required": ["value"]
        },
        "DeviceCloudProperties": {
            "description": "Cloud property values associated with the device.",
            "type": "object",
            "additionalProperties": true
        },
        "DeviceCommand": {
            "type": "object",
            "properties": {
                "id": {
                    "description": "The request ID of the device command execution.",
                    "type": "string",
                    "readOnly": true
                },
                "request": {
                    "description": "The payload for the device command."
                },
                "response": {
                    "description": "The payload of the device command response.",
                    "readOnly": true
                },
                "responseCode": {
                    "description": "The status code of the device command response.",
                    "type": "number",
                    "readOnly": true
                }
            }
        },
        "DeviceCommandCollection": {
            "type": "object",
            "properties": {
                "value": {
                    "description": "The collection of device command executions.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DeviceCommand"
                    }
                }
            },
            "required": ["value"]
        },
        "SymmetricKey": {
            "type": "object",
            "properties": {
                "primaryKey": {
                    "description": "The primary key for the credential.",
                    "type": "string"
                },
                "secondaryKey": {
                    "description": "The secondary key for the credential.",
                    "type": "string"
                }
            },
            "required": ["primaryKey", "secondaryKey"]
        },
        "DeviceCredentials": {
            "type": "object",
            "properties": {
                "scopeId": {
                    "description": "Scope id for connecting to device provisioning service.",
                    "type": "string"
                },
                "symmetricKey": {
                    "description": "The symmetric key credentials for the device.",
                    "$ref": "#/definitions/SymmetricKey"
                }
            },
            "required": ["scopeId", "symmetricKey"]
        },
        "DeviceProperties": {
            "description": "Property values associated with the device.",
            "type": "object",
            "additionalProperties": true
        },
        "DeviceTemplate": {
            "type": "object",
            "properties": {
                "id": {
                    "description": "Unique ID of the device template.",
                    "type": "string",
                    "readOnly": true
                },
                "etag": {
                    "description": "ETag used to prevent conflict in device template updates.",
                    "type": "string"
                },
                "types": {
                    "description": "The types of device to which this template applies.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "displayName": {
                    "description": "Display name of the device template.",
                    "type": "string"
                },
                "description": {
                    "description": "Detailed description of the device template.",
                    "type": "string"
                },
                "capabilityModel": {
                    "$ref": "#/definitions/CapabilityModel"
                },
                "solutionModel": {
                    "$ref": "#/definitions/SolutionModel"
                }
            },
            "required": ["types"]
        },
        "DeviceTemplateCollection": {
            "type": "object",
            "properties": {
                "value": {
                    "description": "The collection of device templates.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DeviceTemplate"
                    }
                },
                "nextLink": {
                    "description": "URL to get the next page of device templates.",
                    "type": "string"
                }
            },
            "required": ["value"]
        },
        "Entity": {
            "type": "object",
            "properties": {
                "@id": {
                    "description": "Unique ID of the entity.",
                    "type": "string"
                },
                "@type": {
                    "description": "Type of the entity.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "displayName": {
                    "description": "Display name of the entity.",
                    "type": "string"
                },
                "description": {
                    "description": "Detailed description of the entity.",
                    "type": "string"
                },
                "comment": {
                    "description": "Developer comment about the entity.",
                    "type": "string"
                }
            },
            "required": ["@type"]
        },
        "NamedEntity": {
            "type": "object",
            "allOf": [{
                "$ref": "#/definitions/Entity"
            }, {
                "properties": {
                    "name": {
                        "description": "The programmatic name of the named entity.",
                        "type": "string"
                    }
                },
                "required": ["name"]
            }]
        },
        "Permission": {
            "type": "object",
            "properties": {
                "roles": {
                    "description": "Roles that the permission has been granted permission to.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "minItems": 1,
                    "maxItems": 1
                }
            },
            "required": ["roles"]
        },
        "Value": {
            "type": "object",
            "properties": {
                "value": {
                    "description": "The value of this API response."
                }
            },
            "required": ["value"]
        },
        "Role": {
            "type": "object",
            "properties": {
                "id": {
                    "description": "Unique ID of the role.",
                    "type": "string",
                    "readOnly": true
                },
                "displayName": {
                    "description": "Display name of the role.",
                    "type": "string"
                }
            }
        },
        "RoleCollection": {
            "type": "object",
            "properties": {
                "value": {
                    "description": "The collection of roles.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Role"
                    }
                }
            },
            "required": ["value"]
        },
        "SolutionModel": {
            "type": "object",
            "allOf": [{
                "$ref": "#/definitions/Entity"
            }, {
                "properties": {
                    "cloudProperties": {
                        "description": "The cloud properties defined by the solution model.",
                        "type": "array",
                        "items": {
                            "$ref": "#/definitions/NamedEntity"
                        }
                    },
                    "initialValues": {
                        "description": "The initial values defined by the solution model.",
                        "type": "array",
                        "items": {
                            "$ref": "#/definitions/InitialValue"
                        }
                    },
                    "overrides": {
                        "description": "The overrides defined by the solution model.",
                        "type": "array",
                        "items": {
                            "$ref": "#/definitions/Override"
                        }
                    }
                }
            }]
        },
        "InitialValue": {
            "type": "object",
            "allOf": [{
                "$ref": "#/definitions/Entity"
            }, {
                "properties": {
                    "capability": {
                        "$ref": "#/definitions/CapabilityReference"
                    },
                    "value": {
                        "description": "The initial value of the capability."
                    }
                }
            }]
        },
        "Override": {
            "type": "object",
            "allOf": [{
                "$ref": "#/definitions/Entity"
            }, {
                "properties": {
                    "capability": {
                        "$ref": "#/definitions/CapabilityReference"
                    },
                    "displayUnit": {
                        "description": "The overridden display unit.",
                        "type": "string"
                    },
                    "semanticType": {
                        "description": "The overridden semantic type.",
                        "type": "string"
                    },
                    "unit": {
                        "description": "The overridden unit.",
                        "type": "string"
                    }
                }
            }]
        },
        "CapabilityReference": {
            "type": "object",
            "properties": {
                "instance": {
                    "description": "The name of the component being referenced.",
                    "type": "string"
                },
                "reference": {
                    "description": "The name of the capability being referenced.",
                    "type": "string"
                }
            }
        }
    },
    "paths": {
        "/apiTokens": {
            "get": {
                "operationId": "ApiTokens_List",
                "summary": "Get the list of API tokens in an application.",
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/ApiTokenCollection"
                        }
                    }
                }
            }
        },
        "/apiTokens/{token_id}": {
            "get": {
                "operationId": "ApiTokens_Get",
                "summary": "Get an API token by ID.",
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/ApiToken"
                        }
                    }
                }
            },
            "put": {
                "operationId": "ApiTokens_Set",
                "summary": "Create a new API token in the application.",
                "parameters": [{
                    "name": "body",
                    "in": "body",
                    "description": "API token body.",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/ApiToken"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/ApiToken"
                        }
                    }
                }
            },
            "delete": {
                "operationId": "ApiTokens_Remove",
                "summary": "Delete an API token.",
                "responses": {
                    "204": {
                        "description": "Success"
                    }
                }
            },
            "parameters": [{
                "in": "path",
                "name": "token_id",
                "description": "Unique ID for the API token.",
                "type": "string",
                "required": true
            }]
        },
        "/applications": {
            "get": {
                "operationId": "Applications_List",
                "summary": "Get the list of applications accessible to the signed-in user",
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/ApplicationCollection"
                        }
                    }
                }
            }
        },
        "/applications/{application_id}": {
            "get": {
                "operationId": "Applications_Get",
                "summary": "Get an application by ID",
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/Application"
                        }
                    }
                }
            },
            "parameters": [{
                "in": "path",
                "name": "application_id",
                "description": "Unique ID of the application.",
                "type": "string",
                "required": true
            }]
        },
        "/continuousDataExports": {
            "get": {
                "operationId": "ContinuousDataExports_List",
                "summary": "Get the list of continuous data exports in an application.",
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/ContinuousDataExportCollection"
                        }
                    }
                }
            },
            "post": {
                "operationId": "ContinuousDataExports_Create",
                "summary": "Create a new continuous data export in the application.",
                "parameters": [{
                    "name": "body",
                    "in": "body",
                    "description": "Data export body.",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/ContinuousDataExport"
                    }
                }],
                "responses": {
                    "201": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/ContinuousDataExport"
                        }
                    }
                }
            }
        },
        "/continuousDataExports/{export_id}": {
            "get": {
                "operationId": "ContinuousDataExports_Get",
                "summary": "Get a continuous data export by ID.",
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/ContinuousDataExport"
                        }
                    }
                }
            },
            "delete": {
                "operationId": "ContinuousDataExports_Remove",
                "summary": "Delete a continuous data export.",
                "responses": {
                    "204": {
                        "description": "Success"
                    }
                }
            },
            "parameters": [{
                "in": "path",
                "name": "export_id",
                "description": "Unique ID for the continuous data export.",
                "type": "string",
                "required": true
            }]
        },
        "/deviceTemplates": {
            "get": {
                "operationId": "DeviceTemplates_List",
                "summary": "Get the list of device templates in an application",
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/DeviceTemplateCollection"
                        }
                    }
                }
            }
        },
        "/deviceTemplates/{device_template_id}": {
            "get": {
                "operationId": "DeviceTemplates_Get",
                "summary": "Get a device template by ID",
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/DeviceTemplate"
                        }
                    }
                }
            },
            "delete": {
                "operationId": "DeviceTemplates_Remove",
                "summary": "Delete a device template",
                "description": "Delete an existing device template by device ID.",
                "responses": {
                    "204": {
                        "description": "Success"
                    }
                }
            },
            "put": {
                "operationId": "DeviceTemplates_Set",
                "summary": "Create or update a device template by ID",
                "parameters": [{
                    "name": "body",
                    "in": "body",
                    "description": "Device template body.",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/DeviceTemplate"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/DeviceTemplate"
                        }
                    }
                }
            },
            "parameters": [{
                "$ref": "#/parameters/DeviceTemplateId"
            }]
        },
        "/deviceTemplates/{device_template_id}/merged": {
            "get": {
                "operationId": "DeviceTemplates_GetMerged",
                "summary": "Get a merged device template by ID",
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/DeviceTemplate"
                        }
                    }
                }
            },
            "parameters": [{
                "$ref": "#/parameters/DeviceTemplateId"
            }]
        },
        "/deviceTemplates/{device_template_id}/devices": {
            "get": {
                "operationId": "DeviceTemplates_ListDevices",
                "summary": "Get devices for a template",
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/DeviceCollection"
                        }
                    }
                }
            },
            "parameters": [{
                "$ref": "#/parameters/DeviceTemplateId"
            }]
        },
        "/devices": {
            "get": {
                "operationId": "Devices_List",
                "summary": "Get the list of devices in an application",
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/DeviceCollection"
                        }
                    }
                }
            }
        },
        "/devices/{device_id}": {
            "get": {
                "operationId": "Devices_Get",
                "summary": "Get a device by ID",
                "description": "Get details about an existing device by device ID.",
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/Device"
                        }
                    }
                }
            },
            "put": {
                "operationId": "Devices_Set",
                "summary": "Create or update a device",
                "description": "Create a new device or update an existing device by device ID.",
                "parameters": [{
                    "name": "body",
                    "in": "body",
                    "description": "Device body.",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/Device"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/Device"
                        }
                    }
                }
            },
            "delete": {
                "operationId": "Devices_Remove",
                "summary": "Delete a device",
                "description": "Delete an existing device by device ID.",
                "responses": {
                    "204": {
                        "description": "Success"
                    }
                }
            },
            "parameters": [{
                "$ref": "#/parameters/DeviceId"
            }]
        },
        "/roles": {
            "get": {
                "operationId": "Roles_List",
                "summary": "Get the list of roles in an application.",
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/RoleCollection"
                        }
                    }
                }
            }
        },
        "/roles/{role_id}": {
            "get": {
                "operationId": "Roles_Get",
                "summary": "Get a role by ID.",
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/Role"
                        }
                    }
                }
            },
            "parameters": [{
                "in": "path",
                "name": "role_id",
                "description": "Unique ID for the role.",
                "type": "string",
                "required": true
            }]
        },
        "/devices/{device_id}/cloudProperties": {
            "get": {
                "operationId": "Devices_GetCloudProperties",
                "summary": "Get device cloud properties",
                "description": "Get all cloud property values of a device by device ID.",
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/DeviceCloudProperties"
                        }
                    }
                }
            },
            "put": {
                "operationId": "Devices_UpdateCloudProperties",
                "summary": "Update device cloud properties",
                "description": "Update all cloud property values of a device by device ID.",
                "parameters": [{
                    "name": "body",
                    "in": "body",
                    "description": "Device properties.",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/DeviceCloudProperties"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/DeviceCloudProperties"
                        }
                    }
                }
            },
            "parameters": [{
                "$ref": "#/parameters/DeviceId"
            }]
        },
        "/devices/{device_id}/credentials": {
            "get": {
                "operationId": "Devices_GetCredentials",
                "summary": "Get device credentials",
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/DeviceCredentials"
                        }
                    }
                }
            },
            "parameters": [{
                "$ref": "#/parameters/DeviceId"
            }]
        },
        "/devices/{device_id}/components/{component_name}/commands/{command_name}": {
            "get": {
                "operationId": "Devices_GetCommandHistory",
                "summary": "Get device command history",
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/DeviceCommandCollection"
                        }
                    }
                }
            },
            "post": {
                "operationId": "Devices_ExecuteCommand",
                "summary": "Execute a device command",
                "description": "Execute a command on a device.",
                "parameters": [{
                    "name": "body",
                    "in": "body",
                    "description": "Device command body.",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/DeviceCommand"
                    }
                }],
                "responses": {
                    "201": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/DeviceCommand"
                        }
                    }
                }
            },
            "parameters": [{
                "$ref": "#/parameters/DeviceId"
            }, {
                "$ref": "#/parameters/ComponentName"
            }, {
                "in": "path",
                "name": "command_name",
                "description": "Name of this device command.",
                "type": "string",
                "required": true
            }]
        },
        "/devices/{device_id}/properties": {
            "get": {
                "operationId": "Devices_GetProperties",
                "summary": "Get device properties",
                "description": "Get all property values of a device by device ID.",
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/DeviceProperties"
                        }
                    }
                }
            },
            "put": {
                "operationId": "Devices_UpdateProperties",
                "summary": "Update device properties",
                "description": "Update all property values of a device by device ID.",
                "parameters": [{
                    "name": "body",
                    "in": "body",
                    "description": "Device properties.",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/DeviceProperties"
                    }
                }],
                "responses": {
                    "202": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/DeviceProperties"
                        }
                    }
                }
            },
            "parameters": [{
                "$ref": "#/parameters/DeviceId"
            }]
        },
        "/devices/{device_id}/components/{component_name}/properties": {
            "get": {
                "operationId": "Devices_GetComponentProperties",
                "summary": "Get device properties for a specific component",
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/DeviceProperties"
                        }
                    }
                }
            },
            "put": {
                "operationId": "Devices_UpdateComponentProperties",
                "summary": "Update device properties for a specific component",
                "parameters": [{
                    "name": "body",
                    "in": "body",
                    "description": "Device properties.",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/DeviceProperties"
                    }
                }],
                "responses": {
                    "202": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/DeviceProperties"
                        }
                    }
                }
            },
            "parameters": [{
                "$ref": "#/parameters/DeviceId"
            }, {
                "$ref": "#/parameters/ComponentName"
            }]
        },
        "/devices/{device_id}/components/{component_name}/telemetry/{telemetry_name}": {
            "get": {
                "operationId": "Devices_GetTelemetryValue",
                "summary": "Get device telemetry value",
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/Value"
                        }
                    }
                }
            },
            "parameters": [{
                "$ref": "#/parameters/DeviceId"
            }, {
                "$ref": "#/parameters/ComponentName"
            }, {
                "in": "path",
                "name": "telemetry_name",
                "description": "Name of this device telemetry.",
                "type": "string",
                "required": true
            }]
        }
    },
    "parameters": {
        "DeviceTemplateId": {
            "in": "path",
            "name": "device_template_id",
            "description": "Unique ID of the device template.",
            "type": "string",
            "required": true
        },
        "DeviceId": {
            "in": "path",
            "name": "device_id",
            "description": "Unique ID of the device.",
            "type": "string",
            "required": true
        },
        "ComponentName": {
            "in": "path",
            "name": "component_name",
            "description": "Name of the device component.",
            "type": "string",
            "required": true
        }
    }
}