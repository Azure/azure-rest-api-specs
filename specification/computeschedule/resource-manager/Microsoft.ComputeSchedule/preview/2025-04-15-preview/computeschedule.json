{
  "swagger": "2.0",
  "info": {
    "title": "Microsoft.ComputeSchedule",
    "version": "2025-04-15-preview",
    "description": "Microsoft.ComputeSchedule Resource Provider management API.",
    "x-typespec-generated": [
      {
        "emitter": "@azure-tools/typespec-autorest"
      }
    ]
  },
  "schemes": [
    "https"
  ],
  "host": "management.azure.com",
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "description": "Azure Active Directory OAuth2 Flow.",
      "flow": "implicit",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "tags": [
    {
      "name": "Operations"
    },
    {
      "name": "ScheduledActionExtension"
    },
    {
      "name": "Occurrences"
    },
    {
      "name": "OccurrenceExtension"
    }
  ],
  "paths": {
    "/{resourceUri}/providers/Microsoft.ComputeSchedule/associatedOccurrences": {
      "get": {
        "operationId": "OccurrenceExtension_ListOccurrenceByVms",
        "tags": [
          "OccurrenceExtension"
        ],
        "description": "List OccurrenceExtensionResource resources by parent",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/Azure.ResourceManager.ResourceUriParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/OccurrenceExtensionResourceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "OccurrenceExtension_ListOccurrenceByVms_MaximumSet": {
            "$ref": "./examples/OccurrenceExtension_ListOccurrenceByVms_MaximumSet_Gen.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/{resourceUri}/providers/Microsoft.ComputeSchedule/associatedScheduledActions": {
      "get": {
        "operationId": "ScheduledActionExtension_ListByVms",
        "tags": [
          "ScheduledActionExtension"
        ],
        "description": "List ScheduledActionResources resources by parent",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/Azure.ResourceManager.ResourceUriParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ScheduledActionResourcesListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ScheduledActionExtension_ListByVms_MaximumSet": {
            "$ref": "./examples/ScheduledActionExtension_ListByVms_MaximumSet_Gen.json"
          },
          "ScheduledActionExtension_ListByVms_MinimumSet": {
            "$ref": "./examples/ScheduledActionExtension_ListByVms_MinimumSet_Gen.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/providers/Microsoft.ComputeSchedule/operations": {
      "get": {
        "operationId": "Operations_List",
        "tags": [
          "Operations"
        ],
        "description": "List the operations for the provider",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/OperationListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Operations_List_MaximumSet": {
            "$ref": "./examples/Operations_List_MaximumSet_Gen.json"
          },
          "Operations_List_MinimumSet": {
            "$ref": "./examples/Operations_List_MinimumSet_Gen.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ComputeSchedule/locations/{locationparameter}/virtualMachinesCancelOperations": {
      "post": {
        "operationId": "ScheduledActions_VirtualMachinesCancelOperations",
        "description": "VirtualMachinesCancelOperations: Cancel a previously submitted (start/deallocate/hibernate) request",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "locationparameter",
            "in": "path",
            "description": "The location name.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "requestBody",
            "in": "body",
            "description": "The request body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CancelOperationsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/CancelOperationsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ScheduledActions_VirtualMachinesCancelOperations_MaximumSet": {
            "$ref": "./examples/ScheduledActions_VirtualMachinesCancelOperations_MaximumSet_Gen.json"
          },
          "ScheduledActions_VirtualMachinesCancelOperations_MinimumSet": {
            "$ref": "./examples/ScheduledActions_VirtualMachinesCancelOperations_MinimumSet_Gen.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ComputeSchedule/locations/{locationparameter}/virtualMachinesExecuteCreate": {
      "post": {
        "operationId": "ScheduledActions_VirtualMachinesExecuteCreate",
        "description": "VirtualMachinesExecuteCreate: Execute create operation for a batch of virtual machines, this operation is triggered as soon as Computeschedule receives it.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "locationparameter",
            "in": "path",
            "description": "The location name.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "requestBody",
            "in": "body",
            "description": "The request body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ExecuteCreateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/CreateResourceOperationResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ScheduledActions_VirtualMachinesExecuteCreate_MaximumSet_Gen - generated by [MaximumSet] rule": {
            "$ref": "./examples/ScheduledActions_VirtualMachinesExecuteCreate_MaximumSet_Gen.json"
          },
          "ScheduledActions_VirtualMachinesExecuteCreate_MinimumSet_Gen - generated by [MinimumSet] rule": {
            "$ref": "./examples/ScheduledActions_VirtualMachinesExecuteCreate_MinimumSet_Gen.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ComputeSchedule/locations/{locationparameter}/virtualMachinesExecuteDeallocate": {
      "post": {
        "operationId": "ScheduledActions_VirtualMachinesExecuteDeallocate",
        "description": "VirtualMachinesExecuteDeallocate: Execute deallocate operation for a batch of virtual machines, this operation is triggered as soon as Computeschedule receives it.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "locationparameter",
            "in": "path",
            "description": "The location name.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "requestBody",
            "in": "body",
            "description": "The request body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ExecuteDeallocateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DeallocateResourceOperationResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ScheduledActions_VirtualMachinesExecuteDeallocate_MaximumSet": {
            "$ref": "./examples/ScheduledActions_VirtualMachinesExecuteDeallocate_MaximumSet_Gen.json"
          },
          "ScheduledActions_VirtualMachinesExecuteDeallocate_MinimumSet": {
            "$ref": "./examples/ScheduledActions_VirtualMachinesExecuteDeallocate_MinimumSet_Gen.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ComputeSchedule/locations/{locationparameter}/virtualMachinesExecuteDelete": {
      "post": {
        "operationId": "ScheduledActions_VirtualMachinesExecuteDelete",
        "description": "VirtualMachinesExecuteDelete: Execute delete operation for a batch of virtual machines, this operation is triggered as soon as Computeschedule receives it.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "locationparameter",
            "in": "path",
            "description": "The location name.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "requestBody",
            "in": "body",
            "description": "The request body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ExecuteDeleteRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DeleteResourceOperationResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ScheduledActions_VirtualMachinesExecuteDelete_MaximumSet_Gen - generated by [MaximumSet] rule": {
            "$ref": "./examples/ScheduledActions_VirtualMachinesExecuteDelete_MaximumSet_Gen.json"
          },
          "ScheduledActions_VirtualMachinesExecuteDelete_MinimumSet_Gen - generated by [MinimumSet] rule": {
            "$ref": "./examples/ScheduledActions_VirtualMachinesExecuteDelete_MinimumSet_Gen.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ComputeSchedule/locations/{locationparameter}/virtualMachinesExecuteHibernate": {
      "post": {
        "operationId": "ScheduledActions_VirtualMachinesExecuteHibernate",
        "description": "VirtualMachinesExecuteHibernate: Execute hibernate operation for a batch of virtual machines, this operation is triggered as soon as Computeschedule receives it.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "locationparameter",
            "in": "path",
            "description": "The location name.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "requestBody",
            "in": "body",
            "description": "The request body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ExecuteHibernateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/HibernateResourceOperationResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ScheduledActions_VirtualMachinesExecuteHibernate_MaximumSet": {
            "$ref": "./examples/ScheduledActions_VirtualMachinesExecuteHibernate_MaximumSet_Gen.json"
          },
          "ScheduledActions_VirtualMachinesExecuteHibernate_MinimumSet": {
            "$ref": "./examples/ScheduledActions_VirtualMachinesExecuteHibernate_MinimumSet_Gen.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ComputeSchedule/locations/{locationparameter}/virtualMachinesExecuteStart": {
      "post": {
        "operationId": "ScheduledActions_VirtualMachinesExecuteStart",
        "description": "VirtualMachinesExecuteStart: Execute start operation for a batch of virtual machines, this operation is triggered as soon as Computeschedule receives it.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "locationparameter",
            "in": "path",
            "description": "The location name.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "requestBody",
            "in": "body",
            "description": "The request body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ExecuteStartRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/StartResourceOperationResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ScheduledActions_VirtualMachinesExecuteStart_MaximumSet": {
            "$ref": "./examples/ScheduledActions_VirtualMachinesExecuteStart_MaximumSet_Gen.json"
          },
          "ScheduledActions_VirtualMachinesExecuteStart_MinimumSet": {
            "$ref": "./examples/ScheduledActions_VirtualMachinesExecuteStart_MinimumSet_Gen.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ComputeSchedule/locations/{locationparameter}/virtualMachinesGetOperationErrors": {
      "post": {
        "operationId": "ScheduledActions_VirtualMachinesGetOperationErrors",
        "description": "VirtualMachinesGetOperationErrors: Get error details on operation errors (like transient errors encountered, additional logs) if they exist.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "locationparameter",
            "in": "path",
            "description": "The location name.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "requestBody",
            "in": "body",
            "description": "The request body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetOperationErrorsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/GetOperationErrorsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ScheduledActions_VirtualMachinesGetOperationErrors_MaximumSet_Gen - generated by [MaximumSet] rule": {
            "$ref": "./examples/ScheduledActions_VirtualMachinesGetOperationErrors_MaximumSet_Gen.json"
          },
          "ScheduledActions_VirtualMachinesGetOperationErrors_MinimumSet_Gen - generated by [MinimumSet] rule": {
            "$ref": "./examples/ScheduledActions_VirtualMachinesGetOperationErrors_MinimumSet_Gen.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ComputeSchedule/locations/{locationparameter}/virtualMachinesGetOperationStatus": {
      "post": {
        "operationId": "ScheduledActions_VirtualMachinesGetOperationStatus",
        "description": "VirtualMachinesGetOperationStatus: Polling endpoint to read status of operations performed on virtual machines",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "locationparameter",
            "in": "path",
            "description": "The location name.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "requestBody",
            "in": "body",
            "description": "The request body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetOperationStatusRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/GetOperationStatusResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ScheduledActions_VirtualMachinesGetOperationStatus_MaximumSet": {
            "$ref": "./examples/ScheduledActions_VirtualMachinesGetOperationStatus_MaximumSet_Gen.json"
          },
          "ScheduledActions_VirtualMachinesGetOperationStatus_MinimumSet": {
            "$ref": "./examples/ScheduledActions_VirtualMachinesGetOperationStatus_MinimumSet_Gen.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ComputeSchedule/locations/{locationparameter}/virtualMachinesSubmitDeallocate": {
      "post": {
        "operationId": "ScheduledActions_VirtualMachinesSubmitDeallocate",
        "description": "VirtualMachinesSubmitDeallocate: Schedule deallocate operation for a batch of virtual machines at datetime in future.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "locationparameter",
            "in": "path",
            "description": "The location name.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "requestBody",
            "in": "body",
            "description": "The request body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SubmitDeallocateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DeallocateResourceOperationResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ScheduledActions_VirtualMachinesSubmitDeallocate_MaximumSet": {
            "$ref": "./examples/ScheduledActions_VirtualMachinesSubmitDeallocate_MaximumSet_Gen.json"
          },
          "ScheduledActions_VirtualMachinesSubmitDeallocate_MinimumSet": {
            "$ref": "./examples/ScheduledActions_VirtualMachinesSubmitDeallocate_MinimumSet_Gen.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ComputeSchedule/locations/{locationparameter}/virtualMachinesSubmitHibernate": {
      "post": {
        "operationId": "ScheduledActions_VirtualMachinesSubmitHibernate",
        "description": "VirtualMachinesSubmitHibernate: Schedule hibernate operation for a batch of virtual machines at datetime in future.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "locationparameter",
            "in": "path",
            "description": "The location name.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "requestBody",
            "in": "body",
            "description": "The request body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SubmitHibernateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/HibernateResourceOperationResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ScheduledActions_VirtualMachinesSubmitHibernate_MaximumSet": {
            "$ref": "./examples/ScheduledActions_VirtualMachinesSubmitHibernate_MaximumSet_Gen.json"
          },
          "ScheduledActions_VirtualMachinesSubmitHibernate_MinimumSet": {
            "$ref": "./examples/ScheduledActions_VirtualMachinesSubmitHibernate_MinimumSet_Gen.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ComputeSchedule/locations/{locationparameter}/virtualMachinesSubmitStart": {
      "post": {
        "operationId": "ScheduledActions_VirtualMachinesSubmitStart",
        "description": "VirtualMachinesSubmitStart: Schedule start operation for a batch of virtual machines at datetime in future.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "locationparameter",
            "in": "path",
            "description": "The location name.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "requestBody",
            "in": "body",
            "description": "The request body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SubmitStartRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/StartResourceOperationResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ScheduledActions_VirtualMachinesSubmitStart_MaximumSet": {
            "$ref": "./examples/ScheduledActions_VirtualMachinesSubmitStart_MaximumSet_Gen.json"
          },
          "ScheduledActions_VirtualMachinesSubmitStart_MinimumSet": {
            "$ref": "./examples/ScheduledActions_VirtualMachinesSubmitStart_MinimumSet_Gen.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ComputeSchedule/scheduledActions": {
      "get": {
        "operationId": "ScheduledActions_ListBySubscription",
        "description": "List ScheduledAction resources by subscription ID",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ScheduledActionListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ScheduledActions_ListBySubscription_MaximumSet": {
            "$ref": "./examples/ScheduledActions_ListBySubscription_MaximumSet_Gen.json"
          },
          "ScheduledActions_ListBySubscription_MinimumSet": {
            "$ref": "./examples/ScheduledActions_ListBySubscription_MinimumSet_Gen.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ComputeSchedule/scheduledActions": {
      "get": {
        "operationId": "ScheduledActions_ListByResourceGroup",
        "description": "List ScheduledAction resources by resource group",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ScheduledActionListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ScheduledActions_ListByResourceGroup_MaximumSet": {
            "$ref": "./examples/ScheduledActions_ListByResourceGroup_MaximumSet_Gen.json"
          },
          "ScheduledActions_ListByResourceGroup_MinimumSet": {
            "$ref": "./examples/ScheduledActions_ListByResourceGroup_MinimumSet_Gen.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ComputeSchedule/scheduledActions/{scheduledActionName}": {
      "get": {
        "operationId": "ScheduledActions_Get",
        "description": "Get a ScheduledAction",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "scheduledActionName",
            "in": "path",
            "description": "The name of the ScheduledAction",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9-]{3,24}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ScheduledAction"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ScheduledActions_Get_MaximumSet": {
            "$ref": "./examples/ScheduledActions_Get_MaximumSet_Gen.json"
          }
        }
      },
      "put": {
        "operationId": "ScheduledActions_CreateOrUpdate",
        "description": "Create a ScheduledAction",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "scheduledActionName",
            "in": "path",
            "description": "The name of the ScheduledAction",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9-]{3,24}$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ScheduledAction"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'ScheduledAction' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/ScheduledAction"
            }
          },
          "201": {
            "description": "Resource 'ScheduledAction' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/ScheduledAction"
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ScheduledActions_CreateOrUpdate_MaximumSet": {
            "$ref": "./examples/ScheduledActions_CreateOrUpdate_MaximumSet_Gen.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "ScheduledActions_Update",
        "description": "Update a ScheduledAction",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "scheduledActionName",
            "in": "path",
            "description": "The name of the ScheduledAction",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9-]{3,24}$"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "The resource properties to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ScheduledActionUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ScheduledAction"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ScheduledActions_Update_MaximumSet": {
            "$ref": "./examples/ScheduledActions_Update_MaximumSet_Gen.json"
          }
        }
      },
      "delete": {
        "operationId": "ScheduledActions_Delete",
        "description": "Delete a ScheduledAction",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "scheduledActionName",
            "in": "path",
            "description": "The name of the ScheduledAction",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9-]{3,24}$"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ScheduledActions_Delete_MaximumSet": {
            "$ref": "./examples/ScheduledActions_Delete_MaximumSet_Gen.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ComputeSchedule/scheduledActions/{scheduledActionName}/attachResources": {
      "post": {
        "operationId": "ScheduledActions_AttachResources",
        "description": "A synchronous resource action.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "scheduledActionName",
            "in": "path",
            "description": "The name of the ScheduledAction",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9-]{3,24}$"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The content of the action request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ResourceAttachRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ResourceOperationResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ScheduledActions_AttachResources_MaximumSet": {
            "$ref": "./examples/ScheduledActions_AttachResources_MaximumSet_Gen.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ComputeSchedule/scheduledActions/{scheduledActionName}/cancelNextOccurrence": {
      "post": {
        "operationId": "ScheduledActions_CancelNextOccurrence",
        "description": "A synchronous resource action.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "scheduledActionName",
            "in": "path",
            "description": "The name of the ScheduledAction",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9-]{3,24}$"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The content of the action request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CancelOccurrenceRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ResourceOperationResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ScheduledActions_CancelNextOccurrence_MaximumSet": {
            "$ref": "./examples/ScheduledActions_CancelNextOccurrence_MaximumSet_Gen.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ComputeSchedule/scheduledActions/{scheduledActionName}/detachResources": {
      "post": {
        "operationId": "ScheduledActions_DetachResources",
        "description": "A synchronous resource action.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "scheduledActionName",
            "in": "path",
            "description": "The name of the ScheduledAction",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9-]{3,24}$"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The content of the action request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ResourceDetachRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ResourceOperationResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ScheduledActions_DetachResources_MaximumSet": {
            "$ref": "./examples/ScheduledActions_DetachResources_MaximumSet_Gen.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ComputeSchedule/scheduledActions/{scheduledActionName}/disable": {
      "post": {
        "operationId": "ScheduledActions_Disable",
        "description": "A synchronous resource action.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "scheduledActionName",
            "in": "path",
            "description": "The name of the ScheduledAction",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9-]{3,24}$"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ScheduledActions_Disable_MaximumSet": {
            "$ref": "./examples/ScheduledActions_Disable_MaximumSet_Gen.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ComputeSchedule/scheduledActions/{scheduledActionName}/enable": {
      "post": {
        "operationId": "ScheduledActions_Enable",
        "description": "A synchronous resource action.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "scheduledActionName",
            "in": "path",
            "description": "The name of the ScheduledAction",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9-]{3,24}$"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ScheduledActions_Enable_MaximumSet": {
            "$ref": "./examples/ScheduledActions_Enable_MaximumSet_Gen.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ComputeSchedule/scheduledActions/{scheduledActionName}/occurrences": {
      "get": {
        "operationId": "Occurrences_ListByScheduledAction",
        "tags": [
          "Occurrences"
        ],
        "description": "List Occurrence resources by ScheduledAction",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "scheduledActionName",
            "in": "path",
            "description": "The name of the ScheduledAction",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9-]{3,24}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/OccurrenceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Occurrences_ListByScheduledAction_MaximumSet": {
            "$ref": "./examples/Occurrences_ListByScheduledAction_MaximumSet_Gen.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ComputeSchedule/scheduledActions/{scheduledActionName}/occurrences/{occurrenceId}": {
      "get": {
        "operationId": "Occurrences_Get",
        "tags": [
          "Occurrences"
        ],
        "description": "Get a Occurrence",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "scheduledActionName",
            "in": "path",
            "description": "The name of the ScheduledAction",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9-]{3,24}$"
          },
          {
            "name": "occurrenceId",
            "in": "path",
            "description": "The name of the Occurrence",
            "required": true,
            "type": "string",
            "pattern": "[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{12}"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Occurrence"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Occurrences_Get_MaximumSet": {
            "$ref": "./examples/Occurrences_Get_MaximumSet_Gen.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ComputeSchedule/scheduledActions/{scheduledActionName}/occurrences/{occurrenceId}/cancel": {
      "post": {
        "operationId": "Occurrences_Cancel",
        "tags": [
          "Occurrences"
        ],
        "description": "A synchronous resource action.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "scheduledActionName",
            "in": "path",
            "description": "The name of the ScheduledAction",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9-]{3,24}$"
          },
          {
            "name": "occurrenceId",
            "in": "path",
            "description": "The name of the Occurrence",
            "required": true,
            "type": "string",
            "pattern": "[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{12}"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The content of the action request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CancelOccurrenceRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ResourceOperationResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Occurrences_Cancel_MaximumSet": {
            "$ref": "./examples/Occurrences_Cancel_MaximumSet_Gen.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ComputeSchedule/scheduledActions/{scheduledActionName}/occurrences/{occurrenceId}/delay": {
      "post": {
        "operationId": "Occurrences_Delay",
        "tags": [
          "Occurrences"
        ],
        "description": "A long-running resource action.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "scheduledActionName",
            "in": "path",
            "description": "The name of the ScheduledAction",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9-]{3,24}$"
          },
          {
            "name": "occurrenceId",
            "in": "path",
            "description": "The name of the Occurrence",
            "required": true,
            "type": "string",
            "pattern": "[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{12}"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The content of the action request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DelayRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ResourceOperationResponse"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Occurrences_Delay_MaximumSet": {
            "$ref": "./examples/Occurrences_Delay_MaximumSet_Gen.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ComputeSchedule/scheduledActions/{scheduledActionName}/occurrences/{occurrenceId}/resources": {
      "get": {
        "operationId": "Occurrences_ListResources",
        "tags": [
          "Occurrences"
        ],
        "description": "List resources attached to Scheduled Actions for the given occurrence",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "scheduledActionName",
            "in": "path",
            "description": "The name of the ScheduledAction",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9-]{3,24}$"
          },
          {
            "name": "occurrenceId",
            "in": "path",
            "description": "The name of the Occurrence",
            "required": true,
            "type": "string",
            "pattern": "[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{12}"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/OccurrenceResourceListResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Occurrences_ListResources_MaximumSet": {
            "$ref": "./examples/Occurrences_ListResources_MaximumSet_Gen.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ComputeSchedule/scheduledActions/{scheduledActionName}/patchResources": {
      "post": {
        "operationId": "ScheduledActions_PatchResources",
        "description": "A synchronous resource action.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "scheduledActionName",
            "in": "path",
            "description": "The name of the ScheduledAction",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9-]{3,24}$"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The content of the action request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ResourcePatchRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ResourceOperationResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ScheduledActions_PatchResources_MaximumSet": {
            "$ref": "./examples/ScheduledActions_PatchResources_MaximumSet_Gen.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ComputeSchedule/scheduledActions/{scheduledActionName}/resources": {
      "get": {
        "operationId": "ScheduledActions_ListResources",
        "description": "List resources attached to Scheduled Actions",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "scheduledActionName",
            "in": "path",
            "description": "The name of the ScheduledAction",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9-]{3,24}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ResourceListResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ScheduledActions_ListResources_MaximumSet": {
            "$ref": "./examples/ScheduledActions_ListResources_MaximumSet_Gen.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ComputeSchedule/scheduledActions/{scheduledActionName}/triggerManualOccurrence": {
      "post": {
        "operationId": "ScheduledActions_TriggerManualOccurrence",
        "description": "A synchronous resource action.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "scheduledActionName",
            "in": "path",
            "description": "The name of the ScheduledAction",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9-]{3,24}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Occurrence"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ScheduledActions_TriggerManualOccurrence_MaximumSet": {
            "$ref": "./examples/ScheduledActions_TriggerManualOccurrence_MaximumSet_Gen.json"
          }
        }
      }
    }
  },
  "definitions": {
    "ActionType": {
      "type": "string",
      "description": "Specify which action user wants to be performed on the resources",
      "enum": [
        "Start",
        "Deallocate",
        "Hibernate"
      ],
      "x-ms-enum": {
        "name": "ActionType",
        "modelAsString": true,
        "values": [
          {
            "name": "Start",
            "value": "Start",
            "description": "Perform a start action on the specified resources"
          },
          {
            "name": "Deallocate",
            "value": "Deallocate",
            "description": "Perform a deallocate action on the specified resources"
          },
          {
            "name": "Hibernate",
            "value": "Hibernate",
            "description": "Perform hibernate and deallocate on the specified resources"
          }
        ]
      }
    },
    "Azure.Core.Foundations.Error": {
      "type": "object",
      "description": "The error object.",
      "properties": {
        "code": {
          "type": "string",
          "description": "One of a server-defined set of error codes."
        },
        "message": {
          "type": "string",
          "description": "A human-readable representation of the error."
        },
        "target": {
          "type": "string",
          "description": "The target of the error."
        },
        "details": {
          "type": "array",
          "description": "An array of details about specific errors that led to this reported error.",
          "items": {
            "$ref": "#/definitions/Azure.Core.Foundations.Error"
          }
        },
        "innererror": {
          "$ref": "#/definitions/Azure.Core.Foundations.InnerError",
          "description": "An object containing more specific information than the current object about the error."
        }
      },
      "required": [
        "code",
        "message"
      ]
    },
    "Azure.Core.Foundations.InnerError": {
      "type": "object",
      "description": "An object containing more specific information about the error. As per Microsoft One API guidelines - https://github.com/microsoft/api-guidelines/blob/vNext/azure/Guidelines.md#handling-errors.",
      "properties": {
        "code": {
          "type": "string",
          "description": "One of a server-defined set of error codes."
        },
        "innererror": {
          "$ref": "#/definitions/Azure.Core.Foundations.InnerError",
          "description": "Inner error."
        }
      }
    },
    "Azure.Core.azureLocation": {
      "type": "string",
      "description": "Represents an Azure geography region where supported resource providers live."
    },
    "Azure.ResourceManager.CommonTypes.TrackedResourceUpdate": {
      "type": "object",
      "title": "Tracked Resource",
      "description": "The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location'",
      "properties": {
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/Resource"
        }
      ]
    },
    "Azure.ResourceManager.ResourceProvisioningState": {
      "type": "string",
      "description": "The provisioning state of a resource type.",
      "enum": [
        "Succeeded",
        "Failed",
        "Canceled"
      ],
      "x-ms-enum": {
        "name": "ResourceProvisioningState",
        "modelAsString": true,
        "values": [
          {
            "name": "Succeeded",
            "value": "Succeeded",
            "description": "Resource has been created."
          },
          {
            "name": "Failed",
            "value": "Failed",
            "description": "Resource creation failed."
          },
          {
            "name": "Canceled",
            "value": "Canceled",
            "description": "Resource creation was canceled."
          }
        ]
      },
      "readOnly": true
    },
    "CancelOccurrenceRequest": {
      "type": "object",
      "description": "The request to cancel an occurrence.",
      "properties": {
        "resourceIds": {
          "type": "array",
          "description": "The resources the cancellation should act on. If no resource is passed in the list, Scheduled Action will cancel the occurrence for all resources.",
          "items": {
            "$ref": "#/definitions/ValidScheduledActionResourceId"
          }
        }
      },
      "required": [
        "resourceIds"
      ]
    },
    "CancelOperationsRequest": {
      "type": "object",
      "description": "This is the request to cancel running operations in scheduled actions using the operation ids",
      "properties": {
        "operationIds": {
          "type": "array",
          "description": "The list of operation ids to cancel operations on",
          "items": {
            "type": "string"
          }
        },
        "correlationid": {
          "type": "string",
          "description": "CorrelationId item"
        }
      },
      "required": [
        "operationIds",
        "correlationid"
      ]
    },
    "CancelOperationsResponse": {
      "type": "object",
      "description": "This is the response from a cancel operations request",
      "properties": {
        "results": {
          "type": "array",
          "description": "An array of resource operations that were successfully cancelled",
          "items": {
            "$ref": "#/definitions/ResourceOperation"
          },
          "x-ms-identifiers": [
            "resourceId"
          ]
        }
      },
      "required": [
        "results"
      ]
    },
    "CreateResourceOperationResponse": {
      "type": "object",
      "description": "The response from a create request",
      "properties": {
        "description": {
          "type": "string",
          "description": "The description of the operation response"
        },
        "type": {
          "type": "string",
          "description": "The type of resources used in the create request eg virtual machines"
        },
        "location": {
          "$ref": "#/definitions/Azure.Core.azureLocation",
          "description": "The location of the start request eg westus",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "results": {
          "type": "array",
          "description": "The results from the start request if no errors exist",
          "items": {
            "$ref": "#/definitions/ResourceOperation"
          },
          "x-ms-identifiers": [
            "resourceId"
          ]
        }
      },
      "required": [
        "description",
        "type",
        "location"
      ]
    },
    "DayOfTheMonth": {
      "type": "integer",
      "format": "int32",
      "description": "Represents the possible days in a month",
      "minimum": 1,
      "maximum": 31
    },
    "DeadlineType": {
      "type": "string",
      "description": "The types of deadlines supported by ScheduledActions",
      "enum": [
        "Unknown",
        "InitiateAt",
        "CompleteBy"
      ],
      "x-ms-enum": {
        "name": "DeadlineType",
        "modelAsString": true,
        "values": [
          {
            "name": "Unknown",
            "value": "Unknown",
            "description": "Default value of Unknown."
          },
          {
            "name": "InitiateAt",
            "value": "InitiateAt",
            "description": "Initiate the operation at the given deadline."
          },
          {
            "name": "CompleteBy",
            "value": "CompleteBy",
            "description": "Complete the operation by the given deadline."
          }
        ]
      }
    },
    "DeallocateResourceOperationResponse": {
      "type": "object",
      "description": "The response from a deallocate request",
      "properties": {
        "description": {
          "type": "string",
          "description": "The description of the operation response"
        },
        "type": {
          "type": "string",
          "description": "The type of resources used in the deallocate request eg virtual machines"
        },
        "location": {
          "$ref": "#/definitions/Azure.Core.azureLocation",
          "description": "The location of the deallocate request eg westus",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "results": {
          "type": "array",
          "description": "The results from the deallocate request if no errors exist",
          "items": {
            "$ref": "#/definitions/ResourceOperation"
          },
          "x-ms-identifiers": [
            "resourceId"
          ]
        }
      },
      "required": [
        "description",
        "type",
        "location"
      ]
    },
    "DelayRequest": {
      "type": "object",
      "description": "Request to ask for a delay in an occurrence, delay should be set to client local time eg (ACST) 2025-05-30T22:03:00+09:30, (PST) 2025-05-30T06:35:00-07:00",
      "properties": {
        "delay": {
          "type": "string",
          "format": "date-time",
          "description": "The exact time to delay the operations to"
        },
        "resourceIds": {
          "type": "array",
          "description": "The resources that should be delayed. If empty, the delay will apply to the all resources in the occurrence.",
          "items": {
            "$ref": "#/definitions/ValidScheduledActionResourceId"
          }
        }
      },
      "required": [
        "delay",
        "resourceIds"
      ]
    },
    "DeleteResourceOperationResponse": {
      "type": "object",
      "description": "The response from a delete request",
      "properties": {
        "description": {
          "type": "string",
          "description": "The description of the operation response"
        },
        "type": {
          "type": "string",
          "description": "The type of resources used in the delete request eg virtual machines"
        },
        "location": {
          "$ref": "#/definitions/Azure.Core.azureLocation",
          "description": "The location of the start request eg westus",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "results": {
          "type": "array",
          "description": "The results from the start request if no errors exist",
          "items": {
            "$ref": "#/definitions/ResourceOperation"
          },
          "x-ms-identifiers": [
            "resourceId"
          ]
        }
      },
      "required": [
        "description",
        "type",
        "location"
      ]
    },
    "ExecuteCreateRequest": {
      "type": "object",
      "description": "The ExecuteCreateRequest request for create operations",
      "properties": {
        "resourceConfigParameters": {
          "$ref": "#/definitions/ResourceProvisionPayload",
          "description": "resource creation payload"
        },
        "executionParameters": {
          "$ref": "#/definitions/ExecutionParameters",
          "description": "The execution parameters for the request"
        },
        "correlationid": {
          "type": "string",
          "description": "CorrelationId item"
        }
      },
      "required": [
        "resourceConfigParameters",
        "executionParameters"
      ]
    },
    "ExecuteDeallocateRequest": {
      "type": "object",
      "description": "The ExecuteDeallocateRequest request for executeDeallocate operations",
      "properties": {
        "executionParameters": {
          "$ref": "#/definitions/ExecutionParameters",
          "description": "The execution parameters for the request"
        },
        "resources": {
          "$ref": "#/definitions/Resources",
          "description": "The resources for the request"
        },
        "correlationid": {
          "type": "string",
          "description": "CorrelationId item"
        }
      },
      "required": [
        "executionParameters",
        "resources",
        "correlationid"
      ]
    },
    "ExecuteDeleteRequest": {
      "type": "object",
      "description": "The ExecuteDeleteRequest for delete VM operation",
      "properties": {
        "executionParameters": {
          "$ref": "#/definitions/ExecutionParameters",
          "description": "The execution parameters for the request"
        },
        "resources": {
          "$ref": "#/definitions/Resources",
          "description": "The resources for the request"
        },
        "correlationid": {
          "type": "string",
          "description": "CorrelationId item"
        },
        "forceDeletion": {
          "type": "boolean",
          "description": "Forced delete resource item"
        }
      },
      "required": [
        "executionParameters",
        "resources"
      ]
    },
    "ExecuteHibernateRequest": {
      "type": "object",
      "description": "The ExecuteHibernateRequest request for executeHibernate operations",
      "properties": {
        "executionParameters": {
          "$ref": "#/definitions/ExecutionParameters",
          "description": "The execution parameters for the request"
        },
        "resources": {
          "$ref": "#/definitions/Resources",
          "description": "The resources for the request"
        },
        "correlationid": {
          "type": "string",
          "description": "CorrelationId item"
        }
      },
      "required": [
        "executionParameters",
        "resources",
        "correlationid"
      ]
    },
    "ExecuteStartRequest": {
      "type": "object",
      "description": "The ExecuteStartRequest request for executeStart operations",
      "properties": {
        "executionParameters": {
          "$ref": "#/definitions/ExecutionParameters",
          "description": "The execution parameters for the request"
        },
        "resources": {
          "$ref": "#/definitions/Resources",
          "description": "The resources for the request"
        },
        "correlationid": {
          "type": "string",
          "description": "CorrelationId item"
        }
      },
      "required": [
        "executionParameters",
        "resources",
        "correlationid"
      ]
    },
    "ExecutionParameters": {
      "type": "object",
      "description": "Extra details needed to run the user's request",
      "properties": {
        "optimizationPreference": {
          "$ref": "#/definitions/OptimizationPreference",
          "description": "Details that could optimize the user's request"
        },
        "retryPolicy": {
          "$ref": "#/definitions/RetryPolicy",
          "description": "Retry policy the user can pass"
        }
      }
    },
    "GetOperationErrorsRequest": {
      "type": "object",
      "description": "This is the request to get errors per vm operations",
      "properties": {
        "operationIds": {
          "type": "array",
          "description": "The list of operation ids to query errors of",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "operationIds"
      ]
    },
    "GetOperationErrorsResponse": {
      "type": "object",
      "description": "This is the response from a get operations errors request",
      "properties": {
        "results": {
          "type": "array",
          "description": "An array of operationids and their corresponding errors if any",
          "items": {
            "$ref": "#/definitions/OperationErrorsResult"
          },
          "x-ms-identifiers": [
            "operationId"
          ]
        }
      },
      "required": [
        "results"
      ]
    },
    "GetOperationStatusRequest": {
      "type": "object",
      "description": "This is the request to get operation status using operationids",
      "properties": {
        "operationIds": {
          "type": "array",
          "description": "The list of operation ids to get the status of",
          "items": {
            "type": "string"
          }
        },
        "correlationid": {
          "type": "string",
          "description": "CorrelationId item"
        }
      },
      "required": [
        "operationIds",
        "correlationid"
      ]
    },
    "GetOperationStatusResponse": {
      "type": "object",
      "description": "This is the response from a get operations status request",
      "properties": {
        "results": {
          "type": "array",
          "description": "An array of resource operations based on their operation ids",
          "items": {
            "$ref": "#/definitions/ResourceOperation"
          },
          "x-ms-identifiers": [
            "resourceId"
          ]
        }
      },
      "required": [
        "results"
      ]
    },
    "HibernateResourceOperationResponse": {
      "type": "object",
      "description": "The response from a Hibernate request",
      "properties": {
        "description": {
          "type": "string",
          "description": "The description of the operation response"
        },
        "type": {
          "type": "string",
          "description": "The type of resources used in the Hibernate request eg virtual machines"
        },
        "location": {
          "$ref": "#/definitions/Azure.Core.azureLocation",
          "description": "The location of the Hibernate request eg westus",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "results": {
          "type": "array",
          "description": "The results from the Hibernate request if no errors exist",
          "items": {
            "$ref": "#/definitions/ResourceOperation"
          },
          "x-ms-identifiers": [
            "resourceId"
          ]
        }
      },
      "required": [
        "description",
        "type",
        "location"
      ]
    },
    "Language": {
      "type": "string",
      "description": "The notification languages currently supported",
      "enum": [
        "en-us"
      ],
      "x-ms-enum": {
        "name": "Language",
        "modelAsString": true,
        "values": [
          {
            "name": "EnUs",
            "value": "en-us",
            "description": "American english language"
          }
        ]
      }
    },
    "Month": {
      "type": "string",
      "description": "Representation of the months available selection in a gregorian calendar",
      "enum": [
        "January",
        "February",
        "March",
        "April",
        "May",
        "June",
        "July",
        "August",
        "September",
        "October",
        "November",
        "December",
        "All"
      ],
      "x-ms-enum": {
        "name": "Month",
        "modelAsString": true,
        "values": [
          {
            "name": "January",
            "value": "January",
            "description": "The January month."
          },
          {
            "name": "February",
            "value": "February",
            "description": "The February month."
          },
          {
            "name": "March",
            "value": "March",
            "description": "The March month."
          },
          {
            "name": "April",
            "value": "April",
            "description": "The April month."
          },
          {
            "name": "May",
            "value": "May",
            "description": "The May month."
          },
          {
            "name": "June",
            "value": "June",
            "description": "The June month."
          },
          {
            "name": "July",
            "value": "July",
            "description": "The July month."
          },
          {
            "name": "August",
            "value": "August",
            "description": "The August month."
          },
          {
            "name": "September",
            "value": "September",
            "description": "The September month."
          },
          {
            "name": "October",
            "value": "October",
            "description": "The October month."
          },
          {
            "name": "November",
            "value": "November",
            "description": "The November month."
          },
          {
            "name": "December",
            "value": "December",
            "description": "The December month."
          },
          {
            "name": "All",
            "value": "All",
            "description": "All months"
          }
        ]
      }
    },
    "NotificationProperties": {
      "type": "object",
      "description": "The information about notifications to be send to about upcoming operations.",
      "properties": {
        "destination": {
          "type": "string",
          "description": "Where the notification should be sent. For email, it should follow email format."
        },
        "type": {
          "$ref": "#/definitions/NotificationType",
          "description": "Type of notification to be sent."
        },
        "language": {
          "$ref": "#/definitions/Language",
          "description": "The language the notification should be sent on."
        },
        "disabled": {
          "type": "boolean",
          "description": "Tells if the notification is enabled or not.",
          "default": false
        }
      },
      "required": [
        "destination",
        "type",
        "language"
      ]
    },
    "NotificationType": {
      "type": "string",
      "description": "The type of notification supported",
      "enum": [
        "Email"
      ],
      "x-ms-enum": {
        "name": "NotificationType",
        "modelAsString": true,
        "values": [
          {
            "name": "Email",
            "value": "Email",
            "description": "Notify through e-mail"
          }
        ]
      }
    },
    "Occurrence": {
      "type": "object",
      "description": "Concrete proxy resource types can be created by aliasing this type using a specific property type.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/OccurrenceProperties",
          "description": "The resource-specific properties for this resource."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "OccurrenceExtensionProperties": {
      "type": "object",
      "description": "The properties of the occurrence extension",
      "properties": {
        "resourceId": {
          "$ref": "#/definitions/ValidScheduledActionResourceId",
          "description": "The ARM Id of the resource.\n\"subscriptions/{subId}/resourceGroups/{rgName}/providers/Microsoft.Compute/virtualMachines/{vmName}\""
        },
        "notificationSettings": {
          "type": "array",
          "description": "The desired notification settings for the specified resource.",
          "items": {
            "$ref": "#/definitions/NotificationProperties"
          },
          "x-ms-identifiers": [
            "destination"
          ]
        },
        "scheduledTime": {
          "type": "string",
          "format": "date-time",
          "description": "The time the occurrence is scheduled for the resource. Specified in UTC.",
          "readOnly": true
        },
        "provisioningState": {
          "$ref": "#/definitions/Azure.ResourceManager.ResourceProvisioningState",
          "description": "The current state of the resource",
          "readOnly": true
        },
        "errorDetails": {
          "$ref": "#/definitions/Azure.Core.Foundations.Error",
          "description": "Error details for the resource. Only populated if resource is in failed state.",
          "readOnly": true
        },
        "scheduledActionId": {
          "$ref": "#/definitions/ScheduledActionsId",
          "description": "The arm identifier of the scheduled action the occurrence belongs to"
        }
      },
      "required": [
        "resourceId",
        "scheduledTime",
        "scheduledActionId"
      ]
    },
    "OccurrenceExtensionResource": {
      "type": "object",
      "description": "The scheduled action extension",
      "properties": {
        "properties": {
          "$ref": "#/definitions/OccurrenceExtensionProperties",
          "description": "The resource-specific properties for this resource."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "OccurrenceExtensionResourceListResult": {
      "type": "object",
      "description": "The response of a OccurrenceExtensionResource list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The OccurrenceExtensionResource items on this page",
          "items": {
            "$ref": "#/definitions/OccurrenceExtensionResource"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "OccurrenceListResult": {
      "type": "object",
      "description": "The response of a Occurrence list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The Occurrence items on this page",
          "items": {
            "$ref": "#/definitions/Occurrence"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "OccurrenceProperties": {
      "type": "object",
      "description": "Properties for an occurrence",
      "properties": {
        "scheduledTime": {
          "type": "string",
          "format": "date-time",
          "description": "The time the occurrence is scheduled for. This value can be changed by calling the delay API",
          "readOnly": true
        },
        "resultSummary": {
          "$ref": "#/definitions/OccurrenceResultSummary",
          "description": "The result for occurrences that achieved a terminal state",
          "readOnly": true
        },
        "provisioningState": {
          "$ref": "#/definitions/OccurrenceState",
          "description": "The aggregated provisioning state of the occurrence",
          "readOnly": true
        }
      },
      "required": [
        "scheduledTime",
        "resultSummary"
      ]
    },
    "OccurrenceResource": {
      "type": "object",
      "description": "Represents an scheduled action resource metadata.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "The compute RP resource id of the resource in the scheduled actions scope. ",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of resource",
          "readOnly": true
        },
        "resourceId": {
          "$ref": "#/definitions/ValidScheduledActionResourceId",
          "description": "The ARM Id of the resource.\n\"subscriptions/{subId}/resourceGroups/{rgName}/providers/Microsoft.Compute/virtualMachines/{vmName}\""
        },
        "notificationSettings": {
          "type": "array",
          "description": "The desired notification settings for the specified resource.",
          "items": {
            "$ref": "#/definitions/NotificationProperties"
          },
          "x-ms-identifiers": [
            "destination"
          ]
        },
        "scheduledTime": {
          "type": "string",
          "format": "date-time",
          "description": "The time the occurrence is scheduled for the resource.",
          "readOnly": true
        },
        "provisioningState": {
          "$ref": "#/definitions/Azure.ResourceManager.ResourceProvisioningState",
          "description": "The current state of the resource",
          "readOnly": true
        },
        "errorDetails": {
          "$ref": "#/definitions/Azure.Core.Foundations.Error",
          "description": "Error details for the resource. Only populated if resource is in failed state.",
          "readOnly": true
        }
      },
      "required": [
        "name",
        "id",
        "resourceId",
        "scheduledTime"
      ]
    },
    "OccurrenceResourceListResponse": {
      "type": "object",
      "description": "Paged collection of OccurrenceResource items",
      "properties": {
        "value": {
          "type": "array",
          "description": "The OccurrenceResource items on this page",
          "items": {
            "$ref": "#/definitions/OccurrenceResource"
          },
          "x-ms-identifiers": []
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "OccurrenceResultSummary": {
      "type": "object",
      "description": "The summarized provisioning result of an occurrence",
      "properties": {
        "total": {
          "type": "integer",
          "format": "int32",
          "description": "The total number of resources that the occurrence was supposed to act on."
        },
        "statuses": {
          "type": "array",
          "description": "The summarized status of the resources.",
          "items": {
            "$ref": "#/definitions/ResourceResultSummary"
          },
          "x-ms-identifiers": [
            "code"
          ]
        }
      },
      "required": [
        "total",
        "statuses"
      ]
    },
    "OccurrenceState": {
      "type": "string",
      "description": "The state the occurrence is at a given time",
      "enum": [
        "Created",
        "Rescheduling",
        "Scheduled",
        "Succeeded",
        "Failed",
        "Cancelling",
        "Canceled"
      ],
      "x-ms-enum": {
        "name": "OccurrenceState",
        "modelAsString": true,
        "values": [
          {
            "name": "Created",
            "value": "Created",
            "description": "The occurrence was created"
          },
          {
            "name": "Rescheduling",
            "value": "Rescheduling",
            "description": "The occurrence is being rescheduled"
          },
          {
            "name": "Scheduled",
            "value": "Scheduled",
            "description": "The occurrence has been scheduled"
          },
          {
            "name": "Succeeded",
            "value": "Succeeded",
            "description": "The occurrence has successfully ran"
          },
          {
            "name": "Failed",
            "value": "Failed",
            "description": "The occurrence has failed during its scheduling"
          },
          {
            "name": "Cancelling",
            "value": "Cancelling",
            "description": "The occurrence is going through cancellation"
          },
          {
            "name": "Canceled",
            "value": "Canceled",
            "description": "The occurrence has been canceled"
          }
        ]
      },
      "readOnly": true
    },
    "OperationErrorDetails": {
      "type": "object",
      "description": "This defines a list of operation errors associated with a unique operationId",
      "properties": {
        "errorCode": {
          "type": "string",
          "description": "The error code of the operation"
        },
        "errorDetails": {
          "type": "string",
          "description": "The error details of the operation"
        },
        "timestamp": {
          "type": "string",
          "format": "date-time",
          "description": "The timestamp of the error occurence"
        },
        "timeStamp": {
          "type": "string",
          "format": "date-time",
          "description": "The timestamp of the error occurence"
        },
        "azureOperationName": {
          "type": "string",
          "description": "The compute operationid of the Start/Deallocate/Hibernate request"
        },
        "crpOperationId": {
          "type": "string",
          "description": "The compute operationid of the Start/Deallocate/Hibernate request"
        }
      },
      "required": [
        "errorCode",
        "errorDetails"
      ]
    },
    "OperationErrorsResult": {
      "type": "object",
      "description": "This is the first level of operation errors from the request when clients get errors per vm operation",
      "properties": {
        "operationId": {
          "type": "string",
          "description": "The operationId identifying a vm operation"
        },
        "creationTime": {
          "type": "string",
          "format": "date-time",
          "description": "The creation time of the error result"
        },
        "activationTime": {
          "type": "string",
          "format": "date-time",
          "description": "The activation time of a vm operation"
        },
        "completedAt": {
          "type": "string",
          "format": "date-time",
          "description": "The completion time of the operation if the operation was completed"
        },
        "operationErrors": {
          "type": "array",
          "description": "A list of errors associated with the operationid",
          "items": {
            "$ref": "#/definitions/OperationErrorDetails"
          },
          "x-ms-identifiers": []
        },
        "requestErrorCode": {
          "type": "string",
          "description": "Request level error code"
        },
        "requestErrorDetails": {
          "type": "string",
          "description": "Request level error details"
        }
      }
    },
    "OperationState": {
      "type": "string",
      "description": "Values that define the states of operations in Scheduled Actions",
      "enum": [
        "Unknown",
        "PendingScheduling",
        "Scheduled",
        "PendingExecution",
        "Executing",
        "Succeeded",
        "Failed",
        "Cancelled",
        "Blocked"
      ],
      "x-ms-enum": {
        "name": "OperationState",
        "modelAsString": true,
        "values": [
          {
            "name": "Unknown",
            "value": "Unknown",
            "description": "The default value for the operation state enum"
          },
          {
            "name": "PendingScheduling",
            "value": "PendingScheduling",
            "description": "Operations that are pending scheduling"
          },
          {
            "name": "Scheduled",
            "value": "Scheduled",
            "description": "Operations that have been scheduled"
          },
          {
            "name": "PendingExecution",
            "value": "PendingExecution",
            "description": "Operations that are waiting to be executed"
          },
          {
            "name": "Executing",
            "value": "Executing",
            "description": "Operations that are in the process of being executed"
          },
          {
            "name": "Succeeded",
            "value": "Succeeded",
            "description": "Operations that suceeded"
          },
          {
            "name": "Failed",
            "value": "Failed",
            "description": "Operations that have failed"
          },
          {
            "name": "Cancelled",
            "value": "Cancelled",
            "description": "Operations that have been Cancelled by the user"
          },
          {
            "name": "Blocked",
            "value": "Blocked",
            "description": "Operations that are blocked"
          }
        ]
      },
      "readOnly": true
    },
    "OptimizationPreference": {
      "type": "string",
      "description": "The preferences customers can select to optimize their requests to ScheduledActions",
      "enum": [
        "Cost",
        "Availability",
        "CostAvailabilityBalanced"
      ],
      "x-ms-enum": {
        "name": "OptimizationPreference",
        "modelAsString": true,
        "values": [
          {
            "name": "Cost",
            "value": "Cost",
            "description": "Optimize while considering cost savings"
          },
          {
            "name": "Availability",
            "value": "Availability",
            "description": "Optimize while considering availability of resources"
          },
          {
            "name": "CostAvailabilityBalanced",
            "value": "CostAvailabilityBalanced",
            "description": "Optimize while considering a balance of cost and availability"
          }
        ]
      }
    },
    "ProvisioningState": {
      "type": "string",
      "description": "Provisioning state",
      "enum": [
        "Succeeded",
        "Failed",
        "Canceled",
        "Deleting"
      ],
      "x-ms-enum": {
        "name": "ProvisioningState",
        "modelAsString": true,
        "values": [
          {
            "name": "Succeeded",
            "value": "Succeeded",
            "description": "Resource has been created."
          },
          {
            "name": "Failed",
            "value": "Failed",
            "description": "Resource creation failed."
          },
          {
            "name": "Canceled",
            "value": "Canceled",
            "description": "Resource creation was canceled."
          },
          {
            "name": "Deleting",
            "value": "Deleting",
            "description": "Resource is being deleted."
          }
        ]
      },
      "readOnly": true
    },
    "ResourceAttachRequest": {
      "type": "object",
      "description": "Request model to attach a list of scheduled action resources.",
      "properties": {
        "resources": {
          "type": "array",
          "description": "List of resources to be attached/patched",
          "items": {
            "$ref": "#/definitions/ScheduledActionResource"
          },
          "x-ms-identifiers": [
            "resourceId"
          ]
        }
      },
      "required": [
        "resources"
      ]
    },
    "ResourceDetachRequest": {
      "type": "object",
      "description": "Request model to detach a list of scheduled action resources.",
      "properties": {
        "resources": {
          "type": "array",
          "description": "List of resources to be detached",
          "items": {
            "$ref": "#/definitions/ValidScheduledActionResourceId"
          }
        }
      },
      "required": [
        "resources"
      ]
    },
    "ResourceListResponse": {
      "type": "object",
      "description": "Paged collection of ScheduledActionResource items",
      "properties": {
        "value": {
          "type": "array",
          "description": "The ScheduledActionResource items on this page",
          "items": {
            "$ref": "#/definitions/ScheduledActionResource"
          },
          "x-ms-identifiers": []
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "ResourceOperation": {
      "type": "object",
      "description": "High level response from an operation on a resource",
      "properties": {
        "resourceId": {
          "type": "string",
          "format": "arm-id",
          "description": "Unique identifier for the resource involved in the operation, eg ArmId"
        },
        "errorCode": {
          "type": "string",
          "description": "Resource level error code if it exists"
        },
        "errorDetails": {
          "type": "string",
          "description": "Resource level error details if they exist"
        },
        "operation": {
          "$ref": "#/definitions/ResourceOperationDetails",
          "description": "Details of the operation performed on a resource"
        }
      }
    },
    "ResourceOperationDetails": {
      "type": "object",
      "description": "The details of a response from an operation on a resource",
      "properties": {
        "operationId": {
          "type": "string",
          "description": "Operation identifier for the unique operation"
        },
        "resourceId": {
          "type": "string",
          "format": "arm-id",
          "description": "Unique identifier for the resource involved in the operation, eg ArmId"
        },
        "opType": {
          "type": "string",
          "description": "Type of operation performed on the resources",
          "default": "Unknown",
          "enum": [
            "Unknown",
            "Start",
            "Deallocate",
            "Hibernate"
          ],
          "x-ms-enum": {
            "name": "ResourceOperationType",
            "modelAsString": true,
            "values": [
              {
                "name": "Unknown",
                "value": "Unknown",
                "description": "The default value for this enum type"
              },
              {
                "name": "Start",
                "value": "Start",
                "description": "Start operations on the resources"
              },
              {
                "name": "Deallocate",
                "value": "Deallocate",
                "description": "Deallocate operations on the resources"
              },
              {
                "name": "Hibernate",
                "value": "Hibernate",
                "description": "Hibernate operations on the resources"
              }
            ]
          }
        },
        "subscriptionId": {
          "type": "string",
          "description": "Subscription id attached to the request"
        },
        "deadline": {
          "type": "string",
          "format": "date-time",
          "description": "Deadline for the operation"
        },
        "deadlineType": {
          "type": "string",
          "description": "Type of deadline of the operation",
          "default": "Unknown",
          "enum": [
            "Unknown",
            "InitiateAt",
            "CompleteBy"
          ],
          "x-ms-enum": {
            "name": "DeadlineType",
            "modelAsString": true,
            "values": [
              {
                "name": "Unknown",
                "value": "Unknown",
                "description": "Default value of Unknown."
              },
              {
                "name": "InitiateAt",
                "value": "InitiateAt",
                "description": "Initiate the operation at the given deadline."
              },
              {
                "name": "CompleteBy",
                "value": "CompleteBy",
                "description": "Complete the operation by the given deadline."
              }
            ]
          }
        },
        "state": {
          "type": "string",
          "description": "Current state of the operation",
          "default": "Unknown",
          "enum": [
            "Unknown",
            "PendingScheduling",
            "Scheduled",
            "PendingExecution",
            "Executing",
            "Succeeded",
            "Failed",
            "Cancelled",
            "Blocked"
          ],
          "x-ms-enum": {
            "name": "OperationState",
            "modelAsString": true,
            "values": [
              {
                "name": "Unknown",
                "value": "Unknown",
                "description": "The default value for the operation state enum"
              },
              {
                "name": "PendingScheduling",
                "value": "PendingScheduling",
                "description": "Operations that are pending scheduling"
              },
              {
                "name": "Scheduled",
                "value": "Scheduled",
                "description": "Operations that have been scheduled"
              },
              {
                "name": "PendingExecution",
                "value": "PendingExecution",
                "description": "Operations that are waiting to be executed"
              },
              {
                "name": "Executing",
                "value": "Executing",
                "description": "Operations that are in the process of being executed"
              },
              {
                "name": "Succeeded",
                "value": "Succeeded",
                "description": "Operations that suceeded"
              },
              {
                "name": "Failed",
                "value": "Failed",
                "description": "Operations that have failed"
              },
              {
                "name": "Cancelled",
                "value": "Cancelled",
                "description": "Operations that have been Cancelled by the user"
              },
              {
                "name": "Blocked",
                "value": "Blocked",
                "description": "Operations that are blocked"
              }
            ]
          },
          "readOnly": true
        },
        "timezone": {
          "type": "string",
          "description": "Timezone for the operation"
        },
        "timeZone": {
          "type": "string",
          "description": "Timezone for the operation"
        },
        "resourceOperationError": {
          "$ref": "#/definitions/ResourceOperationError",
          "description": "Operation level errors if they exist"
        },
        "completedAt": {
          "type": "string",
          "format": "date-time",
          "description": "Time the operation was complete if errors are null"
        },
        "retryPolicy": {
          "$ref": "#/definitions/RetryPolicy",
          "description": "Retry policy the user can pass"
        }
      },
      "required": [
        "operationId"
      ]
    },
    "ResourceOperationError": {
      "type": "object",
      "description": "These describe errors that occur at the resource level",
      "properties": {
        "errorCode": {
          "type": "string",
          "description": "Code for the error eg 404, 500"
        },
        "errorDetails": {
          "type": "string",
          "description": "Detailed message about the error"
        }
      },
      "required": [
        "errorCode",
        "errorDetails"
      ]
    },
    "ResourceOperationResponse": {
      "type": "object",
      "description": "The response from scheduled action resource requests, which contains the status of each resource",
      "properties": {
        "totalResources": {
          "type": "integer",
          "format": "int32",
          "description": "The total number of resources operated on"
        },
        "resourcesStatuses": {
          "type": "array",
          "description": "The resource status of for each resource",
          "items": {
            "$ref": "#/definitions/ResourceStatus"
          },
          "x-ms-identifiers": [
            "resourceId"
          ]
        }
      },
      "required": [
        "totalResources",
        "resourcesStatuses"
      ]
    },
    "ResourceOperationStatus": {
      "type": "string",
      "description": "The state the resource is on after the resource operation is applied",
      "enum": [
        "Succeeded",
        "Failed"
      ],
      "x-ms-enum": {
        "name": "ResourceOperationStatus",
        "modelAsString": true,
        "values": [
          {
            "name": "Succeeded",
            "value": "Succeeded",
            "description": "The resource operation was successful"
          },
          {
            "name": "Failed",
            "value": "Failed",
            "description": "The resource operation has failed."
          }
        ]
      },
      "readOnly": true
    },
    "ResourceOperationType": {
      "type": "string",
      "description": "The kind of operation types that can be performed on resources using ScheduledActions",
      "enum": [
        "Unknown",
        "Start",
        "Deallocate",
        "Hibernate"
      ],
      "x-ms-enum": {
        "name": "ResourceOperationType",
        "modelAsString": true,
        "values": [
          {
            "name": "Unknown",
            "value": "Unknown",
            "description": "The default value for this enum type"
          },
          {
            "name": "Start",
            "value": "Start",
            "description": "Start operations on the resources"
          },
          {
            "name": "Deallocate",
            "value": "Deallocate",
            "description": "Deallocate operations on the resources"
          },
          {
            "name": "Hibernate",
            "value": "Hibernate",
            "description": "Hibernate operations on the resources"
          }
        ]
      }
    },
    "ResourcePatchRequest": {
      "type": "object",
      "description": "Request model perform a resource operation in a list of resources",
      "properties": {
        "resources": {
          "type": "array",
          "description": "The list of resources we watch to patch",
          "items": {
            "$ref": "#/definitions/ScheduledActionResource"
          },
          "x-ms-identifiers": [
            "resourceId"
          ]
        }
      },
      "required": [
        "resources"
      ]
    },
    "ResourceProvisionPayload": {
      "type": "object",
      "description": "Resource creation data model",
      "properties": {
        "baseProfile": {
          "type": "object",
          "description": "JSON object that contains VM properties that are common across all VMs in this batch (if you want to create 100 VMs in this request, and they all have same vmSize, then include vmSize in baseProfile)",
          "additionalProperties": {}
        },
        "resourceOverrides": {
          "type": "array",
          "description": "JSON array, that contains VM properties that should to be overridden for each VM in the batch (if you want to create 100 VMs, they all need a distinct computerName property, you pass computerNames for each VM in batch in this array), service will merge baseProfile with VM specific overrides and create a merged VMProfile.",
          "items": {
            "type": "object",
            "additionalProperties": {}
          }
        },
        "resourceCount": {
          "type": "integer",
          "format": "int32",
          "description": "Number of VMs to be created"
        },
        "resourcePrefix": {
          "type": "string",
          "description": "if resourceOverrides doesn't contain \"name\", service will create name based of prefix and ResourceCount e.g. resourceprefix-0,resourceprefix-1.."
        }
      },
      "required": [
        "resourceCount"
      ]
    },
    "ResourceResultSummary": {
      "type": "object",
      "description": "The status of the resources",
      "properties": {
        "code": {
          "type": "string",
          "description": "The error code for those resources. In case of success, code is populated with Success."
        },
        "count": {
          "type": "integer",
          "format": "int32",
          "description": "The number of resources that the code applies to."
        },
        "errorDetails": {
          "$ref": "#/definitions/Azure.Core.Foundations.Error",
          "description": "The error details for the resources. Not populated on success cases."
        }
      },
      "required": [
        "code",
        "count"
      ]
    },
    "ResourceStatus": {
      "type": "object",
      "description": "The status of a resource after a resource level operation was performed",
      "properties": {
        "resourceId": {
          "$ref": "#/definitions/ValidScheduledActionResourceId",
          "description": "The arm identifier of the resource"
        },
        "status": {
          "$ref": "#/definitions/ResourceOperationStatus",
          "description": "The state the resource is currently on"
        },
        "error": {
          "$ref": "#/definitions/Azure.Core.Foundations.Error",
          "description": "Errors encountered while trying to perform"
        }
      },
      "required": [
        "resourceId",
        "status"
      ]
    },
    "ResourceType": {
      "type": "string",
      "description": "The type of resource being targeted",
      "enum": [
        "VirtualMachine",
        "VirtualMachineScaleSet"
      ],
      "x-ms-enum": {
        "name": "ResourceType",
        "modelAsString": true,
        "values": [
          {
            "name": "VirtualMachine",
            "value": "VirtualMachine",
            "description": "Resources defined are Virtual Machines"
          },
          {
            "name": "VirtualMachineScaleSet",
            "value": "VirtualMachineScaleSet",
            "description": "Resources defined are Virtual Machines Scale Sets"
          }
        ]
      }
    },
    "Resources": {
      "type": "object",
      "description": "The resources needed for the user request",
      "properties": {
        "ids": {
          "type": "array",
          "description": "The resource ids used for the request",
          "items": {
            "type": "string",
            "format": "arm-id",
            "description": "A type definition that refers the id to an Azure Resource Manager resource."
          }
        }
      },
      "required": [
        "ids"
      ]
    },
    "RetryPolicy": {
      "type": "object",
      "description": "The retry policy for the user request",
      "properties": {
        "retryCount": {
          "type": "integer",
          "format": "int32",
          "description": "Retry count for user request"
        },
        "retryWindowInMinutes": {
          "type": "integer",
          "format": "int32",
          "description": "Retry window in minutes for user request"
        }
      }
    },
    "Schedule": {
      "type": "object",
      "description": "The schedule details for the user request",
      "properties": {
        "deadline": {
          "type": "string",
          "format": "date-time",
          "description": "The deadline for the operation"
        },
        "deadLine": {
          "type": "string",
          "format": "date-time",
          "description": "The deadline for the operation"
        },
        "timezone": {
          "type": "string",
          "description": "The timezone for the operation"
        },
        "timeZone": {
          "type": "string",
          "description": "The timezone for the operation"
        },
        "deadlineType": {
          "type": "string",
          "description": "The deadlinetype of the operation, this can either be InitiateAt or CompleteBy",
          "default": "Unknown",
          "enum": [
            "Unknown",
            "InitiateAt",
            "CompleteBy"
          ],
          "x-ms-enum": {
            "name": "DeadlineType",
            "modelAsString": true,
            "values": [
              {
                "name": "Unknown",
                "value": "Unknown",
                "description": "Default value of Unknown."
              },
              {
                "name": "InitiateAt",
                "value": "InitiateAt",
                "description": "Initiate the operation at the given deadline."
              },
              {
                "name": "CompleteBy",
                "value": "CompleteBy",
                "description": "Complete the operation by the given deadline."
              }
            ]
          }
        }
      },
      "required": [
        "deadlineType"
      ]
    },
    "ScheduledAction": {
      "type": "object",
      "description": "The scheduled action resource",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ScheduledActionProperties",
          "description": "The resource-specific properties for this resource."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "ScheduledActionListResult": {
      "type": "object",
      "description": "The response of a ScheduledAction list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The ScheduledAction items on this page",
          "items": {
            "$ref": "#/definitions/ScheduledAction"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "ScheduledActionProperties": {
      "type": "object",
      "description": "Scheduled action properties",
      "properties": {
        "resourceType": {
          "$ref": "#/definitions/ResourceType",
          "description": "The type of resource the scheduled action is targeting"
        },
        "actionType": {
          "$ref": "#/definitions/ActionType",
          "description": "The action the scheduled action should perform in the resources"
        },
        "startTime": {
          "type": "string",
          "format": "date-time",
          "description": "The time which the scheduled action is supposed to start running"
        },
        "endTime": {
          "type": "string",
          "format": "date-time",
          "description": "The time when the scheduled action is supposed to stop scheduling"
        },
        "schedule": {
          "$ref": "#/definitions/ScheduledActionsSchedule",
          "description": "The schedule the scheduled action is supposed to follow"
        },
        "notificationSettings": {
          "type": "array",
          "description": "The notification settings for the scheduled action",
          "items": {
            "$ref": "#/definitions/NotificationProperties"
          },
          "x-ms-identifiers": [
            "destination"
          ]
        },
        "disabled": {
          "type": "boolean",
          "description": "Tell if the scheduled action is disabled or not",
          "default": false
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "The status of the last provisioning operation performed on the resource.",
          "readOnly": true
        }
      },
      "required": [
        "resourceType",
        "actionType",
        "startTime",
        "schedule",
        "notificationSettings"
      ]
    },
    "ScheduledActionPropertiesUpdate": {
      "type": "object",
      "description": "Scheduled action properties",
      "properties": {
        "resourceType": {
          "$ref": "#/definitions/ResourceType",
          "description": "The type of resource the scheduled action is targeting"
        },
        "actionType": {
          "$ref": "#/definitions/ActionType",
          "description": "The action the scheduled action should perform in the resources"
        },
        "startTime": {
          "type": "string",
          "format": "date-time",
          "description": "The time which the scheduled action is supposed to start running"
        },
        "endTime": {
          "type": "string",
          "format": "date-time",
          "description": "The time when the scheduled action is supposed to stop scheduling"
        },
        "schedule": {
          "$ref": "#/definitions/ScheduledActionsScheduleUpdate",
          "description": "The schedule the scheduled action is supposed to follow"
        },
        "notificationSettings": {
          "type": "array",
          "description": "The notification settings for the scheduled action",
          "items": {
            "$ref": "#/definitions/NotificationProperties"
          },
          "x-ms-identifiers": [
            "destination"
          ]
        },
        "disabled": {
          "type": "boolean",
          "description": "Tell if the scheduled action is disabled or not",
          "default": false
        }
      }
    },
    "ScheduledActionResource": {
      "type": "object",
      "description": "Represents an scheduled action resource metadata.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "The compute RP resource id of the resource in the scheduled actions scope. ",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of resource",
          "readOnly": true
        },
        "resourceId": {
          "$ref": "#/definitions/ValidScheduledActionResourceId",
          "description": "The ARM Id of the resource.\n\"subscriptions/{subId}/resourceGroups/{rgName}/providers/Microsoft.Compute/virtualMachines/{vmName}\""
        },
        "notificationSettings": {
          "type": "array",
          "description": "The desired notification settings for the specified resource.",
          "items": {
            "$ref": "#/definitions/NotificationProperties"
          },
          "x-ms-identifiers": [
            "destination"
          ]
        }
      },
      "required": [
        "name",
        "id",
        "resourceId"
      ]
    },
    "ScheduledActionResourceOperationResponse": {
      "type": "object",
      "description": "The response from scheduled action resource requests, which contains the status of each resource",
      "properties": {
        "totalResources": {
          "type": "integer",
          "format": "int32",
          "description": "The total number of resources operated on"
        },
        "resourcesStatuses": {
          "type": "array",
          "description": "The resource status of for each resource",
          "items": {
            "$ref": "#/definitions/ResourceStatus"
          },
          "x-ms-identifiers": [
            "resourceId"
          ]
        }
      },
      "required": [
        "totalResources",
        "resourcesStatuses"
      ]
    },
    "ScheduledActionResources": {
      "type": "object",
      "description": "The scheduled action extension",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ScheduledActionProperties",
          "description": "The resource-specific properties for this resource."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "ScheduledActionResourcesListResult": {
      "type": "object",
      "description": "The response of a ScheduledActionResources list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The ScheduledActionResources items on this page",
          "items": {
            "$ref": "#/definitions/ScheduledActionResources"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "ScheduledActionUpdate": {
      "type": "object",
      "description": "The scheduled action resource",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ScheduledActionPropertiesUpdate",
          "description": "The resource-specific properties for this resource."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Azure.ResourceManager.CommonTypes.TrackedResourceUpdate"
        }
      ]
    },
    "ScheduledActionsId": {
      "type": "string",
      "format": "arm-id",
      "description": "A type definition that refers the id to an Azure Resource Manager resource.",
      "x-ms-arm-id-details": {
        "allowedResources": [
          {
            "type": "Microsoft.ComputeSchedule/scheduledActions"
          }
        ]
      }
    },
    "ScheduledActionsSchedule": {
      "type": "object",
      "description": "Specify the schedule in which the scheduled action is supposed to follow",
      "properties": {
        "scheduledTime": {
          "type": "string",
          "format": "time",
          "description": "The time the scheduled action is supposed to run on"
        },
        "timeZone": {
          "type": "string",
          "description": "The timezone the scheduled time is specified on"
        },
        "requestedWeekDays": {
          "type": "array",
          "description": "The week days the scheduled action is supposed to run on",
          "items": {
            "$ref": "#/definitions/WeekDay"
          }
        },
        "requestedMonths": {
          "type": "array",
          "description": "The months the scheduled action is supposed to run on",
          "items": {
            "$ref": "#/definitions/Month"
          }
        },
        "requestedDaysOfTheMonth": {
          "type": "array",
          "description": "The days of the month the scheduled action is supposed to run on. If empty, it means it will run on every day of the month.",
          "items": {
            "$ref": "#/definitions/DayOfTheMonth"
          }
        },
        "executionParameters": {
          "$ref": "#/definitions/ExecutionParameters",
          "description": "The execution parameters the scheduled action is supposed to follow"
        },
        "deadlineType": {
          "$ref": "#/definitions/DeadlineType",
          "description": "The type of deadline the scheduled action is supposed to follow for the schedule. If no value is passed, it will default to InitiateAt."
        }
      },
      "required": [
        "scheduledTime",
        "timeZone",
        "requestedWeekDays",
        "requestedMonths",
        "requestedDaysOfTheMonth"
      ]
    },
    "ScheduledActionsScheduleUpdate": {
      "type": "object",
      "description": "Specify the schedule in which the scheduled action is supposed to follow",
      "properties": {
        "scheduledTime": {
          "type": "string",
          "format": "time",
          "description": "The time the scheduled action is supposed to run on"
        },
        "timeZone": {
          "type": "string",
          "description": "The timezone the scheduled time is specified on"
        },
        "requestedWeekDays": {
          "type": "array",
          "description": "The week days the scheduled action is supposed to run on",
          "items": {
            "$ref": "#/definitions/WeekDay"
          }
        },
        "requestedMonths": {
          "type": "array",
          "description": "The months the scheduled action is supposed to run on",
          "items": {
            "$ref": "#/definitions/Month"
          }
        },
        "requestedDaysOfTheMonth": {
          "type": "array",
          "description": "The days of the month the scheduled action is supposed to run on. If empty, it means it will run on every day of the month.",
          "items": {
            "$ref": "#/definitions/DayOfTheMonth"
          }
        },
        "executionParameters": {
          "$ref": "#/definitions/ExecutionParameters",
          "description": "The execution parameters the scheduled action is supposed to follow"
        },
        "deadlineType": {
          "$ref": "#/definitions/DeadlineType",
          "description": "The type of deadline the scheduled action is supposed to follow for the schedule. If no value is passed, it will default to InitiateAt."
        }
      }
    },
    "StartResourceOperationResponse": {
      "type": "object",
      "description": "The response from a start request",
      "properties": {
        "description": {
          "type": "string",
          "description": "The description of the operation response"
        },
        "type": {
          "type": "string",
          "description": "The type of resources used in the start request eg virtual machines"
        },
        "location": {
          "$ref": "#/definitions/Azure.Core.azureLocation",
          "description": "The location of the start request eg westus",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "results": {
          "type": "array",
          "description": "The results from the start request if no errors exist",
          "items": {
            "$ref": "#/definitions/ResourceOperation"
          },
          "x-ms-identifiers": [
            "resourceId"
          ]
        }
      },
      "required": [
        "description",
        "type",
        "location"
      ]
    },
    "SubmitDeallocateRequest": {
      "type": "object",
      "description": "The deallocate request for resources",
      "properties": {
        "schedule": {
          "$ref": "#/definitions/Schedule",
          "description": "The schedule for the request"
        },
        "executionParameters": {
          "$ref": "#/definitions/ExecutionParameters",
          "description": "The execution parameters for the request"
        },
        "resources": {
          "$ref": "#/definitions/Resources",
          "description": "The resources for the request"
        },
        "correlationid": {
          "type": "string",
          "description": "CorrelationId item"
        }
      },
      "required": [
        "schedule",
        "executionParameters",
        "resources",
        "correlationid"
      ]
    },
    "SubmitHibernateRequest": {
      "type": "object",
      "description": "This is the request for hibernate",
      "properties": {
        "schedule": {
          "$ref": "#/definitions/Schedule",
          "description": "The schedule for the request"
        },
        "executionParameters": {
          "$ref": "#/definitions/ExecutionParameters",
          "description": "The execution parameters for the request"
        },
        "resources": {
          "$ref": "#/definitions/Resources",
          "description": "The resources for the request"
        },
        "correlationid": {
          "type": "string",
          "description": "CorrelationId item"
        }
      },
      "required": [
        "schedule",
        "executionParameters",
        "resources",
        "correlationid"
      ]
    },
    "SubmitStartRequest": {
      "type": "object",
      "description": "This is the request for start",
      "properties": {
        "schedule": {
          "$ref": "#/definitions/Schedule",
          "description": "The schedule for the request"
        },
        "executionParameters": {
          "$ref": "#/definitions/ExecutionParameters",
          "description": "The execution parameters for the request"
        },
        "resources": {
          "$ref": "#/definitions/Resources",
          "description": "The resources for the request"
        },
        "correlationid": {
          "type": "string",
          "description": "CorrelationId item"
        }
      },
      "required": [
        "schedule",
        "executionParameters",
        "resources",
        "correlationid"
      ]
    },
    "ValidScheduledActionResourceId": {
      "type": "string",
      "format": "arm-id",
      "description": "A type definition that refers the id to an Azure Resource Manager resource.",
      "x-ms-arm-id-details": {
        "allowedResources": [
          {
            "type": "Microsoft.Compute/virtualMachines"
          },
          {
            "type": "Microsoft.Compute/virtualMachineScaleSets"
          }
        ]
      }
    },
    "WeekDay": {
      "type": "string",
      "description": "Representation of the possible selection of days in a week in a gregorian calendar",
      "enum": [
        "Monday",
        "Tuesday",
        "Wednesday",
        "Thursday",
        "Friday",
        "Saturday",
        "Sunday",
        "All"
      ],
      "x-ms-enum": {
        "name": "WeekDay",
        "modelAsString": true,
        "values": [
          {
            "name": "Monday",
            "value": "Monday",
            "description": "Monday weekday."
          },
          {
            "name": "Tuesday",
            "value": "Tuesday",
            "description": "Tuesday weekday."
          },
          {
            "name": "Wednesday",
            "value": "Wednesday",
            "description": "Wednesday weekday."
          },
          {
            "name": "Thursday",
            "value": "Thursday",
            "description": "Thursday weekday."
          },
          {
            "name": "Friday",
            "value": "Friday",
            "description": "Friday weekday."
          },
          {
            "name": "Saturday",
            "value": "Saturday",
            "description": "Saturday weekday."
          },
          {
            "name": "Sunday",
            "value": "Sunday",
            "description": "Sunday weekday."
          },
          {
            "name": "All",
            "value": "All",
            "description": "All week days"
          }
        ]
      }
    }
  },
  "parameters": {
    "Azure.ResourceManager.ResourceUriParameter": {
      "name": "resourceUri",
      "in": "path",
      "description": "The fully qualified Azure Resource manager identifier of the resource.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method",
      "x-ms-skip-url-encoding": true
    }
  }
}
