{
  "swagger": "2.0",
  "info": {
    "title": "Microsoft.ComputeSchedule",
    "version": "2025-10-01",
    "description": "Microsoft.ComputeSchedule Resource Provider management API.",
    "x-typespec-generated": [
      {
        "emitter": "@azure-tools/typespec-autorest"
      }
    ]
  },
  "schemes": [
    "https"
  ],
  "host": "management.azure.com",
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "description": "Azure Active Directory OAuth2 Flow.",
      "flow": "implicit",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "tags": [
    {
      "name": "Operations"
    }
  ],
  "paths": {
    "/providers/Microsoft.ComputeSchedule/operations": {
      "get": {
        "operationId": "Operations_List",
        "tags": [
          "Operations"
        ],
        "description": "List the operations for the provider",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/OperationListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Operations_List": {
            "$ref": "./examples/examples/Operations_List_MinimumSet_Gen.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ComputeSchedule/locations/{locationparameter}/virtualMachinesCancelOperations": {
      "post": {
        "operationId": "ScheduledActions_VirtualMachinesCancelOperations",
        "description": "VirtualMachinesCancelOperations: Cancel a previously submitted (start/deallocate/hibernate) request",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "locationparameter",
            "in": "path",
            "description": "The location name.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "requestBody",
            "in": "body",
            "description": "The request body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CancelOperationsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/CancelOperationsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ScheduledActions_VirtualMachinesCancelOperations": {
            "$ref": "./examples/examples/ScheduledActions_VirtualMachinesCancelOperations_MaximumSet_Gen.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ComputeSchedule/locations/{locationparameter}/virtualMachinesExecuteCreate": {
      "post": {
        "operationId": "ScheduledActions_VirtualMachinesExecuteCreate",
        "description": "VirtualMachinesExecuteCreate: Execute create operation for a batch of virtual machines, this operation is triggered as soon as Computeschedule receives it.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "locationparameter",
            "in": "path",
            "description": "The location name.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "requestBody",
            "in": "body",
            "description": "The request body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ExecuteCreateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/CreateResourceOperationResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ScheduledActions_VirtualMachinesExecuteCreate": {
            "$ref": "./examples/examples/ScheduledActions_VirtualMachinesExecuteCreate_MaximumSet_Gen.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ComputeSchedule/locations/{locationparameter}/virtualMachinesExecuteDeallocate": {
      "post": {
        "operationId": "ScheduledActions_VirtualMachinesExecuteDeallocate",
        "description": "VirtualMachinesExecuteDeallocate: Execute deallocate operation for a batch of virtual machines, this operation is triggered as soon as Computeschedule receives it.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "locationparameter",
            "in": "path",
            "description": "The location name.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "requestBody",
            "in": "body",
            "description": "The request body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ExecuteDeallocateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DeallocateResourceOperationResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ScheduledActions_VirtualMachinesExecuteDeallocate": {
            "$ref": "./examples/examples/ScheduledActions_VirtualMachinesExecuteDeallocate_MaximumSet_Gen.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ComputeSchedule/locations/{locationparameter}/virtualMachinesExecuteDelete": {
      "post": {
        "operationId": "ScheduledActions_VirtualMachinesExecuteDelete",
        "description": "VirtualMachinesExecuteDelete: Execute delete operation for a batch of virtual machines, this operation is triggered as soon as Computeschedule receives it.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "locationparameter",
            "in": "path",
            "description": "The location name.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "requestBody",
            "in": "body",
            "description": "The request body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ExecuteDeleteRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DeleteResourceOperationResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ScheduledActions_VirtualMachinesExecuteDelete": {
            "$ref": "./examples/examples/ScheduledActions_VirtualMachinesExecuteDelete_MaximumSet_Gen.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ComputeSchedule/locations/{locationparameter}/virtualMachinesExecuteHibernate": {
      "post": {
        "operationId": "ScheduledActions_VirtualMachinesExecuteHibernate",
        "description": "VirtualMachinesExecuteHibernate: Execute hibernate operation for a batch of virtual machines, this operation is triggered as soon as Computeschedule receives it.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "locationparameter",
            "in": "path",
            "description": "The location name.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "requestBody",
            "in": "body",
            "description": "The request body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ExecuteHibernateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/HibernateResourceOperationResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ScheduledActions_VirtualMachinesExecuteHibernate": {
            "$ref": "./examples/examples/ScheduledActions_VirtualMachinesExecuteHibernate_MaximumSet_Gen.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ComputeSchedule/locations/{locationparameter}/virtualMachinesExecuteStart": {
      "post": {
        "operationId": "ScheduledActions_VirtualMachinesExecuteStart",
        "description": "VirtualMachinesExecuteStart: Execute start operation for a batch of virtual machines, this operation is triggered as soon as Computeschedule receives it.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "locationparameter",
            "in": "path",
            "description": "The location name.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "requestBody",
            "in": "body",
            "description": "The request body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ExecuteStartRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/StartResourceOperationResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ScheduledActions_VirtualMachinesExecuteStart": {
            "$ref": "./examples/examples/ScheduledActions_VirtualMachinesExecuteStart_MaximumSet_Gen.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ComputeSchedule/locations/{locationparameter}/virtualMachinesGetOperationErrors": {
      "post": {
        "operationId": "ScheduledActions_VirtualMachinesGetOperationErrors",
        "description": "VirtualMachinesGetOperationErrors: Get error details on operation errors (like transient errors encountered, additional logs) if they exist.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "locationparameter",
            "in": "path",
            "description": "The location name.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "requestBody",
            "in": "body",
            "description": "The request body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetOperationErrorsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/GetOperationErrorsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ScheduledActions_VirtualMachinesGetOperationErrors": {
            "$ref": "./examples/examples/ScheduledActions_VirtualMachinesGetOperationErrors_MaximumSet_Gen.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ComputeSchedule/locations/{locationparameter}/virtualMachinesGetOperationStatus": {
      "post": {
        "operationId": "ScheduledActions_VirtualMachinesGetOperationStatus",
        "description": "VirtualMachinesGetOperationStatus: Polling endpoint to read status of operations performed on virtual machines",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "locationparameter",
            "in": "path",
            "description": "The location name.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "requestBody",
            "in": "body",
            "description": "The request body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetOperationStatusRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/GetOperationStatusResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ScheduledActions_VirtualMachinesGetOperationStatus": {
            "$ref": "./examples/examples/ScheduledActions_VirtualMachinesGetOperationStatus_MaximumSet_Gen.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ComputeSchedule/locations/{locationparameter}/virtualMachinesSubmitDeallocate": {
      "post": {
        "operationId": "ScheduledActions_VirtualMachinesSubmitDeallocate",
        "description": "VirtualMachinesSubmitDeallocate: Schedule deallocate operation for a batch of virtual machines at datetime in future.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "locationparameter",
            "in": "path",
            "description": "The location name.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "requestBody",
            "in": "body",
            "description": "The request body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SubmitDeallocateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DeallocateResourceOperationResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ScheduledActions_VirtualMachinesSubmitDeallocate": {
            "$ref": "./examples/examples/ScheduledActions_VirtualMachinesSubmitDeallocate_MaximumSet_Gen.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ComputeSchedule/locations/{locationparameter}/virtualMachinesSubmitHibernate": {
      "post": {
        "operationId": "ScheduledActions_VirtualMachinesSubmitHibernate",
        "description": "VirtualMachinesSubmitHibernate: Schedule hibernate operation for a batch of virtual machines at datetime in future.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "locationparameter",
            "in": "path",
            "description": "The location name.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "requestBody",
            "in": "body",
            "description": "The request body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SubmitHibernateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/HibernateResourceOperationResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ScheduledActions_VirtualMachinesSubmitHibernate": {
            "$ref": "./examples/examples/ScheduledActions_VirtualMachinesSubmitHibernate_MaximumSet_Gen.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ComputeSchedule/locations/{locationparameter}/virtualMachinesSubmitStart": {
      "post": {
        "operationId": "ScheduledActions_VirtualMachinesSubmitStart",
        "description": "VirtualMachinesSubmitStart: Schedule start operation for a batch of virtual machines at datetime in future.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v6/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "locationparameter",
            "in": "path",
            "description": "The location name.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "requestBody",
            "in": "body",
            "description": "The request body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SubmitStartRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/StartResourceOperationResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v6/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ScheduledActions_VirtualMachinesSubmitStart": {
            "$ref": "./examples/examples/ScheduledActions_VirtualMachinesSubmitStart_MaximumSet_Gen.json"
          }
        }
      }
    }
  },
  "definitions": {
    "AllocationStrategyType": {
      "type": "string",
      "description": "These types determines how and where the virtual machines are deployed to optimize for cost, performance, or availability",
      "enum": [
        "LowestPrice",
        "CapacityOptimized",
        "PriceCapacityOptimized",
        "Prioritized"
      ],
      "x-ms-enum": {
        "name": "AllocationStrategyType",
        "modelAsString": true,
        "values": [
          {
            "name": "LowestPrice",
            "value": "LowestPrice",
            "description": "Allocation of virtual machines by lowest price, this is available for both Regular and Spot virtual machine PriorityProfileType"
          },
          {
            "name": "CapacityOptimized",
            "value": "CapacityOptimized",
            "description": "Allocation of virtual machines by highest available capacity, this is available for Spot virtual machine PriorityProfileType"
          },
          {
            "name": "PriceCapacityOptimized",
            "value": "PriceCapacityOptimized",
            "description": "Allocation of virtual machines by highest available capacity at the lowest price on virtual machines in the selected region, this is available for Spot virtual machine PriorityProfileType"
          },
          {
            "name": "Prioritized",
            "value": "Prioritized",
            "description": "Allocation of virtual machines by customer selected priority, it seeks to create virtual machines based on the ranking provided in VmSizePreferenceRank, this is available for Regular virtual machine PriorityProfileType"
          }
        ]
      }
    },
    "Azure.Core.azureLocation": {
      "type": "string",
      "description": "Represents an Azure geography region where supported resource providers live."
    },
    "CancelOperationsRequest": {
      "type": "object",
      "description": "This is the request to cancel running operations in scheduled actions using the operation ids",
      "properties": {
        "operationIds": {
          "type": "array",
          "description": "The list of operation ids to cancel operations on",
          "items": {
            "type": "string"
          }
        },
        "correlationid": {
          "type": "string",
          "description": "CorrelationId item"
        }
      },
      "required": [
        "operationIds",
        "correlationid"
      ]
    },
    "CancelOperationsResponse": {
      "type": "object",
      "description": "This is the response from a cancel operations request",
      "properties": {
        "results": {
          "type": "array",
          "description": "An array of resource operations that were successfully cancelled",
          "items": {
            "$ref": "#/definitions/ResourceOperation"
          },
          "x-ms-identifiers": [
            "resourceId"
          ]
        }
      },
      "required": [
        "results"
      ]
    },
    "CreateResourceOperationResponse": {
      "type": "object",
      "description": "The response from a create request",
      "properties": {
        "description": {
          "type": "string",
          "description": "The description of the operation response"
        },
        "type": {
          "type": "string",
          "description": "The type of resources used in the create request eg virtual machines"
        },
        "location": {
          "$ref": "#/definitions/Azure.Core.azureLocation",
          "description": "The location of the start request eg westus",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "results": {
          "type": "array",
          "description": "The results from the start request if no errors exist",
          "items": {
            "$ref": "#/definitions/ResourceOperation"
          },
          "x-ms-identifiers": [
            "resourceId"
          ]
        }
      },
      "required": [
        "description",
        "type",
        "location"
      ]
    },
    "DeadlineType": {
      "type": "string",
      "description": "The types of deadlines supported by ScheduledActions",
      "enum": [
        "Unknown",
        "InitiateAt",
        "CompleteBy"
      ],
      "x-ms-enum": {
        "name": "DeadlineType",
        "modelAsString": true,
        "values": [
          {
            "name": "Unknown",
            "value": "Unknown",
            "description": "Default value of Unknown."
          },
          {
            "name": "InitiateAt",
            "value": "InitiateAt",
            "description": "Initiate the operation at the given deadline."
          },
          {
            "name": "CompleteBy",
            "value": "CompleteBy",
            "description": "Complete the operation by the given deadline."
          }
        ]
      }
    },
    "DeallocateResourceOperationResponse": {
      "type": "object",
      "description": "The response from a deallocate request",
      "properties": {
        "description": {
          "type": "string",
          "description": "The description of the operation response"
        },
        "type": {
          "type": "string",
          "description": "The type of resources used in the deallocate request eg virtual machines"
        },
        "location": {
          "$ref": "#/definitions/Azure.Core.azureLocation",
          "description": "The location of the deallocate request eg westus",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "results": {
          "type": "array",
          "description": "The results from the deallocate request if no errors exist",
          "items": {
            "$ref": "#/definitions/ResourceOperation"
          },
          "x-ms-identifiers": [
            "resourceId"
          ]
        }
      },
      "required": [
        "description",
        "type",
        "location"
      ]
    },
    "DeleteResourceOperationResponse": {
      "type": "object",
      "description": "The response from a delete request",
      "properties": {
        "description": {
          "type": "string",
          "description": "The description of the operation response"
        },
        "type": {
          "type": "string",
          "description": "The type of resources used in the delete request eg virtual machines"
        },
        "location": {
          "$ref": "#/definitions/Azure.Core.azureLocation",
          "description": "The location of the start request eg westus",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "results": {
          "type": "array",
          "description": "The results from the start request if no errors exist",
          "items": {
            "$ref": "#/definitions/ResourceOperation"
          },
          "x-ms-identifiers": [
            "resourceId"
          ]
        }
      },
      "required": [
        "description",
        "type",
        "location"
      ]
    },
    "ExecuteCreateRequest": {
      "type": "object",
      "description": "The ExecuteCreateRequest request for create operations",
      "properties": {
        "resourceConfigParameters": {
          "$ref": "#/definitions/ResourceProvisionPayload",
          "description": "resource creation payload"
        },
        "executionParameters": {
          "$ref": "#/definitions/ExecutionParameters",
          "description": "The execution parameters for the request"
        },
        "correlationid": {
          "type": "string",
          "description": "CorrelationId item"
        }
      },
      "required": [
        "resourceConfigParameters",
        "executionParameters"
      ]
    },
    "ExecuteDeallocateRequest": {
      "type": "object",
      "description": "The ExecuteDeallocateRequest request for executeDeallocate operations",
      "properties": {
        "executionParameters": {
          "$ref": "#/definitions/ExecutionParameters",
          "description": "The execution parameters for the request"
        },
        "resources": {
          "$ref": "#/definitions/Resources",
          "description": "The resources for the request"
        },
        "correlationid": {
          "type": "string",
          "description": "CorrelationId item"
        }
      },
      "required": [
        "executionParameters",
        "resources",
        "correlationid"
      ]
    },
    "ExecuteDeleteRequest": {
      "type": "object",
      "description": "The ExecuteDeleteRequest for delete VM operation",
      "properties": {
        "executionParameters": {
          "$ref": "#/definitions/ExecutionParameters",
          "description": "The execution parameters for the request"
        },
        "resources": {
          "$ref": "#/definitions/Resources",
          "description": "The resources for the request"
        },
        "correlationid": {
          "type": "string",
          "description": "CorrelationId item"
        },
        "forceDeletion": {
          "type": "boolean",
          "description": "Forced delete resource item"
        }
      },
      "required": [
        "executionParameters",
        "resources"
      ]
    },
    "ExecuteHibernateRequest": {
      "type": "object",
      "description": "The ExecuteHibernateRequest request for executeHibernate operations",
      "properties": {
        "executionParameters": {
          "$ref": "#/definitions/ExecutionParameters",
          "description": "The execution parameters for the request"
        },
        "resources": {
          "$ref": "#/definitions/Resources",
          "description": "The resources for the request"
        },
        "correlationid": {
          "type": "string",
          "description": "CorrelationId item"
        }
      },
      "required": [
        "executionParameters",
        "resources",
        "correlationid"
      ]
    },
    "ExecuteStartRequest": {
      "type": "object",
      "description": "The ExecuteStartRequest request for executeStart operations",
      "properties": {
        "executionParameters": {
          "$ref": "#/definitions/ExecutionParameters",
          "description": "The execution parameters for the request"
        },
        "resources": {
          "$ref": "#/definitions/Resources",
          "description": "The resources for the request"
        },
        "correlationid": {
          "type": "string",
          "description": "CorrelationId item"
        }
      },
      "required": [
        "executionParameters",
        "resources",
        "correlationid"
      ]
    },
    "ExecutionParameters": {
      "type": "object",
      "description": "Extra details needed to run the user's request",
      "properties": {
        "optimizationPreference": {
          "$ref": "#/definitions/OptimizationPreference",
          "description": "Details that could optimize the user's request"
        },
        "retryPolicy": {
          "$ref": "#/definitions/RetryPolicy",
          "description": "Retry policy the user can pass"
        }
      }
    },
    "FungibileProperties": {
      "type": "object",
      "description": "The properties that support fungible create operaions",
      "properties": {
        "zones": {
          "type": "array",
          "description": "A list of Azure zones to possibly create the virtual machines in",
          "items": {
            "type": "string"
          }
        },
        "vmSizesProfile": {
          "type": "array",
          "description": "A list of preferred vm sizes to create and the rank of their preferences",
          "items": {
            "$ref": "#/definitions/VmSizesProfileProperties"
          }
        },
        "osType": {
          "$ref": "#/definitions/OperatingSystemType",
          "description": "The OS type for the vms"
        },
        "priorityProfile": {
          "$ref": "#/definitions/PriorityProfile",
          "description": "The priority profile"
        }
      },
      "required": [
        "osType"
      ]
    },
    "GetOperationErrorsRequest": {
      "type": "object",
      "description": "This is the request to get errors per vm operations",
      "properties": {
        "operationIds": {
          "type": "array",
          "description": "The list of operation ids to query errors of",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "operationIds"
      ]
    },
    "GetOperationErrorsResponse": {
      "type": "object",
      "description": "This is the response from a get operations errors request",
      "properties": {
        "results": {
          "type": "array",
          "description": "An array of operationids and their corresponding errors if any",
          "items": {
            "$ref": "#/definitions/OperationErrorsResult"
          },
          "x-ms-identifiers": [
            "operationId"
          ]
        }
      },
      "required": [
        "results"
      ]
    },
    "GetOperationStatusRequest": {
      "type": "object",
      "description": "This is the request to get operation status using operationids",
      "properties": {
        "operationIds": {
          "type": "array",
          "description": "The list of operation ids to get the status of",
          "items": {
            "type": "string"
          }
        },
        "correlationid": {
          "type": "string",
          "description": "CorrelationId item"
        }
      },
      "required": [
        "operationIds",
        "correlationid"
      ]
    },
    "GetOperationStatusResponse": {
      "type": "object",
      "description": "This is the response from a get operations status request",
      "properties": {
        "results": {
          "type": "array",
          "description": "An array of resource operations based on their operation ids",
          "items": {
            "$ref": "#/definitions/ResourceOperation"
          },
          "x-ms-identifiers": [
            "resourceId"
          ]
        }
      },
      "required": [
        "results"
      ]
    },
    "HibernateResourceOperationResponse": {
      "type": "object",
      "description": "The response from a Hibernate request",
      "properties": {
        "description": {
          "type": "string",
          "description": "The description of the operation response"
        },
        "type": {
          "type": "string",
          "description": "The type of resources used in the Hibernate request eg virtual machines"
        },
        "location": {
          "$ref": "#/definitions/Azure.Core.azureLocation",
          "description": "The location of the Hibernate request eg westus",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "results": {
          "type": "array",
          "description": "The results from the Hibernate request if no errors exist",
          "items": {
            "$ref": "#/definitions/ResourceOperation"
          },
          "x-ms-identifiers": [
            "resourceId"
          ]
        }
      },
      "required": [
        "description",
        "type",
        "location"
      ]
    },
    "OperatingSystemType": {
      "type": "string",
      "description": "The type of operating stystem supported by Azure",
      "enum": [
        "Windows",
        "Linux"
      ],
      "x-ms-enum": {
        "name": "OperatingSystemType",
        "modelAsString": true,
        "values": [
          {
            "name": "Windows",
            "value": "Windows",
            "description": "Windows operating system"
          },
          {
            "name": "Linux",
            "value": "Linux",
            "description": "Linux operating system"
          }
        ]
      }
    },
    "OperationErrorDetails": {
      "type": "object",
      "description": "This defines a list of operation errors associated with a unique operationId",
      "properties": {
        "errorCode": {
          "type": "string",
          "description": "The error code of the operation"
        },
        "errorDetails": {
          "type": "string",
          "description": "The error details of the operation"
        },
        "timestamp": {
          "type": "string",
          "format": "date-time",
          "description": "The timestamp of the error occurence"
        },
        "azureOperationName": {
          "type": "string",
          "description": "The compute operationid of the Start/Deallocate/Hibernate request"
        },
        "crpOperationId": {
          "type": "string",
          "description": "The compute operationid of the Start/Deallocate/Hibernate request"
        }
      },
      "required": [
        "errorCode",
        "errorDetails"
      ]
    },
    "OperationErrorsResult": {
      "type": "object",
      "description": "This is the first level of operation errors from the request when clients get errors per vm operation",
      "properties": {
        "operationId": {
          "type": "string",
          "description": "The operationId identifying a vm operation"
        },
        "creationTime": {
          "type": "string",
          "format": "date-time",
          "description": "The creation time of the error result"
        },
        "activationTime": {
          "type": "string",
          "format": "date-time",
          "description": "The activation time of a vm operation"
        },
        "completedAt": {
          "type": "string",
          "format": "date-time",
          "description": "The completion time of the operation if the operation was completed"
        },
        "operationErrors": {
          "type": "array",
          "description": "A list of errors associated with the operationid",
          "items": {
            "$ref": "#/definitions/OperationErrorDetails"
          },
          "x-ms-identifiers": []
        },
        "requestErrorCode": {
          "type": "string",
          "description": "Request level error code"
        },
        "requestErrorDetails": {
          "type": "string",
          "description": "Request level error details"
        }
      }
    },
    "OperationState": {
      "type": "string",
      "description": "Values that define the states of operations in Scheduled Actions",
      "enum": [
        "Unknown",
        "PendingScheduling",
        "Scheduled",
        "PendingExecution",
        "Executing",
        "Succeeded",
        "Failed",
        "Cancelled",
        "Blocked"
      ],
      "x-ms-enum": {
        "name": "OperationState",
        "modelAsString": true,
        "values": [
          {
            "name": "Unknown",
            "value": "Unknown",
            "description": "The default value for the operation state enum"
          },
          {
            "name": "PendingScheduling",
            "value": "PendingScheduling",
            "description": "Operations that are pending scheduling"
          },
          {
            "name": "Scheduled",
            "value": "Scheduled",
            "description": "Operations that have been scheduled"
          },
          {
            "name": "PendingExecution",
            "value": "PendingExecution",
            "description": "Operations that are waiting to be executed"
          },
          {
            "name": "Executing",
            "value": "Executing",
            "description": "Operations that are in the process of being executed"
          },
          {
            "name": "Succeeded",
            "value": "Succeeded",
            "description": "Operations that suceeded"
          },
          {
            "name": "Failed",
            "value": "Failed",
            "description": "Operations that have failed"
          },
          {
            "name": "Cancelled",
            "value": "Cancelled",
            "description": "Operations that have been Cancelled by the user"
          },
          {
            "name": "Blocked",
            "value": "Blocked",
            "description": "Operations that are blocked"
          }
        ]
      },
      "readOnly": true
    },
    "OptimizationPreference": {
      "type": "string",
      "description": "The preferences customers can select to optimize their requests to ScheduledActions",
      "enum": [
        "Cost",
        "Availability",
        "CostAvailabilityBalanced"
      ],
      "x-ms-enum": {
        "name": "OptimizationPreference",
        "modelAsString": true,
        "values": [
          {
            "name": "Cost",
            "value": "Cost",
            "description": "Optimize while considering cost savings"
          },
          {
            "name": "Availability",
            "value": "Availability",
            "description": "Optimize while considering availability of resources"
          },
          {
            "name": "CostAvailabilityBalanced",
            "value": "CostAvailabilityBalanced",
            "description": "Optimize while considering a balance of cost and availability"
          }
        ]
      }
    },
    "PriorityProfile": {
      "type": "object",
      "description": "The strategy for virtual machine creation in terms of highly available or flexible availability.",
      "properties": {
        "type": {
          "$ref": "#/definitions/PriorityProfileType",
          "description": "The type of priority profile, this could be Regular or Spot"
        },
        "allocationStrategy": {
          "$ref": "#/definitions/AllocationStrategyType",
          "description": "The type of allocation strategy for the selected PriorityProfileType."
        }
      },
      "required": [
        "type",
        "allocationStrategy"
      ]
    },
    "PriorityProfileType": {
      "type": "string",
      "description": "The type of profile to use for prioritizing virtual machine availability. This defines how the virtual machine is billed and managed in the Azure.",
      "enum": [
        "Regular",
        "Spot"
      ],
      "x-ms-enum": {
        "name": "PriorityProfileType",
        "modelAsString": true,
        "values": [
          {
            "name": "Regular",
            "value": "Regular",
            "description": "Offers guaranteed availability."
          },
          {
            "name": "Spot",
            "value": "Spot",
            "description": "Offers flexible availability and is a cheaper option."
          }
        ]
      }
    },
    "ProvisioningState": {
      "type": "string",
      "description": "Provisioning state",
      "enum": [
        "Succeeded",
        "Failed",
        "Canceled",
        "Deleting"
      ],
      "x-ms-enum": {
        "name": "ProvisioningState",
        "modelAsString": true,
        "values": [
          {
            "name": "Succeeded",
            "value": "Succeeded",
            "description": "Resource has been created."
          },
          {
            "name": "Failed",
            "value": "Failed",
            "description": "Resource creation failed."
          },
          {
            "name": "Canceled",
            "value": "Canceled",
            "description": "Resource creation was canceled."
          },
          {
            "name": "Deleting",
            "value": "Deleting",
            "description": "Resource is being deleted."
          }
        ]
      },
      "readOnly": true
    },
    "ResourceOperation": {
      "type": "object",
      "description": "High level response from an operation on a resource",
      "properties": {
        "resourceId": {
          "type": "string",
          "format": "arm-id",
          "description": "Unique identifier for the resource involved in the operation, eg ArmId"
        },
        "errorCode": {
          "type": "string",
          "description": "Resource level error code if it exists"
        },
        "errorDetails": {
          "type": "string",
          "description": "Resource level error details if they exist"
        },
        "operation": {
          "$ref": "#/definitions/ResourceOperationDetails",
          "description": "Details of the operation performed on a resource"
        }
      }
    },
    "ResourceOperationDetails": {
      "type": "object",
      "description": "The details of a response from an operation on a resource",
      "properties": {
        "operationId": {
          "type": "string",
          "description": "Operation identifier for the unique operation"
        },
        "resourceId": {
          "type": "string",
          "format": "arm-id",
          "description": "Unique identifier for the resource involved in the operation, eg ArmId"
        },
        "opType": {
          "type": "string",
          "description": "Type of operation performed on the resources",
          "default": "Unknown",
          "enum": [
            "Unknown",
            "Start",
            "Deallocate",
            "Hibernate"
          ],
          "x-ms-enum": {
            "name": "ResourceOperationType",
            "modelAsString": true,
            "values": [
              {
                "name": "Unknown",
                "value": "Unknown",
                "description": "The default value for this enum type"
              },
              {
                "name": "Start",
                "value": "Start",
                "description": "Start operations on the resources"
              },
              {
                "name": "Deallocate",
                "value": "Deallocate",
                "description": "Deallocate operations on the resources"
              },
              {
                "name": "Hibernate",
                "value": "Hibernate",
                "description": "Hibernate operations on the resources"
              }
            ]
          }
        },
        "subscriptionId": {
          "type": "string",
          "description": "Subscription id attached to the request"
        },
        "deadline": {
          "type": "string",
          "format": "date-time",
          "description": "Deadline for the operation"
        },
        "deadlineType": {
          "type": "string",
          "description": "Type of deadline of the operation",
          "default": "Unknown",
          "enum": [
            "Unknown",
            "InitiateAt",
            "CompleteBy"
          ],
          "x-ms-enum": {
            "name": "DeadlineType",
            "modelAsString": true,
            "values": [
              {
                "name": "Unknown",
                "value": "Unknown",
                "description": "Default value of Unknown."
              },
              {
                "name": "InitiateAt",
                "value": "InitiateAt",
                "description": "Initiate the operation at the given deadline."
              },
              {
                "name": "CompleteBy",
                "value": "CompleteBy",
                "description": "Complete the operation by the given deadline."
              }
            ]
          }
        },
        "state": {
          "type": "string",
          "description": "Current state of the operation",
          "default": "Unknown",
          "enum": [
            "Unknown",
            "PendingScheduling",
            "Scheduled",
            "PendingExecution",
            "Executing",
            "Succeeded",
            "Failed",
            "Cancelled",
            "Blocked"
          ],
          "x-ms-enum": {
            "name": "OperationState",
            "modelAsString": true,
            "values": [
              {
                "name": "Unknown",
                "value": "Unknown",
                "description": "The default value for the operation state enum"
              },
              {
                "name": "PendingScheduling",
                "value": "PendingScheduling",
                "description": "Operations that are pending scheduling"
              },
              {
                "name": "Scheduled",
                "value": "Scheduled",
                "description": "Operations that have been scheduled"
              },
              {
                "name": "PendingExecution",
                "value": "PendingExecution",
                "description": "Operations that are waiting to be executed"
              },
              {
                "name": "Executing",
                "value": "Executing",
                "description": "Operations that are in the process of being executed"
              },
              {
                "name": "Succeeded",
                "value": "Succeeded",
                "description": "Operations that suceeded"
              },
              {
                "name": "Failed",
                "value": "Failed",
                "description": "Operations that have failed"
              },
              {
                "name": "Cancelled",
                "value": "Cancelled",
                "description": "Operations that have been Cancelled by the user"
              },
              {
                "name": "Blocked",
                "value": "Blocked",
                "description": "Operations that are blocked"
              }
            ]
          },
          "readOnly": true
        },
        "timezone": {
          "type": "string",
          "description": "Timezone for the operation"
        },
        "resourceOperationError": {
          "$ref": "#/definitions/ResourceOperationError",
          "description": "Operation level errors if they exist"
        },
        "completedAt": {
          "type": "string",
          "format": "date-time",
          "description": "Time the operation was complete if errors are null"
        },
        "retryPolicy": {
          "$ref": "#/definitions/RetryPolicy",
          "description": "Retry policy the user can pass"
        }
      },
      "required": [
        "operationId"
      ]
    },
    "ResourceOperationError": {
      "type": "object",
      "description": "These describe errors that occur at the resource level",
      "properties": {
        "errorCode": {
          "type": "string",
          "description": "Code for the error eg 404, 500"
        },
        "errorDetails": {
          "type": "string",
          "description": "Detailed message about the error"
        }
      },
      "required": [
        "errorCode",
        "errorDetails"
      ]
    },
    "ResourceOperationType": {
      "type": "string",
      "description": "The kind of operation types that can be performed on resources using ScheduledActions",
      "enum": [
        "Unknown",
        "Start",
        "Deallocate",
        "Hibernate"
      ],
      "x-ms-enum": {
        "name": "ResourceOperationType",
        "modelAsString": true,
        "values": [
          {
            "name": "Unknown",
            "value": "Unknown",
            "description": "The default value for this enum type"
          },
          {
            "name": "Start",
            "value": "Start",
            "description": "Start operations on the resources"
          },
          {
            "name": "Deallocate",
            "value": "Deallocate",
            "description": "Deallocate operations on the resources"
          },
          {
            "name": "Hibernate",
            "value": "Hibernate",
            "description": "Hibernate operations on the resources"
          }
        ]
      }
    },
    "ResourceProvisionPayload": {
      "type": "object",
      "description": "Resource creation data model",
      "properties": {
        "baseProfile": {
          "type": "object",
          "description": "JSON object that contains VM properties that are common across all VMs in this batch (if you want to create 100 VMs in this request, and they all have same vmSize, then include vmSize in baseProfile)",
          "additionalProperties": {}
        },
        "resourceOverrides": {
          "type": "array",
          "description": "JSON array, that contains VM properties that should to be overridden for each VM in the batch (if you want to create 100 VMs, they all need a distinct computerName property, you pass computerNames for each VM in batch in this array), service will merge baseProfile with VM specific overrides and create a merged VMProfile.",
          "items": {
            "type": "object",
            "additionalProperties": {}
          }
        },
        "resourceCount": {
          "type": "integer",
          "format": "int32",
          "description": "Number of VMs to be created"
        },
        "resourcePrefix": {
          "type": "string",
          "description": "if resourceOverrides doesn't contain \"name\", service will create name based of prefix and ResourceCount e.g. resourceprefix-0,resourceprefix-1.."
        },
        "fungibleProperties": {
          "$ref": "#/definitions/FungibileProperties",
          "description": "Properties that support fungible create, when this value is null, Create will proceed with the default non-fungible route."
        }
      },
      "required": [
        "resourceCount"
      ]
    },
    "Resources": {
      "type": "object",
      "description": "The resources needed for the user request",
      "properties": {
        "ids": {
          "type": "array",
          "description": "The resource ids used for the request",
          "items": {
            "type": "string",
            "format": "arm-id",
            "description": "A type definition that refers the id to an Azure Resource Manager resource."
          }
        }
      },
      "required": [
        "ids"
      ]
    },
    "RetryPolicy": {
      "type": "object",
      "description": "The retry policy for the user request",
      "properties": {
        "retryCount": {
          "type": "integer",
          "format": "int32",
          "description": "Retry count for user request"
        },
        "retryWindowInMinutes": {
          "type": "integer",
          "format": "int32",
          "description": "Retry window in minutes for user request"
        }
      }
    },
    "Schedule": {
      "type": "object",
      "description": "The schedule details for the user request",
      "properties": {
        "deadline": {
          "type": "string",
          "format": "date-time",
          "description": "The deadline for the operation"
        },
        "timezone": {
          "type": "string",
          "description": "The timezone for the operation"
        },
        "deadlineType": {
          "type": "string",
          "description": "The deadlinetype of the operation, this can either be InitiateAt or CompleteBy",
          "default": "Unknown",
          "enum": [
            "Unknown",
            "InitiateAt",
            "CompleteBy"
          ],
          "x-ms-enum": {
            "name": "DeadlineType",
            "modelAsString": true,
            "values": [
              {
                "name": "Unknown",
                "value": "Unknown",
                "description": "Default value of Unknown."
              },
              {
                "name": "InitiateAt",
                "value": "InitiateAt",
                "description": "Initiate the operation at the given deadline."
              },
              {
                "name": "CompleteBy",
                "value": "CompleteBy",
                "description": "Complete the operation by the given deadline."
              }
            ]
          }
        }
      },
      "required": [
        "deadlineType"
      ]
    },
    "StartResourceOperationResponse": {
      "type": "object",
      "description": "The response from a start request",
      "properties": {
        "description": {
          "type": "string",
          "description": "The description of the operation response"
        },
        "type": {
          "type": "string",
          "description": "The type of resources used in the start request eg virtual machines"
        },
        "location": {
          "$ref": "#/definitions/Azure.Core.azureLocation",
          "description": "The location of the start request eg westus",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "results": {
          "type": "array",
          "description": "The results from the start request if no errors exist",
          "items": {
            "$ref": "#/definitions/ResourceOperation"
          },
          "x-ms-identifiers": [
            "resourceId"
          ]
        }
      },
      "required": [
        "description",
        "type",
        "location"
      ]
    },
    "SubmitDeallocateRequest": {
      "type": "object",
      "description": "The deallocate request for resources",
      "properties": {
        "schedule": {
          "$ref": "#/definitions/Schedule",
          "description": "The schedule for the request"
        },
        "executionParameters": {
          "$ref": "#/definitions/ExecutionParameters",
          "description": "The execution parameters for the request"
        },
        "resources": {
          "$ref": "#/definitions/Resources",
          "description": "The resources for the request"
        },
        "correlationid": {
          "type": "string",
          "description": "CorrelationId item"
        }
      },
      "required": [
        "schedule",
        "executionParameters",
        "resources",
        "correlationid"
      ]
    },
    "SubmitHibernateRequest": {
      "type": "object",
      "description": "This is the request for hibernate",
      "properties": {
        "schedule": {
          "$ref": "#/definitions/Schedule",
          "description": "The schedule for the request"
        },
        "executionParameters": {
          "$ref": "#/definitions/ExecutionParameters",
          "description": "The execution parameters for the request"
        },
        "resources": {
          "$ref": "#/definitions/Resources",
          "description": "The resources for the request"
        },
        "correlationid": {
          "type": "string",
          "description": "CorrelationId item"
        }
      },
      "required": [
        "schedule",
        "executionParameters",
        "resources",
        "correlationid"
      ]
    },
    "SubmitStartRequest": {
      "type": "object",
      "description": "This is the request for start",
      "properties": {
        "schedule": {
          "$ref": "#/definitions/Schedule",
          "description": "The schedule for the request"
        },
        "executionParameters": {
          "$ref": "#/definitions/ExecutionParameters",
          "description": "The execution parameters for the request"
        },
        "resources": {
          "$ref": "#/definitions/Resources",
          "description": "The resources for the request"
        },
        "correlationid": {
          "type": "string",
          "description": "CorrelationId item"
        }
      },
      "required": [
        "schedule",
        "executionParameters",
        "resources",
        "correlationid"
      ]
    },
    "VmSizePreferenceRank": {
      "type": "string",
      "description": "The ranking values for VM size preferences, this is applied when AllocationStrategyType is set to Prioritized",
      "enum": [
        "0",
        "1",
        "2",
        "3",
        "4",
        "5"
      ],
      "x-ms-enum": {
        "name": "VmSizePreferenceRank",
        "modelAsString": true,
        "values": [
          {
            "name": "Rank0",
            "value": "0",
            "description": "Rank0: Most preferred"
          },
          {
            "name": "Rank1",
            "value": "1",
            "description": "Rank0: Most preferred"
          },
          {
            "name": "Rank2",
            "value": "2",
            "description": "Rank0: Most preferred"
          },
          {
            "name": "Rank3",
            "value": "3",
            "description": "Rank0: Most preferred"
          },
          {
            "name": "Rank4",
            "value": "4",
            "description": "Rank0: Most preferred"
          },
          {
            "name": "Rank5",
            "value": "5",
            "description": "Rank0: Most preferred"
          }
        ]
      }
    },
    "VmSizesProfileProperties": {
      "type": "object",
      "description": "Virtual machine sizes and their respective ranks for fungible create operations.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The size of the virtual machine"
        },
        "rank": {
          "$ref": "#/definitions/VmSizePreferenceRank",
          "description": "Priority order for the virtual machine size selected, the values go from Rank0-Rank5 in ascending order of preference."
        }
      },
      "required": [
        "name",
        "rank"
      ]
    }
  },
  "parameters": {}
}
