{
    "swagger": "2.0",
    "info": {
      "title": "Defender EASM",
      "version": "2023-03-01-preview",
      "description": "Defender EASM discovers and maps your digital attack surface to provide an \"outside-in\" perspective using probes to discover assets. The assets are provided with detailed metadata associated, including vulnerabilities, configurations and web components, allowing customers to view and prioritize external risk. The EASM REST API enables you to develop clients that integrate with your application.",
      "x-typespec-generated": [
        {
          "emitter": "@azure-tools/typespec-autorest"
        }
      ]
    },
    "schemes": [
      "https"
    ],
    "x-ms-parameterized-host": {
      "hostTemplate": "{endpoint}/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/workspaces/{workspaceName}",
      "useSchemePrefix": false,
      "parameters": [
        {
          "name": "endpoint",
          "in": "path",
          "required": true,
          "description": "The endpoint hosting the requested resource. For example, https://{region}.easm.defender.microsoft.com",
          "type": "string"
        },
        {
          "name": "subscriptionId",
          "in": "path",
          "required": true,
          "description": "The ID of the target subscription.",
          "type": "string"
        },
        {
          "name": "resourceGroupName",
          "in": "path",
          "required": true,
          "description": "The name of the Resource Group.",
          "type": "string"
        },
        {
          "name": "workspaceName",
          "in": "path",
          "required": true,
          "description": "The name of the Workspace.",
          "type": "string"
        }
      ]
    },
    "produces": [
      "application/json"
    ],
    "consumes": [
      "application/json"
    ],
    "security": [
      {
        "OAuth2Auth": [
          "https://easm.defender.microsoft.com/.default"
        ]
      }
    ],
    "securityDefinitions": {
      "OAuth2Auth": {
        "type": "oauth2",
        "flow": "implicit",
        "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
        "scopes": {
          "https://easm.defender.microsoft.com/.default": ""
        }
      }
    },
    "tags": [
      {
        "name": "Assets"
      },
      {
        "name": "Data Connections"
      },
      {
        "name": "Discovery Groups"
      },
      {
        "name": "Discovery Templates"
      },
      {
        "name": "Reports"
      },
      {
        "name": "Saved Filters"
      },
      {
        "name": "Tasks"
      }
    ],
    "paths": {
      "/assets": {
        "get": {
          "operationId": "Assets_List",
          "tags": [
            "Assets"
          ],
          "description": "Retrieve a list of assets for the provided search parameters.",
          "parameters": [
            {
              "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
            },
            {
              "$ref": "#/parameters/FilterParameter"
            },
            {
              "$ref": "#/parameters/OrderByParameter"
            },
            {
              "$ref": "#/parameters/SkipParameter"
            },
            {
              "$ref": "#/parameters/MaxPageSizeParameter"
            },
            {
              "$ref": "#/parameters/MarkParameter"
            }
          ],
          "responses": {
            "200": {
              "description": "The request has succeeded.",
              "schema": {
                "$ref": "#/definitions/AssetPageResponse"
              }
            },
            "default": {
              "description": "An unexpected error response.",
              "schema": {
                "$ref": "#/definitions/ErrorResponse"
              },
              "headers": {
                "x-ms-error-code": {
                  "type": "string"
                }
              }
            }
          }
        },
        "post": {
          "operationId": "Assets_Update",
          "tags": [
            "Assets"
          ],
          "description": "Update labels on assets matching the provided filter.",
          "parameters": [
            {
              "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
            },
            {
              "$ref": "#/parameters/RequiredFilterParameter"
            },
            {
              "name": "body",
              "in": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/AssetUpdateRequest"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "The request has succeeded.",
              "schema": {
                "$ref": "#/definitions/TaskResponse"
              }
            },
            "default": {
              "description": "An unexpected error response.",
              "schema": {
                "$ref": "#/definitions/ErrorResponse"
              },
              "headers": {
                "x-ms-error-code": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "/assets/{assetId}": {
        "get": {
          "operationId": "Assets_Get",
          "tags": [
            "Assets"
          ],
          "description": "Retrieve an asset by assetId.",
          "parameters": [
            {
              "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
            },
            {
              "$ref": "#/parameters/AssetIdParameter"
            }
          ],
          "responses": {
            "200": {
              "description": "The request has succeeded.",
              "schema": {
                "$ref": "#/definitions/AssetResponse"
              }
            },
            "default": {
              "description": "An unexpected error response.",
              "schema": {
                "$ref": "#/definitions/ErrorResponse"
              },
              "headers": {
                "x-ms-error-code": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "/dataConnections": {
        "get": {
          "operationId": "DataConnections_List",
          "tags": [
            "Data Connections"
          ],
          "description": "Retrieve a list of data connections.",
          "parameters": [
            {
              "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
            },
            {
              "$ref": "#/parameters/SkipParameter"
            },
            {
              "$ref": "#/parameters/MarkParameter"
            }
          ],
          "responses": {
            "200": {
              "description": "The request has succeeded.",
              "schema": {
                "$ref": "#/definitions/DataConnectionPageResponse"
              }
            },
            "default": {
              "description": "An unexpected error response.",
              "schema": {
                "$ref": "#/definitions/ErrorResponse"
              },
              "headers": {
                "x-ms-error-code": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "/dataConnections/{dataConnectionName}": {
        "get": {
          "operationId": "DataConnections_Get",
          "tags": [
            "Data Connections"
          ],
          "description": "Retrieve a data connection with a given dataConnectionName.",
          "parameters": [
            {
              "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
            },
            {
              "$ref": "#/parameters/DataConnectionNameParameter"
            }
          ],
          "responses": {
            "200": {
              "description": "The request has succeeded.",
              "schema": {
                "$ref": "#/definitions/DataConnectionResponse"
              }
            },
            "default": {
              "description": "An unexpected error response.",
              "schema": {
                "$ref": "#/definitions/ErrorResponse"
              },
              "headers": {
                "x-ms-error-code": {
                  "type": "string"
                }
              }
            }
          }
        },
        "put": {
          "operationId": "DataConnections_Put",
          "tags": [
            "Data Connections"
          ],
          "description": "Create or update a data connection with a given dataConnectionName.",
          "parameters": [
            {
              "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
            },
            {
              "$ref": "#/parameters/DataConnectionNameParameter"
            },
            {
              "name": "body",
              "in": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/DataConnectionRequest"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "The request has succeeded.",
              "schema": {
                "$ref": "#/definitions/DataConnectionResponse"
              }
            },
            "default": {
              "description": "An unexpected error response.",
              "schema": {
                "$ref": "#/definitions/ErrorResponse"
              },
              "headers": {
                "x-ms-error-code": {
                  "type": "string"
                }
              }
            }
          }
        },
        "delete": {
          "operationId": "DataConnections_Delete",
          "tags": [
            "Data Connections"
          ],
          "description": "Delete a data connection with a given dataConnectionName.",
          "parameters": [
            {
              "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
            },
            {
              "$ref": "#/parameters/DataConnectionNameParameter"
            }
          ],
          "responses": {
            "204": {
              "description": "There is no content to send for this request, but the headers may be useful."
            },
            "default": {
              "description": "An unexpected error response.",
              "schema": {
                "$ref": "#/definitions/ErrorResponse"
              },
              "headers": {
                "x-ms-error-code": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "/dataConnections:validate": {
        "post": {
          "operationId": "DataConnections_Validate",
          "tags": [
            "Data Connections"
          ],
          "description": "Validate a data connection with a given dataConnection name.",
          "parameters": [
            {
              "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
            },
            {
              "$ref": "#/parameters/SkipParameter"
            },
            {
              "$ref": "#/parameters/MarkParameter"
            },
            {
              "name": "body",
              "in": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/DataConnectionRequest"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "The request has succeeded.",
              "schema": {
                "$ref": "#/definitions/DataConnectionResponse"
              }
            },
            "default": {
              "description": "An unexpected error response.",
              "schema": {
                "$ref": "#/definitions/ErrorResponse"
              },
              "headers": {
                "x-ms-error-code": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "/discoGroups": {
        "get": {
          "operationId": "DiscoveryGroups_List",
          "tags": [
            "Discovery Groups"
          ],
          "description": "Retrieve a list of discovery group for the provided search parameters.",
          "parameters": [
            {
              "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
            },
            {
              "$ref": "#/parameters/FilterParameter"
            },
            {
              "$ref": "#/parameters/SkipParameter"
            },
            {
              "$ref": "#/parameters/MaxPageSizeParameter"
            }
          ],
          "responses": {
            "200": {
              "description": "The request has succeeded.",
              "schema": {
                "$ref": "#/definitions/DiscoGroupPageResponse"
              }
            },
            "default": {
              "description": "An unexpected error response.",
              "schema": {
                "$ref": "#/definitions/ErrorResponse"
              },
              "headers": {
                "x-ms-error-code": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "/discoGroups/{groupName}": {
        "get": {
          "operationId": "DiscoveryGroups_Get",
          "tags": [
            "Discovery Groups"
          ],
          "description": "Retrieve a discovery group with a given groupName.",
          "parameters": [
            {
              "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
            },
            {
              "$ref": "#/parameters/DiscoGroupNameParameter"
            }
          ],
          "responses": {
            "200": {
              "description": "The request has succeeded.",
              "schema": {
                "$ref": "#/definitions/DiscoGroupResponse"
              }
            },
            "default": {
              "description": "An unexpected error response.",
              "schema": {
                "$ref": "#/definitions/ErrorResponse"
              },
              "headers": {
                "x-ms-error-code": {
                  "type": "string"
                }
              }
            }
          }
        },
        "put": {
          "operationId": "DiscoveryGroups_Put",
          "tags": [
            "Discovery Groups"
          ],
          "description": "Create a discovery group with a given groupName.",
          "parameters": [
            {
              "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
            },
            {
              "$ref": "#/parameters/DiscoGroupNameParameter"
            },
            {
              "name": "body",
              "in": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/DiscoGroupRequest"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "The request has succeeded.",
              "schema": {
                "$ref": "#/definitions/DiscoGroupResponse"
              }
            },
            "default": {
              "description": "An unexpected error response.",
              "schema": {
                "$ref": "#/definitions/ErrorResponse"
              },
              "headers": {
                "x-ms-error-code": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "/discoGroups/{groupName}:run": {
        "post": {
          "operationId": "DiscoveryGroups_Run",
          "tags": [
            "Discovery Groups"
          ],
          "description": "Run a discovery group with a given groupName.",
          "parameters": [
            {
              "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
            },
            {
              "$ref": "#/parameters/DiscoGroupNameParameter"
            }
          ],
          "responses": {
            "204": {
              "description": "There is no content to send for this request, but the headers may be useful."
            },
            "default": {
              "description": "An unexpected error response.",
              "schema": {
                "$ref": "#/definitions/ErrorResponse"
              },
              "headers": {
                "x-ms-error-code": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "/discoGroups/{groupName}/runs": {
        "get": {
          "operationId": "DiscoveryGroups_ListRuns",
          "tags": [
            "Discovery Groups"
          ],
          "description": "Retrieve a collection of discovery run results for a discovery group with a given groupName.",
          "parameters": [
            {
              "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
            },
            {
              "$ref": "#/parameters/DiscoGroupNameParameter"
            },
            {
              "$ref": "#/parameters/FilterParameter"
            },
            {
              "$ref": "#/parameters/SkipParameter"
            },
            {
              "$ref": "#/parameters/MaxPageSizeParameter"
            }
          ],
          "responses": {
            "200": {
              "description": "The request has succeeded.",
              "schema": {
                "$ref": "#/definitions/DiscoRunPageResponse"
              }
            },
            "default": {
              "description": "An unexpected error response.",
              "schema": {
                "$ref": "#/definitions/ErrorResponse"
              },
              "headers": {
                "x-ms-error-code": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "/discoGroups:validate/{groupName}": {
        "post": {
          "operationId": "DiscoveryGroups_Validate",
          "tags": [
            "Discovery Groups"
          ],
          "description": "Validate a discovery group with a given groupName.",
          "parameters": [
            {
              "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
            },
            {
              "$ref": "#/parameters/DiscoGroupNameParameter"
            },
            {
              "name": "body",
              "in": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/DiscoGroupRequest"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "The request has succeeded.",
              "schema": {
                "$ref": "#/definitions/ValidateResponse"
              }
            },
            "default": {
              "description": "An unexpected error response.",
              "schema": {
                "$ref": "#/definitions/ErrorResponse"
              },
              "headers": {
                "x-ms-error-code": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "/discoTemplates": {
        "get": {
          "operationId": "DiscoveryTemplates_List",
          "tags": [
            "Discovery Templates"
          ],
          "description": "Retrieve a list of disco templates for the provided search parameters.",
          "parameters": [
            {
              "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
            },
            {
              "$ref": "#/parameters/FilterParameter"
            },
            {
              "$ref": "#/parameters/SkipParameter"
            },
            {
              "$ref": "#/parameters/MaxPageSizeParameter"
            }
          ],
          "responses": {
            "200": {
              "description": "The request has succeeded.",
              "schema": {
                "$ref": "#/definitions/DiscoTemplatePageResponse"
              }
            },
            "default": {
              "description": "An unexpected error response.",
              "schema": {
                "$ref": "#/definitions/ErrorResponse"
              },
              "headers": {
                "x-ms-error-code": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "/discoTemplates/{templateId}": {
        "get": {
          "operationId": "DiscoveryTemplates_Get",
          "tags": [
            "Discovery Templates"
          ],
          "description": "Retrieve a disco template with a given templateId.",
          "parameters": [
            {
              "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
            },
            {
              "$ref": "#/parameters/DiscoTemplateIdParameter"
            }
          ],
          "responses": {
            "200": {
              "description": "The request has succeeded.",
              "schema": {
                "$ref": "#/definitions/DiscoTemplateResponse"
              }
            },
            "default": {
              "description": "An unexpected error response.",
              "schema": {
                "$ref": "#/definitions/ErrorResponse"
              },
              "headers": {
                "x-ms-error-code": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "/reports/assets:getBillable": {
        "post": {
          "operationId": "Reports_Billable",
          "tags": [
            "Reports"
          ],
          "description": "Get billable assets summary for the workspace.",
          "parameters": [
            {
              "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
            }
          ],
          "responses": {
            "200": {
              "description": "The request has succeeded.",
              "schema": {
                "$ref": "#/definitions/ReportBillableAssetSummaryResponse"
              }
            },
            "default": {
              "description": "An unexpected error response.",
              "schema": {
                "$ref": "#/definitions/ErrorResponse"
              },
              "headers": {
                "x-ms-error-code": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "/reports/assets:getSnapshot": {
        "post": {
          "operationId": "Reports_Snapshot",
          "tags": [
            "Reports"
          ],
          "description": "Get the most recent snapshot of asset summary values for the snapshot request.",
          "parameters": [
            {
              "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
            },
            {
              "name": "body",
              "in": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/ReportAssetSnapshotRequest"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "The request has succeeded.",
              "schema": {
                "$ref": "#/definitions/ReportAssetSnapshotResponse"
              }
            },
            "default": {
              "description": "An unexpected error response.",
              "schema": {
                "$ref": "#/definitions/ErrorResponse"
              },
              "headers": {
                "x-ms-error-code": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "/reports/assets:getSummary": {
        "post": {
          "operationId": "Reports_Summary",
          "tags": [
            "Reports"
          ],
          "description": "Get asset summary details for the summary request.",
          "parameters": [
            {
              "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
            },
            {
              "name": "body",
              "in": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/ReportAssetSummaryRequest"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "The request has succeeded.",
              "schema": {
                "$ref": "#/definitions/ReportAssetSummaryResponse"
              }
            },
            "default": {
              "description": "An unexpected error response.",
              "schema": {
                "$ref": "#/definitions/ErrorResponse"
              },
              "headers": {
                "x-ms-error-code": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "/savedFilters": {
        "get": {
          "operationId": "SavedFilters_List",
          "tags": [
            "Saved Filters"
          ],
          "description": "Retrieve a list of saved filters for the provided search parameters.",
          "parameters": [
            {
              "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
            },
            {
              "$ref": "#/parameters/FilterParameter"
            },
            {
              "$ref": "#/parameters/SkipParameter"
            },
            {
              "$ref": "#/parameters/MaxPageSizeParameter"
            }
          ],
          "responses": {
            "200": {
              "description": "The request has succeeded.",
              "schema": {
                "$ref": "#/definitions/SavedFilterPageResponse"
              }
            },
            "default": {
              "description": "An unexpected error response.",
              "schema": {
                "$ref": "#/definitions/ErrorResponse"
              },
              "headers": {
                "x-ms-error-code": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "/savedFilters/{filterName}": {
        "get": {
          "operationId": "SavedFilters_Get",
          "tags": [
            "Saved Filters"
          ],
          "description": "Retrieve a saved filter by filterName.",
          "parameters": [
            {
              "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
            },
            {
              "$ref": "#/parameters/SavedFilterNameParameter"
            }
          ],
          "responses": {
            "200": {
              "description": "The request has succeeded.",
              "schema": {
                "$ref": "#/definitions/SavedFilterResponse"
              }
            },
            "default": {
              "description": "An unexpected error response.",
              "schema": {
                "$ref": "#/definitions/ErrorResponse"
              },
              "headers": {
                "x-ms-error-code": {
                  "type": "string"
                }
              }
            }
          }
        },
        "put": {
          "operationId": "SavedFilters_Put",
          "tags": [
            "Saved Filters"
          ],
          "description": "Create or update a saved filter with a given filterName.",
          "parameters": [
            {
              "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
            },
            {
              "$ref": "#/parameters/SavedFilterNameParameter"
            },
            {
              "name": "body",
              "in": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/SavedFilterRequest"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "The request has succeeded.",
              "schema": {
                "$ref": "#/definitions/SavedFilterResponse"
              }
            },
            "default": {
              "description": "An unexpected error response.",
              "schema": {
                "$ref": "#/definitions/ErrorResponse"
              },
              "headers": {
                "x-ms-error-code": {
                  "type": "string"
                }
              }
            }
          }
        },
        "delete": {
          "operationId": "SavedFilters_Delete",
          "tags": [
            "Saved Filters"
          ],
          "description": "Delete a saved filter with a given filterName.",
          "parameters": [
            {
              "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
            },
            {
              "$ref": "#/parameters/SavedFilterNameParameter"
            }
          ],
          "responses": {
            "204": {
              "description": "There is no content to send for this request, but the headers may be useful."
            },
            "default": {
              "description": "An unexpected error response.",
              "schema": {
                "$ref": "#/definitions/ErrorResponse"
              },
              "headers": {
                "x-ms-error-code": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "/tasks": {
        "get": {
          "operationId": "Tasks_List",
          "tags": [
            "Tasks"
          ],
          "description": "Retrieve a list of tasks for the provided search parameters.",
          "parameters": [
            {
              "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
            },
            {
              "$ref": "#/parameters/FilterParameter"
            },
            {
              "$ref": "#/parameters/OrderByParameter"
            },
            {
              "$ref": "#/parameters/SkipParameter"
            },
            {
              "$ref": "#/parameters/MaxPageSizeParameter"
            }
          ],
          "responses": {
            "200": {
              "description": "The request has succeeded.",
              "schema": {
                "$ref": "#/definitions/TaskPageResponse"
              }
            },
            "default": {
              "description": "An unexpected error response.",
              "schema": {
                "$ref": "#/definitions/ErrorResponse"
              },
              "headers": {
                "x-ms-error-code": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "/tasks/{taskId}": {
        "get": {
          "operationId": "Tasks_Get",
          "tags": [
            "Tasks"
          ],
          "description": "Retrieve a task by taskId.",
          "parameters": [
            {
              "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
            },
            {
              "$ref": "#/parameters/TaskIdParameter"
            }
          ],
          "responses": {
            "200": {
              "description": "The request has succeeded.",
              "schema": {
                "$ref": "#/definitions/TaskResponse"
              }
            },
            "default": {
              "description": "An unexpected error response.",
              "schema": {
                "$ref": "#/definitions/ErrorResponse"
              },
              "headers": {
                "x-ms-error-code": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "/tasks/{taskId}:cancel": {
        "post": {
          "operationId": "Tasks_Cancel",
          "tags": [
            "Tasks"
          ],
          "description": "Cancel a task by taskId.",
          "parameters": [
            {
              "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
            },
            {
              "$ref": "#/parameters/TaskIdParameter"
            }
          ],
          "responses": {
            "200": {
              "description": "The request has succeeded.",
              "schema": {
                "$ref": "#/definitions/TaskResponse"
              }
            },
            "default": {
              "description": "An unexpected error response.",
              "schema": {
                "$ref": "#/definitions/ErrorResponse"
              },
              "headers": {
                "x-ms-error-code": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "definitions": {
      "AlexaInfo": {
        "type": "object",
        "description": "AlexaInfo",
        "properties": {
          "alexaRank": {
            "type": "integer",
            "format": "int64"
          },
          "category": {
            "type": "string"
          },
          "firstSeen": {
            "type": "string",
            "format": "date-time"
          },
          "lastSeen": {
            "type": "string",
            "format": "date-time"
          },
          "count": {
            "type": "integer",
            "format": "int64"
          },
          "recent": {
            "type": "boolean"
          }
        }
      },
      "ApiVersionParameter": {
        "type": "object",
        "description": "ApiVersionParameter",
        "properties": {
          "apiversion": {
            "type": "string"
          }
        },
        "required": [
          "apiversion"
        ]
      },
      "AsAsset": {
        "type": "object",
        "description": "AsAsset",
        "properties": {
          "asn": {
            "type": "integer",
            "format": "int64"
          },
          "asNames": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/ObservedString"
            },
            "x-ms-identifiers": []
          },
          "orgNames": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/ObservedString"
            },
            "x-ms-identifiers": []
          },
          "orgIds": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/ObservedString"
            },
            "x-ms-identifiers": []
          },
          "countries": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/ObservedString"
            },
            "x-ms-identifiers": []
          },
          "registries": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/ObservedString"
            },
            "x-ms-identifiers": []
          },
          "sources": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/Source"
            },
            "x-ms-identifiers": []
          },
          "firstSeen": {
            "type": "string",
            "format": "date-time"
          },
          "lastSeen": {
            "type": "string",
            "format": "date-time"
          },
          "count": {
            "type": "integer",
            "format": "int64"
          },
          "registrarCreatedAt": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/ObservedLong"
            },
            "x-ms-identifiers": []
          },
          "registrarUpdatedAt": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/ObservedLong"
            },
            "x-ms-identifiers": []
          },
          "registrantContacts": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/ObservedString"
            },
            "x-ms-identifiers": []
          },
          "adminContacts": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/ObservedString"
            },
            "x-ms-identifiers": []
          },
          "technicalContacts": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/ObservedString"
            },
            "x-ms-identifiers": []
          },
          "registrarNames": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/ObservedString"
            },
            "x-ms-identifiers": []
          },
          "registrantNames": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/ObservedString"
            },
            "x-ms-identifiers": []
          },
          "adminNames": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/ObservedString"
            },
            "x-ms-identifiers": []
          },
          "technicalNames": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/ObservedString"
            },
            "x-ms-identifiers": []
          },
          "adminOrgs": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/ObservedString"
            },
            "x-ms-identifiers": []
          },
          "technicalOrgs": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/ObservedString"
            },
            "x-ms-identifiers": []
          },
          "registrantPhones": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/ObservedString"
            },
            "x-ms-identifiers": []
          },
          "adminPhones": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/ObservedString"
            },
            "x-ms-identifiers": []
          },
          "technicalPhones": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/ObservedString"
            },
            "x-ms-identifiers": []
          },
          "detailedFromWhoisAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "allOf": [
          {
            "$ref": "#/definitions/InventoryAsset"
          }
        ]
      },
      "AsAssetResponse": {
        "type": "object",
        "properties": {
          "asset": {
            "$ref": "#/definitions/AsAsset"
          }
        },
        "required": [
          "asset"
        ],
        "allOf": [
          {
            "$ref": "#/definitions/AssetResponse"
          }
        ],
        "x-ms-discriminator-value": "as"
      },
      "AsAssetResponseItem": {
        "type": "object",
        "properties": {
          "asset": {
            "$ref": "#/definitions/AsAsset"
          }
        },
        "required": [
          "asset"
        ],
        "allOf": [
          {
            "$ref": "#/definitions/AssetResponseItem"
          }
        ],
        "x-ms-discriminator-value": "as"
      },
      "AssetKind": {
        "type": "string",
        "enum": [
          "as",
          "contact",
          "domain",
          "host",
          "ipAddress",
          "ipBlock",
          "page",
          "sslCert"
        ],
        "x-ms-enum": {
          "name": "AssetKind",
          "modelAsString": true
        }
      },
      "AssetPageResponse": {
        "type": "object",
        "description": "AssetPageResponse",
        "properties": {
          "totalElements": {
            "type": "integer",
            "format": "int64",
            "description": "The total number of items available in the full result set."
          },
          "mark": {
            "type": "string",
            "description": "The cursor mark to be used on the next request.  Not set if using paging."
          },
          "nextLink": {
            "type": "string",
            "description": "The link to access the next page of results.  Not set if at the end of the result set."
          },
          "value": {
            "type": "array",
            "description": "The items in the current page of results.",
            "items": {
              "$ref": "#/definitions/AssetResponseItem"
            }
          }
        }
      },
      "AssetResponse": {
        "type": "object",
        "description": "AssetResponse",
        "properties": {
          "kind": {
            "type": "string",
            "description": "Discriminator property for AssetResponse."
          },
          "id": {
            "type": "string",
            "description": "The system generated unique id for the resource."
          },
          "name": {
            "type": "string",
            "description": "The caller provided unique name for the resource."
          },
          "displayName": {
            "type": "string",
            "description": "The name that can be used for display purposes."
          },
          "uuid": {
            "$ref": "#/definitions/uuid",
            "description": "Global UUID for the asset."
          },
          "createdDate": {
            "type": "string",
            "format": "date-time",
            "description": "The date this asset was first added to this workspace."
          },
          "updatedDate": {
            "type": "string",
            "format": "date-time",
            "description": "The date this asset was last updated for this workspace."
          },
          "state": {
            "$ref": "#/definitions/AssetState"
          },
          "externalId": {
            "type": "string",
            "description": "An optional customer provided identifier for this asset."
          },
          "labels": {
            "type": "array",
            "description": "Customer labels assigned to this asset.",
            "items": {
              "type": "string"
            }
          },
          "wildcard": {
            "type": "boolean",
            "description": "An indicator of whether this asset represents a wildcard rollup of assets on this domain."
          },
          "discoGroupName": {
            "type": "string",
            "description": "The name of the DiscoveryGroup that brought added this asset to the workspace."
          },
          "auditTrail": {
            "type": "array",
            "description": "The history of how this asset was pulled into the workspace through the discovery process.",
            "items": {
              "$ref": "#/definitions/AuditTrailItem"
            }
          },
          "reason": {
            "type": "string"
          }
        },
        "discriminator": "kind",
        "required": [
          "kind"
        ]
      },
      "AssetResponseItem": {
        "type": "object",
        "description": "AssetResponse",
        "properties": {
          "kind": {
            "type": "string",
            "description": "Discriminator property for AssetResponse."
          },
          "statusCode": {
            "type": "number",
            "enum": [
              200
            ]
          },
          "id": {
            "type": "string",
            "description": "The system generated unique id for the resource."
          },
          "name": {
            "type": "string",
            "description": "The caller provided unique name for the resource."
          },
          "displayName": {
            "type": "string",
            "description": "The name that can be used for display purposes."
          },
          "uuid": {
            "$ref": "#/definitions/uuid",
            "description": "Global UUID for the asset."
          },
          "createdDate": {
            "type": "string",
            "format": "date-time",
            "description": "The date this asset was first added to this workspace."
          },
          "updatedDate": {
            "type": "string",
            "format": "date-time",
            "description": "The date this asset was last updated for this workspace."
          },
          "state": {
            "$ref": "#/definitions/AssetState"
          },
          "externalId": {
            "type": "string",
            "description": "An optional customer provided identifier for this asset."
          },
          "labels": {
            "type": "array",
            "description": "Customer labels assigned to this asset.",
            "items": {
              "type": "string"
            }
          },
          "wildcard": {
            "type": "boolean",
            "description": "An indicator of whether this asset represents a wildcard rollup of assets on this domain."
          },
          "discoGroupName": {
            "type": "string",
            "description": "The name of the DiscoveryGroup that brought added this asset to the workspace."
          },
          "auditTrail": {
            "type": "array",
            "description": "The history of how this asset was pulled into the workspace through the discovery process.",
            "items": {
              "$ref": "#/definitions/AuditTrailItem"
            }
          },
          "reason": {
            "type": "string"
          }
        },
        "discriminator": "kind",
        "required": [
          "kind",
          "statusCode"
        ]
      },
      "AssetSecurityPolicy": {
        "type": "object",
        "description": "AssetSecurityPolicy",
        "properties": {
          "policyName": {
            "type": "string"
          },
          "isAffected": {
            "type": "boolean"
          },
          "description": {
            "type": "string"
          },
          "firstSeen": {
            "type": "string",
            "format": "date-time"
          },
          "lastSeen": {
            "type": "string",
            "format": "date-time"
          },
          "count": {
            "type": "integer",
            "format": "int64"
          },
          "recent": {
            "type": "boolean"
          },
          "sources": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/Source"
            },
            "x-ms-identifiers": []
          }
        }
      },
      "AssetState": {
        "type": "string",
        "enum": [
          "candidate",
          "confirmed",
          "dismissed",
          "candidateInvestigate",
          "associatedPartner",
          "associatedThirdparty",
          "archived"
        ],
        "x-ms-enum": {
          "name": "AssetState",
          "modelAsString": true
        }
      },
      "AssetSummaryResponse": {
        "type": "object",
        "description": "AssetSummaryResponse",
        "properties": {
          "displayName": {
            "type": "string",
            "description": "The name of the summary response.  Depending on the request time this will either be the asset filter, risk category, or risk metric."
          },
          "description": {
            "type": "string",
            "description": "The description of the summary response.  Filters don't have a description."
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "description": "The last time risk categories or risk metrics were captured. Set to the current time for asset filter requests, which always pull the live asset data."
          },
          "metricCategory": {
            "type": "string",
            "description": "If the request is for a metric category, this will contain the requested unique category name."
          },
          "metric": {
            "type": "string",
            "description": "If the request is for a metric, this will contain the requested unique metric name."
          },
          "filter": {
            "type": "string",
            "description": "If the request is for an asset filter, this will contain the corresponding filter."
          },
          "labelName": {
            "type": "string",
            "description": "An optional label used to filter requests results."
          },
          "count": {
            "type": "integer",
            "format": "int64",
            "description": "The count of assets matching the request parameters."
          },
          "link": {
            "type": "string",
            "description": "The link to the corresponding asset details."
          },
          "children": {
            "type": "array",
            "description": "The corresponding child entities.  For metric categories this will contain metrics.  For filters with groupBy and segmentBy this will contain facets.",
            "items": {
              "$ref": "#/definitions/AssetSummaryResponse"
            },
            "x-ms-identifiers": []
          }
        }
      },
      "AssetUpdateRequest": {
        "type": "object",
        "description": "AssetUpdateRequest",
        "properties": {
          "state": {
            "$ref": "#/definitions/AssetUpdateState",
            "description": "The state to update the asset to."
          },
          "externalId": {
            "type": "string",
            "description": "A string which can be used to identify the asset in external systems."
          },
          "labels": {
            "type": "object",
            "description": "Any Labels to update the asset with.",
            "properties": {}
          },
          "transfers": {
            "$ref": "#/definitions/AssetUpdateTransfers",
            "description": "A list of asset types to cascade the updates to."
          }
        }
      },
      "AssetUpdateState": {
        "type": "string",
        "enum": [
          "candidate",
          "confirmed",
          "dismissed",
          "candidateInvestigate",
          "associatedPartner",
          "associatedThirdparty"
        ],
        "x-ms-enum": {
          "name": "AssetUpdateState",
          "modelAsString": true
        }
      },
      "AssetUpdateTransfers": {
        "type": "string",
        "enum": [
          "as",
          "contact",
          "domain",
          "host",
          "ipAddress",
          "ipBlock",
          "page",
          "sslCert"
        ],
        "x-ms-enum": {
          "name": "AssetUpdateTransfers",
          "modelAsString": true
        }
      },
      "Attribute": {
        "type": "object",
        "description": "Attribute",
        "properties": {
          "attributeType": {
            "type": "string"
          },
          "attributeValue": {
            "type": "string"
          },
          "sources": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/Source"
            },
            "x-ms-identifiers": []
          },
          "firstSeen": {
            "type": "string",
            "format": "date-time"
          },
          "lastSeen": {
            "type": "string",
            "format": "date-time"
          },
          "count": {
            "type": "integer",
            "format": "int64"
          },
          "recent": {
            "type": "boolean"
          }
        }
      },
      "AuditTrailItem": {
        "type": "object",
        "description": "AuditTrailItem",
        "properties": {
          "id": {
            "type": "string",
            "description": "The system generated unique id for the resource."
          },
          "name": {
            "type": "string",
            "description": "The caller provided unique name for the resource."
          },
          "displayName": {
            "type": "string",
            "description": "The name that can be used for display purposes."
          },
          "kind": {
            "$ref": "#/definitions/AuditTrailItemKind",
            "description": "The kind of asset."
          },
          "reason": {
            "type": "string",
            "description": "An explanation of why this audit trail node was discovered from the previous node."
          }
        }
      },
      "AuditTrailItemKind": {
        "type": "string",
        "enum": [
          "as",
          "contact",
          "domain",
          "host",
          "ipAddress",
          "ipBlock",
          "page",
          "sslCert"
        ],
        "x-ms-enum": {
          "name": "AuditTrailItemKind",
          "modelAsString": true
        }
      },
      "AzureDataExplorerDataConnectionProperties": {
        "type": "object",
        "description": "AzureDataExplorerDataConnectionProperties",
        "properties": {
          "clusterName": {
            "type": "string",
            "description": "The azure data explorer cluster name"
          },
          "region": {
            "type": "string",
            "description": "The azure data explorer region"
          },
          "databaseName": {
            "type": "string",
            "description": "The azure data explorer database name"
          }
        },
        "allOf": [
          {
            "$ref": "#/definitions/DataConnectionProperties"
          }
        ]
      },
      "AzureDataExplorerDataConnectionRequest": {
        "type": "object",
        "properties": {
          "properties": {
            "$ref": "#/definitions/AzureDataExplorerDataConnectionProperties"
          }
        },
        "required": [
          "properties"
        ],
        "allOf": [
          {
            "$ref": "#/definitions/DataConnectionRequest"
          }
        ],
        "x-ms-discriminator-value": "azureDataExplorer"
      },
      "AzureDataExplorerDataConnectionResponse": {
        "type": "object",
        "properties": {
          "properties": {
            "$ref": "#/definitions/AzureDataExplorerDataConnectionProperties"
          }
        },
        "required": [
          "properties"
        ],
        "allOf": [
          {
            "$ref": "#/definitions/DataConnectionResponse"
          }
        ],
        "x-ms-discriminator-value": "azureDataExplorer"
      },
      "AzureDataExplorerDataConnectionResponseItem": {
        "type": "object",
        "properties": {
          "properties": {
            "$ref": "#/definitions/AzureDataExplorerDataConnectionProperties"
          }
        },
        "required": [
          "properties"
        ],
        "allOf": [
          {
            "$ref": "#/definitions/DataConnectionResponseItem"
          }
        ],
        "x-ms-discriminator-value": "azureDataExplorer"
      },
      "Banner": {
        "type": "object",
        "description": "Banner",
        "properties": {
          "port": {
            "type": "integer",
            "format": "int32"
          },
          "banner": {
            "type": "string"
          },
          "firstSeen": {
            "type": "string",
            "format": "date-time"
          },
          "lastSeen": {
            "type": "string",
            "format": "date-time"
          },
          "count": {
            "type": "integer",
            "format": "int64"
          },
          "scanType": {
            "type": "string"
          },
          "bannerMetadata": {
            "type": "string"
          },
          "recent": {
            "type": "boolean"
          },
          "sha256": {
            "type": "string"
          },
          "sources": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/Source"
            },
            "x-ms-identifiers": []
          }
        }
      },
      "CVSS3Summary": {
        "type": "object",
        "description": "CVSS3Summary",
        "properties": {
          "version": {
            "type": "string"
          },
          "vectorString": {
            "type": "string"
          },
          "attackVector": {
            "type": "string"
          },
          "attackComplexity": {
            "type": "string"
          },
          "privilegesRequired": {
            "type": "string"
          },
          "userInteraction": {
            "type": "string"
          },
          "scope": {
            "type": "string"
          },
          "confidentialityImpact": {
            "type": "string"
          },
          "integrityImpact": {
            "type": "string"
          },
          "availabilityImpact": {
            "type": "string"
          },
          "baseScore": {
            "type": "number",
            "format": "float"
          },
          "baseSeverity": {
            "type": "string"
          },
          "exploitCodeMaturity": {
            "type": "string"
          },
          "remediationLevel": {
            "type": "string"
          },
          "reportConfidence": {
            "type": "string"
          },
          "exploitabilityScore": {
            "type": "number",
            "format": "float"
          },
          "impactScore": {
            "type": "number",
            "format": "float"
          }
        }
      },
      "ContactAsset": {
        "type": "object",
        "description": "ContactAsset",
        "properties": {
          "email": {
            "type": "string"
          },
          "names": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/ObservedString"
            },
            "x-ms-identifiers": []
          },
          "organizations": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/ObservedString"
            },
            "x-ms-identifiers": []
          },
          "sources": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/Source"
            },
            "x-ms-identifiers": []
          },
          "firstSeen": {
            "type": "string",
            "format": "date-time"
          },
          "lastSeen": {
            "type": "string",
            "format": "date-time"
          },
          "count": {
            "type": "integer",
            "format": "int64"
          }
        },
        "allOf": [
          {
            "$ref": "#/definitions/InventoryAsset"
          }
        ]
      },
      "ContactAssetResponse": {
        "type": "object",
        "properties": {
          "asset": {
            "$ref": "#/definitions/ContactAsset"
          }
        },
        "required": [
          "asset"
        ],
        "allOf": [
          {
            "$ref": "#/definitions/AssetResponse"
          }
        ],
        "x-ms-discriminator-value": "contact"
      },
      "ContactAssetResponseItem": {
        "type": "object",
        "properties": {
          "asset": {
            "$ref": "#/definitions/ContactAsset"
          }
        },
        "required": [
          "asset"
        ],
        "allOf": [
          {
            "$ref": "#/definitions/AssetResponseItem"
          }
        ],
        "x-ms-discriminator-value": "contact"
      },
      "Cookie": {
        "type": "object",
        "description": "Cookie",
        "properties": {
          "cookieName": {
            "type": "string"
          },
          "cookieDomain": {
            "type": "string"
          },
          "firstSeen": {
            "type": "string",
            "format": "date-time"
          },
          "lastSeen": {
            "type": "string",
            "format": "date-time"
          },
          "count": {
            "type": "integer",
            "format": "int64"
          },
          "recent": {
            "type": "boolean"
          },
          "cookieExpiryDate": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Cve": {
        "type": "object",
        "description": "Cve",
        "properties": {
          "name": {
            "type": "string"
          },
          "cweId": {
            "type": "string"
          },
          "cvssScore": {
            "type": "number",
            "format": "float"
          },
          "cvss3Summary": {
            "$ref": "#/definitions/CVSS3Summary"
          }
        }
      },
      "DataConnectionContent": {
        "type": "string",
        "enum": [
          "assets",
          "attackSurfaceInsights"
        ],
        "x-ms-enum": {
          "name": "DataConnectionContent",
          "modelAsString": true
        }
      },
      "DataConnectionFrequency": {
        "type": "string",
        "enum": [
          "daily",
          "weekly",
          "monthly"
        ],
        "x-ms-enum": {
          "name": "DataConnectionFrequency",
          "modelAsString": true
        }
      },
      "DataConnectionKind": {
        "type": "string",
        "enum": [
          "logAnalytics",
          "azureDataExplorer"
        ],
        "x-ms-enum": {
          "name": "DataConnectionKind",
          "modelAsString": true
        }
      },
      "DataConnectionPageResponse": {
        "type": "object",
        "description": "DataConnectionPageResponse",
        "properties": {
          "totalElements": {
            "type": "integer",
            "format": "int64",
            "description": "The total number of items available in the full result set."
          },
          "nextLink": {
            "type": "string",
            "description": "The link to access the next page of results.  Not set if at the end of the result set."
          },
          "value": {
            "type": "array",
            "description": "The items in the current page of results.",
            "items": {
              "$ref": "#/definitions/DataConnectionResponseItem"
            }
          }
        }
      },
      "DataConnectionProperties": {
        "type": "object",
        "description": "DataConnectionProperties",
        "properties": {}
      },
      "DataConnectionRequest": {
        "type": "object",
        "description": "DataConnectionRequest",
        "properties": {
          "kind": {
            "type": "string",
            "description": "Discriminator property for DataConnectionRequest."
          },
          "name": {
            "type": "string",
            "description": "The name of data connection"
          },
          "content": {
            "$ref": "#/definitions/DataConnectionContent",
            "description": "The type of data the data connection will transfer."
          },
          "frequency": {
            "$ref": "#/definitions/DataConnectionFrequency",
            "description": "The rate at which the data connection will receive updates."
          },
          "frequencyOffset": {
            "type": "integer",
            "format": "int32",
            "description": "The day to update the data connection on. (1-7 for weekly, 1-31 for monthly)"
          }
        },
        "discriminator": "kind",
        "required": [
          "kind"
        ]
      },
      "DataConnectionResponse": {
        "type": "object",
        "description": "DataConnectionResponse",
        "properties": {
          "kind": {
            "type": "string",
            "description": "Discriminator property for DataConnectionResponse."
          },
          "id": {
            "type": "string",
            "description": "The system generated unique id for the resource."
          },
          "name": {
            "type": "string",
            "description": "The caller provided unique name for the resource."
          },
          "displayName": {
            "type": "string",
            "description": "The name that can be used for display purposes."
          },
          "content": {
            "$ref": "#/definitions/DataConnectionContent",
            "description": "The type of data the data connection will transfer"
          },
          "createdDate": {
            "type": "string",
            "format": "date-time",
            "description": "The date the data connection was created."
          },
          "frequency": {
            "$ref": "#/definitions/DataConnectionFrequency",
            "description": "The rate at which the data connection will receive updates."
          },
          "frequencyOffset": {
            "type": "integer",
            "format": "int32",
            "description": "The day to update the data connection on."
          },
          "updatedDate": {
            "type": "string",
            "format": "date-time",
            "description": "The date the data connection was last updated."
          },
          "userUpdatedAt": {
            "type": "string",
            "format": "date-time",
            "description": "The date the data connection was last updated by user."
          },
          "active": {
            "type": "boolean",
            "description": "An indicator of whether the data connection is active."
          },
          "inactiveMessage": {
            "type": "string",
            "description": "A message that specifies details about data connection if inactive."
          }
        },
        "discriminator": "kind",
        "required": [
          "kind"
        ]
      },
      "DataConnectionResponseItem": {
        "type": "object",
        "description": "DataConnectionResponse",
        "properties": {
          "kind": {
            "type": "string",
            "description": "Discriminator property for DataConnectionResponse."
          },
          "statusCode": {
            "type": "number",
            "enum": [
              200
            ]
          },
          "id": {
            "type": "string",
            "description": "The system generated unique id for the resource."
          },
          "name": {
            "type": "string",
            "description": "The caller provided unique name for the resource."
          },
          "displayName": {
            "type": "string",
            "description": "The name that can be used for display purposes."
          },
          "content": {
            "$ref": "#/definitions/DataConnectionContent",
            "description": "The type of data the data connection will transfer"
          },
          "createdDate": {
            "type": "string",
            "format": "date-time",
            "description": "The date the data connection was created."
          },
          "frequency": {
            "$ref": "#/definitions/DataConnectionFrequency",
            "description": "The rate at which the data connection will receive updates."
          },
          "frequencyOffset": {
            "type": "integer",
            "format": "int32",
            "description": "The day to update the data connection on."
          },
          "updatedDate": {
            "type": "string",
            "format": "date-time",
            "description": "The date the data connection was last updated."
          },
          "userUpdatedAt": {
            "type": "string",
            "format": "date-time",
            "description": "The date the data connection was last updated by user."
          },
          "active": {
            "type": "boolean",
            "description": "An indicator of whether the data connection is active."
          },
          "inactiveMessage": {
            "type": "string",
            "description": "A message that specifies details about data connection if inactive."
          }
        },
        "discriminator": "kind",
        "required": [
          "kind",
          "statusCode"
        ]
      },
      "DependentResource": {
        "type": "object",
        "description": "DependentResource",
        "properties": {
          "md5": {
            "type": "string"
          },
          "responseBodySize": {
            "type": "integer",
            "format": "int64"
          },
          "firstSeen": {
            "type": "string",
            "format": "date-time"
          },
          "lastSeen": {
            "type": "string",
            "format": "date-time"
          },
          "count": {
            "type": "integer",
            "format": "int64"
          },
          "firstSeenCrawlGuid": {
            "type": "string"
          },
          "firstSeenPageGuid": {
            "type": "string"
          },
          "firstSeenResourceGuid": {
            "type": "string"
          },
          "lastSeenCrawlGuid": {
            "type": "string"
          },
          "lastSeenPageGuid": {
            "type": "string"
          },
          "lastSeenResourceGuid": {
            "type": "string"
          },
          "responseBodyMinhash": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          "contentType": {
            "type": "string"
          },
          "sha256": {
            "type": "string"
          },
          "sha384": {
            "type": "string"
          },
          "sha512": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "cached": {
            "type": "boolean"
          },
          "sriChecks": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/SubResourceIntegrityCheck"
            },
            "x-ms-identifiers": []
          },
          "host": {
            "type": "string"
          },
          "lastObservedViolation": {
            "type": "string",
            "format": "date-time"
          },
          "lastObservedValidation": {
            "type": "string",
            "format": "date-time"
          },
          "lastObservedActualSriHash": {
            "type": "string"
          },
          "lastObservedExpectedSriHash": {
            "type": "string"
          }
        }
      },
      "DiscoGroupPageResponse": {
        "type": "object",
        "description": "DiscoGroupPageResponse",
        "properties": {
          "totalElements": {
            "type": "integer",
            "format": "int64",
            "description": "The total number of items available in the full result set."
          },
          "nextLink": {
            "type": "string",
            "description": "The link to access the next page of results.  Not set if at the end of the result set."
          },
          "value": {
            "type": "array",
            "description": "The items in the current page of results.",
            "items": {
              "$ref": "#/definitions/DiscoGroupResponseItem"
            }
          }
        }
      },
      "DiscoGroupRequest": {
        "type": "object",
        "description": "DiscoGroupRequest",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name for a disco group."
          },
          "description": {
            "type": "string",
            "description": "The description for a disco group."
          },
          "tier": {
            "type": "string",
            "description": "The tier for the disco group which will affect the algorithm used for the disco runs in this group."
          },
          "frequencyMilliseconds": {
            "type": "integer",
            "format": "int64",
            "description": "The frequency at which the disco group is supposed to be rerun in milliseconds."
          },
          "seeds": {
            "type": "array",
            "description": "The list of seeds used for the disco group runs.",
            "items": {
              "$ref": "#/definitions/DiscoSource"
            },
            "x-ms-identifiers": []
          },
          "names": {
            "type": "array",
            "description": "The list of names used for the disco group runs.",
            "items": {
              "type": "string"
            }
          },
          "excludes": {
            "type": "array",
            "description": "The list of excludes used for the disco group runs, aka assets to exclude from the discovery algorithm.",
            "items": {
              "$ref": "#/definitions/DiscoSource"
            },
            "x-ms-identifiers": []
          },
          "templateId": {
            "type": "string",
            "description": "The unique identifier for the disco template used for the disco group creation."
          }
        }
      },
      "DiscoGroupResponse": {
        "type": "object",
        "description": "DiscoGroupResponse",
        "properties": {
          "id": {
            "type": "string",
            "description": "The system generated unique id for the resource."
          },
          "name": {
            "type": "string",
            "description": "The caller provided unique name for the resource."
          },
          "displayName": {
            "type": "string",
            "description": "The name that can be used for display purposes."
          },
          "description": {
            "type": "string",
            "description": "The description for a disco group."
          },
          "tier": {
            "type": "string",
            "description": "The tier for the disco group which will affect the algorithm used for the disco runs in this group."
          },
          "frequencyMilliseconds": {
            "type": "integer",
            "format": "int64",
            "description": "The frequency at which the disco group is supposed to be rerun in milliseconds."
          },
          "seeds": {
            "type": "array",
            "description": "The list of seeds used for the disco group runs.",
            "items": {
              "$ref": "#/definitions/DiscoSource"
            },
            "x-ms-identifiers": []
          },
          "names": {
            "type": "array",
            "description": "The list of names used for the disco group runs.",
            "items": {
              "type": "string"
            }
          },
          "excludes": {
            "type": "array",
            "description": "The list of excludes used for the disco group runs, aka assets to exclude from the discovery algorithm.",
            "items": {
              "$ref": "#/definitions/DiscoSource"
            },
            "x-ms-identifiers": []
          },
          "latestRun": {
            "$ref": "#/definitions/DiscoRunResponse"
          },
          "createdDate": {
            "type": "string",
            "format": "date-time",
            "description": "The date for the disco group was created."
          },
          "templateId": {
            "type": "string",
            "description": "The unique identifier for the disco template used for the disco group creation."
          }
        }
      },
      "DiscoGroupResponseItem": {
        "type": "object",
        "description": "DiscoGroupResponse",
        "properties": {
          "statusCode": {
            "type": "number",
            "enum": [
              200
            ]
          },
          "id": {
            "type": "string",
            "description": "The system generated unique id for the resource."
          },
          "name": {
            "type": "string",
            "description": "The caller provided unique name for the resource."
          },
          "displayName": {
            "type": "string",
            "description": "The name that can be used for display purposes."
          },
          "description": {
            "type": "string",
            "description": "The description for a disco group."
          },
          "tier": {
            "type": "string",
            "description": "The tier for the disco group which will affect the algorithm used for the disco runs in this group."
          },
          "frequencyMilliseconds": {
            "type": "integer",
            "format": "int64",
            "description": "The frequency at which the disco group is supposed to be rerun in milliseconds."
          },
          "seeds": {
            "type": "array",
            "description": "The list of seeds used for the disco group runs.",
            "items": {
              "$ref": "#/definitions/DiscoSource"
            },
            "x-ms-identifiers": []
          },
          "names": {
            "type": "array",
            "description": "The list of names used for the disco group runs.",
            "items": {
              "type": "string"
            }
          },
          "excludes": {
            "type": "array",
            "description": "The list of excludes used for the disco group runs, aka assets to exclude from the discovery algorithm.",
            "items": {
              "$ref": "#/definitions/DiscoSource"
            },
            "x-ms-identifiers": []
          },
          "latestRun": {
            "$ref": "#/definitions/DiscoRunResponse"
          },
          "createdDate": {
            "type": "string",
            "format": "date-time",
            "description": "The date for the disco group was created."
          },
          "templateId": {
            "type": "string",
            "description": "The unique identifier for the disco template used for the disco group creation."
          }
        },
        "required": [
          "statusCode"
        ]
      },
      "DiscoRunPageResponse": {
        "type": "object",
        "description": "DiscoRunPageResponse",
        "properties": {
          "totalElements": {
            "type": "integer",
            "format": "int64",
            "description": "The total number of items available in the full result set."
          },
          "nextLink": {
            "type": "string",
            "description": "The link to access the next page of results.  Not set if at the end of the result set."
          },
          "value": {
            "type": "array",
            "description": "The items in the current page of results.",
            "items": {
              "$ref": "#/definitions/DiscoRunResponse"
            },
            "x-ms-identifiers": []
          }
        }
      },
      "DiscoRunResponse": {
        "type": "object",
        "description": "DiscoRunResponse",
        "properties": {
          "submittedDate": {
            "type": "string",
            "format": "date-time",
            "description": "The date for when the disco run was created in the system."
          },
          "startedDate": {
            "type": "string",
            "format": "date-time",
            "description": "The date for when the disco run was actually started by the system."
          },
          "completedDate": {
            "type": "string",
            "format": "date-time",
            "description": "The date for when the disco run was completed by the system."
          },
          "tier": {
            "type": "string",
            "description": "The tier which will affect the algorithm used for the disco run."
          },
          "state": {
            "$ref": "#/definitions/DiscoRunState",
            "description": "The State of the disco run."
          },
          "totalAssetsFoundCount": {
            "type": "integer",
            "format": "int64",
            "description": "The total count of assets that were found this disco run."
          },
          "seeds": {
            "type": "array",
            "description": "The list of seeds used for the disco run.",
            "items": {
              "$ref": "#/definitions/DiscoSource"
            },
            "x-ms-identifiers": []
          },
          "excludes": {
            "type": "array",
            "description": "The list of excludes used for the disco run, aka assets to exclude from the discovery algorithm.",
            "items": {
              "$ref": "#/definitions/DiscoSource"
            },
            "x-ms-identifiers": []
          },
          "names": {
            "type": "array",
            "description": "The list of names used for the disco run.",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "DiscoRunState": {
        "type": "string",
        "enum": [
          "pending",
          "running",
          "completed",
          "failed"
        ],
        "x-ms-enum": {
          "name": "DiscoRunState",
          "modelAsString": true
        }
      },
      "DiscoSource": {
        "type": "object",
        "description": "DiscoSource",
        "properties": {
          "kind": {
            "$ref": "#/definitions/DiscoSourceKind",
            "description": "The kind of disco source."
          },
          "name": {
            "type": "string",
            "description": "The name for the disco source."
          }
        }
      },
      "DiscoSourceKind": {
        "type": "string",
        "enum": [
          "as",
          "attribute",
          "contact",
          "domain",
          "host",
          "ipBlock"
        ],
        "x-ms-enum": {
          "name": "DiscoSourceKind",
          "modelAsString": true
        }
      },
      "DiscoTemplatePageResponse": {
        "type": "object",
        "description": "DiscoTemplatePageResponse",
        "properties": {
          "totalElements": {
            "type": "integer",
            "format": "int64",
            "description": "The total number of items available in the full result set."
          },
          "nextLink": {
            "type": "string",
            "description": "The link to access the next page of results.  Not set if at the end of the result set."
          },
          "value": {
            "type": "array",
            "description": "The items in the current page of results.",
            "items": {
              "$ref": "#/definitions/DiscoTemplateResponseItem"
            }
          }
        }
      },
      "DiscoTemplateResponse": {
        "type": "object",
        "description": "DiscoTemplateResponse",
        "properties": {
          "id": {
            "type": "string",
            "description": "The system generated unique id for the resource."
          },
          "name": {
            "type": "string",
            "description": "The caller provided unique name for the resource."
          },
          "displayName": {
            "type": "string",
            "description": "The name that can be used for display purposes."
          },
          "industry": {
            "type": "string",
            "description": "The name of the industry."
          },
          "region": {
            "type": "string",
            "description": "The name of the region."
          },
          "countryCode": {
            "type": "string",
            "description": "The country code."
          },
          "stateCode": {
            "type": "string",
            "description": "The state code."
          },
          "city": {
            "type": "string",
            "description": "The name of the city."
          },
          "seeds": {
            "type": "array",
            "description": "The list of disco template seeds.",
            "items": {
              "$ref": "#/definitions/DiscoSource"
            },
            "x-ms-identifiers": []
          },
          "names": {
            "type": "array",
            "description": "The list of disco template names.",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "DiscoTemplateResponseItem": {
        "type": "object",
        "description": "DiscoTemplateResponse",
        "properties": {
          "statusCode": {
            "type": "number",
            "enum": [
              200
            ]
          },
          "id": {
            "type": "string",
            "description": "The system generated unique id for the resource."
          },
          "name": {
            "type": "string",
            "description": "The caller provided unique name for the resource."
          },
          "displayName": {
            "type": "string",
            "description": "The name that can be used for display purposes."
          },
          "industry": {
            "type": "string",
            "description": "The name of the industry."
          },
          "region": {
            "type": "string",
            "description": "The name of the region."
          },
          "countryCode": {
            "type": "string",
            "description": "The country code."
          },
          "stateCode": {
            "type": "string",
            "description": "The state code."
          },
          "city": {
            "type": "string",
            "description": "The name of the city."
          },
          "seeds": {
            "type": "array",
            "description": "The list of disco template seeds.",
            "items": {
              "$ref": "#/definitions/DiscoSource"
            },
            "x-ms-identifiers": []
          },
          "names": {
            "type": "array",
            "description": "The list of disco template names.",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "statusCode"
        ]
      },
      "DomainAsset": {
        "type": "object",
        "description": "DomainAsset",
        "properties": {
          "domain": {
            "type": "string"
          },
          "whoisId": {
            "type": "integer",
            "format": "int64"
          },
          "registrarIanaIds": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/ObservedInteger"
            },
            "x-ms-identifiers": []
          },
          "registrantContacts": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/ObservedString"
            },
            "x-ms-identifiers": []
          },
          "registrantOrgs": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/ObservedString"
            },
            "x-ms-identifiers": []
          },
          "adminContacts": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/ObservedString"
            },
            "x-ms-identifiers": []
          },
          "technicalContacts": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/ObservedString"
            },
            "x-ms-identifiers": []
          },
          "alexaInfos": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/AlexaInfo"
            },
            "x-ms-identifiers": []
          },
          "nameServers": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/ObservedString"
            },
            "x-ms-identifiers": []
          },
          "mailServers": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/ObservedString"
            },
            "x-ms-identifiers": []
          },
          "whoisServers": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/ObservedString"
            },
            "x-ms-identifiers": []
          },
          "domainStatuses": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/ObservedString"
            },
            "x-ms-identifiers": []
          },
          "registrarCreatedAt": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/ObservedLong"
            },
            "x-ms-identifiers": []
          },
          "registrarUpdatedAt": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/ObservedLong"
            },
            "x-ms-identifiers": []
          },
          "registrarExpiresAt": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/ObservedLong"
            },
            "x-ms-identifiers": []
          },
          "soaRecords": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/SoaRecord"
            },
            "x-ms-identifiers": []
          },
          "detailedFromWhoisAt": {
            "type": "string",
            "format": "date-time"
          },
          "registrarNames": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/ObservedString"
            },
            "x-ms-identifiers": []
          },
          "sources": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/Source"
            },
            "x-ms-identifiers": []
          },
          "firstSeen": {
            "type": "string",
            "format": "date-time"
          },
          "lastSeen": {
            "type": "string",
            "format": "date-time"
          },
          "count": {
            "type": "integer",
            "format": "int64"
          },
          "parkedDomain": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/ObservedBoolean"
            },
            "x-ms-identifiers": []
          },
          "registrantNames": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/ObservedString"
            },
            "x-ms-identifiers": []
          },
          "adminNames": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/ObservedString"
            },
            "x-ms-identifiers": []
          },
          "technicalNames": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/ObservedString"
            },
            "x-ms-identifiers": []
          },
          "adminOrgs": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/ObservedString"
            },
            "x-ms-identifiers": []
          },
          "technicalOrgs": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/ObservedString"
            },
            "x-ms-identifiers": []
          },
          "registrantPhones": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/ObservedString"
            },
            "x-ms-identifiers": []
          },
          "adminPhones": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/ObservedString"
            },
            "x-ms-identifiers": []
          },
          "technicalPhones": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/ObservedString"
            },
            "x-ms-identifiers": []
          }
        },
        "allOf": [
          {
            "$ref": "#/definitions/InventoryAsset"
          }
        ]
      },
      "DomainAssetResponse": {
        "type": "object",
        "properties": {
          "asset": {
            "$ref": "#/definitions/DomainAsset"
          }
        },
        "required": [
          "asset"
        ],
        "allOf": [
          {
            "$ref": "#/definitions/AssetResponse"
          }
        ],
        "x-ms-discriminator-value": "domain"
      },
      "DomainAssetResponseItem": {
        "type": "object",
        "properties": {
          "asset": {
            "$ref": "#/definitions/DomainAsset"
          }
        },
        "required": [
          "asset"
        ],
        "allOf": [
          {
            "$ref": "#/definitions/AssetResponseItem"
          }
        ],
        "x-ms-discriminator-value": "domain"
      },
      "ErrorDetail": {
        "type": "object",
        "description": "ErrorDetail",
        "properties": {
          "code": {
            "type": "string",
            "description": "This is one of a server-defined set of error codes."
          },
          "message": {
            "type": "string",
            "description": "This is a human-readable representation of the error."
          },
          "target": {
            "type": "string",
            "description": "This is the error target."
          },
          "details": {
            "type": "array",
            "description": "This is an array of details about specific errors that led to this reported error.",
            "items": {
              "$ref": "#/definitions/ErrorDetail"
            },
            "x-ms-identifiers": []
          },
          "innererror": {
            "$ref": "#/definitions/InnerError"
          }
        },
        "required": [
          "code",
          "message"
        ]
      },
      "ErrorResponse": {
        "type": "object",
        "description": "ErrorResponse",
        "properties": {
          "error": {
            "$ref": "#/definitions/ErrorDetail"
          }
        },
        "required": [
          "error"
        ]
      },
      "GuidPair": {
        "type": "object",
        "description": "GuidPair",
        "properties": {
          "pageGuid": {
            "type": "string"
          },
          "crawlStateGuid": {
            "type": "string"
          },
          "loadDate": {
            "type": "string",
            "format": "date-time"
          },
          "recent": {
            "type": "boolean"
          }
        }
      },
      "HostAsset": {
        "type": "object",
        "description": "HostAsset",
        "properties": {
          "host": {
            "type": "string"
          },
          "domain": {
            "type": "string"
          },
          "ipAddresses": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/ObservedString"
            },
            "x-ms-identifiers": []
          },
          "webComponents": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/WebComponent"
            },
            "x-ms-identifiers": []
          },
          "headers": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/ObservedHeader"
            },
            "x-ms-identifiers": []
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/Attribute"
            },
            "x-ms-identifiers": []
          },
          "cookies": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/Cookie"
            },
            "x-ms-identifiers": []
          },
          "sslCerts": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/SslCertAsset"
            },
            "x-ms-identifiers": []
          },
          "parentHosts": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/ObservedString"
            },
            "x-ms-identifiers": []
          },
          "childHosts": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/ObservedString"
            },
            "x-ms-identifiers": []
          },
          "hostCore": {
            "$ref": "#/definitions/HostCore"
          },
          "services": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/Service"
            },
            "x-ms-identifiers": []
          },
          "cnames": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/ObservedString"
            },
            "x-ms-identifiers": []
          },
          "sources": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/Source"
            },
            "x-ms-identifiers": []
          },
          "firstSeen": {
            "type": "string",
            "format": "date-time"
          },
          "lastSeen": {
            "type": "string",
            "format": "date-time"
          },
          "count": {
            "type": "integer",
            "format": "int64"
          },
          "resourceUrls": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/ResourceUrl"
            },
            "x-ms-identifiers": []
          },
          "scanMetadata": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/ScanMetadata"
            },
            "x-ms-identifiers": []
          },
          "asns": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/ObservedLong"
            },
            "x-ms-identifiers": []
          },
          "ipBlocks": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/IpBlock"
            },
            "x-ms-identifiers": []
          },
          "responseBodies": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/ObservedString"
            },
            "x-ms-identifiers": []
          },
          "domainAsset": {
            "$ref": "#/definitions/DomainAsset"
          },
          "nsRecord": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/ObservedBoolean"
            },
            "x-ms-identifiers": []
          },
          "mxRecord": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/ObservedBoolean"
            },
            "x-ms-identifiers": []
          },
          "webserver": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/ObservedBoolean"
            },
            "x-ms-identifiers": []
          },
          "location": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/ObservedLocation"
            },
            "x-ms-identifiers": []
          },
          "nxdomain": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/ObservedBoolean"
            },
            "x-ms-identifiers": []
          },
          "sslServerConfig": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/SslServerConfig"
            },
            "x-ms-identifiers": []
          },
          "isWildcard": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/ObservedBoolean"
            },
            "x-ms-identifiers": []
          },
          "banners": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/Banner"
            },
            "x-ms-identifiers": []
          },
          "ipv4": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/ObservedBoolean"
            },
            "x-ms-identifiers": []
          },
          "ipv6": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/ObservedBoolean"
            },
            "x-ms-identifiers": []
          }
        },
        "allOf": [
          {
            "$ref": "#/definitions/InventoryAsset"
          }
        ]
      },
      "HostAssetResponse": {
        "type": "object",
        "properties": {
          "asset": {
            "$ref": "#/definitions/HostAsset"
          }
        },
        "required": [
          "asset"
        ],
        "allOf": [
          {
            "$ref": "#/definitions/AssetResponse"
          }
        ],
        "x-ms-discriminator-value": "host"
      },
      "HostAssetResponseItem": {
        "type": "object",
        "properties": {
          "asset": {
            "$ref": "#/definitions/HostAsset"
          }
        },
        "required": [
          "asset"
        ],
        "allOf": [
          {
            "$ref": "#/definitions/AssetResponseItem"
          }
        ],
        "x-ms-discriminator-value": "host"
      },
      "HostCore": {
        "type": "object",
        "description": "HostCore",
        "properties": {
          "host": {
            "type": "string"
          },
          "domain": {
            "type": "string"
          },
          "firstSeen": {
            "type": "string",
            "format": "date-time"
          },
          "lastSeen": {
            "type": "string",
            "format": "date-time"
          },
          "count": {
            "type": "integer",
            "format": "int64"
          },
          "blacklistCauseFirstSeen": {
            "type": "string",
            "format": "date-time"
          },
          "blacklistCauseLastSeen": {
            "type": "string",
            "format": "date-time"
          },
          "blacklistCauseCount": {
            "type": "integer",
            "format": "int64"
          },
          "blacklistResourceFirstSeen": {
            "type": "string",
            "format": "date-time"
          },
          "blacklistResourceLastSeen": {
            "type": "string",
            "format": "date-time"
          },
          "blacklistResourceCount": {
            "type": "integer",
            "format": "int64"
          },
          "blacklistSequenceFirstSeen": {
            "type": "string",
            "format": "date-time"
          },
          "blacklistSequenceLastSeen": {
            "type": "string",
            "format": "date-time"
          },
          "blacklistSequenceCount": {
            "type": "integer",
            "format": "int64"
          },
          "phishCauseCount": {
            "type": "integer",
            "format": "int64"
          },
          "malwareCauseCount": {
            "type": "integer",
            "format": "int64"
          },
          "spamCauseCount": {
            "type": "integer",
            "format": "int64"
          },
          "scamCauseCount": {
            "type": "integer",
            "format": "int64"
          },
          "phishResourceCount": {
            "type": "integer",
            "format": "int64"
          },
          "malwareResourceCount": {
            "type": "integer",
            "format": "int64"
          },
          "spamResourceCount": {
            "type": "integer",
            "format": "int64"
          },
          "scamResourceCount": {
            "type": "integer",
            "format": "int64"
          },
          "phishSequenceCount": {
            "type": "integer",
            "format": "int64"
          },
          "malwareSequenceCount": {
            "type": "integer",
            "format": "int64"
          },
          "spamSequenceCount": {
            "type": "integer",
            "format": "int64"
          },
          "scamSequenceCount": {
            "type": "integer",
            "format": "int64"
          },
          "alexaRank": {
            "type": "integer",
            "format": "int32"
          },
          "hostReputationScore": {
            "type": "integer",
            "format": "int32"
          },
          "hostPhishReputationScore": {
            "type": "integer",
            "format": "int32"
          },
          "hostMalwareReputationScore": {
            "type": "integer",
            "format": "int32"
          },
          "hostSpamReputationScore": {
            "type": "integer",
            "format": "int32"
          },
          "hostScamReputationScore": {
            "type": "integer",
            "format": "int32"
          },
          "domainReputationScore": {
            "type": "integer",
            "format": "int32"
          },
          "domainPhishReputationScore": {
            "type": "integer",
            "format": "int32"
          },
          "domainMalwareReputationScore": {
            "type": "integer",
            "format": "int32"
          },
          "domainSpamReputationScore": {
            "type": "integer",
            "format": "int32"
          },
          "domainScamReputationScore": {
            "type": "integer",
            "format": "int32"
          },
          "uuid": {
            "type": "string"
          }
        }
      },
      "ImplicitFlow": {
        "type": "object",
        "description": "Implicit Flow",
        "properties": {
          "type": {
            "type": "string",
            "description": "implicit flow",
            "enum": [
              "implicit"
            ]
          },
          "authorizationUrl": {
            "type": "string",
            "description": "the authorization URL",
            "enum": [
              "https://login.microsoftonline.com/common/oauth2/authorize"
            ],
            "x-ms-enum": {
              "modelAsString": false
            }
          },
          "scopes": {
            "type": "array",
            "description": "list of scopes for the credential",
            "items": {}
          }
        },
        "required": [
          "type",
          "authorizationUrl",
          "scopes"
        ]
      },
      "InnerError": {
        "type": "object",
        "description": "InnerError",
        "properties": {
          "code": {
            "type": "string",
            "description": "This is a more specific error code than was provided by the containing error."
          },
          "value": {
            "type": "object",
            "description": "This is an additional field representing the value that caused the error to help with debugging.",
            "properties": {}
          }
        }
      },
      "InventoryAsset": {
        "type": "object",
        "description": "InventoryAsset",
        "properties": {}
      },
      "IpAddressAsset": {
        "type": "object",
        "description": "IpAddressAsset",
        "properties": {
          "ipAddress": {
            "type": "string"
          },
          "asns": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/ObservedLong"
            },
            "x-ms-identifiers": []
          },
          "reputations": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/Reputation"
            },
            "x-ms-identifiers": []
          },
          "webComponents": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/WebComponent"
            },
            "x-ms-identifiers": []
          },
          "netRanges": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/ObservedString"
            },
            "x-ms-identifiers": []
          },
          "headers": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/ObservedHeader"
            },
            "x-ms-identifiers": []
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/Attribute"
            },
            "x-ms-identifiers": []
          },
          "cookies": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/Cookie"
            },
            "x-ms-identifiers": []
          },
          "sslCerts": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/SslCertAsset"
            },
            "x-ms-identifiers": []
          },
          "services": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/Service"
            },
            "x-ms-identifiers": []
          },
          "ipBlocks": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/IpBlock"
            },
            "x-ms-identifiers": []
          },
          "sources": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/Source"
            },
            "x-ms-identifiers": []
          },
          "firstSeen": {
            "type": "string",
            "format": "date-time"
          },
          "lastSeen": {
            "type": "string",
            "format": "date-time"
          },
          "count": {
            "type": "integer",
            "format": "int64"
          },
          "banners": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/Banner"
            },
            "x-ms-identifiers": []
          },
          "scanMetadata": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/ScanMetadata"
            },
            "x-ms-identifiers": []
          },
          "nsRecord": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/ObservedBoolean"
            },
            "x-ms-identifiers": []
          },
          "mxRecord": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/ObservedBoolean"
            },
            "x-ms-identifiers": []
          },
          "location": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/ObservedLocation"
            },
            "x-ms-identifiers": []
          },
          "hosts": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/ObservedString"
            },
            "x-ms-identifiers": []
          },
          "nxdomain": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/ObservedBoolean"
            },
            "x-ms-identifiers": []
          },
          "sslServerConfig": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/SslServerConfig"
            },
            "x-ms-identifiers": []
          },
          "ipv4": {
            "type": "boolean"
          },
          "ipv6": {
            "type": "boolean"
          }
        },
        "allOf": [
          {
            "$ref": "#/definitions/InventoryAsset"
          }
        ]
      },
      "IpAddressAssetResponse": {
        "type": "object",
        "properties": {
          "asset": {
            "$ref": "#/definitions/IpAddressAsset"
          }
        },
        "required": [
          "asset"
        ],
        "allOf": [
          {
            "$ref": "#/definitions/AssetResponse"
          }
        ],
        "x-ms-discriminator-value": "ipAddress"
      },
      "IpAddressAssetResponseItem": {
        "type": "object",
        "properties": {
          "asset": {
            "$ref": "#/definitions/IpAddressAsset"
          }
        },
        "required": [
          "asset"
        ],
        "allOf": [
          {
            "$ref": "#/definitions/AssetResponseItem"
          }
        ],
        "x-ms-discriminator-value": "ipAddress"
      },
      "IpBlock": {
        "type": "object",
        "description": "IpBlock",
        "properties": {
          "ipBlock": {
            "type": "string"
          },
          "sources": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/Source"
            },
            "x-ms-identifiers": []
          },
          "firstSeen": {
            "type": "string",
            "format": "date-time"
          },
          "lastSeen": {
            "type": "string",
            "format": "date-time"
          },
          "count": {
            "type": "integer",
            "format": "int64"
          },
          "recent": {
            "type": "boolean"
          }
        }
      },
      "IpBlockAsset": {
        "type": "object",
        "description": "IpBlockAsset",
        "properties": {
          "ipBlock": {
            "type": "string"
          },
          "asns": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/ObservedLong"
            },
            "x-ms-identifiers": []
          },
          "bgpPrefixes": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/ObservedString"
            },
            "x-ms-identifiers": []
          },
          "netNames": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/ObservedString"
            },
            "x-ms-identifiers": []
          },
          "registrantContacts": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/ObservedString"
            },
            "x-ms-identifiers": []
          },
          "registrantOrgs": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/ObservedString"
            },
            "x-ms-identifiers": []
          },
          "adminContacts": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/ObservedString"
            },
            "x-ms-identifiers": []
          },
          "technicalContacts": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/ObservedString"
            },
            "x-ms-identifiers": []
          },
          "registrarCreatedAt": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/ObservedLong"
            },
            "x-ms-identifiers": []
          },
          "registrarUpdatedAt": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/ObservedLong"
            },
            "x-ms-identifiers": []
          },
          "netRanges": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/ObservedString"
            },
            "x-ms-identifiers": []
          },
          "startIp": {
            "type": "string"
          },
          "endIp": {
            "type": "string"
          },
          "reputations": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/Reputation"
            },
            "x-ms-identifiers": []
          },
          "detailedFromWhoisAt": {
            "type": "string",
            "format": "date-time"
          },
          "sources": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/Source"
            },
            "x-ms-identifiers": []
          },
          "firstSeen": {
            "type": "string",
            "format": "date-time"
          },
          "lastSeen": {
            "type": "string",
            "format": "date-time"
          },
          "count": {
            "type": "integer",
            "format": "int64"
          },
          "location": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/ObservedLocation"
            },
            "x-ms-identifiers": []
          },
          "registrarExpiresAt": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/ObservedLong"
            },
            "x-ms-identifiers": []
          },
          "registrantNames": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/ObservedString"
            },
            "x-ms-identifiers": []
          },
          "adminNames": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/ObservedString"
            },
            "x-ms-identifiers": []
          },
          "technicalNames": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/ObservedString"
            },
            "x-ms-identifiers": []
          },
          "adminOrgs": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/ObservedString"
            },
            "x-ms-identifiers": []
          },
          "technicalOrgs": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/ObservedString"
            },
            "x-ms-identifiers": []
          },
          "registrantPhones": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/ObservedString"
            },
            "x-ms-identifiers": []
          },
          "adminPhones": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/ObservedString"
            },
            "x-ms-identifiers": []
          },
          "technicalPhones": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/ObservedString"
            },
            "x-ms-identifiers": []
          },
          "ipv4": {
            "type": "boolean"
          },
          "ipv6": {
            "type": "boolean"
          }
        },
        "allOf": [
          {
            "$ref": "#/definitions/InventoryAsset"
          }
        ]
      },
      "IpBlockAssetResponse": {
        "type": "object",
        "properties": {
          "asset": {
            "$ref": "#/definitions/IpBlockAsset"
          }
        },
        "required": [
          "asset"
        ],
        "allOf": [
          {
            "$ref": "#/definitions/AssetResponse"
          }
        ],
        "x-ms-discriminator-value": "ipBlock"
      },
      "IpBlockAssetResponseItem": {
        "type": "object",
        "properties": {
          "asset": {
            "$ref": "#/definitions/IpBlockAsset"
          }
        },
        "required": [
          "asset"
        ],
        "allOf": [
          {
            "$ref": "#/definitions/AssetResponseItem"
          }
        ],
        "x-ms-discriminator-value": "ipBlock"
      },
      "Location": {
        "type": "object",
        "description": "Location",
        "properties": {
          "countryCode": {
            "type": "string"
          },
          "countryName": {
            "type": "string"
          },
          "region": {
            "type": "string"
          },
          "regionName": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "areaCode": {
            "type": "integer",
            "format": "int32"
          },
          "postalCode": {
            "type": "string"
          },
          "latitude": {
            "type": "number",
            "format": "float"
          },
          "longitude": {
            "type": "number",
            "format": "float"
          },
          "dmaCode": {
            "type": "integer",
            "format": "int32"
          },
          "metroCodeId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "LogAnalyticsDataConnectionProperties": {
        "type": "object",
        "description": "LogAnalyticsDataConnectionProperties",
        "properties": {
          "apiKey": {
            "type": "string",
            "description": "log analytics api key"
          },
          "workspaceId": {
            "type": "string",
            "description": "log analytics workspace id"
          }
        },
        "allOf": [
          {
            "$ref": "#/definitions/DataConnectionProperties"
          }
        ]
      },
      "LogAnalyticsDataConnectionRequest": {
        "type": "object",
        "properties": {
          "properties": {
            "$ref": "#/definitions/LogAnalyticsDataConnectionProperties"
          }
        },
        "required": [
          "properties"
        ],
        "allOf": [
          {
            "$ref": "#/definitions/DataConnectionRequest"
          }
        ],
        "x-ms-discriminator-value": "logAnalytics"
      },
      "LogAnalyticsDataConnectionResponse": {
        "type": "object",
        "properties": {
          "properties": {
            "$ref": "#/definitions/LogAnalyticsDataConnectionProperties"
          }
        },
        "required": [
          "properties"
        ],
        "allOf": [
          {
            "$ref": "#/definitions/DataConnectionResponse"
          }
        ],
        "x-ms-discriminator-value": "logAnalytics"
      },
      "LogAnalyticsDataConnectionResponseItem": {
        "type": "object",
        "properties": {
          "properties": {
            "$ref": "#/definitions/LogAnalyticsDataConnectionProperties"
          }
        },
        "required": [
          "properties"
        ],
        "allOf": [
          {
            "$ref": "#/definitions/DataConnectionResponseItem"
          }
        ],
        "x-ms-discriminator-value": "logAnalytics"
      },
      "ObservationPageResponse": {
        "type": "object",
        "description": "ObservationPageResponse",
        "properties": {
          "totalElements": {
            "type": "integer",
            "format": "int64",
            "description": "The total number of items available in the full result set."
          },
          "nextLink": {
            "type": "string",
            "description": "The link to access the next page of results.  Not set if at the end of the result set."
          },
          "value": {
            "type": "array",
            "description": "The items in the current page of results.",
            "items": {
              "$ref": "#/definitions/ObservationResponse"
            },
            "x-ms-identifiers": []
          }
        }
      },
      "ObservationPriority": {
        "type": "string",
        "enum": [
          "high",
          "medium",
          "low",
          "none"
        ],
        "x-ms-enum": {
          "name": "ObservationPriority",
          "modelAsString": true
        }
      },
      "ObservationResponse": {
        "type": "object",
        "description": "ObservationResponse",
        "properties": {
          "name": {
            "type": "string"
          },
          "type": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "priority": {
            "$ref": "#/definitions/ObservationPriority"
          },
          "cvssScoreV2": {
            "type": "number",
            "format": "float"
          },
          "cvssScoreV3": {
            "type": "number",
            "format": "float"
          }
        }
      },
      "ObservedBoolean": {
        "type": "object",
        "description": "ObservedBoolean",
        "properties": {
          "value": {
            "type": "boolean"
          },
          "firstSeen": {
            "type": "string",
            "format": "date-time"
          },
          "lastSeen": {
            "type": "string",
            "format": "date-time"
          },
          "count": {
            "type": "integer",
            "format": "int64"
          },
          "sources": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/Source"
            },
            "x-ms-identifiers": []
          },
          "recent": {
            "type": "boolean"
          }
        }
      },
      "ObservedHeader": {
        "type": "object",
        "description": "ObservedHeader",
        "properties": {
          "headerName": {
            "type": "string"
          },
          "headerValue": {
            "type": "string"
          },
          "firstSeen": {
            "type": "string",
            "format": "date-time"
          },
          "lastSeen": {
            "type": "string",
            "format": "date-time"
          },
          "count": {
            "type": "integer",
            "format": "int64"
          },
          "recent": {
            "type": "boolean"
          }
        }
      },
      "ObservedInteger": {
        "type": "object",
        "description": "ObservedInteger",
        "properties": {
          "value": {
            "type": "integer",
            "format": "int32"
          },
          "firstSeen": {
            "type": "string",
            "format": "date-time"
          },
          "lastSeen": {
            "type": "string",
            "format": "date-time"
          },
          "count": {
            "type": "integer",
            "format": "int64"
          },
          "sources": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/Source"
            },
            "x-ms-identifiers": []
          },
          "recent": {
            "type": "boolean"
          }
        }
      },
      "ObservedIntegers": {
        "type": "object",
        "description": "ObservedIntegers",
        "properties": {
          "values": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          "firstSeen": {
            "type": "string",
            "format": "date-time"
          },
          "lastSeen": {
            "type": "string",
            "format": "date-time"
          },
          "count": {
            "type": "integer",
            "format": "int64"
          },
          "sources": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/Source"
            },
            "x-ms-identifiers": []
          },
          "recent": {
            "type": "boolean"
          }
        }
      },
      "ObservedLocation": {
        "type": "object",
        "description": "ObservedLocation",
        "properties": {
          "value": {
            "$ref": "#/definitions/Location"
          },
          "firstSeen": {
            "type": "string",
            "format": "date-time"
          },
          "lastSeen": {
            "type": "string",
            "format": "date-time"
          },
          "count": {
            "type": "integer",
            "format": "int64"
          },
          "recent": {
            "type": "boolean"
          },
          "sources": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/Source"
            },
            "x-ms-identifiers": []
          }
        }
      },
      "ObservedLong": {
        "type": "object",
        "description": "ObservedLong",
        "properties": {
          "value": {
            "type": "integer",
            "format": "int64"
          },
          "firstSeen": {
            "type": "string",
            "format": "date-time"
          },
          "lastSeen": {
            "type": "string",
            "format": "date-time"
          },
          "count": {
            "type": "integer",
            "format": "int64"
          },
          "sources": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/Source"
            },
            "x-ms-identifiers": []
          },
          "recent": {
            "type": "boolean"
          }
        }
      },
      "ObservedPortState": {
        "type": "object",
        "description": "ObservedPortState",
        "properties": {
          "value": {
            "$ref": "#/definitions/ObservedPortStateValue"
          },
          "port": {
            "type": "integer",
            "format": "int32"
          },
          "firstSeen": {
            "type": "string",
            "format": "date-time"
          },
          "lastSeen": {
            "type": "string",
            "format": "date-time"
          },
          "count": {
            "type": "integer",
            "format": "int64"
          },
          "recent": {
            "type": "boolean"
          }
        }
      },
      "ObservedPortStateValue": {
        "type": "string",
        "enum": [
          "open",
          "closed",
          "filtered"
        ],
        "x-ms-enum": {
          "name": "ObservedPortStateValue",
          "modelAsString": true
        }
      },
      "ObservedString": {
        "type": "object",
        "description": "ObservedString",
        "properties": {
          "value": {
            "type": "string"
          },
          "firstSeen": {
            "type": "string",
            "format": "date-time"
          },
          "lastSeen": {
            "type": "string",
            "format": "date-time"
          },
          "count": {
            "type": "integer",
            "format": "int64"
          },
          "sources": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/Source"
            },
            "x-ms-identifiers": []
          },
          "recent": {
            "type": "boolean"
          }
        }
      },
      "PageAsset": {
        "type": "object",
        "description": "PageAsset",
        "properties": {
          "url": {
            "type": "string"
          },
          "httpMethod": {
            "type": "string"
          },
          "service": {
            "type": "string"
          },
          "ipAddresses": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/ObservedString"
            },
            "x-ms-identifiers": []
          },
          "successful": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/ObservedBoolean"
            },
            "x-ms-identifiers": []
          },
          "httpResponseCodes": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/ObservedInteger"
            },
            "x-ms-identifiers": []
          },
          "httpResponseMessages": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/ObservedString"
            },
            "x-ms-identifiers": []
          },
          "responseTimes": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/ObservedLong"
            },
            "x-ms-identifiers": []
          },
          "frames": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/ObservedBoolean"
            },
            "x-ms-identifiers": []
          },
          "windows": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/ObservedBoolean"
            },
            "x-ms-identifiers": []
          },
          "nonHtmlFrames": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/ObservedBoolean"
            },
            "x-ms-identifiers": []
          },
          "undirectedContent": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/ObservedBoolean"
            },
            "x-ms-identifiers": []
          },
          "contentTypes": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/ObservedString"
            },
            "x-ms-identifiers": []
          },
          "contentLengths": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/ObservedLong"
            },
            "x-ms-identifiers": []
          },
          "windowNames": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/ObservedString"
            },
            "x-ms-identifiers": []
          },
          "charsets": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/ObservedString"
            },
            "x-ms-identifiers": []
          },
          "titles": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/ObservedString"
            },
            "x-ms-identifiers": []
          },
          "languages": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/ObservedString"
            },
            "x-ms-identifiers": []
          },
          "responseHeaders": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/ObservedHeader"
            },
            "x-ms-identifiers": []
          },
          "cookies": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/Cookie"
            },
            "x-ms-identifiers": []
          },
          "webComponents": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/WebComponent"
            },
            "x-ms-identifiers": []
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/Attribute"
            },
            "x-ms-identifiers": []
          },
          "assetSecurityPolicies": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/AssetSecurityPolicy"
            },
            "x-ms-identifiers": []
          },
          "responseBodyMinhashSignatures": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/ObservedIntegers"
            },
            "x-ms-identifiers": []
          },
          "fullDomMinhashSignatures": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/ObservedIntegers"
            },
            "x-ms-identifiers": []
          },
          "responseBodyHashSignatures": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/ObservedString"
            },
            "x-ms-identifiers": []
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/ObservedString"
            },
            "x-ms-identifiers": []
          },
          "sslCerts": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/SslCertAsset"
            },
            "x-ms-identifiers": []
          },
          "sources": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/Source"
            },
            "x-ms-identifiers": []
          },
          "firstSeen": {
            "type": "string",
            "format": "date-time"
          },
          "lastSeen": {
            "type": "string",
            "format": "date-time"
          },
          "count": {
            "type": "integer",
            "format": "int64"
          },
          "cause": {
            "$ref": "#/definitions/PageCause"
          },
          "referrer": {
            "type": "string"
          },
          "redirectUrls": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/ObservedString"
            },
            "x-ms-identifiers": []
          },
          "redirectType": {
            "$ref": "#/definitions/PageAssetRedirectType"
          },
          "finalUrls": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/ObservedString"
            },
            "x-ms-identifiers": []
          },
          "finalResponseCodes": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/ObservedInteger"
            },
            "x-ms-identifiers": []
          },
          "parkedPage": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/ObservedBoolean"
            },
            "x-ms-identifiers": []
          },
          "resourceUrls": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/ResourceUrl"
            },
            "x-ms-identifiers": []
          },
          "guids": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/GuidPair"
            },
            "x-ms-identifiers": []
          },
          "finalIpAddresses": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/ObservedString"
            },
            "x-ms-identifiers": []
          },
          "asns": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/ObservedLong"
            },
            "x-ms-identifiers": []
          },
          "ipBlocks": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/IpBlock"
            },
            "x-ms-identifiers": []
          },
          "finalAsns": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/ObservedLong"
            },
            "x-ms-identifiers": []
          },
          "finalIpBlocks": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/IpBlock"
            },
            "x-ms-identifiers": []
          },
          "responseBodies": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/ObservedString"
            },
            "x-ms-identifiers": []
          },
          "domainAsset": {
            "$ref": "#/definitions/DomainAsset"
          },
          "rootUrl": {
            "$ref": "#/definitions/ObservedBoolean"
          },
          "isRootUrl": {
            "type": "boolean"
          },
          "location": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/ObservedLocation"
            },
            "x-ms-identifiers": []
          },
          "services": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/Service"
            },
            "x-ms-identifiers": []
          },
          "siteStatus": {
            "type": "string"
          },
          "cnames": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/ObservedString"
            },
            "x-ms-identifiers": []
          },
          "cdns": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/ObservedString"
            },
            "x-ms-identifiers": []
          },
          "host": {
            "type": "string"
          },
          "domain": {
            "type": "string"
          },
          "sslServerConfig": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/SslServerConfig"
            },
            "x-ms-identifiers": []
          },
          "gdprAssetSecurityPolicies": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/AssetSecurityPolicy"
            },
            "x-ms-identifiers": []
          },
          "ipv4": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/ObservedBoolean"
            },
            "x-ms-identifiers": []
          },
          "ipv6": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/ObservedBoolean"
            },
            "x-ms-identifiers": []
          }
        },
        "allOf": [
          {
            "$ref": "#/definitions/InventoryAsset"
          }
        ]
      },
      "PageAssetRedirectType": {
        "type": "string",
        "enum": [
          "httpHeader",
          "metaRefresh",
          "javascript",
          "final"
        ],
        "x-ms-enum": {
          "name": "PageAssetRedirectType",
          "modelAsString": true
        }
      },
      "PageAssetResponse": {
        "type": "object",
        "properties": {
          "asset": {
            "$ref": "#/definitions/PageAsset"
          }
        },
        "required": [
          "asset"
        ],
        "allOf": [
          {
            "$ref": "#/definitions/AssetResponse"
          }
        ],
        "x-ms-discriminator-value": "page"
      },
      "PageAssetResponseItem": {
        "type": "object",
        "properties": {
          "asset": {
            "$ref": "#/definitions/PageAsset"
          }
        },
        "required": [
          "asset"
        ],
        "allOf": [
          {
            "$ref": "#/definitions/AssetResponseItem"
          }
        ],
        "x-ms-discriminator-value": "page"
      },
      "PageCause": {
        "type": "object",
        "description": "PageCause",
        "properties": {
          "cause": {
            "type": "string"
          },
          "causeElementXPath": {
            "type": "string"
          },
          "location": {
            "type": "string"
          },
          "possibleMatches": {
            "type": "integer",
            "format": "int32"
          },
          "loopDetected": {
            "type": "boolean"
          },
          "version": {
            "type": "integer",
            "format": "int32"
          },
          "domChangeIndex": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "Port": {
        "type": "object",
        "description": "Port",
        "properties": {
          "port": {
            "type": "integer",
            "format": "int32"
          },
          "firstSeen": {
            "type": "string",
            "format": "date-time"
          },
          "lastSeen": {
            "type": "string",
            "format": "date-time"
          },
          "count": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "ReportAssetSnapshotExportRequest": {
        "type": "object",
        "description": "ReportAssetSnapshotExportRequest",
        "properties": {
          "metric": {
            "type": "string",
            "description": "The metric to retrieve a snapshot for."
          },
          "fileName": {
            "type": "string",
            "description": "The filename of the exported file."
          },
          "columns": {
            "type": "array",
            "description": "The columns to include in the export",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "ReportAssetSnapshotRequest": {
        "type": "object",
        "description": "ReportAssetSnapshotRequest",
        "properties": {
          "metric": {
            "type": "string",
            "description": "The metric to retrieve a snapshot for."
          },
          "labelName": {
            "type": "string",
            "description": "The name of the label to retrieve a snapshot for."
          },
          "size": {
            "type": "integer",
            "format": "int32",
            "description": "The number of assets per page."
          },
          "page": {
            "type": "integer",
            "format": "int32",
            "description": "The page to retrieve."
          }
        }
      },
      "ReportAssetSnapshotResponse": {
        "type": "object",
        "description": "ReportAssetSnapshotResponse",
        "properties": {
          "displayName": {
            "type": "string",
            "description": "The name of the metric."
          },
          "metric": {
            "type": "string",
            "description": "The unique metric name."
          },
          "labelName": {
            "type": "string",
            "description": "The customer label that was filtered on, if one was provided."
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "description": "The last time this asset data was updated on this metric."
          },
          "description": {
            "type": "string",
            "description": "A description of what the metric represents."
          },
          "assets": {
            "$ref": "#/definitions/AssetPageResponse"
          }
        }
      },
      "ReportAssetSummaryRequest": {
        "type": "object",
        "description": "ReportAssetSummaryRequest",
        "properties": {
          "metricCategories": {
            "type": "array",
            "description": "Categories to retrieve risk reporting data for.",
            "items": {
              "type": "string"
            }
          },
          "metrics": {
            "type": "array",
            "description": "Metrics to retrieve risk reporting data for.",
            "items": {
              "type": "string"
            }
          },
          "filters": {
            "type": "array",
            "description": "Query filters to apply to the asset summary.",
            "items": {
              "type": "string"
            }
          },
          "groupBy": {
            "type": "string",
            "description": "A parameter to group the assets by (first level facet field), only used when the chosen summary identifier is filters."
          },
          "segmentBy": {
            "type": "string",
            "description": "A parameter to segment the assets by (second level facet field), only used when the chosen summary identifier is filters."
          },
          "labelName": {
            "type": "string",
            "description": "Currently unused."
          }
        }
      },
      "ReportAssetSummaryResponse": {
        "type": "object",
        "description": "ReportAssetSummaryResponse",
        "properties": {
          "assetSummaries": {
            "type": "array",
            "description": "The collection of asset summaries.",
            "items": {
              "$ref": "#/definitions/AssetSummaryResponse"
            },
            "x-ms-identifiers": []
          }
        }
      },
      "ReportBillableAssetBreakdown": {
        "type": "object",
        "description": "ReportBillableAssetBreakdown",
        "properties": {
          "kind": {
            "$ref": "#/definitions/ReportBillableAssetBreakdownKind",
            "description": "The kind of billable asset."
          },
          "count": {
            "type": "integer",
            "format": "int64",
            "description": "The number of assets of this type."
          }
        }
      },
      "ReportBillableAssetBreakdownKind": {
        "type": "string",
        "enum": [
          "domain",
          "host",
          "ipAddress"
        ],
        "x-ms-enum": {
          "name": "ReportBillableAssetBreakdownKind",
          "modelAsString": true
        }
      },
      "ReportBillableAssetSnapshotResponse": {
        "type": "object",
        "description": "ReportBillableAssetSnapshotResponse",
        "properties": {
          "date": {
            "type": "string",
            "format": "date",
            "description": "The date these assets were billed on."
          },
          "total": {
            "type": "integer",
            "format": "int64",
            "description": "The total number of billable assets for this date."
          },
          "assetBreakdown": {
            "type": "array",
            "description": "The breakdown of billable asset counts for each asset type.",
            "items": {
              "$ref": "#/definitions/ReportBillableAssetBreakdown"
            },
            "x-ms-identifiers": []
          }
        }
      },
      "ReportBillableAssetSummaryResponse": {
        "type": "object",
        "description": "ReportBillableAssetSummaryResponse",
        "properties": {
          "assetSummaries": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/ReportBillableAssetSnapshotResponse"
            },
            "x-ms-identifiers": []
          }
        }
      },
      "Reputation": {
        "type": "object",
        "description": "Reputation",
        "properties": {
          "listName": {
            "type": "string"
          },
          "threatType": {
            "type": "string"
          },
          "trusted": {
            "type": "boolean"
          },
          "cidr": {
            "type": "string"
          },
          "firstSeen": {
            "type": "string",
            "format": "date-time"
          },
          "lastSeen": {
            "type": "string",
            "format": "date-time"
          },
          "listUpdatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "recent": {
            "type": "boolean"
          }
        }
      },
      "ResourceGroupNameParameter": {
        "type": "object",
        "description": "ResourceGroupNameParameter",
        "properties": {
          "resourceGroupName": {
            "type": "string"
          }
        },
        "required": [
          "resourceGroupName"
        ]
      },
      "ResourceUrl": {
        "type": "object",
        "description": "ResourceUrl",
        "properties": {
          "url": {
            "type": "string"
          },
          "resources": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/DependentResource"
            },
            "x-ms-identifiers": []
          },
          "firstSeen": {
            "type": "string",
            "format": "date-time"
          },
          "lastSeen": {
            "type": "string",
            "format": "date-time"
          },
          "count": {
            "type": "integer",
            "format": "int64"
          },
          "recent": {
            "type": "boolean"
          }
        }
      },
      "SavedFilterPageResponse": {
        "type": "object",
        "description": "SavedFilterPageResponse",
        "properties": {
          "totalElements": {
            "type": "integer",
            "format": "int64",
            "description": "The total number of items available in the full result set."
          },
          "nextLink": {
            "type": "string",
            "description": "The link to access the next page of results.  Not set if at the end of the result set."
          },
          "value": {
            "type": "array",
            "description": "The items in the current page of results.",
            "items": {
              "$ref": "#/definitions/SavedFilterResponseItem"
            }
          }
        }
      },
      "SavedFilterRequest": {
        "type": "object",
        "description": "SavedFilterRequest",
        "properties": {
          "filter": {
            "type": "string",
            "description": "An expression on the resource type that selects the resources to be returned."
          },
          "description": {
            "type": "string",
            "description": "A human readable description of the saved filter."
          }
        },
        "required": [
          "filter",
          "description"
        ]
      },
      "SavedFilterResponse": {
        "type": "object",
        "description": "SavedFilterResponse",
        "properties": {
          "id": {
            "type": "string",
            "description": "The system generated unique id for the resource."
          },
          "name": {
            "type": "string",
            "description": "The caller provided unique name for the resource."
          },
          "displayName": {
            "type": "string",
            "description": "The name that can be used for display purposes."
          },
          "filter": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        }
      },
      "SavedFilterResponseItem": {
        "type": "object",
        "description": "SavedFilterResponse",
        "properties": {
          "statusCode": {
            "type": "number",
            "enum": [
              200
            ]
          },
          "id": {
            "type": "string",
            "description": "The system generated unique id for the resource."
          },
          "name": {
            "type": "string",
            "description": "The caller provided unique name for the resource."
          },
          "displayName": {
            "type": "string",
            "description": "The name that can be used for display purposes."
          },
          "filter": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        },
        "required": [
          "statusCode"
        ]
      },
      "ScanMetadata": {
        "type": "object",
        "description": "ScanMetadata",
        "properties": {
          "port": {
            "type": "integer",
            "format": "int32"
          },
          "bannerMetadata": {
            "type": "string"
          },
          "startScan": {
            "type": "string",
            "format": "date-time"
          },
          "endScan": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Service": {
        "type": "object",
        "description": "Service",
        "properties": {
          "scheme": {
            "type": "string"
          },
          "port": {
            "type": "integer",
            "format": "int32"
          },
          "webComponents": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/WebComponent"
            },
            "x-ms-identifiers": []
          },
          "sslCerts": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/SslCertAsset"
            },
            "x-ms-identifiers": []
          },
          "exceptions": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/ObservedString"
            },
            "x-ms-identifiers": []
          },
          "sources": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/Source"
            },
            "x-ms-identifiers": []
          },
          "firstSeen": {
            "type": "string",
            "format": "date-time"
          },
          "lastSeen": {
            "type": "string",
            "format": "date-time"
          },
          "count": {
            "type": "integer",
            "format": "int64"
          },
          "recent": {
            "type": "boolean"
          },
          "portStates": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/ObservedPortState"
            },
            "x-ms-identifiers": []
          }
        }
      },
      "SoaRecord": {
        "type": "object",
        "description": "SoaRecord",
        "properties": {
          "nameServer": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "firstSeen": {
            "type": "string",
            "format": "date-time"
          },
          "lastSeen": {
            "type": "string",
            "format": "date-time"
          },
          "count": {
            "type": "integer",
            "format": "int64"
          },
          "serialNumber": {
            "type": "integer",
            "format": "int64"
          },
          "recent": {
            "type": "boolean"
          }
        }
      },
      "Source": {
        "type": "object",
        "description": "Source",
        "properties": {
          "source": {
            "type": "string"
          },
          "firstSeen": {
            "type": "string",
            "format": "date-time"
          },
          "lastSeen": {
            "type": "string",
            "format": "date-time"
          },
          "count": {
            "type": "integer",
            "format": "int64"
          },
          "reason": {
            "type": "string"
          }
        }
      },
      "SslCertAsset": {
        "type": "object",
        "description": "SslCertAsset",
        "properties": {
          "sha1": {
            "type": "string"
          },
          "subjectCommonNames": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "organizations": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "organizationalUnits": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "issuerCommonNames": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "sigAlgName": {
            "type": "string"
          },
          "invalidAfter": {
            "type": "string",
            "format": "date-time"
          },
          "serialNumber": {
            "type": "string"
          },
          "subjectAlternativeNames": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "issuerAlternativeNames": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "sources": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/Source"
            },
            "x-ms-identifiers": []
          },
          "firstSeen": {
            "type": "string",
            "format": "date-time"
          },
          "lastSeen": {
            "type": "string",
            "format": "date-time"
          },
          "count": {
            "type": "integer",
            "format": "int64"
          },
          "invalidBefore": {
            "type": "string",
            "format": "date-time"
          },
          "keySize": {
            "type": "integer",
            "format": "int32"
          },
          "keyAlgorithm": {
            "type": "string"
          },
          "subjectLocality": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "subjectState": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "subjectCountry": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "issuerLocality": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "issuerState": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "issuerCountry": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "subjectOrganizations": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "subjectOrganizationalUnits": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "issuerOrganizations": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "issuerOrganizationalUnits": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "version": {
            "type": "integer",
            "format": "int32"
          },
          "certificateAuthority": {
            "type": "boolean"
          },
          "selfSigned": {
            "type": "boolean"
          },
          "sigAlgOid": {
            "type": "string"
          },
          "recent": {
            "type": "boolean"
          },
          "validationType": {
            "$ref": "#/definitions/SslCertAssetValidationType"
          }
        },
        "allOf": [
          {
            "$ref": "#/definitions/InventoryAsset"
          }
        ]
      },
      "SslCertAssetResponse": {
        "type": "object",
        "properties": {
          "asset": {
            "$ref": "#/definitions/SslCertAsset"
          }
        },
        "required": [
          "asset"
        ],
        "allOf": [
          {
            "$ref": "#/definitions/AssetResponse"
          }
        ],
        "x-ms-discriminator-value": "sslCert"
      },
      "SslCertAssetResponseItem": {
        "type": "object",
        "properties": {
          "asset": {
            "$ref": "#/definitions/SslCertAsset"
          }
        },
        "required": [
          "asset"
        ],
        "allOf": [
          {
            "$ref": "#/definitions/AssetResponseItem"
          }
        ],
        "x-ms-discriminator-value": "sslCert"
      },
      "SslCertAssetValidationType": {
        "type": "string",
        "enum": [
          "domainValidation",
          "organizationValidation",
          "extendedValidation"
        ],
        "x-ms-enum": {
          "name": "SslCertAssetValidationType",
          "modelAsString": true
        }
      },
      "SslServerConfig": {
        "type": "object",
        "description": "SslServerConfig",
        "properties": {
          "tlsVersions": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "cipherSuites": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "firstSeen": {
            "type": "string",
            "format": "date-time"
          },
          "lastSeen": {
            "type": "string",
            "format": "date-time"
          },
          "count": {
            "type": "integer",
            "format": "int64"
          },
          "sources": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/Source"
            },
            "x-ms-identifiers": []
          }
        }
      },
      "SubResourceIntegrityCheck": {
        "type": "object",
        "description": "SubResourceIntegrityCheck",
        "properties": {
          "violation": {
            "type": "boolean"
          },
          "firstSeen": {
            "type": "string",
            "format": "date-time"
          },
          "lastSeen": {
            "type": "string",
            "format": "date-time"
          },
          "count": {
            "type": "integer",
            "format": "int64"
          },
          "causePageUrl": {
            "type": "string"
          },
          "crawlGuid": {
            "type": "string"
          },
          "pageGuid": {
            "type": "string"
          },
          "resourceGuid": {
            "type": "string"
          },
          "expectedHash": {
            "type": "string"
          }
        }
      },
      "SubscriptionIdParameter": {
        "type": "object",
        "description": "SubscriptionIdParameter",
        "properties": {
          "subscriptionId": {
            "type": "string"
          }
        },
        "required": [
          "subscriptionId"
        ]
      },
      "TaskPageResponse": {
        "type": "object",
        "description": "TaskPageResponse",
        "properties": {
          "totalElements": {
            "type": "integer",
            "format": "int64",
            "description": "The total number of items available in the full result set."
          },
          "nextLink": {
            "type": "string",
            "description": "The link to access the next page of results.  Not set if at the end of the result set."
          },
          "value": {
            "type": "array",
            "description": "The items in the current page of results.",
            "items": {
              "$ref": "#/definitions/TaskResponseItem"
            }
          }
        }
      },
      "TaskPhase": {
        "type": "string",
        "enum": [
          "running",
          "polling",
          "complete"
        ],
        "x-ms-enum": {
          "name": "TaskPhase",
          "modelAsString": true
        }
      },
      "TaskResponse": {
        "type": "object",
        "description": "TaskResponse",
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique identifier of the task."
          },
          "startedAt": {
            "type": "string",
            "format": "date-time",
            "description": "The time the task started."
          },
          "completedAt": {
            "type": "string",
            "format": "date-time",
            "description": "The time the task completed."
          },
          "lastPolledAt": {
            "type": "string",
            "format": "date-time",
            "description": "The last time the status of the task was updated."
          },
          "state": {
            "$ref": "#/definitions/TaskState",
            "description": "The state the task is in."
          },
          "phase": {
            "$ref": "#/definitions/TaskPhase",
            "description": "The phase the task is in."
          },
          "reason": {
            "type": "string",
            "description": "The reason the task was moved into its current state, if the task wasn't completed."
          },
          "metadata": {
            "type": "object",
            "description": "Attributes unique to the task.  This differs by task type.",
            "properties": {}
          }
        }
      },
      "TaskResponseItem": {
        "type": "object",
        "description": "TaskResponse",
        "properties": {
          "statusCode": {
            "type": "number",
            "enum": [
              200
            ]
          },
          "id": {
            "type": "string",
            "description": "The unique identifier of the task."
          },
          "startedAt": {
            "type": "string",
            "format": "date-time",
            "description": "The time the task started."
          },
          "completedAt": {
            "type": "string",
            "format": "date-time",
            "description": "The time the task completed."
          },
          "lastPolledAt": {
            "type": "string",
            "format": "date-time",
            "description": "The last time the status of the task was updated."
          },
          "state": {
            "$ref": "#/definitions/TaskState",
            "description": "The state the task is in."
          },
          "phase": {
            "$ref": "#/definitions/TaskPhase",
            "description": "The phase the task is in."
          },
          "reason": {
            "type": "string",
            "description": "The reason the task was moved into its current state, if the task wasn't completed."
          },
          "metadata": {
            "type": "object",
            "description": "Attributes unique to the task.  This differs by task type.",
            "properties": {}
          }
        },
        "required": [
          "statusCode"
        ]
      },
      "TaskState": {
        "type": "string",
        "enum": [
          "pending",
          "running",
          "paused",
          "complete",
          "incomplete",
          "failed",
          "warning"
        ],
        "x-ms-enum": {
          "name": "TaskState",
          "modelAsString": true
        }
      },
      "ValidateResponse": {
        "type": "object",
        "description": "ValidateResponse",
        "properties": {
          "error": {
            "$ref": "#/definitions/ErrorDetail"
          }
        }
      },
      "Versions": {
        "type": "string",
        "description": "The Easm service version.",
        "enum": [
          "2023-03-01-preview"
        ],
        "x-ms-enum": {
          "name": "Versions",
          "modelAsString": true,
          "values": [
            {
              "name": "2023-03-01-preview",
              "value": "2023-03-01-preview",
              "description": "Version 2023-03-01-preview"
            }
          ]
        }
      },
      "WebComponent": {
        "type": "object",
        "description": "WebComponent",
        "properties": {
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "ruleId": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "firstSeen": {
            "type": "string",
            "format": "date-time"
          },
          "lastSeen": {
            "type": "string",
            "format": "date-time"
          },
          "count": {
            "type": "integer",
            "format": "int64"
          },
          "cve": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/Cve"
            },
            "x-ms-identifiers": []
          },
          "endOfLife": {
            "type": "integer",
            "format": "int64"
          },
          "recent": {
            "type": "boolean"
          },
          "ports": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/Port"
            },
            "x-ms-identifiers": []
          },
          "sources": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/Source"
            },
            "x-ms-identifiers": []
          },
          "service": {
            "type": "string"
          }
        }
      },
      "WorkspaceNameParameter": {
        "type": "object",
        "description": "WorkspaceNameParameter",
        "properties": {
          "workspaceName": {
            "type": "string"
          }
        },
        "required": [
          "workspaceName"
        ]
      },
      "uuid": {
        "type": "string"
      }
    },
    "parameters": {
      "AssetIdParameter": {
        "name": "assetId",
        "in": "path",
        "required": true,
        "type": "string",
        "x-ms-parameter-location": "method"
      },
      "Azure.Core.Foundations.ApiVersionParameter": {
        "name": "api-version",
        "in": "query",
        "description": "The API version to use for this operation.",
        "required": true,
        "type": "string",
        "minLength": 1,
        "x-ms-parameter-location": "method",
        "x-ms-client-name": "apiVersion"
      },
      "DataConnectionNameParameter": {
        "name": "dataConnectionName",
        "in": "path",
        "required": true,
        "type": "string",
        "x-ms-parameter-location": "method"
      },
      "DiscoGroupNameParameter": {
        "name": "groupName",
        "in": "path",
        "required": true,
        "type": "string",
        "x-ms-parameter-location": "method"
      },
      "DiscoTemplateIdParameter": {
        "name": "templateId",
        "in": "path",
        "required": true,
        "type": "string",
        "x-ms-parameter-location": "method"
      },
      "FilterParameter": {
        "name": "filter",
        "in": "query",
        "required": false,
        "type": "string",
        "x-ms-parameter-location": "method"
      },
      "MarkParameter": {
        "name": "mark",
        "in": "query",
        "required": false,
        "type": "string",
        "x-ms-parameter-location": "method"
      },
      "MaxPageSizeParameter": {
        "name": "maxpagesize",
        "in": "query",
        "required": false,
        "type": "integer",
        "format": "int32",
        "x-ms-parameter-location": "method"
      },
      "OrderByParameter": {
        "name": "orderby",
        "in": "query",
        "required": false,
        "type": "string",
        "x-ms-parameter-location": "method"
      },
      "RequiredFilterParameter": {
        "name": "filter",
        "in": "query",
        "required": true,
        "type": "string",
        "x-ms-parameter-location": "method"
      },
      "SavedFilterNameParameter": {
        "name": "filterName",
        "in": "path",
        "required": true,
        "type": "string",
        "x-ms-parameter-location": "method"
      },
      "SkipParameter": {
        "name": "skip",
        "in": "query",
        "required": false,
        "type": "integer",
        "format": "int32",
        "x-ms-parameter-location": "method"
      },
      "TaskIdParameter": {
        "name": "taskId",
        "in": "path",
        "required": true,
        "type": "string",
        "x-ms-parameter-location": "method"
      }
    }
  }
  