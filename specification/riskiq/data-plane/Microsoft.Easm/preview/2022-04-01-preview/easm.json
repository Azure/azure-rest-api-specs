{
  "swagger": "2.0",
  "info": {
    "description": "EASM discovers and maps your digital attack surface to provide an \"outside-in\" perspective using probes to discover assets. The assets are provided with detailed metadata associated, including vulnerabilities, configurations and web components, allowing customers to view and prioritize external risk. The EASM REST API enables you to develop clients that integrate with your application.",
    "title": "Azure EASM",
    "version": "2022-04-01-preview"
  },
  "x-ms-parameterized-host": {
    "hostTemplate": "{region}.easm.microsoft.com",
    "parameters": [
      {
        "$ref": "#/parameters/RegionParameter"
      }
    ]
  },
  "basePath": "/",
  "schemes": [
    "https"
  ],
  "paths": {
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/workspaces/{workspaceName}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/WorkspaceResponse"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "tags": [
          "Workspaces"
        ],
        "operationId": "Workspaces_Get",
        "summary": "Retrieve a workspace by workspaceName.",
        "x-ms-examples": {
          "Workspaces": {
            "$ref": "./examples/Workspaces_Get.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/workspaces/{workspaceName}/assets": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/FilterParameter"
          },
          {
            "$ref": "#/parameters/OrderByParameter"
          },
          {
            "$ref": "#/parameters/SkipParameter"
          },
          {
            "$ref": "#/parameters/MaxPageSizeParameter"
          },
          {
            "in": "query",
            "name": "mark",
            "required": false,
            "type": "string"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AssetPageResponse"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "tags": [
          "Assets"
        ],
        "operationId": "Assets_List",
        "summary": "Retrieve a list of assets for the provided search parameters.",
        "x-ms-examples": {
          "Assets": {
            "$ref": "./examples/Assets_List.json"
          }
        },
        "x-ms-pageable": {
          "itemName": "content",
          "nextLinkName": "nextLink"
        }
      },
      "patch": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/FilterParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AssetUpdateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TaskResponse"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "tags": [
          "Assets"
        ],
        "operationId": "Assets_Update",
        "summary": "Update labels on assets matching the provided filter.",
        "x-ms-examples": {
          "Assets": {
            "$ref": "./examples/Assets_Update.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/workspaces/{workspaceName}/assets/{assetId}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/AssetIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AssetResponse"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "tags": [
          "Assets"
        ],
        "operationId": "Assets_Get",
        "summary": "Retrieve an asset by assetId.",
        "x-ms-examples": {
          "Assets": {
            "$ref": "./examples/Assets_Get.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/workspaces/{workspaceName}/assets/{assetId}/links": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/AssetIdParameter"
          },
          {
            "$ref": "#/parameters/FilterParameter"
          },
          {
            "$ref": "#/parameters/SkipParameter"
          },
          {
            "$ref": "#/parameters/MaxPageSizeParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AssetPageResponse"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "tags": [
          "Assets"
        ],
        "operationId": "Assets_Links",
        "summary": "Retrieve linked asset details for the provided assetId.",
        "x-ms-examples": {
          "Assets": {
            "$ref": "./examples/Assets_Links.json"
          }
        },
        "x-ms-pageable": {
          "itemName": "content",
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/workspaces/{workspaceName}/assets:export": {
      "post": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/FilterParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TaskResponse"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "tags": [
          "Assets"
        ],
        "operationId": "Assets_Export",
        "summary": "Perform a background datasheet export of assets matching the provided filter.  The response contains the information of the running export task.",
        "x-ms-examples": {
          "Assets": {
            "$ref": "./examples/Assets_Export.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/workspaces/{workspaceName}/discoGroups": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/FilterParameter"
          },
          {
            "$ref": "#/parameters/SkipParameter"
          },
          {
            "$ref": "#/parameters/MaxPageSizeParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DiscoGroupPageResponse"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "tags": [
          "Disco Groups"
        ],
        "operationId": "DiscoGroups_List",
        "summary": "Retrieve a list of disco group for the provided search parameters.",
        "x-ms-examples": {
          "DiscoGroups": {
            "$ref": "./examples/DiscoGroups_List.json"
          }
        },
        "x-ms-pageable": {
          "itemName": "content",
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/workspaces/{workspaceName}/discoGroups/{discoGroupName}": {
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/DiscoGroupNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "tags": [
          "Disco Groups"
        ],
        "operationId": "DiscoGroups_Remove",
        "summary": "Remove a disco group with a given discoGroupName.",
        "x-ms-examples": {
          "DiscoGroups": {
            "$ref": "./examples/DiscoGroups_Remove.json"
          }
        }
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/DiscoGroupNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DiscoGroupResponse"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "tags": [
          "Disco Groups"
        ],
        "operationId": "DiscoGroups_Get",
        "summary": "Retrieve a disco group with a given discoGroupName.",
        "x-ms-examples": {
          "DiscoGroups": {
            "$ref": "./examples/DiscoGroups_Get.json"
          }
        }
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/DiscoGroupNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DiscoGroupRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DiscoGroupResponse"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "tags": [
          "Disco Groups"
        ],
        "operationId": "DiscoGroups_Put",
        "summary": "Create a disco group with a given discoGroupName.",
        "x-ms-examples": {
          "DiscoGroups": {
            "$ref": "./examples/DiscoGroups_Put.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/workspaces/{workspaceName}/discoGroups/{discoGroupName}/runs": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/DiscoGroupNameParameter"
          },
          {
            "$ref": "#/parameters/FilterParameter"
          },
          {
            "$ref": "#/parameters/SkipParameter"
          },
          {
            "$ref": "#/parameters/MaxPageSizeParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DiscoRunPageResponse"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "tags": [
          "Disco Groups"
        ],
        "operationId": "DiscoGroups_ListRuns",
        "summary": "Retrieve a collection of disco run results for a disco group with a given discoGroupName.",
        "x-ms-examples": {
          "DiscoGroups": {
            "$ref": "./examples/DiscoGroups_ListRuns.json"
          }
        },
        "x-ms-pageable": {
          "itemName": "content",
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/workspaces/{workspaceName}/discoGroups/{discoGroupName}:run": {
      "post": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/DiscoGroupNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "tags": [
          "Disco Groups"
        ],
        "operationId": "DiscoGroups_Run",
        "summary": "Run a disco group with a given discoGroupName.",
        "x-ms-examples": {
          "DiscoGroups": {
            "$ref": "./examples/DiscoGroups_Run.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/workspaces/{workspaceName}/discoTemplates": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/FilterParameter"
          },
          {
            "$ref": "#/parameters/SkipParameter"
          },
          {
            "$ref": "#/parameters/MaxPageSizeParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DiscoTemplatePageResponse"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "tags": [
          "Disco Templates"
        ],
        "operationId": "DiscoTemplates_List",
        "summary": "Retrieve a list of disco templates for the provided search parameters.",
        "x-ms-examples": {
          "DiscoTemplates": {
            "$ref": "./examples/DiscoTemplates_List.json"
          }
        },
        "x-ms-pageable": {
          "itemName": "content",
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/workspaces/{workspaceName}/discoTemplates/{discoTemplateId}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/DiscoTemplateIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DiscoTemplateResponse"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "tags": [
          "Disco Templates"
        ],
        "operationId": "DiscoTemplates_Get",
        "summary": "Retrieve a disco template with a given discoTemplateId.",
        "x-ms-examples": {
          "DiscoTemplates": {
            "$ref": "./examples/DiscoTemplates_Get.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/workspaces/{workspaceName}/reports/assets:snapshot": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ReportAssetSnapshotRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ReportAssetSnapshotResponse"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "tags": [
          "Reports"
        ],
        "operationId": "Reports_Snapshot",
        "summary": "Retrieve the most recent snapshot of asset summary values for the snapshot request.",
        "x-ms-examples": {
          "Reports": {
            "$ref": "./examples/Reports_Snapshot.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/workspaces/{workspaceName}/reports/assets:summarize": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ReportAssetSummaryRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ReportAssetSummaryResponse"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "tags": [
          "Reports"
        ],
        "operationId": "Reports_Summarize",
        "summary": "Retrieve asset summary details for the summary request.",
        "x-ms-examples": {
          "Reports": {
            "$ref": "./examples/Reports_Summarize.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/workspaces/{workspaceName}/savedFilters": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/FilterParameter"
          },
          {
            "$ref": "#/parameters/SkipParameter"
          },
          {
            "$ref": "#/parameters/MaxPageSizeParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SavedFilterPageResponse"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "tags": [
          "Saved Filters"
        ],
        "operationId": "SavedFilters_List",
        "summary": "Retrieve a list of saved filters for the provided search parameters.",
        "x-ms-examples": {
          "SavedFilters": {
            "$ref": "./examples/SavedFilters_List.json"
          }
        },
        "x-ms-pageable": {
          "itemName": "content",
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/workspaces/{workspaceName}/savedFilters/{savedFilterName}": {
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SavedFilterNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "tags": [
          "Saved Filters"
        ],
        "operationId": "SavedFilters_Remove",
        "summary": "Remove a saved filter with a given savedFilterName.",
        "x-ms-examples": {
          "SavedFilters": {
            "$ref": "./examples/SavedFilters_Remove.json"
          }
        }
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SavedFilterNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SavedFilterResponse"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "tags": [
          "Saved Filters"
        ],
        "operationId": "SavedFilters_Get",
        "summary": "Retrieve a saved filter by savedFilterName.",
        "x-ms-examples": {
          "SavedFilters": {
            "$ref": "./examples/SavedFilters_Get.json"
          }
        }
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SavedFilterNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SavedFilterRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SavedFilterResponse"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "tags": [
          "Saved Filters"
        ],
        "operationId": "SavedFilters_Put",
        "summary": "Create a saved filter with a given savedFilterName.",
        "x-ms-examples": {
          "SavedFilters": {
            "$ref": "./examples/SavedFilters_Put.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/workspaces/{workspaceName}/tasks": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/FilterParameter"
          },
          {
            "$ref": "#/parameters/SkipParameter"
          },
          {
            "$ref": "#/parameters/MaxPageSizeParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TaskPageResponse"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "tags": [
          "Tasks"
        ],
        "operationId": "Tasks_List",
        "summary": "Retrieve a list of tasks for the provided search parameters.",
        "x-ms-examples": {
          "Tasks": {
            "$ref": "./examples/Tasks_List.json"
          }
        },
        "x-ms-pageable": {
          "itemName": "content",
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/workspaces/{workspaceName}/tasks/{taskId}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/TaskIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TaskResponse"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "tags": [
          "Tasks"
        ],
        "operationId": "Tasks_Get",
        "summary": "Retrieve a task by taskId.",
        "x-ms-examples": {
          "Tasks": {
            "$ref": "./examples/Tasks_Get.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/workspaces/{workspaceName}/tasks/{taskId}:cancel": {
      "post": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/TaskIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TaskResponse"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "tags": [
          "Tasks"
        ],
        "operationId": "Tasks_Cancel",
        "summary": "Cancel a task by taskId.",
        "x-ms-examples": {
          "Tasks": {
            "$ref": "./examples/Tasks_Cancel.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/workspaces/{workspaceName}/tasks/{taskId}:download": {
      "post": {
        "produces": [
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/TaskIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "format": "binary",
              "type": "string"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "tags": [
          "Tasks"
        ],
        "operationId": "Tasks_Download",
        "summary": "Download task data for the provided taskId.",
        "x-ms-examples": {
          "Tasks": {
            "$ref": "./examples/Tasks_Download.json"
          }
        }
      }
    }
  },
  "definitions": {
    "AlexaInfo": {
      "properties": {
        "alexaRank": {
          "format": "int64",
          "type": "integer"
        },
        "category": {
          "type": "string"
        },
        "count": {
          "format": "int64",
          "type": "integer"
        },
        "firstSeen": {
          "format": "date-time",
          "type": "string"
        },
        "lastSeen": {
          "format": "date-time",
          "type": "string"
        },
        "recent": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "AsAsset": {
      "properties": {
        "adminContacts": {
          "items": {
            "$ref": "#/definitions/ObservedString"
          },
          "type": "array"
        },
        "adminNames": {
          "items": {
            "$ref": "#/definitions/ObservedString"
          },
          "type": "array"
        },
        "adminOrgs": {
          "items": {
            "$ref": "#/definitions/ObservedString"
          },
          "type": "array"
        },
        "adminPhones": {
          "items": {
            "$ref": "#/definitions/ObservedString"
          },
          "type": "array"
        },
        "asNames": {
          "items": {
            "$ref": "#/definitions/ObservedString"
          },
          "type": "array"
        },
        "asn": {
          "format": "int64",
          "type": "integer"
        },
        "count": {
          "format": "int64",
          "type": "integer"
        },
        "countries": {
          "items": {
            "$ref": "#/definitions/ObservedString"
          },
          "type": "array"
        },
        "detailedFromWhoisAt": {
          "format": "date-time",
          "type": "string"
        },
        "firstSeen": {
          "format": "date-time",
          "type": "string"
        },
        "lastSeen": {
          "format": "date-time",
          "type": "string"
        },
        "orgIds": {
          "items": {
            "$ref": "#/definitions/ObservedString"
          },
          "type": "array"
        },
        "orgNames": {
          "items": {
            "$ref": "#/definitions/ObservedString"
          },
          "type": "array"
        },
        "registrantContacts": {
          "items": {
            "$ref": "#/definitions/ObservedString"
          },
          "type": "array"
        },
        "registrantNames": {
          "items": {
            "$ref": "#/definitions/ObservedString"
          },
          "type": "array"
        },
        "registrantPhones": {
          "items": {
            "$ref": "#/definitions/ObservedString"
          },
          "type": "array"
        },
        "registrarCreatedAt": {
          "items": {
            "$ref": "#/definitions/ObservedLong"
          },
          "type": "array"
        },
        "registrarNames": {
          "items": {
            "$ref": "#/definitions/ObservedString"
          },
          "type": "array"
        },
        "registrarUpdatedAt": {
          "items": {
            "$ref": "#/definitions/ObservedLong"
          },
          "type": "array"
        },
        "registries": {
          "items": {
            "$ref": "#/definitions/ObservedString"
          },
          "type": "array"
        },
        "sources": {
          "items": {
            "$ref": "#/definitions/Source"
          },
          "type": "array"
        },
        "technicalContacts": {
          "items": {
            "$ref": "#/definitions/ObservedString"
          },
          "type": "array"
        },
        "technicalNames": {
          "items": {
            "$ref": "#/definitions/ObservedString"
          },
          "type": "array"
        },
        "technicalOrgs": {
          "items": {
            "$ref": "#/definitions/ObservedString"
          },
          "type": "array"
        },
        "technicalPhones": {
          "items": {
            "$ref": "#/definitions/ObservedString"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "AssetId": {
      "description": "The list of excludes used for the disco group runs, aka assets to exclude from the discovery algorithm.",
      "properties": {
        "displayName": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "kind": {
          "enum": [
            "as",
            "contact",
            "domain",
            "host",
            "ipAddress",
            "ipBlock",
            "page",
            "sslCert"
          ],
          "type": "string",
          "x-ms-enum": {
            "modelAsString": true,
            "name": "assetIdKind"
          }
        },
        "name": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "AssetLabelRequest": {
      "properties": {
        "transfers": {
          "enum": [
            "AS",
            "CONTACT",
            "DOMAIN",
            "HOST",
            "IP_ADDRESS",
            "IP_BLOCK",
            "PAGE",
            "SSL_CERT"
          ],
          "type": "string",
          "x-ms-enum": {
            "modelAsString": true,
            "name": "assetLabelRequestTransfers"
          }
        },
        "values": {
          "additionalProperties": {
            "type": "boolean"
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "AssetPageResponse": {
      "properties": {
        "content": {
          "items": {
            "$ref": "#/definitions/AssetResponse"
          },
          "type": "array"
        },
        "first": {
          "type": "boolean"
        },
        "last": {
          "type": "boolean"
        },
        "mark": {
          "type": "string"
        },
        "nextLink": {
          "type": "string"
        },
        "number": {
          "format": "int32",
          "type": "integer"
        },
        "numberOfElements": {
          "format": "int32",
          "type": "integer"
        },
        "size": {
          "format": "int32",
          "type": "integer"
        },
        "totalElements": {
          "format": "int64",
          "type": "integer"
        },
        "totalPages": {
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "AssetResponse": {
      "properties": {
        "auditTrail": {
          "items": {
            "$ref": "#/definitions/AuditTrailItem"
          },
          "type": "array"
        },
        "createdDate": {
          "format": "date-time",
          "type": "string"
        },
        "discoGroup": {
          "$ref": "#/definitions/DiscoGroupResponse"
        },
        "discoRun": {
          "$ref": "#/definitions/DiscoRunResponse"
        },
        "displayName": {
          "type": "string"
        },
        "externalId": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "kind": {
          "enum": [
            "as",
            "contact",
            "domain",
            "host",
            "ipAddress",
            "ipBlock",
            "page",
            "sslCert"
          ],
          "type": "string",
          "x-ms-enum": {
            "modelAsString": true,
            "name": "assetResponseKind"
          }
        },
        "labels": {
          "items": {
            "$ref": "#/definitions/LabelResource"
          },
          "type": "array"
        },
        "name": {
          "type": "string"
        },
        "reason": {
          "type": "string"
        },
        "state": {
          "enum": [
            "candidate",
            "confirmed",
            "dismissed",
            "candidateInvestigate",
            "associatedPartner",
            "associatedThirdparty",
            "archived"
          ],
          "type": "string",
          "x-ms-enum": {
            "modelAsString": true,
            "name": "assetResponseState"
          }
        },
        "updatedDate": {
          "format": "date-time",
          "type": "string"
        },
        "uuid": {
          "format": "uuid",
          "type": "string"
        },
        "wildcard": {
          "type": "boolean"
        }
      },
      "type": "object",
      "discriminator": "kind",
      "required": [
        "kind"
      ]
    },
    "AssetSecurityPolicy": {
      "properties": {
        "count": {
          "format": "int64",
          "type": "integer"
        },
        "description": {
          "type": "string"
        },
        "firstSeen": {
          "format": "date-time",
          "type": "string"
        },
        "isAffected": {
          "type": "boolean"
        },
        "lastSeen": {
          "format": "date-time",
          "type": "string"
        },
        "policyName": {
          "type": "string"
        },
        "recent": {
          "type": "boolean"
        },
        "sources": {
          "items": {
            "$ref": "#/definitions/Source"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "AssetSummaryResponse": {
      "properties": {
        "count": {
          "format": "int64",
          "type": "integer"
        },
        "description": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        },
        "filter": {
          "type": "string"
        },
        "labelName": {
          "type": "string"
        },
        "link": {
          "type": "string"
        },
        "metric": {
          "type": "string"
        },
        "metricCategory": {
          "type": "string"
        },
        "updatedAt": {
          "format": "date-time",
          "type": "string"
        }
      },
      "type": "object"
    },
    "AssetUpdateRequest": {
      "properties": {
        "externalId": {
          "type": "string"
        },
        "labels": {
          "$ref": "#/definitions/AssetLabelRequest"
        },
        "state": {
          "enum": [
            "candidate",
            "confirmed",
            "dismissed",
            "candidateInvestigate",
            "associatedPartner",
            "associatedThirdparty"
          ],
          "type": "string",
          "x-ms-enum": {
            "modelAsString": true,
            "name": "assetUpdateRequestState"
          }
        }
      },
      "type": "object"
    },
    "Attribute": {
      "properties": {
        "attributeType": {
          "type": "string"
        },
        "attributeValue": {
          "type": "string"
        },
        "count": {
          "format": "int64",
          "type": "integer"
        },
        "firstSeen": {
          "format": "date-time",
          "type": "string"
        },
        "lastSeen": {
          "format": "date-time",
          "type": "string"
        },
        "recent": {
          "type": "boolean"
        },
        "sources": {
          "items": {
            "$ref": "#/definitions/Source"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "AuditTrailItem": {
      "properties": {
        "displayName": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "kind": {
          "enum": [
            "as",
            "contact",
            "domain",
            "host",
            "ipAddress",
            "ipBlock",
            "page",
            "sslCert"
          ],
          "type": "string",
          "x-ms-enum": {
            "modelAsString": true,
            "name": "auditTrailItemKind"
          }
        },
        "name": {
          "type": "string"
        },
        "reason": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "Banner": {
      "properties": {
        "banner": {
          "type": "string"
        },
        "bannerMetadata": {
          "type": "string"
        },
        "count": {
          "format": "int64",
          "type": "integer"
        },
        "firstSeen": {
          "format": "date-time",
          "type": "string"
        },
        "lastSeen": {
          "format": "date-time",
          "type": "string"
        },
        "port": {
          "format": "int32",
          "type": "integer"
        },
        "recent": {
          "type": "boolean"
        },
        "scanType": {
          "type": "string"
        },
        "sha256": {
          "type": "string"
        },
        "sources": {
          "items": {
            "$ref": "#/definitions/Source"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "CVSS3Summary": {
      "properties": {
        "attackComplexity": {
          "type": "string"
        },
        "attackVector": {
          "type": "string"
        },
        "availabilityImpact": {
          "type": "string"
        },
        "baseScore": {
          "format": "float",
          "type": "number"
        },
        "baseSeverity": {
          "type": "string"
        },
        "confidentialityImpact": {
          "type": "string"
        },
        "exploitCodeMaturity": {
          "type": "string"
        },
        "exploitabilityScore": {
          "format": "float",
          "type": "number"
        },
        "impactScore": {
          "format": "float",
          "type": "number"
        },
        "integrityImpact": {
          "type": "string"
        },
        "privilegesRequired": {
          "type": "string"
        },
        "remediationLevel": {
          "type": "string"
        },
        "reportConfidence": {
          "type": "string"
        },
        "scope": {
          "type": "string"
        },
        "userInteraction": {
          "type": "string"
        },
        "vectorString": {
          "type": "string"
        },
        "version": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "ContactAsset": {
      "properties": {
        "count": {
          "format": "int64",
          "type": "integer"
        },
        "email": {
          "type": "string"
        },
        "firstSeen": {
          "format": "date-time",
          "type": "string"
        },
        "lastSeen": {
          "format": "date-time",
          "type": "string"
        },
        "names": {
          "items": {
            "$ref": "#/definitions/ObservedString"
          },
          "type": "array"
        },
        "organizations": {
          "items": {
            "$ref": "#/definitions/ObservedString"
          },
          "type": "array"
        },
        "sources": {
          "items": {
            "$ref": "#/definitions/Source"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "Cookie": {
      "properties": {
        "cookieDomain": {
          "type": "string"
        },
        "cookieExpiryDate": {
          "format": "date-time",
          "type": "string"
        },
        "cookieName": {
          "type": "string"
        },
        "count": {
          "format": "int64",
          "type": "integer"
        },
        "firstSeen": {
          "format": "date-time",
          "type": "string"
        },
        "lastSeen": {
          "format": "date-time",
          "type": "string"
        },
        "recent": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "Cve": {
      "properties": {
        "cvss3Summary": {
          "$ref": "#/definitions/CVSS3Summary"
        },
        "cvssScore": {
          "format": "float",
          "type": "number"
        },
        "cweId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "DependentResource": {
      "properties": {
        "host": {
          "type": "string"
        },
        "cached": {
          "type": "boolean"
        },
        "contentType": {
          "type": "string"
        },
        "count": {
          "format": "int64",
          "type": "integer"
        },
        "firstSeen": {
          "format": "date-time",
          "type": "string"
        },
        "firstSeenCrawlGuid": {
          "type": "string"
        },
        "firstSeenPageGuid": {
          "type": "string"
        },
        "firstSeenResourceGuid": {
          "type": "string"
        },
        "lastObservedActualSriHash": {
          "type": "string"
        },
        "lastObservedExpectedSriHash": {
          "type": "string"
        },
        "lastObservedValidation": {
          "format": "date-time",
          "type": "string"
        },
        "lastObservedViolation": {
          "format": "date-time",
          "type": "string"
        },
        "lastSeen": {
          "format": "date-time",
          "type": "string"
        },
        "lastSeenCrawlGuid": {
          "type": "string"
        },
        "lastSeenPageGuid": {
          "type": "string"
        },
        "lastSeenResourceGuid": {
          "type": "string"
        },
        "md5": {
          "type": "string"
        },
        "responseBodyMinhash": {
          "items": {
            "format": "int32",
            "type": "integer"
          },
          "type": "array"
        },
        "responseBodySize": {
          "format": "int64",
          "type": "integer"
        },
        "sha256": {
          "type": "string"
        },
        "sha384": {
          "type": "string"
        },
        "sha512": {
          "type": "string"
        },
        "sriChecks": {
          "items": {
            "$ref": "#/definitions/SubResourceIntegrityCheck"
          },
          "type": "array"
        },
        "url": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "DiscoGroupPageResponse": {
      "properties": {
        "content": {
          "items": {
            "$ref": "#/definitions/DiscoGroupResponse"
          },
          "type": "array"
        },
        "first": {
          "type": "boolean"
        },
        "last": {
          "type": "boolean"
        },
        "nextLink": {
          "type": "string"
        },
        "number": {
          "format": "int32",
          "type": "integer"
        },
        "numberOfElements": {
          "format": "int32",
          "type": "integer"
        },
        "size": {
          "format": "int32",
          "type": "integer"
        },
        "totalElements": {
          "format": "int64",
          "type": "integer"
        },
        "totalPages": {
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "DiscoGroupRequest": {
      "properties": {
        "description": {
          "description": "The description for a disco group.",
          "type": "string"
        },
        "excludes": {
          "description": "The list of excludes used for the disco group runs, aka assets to exclude from the discovery algorithm.",
          "items": {
            "$ref": "#/definitions/AssetId"
          },
          "type": "array"
        },
        "frequencyMilliseconds": {
          "description": "The frequency at which the disco group is supposed to be rerun in milliseconds.",
          "format": "int64",
          "type": "integer"
        },
        "seeds": {
          "description": "The list of seeds used for the disco group runs.",
          "items": {
            "$ref": "#/definitions/AssetId"
          },
          "type": "array"
        },
        "tier": {
          "description": "The tier for the disco group which will affect the algorithm used for the disco runs in this group.",
          "type": "string"
        }
      },
      "required": [
        "frequencyMilliseconds"
      ],
      "type": "object"
    },
    "DiscoGroupResponse": {
      "properties": {
        "createdDate": {
          "description": "The date for the disco group was created.",
          "format": "date-time",
          "type": "string"
        },
        "description": {
          "description": "The description for a disco group.",
          "type": "string"
        },
        "displayName": {
          "type": "string"
        },
        "excludes": {
          "description": "The list of excludes used for the disco group runs, aka assets to exclude from the discovery algorithm.",
          "items": {
            "$ref": "#/definitions/AssetId"
          },
          "type": "array"
        },
        "frequencyMilliseconds": {
          "description": "The frequency at which the disco group is supposed to be rerun in milliseconds.",
          "format": "int64",
          "type": "integer"
        },
        "id": {
          "type": "string"
        },
        "latestRunDate": {
          "description": "The date for the latest run of this disco group, null if the group has never been run.",
          "format": "date-time",
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "seeds": {
          "description": "The list of seeds used for the disco group runs.",
          "items": {
            "$ref": "#/definitions/AssetId"
          },
          "type": "array"
        },
        "tier": {
          "description": "The tier for the disco group which will affect the algorithm used for the disco runs in this group.",
          "type": "string"
        },
        "totalAssetsFoundCount": {
          "description": "The total count of assets that were found for this disco group, aka that are labeled with this groups id at this time.",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "DiscoRunPageResponse": {
      "properties": {
        "content": {
          "items": {
            "$ref": "#/definitions/DiscoRunResponse"
          },
          "type": "array"
        },
        "first": {
          "type": "boolean"
        },
        "last": {
          "type": "boolean"
        },
        "nextLink": {
          "type": "string"
        },
        "number": {
          "format": "int32",
          "type": "integer"
        },
        "numberOfElements": {
          "format": "int32",
          "type": "integer"
        },
        "size": {
          "format": "int32",
          "type": "integer"
        },
        "totalElements": {
          "format": "int64",
          "type": "integer"
        },
        "totalPages": {
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "DiscoRunResponse": {
      "properties": {
        "completedDate": {
          "description": "The date for when the disco run was completed in the microservice.",
          "format": "date-time",
          "type": "string"
        },
        "excludes": {
          "description": "The list of excludes used for the disco run, aka assets to exclude from the discovery algorithm.",
          "items": {
            "$ref": "#/definitions/AssetId"
          },
          "type": "array"
        },
        "newAssetsFoundCount": {
          "description": "The count of the new assets that were found this disco run, aka that are labeled with this runs id at this time",
          "format": "int64",
          "type": "integer"
        },
        "seeds": {
          "description": "The list of seeds used for the disco run.",
          "items": {
            "$ref": "#/definitions/AssetId"
          },
          "type": "array"
        },
        "startedDate": {
          "description": "The date for when the disco run was actually started in the microservice.",
          "format": "date-time",
          "type": "string"
        },
        "state": {
          "description": "The State of the disco run",
          "enum": [
            "pending",
            "running",
            "completed",
            "failed"
          ],
          "type": "string",
          "x-ms-enum": {
            "modelAsString": true,
            "name": "discoRunResponseState"
          }
        },
        "submittedDate": {
          "description": "The date for when the disco run was created in the microservice.",
          "format": "date-time",
          "type": "string"
        },
        "tier": {
          "description": "The tier which will affect the algorithm used for the disco run.",
          "type": "string"
        },
        "totalAssetsFoundCount": {
          "description": "The total count of assets that were found this disco run.",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "DiscoTemplatePageResponse": {
      "properties": {
        "content": {
          "items": {
            "$ref": "#/definitions/DiscoTemplateResponse"
          },
          "type": "array"
        },
        "first": {
          "type": "boolean"
        },
        "last": {
          "type": "boolean"
        },
        "nextLink": {
          "type": "string"
        },
        "number": {
          "format": "int32",
          "type": "integer"
        },
        "numberOfElements": {
          "format": "int32",
          "type": "integer"
        },
        "size": {
          "format": "int32",
          "type": "integer"
        },
        "totalElements": {
          "format": "int64",
          "type": "integer"
        },
        "totalPages": {
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "DiscoTemplateResponse": {
      "properties": {
        "aliases": {
          "description": "The list of disco template name aliases.",
          "items": {
            "description": "The list of disco template name aliases.",
            "type": "string"
          },
          "type": "array"
        },
        "city": {
          "description": "The name of the city.",
          "type": "string"
        },
        "countryCode": {
          "description": "The country code.",
          "type": "string"
        },
        "displayName": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "industry": {
          "description": "The name of the industry.",
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "region": {
          "description": "The name of the region.",
          "type": "string"
        },
        "seeds": {
          "description": "The list of disco template seeds.",
          "items": {
            "$ref": "#/definitions/AssetId"
          },
          "type": "array"
        },
        "stateCode": {
          "description": "The state code.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "DomainAsset": {
      "properties": {
        "adminContacts": {
          "items": {
            "$ref": "#/definitions/ObservedString"
          },
          "type": "array"
        },
        "adminNames": {
          "items": {
            "$ref": "#/definitions/ObservedString"
          },
          "type": "array"
        },
        "adminOrgs": {
          "items": {
            "$ref": "#/definitions/ObservedString"
          },
          "type": "array"
        },
        "adminPhones": {
          "items": {
            "$ref": "#/definitions/ObservedString"
          },
          "type": "array"
        },
        "alexaInfos": {
          "items": {
            "$ref": "#/definitions/AlexaInfo"
          },
          "type": "array"
        },
        "count": {
          "format": "int64",
          "type": "integer"
        },
        "detailedFromWhoisAt": {
          "format": "date-time",
          "type": "string"
        },
        "domain": {
          "type": "string"
        },
        "domainStatuses": {
          "items": {
            "$ref": "#/definitions/ObservedString"
          },
          "type": "array"
        },
        "firstSeen": {
          "format": "date-time",
          "type": "string"
        },
        "lastSeen": {
          "format": "date-time",
          "type": "string"
        },
        "mailServers": {
          "items": {
            "$ref": "#/definitions/ObservedString"
          },
          "type": "array"
        },
        "nameServers": {
          "items": {
            "$ref": "#/definitions/ObservedString"
          },
          "type": "array"
        },
        "parkedDomain": {
          "items": {
            "$ref": "#/definitions/ObservedBoolean"
          },
          "type": "array"
        },
        "registrantContacts": {
          "items": {
            "$ref": "#/definitions/ObservedString"
          },
          "type": "array"
        },
        "registrantNames": {
          "items": {
            "$ref": "#/definitions/ObservedString"
          },
          "type": "array"
        },
        "registrantOrgs": {
          "items": {
            "$ref": "#/definitions/ObservedString"
          },
          "type": "array"
        },
        "registrantPhones": {
          "items": {
            "$ref": "#/definitions/ObservedString"
          },
          "type": "array"
        },
        "registrarCreatedAt": {
          "items": {
            "$ref": "#/definitions/ObservedLong"
          },
          "type": "array"
        },
        "registrarExpiresAt": {
          "items": {
            "$ref": "#/definitions/ObservedLong"
          },
          "type": "array"
        },
        "registrarIanaIds": {
          "items": {
            "$ref": "#/definitions/ObservedInteger"
          },
          "type": "array"
        },
        "registrarNames": {
          "items": {
            "$ref": "#/definitions/ObservedString"
          },
          "type": "array"
        },
        "registrarUpdatedAt": {
          "items": {
            "$ref": "#/definitions/ObservedLong"
          },
          "type": "array"
        },
        "soaRecords": {
          "items": {
            "$ref": "#/definitions/SoaRecord"
          },
          "type": "array"
        },
        "sources": {
          "items": {
            "$ref": "#/definitions/Source"
          },
          "type": "array"
        },
        "technicalContacts": {
          "items": {
            "$ref": "#/definitions/ObservedString"
          },
          "type": "array"
        },
        "technicalNames": {
          "items": {
            "$ref": "#/definitions/ObservedString"
          },
          "type": "array"
        },
        "technicalOrgs": {
          "items": {
            "$ref": "#/definitions/ObservedString"
          },
          "type": "array"
        },
        "technicalPhones": {
          "items": {
            "$ref": "#/definitions/ObservedString"
          },
          "type": "array"
        },
        "whoisId": {
          "format": "int64",
          "type": "integer"
        },
        "whoisServers": {
          "items": {
            "$ref": "#/definitions/ObservedString"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "ErrorDetail": {
      "description": "This is the top-level error object whose code matches the x-ms-error-code response header",
      "properties": {
        "code": {
          "description": "This is one of a server-defined set of error codes.",
          "type": "string"
        },
        "details": {
          "description": "This is an array of details about specific errors that led to this reported error.",
          "items": {
            "$ref": "#/definitions/ErrorDetail"
          },
          "type": "array"
        },
        "innererror": {
          "$ref": "#/definitions/InnerError"
        },
        "message": {
          "description": "This is a human-readable representation of the error.",
          "type": "string"
        },
        "target": {
          "description": "This is the error target.",
          "type": "string"
        }
      },
      "required": [
        "code",
        "message"
      ],
      "type": "object"
    },
    "ErrorResponse": {
      "properties": {
        "error": {
          "$ref": "#/definitions/ErrorDetail"
        }
      },
      "required": [
        "error"
      ],
      "type": "object"
    },
    "GuidPair": {
      "properties": {
        "crawlStateGuid": {
          "type": "string"
        },
        "loadDate": {
          "format": "date-time",
          "type": "string"
        },
        "pageGuid": {
          "type": "string"
        },
        "recent": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "HostAsset": {
      "properties": {
        "host": {
          "type": "string"
        },
        "asns": {
          "items": {
            "$ref": "#/definitions/ObservedLong"
          },
          "type": "array"
        },
        "attributes": {
          "items": {
            "$ref": "#/definitions/Attribute"
          },
          "type": "array"
        },
        "banners": {
          "items": {
            "$ref": "#/definitions/Banner"
          },
          "type": "array"
        },
        "childHosts": {
          "items": {
            "$ref": "#/definitions/ObservedString"
          },
          "type": "array"
        },
        "cnames": {
          "items": {
            "$ref": "#/definitions/ObservedString"
          },
          "type": "array"
        },
        "cookies": {
          "items": {
            "$ref": "#/definitions/Cookie"
          },
          "type": "array"
        },
        "count": {
          "format": "int64",
          "type": "integer"
        },
        "domain": {
          "type": "string"
        },
        "domainAsset": {
          "$ref": "#/definitions/DomainAsset"
        },
        "firstSeen": {
          "format": "date-time",
          "type": "string"
        },
        "headers": {
          "items": {
            "$ref": "#/definitions/ObservedHeader"
          },
          "type": "array"
        },
        "hostCore": {
          "$ref": "#/definitions/HostCore"
        },
        "ipAddresses": {
          "items": {
            "$ref": "#/definitions/ObservedString"
          },
          "type": "array"
        },
        "ipBlocks": {
          "items": {
            "$ref": "#/definitions/IpBlock"
          },
          "type": "array"
        },
        "ipv4": {
          "items": {
            "$ref": "#/definitions/ObservedBoolean"
          },
          "type": "array"
        },
        "ipv6": {
          "items": {
            "$ref": "#/definitions/ObservedBoolean"
          },
          "type": "array"
        },
        "isWildcard": {
          "items": {
            "$ref": "#/definitions/ObservedBoolean"
          },
          "type": "array"
        },
        "lastSeen": {
          "format": "date-time",
          "type": "string"
        },
        "location": {
          "items": {
            "$ref": "#/definitions/ObservedLocation"
          },
          "type": "array"
        },
        "mxRecord": {
          "items": {
            "$ref": "#/definitions/ObservedBoolean"
          },
          "type": "array"
        },
        "nsRecord": {
          "items": {
            "$ref": "#/definitions/ObservedBoolean"
          },
          "type": "array"
        },
        "nxdomain": {
          "items": {
            "$ref": "#/definitions/ObservedBoolean"
          },
          "type": "array"
        },
        "parentHosts": {
          "items": {
            "$ref": "#/definitions/ObservedString"
          },
          "type": "array"
        },
        "resourceUrls": {
          "items": {
            "$ref": "#/definitions/ResourceUrl"
          },
          "type": "array"
        },
        "responseBodies": {
          "items": {
            "$ref": "#/definitions/ObservedString"
          },
          "type": "array"
        },
        "scanMetadata": {
          "items": {
            "$ref": "#/definitions/ScanMetadata"
          },
          "type": "array"
        },
        "services": {
          "items": {
            "$ref": "#/definitions/Service"
          },
          "type": "array"
        },
        "sources": {
          "items": {
            "$ref": "#/definitions/Source"
          },
          "type": "array"
        },
        "sslCerts": {
          "items": {
            "$ref": "#/definitions/SslCertAsset"
          },
          "type": "array"
        },
        "sslServerConfig": {
          "items": {
            "$ref": "#/definitions/SslServerConfig"
          },
          "type": "array"
        },
        "webComponents": {
          "items": {
            "$ref": "#/definitions/WebComponent"
          },
          "type": "array"
        },
        "webserver": {
          "items": {
            "$ref": "#/definitions/ObservedBoolean"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "HostCore": {
      "properties": {
        "host": {
          "type": "string"
        },
        "alexaRank": {
          "format": "int32",
          "type": "integer"
        },
        "blacklistCauseCount": {
          "format": "int64",
          "type": "integer"
        },
        "blacklistCauseFirstSeen": {
          "format": "date-time",
          "type": "string"
        },
        "blacklistCauseLastSeen": {
          "format": "date-time",
          "type": "string"
        },
        "blacklistResourceCount": {
          "format": "int64",
          "type": "integer"
        },
        "blacklistResourceFirstSeen": {
          "format": "date-time",
          "type": "string"
        },
        "blacklistResourceLastSeen": {
          "format": "date-time",
          "type": "string"
        },
        "blacklistSequenceCount": {
          "format": "int64",
          "type": "integer"
        },
        "blacklistSequenceFirstSeen": {
          "format": "date-time",
          "type": "string"
        },
        "blacklistSequenceLastSeen": {
          "format": "date-time",
          "type": "string"
        },
        "count": {
          "format": "int64",
          "type": "integer"
        },
        "domain": {
          "type": "string"
        },
        "domainMalwareReputationScore": {
          "format": "int32",
          "type": "integer"
        },
        "domainPhishReputationScore": {
          "format": "int32",
          "type": "integer"
        },
        "domainReputationScore": {
          "format": "int32",
          "type": "integer"
        },
        "domainScamReputationScore": {
          "format": "int32",
          "type": "integer"
        },
        "domainSpamReputationScore": {
          "format": "int32",
          "type": "integer"
        },
        "firstSeen": {
          "format": "date-time",
          "type": "string"
        },
        "hostMalwareReputationScore": {
          "format": "int32",
          "type": "integer"
        },
        "hostPhishReputationScore": {
          "format": "int32",
          "type": "integer"
        },
        "hostReputationScore": {
          "format": "int32",
          "type": "integer"
        },
        "hostScamReputationScore": {
          "format": "int32",
          "type": "integer"
        },
        "hostSpamReputationScore": {
          "format": "int32",
          "type": "integer"
        },
        "lastSeen": {
          "format": "date-time",
          "type": "string"
        },
        "malwareCauseCount": {
          "format": "int64",
          "type": "integer"
        },
        "malwareResourceCount": {
          "format": "int64",
          "type": "integer"
        },
        "malwareSequenceCount": {
          "format": "int64",
          "type": "integer"
        },
        "phishCauseCount": {
          "format": "int64",
          "type": "integer"
        },
        "phishResourceCount": {
          "format": "int64",
          "type": "integer"
        },
        "phishSequenceCount": {
          "format": "int64",
          "type": "integer"
        },
        "scamCauseCount": {
          "format": "int64",
          "type": "integer"
        },
        "scamResourceCount": {
          "format": "int64",
          "type": "integer"
        },
        "scamSequenceCount": {
          "format": "int64",
          "type": "integer"
        },
        "spamCauseCount": {
          "format": "int64",
          "type": "integer"
        },
        "spamResourceCount": {
          "format": "int64",
          "type": "integer"
        },
        "spamSequenceCount": {
          "format": "int64",
          "type": "integer"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "InnerError": {
      "description": "This is an object containing more specific information than the current object about the error.",
      "properties": {
        "code": {
          "description": "This is a more specific error code than was provided by the containing error..",
          "type": "string"
        }
      },
      "type": "object"
    },
    "IpAddressAsset": {
      "properties": {
        "asns": {
          "items": {
            "$ref": "#/definitions/ObservedLong"
          },
          "type": "array"
        },
        "attributes": {
          "items": {
            "$ref": "#/definitions/Attribute"
          },
          "type": "array"
        },
        "banners": {
          "items": {
            "$ref": "#/definitions/Banner"
          },
          "type": "array"
        },
        "cookies": {
          "items": {
            "$ref": "#/definitions/Cookie"
          },
          "type": "array"
        },
        "count": {
          "format": "int64",
          "type": "integer"
        },
        "firstSeen": {
          "format": "date-time",
          "type": "string"
        },
        "headers": {
          "items": {
            "$ref": "#/definitions/ObservedHeader"
          },
          "type": "array"
        },
        "hosts": {
          "items": {
            "$ref": "#/definitions/ObservedString"
          },
          "type": "array"
        },
        "ipAddress": {
          "type": "string"
        },
        "ipBlocks": {
          "items": {
            "$ref": "#/definitions/IpBlock"
          },
          "type": "array"
        },
        "ipv4": {
          "type": "boolean"
        },
        "ipv6": {
          "type": "boolean"
        },
        "lastSeen": {
          "format": "date-time",
          "type": "string"
        },
        "location": {
          "items": {
            "$ref": "#/definitions/ObservedLocation"
          },
          "type": "array"
        },
        "mxRecord": {
          "items": {
            "$ref": "#/definitions/ObservedBoolean"
          },
          "type": "array"
        },
        "netRanges": {
          "items": {
            "$ref": "#/definitions/ObservedString"
          },
          "type": "array"
        },
        "nsRecord": {
          "items": {
            "$ref": "#/definitions/ObservedBoolean"
          },
          "type": "array"
        },
        "nxdomain": {
          "items": {
            "$ref": "#/definitions/ObservedBoolean"
          },
          "type": "array"
        },
        "reputations": {
          "items": {
            "$ref": "#/definitions/Reputation"
          },
          "type": "array"
        },
        "scanMetadata": {
          "items": {
            "$ref": "#/definitions/ScanMetadata"
          },
          "type": "array"
        },
        "services": {
          "items": {
            "$ref": "#/definitions/Service"
          },
          "type": "array"
        },
        "sources": {
          "items": {
            "$ref": "#/definitions/Source"
          },
          "type": "array"
        },
        "sslCerts": {
          "items": {
            "$ref": "#/definitions/SslCertAsset"
          },
          "type": "array"
        },
        "sslServerConfig": {
          "items": {
            "$ref": "#/definitions/SslServerConfig"
          },
          "type": "array"
        },
        "webComponents": {
          "items": {
            "$ref": "#/definitions/WebComponent"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "IpBlock": {
      "properties": {
        "count": {
          "format": "int64",
          "type": "integer"
        },
        "firstSeen": {
          "format": "date-time",
          "type": "string"
        },
        "ipBlock": {
          "type": "string"
        },
        "lastSeen": {
          "format": "date-time",
          "type": "string"
        },
        "recent": {
          "type": "boolean"
        },
        "sources": {
          "items": {
            "$ref": "#/definitions/Source"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "IpBlockAsset": {
      "properties": {
        "adminContacts": {
          "items": {
            "$ref": "#/definitions/ObservedString"
          },
          "type": "array"
        },
        "adminNames": {
          "items": {
            "$ref": "#/definitions/ObservedString"
          },
          "type": "array"
        },
        "adminOrgs": {
          "items": {
            "$ref": "#/definitions/ObservedString"
          },
          "type": "array"
        },
        "adminPhones": {
          "items": {
            "$ref": "#/definitions/ObservedString"
          },
          "type": "array"
        },
        "asns": {
          "items": {
            "$ref": "#/definitions/ObservedLong"
          },
          "type": "array"
        },
        "bgpPrefixes": {
          "items": {
            "$ref": "#/definitions/ObservedString"
          },
          "type": "array"
        },
        "count": {
          "format": "int64",
          "type": "integer"
        },
        "detailedFromWhoisAt": {
          "format": "date-time",
          "type": "string"
        },
        "endIp": {
          "type": "string"
        },
        "firstSeen": {
          "format": "date-time",
          "type": "string"
        },
        "ipBlock": {
          "type": "string"
        },
        "ipv4": {
          "type": "boolean"
        },
        "ipv6": {
          "type": "boolean"
        },
        "lastSeen": {
          "format": "date-time",
          "type": "string"
        },
        "location": {
          "items": {
            "$ref": "#/definitions/ObservedLocation"
          },
          "type": "array"
        },
        "netNames": {
          "items": {
            "$ref": "#/definitions/ObservedString"
          },
          "type": "array"
        },
        "netRanges": {
          "items": {
            "$ref": "#/definitions/ObservedString"
          },
          "type": "array"
        },
        "registrantContacts": {
          "items": {
            "$ref": "#/definitions/ObservedString"
          },
          "type": "array"
        },
        "registrantNames": {
          "items": {
            "$ref": "#/definitions/ObservedString"
          },
          "type": "array"
        },
        "registrantOrgs": {
          "items": {
            "$ref": "#/definitions/ObservedString"
          },
          "type": "array"
        },
        "registrantPhones": {
          "items": {
            "$ref": "#/definitions/ObservedString"
          },
          "type": "array"
        },
        "registrarCreatedAt": {
          "items": {
            "$ref": "#/definitions/ObservedLong"
          },
          "type": "array"
        },
        "registrarExpiresAt": {
          "items": {
            "$ref": "#/definitions/ObservedLong"
          },
          "type": "array"
        },
        "registrarUpdatedAt": {
          "items": {
            "$ref": "#/definitions/ObservedLong"
          },
          "type": "array"
        },
        "reputations": {
          "items": {
            "$ref": "#/definitions/Reputation"
          },
          "type": "array"
        },
        "sources": {
          "items": {
            "$ref": "#/definitions/Source"
          },
          "type": "array"
        },
        "startIp": {
          "type": "string"
        },
        "technicalContacts": {
          "items": {
            "$ref": "#/definitions/ObservedString"
          },
          "type": "array"
        },
        "technicalNames": {
          "items": {
            "$ref": "#/definitions/ObservedString"
          },
          "type": "array"
        },
        "technicalOrgs": {
          "items": {
            "$ref": "#/definitions/ObservedString"
          },
          "type": "array"
        },
        "technicalPhones": {
          "items": {
            "$ref": "#/definitions/ObservedString"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "LabelResource": {
      "properties": {
        "color": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "Location": {
      "properties": {
        "city": {
          "type": "string"
        },
        "latitude": {
          "format": "float",
          "type": "number"
        },
        "longitude": {
          "format": "float",
          "type": "number"
        },
        "region": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "ObservedBoolean": {
      "properties": {
        "count": {
          "format": "int64",
          "type": "integer"
        },
        "firstSeen": {
          "format": "date-time",
          "type": "string"
        },
        "lastSeen": {
          "format": "date-time",
          "type": "string"
        },
        "recent": {
          "type": "boolean"
        },
        "sources": {
          "items": {
            "$ref": "#/definitions/Source"
          },
          "type": "array"
        },
        "value": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "ObservedHeader": {
      "properties": {
        "count": {
          "format": "int64",
          "type": "integer"
        },
        "firstSeen": {
          "format": "date-time",
          "type": "string"
        },
        "headerName": {
          "type": "string"
        },
        "headerValue": {
          "type": "string"
        },
        "lastSeen": {
          "format": "date-time",
          "type": "string"
        },
        "recent": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "ObservedInteger": {
      "properties": {
        "count": {
          "format": "int64",
          "type": "integer"
        },
        "firstSeen": {
          "format": "date-time",
          "type": "string"
        },
        "lastSeen": {
          "format": "date-time",
          "type": "string"
        },
        "recent": {
          "type": "boolean"
        },
        "sources": {
          "items": {
            "$ref": "#/definitions/Source"
          },
          "type": "array"
        },
        "value": {
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "ObservedIntegers": {
      "properties": {
        "count": {
          "format": "int64",
          "type": "integer"
        },
        "firstSeen": {
          "format": "date-time",
          "type": "string"
        },
        "lastSeen": {
          "format": "date-time",
          "type": "string"
        },
        "recent": {
          "type": "boolean"
        },
        "sources": {
          "items": {
            "$ref": "#/definitions/Source"
          },
          "type": "array"
        },
        "values": {
          "items": {
            "format": "int32",
            "type": "integer"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "ObservedLocation": {
      "properties": {
        "count": {
          "format": "int64",
          "type": "integer"
        },
        "firstSeen": {
          "format": "date-time",
          "type": "string"
        },
        "lastSeen": {
          "format": "date-time",
          "type": "string"
        },
        "recent": {
          "type": "boolean"
        },
        "sources": {
          "items": {
            "$ref": "#/definitions/Source"
          },
          "type": "array"
        },
        "value": {
          "$ref": "#/definitions/Location"
        }
      },
      "type": "object"
    },
    "ObservedLong": {
      "properties": {
        "count": {
          "format": "int64",
          "type": "integer"
        },
        "firstSeen": {
          "format": "date-time",
          "type": "string"
        },
        "lastSeen": {
          "format": "date-time",
          "type": "string"
        },
        "recent": {
          "type": "boolean"
        },
        "sources": {
          "items": {
            "$ref": "#/definitions/Source"
          },
          "type": "array"
        },
        "value": {
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "ObservedPortState": {
      "properties": {
        "count": {
          "format": "int64",
          "type": "integer"
        },
        "firstSeen": {
          "format": "date-time",
          "type": "string"
        },
        "lastSeen": {
          "format": "date-time",
          "type": "string"
        },
        "port": {
          "format": "int32",
          "type": "integer"
        },
        "recent": {
          "type": "boolean"
        },
        "value": {
          "enum": [
            "open",
            "closed",
            "filtered"
          ],
          "type": "string",
          "x-ms-enum": {
            "modelAsString": true,
            "name": "observedPortStateValue"
          }
        }
      },
      "type": "object"
    },
    "ObservedString": {
      "properties": {
        "count": {
          "format": "int64",
          "type": "integer"
        },
        "firstSeen": {
          "format": "date-time",
          "type": "string"
        },
        "lastSeen": {
          "format": "date-time",
          "type": "string"
        },
        "recent": {
          "type": "boolean"
        },
        "sources": {
          "items": {
            "$ref": "#/definitions/Source"
          },
          "type": "array"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "PageAsset": {
      "properties": {
        "host": {
          "type": "string"
        },
        "asns": {
          "items": {
            "$ref": "#/definitions/ObservedLong"
          },
          "type": "array"
        },
        "assetSecurityPolicies": {
          "items": {
            "$ref": "#/definitions/AssetSecurityPolicy"
          },
          "type": "array"
        },
        "attributes": {
          "items": {
            "$ref": "#/definitions/Attribute"
          },
          "type": "array"
        },
        "cause": {
          "$ref": "#/definitions/PageCause"
        },
        "cdns": {
          "items": {
            "$ref": "#/definitions/ObservedString"
          },
          "type": "array"
        },
        "charsets": {
          "items": {
            "$ref": "#/definitions/ObservedString"
          },
          "type": "array"
        },
        "cnames": {
          "items": {
            "$ref": "#/definitions/ObservedString"
          },
          "type": "array"
        },
        "contentLengths": {
          "items": {
            "$ref": "#/definitions/ObservedLong"
          },
          "type": "array"
        },
        "contentTypes": {
          "items": {
            "$ref": "#/definitions/ObservedString"
          },
          "type": "array"
        },
        "cookies": {
          "items": {
            "$ref": "#/definitions/Cookie"
          },
          "type": "array"
        },
        "count": {
          "format": "int64",
          "type": "integer"
        },
        "domain": {
          "type": "string"
        },
        "domainAsset": {
          "$ref": "#/definitions/DomainAsset"
        },
        "errors": {
          "items": {
            "$ref": "#/definitions/ObservedString"
          },
          "type": "array"
        },
        "finalAsns": {
          "items": {
            "$ref": "#/definitions/ObservedLong"
          },
          "type": "array"
        },
        "finalIpAddresses": {
          "items": {
            "$ref": "#/definitions/ObservedString"
          },
          "type": "array"
        },
        "finalIpBlocks": {
          "items": {
            "$ref": "#/definitions/IpBlock"
          },
          "type": "array"
        },
        "finalResponseCodes": {
          "items": {
            "$ref": "#/definitions/ObservedInteger"
          },
          "type": "array"
        },
        "finalUrls": {
          "items": {
            "$ref": "#/definitions/ObservedString"
          },
          "type": "array"
        },
        "firstSeen": {
          "format": "date-time",
          "type": "string"
        },
        "frames": {
          "items": {
            "$ref": "#/definitions/ObservedBoolean"
          },
          "type": "array"
        },
        "fullDomMinhashSignatures": {
          "items": {
            "$ref": "#/definitions/ObservedIntegers"
          },
          "type": "array"
        },
        "gdprAssetSecurityPolicies": {
          "items": {
            "$ref": "#/definitions/AssetSecurityPolicy"
          },
          "type": "array"
        },
        "guids": {
          "items": {
            "$ref": "#/definitions/GuidPair"
          },
          "type": "array"
        },
        "httpMethod": {
          "type": "string"
        },
        "httpResponseCodes": {
          "items": {
            "$ref": "#/definitions/ObservedInteger"
          },
          "type": "array"
        },
        "httpResponseMessages": {
          "items": {
            "$ref": "#/definitions/ObservedString"
          },
          "type": "array"
        },
        "ipAddresses": {
          "items": {
            "$ref": "#/definitions/ObservedString"
          },
          "type": "array"
        },
        "ipBlocks": {
          "items": {
            "$ref": "#/definitions/IpBlock"
          },
          "type": "array"
        },
        "ipv4": {
          "items": {
            "$ref": "#/definitions/ObservedBoolean"
          },
          "type": "array"
        },
        "ipv6": {
          "items": {
            "$ref": "#/definitions/ObservedBoolean"
          },
          "type": "array"
        },
        "isRootUrl": {
          "type": "boolean"
        },
        "languages": {
          "items": {
            "$ref": "#/definitions/ObservedString"
          },
          "type": "array"
        },
        "lastSeen": {
          "format": "date-time",
          "type": "string"
        },
        "location": {
          "items": {
            "$ref": "#/definitions/ObservedLocation"
          },
          "type": "array"
        },
        "nonHtmlFrames": {
          "items": {
            "$ref": "#/definitions/ObservedBoolean"
          },
          "type": "array"
        },
        "parkedPage": {
          "items": {
            "$ref": "#/definitions/ObservedBoolean"
          },
          "type": "array"
        },
        "redirectType": {
          "enum": [
            "httpHeader",
            "metaRefresh",
            "javascript",
            "final"
          ],
          "type": "string",
          "x-ms-enum": {
            "modelAsString": true,
            "name": "pageAssetRedirectType"
          }
        },
        "redirectUrls": {
          "items": {
            "$ref": "#/definitions/ObservedString"
          },
          "type": "array"
        },
        "referrer": {
          "type": "string"
        },
        "resourceUrls": {
          "items": {
            "$ref": "#/definitions/ResourceUrl"
          },
          "type": "array"
        },
        "responseBodies": {
          "items": {
            "$ref": "#/definitions/ObservedString"
          },
          "type": "array"
        },
        "responseBodyHashSignatures": {
          "items": {
            "$ref": "#/definitions/ObservedString"
          },
          "type": "array"
        },
        "responseBodyMinhashSignatures": {
          "items": {
            "$ref": "#/definitions/ObservedIntegers"
          },
          "type": "array"
        },
        "responseHeaders": {
          "items": {
            "$ref": "#/definitions/ObservedHeader"
          },
          "type": "array"
        },
        "responseTimes": {
          "items": {
            "$ref": "#/definitions/ObservedLong"
          },
          "type": "array"
        },
        "rootUrl": {
          "$ref": "#/definitions/ObservedBoolean"
        },
        "service": {
          "type": "string"
        },
        "services": {
          "items": {
            "$ref": "#/definitions/Service"
          },
          "type": "array"
        },
        "siteStatus": {
          "type": "string"
        },
        "sources": {
          "items": {
            "$ref": "#/definitions/Source"
          },
          "type": "array"
        },
        "sslCerts": {
          "items": {
            "$ref": "#/definitions/SslCertAsset"
          },
          "type": "array"
        },
        "sslServerConfig": {
          "items": {
            "$ref": "#/definitions/SslServerConfig"
          },
          "type": "array"
        },
        "successful": {
          "items": {
            "$ref": "#/definitions/ObservedBoolean"
          },
          "type": "array"
        },
        "titles": {
          "items": {
            "$ref": "#/definitions/ObservedString"
          },
          "type": "array"
        },
        "undirectedContent": {
          "items": {
            "$ref": "#/definitions/ObservedBoolean"
          },
          "type": "array"
        },
        "url": {
          "type": "string"
        },
        "webComponents": {
          "items": {
            "$ref": "#/definitions/WebComponent"
          },
          "type": "array"
        },
        "windowNames": {
          "items": {
            "$ref": "#/definitions/ObservedString"
          },
          "type": "array"
        },
        "windows": {
          "items": {
            "$ref": "#/definitions/ObservedBoolean"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "PageCause": {
      "properties": {
        "cause": {
          "type": "string"
        },
        "location": {
          "type": "string"
        },
        "version": {
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "Port": {
      "properties": {
        "count": {
          "format": "int64",
          "type": "integer"
        },
        "firstSeen": {
          "format": "date-time",
          "type": "string"
        },
        "lastSeen": {
          "format": "date-time",
          "type": "string"
        },
        "port": {
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "ReportAssetSnapshotRequest": {
      "properties": {
        "labelName": {
          "type": "string"
        },
        "metric": {
          "type": "string"
        },
        "page": {
          "format": "int32",
          "type": "integer"
        },
        "size": {
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "ReportAssetSnapshotResponse": {
      "properties": {
        "assets": {
          "$ref": "#/definitions/AssetPageResponse"
        },
        "description": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        },
        "labelName": {
          "type": "string"
        },
        "metric": {
          "type": "string"
        },
        "updatedAt": {
          "format": "date-time",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ReportAssetSummaryRequest": {
      "properties": {
        "filters": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "groupBy": {
          "type": "string"
        },
        "labelName": {
          "type": "string"
        },
        "metricCategories": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "metrics": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "segmentBy": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "ReportAssetSummaryResponse": {
      "properties": {
        "assetSummaries": {
          "items": {
            "$ref": "#/definitions/AssetSummaryResponse"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "Reputation": {
      "properties": {
        "cidr": {
          "type": "string"
        },
        "firstSeen": {
          "format": "date-time",
          "type": "string"
        },
        "lastSeen": {
          "format": "date-time",
          "type": "string"
        },
        "listName": {
          "type": "string"
        },
        "listUpdatedAt": {
          "format": "date-time",
          "type": "string"
        },
        "recent": {
          "type": "boolean"
        },
        "threatType": {
          "type": "string"
        },
        "trusted": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "ResourceUrl": {
      "properties": {
        "count": {
          "format": "int64",
          "type": "integer"
        },
        "firstSeen": {
          "format": "date-time",
          "type": "string"
        },
        "lastSeen": {
          "format": "date-time",
          "type": "string"
        },
        "recent": {
          "type": "boolean"
        },
        "resources": {
          "items": {
            "$ref": "#/definitions/DependentResource"
          },
          "type": "array"
        },
        "url": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "SavedFilterPageResponse": {
      "properties": {
        "content": {
          "items": {
            "$ref": "#/definitions/SavedFilterResponse"
          },
          "type": "array"
        },
        "first": {
          "type": "boolean"
        },
        "last": {
          "type": "boolean"
        },
        "nextLink": {
          "type": "string"
        },
        "number": {
          "format": "int32",
          "type": "integer"
        },
        "numberOfElements": {
          "format": "int32",
          "type": "integer"
        },
        "size": {
          "format": "int32",
          "type": "integer"
        },
        "totalElements": {
          "format": "int64",
          "type": "integer"
        },
        "totalPages": {
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "SavedFilterRequest": {
      "properties": {
        "description": {
          "type": "string"
        },
        "filter": {
          "type": "string"
        },
        "id": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "SavedFilterResponse": {
      "properties": {
        "description": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        },
        "filter": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "ScanMetadata": {
      "properties": {
        "bannerMetadata": {
          "type": "string"
        },
        "endScan": {
          "format": "date-time",
          "type": "string"
        },
        "port": {
          "format": "int32",
          "type": "integer"
        },
        "startScan": {
          "format": "date-time",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Service": {
      "properties": {
        "count": {
          "format": "int64",
          "type": "integer"
        },
        "exceptions": {
          "items": {
            "$ref": "#/definitions/ObservedString"
          },
          "type": "array"
        },
        "firstSeen": {
          "format": "date-time",
          "type": "string"
        },
        "lastSeen": {
          "format": "date-time",
          "type": "string"
        },
        "port": {
          "format": "int32",
          "type": "integer"
        },
        "portStates": {
          "items": {
            "$ref": "#/definitions/ObservedPortState"
          },
          "type": "array"
        },
        "recent": {
          "type": "boolean"
        },
        "scheme": {
          "type": "string"
        },
        "sources": {
          "items": {
            "$ref": "#/definitions/Source"
          },
          "type": "array"
        },
        "sslCerts": {
          "items": {
            "$ref": "#/definitions/SslCertAsset"
          },
          "type": "array"
        },
        "webComponents": {
          "items": {
            "$ref": "#/definitions/WebComponent"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "SoaRecord": {
      "properties": {
        "count": {
          "format": "int64",
          "type": "integer"
        },
        "email": {
          "type": "string"
        },
        "firstSeen": {
          "format": "date-time",
          "type": "string"
        },
        "lastSeen": {
          "format": "date-time",
          "type": "string"
        },
        "nameServer": {
          "type": "string"
        },
        "recent": {
          "type": "boolean"
        },
        "serialNumber": {
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "Source": {
      "properties": {
        "count": {
          "format": "int64",
          "type": "integer"
        },
        "firstSeen": {
          "format": "date-time",
          "type": "string"
        },
        "lastSeen": {
          "format": "date-time",
          "type": "string"
        },
        "reason": {
          "type": "string"
        },
        "source": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "SslCertAsset": {
      "properties": {
        "certificateAuthority": {
          "type": "boolean"
        },
        "count": {
          "format": "int64",
          "type": "integer"
        },
        "firstSeen": {
          "format": "date-time",
          "type": "string"
        },
        "invalidAfter": {
          "format": "date-time",
          "type": "string"
        },
        "invalidBefore": {
          "format": "date-time",
          "type": "string"
        },
        "issuerAlternativeNames": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "issuerCommonNames": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "issuerCountry": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "issuerLocality": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "issuerOrganizationalUnits": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "issuerOrganizations": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "issuerState": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "keyAlgorithm": {
          "type": "string"
        },
        "keySize": {
          "format": "int32",
          "type": "integer"
        },
        "lastSeen": {
          "format": "date-time",
          "type": "string"
        },
        "organizationalUnits": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "organizations": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "recent": {
          "type": "boolean"
        },
        "selfSigned": {
          "type": "boolean"
        },
        "serialNumber": {
          "type": "string"
        },
        "sha1": {
          "type": "string"
        },
        "sigAlgName": {
          "type": "string"
        },
        "sigAlgOid": {
          "type": "string"
        },
        "sources": {
          "items": {
            "$ref": "#/definitions/Source"
          },
          "type": "array"
        },
        "subjectAlternativeNames": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "subjectCommonNames": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "subjectCountry": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "subjectLocality": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "subjectOrganizationalUnits": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "subjectOrganizations": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "subjectState": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "validationType": {
          "enum": [
            "domainValidation",
            "organizationValidation",
            "extendedValidation"
          ],
          "type": "string",
          "x-ms-enum": {
            "modelAsString": true,
            "name": "sslCertAssetValidationType"
          }
        },
        "version": {
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "SslServerConfig": {
      "properties": {
        "cipherSuites": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "count": {
          "format": "int64",
          "type": "integer"
        },
        "firstSeen": {
          "format": "date-time",
          "type": "string"
        },
        "lastSeen": {
          "format": "date-time",
          "type": "string"
        },
        "sources": {
          "items": {
            "$ref": "#/definitions/Source"
          },
          "type": "array"
        },
        "tlsVersions": {
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "SubResourceIntegrityCheck": {
      "properties": {
        "causePageUrl": {
          "type": "string"
        },
        "count": {
          "format": "int64",
          "type": "integer"
        },
        "crawlGuid": {
          "type": "string"
        },
        "expectedHash": {
          "type": "string"
        },
        "firstSeen": {
          "format": "date-time",
          "type": "string"
        },
        "lastSeen": {
          "format": "date-time",
          "type": "string"
        },
        "pageGuid": {
          "type": "string"
        },
        "resourceGuid": {
          "type": "string"
        },
        "violation": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "TaskPageResponse": {
      "properties": {
        "content": {
          "items": {
            "$ref": "#/definitions/TaskResponse"
          },
          "type": "array"
        },
        "first": {
          "type": "boolean"
        },
        "last": {
          "type": "boolean"
        },
        "nextLink": {
          "type": "string"
        },
        "number": {
          "format": "int32",
          "type": "integer"
        },
        "numberOfElements": {
          "format": "int32",
          "type": "integer"
        },
        "size": {
          "format": "int32",
          "type": "integer"
        },
        "totalElements": {
          "format": "int64",
          "type": "integer"
        },
        "totalPages": {
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "TaskResponse": {
      "properties": {
        "completedAt": {
          "format": "date-time",
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "lastPolledAt": {
          "format": "date-time",
          "type": "string"
        },
        "phase": {
          "enum": [
            "running",
            "polling",
            "complete"
          ],
          "type": "string",
          "x-ms-enum": {
            "modelAsString": true,
            "name": "taskResponsePhase"
          }
        },
        "reason": {
          "type": "string"
        },
        "startedAt": {
          "format": "date-time",
          "type": "string"
        },
        "state": {
          "enum": [
            "pending",
            "running",
            "paused",
            "complete",
            "incomplete",
            "failed",
            "warning"
          ],
          "type": "string",
          "x-ms-enum": {
            "modelAsString": true,
            "name": "taskResponseState"
          }
        }
      },
      "type": "object"
    },
    "WebComponent": {
      "properties": {
        "count": {
          "format": "int64",
          "type": "integer"
        },
        "cve": {
          "items": {
            "$ref": "#/definitions/Cve"
          },
          "type": "array"
        },
        "endOfLife": {
          "format": "int64",
          "type": "integer"
        },
        "firstSeen": {
          "format": "date-time",
          "type": "string"
        },
        "lastSeen": {
          "format": "date-time",
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "ports": {
          "items": {
            "$ref": "#/definitions/Port"
          },
          "type": "array"
        },
        "recent": {
          "type": "boolean"
        },
        "service": {
          "type": "string"
        },
        "sources": {
          "items": {
            "$ref": "#/definitions/Source"
          },
          "type": "array"
        },
        "type": {
          "type": "string"
        },
        "version": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "WorkspaceMode": {
      "properties": {
        "freeTrial": {
          "type": "boolean"
        },
        "readOnly": {
          "type": "boolean"
        },
        "setup": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "WorkspaceResponse": {
      "properties": {
        "displayName": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "mode": {
          "$ref": "#/definitions/WorkspaceMode"
        },
        "name": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "AsAssetResponse": {
      "required": [
        "asset"
      ],
      "type": "object",
      "properties": {
        "asset": {
          "$ref": "#/definitions/AsAsset"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/AssetResponse"
        }
      ],
      "x-ms-discriminator-value": "as"
    },
    "ContactAssetResponse": {
      "required": [
        "asset"
      ],
      "type": "object",
      "properties": {
        "asset": {
          "$ref": "#/definitions/ContactAsset"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/AssetResponse"
        }
      ],
      "x-ms-discriminator-value": "contact"
    },
    "DomainAssetResponse": {
      "required": [
        "asset"
      ],
      "type": "object",
      "properties": {
        "asset": {
          "$ref": "#/definitions/DomainAsset"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/AssetResponse"
        }
      ],
      "x-ms-discriminator-value": "domain"
    },
    "HostAssetResponse": {
      "required": [
        "asset"
      ],
      "type": "object",
      "properties": {
        "asset": {
          "$ref": "#/definitions/HostAsset"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/AssetResponse"
        }
      ],
      "x-ms-discriminator-value": "host"
    },
    "IpAddressAssetResponse": {
      "required": [
        "asset"
      ],
      "type": "object",
      "properties": {
        "asset": {
          "$ref": "#/definitions/IpAddressAsset"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/AssetResponse"
        }
      ],
      "x-ms-discriminator-value": "ipAddress"
    },
    "IpBlockAssetResponse": {
      "required": [
        "asset"
      ],
      "type": "object",
      "properties": {
        "asset": {
          "$ref": "#/definitions/IpBlockAsset"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/AssetResponse"
        }
      ],
      "x-ms-discriminator-value": "ipBlock"
    },
    "PageAssetResponse": {
      "required": [
        "asset"
      ],
      "type": "object",
      "properties": {
        "asset": {
          "$ref": "#/definitions/PageAsset"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/AssetResponse"
        }
      ],
      "x-ms-discriminator-value": "page"
    },
    "SslCertAssetResponse": {
      "required": [
        "asset"
      ],
      "type": "object",
      "properties": {
        "asset": {
          "$ref": "#/definitions/SslCertAsset"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/AssetResponse"
        }
      ],
      "x-ms-discriminator-value": "sslCert"
    }
  },
  "securityDefinitions": {
    "azure_auth": {
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "description": "Azure Active Directory OAuth2 Flow",
      "flow": "implicit",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      },
      "type": "oauth2"
    }
  },
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "tags": [
    {
      "description": "Provides access to inventory assets.",
      "name": "Assets"
    },
    {
      "description": "Provides access to discovery resources.",
      "name": "Disco Groups"
    },
    {
      "description": "Provides access to disco template resources.",
      "name": "Disco Templates"
    },
    {
      "description": "Provides access to reporting data.",
      "name": "Reports"
    },
    {
      "description": "Provides access to saved filter resources.",
      "name": "Saved Filters"
    },
    {
      "description": "Provides access to task resources.",
      "name": "Tasks"
    },
    {
      "description": "Provides access to workspace metadata.",
      "name": "Workspaces"
    }
  ],
  "parameters": {
    "AssetIdParameter": {
      "in": "path",
      "name": "assetId",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "DiscoGroupNameParameter": {
      "in": "path",
      "name": "discoGroupName",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "DiscoTemplateIdParameter": {
      "in": "path",
      "name": "discoTemplateId",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "FilterParameter": {
      "description": "An expression on the resource type that selects the resources to be returned.",
      "in": "query",
      "name": "filter",
      "required": false,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "MaxPageSizeParameter": {
      "default": 20,
      "description": "An offset into the collection of the first resource to be returned.",
      "format": "int32",
      "in": "query",
      "name": "maxpagesize",
      "required": false,
      "type": "integer",
      "x-ms-parameter-location": "method"
    },
    "OrderByParameter": {
      "description": "A list of expressions that specify the order of the returned resources.",
      "in": "query",
      "name": "orderby",
      "required": false,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "SavedFilterNameParameter": {
      "in": "path",
      "name": "savedFilterName",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "SkipParameter": {
      "default": 0,
      "description": "An offset into the collection of the first resource to be returned.",
      "format": "int32",
      "in": "query",
      "name": "skip",
      "required": false,
      "type": "integer",
      "x-ms-parameter-location": "method"
    },
    "TaskIdParameter": {
      "in": "path",
      "name": "taskId",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "WorkspaceNameParameter": {
      "description": "The name of the Workspace.",
      "in": "path",
      "name": "workspaceName",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "RegionParameter": {
      "name": "region",
      "in": "path",
      "description": "The region hosting the requested resource.",
      "required": true,
      "type": "string",
      "default": "api",
      "x-ms-parameter-location": "client"
    }
  }
}
