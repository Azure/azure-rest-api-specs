{
  "swagger": "2.0",
  "info": {
    "version": "2019-11-01",
    "title": "ConsumptionManagementClient",
    "description": "Consumption management client provides access to consumption resources for Azure Enterprise Subscriptions."
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Azure Active Directory OAuth2 Flow.",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "paths": {
    "/{scope}/providers/Microsoft.Consumption/usageDetails": {
      "get": {
        "tags": [
          "UsageDetails"
        ],
        "operationId": "UsageDetails_List",
        "description": "Lists the usage details for the defined scope. Usage details are available via this API only for May 1, 2014 or later.",
        "externalDocs": {
          "url": "https://docs.microsoft.com/en-us/rest/api/consumption/"
        },
        "x-ms-examples": {
          "UsageDetailsList-Legacy": {
            "$ref": "./examples/UsageDetailsList.json"
          },
          "UsageDetailsListFilterByTag-Legacy": {
            "$ref": "./examples/UsageDetailsListFilterByTag.json"
          },
          "UsageDetailsListForBillingPeriod-Legacy": {
            "$ref": "./examples/UsageDetailsListForBillingPeriod.json"
          },
          "UsageDetailsExpand-Legacy": {
            "$ref": "./examples/UsageDetailsExpand.json"
          },
          "UsageDetailsListByMetricActualCost-Legacy": {
            "$ref": "./examples/UsageDetailsListByMetricActualCost.json"
          },
          "UsageDetailsListByMetricAmortizedCost-Legacy": {
            "$ref": "./examples/UsageDetailsListByMetricAmortizedCost.json"
          },
          "UsageDetailsListByMetricUsage-Legacy": {
            "$ref": "./examples/UsageDetailsListByMetricUsage.json"
          },
          "BillingAccountUsageDetailsList-Legacy": {
            "$ref": "./examples/UsageDetailsListByBillingAccount.json"
          },
          "BillingAccountUsageDetailsListForBillingPeriod-Legacy": {
            "$ref": "./examples/UsageDetailsListForBillingPeriodByBillingAccount.json"
          },
          "DepartmentUsageDetailsList-Legacy": {
            "$ref": "./examples/UsageDetailsListByDepartment.json"
          },
          "DepartmentUsageDetailsListForBillingPeriod-Legacy": {
            "$ref": "./examples/UsageDetailsListForBillingPeriodByDepartment.json"
          },
          "EnrollmentAccountUsageDetailsList-Legacy": {
            "$ref": "./examples/UsageDetailsListByEnrollmentAccount.json"
          },
          "EnrollmentAccountUsageDetailsListForBillingPeriod-Legacy": {
            "$ref": "./examples/UsageDetailsListForBillingPeriodByEnrollmentAccount.json"
          },
          "ManagementGroupUsageDetailsList-Legacy": {
            "$ref": "./examples/UsageDetailsListByManagementGroup.json"
          },
          "ManagementGroupUsageDetailsListForBillingPeriod-Legacy": {
            "$ref": "./examples/UsageDetailsListForBillingPeriodByManagementGroup.json"
          },
          "BillingAccountUsageDetailsList-Modern": {
            "$ref": "./examples/UsageDetailsListByMCABillingAccount.json"
          },
          "BillingProfileUsageDetailsList-Modern": {
            "$ref": "./examples/UsageDetailsListByMCABillingProfile.json"
          },
          "InvoiceSectionUsageDetailsList-Modern": {
            "$ref": "./examples/UsageDetailsListByMCAInvoiceSection.json"
          },
          "CustomerUsageDetailsList-Modern": {
            "$ref": "./examples/UsageDetailsListByMCACustomer.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/scopeUsageDetailsParameter"
          },
          {
            "name": "$expand",
            "description": "May be used to expand the properties/additionalInfo or properties/meterDetails within a list of usage details. By default, these fields are not included when listing usage details.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "description": "May be used to filter usageDetails by properties/resourceGroup, properties/resourceName, properties/resourceId, properties/chargeType, properties/reservationId, properties/publisherType or tags. The filter supports 'eq', 'lt', 'gt', 'le', 'ge', and 'and'. It does not currently support 'ne', 'or', or 'not'. Tag filter is a key value pair string where key and value is separated by a colon (:). PublisherType Filter accepts two values azure and marketplace and it is currently supported for Web Direct Offer Type",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "$skiptoken",
            "description": "Skiptoken is only used if a previous operation returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skiptoken parameter that specifies a starting point to use for subsequent calls.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "description": "May be used to limit the number of results to the most recent N usageDetails.",
            "in": "query",
            "required": false,
            "type": "integer",
            "minimum": 1,
            "maximum": 1000
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "$ref": "#/parameters/metricParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/UsageDetailsListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/{scope}/providers/Microsoft.Consumption/tags": {
      "get": {
        "tags": [
          "Tags"
        ],
        "operationId": "Tags_Get",
        "description": "Get all available tag keys for the defined scope",
        "externalDocs": {
          "url": "https://docs.microsoft.com/en-us/rest/api/consumption/"
        },
        "x-ms-examples": {
          "Tags_Get": {
            "$ref": "./examples/Tags.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/scopeTagsParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/TagsResult"
            }
          },
          "204": {
            "description": "An empty response is sent when there is no information available within the selected scope."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/providers/Microsoft.Consumption/operations": {
      "get": {
        "tags": [
          "Operations"
        ],
        "operationId": "Operations_List",
        "description": "Lists all of the available consumption REST API operations.",
        "parameters": [
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/OperationListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    }
  },
  "definitions": {
    "MeterDetails": {
      "description": "The properties of the meter detail.",
      "properties": {
        "meterName": {
          "description": "The name of the meter, within the given meter category",
          "type": "string",
          "readOnly": true
        },
        "meterCategory": {
          "description": "The category of the meter, for example, 'Cloud services', 'Networking', etc..",
          "type": "string",
          "readOnly": true
        },
        "meterSubCategory": {
          "description": "The subcategory of the meter, for example, 'A6 Cloud services', 'ExpressRoute (IXP)', etc..",
          "type": "string",
          "readOnly": true
        },
        "unit": {
          "description": "The unit in which the meter consumption is charged, for example, 'Hours', 'GB', etc.",
          "type": "string",
          "readOnly": true
        },
        "meterLocation": {
          "description": "The location in which the Azure service is available.",
          "type": "string",
          "readOnly": true
        },
        "totalIncludedQuantity": {
          "description": "The total included quantity associated with the offer.",
          "type": "number",
          "format": "decimal",
          "readOnly": true
        },
        "pretaxStandardRate": {
          "description": "The pretax listing price.",
          "type": "number",
          "format": "decimal",
          "readOnly": true
        },
        "serviceName": {
          "description": "The name of the service.",
          "type": "string",
          "readOnly": true
        },
        "serviceTier": {
          "description": "The service tier.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "UsageDetail": {
      "type": "object",
      "discriminator": "kind",
      "description": "An usage detail resource.",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "kind": {
          "type": "string",
          "description": "Specifies the kind of usage details.",
          "enum": [
            "legacy",
            "modern"
          ],
          "x-ms-enum": {
            "name": "UsageDetailsKind",
            "modelAsString": true
          }
        }
      },
      "required": [
        "kind"
      ]
    },
    "UsageDetailsListResult": {
      "description": "Result of listing usage details. It contains a list of available usage details in reverse chronological order by billing period.",
      "properties": {
        "value": {
          "description": "The list of usage details.",
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/UsageDetail"
          }
        },
        "nextLink": {
          "description": "The link (url) to the next page of results.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "SkuProperty": {
      "description": "The Sku property",
      "properties": {
        "name": {
          "description": "The name of sku property.",
          "type": "string",
          "readOnly": true
        },
        "value": {
          "description": "The value of sku property.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "TagsResult": {
      "description": "A resource listing all tags.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProxyResource"
        }
      ],
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/TagProperties",
          "title": "Tag properties"
        }
      }
    },
    "TagProperties": {
      "description": "The properties of the tag.",
      "properties": {
        "tags": {
          "description": "A list of Tag.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Tag"
          }
        },
        "nextLink": {
          "description": "The link (url) to the next page of results.",
          "type": "string",
          "readOnly": true
        },
        "previousLink": {
          "description": "The link (url) to the previous page of results.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "Tag": {
      "description": "The tag resource.",
      "properties": {
        "key": {
          "description": "Tag key.",
          "type": "string"
        }
      }
    },
    "ErrorDetails": {
      "description": "The details of the error.",
      "properties": {
        "code": {
          "description": "Error code.",
          "type": "string",
          "readOnly": true
        },
        "message": {
          "description": "Error message indicating why the operation failed.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "ErrorResponse": {
      "description": "Error response indicates that the service is not able to process the incoming request. The reason is provided in the error message. \n\nSome Error responses: \n\n * 429 TooManyRequests - Request is throttled. Retry after waiting for the time specified in the \"x-ms-ratelimit-microsoft.consumption-retry-after\" header. \n\n * 503 ServiceUnavailable - Service is temporarily unavailable. Retry after waiting for the time specified in the \"Retry-After\" header.",
      "type": "object",
      "properties": {
        "error": {
          "description": "The details of the error.",
          "$ref": "#/definitions/ErrorDetails"
        }
      }
    },
    "Operation": {
      "description": "A Consumption REST API operation.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Operation name: {provider}/{resource}/{operation}.",
          "type": "string",
          "readOnly": true
        },
        "display": {
          "description": "The object that represents the operation.",
          "properties": {
            "provider": {
              "description": "Service provider: Microsoft.Consumption.",
              "type": "string",
              "readOnly": true
            },
            "resource": {
              "description": "Resource on which the operation is performed: UsageDetail, etc.",
              "type": "string",
              "readOnly": true
            },
            "operation": {
              "description": "Operation type: Read, write, delete, etc.",
              "type": "string",
              "readOnly": true
            }
          }
        }
      }
    },
    "OperationListResult": {
      "description": "Result of listing consumption operations. It contains a list of operations and a URL link to get the next set of results.",
      "properties": {
        "value": {
          "description": "List of consumption operations supported by the Microsoft.Consumption resource provider.",
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/Operation"
          }
        },
        "nextLink": {
          "description": "URL to get the next set of operation list results if there are any.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "Resource": {
      "description": "The Resource model definition.",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Resource Id."
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Resource name."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "Resource type."
        },
        "tags": {
          "readOnly": true,
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Resource tags."
        }
      },
      "x-ms-azure-resource": true
    },
    "ResourceAttributes": {
      "description": "The Resource model definition.",
      "properties": {
        "location": {
          "readOnly": true,
          "type": "string",
          "description": "Resource location"
        },
        "sku": {
          "readOnly": true,
          "type": "string",
          "description": "Resource sku"
        }
      }
    },
    "ProxyResource": {
      "description": "The Resource model definition.",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Resource Id."
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Resource name."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "Resource type."
        },
        "eTag": {
          "type": "string",
          "description": "eTag of the resource. To handle concurrent update scenario, this field will be used to determine whether the user is updating the latest version or not."
        }
      },
      "x-ms-azure-resource": true
    }
  },
  "parameters": {
    "scopeUsageDetailsParameter": {
      "name": "scope",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The scope associated with usage details operations. This includes '/subscriptions/{subscriptionId}/' for subscription scope, '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}' for Billing Account scope, '/providers/Microsoft.Billing/departments/{departmentId}' for Department scope, '/providers/Microsoft.Billing/enrollmentAccounts/{enrollmentAccountId}' for EnrollmentAccount scope and '/providers/Microsoft.Management/managementGroups/{managementGroupId}' for Management Group scope. For subscription, billing account, department, enrollment account and management group, you can also add billing period to the scope using '/providers/Microsoft.Billing/billingPeriods/{billingPeriodName}'. For e.g. to specify billing period at department scope use '/providers/Microsoft.Billing/departments/{departmentId}/providers/Microsoft.Billing/billingPeriods/{billingPeriodName}'. Also, Modern Commerce Account scopes are '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}' for billingAccount scope, '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}' for billingProfile scope, 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}/invoiceSections/{invoiceSectionId}' for invoiceSection scope, and 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/customers/{customerId}' specific for partners.",
      "x-ms-parameter-location": "method",
      "x-ms-skip-url-encoding": true
    },
    "scopeTagsParameter": {
      "name": "scope",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The scope associated with tags operations. This includes '/subscriptions/{subscriptionId}/' for subscription scope, '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for resourceGroup scope, '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}' for Billing Account scope, '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/departments/{departmentId}' for Department scope, '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/enrollmentAccounts/{enrollmentAccountId}' for EnrollmentAccount scope and '/providers/Microsoft.Management/managementGroups/{managementGroupId}' for Management Group scope..",
      "x-ms-parameter-location": "method",
      "x-ms-skip-url-encoding": true
    },
    "apiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "required": true,
      "type": "string",
      "description": "Version of the API to be used with the client request. The current version is 2019-11-01."
    },
    "departmentIdParameter": {
      "name": "departmentId",
      "in": "path",
      "description": "Department ID",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "enrollmentAccountIdParameter": {
      "name": "enrollmentAccountId",
      "in": "path",
      "description": "EnrollmentAccount ID",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "subscriptionIdParameter": {
      "name": "subscriptionId",
      "in": "path",
      "description": "Azure Subscription ID.",
      "required": true,
      "type": "string"
    },
    "resourceGroupNameParameter": {
      "name": "resourceGroupName",
      "in": "path",
      "description": "Azure Resource Group Name.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "invoiceSectionIdParameter": {
      "name": "invoiceSectionId",
      "in": "path",
      "description": "Azure Invoice Section ID.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "metricParameter": {
      "name": "metric",
      "in": "query",
      "description": "Allows to select different type of cost/usage records.",
      "required": false,
      "type": "string",
      "x-ms-parameter-location": "method",
      "enum": [
        "actualcost",
        "amortizedcost",
        "usage"
      ],
      "x-ms-enum": {
        "name": "metrictype",
        "modelAsString": true,
        "values": [
          {
            "value": "actualcost",
            "description": "Actual cost data.",
            "name": "ActualCostMetricType"
          },
          {
            "value": "amortizedcost",
            "description": "Amortized cost data.",
            "name": "AmortizedCostMetricType"
          },
          {
            "value": "usage",
            "description": "Usage data.",
            "name": "UsageMetricType"
          }
        ]
      }
    },
    "filterParameter": {
      "name": "$filter",
      "in": "query",
      "description": "May be used to filter reservationRecommendations by: properties/scope with allowed values ['Single', 'Shared'] and default value 'Single'; properties/resourceType with allowed values ['VirtualMachines', 'SQLDatabases', 'PostgreSQL', 'ManagedDisk', 'MySQL', 'RedHat', 'MariaDB', 'RedisCache', 'CosmosDB', 'SqlDataWarehouse', 'SUSELinux', 'AppService', 'BlockBlob', 'AzureDataExplorer', 'VMwareCloudSimple'] and default value 'VirtualMachines'; and properties/lookBackPeriod with allowed values ['Last7Days', 'Last30Days', 'Last60Days'] and default value 'Last7Days'.",
      "required": false,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "scopeParameter": {
      "description": "Scope of the reservation.",
      "type": "string",
      "name": "scope",
      "in": "query",
      "required": true,
      "x-ms-parameter-location": "method",
      "enum": [
        "Single",
        "Shared"
      ],
      "x-ms-enum": {
        "name": "scope",
        "modelAsString": true
      }
    }
  }
}
