{
  "swagger": "2.0",
  "info": {
    "title": "ConsumptionManagementClient",
    "version": "2024-08-01",
    "description": "Consumption management client provides access to consumption resources for Azure Enterprise Subscriptions.",
    "x-typespec-generated": [
      {
        "emitter": "@azure-tools/typespec-autorest"
      }
    ]
  },
  "schemes": [
    "https"
  ],
  "host": "management.azure.com",
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "description": "Azure Active Directory OAuth2 Flow.",
      "flow": "implicit",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "tags": [
    {
      "name": "Operations"
    },
    {
      "name": "PriceSheet"
    },
    {
      "name": "PriceSheetResults"
    },
    {
      "name": "Budgets"
    },
    {
      "name": "CreditSummaries"
    }
  ],
  "paths": {
    "/{scope}/providers/Microsoft.Consumption/budgets": {
      "get": {
        "operationId": "Budgets_List",
        "tags": [
          "Budgets"
        ],
        "description": "Lists all budgets for the defined scope.",
        "externalDocs": {
          "url": "https://docs.microsoft.com/en-us/rest/api/consumption/"
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "scope",
            "in": "path",
            "description": "The fully qualified Azure Resource manager identifier of the resource.",
            "required": true,
            "type": "string",
            "x-ms-skip-url-encoding": true
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/BudgetsListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "BudgetsList": {
            "$ref": "./examples/BudgetsList.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/{scope}/providers/Microsoft.Consumption/budgets/{budgetName}": {
      "get": {
        "operationId": "Budgets_Get",
        "tags": [
          "Budgets"
        ],
        "description": "Gets the budget for the scope by budget name.",
        "externalDocs": {
          "url": "https://docs.microsoft.com/en-us/rest/api/consumption/"
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "scope",
            "in": "path",
            "description": "The fully qualified Azure Resource manager identifier of the resource.",
            "required": true,
            "type": "string",
            "x-ms-skip-url-encoding": true
          },
          {
            "name": "budgetName",
            "in": "path",
            "description": "Budget Name.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Budget"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Budget": {
            "$ref": "./examples/Budget.json"
          }
        }
      },
      "put": {
        "operationId": "Budgets_CreateOrUpdate",
        "tags": [
          "Budgets"
        ],
        "description": "The operation to create or update a budget. You can optionally provide an eTag if desired as a form of concurrency control. To obtain the latest eTag for a given budget, perform a get operation prior to your put operation.",
        "externalDocs": {
          "url": "https://docs.microsoft.com/en-us/rest/api/consumption/"
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "scope",
            "in": "path",
            "description": "The fully qualified Azure Resource manager identifier of the resource.",
            "required": true,
            "type": "string",
            "x-ms-skip-url-encoding": true
          },
          {
            "name": "budgetName",
            "in": "path",
            "description": "Budget Name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Parameters supplied to the Create Budget operation.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Budget"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'Budget' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/Budget"
            }
          },
          "201": {
            "description": "Resource 'Budget' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/Budget"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CreateOrUpdateBudget": {
            "$ref": "./examples/CreateOrUpdateBudget.json"
          }
        }
      },
      "delete": {
        "operationId": "Budgets_Delete",
        "tags": [
          "Budgets"
        ],
        "description": "The operation to delete a budget.",
        "externalDocs": {
          "url": "https://docs.microsoft.com/en-us/rest/api/consumption/"
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "scope",
            "in": "path",
            "description": "The fully qualified Azure Resource manager identifier of the resource.",
            "required": true,
            "type": "string",
            "x-ms-skip-url-encoding": true
          },
          {
            "name": "budgetName",
            "in": "path",
            "description": "Budget Name.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "DeleteBudget": {
            "$ref": "./examples/DeleteBudget.json"
          }
        }
      }
    },
    "/{scope}/providers/Microsoft.Consumption/charges": {
      "get": {
        "operationId": "Charges_List",
        "description": "Lists the charges based for the defined scope.",
        "externalDocs": {
          "url": "https://docs.microsoft.com/en-us/rest/api/consumption/"
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "scope",
            "in": "path",
            "description": "The fully qualified Azure Resource manager identifier of the resource.",
            "required": true,
            "type": "string",
            "x-ms-skip-url-encoding": true
          },
          {
            "name": "startDate",
            "in": "query",
            "description": "Start date",
            "required": false,
            "type": "string"
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "End date",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "May be used to filter charges by properties/usageEnd (Utc time), properties/usageStart (Utc time). The filter supports 'eq', 'lt', 'gt', 'le', 'ge', and 'and'. It does not currently support 'ne', 'or', or 'not'. Tag filter is a key value pair string where key and value is separated by a colon (:).",
            "required": false,
            "type": "string"
          },
          {
            "name": "$apply",
            "in": "query",
            "description": "May be used to group charges for billingAccount scope by properties/billingProfileId, properties/invoiceSectionId, properties/customerId (specific for Partner Led), or for billingProfile scope by properties/invoiceSectionId.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/ChargesListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ChangesForBillingPeriodByDepartment-Legacy": {
            "$ref": "./examples/ChargesForBillingPeriodByDepartment.json"
          },
          "ChangesForBillingPeriodByEnrollmentAccount-Legacy": {
            "$ref": "./examples/ChargesForBillingPeriodByEnrollmentAccount.json"
          },
          "ChargesListByBillingAccount-Modern": {
            "$ref": "./examples/ChargesListByModernBillingAccount.json"
          },
          "ChargesListByBillingAccountGroupByBillingProfileId-Modern": {
            "$ref": "./examples/ChargesListByModernBillingAccountGroupByBillingProfileId.json"
          },
          "ChargesListByBillingAccountGroupByCustomerId-Modern": {
            "$ref": "./examples/ChargesListByModernBillingAccountGroupByCustomerId.json"
          },
          "ChargesListByBillingAccountGroupByInvoiceSectionId-Modern": {
            "$ref": "./examples/ChargesListByModernBillingAccountGroupByInvoiceSectionId.json"
          },
          "ChargesListByBillingProfile-Modern": {
            "$ref": "./examples/ChargesListByModernBillingProfile.json"
          },
          "ChargesListByBillingProfileGroupByInvoiceSectionId-Modern": {
            "$ref": "./examples/ChargesListByModernBillingProfileGroupByInvoiceSectionId.json"
          },
          "ChargesListByBillingProfileInvoiceSection-Modern": {
            "$ref": "./examples/ChargesListByModernBillingProfileInvoiceSection.json"
          },
          "ChargesListByCustomer-Modern": {
            "$ref": "./examples/ChargesListByModernCustomer.json"
          },
          "ChargesListByDepartment-Legacy": {
            "$ref": "./examples/ChargesListForDepartmentFilterByStartEndDate.json"
          },
          "ChargesListByInvoiceSectionId-Modern": {
            "$ref": "./examples/ChargesListByModernInvoiceSectionId.json"
          },
          "ChargesListForEnrollmentAccount-Legacy": {
            "$ref": "./examples/ChargesListForEnrollmentAccountFilterByStartEndDate.json"
          }
        }
      }
    },
    "/{scope}/providers/Microsoft.Consumption/marketplaces": {
      "get": {
        "operationId": "Marketplaces_List",
        "description": "Lists the marketplaces for a scope at the defined scope. Marketplaces are available via this API only for May 1, 2014 or later.",
        "externalDocs": {
          "url": "https://docs.microsoft.com/en-us/rest/api/consumption/"
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "scope",
            "in": "path",
            "description": "The fully qualified Azure Resource manager identifier of the resource.",
            "required": true,
            "type": "string",
            "x-ms-skip-url-encoding": true
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "May be used to filter marketplaces by properties/usageEnd (Utc time), properties/usageStart (Utc time), properties/resourceGroup, properties/instanceName or properties/instanceId. The filter supports 'eq', 'lt', 'gt', 'le', 'ge', and 'and'. It does not currently support 'ne', 'or', or 'not'.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "May be used to limit the number of results to the most recent N marketplaces.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 1,
            "maximum": 1000
          },
          {
            "name": "$skiptoken",
            "in": "query",
            "description": "Skiptoken is only used if a previous operation returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skiptoken parameter that specifies a starting point to use for subsequent calls.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/MarketplacesListResult"
            }
          },
          "204": {
            "description": "Operation completed successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "BillingAccountMarketplacesList": {
            "$ref": "./examples/MarketplacesByBillingAccountList.json"
          },
          "BillingAccountMarketplacesListForBillingPeriod": {
            "$ref": "./examples/MarketplacesByBillingAccountListForBillingPeriod.json"
          },
          "DepartmentMarketplacesList": {
            "$ref": "./examples/MarketplacesByDepartmentList.json"
          },
          "DepartmentMarketplacesListForBillingPeriod": {
            "$ref": "./examples/MarketplacesByDepartment_ListByBillingPeriod.json"
          },
          "EnrollmentAccountMarketplacesList": {
            "$ref": "./examples/MarketplacesByEnrollmentAccountList.json"
          },
          "EnrollmentAccountMarketplacesListForBillingPeriod": {
            "$ref": "./examples/MarketplacesByEnrollmentAccounts_ListByBillingPeriod.json"
          },
          "ManagementGroupMarketplacesList": {
            "$ref": "./examples/MarketplacesByManagementGroupList.json"
          },
          "ManagementGroupMarketplacesListForBillingPeriod": {
            "$ref": "./examples/MarketplacesByManagementGroup_ListForBillingPeriod.json"
          },
          "SubscriptionMarketplacesList": {
            "$ref": "./examples/MarketplacesList.json"
          },
          "SubscriptionMarketplacesListForBillingPeriod": {
            "$ref": "./examples/MarketplacesListForBillingPeriod.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/{resourceScope}/providers/Microsoft.Consumption/reservationDetails": {
      "get": {
        "operationId": "ReservationsDetails_List",
        "description": "Lists the reservations details for provided date range. Note: ARM has a payload size limit of 12MB, so currently callers get 400 when the response size exceeds the ARM limit. If the data size is too large, customers may also get 504 as the API timed out preparing the data. In such cases, API call should be made with smaller date ranges or a call to Generate Reservation Details Report API should be made as it is asynchronous and will not run into response size time outs.",
        "externalDocs": {
          "url": "https://docs.microsoft.com/en-us/rest/api/consumption/"
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "resourceScope",
            "in": "path",
            "description": "The fully qualified Azure Resource manager identifier of the resource.",
            "required": true,
            "type": "string",
            "x-ms-skip-url-encoding": true
          },
          {
            "name": "startDate",
            "in": "query",
            "description": "Start date. Only applicable when querying with billing profile",
            "required": false,
            "type": "string"
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "End date. Only applicable when querying with billing profile",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter reservation details by date range. The properties/UsageDate for start date and end date. The filter supports 'le' and  'ge'. Not applicable when querying with billing profile",
            "required": false,
            "type": "string"
          },
          {
            "name": "reservationId",
            "in": "query",
            "description": "Reservation Id GUID. Only valid if reservationOrderId is also provided. Filter to a specific reservation",
            "required": false,
            "type": "string"
          },
          {
            "name": "reservationOrderId",
            "in": "query",
            "description": "Reservation Order Id GUID. Required if reservationId is provided. Filter to a specific reservation order",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/ReservationDetailsListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ReservationDetailsByBillingAccountId": {
            "$ref": "./examples/ReservationDetailsByBillingAccountId.json"
          },
          "ReservationDetailsByBillingProfileId": {
            "$ref": "./examples/ReservationDetailsByBillingProfileId.json"
          },
          "ReservationDetailsByBillingProfileIdReservationId": {
            "$ref": "./examples/ReservationDetailsByBillingProfileIdReservationId.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/{resourceScope}/providers/Microsoft.Consumption/reservationRecommendationDetails": {
      "get": {
        "operationId": "ReservationRecommendationDetails_Get",
        "description": "Details of a reservation recommendation for what-if analysis of reserved instances.",
        "externalDocs": {
          "url": "https://docs.microsoft.com/en-us/rest/api/consumption/"
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "resourceScope",
            "in": "path",
            "description": "The scope associated with reservation recommendation details operations. This includes '/subscriptions/{subscriptionId}/' for subscription scope, '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for resource group scope, /providers/Microsoft.Billing/billingAccounts/{billingAccountId}' for BillingAccount scope, and '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}' for billingProfile scope",
            "required": true,
            "type": "string",
            "x-ms-skip-url-encoding": true
          },
          {
            "name": "scope",
            "in": "query",
            "description": "Scope of the reservation.",
            "required": true,
            "type": "string",
            "enum": [
              "Single",
              "Shared"
            ],
            "x-ms-enum": {
              "name": "Scope",
              "modelAsString": true,
              "values": [
                {
                  "name": "Single",
                  "value": "Single"
                },
                {
                  "name": "Shared",
                  "value": "Shared"
                }
              ]
            }
          },
          {
            "name": "region",
            "in": "query",
            "description": "Used to select the region the recommendation should be generated for.",
            "required": true,
            "type": "string"
          },
          {
            "name": "term",
            "in": "query",
            "description": "Specify length of reservation recommendation term.",
            "required": true,
            "type": "string",
            "enum": [
              "P1M",
              "P1Y",
              "P3Y"
            ],
            "x-ms-enum": {
              "name": "Term",
              "modelAsString": true,
              "values": [
                {
                  "name": "P1M",
                  "value": "P1M",
                  "description": "1 month reservation term"
                },
                {
                  "name": "P1Y",
                  "value": "P1Y",
                  "description": "1 year reservation term"
                },
                {
                  "name": "P3Y",
                  "value": "P3Y",
                  "description": "3 year reservation term"
                }
              ]
            }
          },
          {
            "name": "lookBackPeriod",
            "in": "query",
            "description": "Filter the time period on which reservation recommendation results are based.",
            "required": true,
            "type": "string",
            "enum": [
              "Last7Days",
              "Last30Days",
              "Last60Days"
            ],
            "x-ms-enum": {
              "name": "LookBackPeriod",
              "modelAsString": true,
              "values": [
                {
                  "name": "Last07Days",
                  "value": "Last7Days",
                  "description": "Use 7 days of data for recommendations"
                },
                {
                  "name": "Last30Days",
                  "value": "Last30Days",
                  "description": "Use 30 days of data for recommendations"
                },
                {
                  "name": "Last60Days",
                  "value": "Last60Days",
                  "description": "Use 60 days of data for recommendations"
                }
              ]
            }
          },
          {
            "name": "product",
            "in": "query",
            "description": "Filter the products for which reservation recommendation results are generated. Examples: Standard_DS1_v2 (for VM), Premium_SSD_Managed_Disks_P30 (for Managed Disks)",
            "required": true,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Used to filter reservation recommendation details by: properties/subscriptionId can be specified for billing account and billing profile paths.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/ReservationRecommendationDetailsModel"
            }
          },
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/HighCasedErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ReservationRecommendationsByBillingAccount-Legacy": {
            "$ref": "./examples/ReservationRecommendationDetailsByBillingAccount.json"
          },
          "ReservationRecommendationsByBillingProfile-Modern": {
            "$ref": "./examples/ReservationRecommendationDetailsByBillingProfile.json"
          },
          "ReservationRecommendationsByResourceGroup-Legacy": {
            "$ref": "./examples/ReservationRecommendationDetailsByResourceGroup.json"
          },
          "ReservationRecommendationsBySubscription-Legacy": {
            "$ref": "./examples/ReservationRecommendationDetailsBySubscription.json"
          }
        }
      }
    },
    "/{resourceScope}/providers/Microsoft.Consumption/reservationRecommendations": {
      "get": {
        "operationId": "ReservationRecommendations_List",
        "description": "List of recommendations for purchasing reserved instances.",
        "externalDocs": {
          "url": "https://docs.microsoft.com/en-us/rest/api/consumption/"
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "resourceScope",
            "in": "path",
            "description": "The fully qualified Azure Resource manager identifier of the resource.",
            "required": true,
            "type": "string",
            "x-ms-skip-url-encoding": true
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "May be used to filter reservationRecommendations by: properties/scope with allowed values ['Single', 'Shared'] and default value 'Single'; properties/resourceType with allowed values ['VirtualMachines', 'SQLDatabases', 'PostgreSQL', 'ManagedDisk', 'MySQL', 'RedHat', 'MariaDB', 'RedisCache', 'CosmosDB', 'SqlDataWarehouse', 'SUSELinux', 'AppService', 'BlockBlob', 'AzureDataExplorer', 'VMwareCloudSimple'] and default value 'VirtualMachines'; and properties/lookBackPeriod with allowed values ['Last7Days', 'Last30Days', 'Last60Days'] and default value 'Last7Days'.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/ReservationRecommendationsListResult"
            }
          },
          "204": {
            "description": "Operation completed successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ReservationRecommendationsByBillingAccount-Legacy": {
            "$ref": "./examples/ReservationRecommendationsByBillingAccount.json"
          },
          "ReservationRecommendationsByBillingAccountFilterForScope": {
            "$ref": "./examples/ReservationRecommendationsByBillingAccountFilterByScope.json"
          },
          "ReservationRecommendationsByBillingProfile-Modern": {
            "$ref": "./examples/ReservationRecommendationsByBillingProfile.json"
          },
          "ReservationRecommendationsByResourceGroup-Legacy": {
            "$ref": "./examples/ReservationRecommendationsByResourceGroup.json"
          },
          "ReservationRecommendationsBySubscription-Legacy": {
            "$ref": "./examples/ReservationRecommendationsBySubscription.json"
          },
          "ReservationRecommendationsFilterBySubscriptionForScopeLookBackPeriod-Legacy": {
            "$ref": "./examples/ReservationRecommendationsFilterBySubscriptionForScopeLookBackPeriod.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/{resourceScope}/providers/Microsoft.Consumption/reservationSummaries": {
      "get": {
        "operationId": "ReservationsSummaries_List",
        "description": "Lists the reservations summaries for the defined scope daily or monthly grain. Note: ARM has a payload size limit of 12MB, so currently callers get 400 when the response size exceeds the ARM limit. In such cases, API call should be made with smaller date ranges.",
        "externalDocs": {
          "url": "https://docs.microsoft.com/en-us/rest/api/consumption/"
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "resourceScope",
            "in": "path",
            "description": "The fully qualified Azure Resource manager identifier of the resource.",
            "required": true,
            "type": "string",
            "x-ms-skip-url-encoding": true
          },
          {
            "name": "grain",
            "in": "query",
            "description": "Can be daily or monthly",
            "required": true,
            "type": "string",
            "enum": [
              "daily",
              "monthly"
            ],
            "x-ms-enum": {
              "name": "Datagrain",
              "modelAsString": true,
              "values": [
                {
                  "name": "DailyGrain",
                  "value": "daily",
                  "description": "Daily grain of data"
                },
                {
                  "name": "MonthlyGrain",
                  "value": "monthly",
                  "description": "Monthly grain of data"
                }
              ]
            }
          },
          {
            "name": "startDate",
            "in": "query",
            "description": "Start date. Only applicable when querying with billing profile",
            "required": false,
            "type": "string"
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "End date. Only applicable when querying with billing profile",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Required only for daily grain. The properties/UsageDate for start date and end date. The filter supports 'le' and  'ge'. Not applicable when querying with billing profile",
            "required": false,
            "type": "string"
          },
          {
            "name": "reservationId",
            "in": "query",
            "description": "Reservation Id GUID. Only valid if reservationOrderId is also provided. Filter to a specific reservation",
            "required": false,
            "type": "string"
          },
          {
            "name": "reservationOrderId",
            "in": "query",
            "description": "Reservation Order Id GUID. Required if reservationId is provided. Filter to a specific reservation order",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/ReservationSummariesListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ReservationSummariesDailyWithBillingAccountId": {
            "$ref": "./examples/ReservationSummariesDailyWithBillingAccountId.json"
          },
          "ReservationSummariesDailyWithBillingProfileId": {
            "$ref": "./examples/ReservationSummariesDailyWithBillingProfileId.json"
          },
          "ReservationSummariesMonthlyWithBillingAccountId": {
            "$ref": "./examples/ReservationSummariesMonthlyWithBillingAccountId.json"
          },
          "ReservationSummariesMonthlyWithBillingProfileId": {
            "$ref": "./examples/ReservationSummariesMonthlyWithBillingProfileId.json"
          },
          "ReservationSummariesMonthlyWithBillingProfileIdReservationId": {
            "$ref": "./examples/ReservationSummariesMonthlyWithBillingProfileIdReservationId.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/{scope}/providers/Microsoft.Consumption/tags": {
      "get": {
        "operationId": "Tags_Get",
        "description": "Get all available tag keys for the defined scope",
        "externalDocs": {
          "url": "https://docs.microsoft.com/en-us/rest/api/consumption/"
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "scope",
            "in": "path",
            "description": "The fully qualified Azure Resource manager identifier of the resource.",
            "required": true,
            "type": "string",
            "x-ms-skip-url-encoding": true
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/TagsResult"
            }
          },
          "204": {
            "description": "Operation completed successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Tags_Get": {
            "$ref": "./examples/Tags.json"
          }
        }
      }
    },
    "/{scope}/providers/Microsoft.Consumption/usageDetails": {
      "get": {
        "operationId": "UsageDetails_List",
        "description": "Lists the usage details for the defined scope. Usage details are available via this API only for May 1, 2014 or later.\n\n**Note:Microsoft will be retiring the Consumption Usage Details API at some point in the future. We do not recommend that you take a new dependency on this API. Please use the Cost Details API instead. We will notify customers once a date for retirement has been determined.For Learn more,see [Generate Cost Details Report - Create Operation](https://learn.microsoft.com/en-us/rest/api/cost-management/generate-cost-details-report/create-operation?tabs=HTTP)**",
        "externalDocs": {
          "url": "https://docs.microsoft.com/en-us/rest/api/consumption/"
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "scope",
            "in": "path",
            "description": "The fully qualified Azure Resource manager identifier of the resource.",
            "required": true,
            "type": "string",
            "x-ms-skip-url-encoding": true
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "May be used to expand the properties/additionalInfo or properties/meterDetails within a list of usage details. By default, these fields are not included when listing usage details.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "May be used to filter usageDetails by properties/resourceGroup, properties/resourceName, properties/resourceId, properties/chargeType, properties/reservationId, properties/publisherType or tags. The filter supports 'eq', 'lt', 'gt', 'le', 'ge', and 'and'. It does not currently support 'ne', 'or', or 'not'. Tag filter is a key value pair string where key and value is separated by a colon (:). PublisherType Filter accepts two values azure and marketplace and it is currently supported for Web Direct Offer Type",
            "required": false,
            "type": "string"
          },
          {
            "name": "$skiptoken",
            "in": "query",
            "description": "Skiptoken is only used if a previous operation returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skiptoken parameter that specifies a starting point to use for subsequent calls.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "May be used to limit the number of results to the most recent N usageDetails.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 1,
            "maximum": 1000
          },
          {
            "name": "metric",
            "in": "query",
            "description": "Allows to select different type of cost/usage records.",
            "required": false,
            "type": "string",
            "enum": [
              "actualcost",
              "amortizedcost",
              "usage"
            ],
            "x-ms-enum": {
              "name": "Metrictype",
              "modelAsString": true,
              "values": [
                {
                  "name": "ActualCostMetricType",
                  "value": "actualcost",
                  "description": "Actual cost data."
                },
                {
                  "name": "AmortizedCostMetricType",
                  "value": "amortizedcost",
                  "description": "Amortized cost data."
                },
                {
                  "name": "UsageMetricType",
                  "value": "usage",
                  "description": "Usage data."
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/UsageDetailsListResult"
            }
          },
          "204": {
            "description": "Operation completed successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "BillingAccountUsageDetailsList-Legacy": {
            "$ref": "./examples/UsageDetailsListByBillingAccount.json"
          },
          "BillingAccountUsageDetailsList-Modern": {
            "$ref": "./examples/UsageDetailsListByMCABillingAccount.json"
          },
          "BillingAccountUsageDetailsListForBillingPeriod-Legacy": {
            "$ref": "./examples/UsageDetailsListForBillingPeriodByBillingAccount.json"
          },
          "BillingProfileUsageDetailsList-Modern": {
            "$ref": "./examples/UsageDetailsListByMCABillingProfile.json"
          },
          "CustomerUsageDetailsList-Modern": {
            "$ref": "./examples/UsageDetailsListByMCACustomer.json"
          },
          "DepartmentUsageDetailsList-Legacy": {
            "$ref": "./examples/UsageDetailsListByDepartment.json"
          },
          "DepartmentUsageDetailsListForBillingPeriod-Legacy": {
            "$ref": "./examples/UsageDetailsListForBillingPeriodByDepartment.json"
          },
          "EnrollmentAccountUsageDetailsList-Legacy": {
            "$ref": "./examples/UsageDetailsListByEnrollmentAccount.json"
          },
          "EnrollmentAccountUsageDetailsListForBillingPeriod-Legacy": {
            "$ref": "./examples/UsageDetailsListForBillingPeriodByEnrollmentAccount.json"
          },
          "InvoiceSectionUsageDetailsList-Modern": {
            "$ref": "./examples/UsageDetailsListByMCAInvoiceSection.json"
          },
          "ManagementGroupUsageDetailsList-Legacy": {
            "$ref": "./examples/UsageDetailsListByManagementGroup.json"
          },
          "ManagementGroupUsageDetailsListForBillingPeriod-Legacy": {
            "$ref": "./examples/UsageDetailsListForBillingPeriodByManagementGroup.json"
          },
          "UsageDetailsExpand-Legacy": {
            "$ref": "./examples/UsageDetailsExpand.json"
          },
          "UsageDetailsList-Legacy": {
            "$ref": "./examples/UsageDetailsList.json"
          },
          "UsageDetailsListByMetricActualCost-Legacy": {
            "$ref": "./examples/UsageDetailsListByMetricActualCost.json"
          },
          "UsageDetailsListByMetricAmortizedCost-Legacy": {
            "$ref": "./examples/UsageDetailsListByMetricAmortizedCost.json"
          },
          "UsageDetailsListByMetricUsage-Legacy": {
            "$ref": "./examples/UsageDetailsListByMetricUsage.json"
          },
          "UsageDetailsListFilterByTag-Legacy": {
            "$ref": "./examples/UsageDetailsListFilterByTag.json"
          },
          "UsageDetailsListForBillingPeriod-Legacy": {
            "$ref": "./examples/UsageDetailsListForBillingPeriod.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}/providers/Microsoft.Consumption/credits/balanceSummary": {
      "get": {
        "operationId": "Credits_Get",
        "tags": [
          "CreditSummaries"
        ],
        "description": "The credit summary by billingAccountId and billingProfileId.",
        "externalDocs": {
          "url": "https://docs.microsoft.com/en-us/rest/api/consumption/"
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "billingAccountId",
            "in": "path",
            "description": "BillingAccount ID",
            "required": true,
            "type": "string"
          },
          {
            "name": "billingProfileId",
            "in": "path",
            "description": "Azure Billing Profile ID.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/CreditSummary"
            }
          },
          "204": {
            "description": "Operation completed successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CreditSummaryByBillingProfile": {
            "$ref": "./examples/CreditSummaryByBillingProfile.json"
          }
        }
      }
    },
    "/providers/Microsoft.Consumption/operations": {
      "get": {
        "operationId": "Operations_List",
        "tags": [
          "Operations"
        ],
        "description": "List the operations for the provider",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/OperationListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "OperationList": {
            "$ref": "./examples/OperationList.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/providers/microsoft.Billing/billingAccounts/{billingAccountId}/billingPeriods/{billingPeriodName}/providers/Microsoft.Consumption/balances": {
      "get": {
        "operationId": "Balances_GetForBillingPeriodByBillingAccount",
        "description": "Gets the balances for a scope by billing period and billingAccountId. Balances are available via this API only for May 1, 2014 or later.",
        "externalDocs": {
          "url": "https://docs.microsoft.com/en-us/rest/api/consumption/"
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "billingAccountId",
            "in": "path",
            "description": "BillingAccount ID",
            "required": true,
            "type": "string"
          },
          {
            "name": "billingPeriodName",
            "in": "path",
            "description": "Billing Period Name.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/Balance"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Balances": {
            "$ref": "./examples/BalancesByBillingAccountForBillingPeriod.json"
          }
        }
      }
    },
    "/providers/microsoft.Billing/billingAccounts/{billingAccountId}/billingPeriods/{billingPeriodName}/providers/Microsoft.Consumption/pricesheets/download": {
      "post": {
        "operationId": "PriceSheet_DownloadByBillingAccountPeriod",
        "description": "Generates the pricesheet for the provided billing period asynchronously based on the enrollment id",
        "externalDocs": {
          "url": "https://docs.microsoft.com/en-us/rest/api/consumption/"
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "billingAccountId",
            "in": "path",
            "description": "BillingAccount ID",
            "required": true,
            "type": "string"
          },
          {
            "name": "billingPeriodName",
            "in": "path",
            "description": "Billing Period Name.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/OperationStatus"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "EAPriceSheetForBillingPeriod": {
            "$ref": "./examples/EAPriceSheetForBillingPeriod.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location",
          "final-state-schema": "#/definitions/OperationStatus"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/providers/microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}/providers/Microsoft.Consumption/events": {
      "get": {
        "operationId": "Events_ListByBillingProfile",
        "description": "Lists the events that decrements Azure credits or Microsoft Azure consumption commitment for a billing account or a billing profile for a given start and end date.",
        "externalDocs": {
          "url": "https://docs.microsoft.com/en-us/rest/api/consumption/"
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "billingAccountId",
            "in": "path",
            "description": "BillingAccount ID",
            "required": true,
            "type": "string"
          },
          {
            "name": "billingProfileId",
            "in": "path",
            "description": "Azure Billing Profile ID.",
            "required": true,
            "type": "string"
          },
          {
            "name": "startDate",
            "in": "query",
            "description": "Start date",
            "required": true,
            "type": "string"
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "End date",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/Events"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "EventsListByBillingProfile": {
            "$ref": "./examples/EventsListByBillingProfile.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/providers/microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}/providers/Microsoft.Consumption/lots": {
      "get": {
        "operationId": "Lots_ListByBillingProfile",
        "description": "Lists all Azure credits for a billing account or a billing profile. The API is only supported for Microsoft Customer Agreements (MCA) billing accounts.",
        "externalDocs": {
          "url": "https://docs.microsoft.com/en-us/rest/api/consumption/"
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "billingAccountId",
            "in": "path",
            "description": "BillingAccount ID",
            "required": true,
            "type": "string"
          },
          {
            "name": "billingProfileId",
            "in": "path",
            "description": "Azure Billing Profile ID.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/Lots"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "LotsListByBillingProfile": {
            "$ref": "./examples/LotsListByBillingProfile.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/providers/microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}/providers/Microsoft.Consumption/reservationTransactions": {
      "get": {
        "operationId": "ReservationTransactions_ListByBillingProfile",
        "description": "List of transactions for reserved instances on billing profile scope. The refund transactions are posted along with its purchase transaction (i.e. in the purchase billing month). For example, The refund is requested in May 2021. This refund transaction will have event date as May 2021 but the billing month as April 2020 when the reservation purchase was made. Note: ARM has a payload size limit of 12MB, so currently callers get 400 when the response size exceeds the ARM limit. In such cases, API call should be made with smaller date ranges.",
        "externalDocs": {
          "url": "https://docs.microsoft.com/en-us/rest/api/consumption/"
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "billingAccountId",
            "in": "path",
            "description": "BillingAccount ID",
            "required": true,
            "type": "string"
          },
          {
            "name": "billingProfileId",
            "in": "path",
            "description": "Azure Billing Profile ID.",
            "required": true,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter reservation transactions by date range. The properties/EventDate for start date and end date. The filter supports 'le' and  'ge'. Note: API returns data for the entire start date's and end date's billing month. For example, filter properties/eventDate+ge+2020-01-01+AND+properties/eventDate+le+2020-12-29 will include data for entire December 2020 month (i.e. will contain records for dates December 30 and 31)",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/ModernReservationTransactionsListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ReservationTransactionsByBillingProfileId": {
            "$ref": "./examples/ReservationTransactionsListByBillingProfileId.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/providers/microsoft.Billing/billingAccounts/{billingAccountId}/customers/{customerId}/providers/Microsoft.Consumption/lots": {
      "get": {
        "operationId": "Lots_ListByCustomer",
        "description": "Lists all Azure credits for a customer. The API is only supported for Microsoft Partner  Agreements (MPA) billing accounts.",
        "externalDocs": {
          "url": "https://docs.microsoft.com/en-us/rest/api/consumption/"
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "billingAccountId",
            "in": "path",
            "description": "BillingAccount ID",
            "required": true,
            "type": "string"
          },
          {
            "name": "customerId",
            "in": "path",
            "description": "Customer ID",
            "required": true,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "May be used to filter the lots by Status, Source etc. The filter supports 'eq', 'lt', 'gt', 'le', 'ge', and 'and'. Tag filter is a key value pair string where key and value is separated by a colon (:).",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/Lots"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "LotsListByCustomer": {
            "$ref": "./examples/LotsListByCustomer.json"
          },
          "LotsListByCustomerWithFilter": {
            "$ref": "./examples/LotsListByCustomerWithFilters.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/providers/microsoft.Billing/billingAccounts/{billingAccountId}/providers/Microsoft.Consumption/balances": {
      "get": {
        "operationId": "Balances_GetByBillingAccount",
        "description": "Gets the balances for a scope by billingAccountId. Balances are available via this API only for May 1, 2014 or later.",
        "externalDocs": {
          "url": "https://docs.microsoft.com/en-us/rest/api/consumption/"
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "billingAccountId",
            "in": "path",
            "description": "BillingAccount ID",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/Balance"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Balances": {
            "$ref": "./examples/BalancesByBillingAccount.json"
          }
        }
      }
    },
    "/providers/microsoft.Billing/billingAccounts/{billingAccountId}/providers/Microsoft.Consumption/events": {
      "get": {
        "operationId": "Events_ListByBillingAccount",
        "description": "Lists the events that decrements Azure credits or Microsoft Azure consumption commitment for a billing account or a billing profile for a given start and end date.",
        "externalDocs": {
          "url": "https://docs.microsoft.com/en-us/rest/api/consumption/"
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "billingAccountId",
            "in": "path",
            "description": "BillingAccount ID",
            "required": true,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "May be used to filter the events by lotId, lotSource etc. The filter supports 'eq', 'lt', 'gt', 'le', 'ge', and 'and'. It does not currently support 'ne', 'or', or 'not'. Tag filter is a key value pair string where key and value is separated by a colon (:).",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/Events"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "EventsGetByBillingAccount": {
            "$ref": "./examples/EventsGetByBillingAccount.json"
          },
          "EventsGetByBillingAccount-Contributor": {
            "$ref": "./examples/EventsGetByBillingAccount-Contributor.json"
          },
          "EventsGetByBillingAccount-Primary": {
            "$ref": "./examples/EventsGetByBillingAccount-Primary.json"
          },
          "EventsGetByBillingAccountWithFilters": {
            "$ref": "./examples/EventsGetByBillingAccountWithFilters.json"
          },
          "EventsGetByBillingAccountWithFilters-Contributor.json": {
            "$ref": "./examples/EventsGetByBillingAccountWithFilters-Contributor.json"
          },
          "EventsGetByBillingAccountWithFilters-Primary": {
            "$ref": "./examples/EventsGetByBillingAccountWithFilters-Primary.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/providers/microsoft.Billing/billingAccounts/{billingAccountId}/providers/Microsoft.Consumption/lots": {
      "get": {
        "operationId": "Lots_ListByBillingAccount",
        "description": "Lists all Microsoft Azure consumption commitments for a billing account. The API is only supported for Microsoft Customer Agreements (MCA) and Direct Enterprise Agreement (EA)  billing accounts.",
        "externalDocs": {
          "url": "https://docs.microsoft.com/en-us/rest/api/consumption/"
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "billingAccountId",
            "in": "path",
            "description": "BillingAccount ID",
            "required": true,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "May be used to filter the lots by Status, Source etc. The filter supports 'eq', 'lt', 'gt', 'le', 'ge', and 'and'. It does not currently support 'ne', 'or', or 'not'. Tag filter is a key value pair string where key and value is separated by a colon (:).",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/Lots"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "LotsListByBillingAccount": {
            "$ref": "./examples/LotsListByBillingAccount.json"
          },
          "LotsListByBillingAccount-Contributor": {
            "$ref": "./examples/LotsListByBillingAccount-Contributor.json"
          },
          "LotsListByBillingAccount-Primary": {
            "$ref": "./examples/LotsListByBillingAccount-Primary.json"
          },
          "LotsListByBillingAccountWithStatusFilter": {
            "$ref": "./examples/LotsListByBillingAccountWithFilters.json"
          },
          "LotsListByBillingAccountWithStatusFilter-Contributor": {
            "$ref": "./examples/LotsListByBillingAccountWithFilters-Contributor.json"
          },
          "LotsListByBillingAccountWithStatusFilter-Primary": {
            "$ref": "./examples/LotsListByBillingAccountWithFilters-Primary.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/providers/microsoft.Billing/billingAccounts/{billingAccountId}/providers/Microsoft.Consumption/reservationTransactions": {
      "get": {
        "operationId": "ReservationTransactions_List",
        "description": "List of transactions for reserved instances on billing account scope. Note: The refund transactions are posted along with its purchase transaction (i.e. in the purchase billing month). For example, The refund is requested in May 2021. This refund transaction will have event date as May 2021 but the billing month as April 2020 when the reservation purchase was made. Note: ARM has a payload size limit of 12MB, so currently callers get 400 when the response size exceeds the ARM limit. In such cases, API call should be made with smaller date ranges.",
        "externalDocs": {
          "url": "https://docs.microsoft.com/en-us/rest/api/consumption/"
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "billingAccountId",
            "in": "path",
            "description": "BillingAccount ID",
            "required": true,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter reservation transactions by date range. The properties/EventDate for start date and end date. The filter supports 'le' and  'ge'. Note: API returns data for the entire start date's and end date's billing month. For example, filter properties/eventDate+ge+2020-01-01+AND+properties/eventDate+le+2020-12-29 will include data for the entire December 2020 month (i.e. will contain records for dates December 30 and 31)",
            "required": false,
            "type": "string"
          },
          {
            "name": "useMarkupIfPartner",
            "in": "query",
            "description": "Applies mark up to the transactions if the caller is a partner.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "previewMarkupPercentage",
            "in": "query",
            "description": "Preview markup percentage to be applied.",
            "required": false,
            "type": "number",
            "format": "decimal"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/ReservationTransactionsListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ReservationTransactionsByEnrollmentNumber": {
            "$ref": "./examples/ReservationTransactionsListByEnrollmentNumber.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/providers/microsoft.Capacity/reservationorders/{reservationOrderId}/providers/Microsoft.Consumption/reservationDetails": {
      "get": {
        "operationId": "ReservationsDetails_ListByReservationOrder",
        "description": "Lists the reservations details for provided date range. Note: ARM has a payload size limit of 12MB, so currently callers get 400 when the response size exceeds the ARM limit. If the data size is too large, customers may also get 504 as the API timed out preparing the data. In such cases, API call should be made with smaller date ranges or a call to Generate Reservation Details Report API should be made as it is asynchronous and will not run into response size time outs.",
        "externalDocs": {
          "url": "https://docs.microsoft.com/en-us/rest/api/consumption/"
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "reservationOrderId",
            "in": "path",
            "description": "Order Id of the reservation",
            "required": true,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter reservation details by date range. The properties/UsageDate for start date and end date. The filter supports 'le' and  'ge'",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/ReservationDetailsListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ReservationDetails": {
            "$ref": "./examples/ReservationDetails.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/providers/microsoft.Capacity/reservationorders/{reservationOrderId}/providers/Microsoft.Consumption/reservationSummaries": {
      "get": {
        "operationId": "ReservationsSummaries_ListByReservationOrder",
        "description": "Lists the reservations summaries for daily or monthly grain. Note: ARM has a payload size limit of 12MB, so currently callers get 400 when the response size exceeds the ARM limit. In such cases, API call should be made with smaller date ranges.",
        "externalDocs": {
          "url": "https://docs.microsoft.com/en-us/rest/api/consumption/"
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "reservationOrderId",
            "in": "path",
            "description": "Order Id of the reservation",
            "required": true,
            "type": "string"
          },
          {
            "name": "grain",
            "in": "query",
            "description": "Can be daily or monthly",
            "required": true,
            "type": "string",
            "enum": [
              "daily",
              "monthly"
            ],
            "x-ms-enum": {
              "name": "Datagrain",
              "modelAsString": true,
              "values": [
                {
                  "name": "DailyGrain",
                  "value": "daily",
                  "description": "Daily grain of data"
                },
                {
                  "name": "MonthlyGrain",
                  "value": "monthly",
                  "description": "Monthly grain of data"
                }
              ]
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Required only for daily grain. The properties/UsageDate for start date and end date. The filter supports 'le' and  'ge'",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/ReservationSummariesListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ReservationSummariesDaily": {
            "$ref": "./examples/ReservationSummariesDaily.json"
          },
          "ReservationSummariesMonthly": {
            "$ref": "./examples/ReservationSummariesMonthly.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/providers/microsoft.Capacity/reservationorders/{reservationOrderId}/reservations/{reservationId}/providers/Microsoft.Consumption/reservationDetails": {
      "get": {
        "operationId": "ReservationsDetails_ListByReservationOrderAndReservation",
        "description": "Lists the reservations details for provided date range. Note: ARM has a payload size limit of 12MB, so currently callers get 400 when the response size exceeds the ARM limit. If the data size is too large, customers may also get 504 as the API timed out preparing the data. In such cases, API call should be made with smaller date ranges or a call to Generate Reservation Details Report API should be made as it is asynchronous and will not run into response size time outs.",
        "externalDocs": {
          "url": "https://docs.microsoft.com/en-us/rest/api/consumption/"
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "reservationOrderId",
            "in": "path",
            "description": "Order Id of the reservation",
            "required": true,
            "type": "string"
          },
          {
            "name": "reservationId",
            "in": "path",
            "description": "Id of the reservation",
            "required": true,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter reservation details by date range. The properties/UsageDate for start date and end date. The filter supports 'le' and  'ge'",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/ReservationDetailsListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ReservationDetailsWithReservationId": {
            "$ref": "./examples/ReservationDetailsWithReservationId.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/providers/microsoft.Capacity/reservationorders/{reservationOrderId}/reservations/{reservationId}/providers/Microsoft.Consumption/reservationSummaries": {
      "get": {
        "operationId": "ReservationsSummaries_ListByReservationOrderAndReservation",
        "description": "Lists the reservations summaries for daily or monthly grain. Note: ARM has a payload size limit of 12MB, so currently callers get 400 when the response size exceeds the ARM limit. In such cases, API call should be made with smaller date ranges.",
        "externalDocs": {
          "url": "https://docs.microsoft.com/en-us/rest/api/consumption/"
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "reservationOrderId",
            "in": "path",
            "description": "Order Id of the reservation",
            "required": true,
            "type": "string"
          },
          {
            "name": "reservationId",
            "in": "path",
            "description": "Id of the reservation",
            "required": true,
            "type": "string"
          },
          {
            "name": "grain",
            "in": "query",
            "description": "Can be daily or monthly",
            "required": true,
            "type": "string",
            "enum": [
              "daily",
              "monthly"
            ],
            "x-ms-enum": {
              "name": "Datagrain",
              "modelAsString": true,
              "values": [
                {
                  "name": "DailyGrain",
                  "value": "daily",
                  "description": "Daily grain of data"
                },
                {
                  "name": "MonthlyGrain",
                  "value": "monthly",
                  "description": "Monthly grain of data"
                }
              ]
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Required only for daily grain. The properties/UsageDate for start date and end date. The filter supports 'le' and  'ge'",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/ReservationSummariesListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ReservationSummariesDailyWithReservationId": {
            "$ref": "./examples/ReservationSummariesDailyWithReservationId.json"
          },
          "ReservationSummariesMonthlyWithReservationId": {
            "$ref": "./examples/ReservationSummariesMonthlyWithReservationId.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/providers/microsoft.Management/managementGroups/{managementGroupId}/providers/Microsoft.Consumption/aggregatedcost": {
      "get": {
        "operationId": "AggregatedCost_GetByManagementGroup",
        "description": "Provides the aggregate cost of a management group and all child management groups by current billing period.",
        "externalDocs": {
          "url": "https://docs.microsoft.com/en-us/rest/api/consumption/"
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "managementGroupId",
            "in": "path",
            "description": "Order Id of the reservation",
            "required": true,
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Required only for daily grain. The properties/UsageDate for start date and end date. The filter supports 'le' and  'ge'",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/ManagementGroupAggregatedCostResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "AggregatedCostByManagementGroup": {
            "$ref": "./examples/AggregatedCostByManagementGroup.json"
          },
          "AggregatedCostByManagementGroupFilterByDate": {
            "$ref": "./examples/AggregatedCostByManagementGroupFilterByDate.json"
          }
        }
      }
    },
    "/providers/microsoft.Management/managementGroups/{managementGroupId}/providers/microsoft.Billing/billingPeriods/{billingPeriodName}/providers/Microsoft.Consumption/aggregatedCost": {
      "get": {
        "operationId": "AggregatedCost_GetForBillingPeriodByManagementGroup",
        "description": "Provides the aggregate cost of a management group and all child management groups by specified billing period",
        "externalDocs": {
          "url": "https://docs.microsoft.com/en-us/rest/api/consumption/"
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "managementGroupId",
            "in": "path",
            "description": "Order Id of the reservation",
            "required": true,
            "type": "string"
          },
          {
            "name": "billingPeriodName",
            "in": "path",
            "description": "Billing Period Name.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/ManagementGroupAggregatedCostResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "AggregatedCostListForBillingPeriodByManagementGroup": {
            "$ref": "./examples/AggregatedCostForBillingPeriodByManagementGroup.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Billing/billingPeriods/{billingPeriodName}/providers/Microsoft.Consumption/pricesheets/default": {
      "get": {
        "operationId": "PriceSheet_GetByBillingPeriod",
        "tags": [
          "PriceSheet"
        ],
        "description": "Get the price sheet for a scope by subscriptionId and billing period. Price sheet is available via this API only for May 1, 2014 or later.",
        "externalDocs": {
          "url": "https://docs.microsoft.com/en-us/rest/api/consumption/"
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "billingPeriodName",
            "in": "path",
            "description": "Billing Period Name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "May be used to expand the properties/meterDetails within a price sheet. By default, these fields are not included when returning price sheet.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$skiptoken",
            "in": "query",
            "description": "Skiptoken is only used if a previous operation returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skiptoken parameter that specifies a starting point to use for subsequent calls.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "May be used to limit the number of results to the top N results.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 1,
            "maximum": 1000
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/PriceSheetResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "PriceSheetExpand": {
            "$ref": "./examples/PriceSheetExpand.json"
          },
          "PriceSheetForBillingPeriod": {
            "$ref": "./examples/PriceSheetForBillingPeriod.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Consumption/pricesheets/default": {
      "get": {
        "operationId": "PriceSheet_Get",
        "tags": [
          "PriceSheetResults"
        ],
        "description": "Gets the price sheet for a subscription. Price sheet is available via this API only for May 1, 2014 or later.",
        "externalDocs": {
          "url": "https://docs.microsoft.com/en-us/rest/api/consumption/"
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "May be used to expand the properties/meterDetails within a price sheet. By default, these fields are not included when returning price sheet.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$skiptoken",
            "in": "query",
            "description": "Skiptoken is only used if a previous operation returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skiptoken parameter that specifies a starting point to use for subsequent calls.",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "May be used to limit the number of results to the top N results.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 1,
            "maximum": 1000
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/PriceSheetResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "PriceSheet": {
            "$ref": "./examples/PriceSheet.json"
          }
        }
      }
    }
  },
  "definitions": {
    "AmountWithExchangeRate": {
      "type": "object",
      "description": "The amount with exchange rate.",
      "properties": {
        "exchangeRate": {
          "type": "number",
          "format": "decimal",
          "description": "The exchange rate.",
          "readOnly": true
        },
        "exchangeRateMonth": {
          "type": "integer",
          "format": "int32",
          "description": "The exchange rate month.",
          "readOnly": true
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/amount"
        }
      ]
    },
    "Balance": {
      "type": "object",
      "description": "A balance resource.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/BalanceProperties",
          "description": "The properties of the balance.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ]
    },
    "BalanceProperties": {
      "type": "object",
      "description": "The properties of the balance.",
      "properties": {
        "currency": {
          "type": "string",
          "description": "The ISO currency in which the meter is charged, for example, USD.",
          "readOnly": true
        },
        "beginningBalance": {
          "type": "number",
          "format": "decimal",
          "description": "The beginning balance for the billing period.",
          "readOnly": true
        },
        "endingBalance": {
          "type": "number",
          "format": "decimal",
          "description": "The ending balance for the billing period (for open periods this will be updated daily).",
          "readOnly": true
        },
        "newPurchases": {
          "type": "number",
          "format": "decimal",
          "description": "Total new purchase amount.",
          "readOnly": true
        },
        "adjustments": {
          "type": "number",
          "format": "decimal",
          "description": "Total adjustment amount.",
          "readOnly": true
        },
        "utilized": {
          "type": "number",
          "format": "decimal",
          "description": "Total Commitment usage.",
          "readOnly": true
        },
        "serviceOverage": {
          "type": "number",
          "format": "decimal",
          "description": "Overage for Azure services.",
          "readOnly": true
        },
        "chargesBilledSeparately": {
          "type": "number",
          "format": "decimal",
          "description": "Charges Billed separately.",
          "readOnly": true
        },
        "totalOverage": {
          "type": "number",
          "format": "decimal",
          "description": "serviceOverage + chargesBilledSeparately.",
          "readOnly": true
        },
        "totalUsage": {
          "type": "number",
          "format": "decimal",
          "description": "Azure service commitment + total Overage.",
          "readOnly": true
        },
        "azureMarketplaceServiceCharges": {
          "type": "number",
          "format": "decimal",
          "description": "Total charges for Azure Marketplace.",
          "readOnly": true
        },
        "billingFrequency": {
          "$ref": "#/definitions/BillingFrequency",
          "description": "The billing frequency."
        },
        "priceHidden": {
          "type": "boolean",
          "description": "Price is hidden or not.",
          "readOnly": true
        },
        "overageRefund": {
          "type": "number",
          "format": "decimal",
          "description": "Overage Refunds",
          "readOnly": true
        },
        "newPurchasesDetails": {
          "type": "array",
          "description": "List of new purchases.",
          "items": {
            "$ref": "#/definitions/BalancePropertiesNewPurchasesDetailsItem"
          },
          "readOnly": true,
          "x-ms-identifiers": [
            "name"
          ]
        },
        "adjustmentDetails": {
          "type": "array",
          "description": "List of Adjustments (Promo credit, SIE credit etc.).",
          "items": {
            "$ref": "#/definitions/BalancePropertiesAdjustmentDetailsItem"
          },
          "readOnly": true,
          "x-ms-identifiers": [
            "name"
          ]
        }
      }
    },
    "BalancePropertiesAdjustmentDetailsItem": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "the name of new adjustment.",
          "readOnly": true
        },
        "value": {
          "type": "number",
          "format": "decimal",
          "description": "the value of new adjustment.",
          "readOnly": true
        }
      }
    },
    "BalancePropertiesNewPurchasesDetailsItem": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "the name of new purchase.",
          "readOnly": true
        },
        "value": {
          "type": "number",
          "format": "decimal",
          "description": "the value of new purchase.",
          "readOnly": true
        }
      }
    },
    "BillingFrequency": {
      "type": "string",
      "description": "The billing frequency.",
      "enum": [
        "Month",
        "Quarter",
        "Year"
      ],
      "x-ms-enum": {
        "name": "BillingFrequency",
        "modelAsString": true,
        "values": [
          {
            "name": "Month",
            "value": "Month"
          },
          {
            "name": "Quarter",
            "value": "Quarter"
          },
          {
            "name": "Year",
            "value": "Year"
          }
        ]
      }
    },
    "Budget": {
      "type": "object",
      "description": "A budget resource.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/BudgetProperties",
          "description": "The properties of the budget.",
          "x-ms-client-flatten": true
        },
        "eTag": {
          "type": "string",
          "description": "eTag of the resource. To handle concurrent update scenario, this field will be used to determine whether the user is updating the latest version or not."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "BudgetComparisonExpression": {
      "type": "object",
      "description": "The comparison expression to be used in the budgets.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the column to use in comparison."
        },
        "operator": {
          "$ref": "#/definitions/BudgetOperatorType",
          "description": "The operator to use for comparison."
        },
        "values": {
          "type": "array",
          "description": "Array of values to use for comparison",
          "minItems": 0,
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "name",
        "operator",
        "values"
      ]
    },
    "BudgetFilter": {
      "type": "object",
      "description": "May be used to filter budgets by resource group, resource, or meter.",
      "properties": {
        "and": {
          "type": "array",
          "description": "The logical \"AND\" expression. Must have at least 2 items.",
          "minItems": 0,
          "items": {
            "$ref": "#/definitions/BudgetFilterProperties"
          },
          "x-ms-identifiers": []
        },
        "dimensions": {
          "$ref": "#/definitions/BudgetComparisonExpression",
          "description": "Has comparison expression for a dimension"
        },
        "tags": {
          "$ref": "#/definitions/BudgetComparisonExpression",
          "description": "Has comparison expression for a tag"
        }
      }
    },
    "BudgetFilterProperties": {
      "type": "object",
      "description": "The Dimensions or Tags to filter a budget by.",
      "properties": {
        "dimensions": {
          "$ref": "#/definitions/BudgetComparisonExpression",
          "description": "Has comparison expression for a dimension"
        },
        "tags": {
          "$ref": "#/definitions/BudgetComparisonExpression",
          "description": "Has comparison expression for a tag"
        }
      }
    },
    "BudgetOperatorType": {
      "type": "string",
      "description": "The operator to use for comparison.",
      "enum": [
        "In"
      ],
      "x-ms-enum": {
        "name": "BudgetOperatorType",
        "modelAsString": true,
        "values": [
          {
            "name": "In",
            "value": "In"
          }
        ]
      }
    },
    "BudgetProperties": {
      "type": "object",
      "description": "The properties of the budget.",
      "properties": {
        "category": {
          "$ref": "#/definitions/CategoryType",
          "description": "The category of the budget, whether the budget tracks cost or usage."
        },
        "amount": {
          "type": "number",
          "format": "decimal",
          "description": "The total amount of cost to track with the budget"
        },
        "timeGrain": {
          "$ref": "#/definitions/TimeGrainType",
          "description": "The time covered by a budget. Tracking of the amount will be reset based on the time grain. BillingMonth, BillingQuarter, and BillingAnnual are only supported by WD customers"
        },
        "timePeriod": {
          "$ref": "#/definitions/BudgetTimePeriod",
          "description": "Has start and end date of the budget. The start date must be first of the month and should be less than the end date. Budget start date must be on or after June 1, 2017. Future start date should not be more than twelve months. Past start date should  be selected within the timegrain period. There are no restrictions on the end date."
        },
        "filter": {
          "$ref": "#/definitions/BudgetFilter",
          "description": "May be used to filter budgets by user-specified dimensions and/or tags."
        },
        "currentSpend": {
          "$ref": "#/definitions/CurrentSpend",
          "description": "The current amount of cost which is being tracked for a budget.",
          "readOnly": true
        },
        "notifications": {
          "type": "object",
          "description": "Dictionary of notifications associated with the budget. Budget can have up to five notifications.",
          "additionalProperties": {
            "$ref": "#/definitions/Notification"
          }
        },
        "forecastSpend": {
          "$ref": "#/definitions/ForecastSpend",
          "description": "The forecasted cost which is being tracked for a budget.",
          "readOnly": true
        }
      },
      "required": [
        "category",
        "amount",
        "timeGrain",
        "timePeriod"
      ]
    },
    "BudgetTimePeriod": {
      "type": "object",
      "description": "The start and end date for a budget.",
      "properties": {
        "startDate": {
          "type": "string",
          "format": "date-time",
          "description": "The start date for the budget."
        },
        "endDate": {
          "type": "string",
          "format": "date-time",
          "description": "The end date for the budget. If not provided, we default this to 10 years from the start date."
        }
      },
      "required": [
        "startDate"
      ]
    },
    "BudgetsListResult": {
      "type": "object",
      "description": "Result of listing budgets. It contains a list of available budgets in the scope provided.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The list of budgets.",
          "items": {
            "$ref": "#/definitions/Budget"
          },
          "readOnly": true
        },
        "nextLink": {
          "type": "string",
          "description": "The link (url) to the next page of results.",
          "readOnly": true
        }
      }
    },
    "CategoryType": {
      "type": "string",
      "description": "The category of the budget, whether the budget tracks cost or usage.",
      "enum": [
        "Cost"
      ],
      "x-ms-enum": {
        "name": "CategoryType",
        "modelAsString": true,
        "values": [
          {
            "name": "Cost",
            "value": "Cost"
          }
        ]
      }
    },
    "ChargeSummary": {
      "type": "object",
      "description": "A charge summary resource.",
      "properties": {
        "kind": {
          "$ref": "#/definitions/ChargeSummaryKind",
          "description": "Specifies the kind of charge summary."
        }
      },
      "discriminator": "kind",
      "required": [
        "kind"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/ProxyResource"
        }
      ]
    },
    "ChargeSummaryKind": {
      "type": "string",
      "description": "Specifies the kind of charge summary.",
      "enum": [
        "legacy",
        "modern"
      ],
      "x-ms-enum": {
        "name": "ChargeSummaryKind",
        "modelAsString": true,
        "values": [
          {
            "name": "legacy",
            "value": "legacy"
          },
          {
            "name": "modern",
            "value": "modern"
          }
        ]
      }
    },
    "ChargesListResult": {
      "type": "object",
      "description": "Result of listing charge summary.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The list of charge summary",
          "items": {
            "$ref": "#/definitions/ChargeSummary"
          },
          "readOnly": true
        }
      }
    },
    "CreditBalanceSummary": {
      "type": "object",
      "description": "Summary of credit balances.",
      "properties": {
        "estimatedBalance": {
          "$ref": "#/definitions/amount",
          "description": "Estimated balance.",
          "readOnly": true
        },
        "currentBalance": {
          "$ref": "#/definitions/amount",
          "description": "Current balance.",
          "readOnly": true
        },
        "estimatedBalanceInBillingCurrency": {
          "$ref": "#/definitions/AmountWithExchangeRate",
          "description": "Estimated balance in billing currency.",
          "readOnly": true
        }
      }
    },
    "CreditSummary": {
      "type": "object",
      "description": "A credit summary resource.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/CreditSummaryProperties",
          "description": "The properties of the credit summary.",
          "x-ms-client-flatten": true
        },
        "eTag": {
          "type": "string",
          "description": "eTag of the resource. To handle concurrent update scenario, this field will be used to determine whether the user is updating the latest version or not."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "CreditSummaryProperties": {
      "type": "object",
      "description": "The properties of the credit summary.",
      "properties": {
        "balanceSummary": {
          "$ref": "#/definitions/CreditBalanceSummary",
          "description": "Summary of balances associated with this credit summary.",
          "readOnly": true
        },
        "pendingCreditAdjustments": {
          "$ref": "#/definitions/amount",
          "description": "Pending credit adjustments.",
          "readOnly": true
        },
        "expiredCredit": {
          "$ref": "#/definitions/amount",
          "description": "Expired credit.",
          "readOnly": true
        },
        "pendingEligibleCharges": {
          "$ref": "#/definitions/amount",
          "description": "Pending eligible charges.",
          "readOnly": true
        },
        "creditCurrency": {
          "type": "string",
          "description": "The credit currency.",
          "readOnly": true
        },
        "billingCurrency": {
          "type": "string",
          "description": "The billing currency.",
          "readOnly": true
        },
        "reseller": {
          "$ref": "#/definitions/Reseller",
          "description": "Credit's reseller.",
          "readOnly": true
        },
        "isEstimatedBalance": {
          "type": "boolean",
          "description": "If true, the listed details are based on an estimation and it will be subjected to change.",
          "readOnly": true
        },
        "eTag": {
          "type": "string",
          "description": "The eTag for the resource.",
          "readOnly": true
        }
      }
    },
    "CultureCode": {
      "type": "string",
      "description": "Language in which the recipient will receive the notification",
      "enum": [
        "en-us",
        "ja-jp",
        "zh-cn",
        "de-de",
        "es-es",
        "fr-fr",
        "it-it",
        "ko-kr",
        "pt-br",
        "ru-ru",
        "zh-tw",
        "cs-cz",
        "pl-pl",
        "tr-tr",
        "da-dk",
        "en-gb",
        "hu-hu",
        "nb-no",
        "nl-nl",
        "pt-pt",
        "sv-se"
      ],
      "x-ms-enum": {
        "name": "CultureCode",
        "modelAsString": true,
        "values": [
          {
            "name": "en-us",
            "value": "en-us"
          },
          {
            "name": "ja-jp",
            "value": "ja-jp"
          },
          {
            "name": "zh-cn",
            "value": "zh-cn"
          },
          {
            "name": "de-de",
            "value": "de-de"
          },
          {
            "name": "es-es",
            "value": "es-es"
          },
          {
            "name": "fr-fr",
            "value": "fr-fr"
          },
          {
            "name": "it-it",
            "value": "it-it"
          },
          {
            "name": "ko-kr",
            "value": "ko-kr"
          },
          {
            "name": "pt-br",
            "value": "pt-br"
          },
          {
            "name": "ru-ru",
            "value": "ru-ru"
          },
          {
            "name": "zh-tw",
            "value": "zh-tw"
          },
          {
            "name": "cs-cz",
            "value": "cs-cz"
          },
          {
            "name": "pl-pl",
            "value": "pl-pl"
          },
          {
            "name": "tr-tr",
            "value": "tr-tr"
          },
          {
            "name": "da-dk",
            "value": "da-dk"
          },
          {
            "name": "en-gb",
            "value": "en-gb"
          },
          {
            "name": "hu-hu",
            "value": "hu-hu"
          },
          {
            "name": "nb-no",
            "value": "nb-no"
          },
          {
            "name": "nl-nl",
            "value": "nl-nl"
          },
          {
            "name": "pt-pt",
            "value": "pt-pt"
          },
          {
            "name": "sv-se",
            "value": "sv-se"
          }
        ]
      }
    },
    "CurrentSpend": {
      "type": "object",
      "description": "The current amount of cost which is being tracked for a budget.",
      "properties": {
        "amount": {
          "type": "number",
          "format": "decimal",
          "description": "The total amount of cost which is being tracked by the budget.",
          "readOnly": true
        },
        "unit": {
          "type": "string",
          "description": "The unit of measure for the budget amount.",
          "readOnly": true
        }
      }
    },
    "Datagrain": {
      "type": "string",
      "enum": [
        "daily",
        "monthly"
      ],
      "x-ms-enum": {
        "name": "Datagrain",
        "modelAsString": true,
        "values": [
          {
            "name": "DailyGrain",
            "value": "daily",
            "description": "Daily grain of data"
          },
          {
            "name": "MonthlyGrain",
            "value": "monthly",
            "description": "Monthly grain of data"
          }
        ]
      }
    },
    "DownloadProperties": {
      "type": "object",
      "description": "The properties of the price sheet download.",
      "properties": {
        "downloadUrl": {
          "type": "string",
          "description": "The link (url) to download the pricesheet.",
          "readOnly": true
        },
        "validTill": {
          "type": "string",
          "description": "Download link validity.",
          "readOnly": true
        }
      }
    },
    "ErrorDetails": {
      "type": "object",
      "description": "The details of the error.",
      "properties": {
        "code": {
          "type": "string",
          "description": "Error code.",
          "readOnly": true
        },
        "message": {
          "type": "string",
          "description": "Error message indicating why the operation failed.",
          "readOnly": true
        }
      }
    },
    "ErrorResponse": {
      "type": "object",
      "description": "Error response indicates that the service is not able to process the incoming request. The reason is provided in the error message.\n\nSome Error responses:\n\n* 429 TooManyRequests - Request is throttled. Retry after waiting for the time specified in the \"x-ms-ratelimit-microsoft.consumption-retry-after\" header.\n\n* 503 ServiceUnavailable - Service is temporarily unavailable. Retry after waiting for the time specified in the \"Retry-After\" header.\n\n* 504 Gateway Timeout - Service timed out while processing the request. Reduce the date range in the request, if possible.",
      "properties": {
        "error": {
          "$ref": "#/definitions/ErrorDetails",
          "description": "The details of the error."
        }
      }
    },
    "EventProperties": {
      "type": "object",
      "description": "The event properties.",
      "properties": {
        "transactionDate": {
          "type": "string",
          "format": "date-time",
          "description": "The date of the event.",
          "readOnly": true
        },
        "description": {
          "type": "string",
          "description": "The description of the event.",
          "readOnly": true
        },
        "newCredit": {
          "$ref": "#/definitions/amount",
          "description": "The amount of new credit or commitment for NewCredit or SettleCharges event.",
          "readOnly": true
        },
        "adjustments": {
          "$ref": "#/definitions/amount",
          "description": "The amount of balance adjustment. The property is not available for ConsumptionCommitment lots.",
          "readOnly": true
        },
        "creditExpired": {
          "$ref": "#/definitions/amount",
          "description": "The amount of expired credit or commitment for NewCredit or SettleCharges event.",
          "readOnly": true
        },
        "charges": {
          "$ref": "#/definitions/amount",
          "description": "The amount of charges for events of type SettleCharges and PendingEligibleCharges.",
          "readOnly": true
        },
        "closedBalance": {
          "$ref": "#/definitions/amount",
          "description": "The balance after the event, Note: This will not be returned for Contributor Organization Type in Multi-Entity consumption commitment",
          "readOnly": true
        },
        "billingAccountId": {
          "type": "string",
          "description": "Identifier of the billing account.",
          "readOnly": true
        },
        "billingAccountDisplayName": {
          "type": "string",
          "description": "Name of the billing account.",
          "readOnly": true
        },
        "eventType": {
          "$ref": "#/definitions/EventType",
          "description": "Identifies the type of the event."
        },
        "invoiceNumber": {
          "type": "string",
          "description": "The number which uniquely identifies the invoice on which the event was billed. This will be empty for unbilled events.",
          "readOnly": true
        },
        "billingProfileId": {
          "type": "string",
          "description": "The ID that uniquely identifies the billing profile for which the event happened. The property is only available for billing account of type MicrosoftCustomerAgreement.",
          "readOnly": true
        },
        "billingProfileDisplayName": {
          "type": "string",
          "description": "The display name of the billing profile for which the event happened. The property is only available for billing account of type MicrosoftCustomerAgreement.",
          "readOnly": true
        },
        "lotId": {
          "type": "string",
          "description": "The ID that uniquely identifies the lot for which the event happened.",
          "readOnly": true
        },
        "lotSource": {
          "type": "string",
          "description": "Identifies the source of the lot for which the event happened.",
          "readOnly": true
        },
        "canceledCredit": {
          "$ref": "#/definitions/amount",
          "description": "Amount of canceled credit.",
          "readOnly": true
        },
        "creditCurrency": {
          "type": "string",
          "description": "The credit currency of the event.",
          "readOnly": true
        },
        "billingCurrency": {
          "type": "string",
          "description": "The billing currency of the event.",
          "readOnly": true
        },
        "reseller": {
          "$ref": "#/definitions/Reseller",
          "description": "The reseller of the event.",
          "readOnly": true
        },
        "creditExpiredInBillingCurrency": {
          "$ref": "#/definitions/AmountWithExchangeRate",
          "description": "The amount of expired credit or commitment for NewCredit or SettleCharges event in billing currency.",
          "readOnly": true
        },
        "newCreditInBillingCurrency": {
          "$ref": "#/definitions/AmountWithExchangeRate",
          "description": "The amount of new credit or commitment for NewCredit or SettleCharges event in billing currency.",
          "readOnly": true
        },
        "adjustmentsInBillingCurrency": {
          "$ref": "#/definitions/AmountWithExchangeRate",
          "description": "The amount of balance adjustment in billing currency.",
          "readOnly": true
        },
        "chargesInBillingCurrency": {
          "$ref": "#/definitions/AmountWithExchangeRate",
          "description": "The amount of charges for events of type SettleCharges and PendingEligibleCharges in billing currency.",
          "readOnly": true
        },
        "closedBalanceInBillingCurrency": {
          "$ref": "#/definitions/AmountWithExchangeRate",
          "description": "The balance in billing currency after the event, Note: This will not be returned for Contributor Organization Type in Multi-Entity consumption commitment",
          "readOnly": true
        },
        "isEstimatedBalance": {
          "type": "boolean",
          "description": "If true, the listed details are based on an estimation and it will be subjected to change.",
          "readOnly": true
        },
        "eTag": {
          "type": "string",
          "description": "The eTag for the resource.",
          "readOnly": true
        }
      }
    },
    "EventSummary": {
      "type": "object",
      "description": "An event summary resource.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/EventProperties",
          "description": "The event properties.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProxyResource"
        }
      ]
    },
    "EventType": {
      "type": "string",
      "description": "Identifies the type of the event.",
      "enum": [
        "SettledCharges",
        "PendingCharges",
        "PendingAdjustments",
        "PendingNewCredit",
        "PendingExpiredCredit",
        "UnKnown",
        "NewCredit",
        "CreditExpired"
      ],
      "x-ms-enum": {
        "name": "EventType",
        "modelAsString": true,
        "values": [
          {
            "name": "SettledCharges",
            "value": "SettledCharges"
          },
          {
            "name": "PendingCharges",
            "value": "PendingCharges"
          },
          {
            "name": "PendingAdjustments",
            "value": "PendingAdjustments"
          },
          {
            "name": "PendingNewCredit",
            "value": "PendingNewCredit"
          },
          {
            "name": "PendingExpiredCredit",
            "value": "PendingExpiredCredit"
          },
          {
            "name": "UnKnown",
            "value": "UnKnown"
          },
          {
            "name": "NewCredit",
            "value": "NewCredit"
          },
          {
            "name": "CreditExpired",
            "value": "CreditExpired"
          }
        ]
      }
    },
    "Events": {
      "type": "object",
      "description": "Result of listing event summary.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The list of event summary.",
          "items": {
            "$ref": "#/definitions/EventSummary"
          },
          "readOnly": true
        },
        "nextLink": {
          "type": "string",
          "description": "The link (url) to the next page of results.",
          "readOnly": true
        }
      }
    },
    "ForecastSpend": {
      "type": "object",
      "description": "The forecasted cost which is being tracked for a budget.",
      "properties": {
        "amount": {
          "type": "number",
          "format": "decimal",
          "description": "The forecasted cost for the total time period which is being tracked by the budget. This value is only provided if the budget contains a forecast alert type.",
          "readOnly": true
        },
        "unit": {
          "type": "string",
          "description": "The unit of measure for the budget amount.",
          "readOnly": true
        }
      }
    },
    "HighCasedErrorDetails": {
      "type": "object",
      "description": "The details of the error.",
      "properties": {
        "code": {
          "type": "string",
          "description": "Error code.",
          "readOnly": true
        },
        "message": {
          "type": "string",
          "description": "Error message indicating why the operation failed.",
          "readOnly": true
        }
      }
    },
    "HighCasedErrorResponse": {
      "type": "object",
      "description": "Error response indicates that the service is not able to process the incoming request. The reason is provided in the error message.\n\nSome Error responses:\n\n* 429 TooManyRequests - Request is throttled. Retry after waiting for the time specified in the \"x-ms-ratelimit-microsoft.consumption-retry-after\" header.\n\n* 503 ServiceUnavailable - Service is temporarily unavailable. Retry after waiting for the time specified in the \"Retry-After\" header.",
      "properties": {
        "error": {
          "$ref": "#/definitions/HighCasedErrorDetails",
          "description": "The details of the error."
        }
      }
    },
    "LegacyChargeSummary": {
      "type": "object",
      "description": "Legacy charge summary.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/LegacyChargeSummaryProperties",
          "description": "Properties for legacy charge summary",
          "x-ms-client-flatten": true
        }
      },
      "required": [
        "properties"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/ChargeSummary"
        }
      ],
      "x-ms-discriminator-value": "legacy"
    },
    "LegacyChargeSummaryProperties": {
      "type": "object",
      "description": "The properties of legacy charge summary.",
      "properties": {
        "billingPeriodId": {
          "type": "string",
          "description": "The id of the billing period resource that the charge belongs to.",
          "readOnly": true
        },
        "usageStart": {
          "type": "string",
          "description": "Usage start date.",
          "readOnly": true
        },
        "usageEnd": {
          "type": "string",
          "description": "Usage end date.",
          "readOnly": true
        },
        "azureCharges": {
          "type": "number",
          "format": "decimal",
          "description": "Azure Charges.",
          "readOnly": true
        },
        "chargesBilledSeparately": {
          "type": "number",
          "format": "decimal",
          "description": "Charges Billed separately.",
          "readOnly": true
        },
        "azureMarketplaceCharges": {
          "type": "number",
          "format": "decimal",
          "description": "Marketplace Charges.",
          "readOnly": true
        },
        "currency": {
          "type": "string",
          "description": "Currency Code",
          "readOnly": true
        }
      }
    },
    "LegacyReservationRecommendation": {
      "type": "object",
      "description": "Legacy reservation recommendation.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/LegacyReservationRecommendationProperties",
          "description": "Properties for legacy reservation recommendation",
          "x-ms-client-flatten": true
        }
      },
      "required": [
        "properties"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/ReservationRecommendation"
        }
      ],
      "x-ms-discriminator-value": "legacy"
    },
    "LegacyReservationRecommendationProperties": {
      "type": "object",
      "description": "The properties of the reservation recommendation.",
      "properties": {
        "lookBackPeriod": {
          "type": "string",
          "description": "The number of days of usage to look back for recommendation.",
          "readOnly": true
        },
        "instanceFlexibilityRatio": {
          "type": "number",
          "format": "float",
          "description": "The instance Flexibility Ratio.",
          "readOnly": true
        },
        "instanceFlexibilityGroup": {
          "type": "string",
          "description": "The instance Flexibility Group.",
          "readOnly": true
        },
        "normalizedSize": {
          "type": "string",
          "description": "The normalized Size.",
          "readOnly": true
        },
        "recommendedQuantityNormalized": {
          "type": "number",
          "format": "float",
          "description": "The recommended Quantity Normalized.",
          "readOnly": true
        },
        "meterId": {
          "type": "string",
          "format": "uuid",
          "description": "The meter id (GUID)",
          "readOnly": true
        },
        "resourceType": {
          "type": "string",
          "description": "The azure resource type.",
          "readOnly": true
        },
        "term": {
          "type": "string",
          "description": "Term period of the reservation. ex: P1M, P1Y or P3Y.",
          "readOnly": true
        },
        "costWithNoReservedInstances": {
          "type": "number",
          "format": "decimal",
          "description": "The total amount of cost without reserved instances.",
          "readOnly": true
        },
        "recommendedQuantity": {
          "type": "number",
          "format": "decimal",
          "description": "Recommended quality for reserved instances.",
          "readOnly": true
        },
        "totalCostWithReservedInstances": {
          "type": "number",
          "format": "decimal",
          "description": "The total amount of cost with reserved instances.",
          "readOnly": true
        },
        "netSavings": {
          "type": "number",
          "format": "decimal",
          "description": "Total estimated savings with reserved instances.",
          "readOnly": true
        },
        "firstUsageDate": {
          "type": "string",
          "format": "date-time",
          "description": "The usage date for looking back.",
          "readOnly": true
        },
        "scope": {
          "type": "string",
          "description": "Shared or single recommendation."
        },
        "skuProperties": {
          "type": "array",
          "description": "List of sku properties",
          "items": {
            "$ref": "#/definitions/SkuProperty"
          },
          "readOnly": true,
          "x-ms-identifiers": [
            "name"
          ]
        },
        "lastUsageDate": {
          "type": "string",
          "format": "date-time",
          "description": "The last usage date used for looking back for computing the recommendation.",
          "readOnly": true
        },
        "totalHours": {
          "type": "integer",
          "format": "int32",
          "description": "The total hours for which the cost is covered.",
          "readOnly": true
        }
      },
      "discriminator": "scope",
      "required": [
        "scope"
      ]
    },
    "LegacyReservationTransaction": {
      "type": "object",
      "description": "Legacy Reservation transaction resource.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/LegacyReservationTransactionProperties",
          "description": "The properties of a legacy reservation transaction.",
          "x-ms-client-flatten": true
        }
      },
      "required": [
        "properties"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/ReservationTransaction"
        }
      ]
    },
    "LegacyReservationTransactionProperties": {
      "type": "object",
      "description": "The properties of a legacy reservation transaction.",
      "properties": {
        "eventDate": {
          "type": "string",
          "format": "date-time",
          "description": "The date of the transaction",
          "readOnly": true
        },
        "reservationOrderId": {
          "type": "string",
          "description": "The reservation order ID is the identifier for a reservation purchase. Each reservation order ID represents a single purchase transaction. A reservation order contains reservations. The reservation order specifies the VM size and region for the reservations.",
          "readOnly": true
        },
        "description": {
          "type": "string",
          "description": "The description of the transaction.",
          "readOnly": true
        },
        "eventType": {
          "type": "string",
          "description": "The type of the transaction (Purchase, Cancel or Refund).",
          "readOnly": true
        },
        "quantity": {
          "type": "number",
          "format": "decimal",
          "description": "The quantity of the transaction.",
          "readOnly": true
        },
        "amount": {
          "type": "number",
          "format": "decimal",
          "description": "The charge of the transaction.",
          "readOnly": true
        },
        "currency": {
          "type": "string",
          "description": "The ISO currency in which the transaction is charged, for example, USD.",
          "readOnly": true
        },
        "reservationOrderName": {
          "type": "string",
          "description": "The name of the reservation order.",
          "readOnly": true
        },
        "purchasingEnrollment": {
          "type": "string",
          "description": "The purchasing enrollment.",
          "readOnly": true
        },
        "purchasingSubscriptionGuid": {
          "type": "string",
          "format": "uuid",
          "description": "The subscription guid that makes the transaction.",
          "readOnly": true
        },
        "purchasingSubscriptionName": {
          "type": "string",
          "description": "The subscription name that makes the transaction.",
          "readOnly": true
        },
        "armSkuName": {
          "type": "string",
          "description": "This is the ARM Sku name. It can be used to join with the serviceType field in additional info in usage records.",
          "readOnly": true
        },
        "term": {
          "type": "string",
          "description": "This is the term of the transaction.",
          "readOnly": true
        },
        "region": {
          "type": "string",
          "description": "The region of the transaction.",
          "readOnly": true
        },
        "accountName": {
          "type": "string",
          "description": "The name of the account that makes the transaction.",
          "readOnly": true
        },
        "accountOwnerEmail": {
          "type": "string",
          "description": "The email of the account owner that makes the transaction.",
          "readOnly": true
        },
        "departmentName": {
          "type": "string",
          "description": "The department name.",
          "readOnly": true
        },
        "costCenter": {
          "type": "string",
          "description": "The cost center of this department if it is a department and a cost center is provided.",
          "readOnly": true
        },
        "currentEnrollment": {
          "type": "string",
          "description": "The current enrollment.",
          "readOnly": true
        },
        "billingFrequency": {
          "type": "string",
          "description": "The billing frequency, which can be either one-time or recurring.",
          "readOnly": true
        },
        "billingMonth": {
          "type": "integer",
          "format": "int32",
          "description": "The billing month(yyyyMMdd), on which the event initiated.",
          "readOnly": true
        },
        "monetaryCommitment": {
          "type": "number",
          "format": "decimal",
          "description": "The monetary commitment amount at the enrollment scope.",
          "readOnly": true
        },
        "overage": {
          "type": "number",
          "format": "decimal",
          "description": "The overage amount at the enrollment scope.",
          "readOnly": true
        }
      }
    },
    "LegacySharedScopeReservationRecommendationProperties": {
      "type": "object",
      "description": "The properties of the legacy reservation recommendation for shared scope.",
      "allOf": [
        {
          "$ref": "#/definitions/LegacyReservationRecommendationProperties"
        }
      ],
      "x-ms-discriminator-value": "Shared"
    },
    "LegacySingleScopeReservationRecommendationProperties": {
      "type": "object",
      "description": "The properties of the legacy reservation recommendation for single scope.",
      "properties": {
        "subscriptionId": {
          "type": "string",
          "format": "uuid",
          "description": "Subscription id associated with single scoped recommendation.",
          "readOnly": true
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/LegacyReservationRecommendationProperties"
        }
      ],
      "x-ms-discriminator-value": "Single"
    },
    "LegacyUsageDetail": {
      "type": "object",
      "description": "Legacy usage detail.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/LegacyUsageDetailProperties",
          "description": "Properties for legacy usage details",
          "x-ms-client-flatten": true
        }
      },
      "required": [
        "properties"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/UsageDetail"
        }
      ],
      "x-ms-discriminator-value": "legacy"
    },
    "LegacyUsageDetailProperties": {
      "type": "object",
      "description": "The properties of the legacy usage detail.",
      "properties": {
        "billingAccountId": {
          "type": "string",
          "description": "Billing Account identifier.",
          "readOnly": true
        },
        "billingAccountName": {
          "type": "string",
          "description": "Billing Account Name.",
          "readOnly": true
        },
        "billingPeriodStartDate": {
          "type": "string",
          "format": "date-time",
          "description": "The billing period start date.",
          "readOnly": true
        },
        "billingPeriodEndDate": {
          "type": "string",
          "format": "date-time",
          "description": "The billing period end date.",
          "readOnly": true
        },
        "billingProfileId": {
          "type": "string",
          "description": "Billing Profile identifier.",
          "readOnly": true
        },
        "billingProfileName": {
          "type": "string",
          "description": "Billing Profile Name.",
          "readOnly": true
        },
        "accountOwnerId": {
          "type": "string",
          "description": "Account Owner Id.",
          "readOnly": true
        },
        "accountName": {
          "type": "string",
          "description": "Account Name.",
          "readOnly": true
        },
        "subscriptionId": {
          "type": "string",
          "description": "Subscription guid.",
          "readOnly": true
        },
        "subscriptionName": {
          "type": "string",
          "description": "Subscription name.",
          "readOnly": true
        },
        "date": {
          "type": "string",
          "format": "date-time",
          "description": "Date for the usage record.",
          "readOnly": true
        },
        "product": {
          "type": "string",
          "description": "Product name for the consumed service or purchase. Not available for Marketplace.",
          "readOnly": true
        },
        "partNumber": {
          "type": "string",
          "description": "Part Number of the service used. Can be used to join with the price sheet. Not available for marketplace.",
          "readOnly": true
        },
        "meterId": {
          "type": "string",
          "format": "uuid",
          "description": "The meter id (GUID). Not available for marketplace. For reserved instance this represents the primary meter for which the reservation was purchased. For the actual VM Size for which the reservation is purchased see productOrderName.",
          "readOnly": true
        },
        "meterDetails": {
          "$ref": "#/definitions/MeterDetailsResponse",
          "description": "The details about the meter. By default this is not populated, unless it's specified in $expand.",
          "readOnly": true
        },
        "quantity": {
          "type": "number",
          "format": "decimal",
          "description": "The usage quantity.",
          "readOnly": true
        },
        "effectivePrice": {
          "type": "number",
          "format": "decimal",
          "description": "Effective Price that's charged for the usage.",
          "readOnly": true
        },
        "cost": {
          "type": "number",
          "format": "decimal",
          "description": "The amount of cost before tax.",
          "readOnly": true
        },
        "unitPrice": {
          "type": "number",
          "format": "decimal",
          "description": "Unit Price is the price applicable to you. (your EA or other contract price).",
          "readOnly": true
        },
        "billingCurrency": {
          "type": "string",
          "description": "Billing Currency.",
          "readOnly": true
        },
        "resourceLocation": {
          "type": "string",
          "description": "Resource Location.",
          "readOnly": true
        },
        "consumedService": {
          "type": "string",
          "description": "Consumed service name. Name of the azure resource provider that emits the usage or was purchased. This value is not provided for marketplace usage.",
          "readOnly": true
        },
        "resourceId": {
          "type": "string",
          "description": "Unique identifier of the Azure Resource Manager usage detail resource.",
          "readOnly": true
        },
        "resourceName": {
          "type": "string",
          "description": "Resource Name.",
          "readOnly": true
        },
        "serviceInfo1": {
          "type": "string",
          "description": "Service-specific metadata.",
          "readOnly": true
        },
        "serviceInfo2": {
          "type": "string",
          "description": "Legacy field with optional service-specific metadata.",
          "readOnly": true
        },
        "additionalInfo": {
          "type": "string",
          "description": "Additional details of this usage item. By default this is not populated, unless it's specified in $expand. Use this field to get usage line item specific details such as the actual VM Size (ServiceType) or the ratio in which the reservation discount is applied.",
          "readOnly": true
        },
        "invoiceSection": {
          "type": "string",
          "description": "Invoice Section Name.",
          "readOnly": true
        },
        "costCenter": {
          "type": "string",
          "description": "The cost center of this department if it is a department and a cost center is provided.",
          "readOnly": true
        },
        "resourceGroup": {
          "type": "string",
          "description": "Resource Group Name.",
          "readOnly": true
        },
        "reservationId": {
          "type": "string",
          "description": "ARM resource id of the reservation. Only applies to records relevant to reservations.",
          "readOnly": true
        },
        "reservationName": {
          "type": "string",
          "description": "User provided display name of the reservation. Last known name for a particular day is populated in the daily data. Only applies to records relevant to reservations.",
          "readOnly": true
        },
        "productOrderId": {
          "type": "string",
          "description": "Product Order Id. For reservations this is the Reservation Order ID.",
          "readOnly": true
        },
        "productOrderName": {
          "type": "string",
          "description": "Product Order Name. For reservations this is the SKU that was purchased.",
          "readOnly": true
        },
        "offerId": {
          "type": "string",
          "description": "Offer Id. Ex: MS-AZR-0017P, MS-AZR-0148P.",
          "readOnly": true
        },
        "isAzureCreditEligible": {
          "type": "boolean",
          "description": "Is Azure Credit Eligible.",
          "readOnly": true
        },
        "term": {
          "type": "string",
          "description": "Term (in months). 1 month for monthly recurring purchase. 12 months for a 1 year reservation. 36 months for a 3 year reservation.",
          "readOnly": true
        },
        "publisherName": {
          "type": "string",
          "description": "Publisher Name.",
          "readOnly": true
        },
        "publisherType": {
          "type": "string",
          "description": "Publisher Type.",
          "readOnly": true
        },
        "planName": {
          "type": "string",
          "description": "Plan Name.",
          "readOnly": true
        },
        "chargeType": {
          "type": "string",
          "description": "Indicates a charge represents credits, usage, a Marketplace purchase, a reservation fee, or a refund.",
          "readOnly": true
        },
        "frequency": {
          "type": "string",
          "description": "Indicates how frequently this charge will occur. OneTime for purchases which only happen once, Monthly for fees which recur every month, and UsageBased for charges based on how much a service is used.",
          "readOnly": true
        },
        "payGPrice": {
          "type": "number",
          "format": "decimal",
          "description": "Retail price for the resource.",
          "readOnly": true
        },
        "benefitId": {
          "type": "string",
          "description": "Unique identifier for the applicable benefit.",
          "readOnly": true
        },
        "benefitName": {
          "type": "string",
          "description": "Name of the applicable benefit.",
          "readOnly": true
        },
        "pricingModel": {
          "$ref": "#/definitions/PricingModelType",
          "description": "Identifier that indicates how the meter is priced.",
          "readOnly": true
        }
      }
    },
    "LookBackPeriod": {
      "type": "string",
      "enum": [
        "Last7Days",
        "Last30Days",
        "Last60Days"
      ],
      "x-ms-enum": {
        "name": "LookBackPeriod",
        "modelAsString": true,
        "values": [
          {
            "name": "Last07Days",
            "value": "Last7Days",
            "description": "Use 7 days of data for recommendations"
          },
          {
            "name": "Last30Days",
            "value": "Last30Days",
            "description": "Use 30 days of data for recommendations"
          },
          {
            "name": "Last60Days",
            "value": "Last60Days",
            "description": "Use 60 days of data for recommendations"
          }
        ]
      }
    },
    "LotProperties": {
      "type": "object",
      "description": "The lot properties.",
      "properties": {
        "originalAmount": {
          "$ref": "#/definitions/amount",
          "description": "The original amount of a lot, Note: This will not be returned for Contributor Organization Type in Multi-Entity consumption commitment",
          "readOnly": true
        },
        "closedBalance": {
          "$ref": "#/definitions/amount",
          "description": "The balance as of the last invoice.",
          "readOnly": true
        },
        "source": {
          "$ref": "#/definitions/LotSource",
          "description": "The source of the lot.",
          "readOnly": true
        },
        "startDate": {
          "type": "string",
          "format": "date-time",
          "description": "The date when the lot became effective.",
          "readOnly": true
        },
        "expirationDate": {
          "type": "string",
          "format": "date-time",
          "description": "The expiration date of a lot.",
          "readOnly": true
        },
        "poNumber": {
          "type": "string",
          "description": "The po number of the invoice on which the lot was added. This property is not available for ConsumptionCommitment lots.",
          "readOnly": true
        },
        "purchasedDate": {
          "type": "string",
          "format": "date-time",
          "description": "The date when the lot was added.",
          "readOnly": true
        },
        "status": {
          "$ref": "#/definitions/Status",
          "description": "The status of the lot.",
          "readOnly": true
        },
        "creditCurrency": {
          "type": "string",
          "description": "The currency of the lot.",
          "readOnly": true
        },
        "billingCurrency": {
          "type": "string",
          "description": "The billing currency of the lot.",
          "readOnly": true
        },
        "originalAmountInBillingCurrency": {
          "$ref": "#/definitions/AmountWithExchangeRate",
          "description": "The original amount of a lot in billing currency,  Note: This will not be returned for Contributor Organization Type in Multi-Entity consumption commitment",
          "readOnly": true
        },
        "closedBalanceInBillingCurrency": {
          "$ref": "#/definitions/AmountWithExchangeRate",
          "description": "The balance as of the last invoice in billing currency.",
          "readOnly": true
        },
        "reseller": {
          "$ref": "#/definitions/Reseller",
          "description": "The reseller of the lot.",
          "readOnly": true
        },
        "isEstimatedBalance": {
          "type": "boolean",
          "description": "If true, the listed details are based on an estimation and it will be subjected to change.",
          "readOnly": true
        },
        "eTag": {
          "type": "string",
          "description": "The eTag for the resource.",
          "readOnly": true
        },
        "OrganizationType": {
          "$ref": "#/definitions/OrganizationType",
          "description": "The organization type of the lot.",
          "readOnly": true
        },
        "usedAmount": {
          "$ref": "#/definitions/amount",
          "description": "Amount consumed from the commitment.",
          "readOnly": true
        }
      }
    },
    "LotSource": {
      "type": "string",
      "description": "The source of the lot.",
      "enum": [
        "PurchasedCredit",
        "PromotionalCredit",
        "ConsumptionCommitment"
      ],
      "x-ms-enum": {
        "name": "LotSource",
        "modelAsString": true,
        "values": [
          {
            "name": "PurchasedCredit",
            "value": "PurchasedCredit"
          },
          {
            "name": "PromotionalCredit",
            "value": "PromotionalCredit"
          },
          {
            "name": "ConsumptionCommitment",
            "value": "ConsumptionCommitment"
          }
        ]
      }
    },
    "LotSummary": {
      "type": "object",
      "description": "A lot summary resource.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/LotProperties",
          "description": "The lot properties.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProxyResource"
        }
      ]
    },
    "Lots": {
      "type": "object",
      "description": "Result of listing lot summary.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The list of lot summary.",
          "items": {
            "$ref": "#/definitions/LotSummary"
          },
          "readOnly": true
        },
        "nextLink": {
          "type": "string",
          "description": "URL to get the next set of operation list results if there are any.",
          "readOnly": true
        }
      }
    },
    "ManagementGroupAggregatedCostProperties": {
      "type": "object",
      "description": "The properties of the Management Group Aggregated Cost.",
      "properties": {
        "billingPeriodId": {
          "type": "string",
          "description": "The id of the billing period resource that the aggregated cost belongs to.",
          "readOnly": true
        },
        "usageStart": {
          "type": "string",
          "format": "date-time",
          "description": "The start of the date time range covered by aggregated cost.",
          "readOnly": true
        },
        "usageEnd": {
          "type": "string",
          "format": "date-time",
          "description": "The end of the date time range covered by the aggregated cost.",
          "readOnly": true
        },
        "azureCharges": {
          "type": "number",
          "format": "decimal",
          "description": "Azure Charges.",
          "readOnly": true
        },
        "marketplaceCharges": {
          "type": "number",
          "format": "decimal",
          "description": "Marketplace Charges.",
          "readOnly": true
        },
        "chargesBilledSeparately": {
          "type": "number",
          "format": "decimal",
          "description": "Charges Billed Separately.",
          "readOnly": true
        },
        "currency": {
          "type": "string",
          "description": "The ISO currency in which the meter is charged, for example, USD.",
          "readOnly": true
        },
        "children": {
          "type": "array",
          "description": "Children of a management group",
          "items": {
            "$ref": "#/definitions/ManagementGroupAggregatedCostResult"
          }
        },
        "includedSubscriptions": {
          "type": "array",
          "description": "List of subscription Guids included in the calculation of aggregated cost",
          "items": {
            "type": "string"
          }
        },
        "excludedSubscriptions": {
          "type": "array",
          "description": "List of subscription Guids excluded from the calculation of aggregated cost",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ManagementGroupAggregatedCostResult": {
      "type": "object",
      "description": "A management group aggregated cost resource.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ManagementGroupAggregatedCostProperties",
          "description": "The properties of the Management Group Aggregated Cost.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ]
    },
    "Marketplace": {
      "type": "object",
      "description": "A marketplace resource.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/MarketplaceProperties",
          "description": "The properties of the marketplace usage detail.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ]
    },
    "MarketplaceProperties": {
      "type": "object",
      "description": "The properties of the marketplace usage detail.",
      "properties": {
        "billingPeriodId": {
          "type": "string",
          "description": "The id of the billing period resource that the usage belongs to.",
          "readOnly": true
        },
        "usageStart": {
          "type": "string",
          "format": "date-time",
          "description": "The start of the date time range covered by the usage detail.",
          "readOnly": true
        },
        "usageEnd": {
          "type": "string",
          "format": "date-time",
          "description": "The end of the date time range covered by the usage detail.",
          "readOnly": true
        },
        "resourceRate": {
          "type": "number",
          "format": "decimal",
          "description": "The marketplace resource rate.",
          "readOnly": true
        },
        "offerName": {
          "type": "string",
          "description": "The type of offer.",
          "readOnly": true
        },
        "resourceGroup": {
          "type": "string",
          "description": "The name of resource group.",
          "readOnly": true
        },
        "additionalInfo": {
          "type": "string",
          "description": "Additional information.",
          "readOnly": true
        },
        "orderNumber": {
          "type": "string",
          "description": "The order number.",
          "readOnly": true
        },
        "instanceName": {
          "type": "string",
          "description": "The name of the resource instance that the usage is about.",
          "readOnly": true
        },
        "instanceId": {
          "type": "string",
          "description": "The uri of the resource instance that the usage is about.",
          "readOnly": true
        },
        "currency": {
          "type": "string",
          "description": "The ISO currency in which the meter is charged, for example, USD.",
          "readOnly": true
        },
        "consumedQuantity": {
          "type": "number",
          "format": "decimal",
          "description": "The quantity of usage.",
          "readOnly": true
        },
        "unitOfMeasure": {
          "type": "string",
          "description": "The unit of measure.",
          "readOnly": true
        },
        "pretaxCost": {
          "type": "number",
          "format": "decimal",
          "description": "The amount of cost before tax.",
          "readOnly": true
        },
        "isEstimated": {
          "type": "boolean",
          "description": "The estimated usage is subject to change.",
          "readOnly": true
        },
        "meterId": {
          "type": "string",
          "format": "uuid",
          "description": "The meter id (GUID).",
          "readOnly": true
        },
        "subscriptionGuid": {
          "type": "string",
          "format": "uuid",
          "description": "Subscription guid.",
          "readOnly": true
        },
        "subscriptionName": {
          "type": "string",
          "description": "Subscription name.",
          "readOnly": true
        },
        "accountName": {
          "type": "string",
          "description": "Account name.",
          "readOnly": true
        },
        "departmentName": {
          "type": "string",
          "description": "Department name.",
          "readOnly": true
        },
        "consumedService": {
          "type": "string",
          "description": "Consumed service name.",
          "readOnly": true
        },
        "costCenter": {
          "type": "string",
          "description": "The cost center of this department if it is a department and a costcenter exists",
          "readOnly": true
        },
        "additionalProperties": {
          "type": "string",
          "description": "Additional details of this usage item. By default this is not populated, unless it's specified in $expand.",
          "readOnly": true
        },
        "publisherName": {
          "type": "string",
          "description": "The name of publisher.",
          "readOnly": true
        },
        "planName": {
          "type": "string",
          "description": "The name of plan.",
          "readOnly": true
        },
        "isRecurringCharge": {
          "type": "boolean",
          "description": "Flag indicating whether this is a recurring charge or not.",
          "readOnly": true
        }
      }
    },
    "MarketplacesListResult": {
      "type": "object",
      "description": "Result of listing marketplaces. It contains a list of available marketplaces in reverse chronological order by billing period.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The list of marketplaces.",
          "items": {
            "$ref": "#/definitions/Marketplace"
          },
          "readOnly": true
        },
        "nextLink": {
          "type": "string",
          "description": "The link (url) to the next page of results.",
          "readOnly": true
        }
      }
    },
    "MeterDetails": {
      "type": "object",
      "description": "The properties of the meter detail.",
      "properties": {
        "meterName": {
          "type": "string",
          "description": "The name of the meter, within the given meter category",
          "readOnly": true
        },
        "meterCategory": {
          "type": "string",
          "description": "The category of the meter, for example, 'Cloud services', 'Networking', etc..",
          "readOnly": true
        },
        "meterSubCategory": {
          "type": "string",
          "description": "The subcategory of the meter, for example, 'A6 Cloud services', 'ExpressRoute (IXP)', etc..",
          "readOnly": true
        },
        "unit": {
          "type": "string",
          "description": "The unit in which the meter consumption is charged, for example, 'Hours', 'GB', etc.",
          "readOnly": true
        },
        "meterLocation": {
          "type": "string",
          "description": "The location in which the Azure service is available.",
          "readOnly": true
        },
        "totalIncludedQuantity": {
          "type": "number",
          "format": "decimal",
          "description": "The total included quantity associated with the offer.",
          "readOnly": true
        },
        "pretaxStandardRate": {
          "type": "number",
          "format": "decimal",
          "description": "The pretax listing price.",
          "readOnly": true
        },
        "serviceName": {
          "type": "string",
          "description": "The name of the service.",
          "readOnly": true
        },
        "serviceTier": {
          "type": "string",
          "description": "The service tier.",
          "readOnly": true
        }
      }
    },
    "MeterDetailsResponse": {
      "type": "object",
      "description": "The properties of the meter detail.",
      "properties": {
        "meterName": {
          "type": "string",
          "description": "The name of the meter, within the given meter category",
          "readOnly": true
        },
        "meterCategory": {
          "type": "string",
          "description": "The category of the meter, for example, 'Cloud services', 'Networking', etc..",
          "readOnly": true
        },
        "meterSubCategory": {
          "type": "string",
          "description": "The subcategory of the meter, for example, 'A6 Cloud services', 'ExpressRoute (IXP)', etc..",
          "readOnly": true
        },
        "unitOfMeasure": {
          "type": "string",
          "description": "The unit in which the meter consumption is charged, for example, 'Hours', 'GB', etc.",
          "readOnly": true
        },
        "serviceFamily": {
          "type": "string",
          "description": "The service family.",
          "readOnly": true
        }
      }
    },
    "Metrictype": {
      "type": "string",
      "enum": [
        "actualcost",
        "amortizedcost",
        "usage"
      ],
      "x-ms-enum": {
        "name": "Metrictype",
        "modelAsString": true,
        "values": [
          {
            "name": "ActualCostMetricType",
            "value": "actualcost",
            "description": "Actual cost data."
          },
          {
            "name": "AmortizedCostMetricType",
            "value": "amortizedcost",
            "description": "Amortized cost data."
          },
          {
            "name": "UsageMetricType",
            "value": "usage",
            "description": "Usage data."
          }
        ]
      }
    },
    "ModernChargeSummary": {
      "type": "object",
      "description": "Modern charge summary.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ModernChargeSummaryProperties",
          "description": "Properties for modern charge summary",
          "x-ms-client-flatten": true
        }
      },
      "required": [
        "properties"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/ChargeSummary"
        }
      ],
      "x-ms-discriminator-value": "modern"
    },
    "ModernChargeSummaryProperties": {
      "type": "object",
      "description": "The properties of modern charge summary.",
      "properties": {
        "billingPeriodId": {
          "type": "string",
          "description": "The id of the billing period resource that the charge belongs to.",
          "readOnly": true
        },
        "usageStart": {
          "type": "string",
          "description": "Usage start date.",
          "readOnly": true
        },
        "usageEnd": {
          "type": "string",
          "description": "Usage end date.",
          "readOnly": true
        },
        "azureCharges": {
          "$ref": "#/definitions/amount",
          "description": "Azure Charges.",
          "readOnly": true
        },
        "chargesBilledSeparately": {
          "$ref": "#/definitions/amount",
          "description": "Charges Billed separately.",
          "readOnly": true
        },
        "marketplaceCharges": {
          "$ref": "#/definitions/amount",
          "description": "Marketplace Charges.",
          "readOnly": true
        },
        "billingAccountId": {
          "type": "string",
          "description": "Billing Account Id",
          "readOnly": true
        },
        "billingProfileId": {
          "type": "string",
          "description": "Billing Profile Id",
          "readOnly": true
        },
        "invoiceSectionId": {
          "type": "string",
          "description": "Invoice Section Id",
          "readOnly": true
        },
        "customerId": {
          "type": "string",
          "description": "Customer Id",
          "readOnly": true
        },
        "isInvoiced": {
          "type": "boolean",
          "description": "Is charge Invoiced",
          "readOnly": true
        },
        "subscriptionId": {
          "type": "string",
          "description": "Subscription guid.",
          "readOnly": true
        }
      }
    },
    "ModernReservationRecommendation": {
      "type": "object",
      "description": "Modern reservation recommendation.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ModernReservationRecommendationProperties",
          "description": "Properties for modern reservation recommendation",
          "x-ms-client-flatten": true
        }
      },
      "required": [
        "properties"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/ReservationRecommendation"
        }
      ],
      "x-ms-discriminator-value": "modern"
    },
    "ModernReservationRecommendationProperties": {
      "type": "object",
      "description": "The properties of the reservation recommendation.",
      "properties": {
        "location": {
          "type": "string",
          "description": "Resource Location.",
          "readOnly": true
        },
        "lookBackPeriod": {
          "type": "integer",
          "format": "int32",
          "description": "The number of days of usage to look back for recommendation.",
          "readOnly": true
        },
        "instanceFlexibilityRatio": {
          "type": "number",
          "format": "float",
          "description": "The instance Flexibility Ratio.",
          "readOnly": true
        },
        "instanceFlexibilityGroup": {
          "type": "string",
          "description": "The instance Flexibility Group.",
          "readOnly": true
        },
        "normalizedSize": {
          "type": "string",
          "description": "The normalized Size.",
          "readOnly": true
        },
        "recommendedQuantityNormalized": {
          "type": "number",
          "format": "float",
          "description": "The recommended Quantity Normalized.",
          "readOnly": true
        },
        "meterId": {
          "type": "string",
          "format": "uuid",
          "description": "The meter id (GUID)",
          "readOnly": true
        },
        "term": {
          "type": "string",
          "description": "Term period of the reservation. ex: P1M, P1Y or P3Y.",
          "readOnly": true
        },
        "costWithNoReservedInstances": {
          "$ref": "#/definitions/amount",
          "description": "The total amount of cost without reserved instances.",
          "readOnly": true
        },
        "recommendedQuantity": {
          "type": "number",
          "format": "decimal",
          "description": "Recommended quality for reserved instances.",
          "readOnly": true
        },
        "resourceType": {
          "type": "string",
          "description": "Resource type.",
          "readOnly": true
        },
        "totalCostWithReservedInstances": {
          "$ref": "#/definitions/amount",
          "description": "The total amount of cost with reserved instances.",
          "readOnly": true
        },
        "netSavings": {
          "$ref": "#/definitions/amount",
          "description": "Total estimated savings with reserved instances.",
          "readOnly": true
        },
        "firstUsageDate": {
          "type": "string",
          "format": "date-time",
          "description": "The usage date for looking back.",
          "readOnly": true
        },
        "scope": {
          "type": "string",
          "description": "Shared or single recommendation."
        },
        "skuProperties": {
          "type": "array",
          "description": "List of sku properties",
          "items": {
            "$ref": "#/definitions/SkuProperty"
          },
          "readOnly": true,
          "x-ms-identifiers": [
            "name"
          ]
        },
        "skuName": {
          "type": "string",
          "description": "This is the ARM Sku name.",
          "readOnly": true
        },
        "lastUsageDate": {
          "type": "string",
          "format": "date-time",
          "description": "The last usage date used for looking back for computing the recommendation.",
          "readOnly": true
        },
        "totalHours": {
          "type": "integer",
          "format": "int32",
          "description": "The total hours for which the cost is covered.",
          "readOnly": true
        }
      },
      "discriminator": "scope",
      "required": [
        "scope"
      ]
    },
    "ModernReservationTransaction": {
      "type": "object",
      "description": "Modern Reservation transaction resource.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ModernReservationTransactionProperties",
          "description": "The properties of a modern reservation transaction.",
          "x-ms-client-flatten": true
        }
      },
      "required": [
        "properties"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/ReservationTransactionResource"
        }
      ]
    },
    "ModernReservationTransactionProperties": {
      "type": "object",
      "description": "The properties of a modern reservation transaction.",
      "properties": {
        "amount": {
          "type": "number",
          "format": "decimal",
          "description": "The charge of the transaction.",
          "readOnly": true
        },
        "armSkuName": {
          "type": "string",
          "description": "This is the ARM Sku name. It can be used to join with the serviceType field in additional info in usage records.",
          "readOnly": true
        },
        "billingFrequency": {
          "type": "string",
          "description": "The billing frequency, which can be either one-time or recurring.",
          "readOnly": true
        },
        "billingProfileId": {
          "type": "string",
          "description": "Billing profile Id.",
          "readOnly": true
        },
        "billingProfileName": {
          "type": "string",
          "description": "Billing profile name.",
          "readOnly": true
        },
        "currency": {
          "type": "string",
          "description": "The ISO currency in which the transaction is charged, for example, USD.",
          "readOnly": true
        },
        "description": {
          "type": "string",
          "description": "The description of the transaction.",
          "readOnly": true
        },
        "eventDate": {
          "type": "string",
          "format": "date-time",
          "description": "The date of the transaction",
          "readOnly": true
        },
        "eventType": {
          "type": "string",
          "description": "The type of the transaction (Purchase, Cancel or Refund).",
          "readOnly": true
        },
        "invoice": {
          "type": "string",
          "description": "Invoice Number",
          "readOnly": true
        },
        "invoiceId": {
          "type": "string",
          "description": "Invoice Id as on the invoice where the specific transaction appears.",
          "readOnly": true
        },
        "invoiceSectionId": {
          "type": "string",
          "description": "Invoice Section Id",
          "readOnly": true
        },
        "invoiceSectionName": {
          "type": "string",
          "description": "Invoice Section Name.",
          "readOnly": true
        },
        "purchasingSubscriptionGuid": {
          "type": "string",
          "format": "uuid",
          "description": "The subscription guid that makes the transaction.",
          "readOnly": true
        },
        "purchasingSubscriptionName": {
          "type": "string",
          "description": "The subscription name that makes the transaction.",
          "readOnly": true
        },
        "quantity": {
          "type": "number",
          "format": "decimal",
          "description": "The quantity of the transaction.",
          "readOnly": true
        },
        "region": {
          "type": "string",
          "description": "The region of the transaction.",
          "readOnly": true
        },
        "reservationOrderId": {
          "type": "string",
          "description": "The reservation order ID is the identifier for a reservation purchase. Each reservation order ID represents a single purchase transaction. A reservation order contains reservations. The reservation order specifies the VM size and region for the reservations.",
          "readOnly": true
        },
        "reservationOrderName": {
          "type": "string",
          "description": "The name of the reservation order.",
          "readOnly": true
        },
        "term": {
          "type": "string",
          "description": "This is the term of the transaction.",
          "readOnly": true
        }
      }
    },
    "ModernReservationTransactionsListResult": {
      "type": "object",
      "description": "Result of listing reservation recommendations.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The list of reservation recommendations.",
          "items": {
            "$ref": "#/definitions/ModernReservationTransaction"
          },
          "readOnly": true
        },
        "nextLink": {
          "type": "string",
          "description": "The link (url) to the next page of results.",
          "readOnly": true
        }
      }
    },
    "ModernSharedScopeReservationRecommendationProperties": {
      "type": "object",
      "description": "The properties of the modern reservation recommendation for shared scope.",
      "allOf": [
        {
          "$ref": "#/definitions/ModernReservationRecommendationProperties"
        }
      ],
      "x-ms-discriminator-value": "Shared"
    },
    "ModernSingleScopeReservationRecommendationProperties": {
      "type": "object",
      "description": "The properties of the modern reservation recommendation for single scope.",
      "properties": {
        "subscriptionId": {
          "type": "string",
          "format": "uuid",
          "description": "Subscription ID associated with single scoped recommendation.",
          "readOnly": true
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ModernReservationRecommendationProperties"
        }
      ],
      "x-ms-discriminator-value": "Single"
    },
    "ModernUsageDetail": {
      "type": "object",
      "description": "Modern usage detail.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ModernUsageDetailProperties",
          "description": "Properties for modern usage details",
          "x-ms-client-flatten": true
        }
      },
      "required": [
        "properties"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/UsageDetail"
        }
      ],
      "x-ms-discriminator-value": "modern"
    },
    "ModernUsageDetailProperties": {
      "type": "object",
      "description": "The properties of the usage detail.",
      "properties": {
        "billingAccountId": {
          "type": "string",
          "description": "Billing Account identifier.",
          "readOnly": true
        },
        "effectivePrice": {
          "type": "number",
          "format": "decimal",
          "description": "Effective Price that's charged for the usage.",
          "readOnly": true
        },
        "pricingModel": {
          "$ref": "#/definitions/PricingModelType",
          "description": "Identifier that indicates how the meter is priced",
          "readOnly": true
        },
        "billingAccountName": {
          "type": "string",
          "description": "Name of the Billing Account.",
          "readOnly": true
        },
        "billingPeriodStartDate": {
          "type": "string",
          "format": "date-time",
          "description": "Billing Period Start Date as in the invoice.",
          "readOnly": true
        },
        "billingPeriodEndDate": {
          "type": "string",
          "format": "date-time",
          "description": "Billing Period End Date as in the invoice.",
          "readOnly": true
        },
        "billingProfileId": {
          "type": "string",
          "description": "Identifier for the billing profile that groups costs across invoices in the a singular billing currency across across the customers who have onboarded the Microsoft customer agreement and the customers in CSP who have made entitlement purchases like SaaS, Marketplace, RI, etc.",
          "readOnly": true
        },
        "billingProfileName": {
          "type": "string",
          "description": "Name of the billing profile that groups costs across invoices in the a singular billing currency across across the customers who have onboarded the Microsoft customer agreement and the customers in CSP who have made entitlement purchases like SaaS, Marketplace, RI, etc.",
          "readOnly": true
        },
        "subscriptionGuid": {
          "type": "string",
          "description": "Unique Microsoft generated identifier for the Azure Subscription.",
          "readOnly": true
        },
        "subscriptionName": {
          "type": "string",
          "description": "Name of the Azure Subscription.",
          "readOnly": true
        },
        "date": {
          "type": "string",
          "format": "date-time",
          "description": "Date for the usage record.",
          "readOnly": true
        },
        "product": {
          "type": "string",
          "description": "Name of the product that has accrued charges by consumption or purchase as listed in the invoice. Not available for Marketplace.",
          "readOnly": true
        },
        "meterId": {
          "type": "string",
          "format": "uuid",
          "description": "The meter id (GUID). Not available for marketplace. For reserved instance this represents the primary meter for which the reservation was purchased. For the actual VM Size for which the reservation is purchased see productOrderName.",
          "readOnly": true
        },
        "meterName": {
          "type": "string",
          "description": "Identifies the name of the meter against which consumption is measured.",
          "readOnly": true
        },
        "meterRegion": {
          "type": "string",
          "description": "Identifies the location of the datacenter for certain services that are priced based on datacenter location.",
          "readOnly": true
        },
        "meterCategory": {
          "type": "string",
          "description": "Identifies the top-level service for the usage.",
          "readOnly": true
        },
        "meterSubCategory": {
          "type": "string",
          "description": "Defines the type or sub-category of Azure service that can affect the rate.",
          "readOnly": true
        },
        "serviceFamily": {
          "type": "string",
          "description": "List the service family for the product purchased or charged (Example: Storage ; Compute).",
          "readOnly": true
        },
        "quantity": {
          "type": "number",
          "format": "decimal",
          "description": "Measure the quantity purchased or consumed.The amount of the meter used during the billing period.",
          "readOnly": true
        },
        "unitOfMeasure": {
          "type": "string",
          "description": "Identifies the Unit that the service is charged in. For example, GB, hours, 10,000 s.",
          "readOnly": true
        },
        "instanceName": {
          "type": "string",
          "description": "Instance Name.",
          "readOnly": true
        },
        "costInUSD": {
          "type": "number",
          "format": "decimal",
          "description": "Estimated extendedCost or blended cost before tax in USD.",
          "readOnly": true
        },
        "unitPrice": {
          "type": "number",
          "format": "decimal",
          "description": "Unit Price is the price applicable to you. (your EA or other contract price).",
          "readOnly": true
        },
        "billingCurrencyCode": {
          "type": "string",
          "description": "The currency defining the billed cost.",
          "readOnly": true
        },
        "resourceLocation": {
          "type": "string",
          "description": "Name of the resource location.",
          "readOnly": true
        },
        "consumedService": {
          "type": "string",
          "description": "Consumed service name. Name of the azure resource provider that emits the usage or was purchased. This value is not provided for marketplace usage.",
          "readOnly": true
        },
        "serviceInfo1": {
          "type": "string",
          "description": "Service-specific metadata.",
          "readOnly": true
        },
        "serviceInfo2": {
          "type": "string",
          "description": "Legacy field with optional service-specific metadata.",
          "readOnly": true
        },
        "additionalInfo": {
          "type": "string",
          "description": "Additional details of this usage item. Use this field to get usage line item specific details such as the actual VM Size (ServiceType) or the ratio in which the reservation discount is applied.",
          "readOnly": true
        },
        "invoiceSectionId": {
          "type": "string",
          "description": "Identifier of the project that is being charged in the invoice. Not applicable for Microsoft Customer Agreements onboarded by partners.",
          "readOnly": true
        },
        "invoiceSectionName": {
          "type": "string",
          "description": "Name of the project that is being charged in the invoice. Not applicable for Microsoft Customer Agreements onboarded by partners.",
          "readOnly": true
        },
        "costCenter": {
          "type": "string",
          "description": "The cost center of this department if it is a department and a cost center is provided.",
          "readOnly": true
        },
        "resourceGroup": {
          "type": "string",
          "description": "Name of the Azure resource group used for cohesive lifecycle management of resources.",
          "readOnly": true
        },
        "reservationId": {
          "type": "string",
          "description": "ARM resource id of the reservation. Only applies to records relevant to reservations.",
          "readOnly": true
        },
        "reservationName": {
          "type": "string",
          "description": "User provided display name of the reservation. Last known name for a particular day is populated in the daily data. Only applies to records relevant to reservations.",
          "readOnly": true
        },
        "productOrderId": {
          "type": "string",
          "description": "The identifier for the asset or Azure plan name that the subscription belongs to. For example: Azure Plan. For reservations this is the Reservation Order ID.",
          "readOnly": true
        },
        "productOrderName": {
          "type": "string",
          "description": "Product Order Name. For reservations this is the SKU that was purchased.",
          "readOnly": true
        },
        "isAzureCreditEligible": {
          "type": "boolean",
          "description": "Determines if the cost is eligible to be paid for using Azure credits.",
          "readOnly": true
        },
        "term": {
          "type": "string",
          "description": "Term (in months). Displays the term for the validity of the offer. For example. In case of reserved instances it displays 12 months for yearly term of reserved instance. For one time purchases or recurring purchases, the terms displays 1 month; This is not applicable for Azure consumption.",
          "readOnly": true
        },
        "publisherName": {
          "type": "string",
          "description": "Name of the publisher of the service including Microsoft or Third Party publishers.",
          "readOnly": true
        },
        "publisherType": {
          "type": "string",
          "description": "Type of publisher that identifies if the publisher is first party, third party reseller or third party agency.",
          "readOnly": true
        },
        "chargeType": {
          "type": "string",
          "description": "Indicates a charge represents credits, usage, a Marketplace purchase, a reservation fee, or a refund.",
          "readOnly": true
        },
        "frequency": {
          "type": "string",
          "description": "Indicates how frequently this charge will occur. OneTime for purchases which only happen once, Monthly for fees which recur every month, and UsageBased for charges based on how much a service is used.",
          "readOnly": true
        },
        "costInBillingCurrency": {
          "type": "number",
          "format": "decimal",
          "description": "ExtendedCost or blended cost before tax in billed currency.",
          "readOnly": true
        },
        "costInPricingCurrency": {
          "type": "number",
          "format": "decimal",
          "description": "ExtendedCost or blended cost before tax in pricing currency to correlate with prices.",
          "readOnly": true
        },
        "exchangeRate": {
          "type": "string",
          "description": "Exchange rate used in conversion from pricing currency to billing currency.",
          "readOnly": true
        },
        "exchangeRateDate": {
          "type": "string",
          "format": "date-time",
          "description": "Date on which exchange rate used in conversion from pricing currency to billing currency.",
          "readOnly": true
        },
        "invoiceId": {
          "type": "string",
          "description": "Invoice ID as on the invoice where the specific transaction appears.",
          "readOnly": true
        },
        "previousInvoiceId": {
          "type": "string",
          "description": "Reference to an original invoice there is a refund (negative cost). This is populated only when there is a refund.",
          "readOnly": true
        },
        "pricingCurrencyCode": {
          "type": "string",
          "description": "Pricing Billing Currency.",
          "readOnly": true
        },
        "productIdentifier": {
          "type": "string",
          "description": "Identifier for the product that has accrued charges by consumption or purchase . This is the concatenated key of productId and SkuId in partner center.",
          "readOnly": true
        },
        "resourceLocationNormalized": {
          "type": "string",
          "description": "Resource Location Normalized.",
          "readOnly": true
        },
        "servicePeriodStartDate": {
          "type": "string",
          "format": "date-time",
          "description": "Start date for the rating period when the service usage was rated for charges. The prices for Azure services are determined for the rating period.",
          "readOnly": true
        },
        "servicePeriodEndDate": {
          "type": "string",
          "format": "date-time",
          "description": "End date for the period when the service usage was rated for charges. The prices for Azure services are determined based on the rating period.",
          "readOnly": true
        },
        "customerTenantId": {
          "type": "string",
          "description": "Identifier of the customer's AAD tenant.",
          "readOnly": true
        },
        "customerName": {
          "type": "string",
          "description": "Name of the customer's AAD tenant.",
          "readOnly": true
        },
        "partnerTenantId": {
          "type": "string",
          "description": "Identifier for the partner's AAD tenant.",
          "readOnly": true
        },
        "partnerName": {
          "type": "string",
          "description": "Name of the partner' AAD tenant.",
          "readOnly": true
        },
        "resellerMpnId": {
          "type": "string",
          "description": "MPNId for the reseller associated with the subscription.",
          "readOnly": true
        },
        "resellerName": {
          "type": "string",
          "description": "Reseller Name.",
          "readOnly": true
        },
        "publisherId": {
          "type": "string",
          "description": "Publisher Id.",
          "readOnly": true
        },
        "marketPrice": {
          "type": "number",
          "format": "decimal",
          "description": "Market Price that's charged for the usage.",
          "readOnly": true
        },
        "exchangeRatePricingToBilling": {
          "type": "number",
          "format": "decimal",
          "description": "Exchange Rate from pricing currency to billing currency.",
          "readOnly": true
        },
        "paygCostInBillingCurrency": {
          "type": "number",
          "format": "decimal",
          "description": "The amount of PayG cost before tax in billing currency.",
          "readOnly": true
        },
        "paygCostInUSD": {
          "type": "number",
          "format": "decimal",
          "description": "The amount of PayG cost before tax in US Dollar currency.",
          "readOnly": true
        },
        "partnerEarnedCreditRate": {
          "type": "number",
          "format": "decimal",
          "description": "Rate of discount applied if there is a partner earned credit (PEC) based on partner admin link access.",
          "readOnly": true
        },
        "partnerEarnedCreditApplied": {
          "type": "string",
          "description": "Flag to indicate if partner earned credit has been applied or not.",
          "readOnly": true
        },
        "payGPrice": {
          "type": "number",
          "format": "decimal",
          "description": "Retail price for the resource.",
          "readOnly": true
        },
        "benefitId": {
          "type": "string",
          "description": "Unique identifier for the applicable benefit.",
          "readOnly": true
        },
        "benefitName": {
          "type": "string",
          "description": "Name of the applicable benefit.",
          "readOnly": true
        },
        "provider": {
          "type": "string",
          "description": "Identifier for Product Category or Line Of Business, Ex - Azure, Microsoft 365, AWS e.t.c",
          "readOnly": true
        },
        "costAllocationRuleName": {
          "type": "string",
          "description": "Name for Cost Allocation Rule.",
          "readOnly": true
        }
      }
    },
    "Notification": {
      "type": "object",
      "description": "The notification associated with a budget.",
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "The notification is enabled or not."
        },
        "operator": {
          "$ref": "#/definitions/OperatorType",
          "description": "The comparison operator."
        },
        "threshold": {
          "type": "number",
          "format": "decimal",
          "description": "Threshold value associated with a notification. Notification is sent when the cost exceeded the threshold. It is always percent and has to be between 0 and 1000."
        },
        "contactEmails": {
          "type": "array",
          "description": "Email addresses to send the budget notification to when the threshold is exceeded. Must have at least one contact email or contact group specified at the Subscription or Resource Group scopes. All other scopes must have at least one contact email specified.",
          "minItems": 0,
          "maxItems": 50,
          "items": {
            "type": "string"
          }
        },
        "contactRoles": {
          "type": "array",
          "description": "Contact roles to send the budget notification to when the threshold is exceeded.",
          "items": {
            "type": "string"
          }
        },
        "contactGroups": {
          "type": "array",
          "description": "Action groups to send the budget notification to when the threshold is exceeded. Must be provided as a fully qualified Azure resource id. Only supported at Subscription or Resource Group scopes.",
          "minItems": 0,
          "maxItems": 50,
          "items": {
            "type": "string"
          }
        },
        "thresholdType": {
          "type": "string",
          "description": "The type of threshold",
          "default": "Actual",
          "enum": [
            "Actual",
            "Forecasted"
          ],
          "x-ms-enum": {
            "name": "ThresholdType",
            "modelAsString": true,
            "values": [
              {
                "name": "Actual",
                "value": "Actual",
                "description": "Actual costs budget alerts notify when the actual accrued cost exceeds the allocated budget ."
              },
              {
                "name": "Forecasted",
                "value": "Forecasted",
                "description": "Forecasted costs budget alerts provide advanced notification that your spending trends are likely to exceed your allocated budget, as it relies on forecasted cost predictions."
              }
            ]
          }
        },
        "locale": {
          "$ref": "#/definitions/CultureCode",
          "description": "Language in which the recipient will receive the notification"
        }
      },
      "required": [
        "enabled",
        "operator",
        "threshold",
        "contactEmails"
      ]
    },
    "Operation": {
      "type": "object",
      "description": "A Consumption REST API operation.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Operation Id.",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "Operation name: {provider}/{resource}/{operation}.",
          "readOnly": true
        },
        "display": {
          "$ref": "#/definitions/OperationDisplay",
          "description": "The object that represents the operation."
        }
      }
    },
    "OperationDisplay": {
      "type": "object",
      "description": "The object that represents the operation.",
      "properties": {
        "provider": {
          "type": "string",
          "description": "Service provider: Microsoft.Consumption.",
          "readOnly": true
        },
        "resource": {
          "type": "string",
          "description": "Resource on which the operation is performed: UsageDetail, etc.",
          "readOnly": true
        },
        "operation": {
          "type": "string",
          "description": "Operation type: Read, write, delete, etc.",
          "readOnly": true
        },
        "description": {
          "type": "string",
          "description": "Description of the operation.",
          "readOnly": true
        }
      }
    },
    "OperationListResult": {
      "type": "object",
      "description": "Result of listing consumption operations. It contains a list of operations and a URL link to get the next set of results.",
      "properties": {
        "value": {
          "type": "array",
          "description": "List of consumption operations supported by the Microsoft.Consumption resource provider.",
          "items": {
            "$ref": "#/definitions/Operation"
          },
          "readOnly": true
        },
        "nextLink": {
          "type": "string",
          "description": "URL to get the next set of operation list results if there are any.",
          "readOnly": true
        }
      }
    },
    "OperationStatus": {
      "type": "object",
      "description": "The status of the long running operation.",
      "properties": {
        "status": {
          "$ref": "#/definitions/OperationStatusType",
          "description": "The status of the long running operation."
        },
        "properties": {
          "$ref": "#/definitions/PricesheetDownloadProperties",
          "description": "The properties of the resource generated.",
          "x-ms-client-flatten": true
        }
      }
    },
    "OperationStatusType": {
      "type": "string",
      "description": "The status of the long running operation.",
      "enum": [
        "Running",
        "Completed",
        "Failed"
      ],
      "x-ms-enum": {
        "name": "OperationStatusType",
        "modelAsString": true,
        "values": [
          {
            "name": "Running",
            "value": "Running"
          },
          {
            "name": "Completed",
            "value": "Completed"
          },
          {
            "name": "Failed",
            "value": "Failed"
          }
        ]
      }
    },
    "OperatorType": {
      "type": "string",
      "description": "The comparison operator.",
      "enum": [
        "EqualTo",
        "GreaterThan",
        "GreaterThanOrEqualTo"
      ],
      "x-ms-enum": {
        "name": "OperatorType",
        "modelAsString": true,
        "values": [
          {
            "name": "EqualTo",
            "value": "EqualTo",
            "description": "Alert will be triggered if the evaluated cost is the same as threshold value. Note: It’s not recommended to use this OperatorType as there’s low chance of cost being exactly the same as threshold value, leading to missing of your alert. This OperatorType will be deprecated in future."
          },
          {
            "name": "GreaterThan",
            "value": "GreaterThan",
            "description": "Alert will be triggered if the evaluated cost is greater than the threshold value. Note: This is the recommended OperatorType while configuring Budget Alert."
          },
          {
            "name": "GreaterThanOrEqualTo",
            "value": "GreaterThanOrEqualTo",
            "description": "Alert will be triggered if the evaluated cost is greater than or equal to the threshold value."
          }
        ]
      }
    },
    "OrganizationType": {
      "type": "string",
      "description": "The organization type of the lot.",
      "enum": [
        "Primary",
        "Contributor"
      ],
      "x-ms-enum": {
        "name": "OrganizationType",
        "modelAsString": true,
        "values": [
          {
            "name": "PrimaryOrganizationType",
            "value": "Primary",
            "description": "Primary organization type for Multi-Entity consumption commitment."
          },
          {
            "name": "ContributorOrganizationType",
            "value": "Contributor",
            "description": "Contributor organization type for Multi-Entity consumption commitment."
          }
        ]
      }
    },
    "PriceSheetModel": {
      "type": "object",
      "description": "price sheet result. It contains the pricesheet associated with billing period",
      "properties": {
        "pricesheets": {
          "type": "array",
          "description": "Price sheet",
          "items": {
            "$ref": "#/definitions/PriceSheetProperties"
          },
          "readOnly": true,
          "x-ms-identifiers": [
            "meterId"
          ]
        },
        "nextLink": {
          "type": "string",
          "description": "The link (url) to the next page of results.",
          "readOnly": true
        },
        "download": {
          "$ref": "#/definitions/MeterDetails",
          "description": "Pricesheet download details.",
          "readOnly": true
        }
      }
    },
    "PriceSheetProperties": {
      "type": "object",
      "description": "The properties of the price sheet.",
      "properties": {
        "billingPeriodId": {
          "type": "string",
          "description": "The id of the billing period resource that the usage belongs to.",
          "readOnly": true
        },
        "meterId": {
          "type": "string",
          "format": "uuid",
          "description": "The meter id (GUID)",
          "readOnly": true
        },
        "meterDetails": {
          "$ref": "#/definitions/MeterDetails",
          "description": "The details about the meter. By default this is not populated, unless it's specified in $expand.",
          "readOnly": true
        },
        "unitOfMeasure": {
          "type": "string",
          "description": "Unit of measure",
          "readOnly": true
        },
        "includedQuantity": {
          "type": "number",
          "format": "decimal",
          "description": "Included quality for an offer",
          "readOnly": true
        },
        "partNumber": {
          "type": "string",
          "description": "Part Number",
          "readOnly": true
        },
        "unitPrice": {
          "type": "number",
          "format": "decimal",
          "description": "Unit Price",
          "readOnly": true
        },
        "currencyCode": {
          "type": "string",
          "description": "Currency Code",
          "readOnly": true
        },
        "offerId": {
          "type": "string",
          "description": "Offer Id",
          "readOnly": true
        },
        "savingsPlan": {
          "$ref": "#/definitions/SavingsPlan",
          "description": "SavingsPlan Details",
          "readOnly": true
        }
      }
    },
    "PriceSheetResult": {
      "type": "object",
      "description": "An pricesheet resource.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/PriceSheetModel",
          "description": "price sheet result. It contains the pricesheet associated with billing period",
          "x-ms-client-flatten": true
        },
        "etag": {
          "type": "string",
          "description": "eTag of the resource. To handle concurrent update scenario, this field will be used to determine whether the user is updating the latest version or not.",
          "readOnly": true
        },
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          },
          "readOnly": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "PricesheetDownloadProperties": {
      "type": "object",
      "description": "The properties of the price sheet download.",
      "properties": {
        "downloadUrl": {
          "type": "string",
          "description": "The link (url) to download the pricesheet.",
          "readOnly": true
        },
        "validTill": {
          "type": "string",
          "format": "date-time",
          "description": "Download link validity.",
          "readOnly": true
        }
      }
    },
    "PricingModelType": {
      "type": "string",
      "description": "Identifier that indicates how the meter is priced.",
      "enum": [
        "On Demand",
        "Reservation",
        "Spot"
      ],
      "x-ms-enum": {
        "name": "PricingModelType",
        "modelAsString": true,
        "values": [
          {
            "name": "On Demand",
            "value": "On Demand"
          },
          {
            "name": "Reservation",
            "value": "Reservation"
          },
          {
            "name": "Spot",
            "value": "Spot"
          }
        ]
      }
    },
    "ProxyResource": {
      "type": "object",
      "description": "The Resource model definition.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Resource Id.",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "Resource name.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "Resource type.",
          "readOnly": true
        },
        "eTag": {
          "type": "string",
          "description": "eTag of the resource. To handle concurrent update scenario, this field will be used to determine whether the user is updating the latest version or not."
        }
      }
    },
    "Reseller": {
      "type": "object",
      "description": "The reseller properties.",
      "properties": {
        "resellerId": {
          "type": "string",
          "description": "The reseller property ID.",
          "readOnly": true
        },
        "resellerDescription": {
          "type": "string",
          "description": "The reseller property description.",
          "readOnly": true
        }
      }
    },
    "ReservationDetail": {
      "type": "object",
      "description": "reservation detail resource.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ReservationDetailProperties",
          "description": "The properties of the reservation detail.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ]
    },
    "ReservationDetailProperties": {
      "type": "object",
      "description": "The properties of the reservation detail.",
      "properties": {
        "reservationOrderId": {
          "type": "string",
          "description": "The reservation order ID is the identifier for a reservation purchase. Each reservation order ID represents a single purchase transaction. A reservation order contains reservations. The reservation order specifies the VM size and region for the reservations.",
          "readOnly": true
        },
        "instanceFlexibilityRatio": {
          "type": "string",
          "description": "The instance Flexibility Ratio.",
          "readOnly": true
        },
        "instanceFlexibilityGroup": {
          "type": "string",
          "description": "The instance Flexibility Group.",
          "readOnly": true
        },
        "reservationId": {
          "type": "string",
          "description": "The reservation ID is the identifier of a reservation within a reservation order. Each reservation is the grouping for applying the benefit scope and also specifies the number of instances to which the reservation benefit can be applied to.",
          "readOnly": true
        },
        "skuName": {
          "type": "string",
          "description": "This is the ARM Sku name. It can be used to join with the serviceType field in additional info in usage records.",
          "readOnly": true
        },
        "reservedHours": {
          "type": "number",
          "format": "decimal",
          "description": "This is the total hours reserved for the day. E.g. if reservation for 1 instance was made on 1 PM, this will be 11 hours for that day and 24 hours from subsequent days.",
          "readOnly": true
        },
        "usageDate": {
          "type": "string",
          "format": "date-time",
          "description": "The date on which consumption occurred.",
          "readOnly": true
        },
        "usedHours": {
          "type": "number",
          "format": "decimal",
          "description": "This is the total hours used by the instance.",
          "readOnly": true
        },
        "instanceId": {
          "type": "string",
          "description": "This identifier is the name of the resource or the fully qualified Resource ID.",
          "readOnly": true
        },
        "totalReservedQuantity": {
          "type": "number",
          "format": "decimal",
          "description": "This is the total count of instances that are reserved for the reservationId.",
          "readOnly": true
        },
        "kind": {
          "type": "string",
          "description": "The reservation kind.",
          "readOnly": true
        }
      }
    },
    "ReservationDetailsListResult": {
      "type": "object",
      "description": "Result of listing reservation details.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The list of reservation details.",
          "items": {
            "$ref": "#/definitions/ReservationDetail"
          },
          "readOnly": true
        },
        "nextLink": {
          "type": "string",
          "description": "The link (url) to the next page of results.",
          "readOnly": true
        }
      }
    },
    "ReservationRecommendation": {
      "type": "object",
      "description": "A reservation recommendation resource.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The full qualified ARM ID of an event.",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The ID that uniquely identifies an event.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "Resource type.",
          "readOnly": true
        },
        "etag": {
          "type": "string",
          "description": "The etag for the resource.",
          "readOnly": true
        },
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          },
          "readOnly": true
        },
        "location": {
          "type": "string",
          "description": "Resource location",
          "readOnly": true
        },
        "sku": {
          "type": "string",
          "description": "Resource sku",
          "readOnly": true
        },
        "kind": {
          "$ref": "#/definitions/ReservationRecommendationKind",
          "description": "Specifies the kind of reservation recommendation."
        }
      },
      "discriminator": "kind",
      "required": [
        "kind"
      ]
    },
    "ReservationRecommendationDetailsCalculatedSavingsProperties": {
      "type": "object",
      "description": "Details of estimated savings. The costs and savings are estimated for the term.",
      "properties": {
        "onDemandCost": {
          "type": "number",
          "format": "float",
          "description": "The cost without reservation. Includes hardware and software cost.",
          "readOnly": true
        },
        "overageCost": {
          "type": "number",
          "format": "float",
          "description": "The estimated cost for resource meters that are not covered by the reservation and are billed at pay-as-you-go rates.",
          "readOnly": true
        },
        "quantity": {
          "type": "number",
          "format": "float",
          "description": "The quantity for calculated savings.",
          "readOnly": true
        },
        "reservationCost": {
          "type": "number",
          "format": "float",
          "description": "Hardware cost of the resources covered by the reservation.",
          "readOnly": true
        },
        "totalReservationCost": {
          "type": "number",
          "format": "float",
          "description": "Reservation cost + software cost of the resources covered by the reservation + overage cost.",
          "readOnly": true
        },
        "reservedUnitCount": {
          "type": "number",
          "format": "float",
          "description": "The number of reserved units used to calculate savings. Always 1 for virtual machines."
        },
        "savings": {
          "type": "number",
          "format": "float",
          "description": "The amount saved by purchasing the recommended quantity of reservation. This is equal to onDemandCost - totalReservationCost.",
          "readOnly": true
        }
      }
    },
    "ReservationRecommendationDetailsModel": {
      "type": "object",
      "description": "Reservation recommendation details.",
      "properties": {
        "location": {
          "type": "string",
          "description": "Resource Location."
        },
        "sku": {
          "type": "string",
          "description": "Resource sku"
        },
        "properties": {
          "$ref": "#/definitions/ReservationRecommendationDetailsProperties",
          "description": "The properties of the reservation recommendation.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ]
    },
    "ReservationRecommendationDetailsProperties": {
      "type": "object",
      "description": "The properties of the reservation recommendation.",
      "properties": {
        "currency": {
          "type": "string",
          "description": "An ISO 4217 currency code identifier for the costs and savings",
          "readOnly": true
        },
        "resource": {
          "$ref": "#/definitions/ReservationRecommendationDetailsResourceProperties",
          "description": "Resource specific properties.",
          "readOnly": true
        },
        "resourceGroup": {
          "type": "string",
          "description": "Resource Group.",
          "readOnly": true
        },
        "savings": {
          "$ref": "#/definitions/ReservationRecommendationDetailsSavingsProperties",
          "description": "Savings information for the recommendation.",
          "readOnly": true
        },
        "scope": {
          "type": "string",
          "description": "Scope of the reservation, ex: Single or Shared.",
          "readOnly": true
        },
        "usage": {
          "$ref": "#/definitions/ReservationRecommendationDetailsUsageProperties",
          "description": "Historical usage details used to calculate the estimated savings.",
          "readOnly": true
        }
      }
    },
    "ReservationRecommendationDetailsResourceProperties": {
      "type": "object",
      "description": "Details of the resource.",
      "properties": {
        "appliedScopes": {
          "type": "array",
          "description": "List of subscriptions for which the reservation is applied.",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "onDemandRate": {
          "type": "number",
          "format": "float",
          "description": "On-demand rate of the resource. Most resources use hourly rates, except for BlockBlob, ManagedDisk, Backup, and Azure Files, which use monthly rates. Only hardware rates are included; software rates are excluded.  Note: there could be new resources that use hourly rates in the future.",
          "readOnly": true
        },
        "product": {
          "type": "string",
          "description": "Azure product ex: Standard_E8s_v3 etc.",
          "readOnly": true
        },
        "region": {
          "type": "string",
          "description": "Azure resource region ex:EastUS, WestUS etc.",
          "readOnly": true
        },
        "reservationRate": {
          "type": "number",
          "format": "float",
          "description": "Hourly reservation rate of the resource. Varies based on the term.",
          "readOnly": true
        },
        "resourceType": {
          "type": "string",
          "description": "The azure resource type.",
          "readOnly": true
        }
      }
    },
    "ReservationRecommendationDetailsSavingsProperties": {
      "type": "object",
      "description": "Details of the estimated savings.",
      "properties": {
        "calculatedSavings": {
          "type": "array",
          "description": "List of calculated savings.",
          "items": {
            "$ref": "#/definitions/ReservationRecommendationDetailsCalculatedSavingsProperties"
          },
          "x-ms-identifiers": []
        },
        "lookBackPeriod": {
          "type": "integer",
          "format": "int32",
          "description": "Number of days of usage to look back used for computing the recommendation.",
          "readOnly": true
        },
        "recommendedQuantity": {
          "type": "number",
          "format": "float",
          "description": "Number of recommended units of the resource.",
          "readOnly": true
        },
        "reservationOrderTerm": {
          "type": "string",
          "description": "Term period of the reservation. ex: P1M, P1Y or P3Y.",
          "readOnly": true
        },
        "savingsType": {
          "type": "string",
          "description": "Type of savings, ex: instance.",
          "readOnly": true
        },
        "unitOfMeasure": {
          "type": "string",
          "description": "Measurement unit ex: hour etc.",
          "readOnly": true
        }
      }
    },
    "ReservationRecommendationDetailsUsageProperties": {
      "type": "object",
      "description": "Details about historical usage data that has been used for computing the recommendation.",
      "properties": {
        "firstConsumptionDate": {
          "type": "string",
          "description": "The first usage date used for looking back for computing the recommendation.",
          "readOnly": true
        },
        "lastConsumptionDate": {
          "type": "string",
          "description": "The last usage date used for looking back for computing the recommendation.",
          "readOnly": true
        },
        "lookBackUnitType": {
          "type": "string",
          "description": "What the usage data values represent ex: virtual machine instance.",
          "readOnly": true
        },
        "usageData": {
          "type": "array",
          "description": "The breakdown of historical resource usage.  The values are in the order of usage between the firstConsumptionDate and the lastConsumptionDate.",
          "items": {
            "type": "number",
            "format": "float"
          },
          "readOnly": true
        },
        "usageGrain": {
          "type": "string",
          "description": "The grain of the values represented in the usage data ex: hourly.",
          "readOnly": true
        }
      }
    },
    "ReservationRecommendationKind": {
      "type": "string",
      "description": "Specifies the kind of reservation recommendation.",
      "enum": [
        "legacy",
        "modern"
      ],
      "x-ms-enum": {
        "name": "ReservationRecommendationKind",
        "modelAsString": true,
        "values": [
          {
            "name": "legacy",
            "value": "legacy"
          },
          {
            "name": "modern",
            "value": "modern"
          }
        ]
      }
    },
    "ReservationRecommendationsListResult": {
      "type": "object",
      "description": "Result of listing reservation recommendations.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The list of reservation recommendations.",
          "items": {
            "$ref": "#/definitions/ReservationRecommendation"
          },
          "readOnly": true
        },
        "nextLink": {
          "type": "string",
          "description": "The link (url) to the next page of results.",
          "readOnly": true
        },
        "previousLink": {
          "type": "string",
          "description": "The link (url) to the previous page of results.",
          "readOnly": true
        }
      }
    },
    "ReservationSummariesListResult": {
      "type": "object",
      "description": "Result of listing reservation summaries.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The list of reservation summaries.",
          "items": {
            "$ref": "#/definitions/ReservationSummary"
          },
          "readOnly": true
        },
        "nextLink": {
          "type": "string",
          "description": "The link (url) to the next page of results.",
          "readOnly": true
        }
      }
    },
    "ReservationSummary": {
      "type": "object",
      "description": "reservation summary resource.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ReservationSummaryProperties",
          "description": "The properties of the reservation summary.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ]
    },
    "ReservationSummaryProperties": {
      "type": "object",
      "description": "The properties of the reservation summary.",
      "properties": {
        "reservationOrderId": {
          "type": "string",
          "description": "The reservation order ID is the identifier for a reservation purchase. Each reservation order ID represents a single purchase transaction. A reservation order contains reservations. The reservation order specifies the VM size and region for the reservations.",
          "readOnly": true
        },
        "reservationId": {
          "type": "string",
          "description": "The reservation ID is the identifier of a reservation within a reservation order. Each reservation is the grouping for applying the benefit scope and also specifies the number of instances to which the reservation benefit can be applied to.",
          "readOnly": true
        },
        "skuName": {
          "type": "string",
          "description": "This is the ARM Sku name. It can be used to join with the serviceType field in additional info in usage records.",
          "readOnly": true
        },
        "reservedHours": {
          "type": "number",
          "format": "decimal",
          "description": "This is the total hours reserved. E.g. if reservation for 1 instance was made on 1 PM, this will be 11 hours for that day and 24 hours from subsequent days",
          "readOnly": true
        },
        "usageDate": {
          "type": "string",
          "format": "date-time",
          "description": "Data corresponding to the utilization record. If the grain of data is monthly, it will be first day of month.",
          "readOnly": true
        },
        "usedHours": {
          "type": "number",
          "format": "decimal",
          "description": "Total used hours by the reservation",
          "readOnly": true
        },
        "minUtilizationPercentage": {
          "type": "number",
          "format": "decimal",
          "description": "This is the minimum hourly utilization in the usage time (day or month). E.g. if usage record corresponds to 12/10/2017 and on that for hour 4 and 5, utilization was 10%, this field will return 10% for that day",
          "readOnly": true
        },
        "avgUtilizationPercentage": {
          "type": "number",
          "format": "decimal",
          "description": "This is average utilization for the entire time range. (day or month depending on the grain)",
          "readOnly": true
        },
        "maxUtilizationPercentage": {
          "type": "number",
          "format": "decimal",
          "description": "This is the maximum hourly utilization in the usage time (day or month). E.g. if usage record corresponds to 12/10/2017 and on that for hour 4 and 5, utilization was 100%, this field will return 100% for that day.",
          "readOnly": true
        },
        "kind": {
          "type": "string",
          "description": "The reservation kind.",
          "readOnly": true
        },
        "purchasedQuantity": {
          "type": "number",
          "format": "decimal",
          "description": "This is the purchased quantity for the reservationId.",
          "readOnly": true
        },
        "remainingQuantity": {
          "type": "number",
          "format": "decimal",
          "description": "This is the remaining quantity for the reservationId.",
          "readOnly": true
        },
        "totalReservedQuantity": {
          "type": "number",
          "format": "decimal",
          "description": "This is the total count of instances that are reserved for the reservationId.",
          "readOnly": true
        },
        "usedQuantity": {
          "type": "number",
          "format": "decimal",
          "description": "This is the used quantity for the reservationId.",
          "readOnly": true
        },
        "utilizedPercentage": {
          "type": "number",
          "format": "decimal",
          "description": "This is the utilized percentage for the reservation Id.",
          "readOnly": true
        }
      }
    },
    "ReservationTransaction": {
      "type": "object",
      "description": "Reservation transaction resource.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/LegacyReservationTransactionProperties",
          "description": "The properties of a legacy reservation transaction.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ReservationTransactionResource"
        }
      ]
    },
    "ReservationTransactionResource": {
      "type": "object",
      "description": "The Resource model definition.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Resource Id.",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "Resource name.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "Resource type.",
          "readOnly": true
        },
        "tags": {
          "type": "array",
          "description": "Resource tags.",
          "items": {
            "type": "string"
          },
          "readOnly": true
        }
      }
    },
    "ReservationTransactionsListResult": {
      "type": "object",
      "description": "Result of listing reservation recommendations.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The list of reservation recommendations.",
          "items": {
            "$ref": "#/definitions/ReservationTransaction"
          },
          "readOnly": true
        },
        "nextLink": {
          "type": "string",
          "description": "The link (url) to the next page of results.",
          "readOnly": true
        }
      }
    },
    "Resource": {
      "type": "object",
      "description": "The Resource model definition.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The full qualified ARM ID of an event.",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The ID that uniquely identifies an event.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "Resource type.",
          "readOnly": true
        },
        "etag": {
          "type": "string",
          "description": "The etag for the resource.",
          "readOnly": true
        },
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          },
          "readOnly": true
        }
      }
    },
    "ResourceAttributes": {
      "type": "object",
      "description": "The Resource model definition.",
      "properties": {
        "location": {
          "type": "string",
          "description": "Resource location",
          "readOnly": true
        },
        "sku": {
          "type": "string",
          "description": "Resource sku",
          "readOnly": true
        }
      }
    },
    "ResourceScopeActionScope": {
      "type": "object",
      "description": "The scope associated with reservations details operations. This includes '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}' for BillingAccount scope (legacy), and '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}' for BillingProfile scope (modern).",
      "properties": {
        "scope": {
          "type": "string",
          "description": "The fully qualified Azure Resource manager identifier of the resource.",
          "x-ms-client-name": "resourceScope"
        }
      },
      "required": [
        "scope"
      ]
    },
    "SavingsPlan": {
      "type": "object",
      "description": "The properties of the SavingsPlan.",
      "properties": {
        "term": {
          "type": "string",
          "description": "SavingsPlan term",
          "readOnly": true
        },
        "marketPrice": {
          "type": "number",
          "format": "decimal",
          "description": "SavingsPlan Market Price",
          "readOnly": true
        },
        "effectivePrice": {
          "type": "number",
          "format": "decimal",
          "description": "SavingsPlan Effective Price",
          "readOnly": true
        }
      }
    },
    "Scope": {
      "type": "string",
      "enum": [
        "Single",
        "Shared"
      ],
      "x-ms-enum": {
        "name": "Scope",
        "modelAsString": true,
        "values": [
          {
            "name": "Single",
            "value": "Single"
          },
          {
            "name": "Shared",
            "value": "Shared"
          }
        ]
      }
    },
    "SkuProperty": {
      "type": "object",
      "description": "The Sku property",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of sku property.",
          "readOnly": true
        },
        "value": {
          "type": "string",
          "description": "The value of sku property.",
          "readOnly": true
        }
      }
    },
    "Status": {
      "type": "string",
      "description": "The status of the lot.",
      "enum": [
        "None",
        "Active",
        "Inactive",
        "Expired",
        "Complete",
        "Canceled"
      ],
      "x-ms-enum": {
        "name": "Status",
        "modelAsString": true,
        "values": [
          {
            "name": "None",
            "value": "None"
          },
          {
            "name": "Active",
            "value": "Active"
          },
          {
            "name": "Inactive",
            "value": "Inactive"
          },
          {
            "name": "Expired",
            "value": "Expired"
          },
          {
            "name": "Complete",
            "value": "Complete"
          },
          {
            "name": "Canceled",
            "value": "Canceled"
          }
        ]
      }
    },
    "Tag": {
      "type": "object",
      "description": "The tag resource.",
      "properties": {
        "key": {
          "type": "string",
          "description": "Tag key."
        },
        "value": {
          "type": "array",
          "description": "Tag values.",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "TagProperties": {
      "type": "object",
      "description": "The properties of the tag.",
      "properties": {
        "tags": {
          "type": "array",
          "description": "A list of Tag.",
          "items": {
            "$ref": "#/definitions/Tag"
          },
          "x-ms-identifiers": [
            "key"
          ]
        },
        "nextLink": {
          "type": "string",
          "description": "The link (url) to the next page of results.",
          "readOnly": true
        },
        "previousLink": {
          "type": "string",
          "description": "The link (url) to the previous page of results.",
          "readOnly": true
        }
      }
    },
    "TagsResult": {
      "type": "object",
      "description": "A resource listing all tags.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/TagProperties",
          "description": "The properties of the tag.",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProxyResource"
        }
      ]
    },
    "Term": {
      "type": "string",
      "enum": [
        "P1M",
        "P1Y",
        "P3Y"
      ],
      "x-ms-enum": {
        "name": "Term",
        "modelAsString": true,
        "values": [
          {
            "name": "P1M",
            "value": "P1M",
            "description": "1 month reservation term"
          },
          {
            "name": "P1Y",
            "value": "P1Y",
            "description": "1 year reservation term"
          },
          {
            "name": "P3Y",
            "value": "P3Y",
            "description": "3 year reservation term"
          }
        ]
      }
    },
    "ThresholdType": {
      "type": "string",
      "description": "The type of threshold",
      "enum": [
        "Actual",
        "Forecasted"
      ],
      "x-ms-enum": {
        "name": "ThresholdType",
        "modelAsString": true,
        "values": [
          {
            "name": "Actual",
            "value": "Actual",
            "description": "Actual costs budget alerts notify when the actual accrued cost exceeds the allocated budget ."
          },
          {
            "name": "Forecasted",
            "value": "Forecasted",
            "description": "Forecasted costs budget alerts provide advanced notification that your spending trends are likely to exceed your allocated budget, as it relies on forecasted cost predictions."
          }
        ]
      }
    },
    "TimeGrainType": {
      "type": "string",
      "description": "The time covered by a budget. Tracking of the amount will be reset based on the time grain. BillingMonth, BillingQuarter, and BillingAnnual are only supported by WD customers",
      "enum": [
        "Monthly",
        "Quarterly",
        "Annually",
        "BillingMonth",
        "BillingQuarter",
        "BillingAnnual"
      ],
      "x-ms-enum": {
        "name": "TimeGrainType",
        "modelAsString": true,
        "values": [
          {
            "name": "Monthly",
            "value": "Monthly"
          },
          {
            "name": "Quarterly",
            "value": "Quarterly"
          },
          {
            "name": "Annually",
            "value": "Annually"
          },
          {
            "name": "BillingMonth",
            "value": "BillingMonth"
          },
          {
            "name": "BillingQuarter",
            "value": "BillingQuarter"
          },
          {
            "name": "BillingAnnual",
            "value": "BillingAnnual"
          }
        ]
      }
    },
    "UsageDetail": {
      "type": "object",
      "description": "An usage detail resource.",
      "properties": {
        "kind": {
          "$ref": "#/definitions/UsageDetailsKind",
          "description": "Specifies the kind of usage details."
        }
      },
      "discriminator": "kind",
      "required": [
        "kind"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ]
    },
    "UsageDetailsKind": {
      "type": "string",
      "description": "Specifies the kind of usage details.",
      "enum": [
        "legacy",
        "modern"
      ],
      "x-ms-enum": {
        "name": "UsageDetailsKind",
        "modelAsString": true,
        "values": [
          {
            "name": "legacy",
            "value": "legacy"
          },
          {
            "name": "modern",
            "value": "modern"
          }
        ]
      }
    },
    "UsageDetailsListResult": {
      "type": "object",
      "description": "Result of listing usage details. It contains a list of available usage details in reverse chronological order by billing period.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The list of usage details.",
          "items": {
            "$ref": "#/definitions/UsageDetail"
          },
          "readOnly": true
        },
        "nextLink": {
          "type": "string",
          "description": "The link (url) to the next page of results.",
          "readOnly": true
        }
      }
    },
    "amount": {
      "type": "object",
      "description": "The amount plus currency .",
      "properties": {
        "currency": {
          "type": "string",
          "description": "Amount currency.",
          "readOnly": true
        },
        "value": {
          "type": "number",
          "format": "decimal",
          "description": "Amount.",
          "readOnly": true
        }
      }
    }
  },
  "parameters": {}
}
