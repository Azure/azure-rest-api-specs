{
  "swagger": "2.0",
  "info": {
    "version": "2019-01-01",
    "title": "ConsumptionManagementClient",
    "description": "Consumption management client provides access to consumption resources for Azure Enterprise Subscriptions."
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Azure Active Directory OAuth2 Flow.",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "paths": {
    "/{scope}/providers/Microsoft.Consumption/usageDetails": {
      "get": {
        "tags": [
          "UsageDetails"
        ],
        "operationId": "UsageDetails_List",
        "description": "Lists the usage details for the defined scope. Usage details are available via this API only for May 1, 2014 or later.",
        "externalDocs": {
          "url": "https://docs.microsoft.com/en-us/rest/api/consumption/"
        },
        "x-ms-examples": {
          "UsageDetailsList": {
            "$ref": "./examples/UsageDetailsList.json"
          },
          "UsageDetailsListFilterByTag": {
            "$ref": "./examples/UsageDetailsListFilterByTag.json"
          },
          "UsageDetailsListGroupByTagDate": {
            "$ref": "./examples/UsageDetailsListGroupByTagDate.json"
          },
          "UsageDetailsListForBillingPeriod": {
            "$ref": "./examples/UsageDetailsListForBillingPeriod.json"
          },
          "UsageDetailsExpand": {
            "$ref": "./examples/UsageDetailsExpand.json"
          },
          "UsageDetailsListForBillingPeriodGroupByTag": {
            "$ref": "./examples/UsageDetailsListForBillingPeriodGroupByTag.json"
          },
          "BillingAccountUsageDetailsList": {
            "$ref": "./examples/UsageDetailsListByBillingAccount.json"
          },
          "BillingAccountUsageDetailsListForBillingPeriod": {
            "$ref": "./examples/UsageDetailsListForBillingPeriodByBillingAccount.json"
          },
          "DepartmentUsageDetailsList": {
            "$ref": "./examples/UsageDetailsListByDepartment.json"
          },
          "DepartmentUsageDetailsListForBillingPeriod": {
            "$ref": "./examples/UsageDetailsListForBillingPeriodByDepartment.json"
          },
          "EnrollmentAccountUsageDetailsList": {
            "$ref": "./examples/UsageDetailsListByEnrollmentAccount.json"
          },
          "EnrollmentAccountUsageDetailsListForBillingPeriod": {
            "$ref": "./examples/UsageDetailsListForBillingPeriodByEnrollmentAccount.json"
          },
          "ManagementGroupUsageDetailsList": {
            "$ref": "./examples/UsageDetailsListByManagementGroup.json"
          },
          "ManagementGroupUsageDetailsListForBillingPeriod": {
            "$ref": "./examples/UsageDetailsListForBillingPeriodByManagementGroup.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/scopeUsageDetailsParameter"
          },
          {
            "name": "$expand",
            "description": "May be used to expand the properties/additionalProperties or properties/meterDetails within a list of usage details. By default, these fields are not included when listing usage details.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "$filter",
            "description": "May be used to filter usageDetails by properties/usageEnd (Utc time), properties/usageStart (Utc time), properties/resourceGroup, properties/instanceName, properties/instanceId or tags. The filter supports 'eq', 'lt', 'gt', 'le', 'ge', and 'and'. It does not currently support 'ne', 'or', or 'not'. Tag filter is a key value pair string where key and value is separated by a colon (:).",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "$skiptoken",
            "description": "Skiptoken is only used if a previous operation returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skiptoken parameter that specifies a starting point to use for subsequent calls.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "description": "May be used to limit the number of results to the most recent N usageDetails.",
            "in": "query",
            "required": false,
            "type": "integer",
            "minimum": 1,
            "maximum": 1000
          },
          {
            "name": "$apply",
            "description": "OData apply expression to aggregate usageDetails by tags or (tags and properties/usageStart)",
            "in": "query",
            "required": false,
            "type": "string",
            "x-ms-parameter-location": "method",
            "x-ms-parameter-grouping": {
              "name": "QueryOptions"
            },
            "x-ms-client-name": "Apply"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/UsageDetailsListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/{scope}/providers/Microsoft.Consumption/marketplaces": {
      "get": {
        "tags": [
          "Marketplaces"
        ],
        "x-ms-odata": "#/definitions/Marketplace",
        "operationId": "Marketplaces_List",
        "description": "Lists the marketplaces for a scope at the defined scope. Marketplaces are available via this API only for May 1, 2014 or later.",
        "externalDocs": {
          "url": "https://docs.microsoft.com/en-us/rest/api/consumption/"
        },
        "x-ms-examples": {
          "SubscriptionMarketplacesList": {
            "$ref": "./examples/MarketplacesList.json"
          },
          "SubscriptionMarketplacesListForBillingPeriod": {
            "$ref": "./examples/MarketplacesListForBillingPeriod.json"
          },
          "BillingAccountMarketplacesList": {
            "$ref": "./examples/MarketplacesByBillingAccountList.json"
          },
          "BillingAccountMarketplacesListForBillingPeriod": {
            "$ref": "./examples/MarketplacesByBillingAccountListForBillingPeriod.json"
          },
          "DepartmentMarketplacesList": {
            "$ref": "./examples/MarketplacesByDepartmentList.json"
          },
          "DepartmentMarketplacesListForBillingPeriod": {
            "$ref": "./examples/MarketplacesByDepartment_ListByBillingPeriod.json"
          },
          "EnrollmentAccountMarketplacesList": {
            "$ref": "./examples/MarketplacesByEnrollmentAccountList.json"
          },
          "EnrollmentAccountMarketplacesListForBillingPeriod": {
            "$ref": "./examples/MarketplacesByEnrollmentAccounts_ListByBillingPeriod.json"
          },
          "ManagementGroupMarketplacesList": {
            "$ref": "./examples/MarketplacesByManagementGroupList.json"
          },
          "ManagementGroupMarketplacesListForBillingPeriod": {
            "$ref": "./examples/MarketplacesByManagementGroup_ListForBillingPeriod.json"
          }
        },
        "parameters": [
          {
            "name": "$filter",
            "description": "May be used to filter marketplaces by properties/usageEnd (Utc time), properties/usageStart (Utc time), properties/resourceGroup, properties/instanceName or properties/instanceId. The filter supports 'eq', 'lt', 'gt', 'le', 'ge', and 'and'. It does not currently support 'ne', 'or', or 'not'.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "description": "May be used to limit the number of results to the most recent N marketplaces.",
            "in": "query",
            "required": false,
            "type": "integer",
            "minimum": 1,
            "maximum": 1000
          },
          {
            "name": "$skiptoken",
            "description": "Skiptoken is only used if a previous operation returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skiptoken parameter that specifies a starting point to use for subsequent calls.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "$ref": "#/parameters/scopeMarketplaceParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/MarketplacesListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/{scope}/providers/Microsoft.Consumption/budgets": {
      "get": {
        "tags": [
          "Budgets"
        ],
        "operationId": "Budgets_List",
        "description": "Lists all budgets for the defined scope.",
        "externalDocs": {
          "url": "https://docs.microsoft.com/en-us/rest/api/consumption/"
        },
        "x-ms-examples": {
          "BudgetsList": {
            "$ref": "./examples/BudgetsList.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/scopeBudgetParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/BudgetsListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/{scope}/providers/Microsoft.Consumption/budgets/{budgetName}": {
      "get": {
        "tags": [
          "Budgets"
        ],
        "operationId": "Budgets_Get",
        "description": "Gets the budget for the scope by budget name.",
        "externalDocs": {
          "url": "https://docs.microsoft.com/en-us/rest/api/consumption/"
        },
        "x-ms-examples": {
          "Budget": {
            "$ref": "./examples/Budget.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/scopeBudgetParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "$ref": "#/parameters/budgetNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/Budget"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Budgets"
        ],
        "operationId": "Budgets_CreateOrUpdate",
        "description": "The operation to create or update a budget. Update operation requires latest eTag to be set in the request mandatorily. You may obtain the latest eTag by performing a get operation. Create operation does not require eTag.",
        "externalDocs": {
          "url": "https://docs.microsoft.com/en-us/rest/api/consumption/"
        },
        "x-ms-examples": {
          "CreateOrUpdateBudget": {
            "$ref": "./examples/CreateOrUpdateBudget.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/scopeBudgetParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "$ref": "#/parameters/budgetNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Budget"
            },
            "description": "Parameters supplied to the Create Budget operation."
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/Budget"
            }
          },
          "201": {
            "description": "Created.",
            "schema": {
              "$ref": "#/definitions/Budget"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Budgets"
        ],
        "operationId": "Budgets_Delete",
        "description": "The operation to delete a budget.",
        "externalDocs": {
          "url": "https://docs.microsoft.com/en-us/rest/api/consumption/"
        },
        "x-ms-examples": {
          "DeleteBudget": {
            "$ref": "./examples/DeleteBudget.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/scopeBudgetParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "$ref": "#/parameters/budgetNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The request has succeeded."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/{scope}/providers/Microsoft.Consumption/tags": {
      "get": {
        "tags": [
          "Tags"
        ],
        "operationId": "Tags_Get",
        "description": "Get all available tag keys for the defined scope",
        "externalDocs": {
          "url": "https://docs.microsoft.com/en-us/rest/api/consumption/"
        },
        "x-ms-examples": {
          "Tags_Get": {
            "$ref": "./examples/Tags.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/scopeTagsParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/TagsResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/{scope}/providers/Microsoft.Consumption/charges": {
      "get": {
        "tags": [
          "Charges"
        ],
        "operationId": "Charges_ListByScope",
        "description": "Lists the charges based for the defined scope.",
        "externalDocs": {
          "url": "https://docs.microsoft.com/en-us/rest/api/consumption/"
        },
        "x-ms-examples": {
          "ChargesListForEnrollmentAccount": {
            "$ref": "./examples/ChargesListForEnrollmentAccountFilterByStartEndDate.json"
          },
          "ChangesForBillingPeriodByEnrollmentAccount": {
            "$ref": "./examples/ChargesForBillingPeriodByEnrollmentAccount.json"
          },
          "ChargesListByDepartment": {
            "$ref": "./examples/ChargesListForDepartmentFilterByStartEndDate.json"
          },
          "ChangesForBillingPeriodByDepartment": {
            "$ref": "./examples/ChargesForBillingPeriodByDepartment.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/scopeChargesParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "name": "$filter",
            "description": "May be used to filter charges by properties/usageEnd (Utc time), properties/usageStart (Utc time). The filter supports 'eq', 'lt', 'gt', 'le', 'ge', and 'and'. It does not currently support 'ne', 'or', or 'not'. Tag filter is a key value pair string where key and value is separated by a colon (:).",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/ChargeSummary"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/providers/Microsoft.Consumption/balances": {
      "get": {
        "tags": [
          "Balances"
        ],
        "operationId": "Balances_GetByBillingAccount",
        "description": "Gets the balances for a scope by billingAccountId. Balances are available via this API only for May 1, 2014 or later.",
        "externalDocs": {
          "url": "https://docs.microsoft.com/en-us/rest/api/consumption/"
        },
        "x-ms-examples": {
          "Balances": {
            "$ref": "./examples/BalancesByBillingAccount.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "$ref": "#/parameters/billingAccountIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/Balance"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/providers/Microsoft.Billing/billingPeriods/{billingPeriodName}/providers/Microsoft.Consumption/balances": {
      "get": {
        "tags": [
          "Balances"
        ],
        "operationId": "Balances_GetForBillingPeriodByBillingAccount",
        "description": "Gets the balances for a scope by billing period and billingAccountId. Balances are available via this API only for May 1, 2014 or later.",
        "externalDocs": {
          "url": "https://docs.microsoft.com/en-us/rest/api/consumption/"
        },
        "x-ms-examples": {
          "Balances": {
            "$ref": "./examples/BalancesByBillingAccountForBillingPeriod.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "$ref": "#/parameters/billingAccountIdParameter"
          },
          {
            "$ref": "#/parameters/billingPeriodNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/Balance"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/providers/Microsoft.Capacity/reservationorders/{reservationOrderId}/providers/Microsoft.Consumption/reservationSummaries": {
      "get": {
        "tags": [
          "ReservedInstances"
        ],
        "operationId": "ReservationsSummaries_ListByReservationOrder",
        "description": "Lists the reservations summaries for daily or monthly grain.",
        "externalDocs": {
          "url": "https://docs.microsoft.com/en-us/rest/api/consumption/"
        },
        "x-ms-examples": {
          "ReservationSummariesDaily": {
            "$ref": "./examples/ReservationSummariesDaily.json"
          },
          "ReservationSummariesMonthly": {
            "$ref": "./examples/ReservationSummariesMonthly.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/reservationOrderIdParameter"
          },
          {
            "$ref": "#/parameters/grainParameter"
          },
          {
            "name": "$filter",
            "description": "Required only for daily grain. The properties/UsageDate for start date and end date. The filter supports 'le' and  'ge'",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/ReservationSummariesListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/providers/Microsoft.Capacity/reservationorders/{reservationOrderId}/reservations/{reservationId}/providers/Microsoft.Consumption/reservationSummaries": {
      "get": {
        "tags": [
          "ReservedInstances"
        ],
        "operationId": "ReservationsSummaries_ListByReservationOrderAndReservation",
        "description": "Lists the reservations summaries for daily or monthly grain.",
        "externalDocs": {
          "url": "https://docs.microsoft.com/en-us/rest/api/consumption/"
        },
        "x-ms-examples": {
          "ReservationSummariesDailyWithReservationId": {
            "$ref": "./examples/ReservationSummariesDailyWithReservationId.json"
          },
          "ReservationSummariesMonthlyWithReservationId": {
            "$ref": "./examples/ReservationSummariesMonthlyWithReservationId.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/reservationOrderIdParameter"
          },
          {
            "$ref": "#/parameters/reservationIdParameter"
          },
          {
            "$ref": "#/parameters/grainParameter"
          },
          {
            "name": "$filter",
            "description": "Required only for daily grain. The properties/UsageDate for start date and end date. The filter supports 'le' and  'ge'",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/ReservationSummariesListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/providers/Microsoft.Capacity/reservationorders/{reservationOrderId}/providers/Microsoft.Consumption/reservationDetails": {
      "get": {
        "tags": [
          "ReservedInstances"
        ],
        "operationId": "ReservationsDetails_ListByReservationOrder",
        "description": "Lists the reservations details for provided date range.",
        "externalDocs": {
          "url": "https://docs.microsoft.com/en-us/rest/api/consumption/"
        },
        "x-ms-examples": {
          "ReservationDetails": {
            "$ref": "./examples/ReservationDetails.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/reservationOrderIdParameter"
          },
          {
            "name": "$filter",
            "description": "Filter reservation details by date range. The properties/UsageDate for start date and end date. The filter supports 'le' and  'ge' ",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/ReservationDetailsListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/providers/Microsoft.Capacity/reservationorders/{reservationOrderId}/reservations/{reservationId}/providers/Microsoft.Consumption/reservationDetails": {
      "get": {
        "tags": [
          "ReservedInstances"
        ],
        "operationId": "ReservationsDetails_ListByReservationOrderAndReservation",
        "description": "Lists the reservations details for provided date range.",
        "externalDocs": {
          "url": "https://docs.microsoft.com/en-us/rest/api/consumption/"
        },
        "x-ms-examples": {
          "ReservationDetailsWithReservationId": {
            "$ref": "./examples/ReservationDetailsWithReservationId.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/reservationOrderIdParameter"
          },
          {
            "$ref": "#/parameters/reservationIdParameter"
          },
          {
            "name": "$filter",
            "description": "Filter reservation details by date range. The properties/UsageDate for start date and end date. The filter supports 'le' and  'ge' ",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/ReservationDetailsListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Consumption/reservationRecommendations": {
      "get": {
        "tags": [
          "ReservationRecommendations"
        ],
        "operationId": "ReservationRecommendations_List",
        "description": "List of recommendations for purchasing reserved instances.",
        "externalDocs": {
          "url": "https://docs.microsoft.com/en-us/rest/api/consumption/"
        },
        "x-ms-examples": {
          "ReservationRecommendations": {
            "$ref": "./examples/ReservationRecommendationsList.json"
          },
          "ReservationRecommendationsFilterByScopeLookBackPeriod": {
            "$ref": "./examples/ReservationRecommendationsFilterByScopeLookBackPeriod.json"
          }
        },
        "parameters": [
          {
            "name": "$filter",
            "description": "May be used to filter reservationRecommendations by properties/scope and properties/lookBackPeriod.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/ReservationRecommendationsListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Consumption/pricesheets/default": {
      "get": {
        "tags": [
          "PriceSheet"
        ],
        "operationId": "PriceSheet_Get",
        "description": "Gets the price sheet for a scope by subscriptionId. Price sheet is available via this API only for May 1, 2014 or later.",
        "externalDocs": {
          "url": "https://docs.microsoft.com/en-us/rest/api/consumption/"
        },
        "x-ms-examples": {
          "PriceSheet": {
            "$ref": "./examples/PriceSheet.json"
          }
        },
        "parameters": [
          {
            "name": "$expand",
            "description": "May be used to expand the properties/meterDetails within a price sheet. By default, these fields are not included when returning price sheet.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "$skiptoken",
            "description": "Skiptoken is only used if a previous operation returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skiptoken parameter that specifies a starting point to use for subsequent calls.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "description": "May be used to limit the number of results to the top N results.",
            "in": "query",
            "required": false,
            "type": "integer",
            "minimum": 1,
            "maximum": 1000
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/PriceSheetResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Billing/billingPeriods/{billingPeriodName}/providers/Microsoft.Consumption/pricesheets/default": {
      "get": {
        "tags": [
          "PriceSheet"
        ],
        "operationId": "PriceSheet_GetByBillingPeriod",
        "description": "Get the price sheet for a scope by subscriptionId and billing period. Price sheet is available via this API only for May 1, 2014 or later.",
        "externalDocs": {
          "url": "https://docs.microsoft.com/en-us/rest/api/consumption/"
        },
        "x-ms-examples": {
          "PriceSheetForBillingPeriod": {
            "$ref": "./examples/PriceSheetForBillingPeriod.json"
          },
          "PriceSheetExpand": {
            "$ref": "./examples/PriceSheetExpand.json"
          }
        },
        "parameters": [
          {
            "name": "$expand",
            "description": "May be used to expand the properties/meterDetails within a price sheet. By default, these fields are not included when returning price sheet.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "$skiptoken",
            "description": "Skiptoken is only used if a previous operation returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skiptoken parameter that specifies a starting point to use for subsequent calls.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "$top",
            "description": "May be used to limit the number of results to the top N results.",
            "in": "query",
            "required": false,
            "type": "integer",
            "minimum": 1,
            "maximum": 1000
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "$ref": "#/parameters/billingPeriodNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/PriceSheetResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Consumption/forecasts": {
      "get": {
        "tags": [
          "Forecasts"
        ],
        "x-ms-odata": "#/definitions/Forecast",
        "operationId": "Forecasts_List",
        "description": "Lists the forecast charges by subscriptionId.",
        "externalDocs": {
          "url": "https://docs.microsoft.com/en-us/rest/api/consumption/"
        },
        "x-ms-examples": {
          "ForecastsList": {
            "$ref": "./examples/ForecastsList.json"
          },
          "ForecastsListFilterByGrain": {
            "$ref": "./examples/ForecastsListFilterByGrain.json"
          },
          "ForecastsListFilterByDates": {
            "$ref": "./examples/ForecastsListFilterByDates.json"
          }
        },
        "parameters": [
          {
            "name": "$filter",
            "description": "May be used to filter forecasts by properties/usageDate (Utc time), properties/chargeType or properties/grain. The filter supports 'eq', 'lt', 'gt', 'le', 'ge', and 'and'. It does not currently support 'ne', 'or', or 'not'.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/ForecastsListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": null
        }
      }
    },
    "/providers/Microsoft.Consumption/operations": {
      "get": {
        "tags": [
          "Operations"
        ],
        "operationId": "Operations_List",
        "description": "Lists all of the available consumption REST API operations.",
        "parameters": [
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/OperationListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/providers/Microsoft.Management/managementGroups/{managementGroupId}/providers/Microsoft.Consumption/aggregatedcost": {
      "get": {
        "tags": [
          "AggregatedCost"
        ],
        "operationId": "AggregatedCost_GetByManagementGroup",
        "description": "Provides the aggregate cost of a management group and all child management groups by current billing period.",
        "externalDocs": {
          "url": "https://docs.microsoft.com/en-us/rest/api/consumption/"
        },
        "x-ms-examples": {
          "AggregatedCostByManagementGroup": {
            "$ref": "./examples/AggregatedCostByManagementGroup.json"
          },
          "AggregatedCostByManagementGroupFilterByDate": {
            "$ref": "./examples/AggregatedCostByManagementGroupFilterByDate.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/managementGroupIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "name": "$filter",
            "description": "May be used to filter aggregated cost by properties/usageStart (Utc time), properties/usageEnd (Utc time). The filter supports 'eq', 'lt', 'gt', 'le', 'ge', and 'and'. It does not currently support 'ne', 'or', or 'not'. Tag filter is a key value pair string where key and value is separated by a colon (:).",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/ManagementGroupAggregatedCostResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/providers/Microsoft.Management/managementGroups/{managementGroupId}/providers/Microsoft.Billing/billingPeriods/{billingPeriodName}/Microsoft.Consumption/aggregatedcost": {
      "get": {
        "tags": [
          "AggregatedCost"
        ],
        "operationId": "AggregatedCost_GetForBillingPeriodByManagementGroup",
        "description": "Provides the aggregate cost of a management group and all child management groups by specified billing period",
        "externalDocs": {
          "url": "https://docs.microsoft.com/en-us/rest/api/consumption/"
        },
        "x-ms-examples": {
          "AggregatedCostListForBillingPeriodByManagementGroup": {
            "$ref": "./examples/AggregatedCostForBillingPeriodByManagementGroup.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/managementGroupIdParameter"
          },
          {
            "$ref": "#/parameters/billingPeriodNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/ManagementGroupAggregatedCostResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "MeterDetails": {
      "description": "The properties of the meter detail.",
      "properties": {
        "meterName": {
          "description": "The name of the meter, within the given meter category",
          "type": "string",
          "readOnly": true
        },
        "meterCategory": {
          "description": "The category of the meter, for example, 'Cloud services', 'Networking', etc..",
          "type": "string",
          "readOnly": true
        },
        "meterSubCategory": {
          "description": "The subcategory of the meter, for example, 'A6 Cloud services', 'ExpressRoute (IXP)', etc..",
          "type": "string",
          "readOnly": true
        },
        "unit": {
          "description": "The unit in which the meter consumption is charged, for example, 'Hours', 'GB', etc.",
          "type": "string",
          "readOnly": true
        },
        "meterLocation": {
          "description": "The location in which the Azure service is available.",
          "type": "string",
          "readOnly": true
        },
        "totalIncludedQuantity": {
          "description": "The total included quantity associated with the offer.",
          "type": "number",
          "format": "decimal",
          "readOnly": true
        },
        "pretaxStandardRate": {
          "description": "The pretax listing price.",
          "type": "number",
          "format": "decimal",
          "readOnly": true
        },
        "serviceName": {
          "description": "The name of the service.",
          "type": "string",
          "readOnly": true
        },
        "serviceTier": {
          "description": "The service tier.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "UsageDetail": {
      "description": "An usage detail resource.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/UsageDetailProperties",
          "title": "Usage detail properties"
        }
      }
    },
    "UsageDetailsListResult": {
      "description": "Result of listing usage details. It contains a list of available usage details in reverse chronological order by billing period.",
      "properties": {
        "value": {
          "description": "The list of usage details.",
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/UsageDetail"
          }
        },
        "nextLink": {
          "description": "The link (url) to the next page of results.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "UsageDetailProperties": {
      "description": "The properties of the usage detail.",
      "properties": {
        "billingPeriodId": {
          "description": "The id of the billing period resource that the usage belongs to.",
          "type": "string",
          "readOnly": true
        },
        "invoiceId": {
          "description": "The id of the invoice resource that the usage belongs to.",
          "type": "string",
          "readOnly": true
        },
        "usageStart": {
          "description": "The start of the date time range covered by the usage detail.",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "usageEnd": {
          "description": "The end of the date time range covered by the usage detail.",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "instanceName": {
          "description": "The name of the resource instance that the usage is about.",
          "type": "string",
          "readOnly": true
        },
        "instanceId": {
          "description": "The uri of the resource instance that the usage is about.",
          "type": "string",
          "readOnly": true
        },
        "instanceLocation": {
          "description": "The location of the resource instance that the usage is about.",
          "type": "string",
          "readOnly": true
        },
        "currency": {
          "description": "The ISO currency in which the meter is charged, for example, USD.",
          "type": "string",
          "readOnly": true
        },
        "usageQuantity": {
          "description": "The quantity of usage.",
          "type": "number",
          "format": "decimal",
          "readOnly": true
        },
        "billableQuantity": {
          "description": "The billable usage quantity.",
          "type": "number",
          "format": "decimal",
          "readOnly": true
        },
        "pretaxCost": {
          "description": "The amount of cost before tax.",
          "type": "number",
          "format": "decimal",
          "readOnly": true
        },
        "isEstimated": {
          "description": "The estimated usage is subject to change.",
          "type": "boolean",
          "readOnly": true
        },
        "meterId": {
          "description": "The meter id (GUID).",
          "type": "string",
          "format": "uuid",
          "readOnly": true
        },
        "meterDetails": {
          "description": "The details about the meter. By default this is not populated, unless it's specified in $expand.",
          "$ref": "#/definitions/MeterDetails",
          "readOnly": true
        },
        "subscriptionGuid": {
          "description": "Subscription guid.",
          "type": "string",
          "format": "uuid",
          "readOnly": true
        },
        "subscriptionName": {
          "description": "Subscription name.",
          "type": "string",
          "readOnly": true
        },
        "accountName": {
          "description": "Account name.",
          "type": "string",
          "readOnly": true
        },
        "departmentName": {
          "description": "Department name.",
          "type": "string",
          "readOnly": true
        },
        "product": {
          "description": "Product name.",
          "type": "string",
          "readOnly": true
        },
        "consumedService": {
          "description": "Consumed service name.",
          "type": "string",
          "readOnly": true
        },
        "costCenter": {
          "description": "The cost center of this department if it is a department and a costcenter exists",
          "type": "string",
          "readOnly": true
        },
        "partNumber": {
          "description": "Part Number",
          "type": "string",
          "readOnly": true
        },
        "resourceGuid": {
          "description": "Resource Guid",
          "type": "string",
          "readOnly": true
        },
        "offerId": {
          "description": "Offer Id",
          "type": "string",
          "readOnly": true
        },
        "chargesBilledSeparately": {
          "description": "Charges billed separately",
          "type": "boolean",
          "readOnly": true
        },
        "location": {
          "description": "Resource Location",
          "type": "string",
          "readOnly": true
        },
        "additionalProperties": {
          "description": "Additional details of this usage item. By default this is not populated, unless it's specified in $expand.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "Marketplace": {
      "description": "An marketplace resource.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/MarketplaceProperties",
          "title": "Marketplace properties"
        }
      }
    },
    "MarketplacesListResult": {
      "description": "Result of listing marketplaces. It contains a list of available marketplaces in reverse chronological order by billing period.",
      "type": "object",
      "properties": {
        "value": {
          "description": "The list of marketplaces.",
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/Marketplace"
          }
        },
        "nextLink": {
          "description": "The link (url) to the next page of results.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "MarketplaceProperties": {
      "description": "The properties of the marketplace usage detail.",
      "type": "object",
      "properties": {
        "billingPeriodId": {
          "description": "The id of the billing period resource that the usage belongs to.",
          "type": "string",
          "readOnly": true
        },
        "usageStart": {
          "description": "The start of the date time range covered by the usage detail.",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "usageEnd": {
          "description": "The end of the date time range covered by the usage detail.",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "resourceRate": {
          "description": "The marketplace resource rate.",
          "type": "number",
          "format": "decimal",
          "readOnly": true
        },
        "offerName": {
          "description": "The type of offer.",
          "type": "string",
          "readOnly": true
        },
        "resourceGroup": {
          "description": "The name of resource group.",
          "type": "string",
          "readOnly": true
        },
        "orderNumber": {
          "description": "The order number.",
          "type": "string",
          "readOnly": true
        },
        "instanceName": {
          "description": "The name of the resource instance that the usage is about.",
          "type": "string",
          "readOnly": true
        },
        "instanceId": {
          "description": "The uri of the resource instance that the usage is about.",
          "type": "string",
          "readOnly": true
        },
        "currency": {
          "description": "The ISO currency in which the meter is charged, for example, USD.",
          "type": "string",
          "readOnly": true
        },
        "consumedQuantity": {
          "description": "The quantity of usage.",
          "type": "number",
          "format": "decimal",
          "readOnly": true
        },
        "unitOfMeasure": {
          "description": "The unit of measure.",
          "type": "string",
          "readOnly": true
        },
        "pretaxCost": {
          "description": "The amount of cost before tax.",
          "type": "number",
          "format": "decimal",
          "readOnly": true
        },
        "isEstimated": {
          "description": "The estimated usage is subject to change.",
          "type": "boolean",
          "readOnly": true
        },
        "meterId": {
          "description": "The meter id (GUID).",
          "type": "string",
          "format": "uuid",
          "readOnly": true
        },
        "subscriptionGuid": {
          "description": "Subscription guid.",
          "type": "string",
          "format": "uuid",
          "readOnly": true
        },
        "subscriptionName": {
          "description": "Subscription name.",
          "type": "string",
          "readOnly": true
        },
        "accountName": {
          "description": "Account name.",
          "type": "string",
          "readOnly": true
        },
        "departmentName": {
          "description": "Department name.",
          "type": "string",
          "readOnly": true
        },
        "consumedService": {
          "description": "Consumed service name.",
          "type": "string",
          "readOnly": true
        },
        "costCenter": {
          "description": "The cost center of this department if it is a department and a costcenter exists",
          "type": "string",
          "readOnly": true
        },
        "additionalProperties": {
          "description": "Additional details of this usage item. By default this is not populated, unless it's specified in $expand.",
          "type": "string",
          "readOnly": true
        },
        "publisherName": {
          "description": "The name of publisher.",
          "type": "string",
          "readOnly": true
        },
        "planName": {
          "description": "The name of plan.",
          "type": "string",
          "readOnly": true
        },
        "isRecurringCharge": {
          "description": "Flag indicating whether this is a recurring charge or not.",
          "type": "boolean",
          "readOnly": true
        }
      }
    },
    "Balance": {
      "description": "A balance resource.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/BalanceProperties",
          "title": "Balance properties"
        }
      }
    },
    "BalanceProperties": {
      "description": "The properties of the balance.",
      "type": "object",
      "properties": {
        "currency": {
          "description": "The ISO currency in which the meter is charged, for example, USD.",
          "type": "string",
          "readOnly": true
        },
        "beginningBalance": {
          "description": "The beginning balance for the billing period.",
          "type": "number",
          "format": "decimal",
          "readOnly": true
        },
        "endingBalance": {
          "description": "The ending balance for the billing period (for open periods this will be updated daily).",
          "type": "number",
          "format": "decimal",
          "readOnly": true
        },
        "newPurchases": {
          "description": "Total new purchase amount.",
          "type": "number",
          "format": "decimal",
          "readOnly": true
        },
        "adjustments": {
          "description": "Total adjustment amount.",
          "type": "number",
          "format": "decimal",
          "readOnly": true
        },
        "utilized": {
          "description": "Total Commitment usage.",
          "type": "number",
          "format": "decimal",
          "readOnly": true
        },
        "serviceOverage": {
          "description": "Overage for Azure services.",
          "type": "number",
          "format": "decimal",
          "readOnly": true
        },
        "chargesBilledSeparately": {
          "description": "Charges Billed separately.",
          "type": "number",
          "format": "decimal",
          "readOnly": true
        },
        "totalOverage": {
          "description": "serviceOverage + chargesBilledSeparately.",
          "type": "number",
          "format": "decimal",
          "readOnly": true
        },
        "totalUsage": {
          "description": "Azure service commitment + total Overage.",
          "type": "number",
          "format": "decimal",
          "readOnly": true
        },
        "azureMarketplaceServiceCharges": {
          "description": "Total charges for Azure Marketplace.",
          "type": "number",
          "format": "decimal",
          "readOnly": true
        },
        "billingFrequency": {
          "description": "The billing frequency.",
          "type": "string",
          "enum": [
            "Month",
            "Quarter",
            "Year"
          ],
          "x-ms-enum": {
            "name": "BillingFrequency",
            "modelAsString": true
          }
        },
        "priceHidden": {
          "description": "Price is hidden or not.",
          "type": "boolean",
          "readOnly": true
        },
        "newPurchasesDetails": {
          "description": "List of new purchases.",
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "name": {
                "description": "the name of new purchase.",
                "type": "string",
                "readOnly": true
              },
              "value": {
                "description": "the value of new purchase.",
                "type": "number",
                "format": "decimal",
                "readOnly": true
              }
            }
          },
          "readOnly": true
        },
        "adjustmentDetails": {
          "description": "List of Adjustments (Promo credit, SIE credit etc.).",
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "name": {
                "description": "the name of new adjustment.",
                "type": "string",
                "readOnly": true
              },
              "value": {
                "description": "the value of new adjustment.",
                "type": "number",
                "format": "decimal",
                "readOnly": true
              }
            }
          },
          "readOnly": true
        }
      }
    },
    "ReservationSummary": {
      "description": "reservation summary resource.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ReservationSummaryProperties",
          "title": "Reservation Summary properties"
        }
      }
    },
    "ReservationSummariesListResult": {
      "description": "Result of listing reservation summaries.",
      "properties": {
        "value": {
          "description": "The list of reservation summaries.",
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/ReservationSummary"
          }
        },
        "nextLink": {
          "description": "The link (url) to the next page of results.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "ReservationSummaryProperties": {
      "description": "The properties of the reservation summary.",
      "properties": {
        "reservationOrderId": {
          "description": "The reservation order ID is the identifier for a reservation purchase. Each reservation order ID represents a single purchase transaction. A reservation order contains reservations. The reservation order specifies the VM size and region for the reservations.",
          "type": "string",
          "readOnly": true
        },
        "reservationId": {
          "description": "The reservation ID is the identifier of a reservation within a reservation order. Each reservation is the grouping for applying the benefit scope and also specifies the number of instances to which the reservation benefit can be applied to.",
          "type": "string",
          "readOnly": true
        },
        "skuName": {
          "description": "This is the ARM Sku name. It can be used to join with the serviceType field in additional info in usage records.",
          "type": "string",
          "readOnly": true
        },
        "reservedHours": {
          "description": "This is the total hours reserved. E.g. if reservation for 1 instance was made on 1 PM, this will be 11 hours for that day and 24 hours from subsequent days",
          "type": "number",
          "format": "decimal",
          "readOnly": true
        },
        "usageDate": {
          "description": "Data corresponding to the utilization record. If the grain of data is monthly, it will be first day of month.",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "usedHours": {
          "description": "Total used hours by the reservation",
          "type": "number",
          "format": "decimal",
          "readOnly": true
        },
        "minUtilizationPercentage": {
          "description": "This is the minimum hourly utilization in the usage time (day or month). E.g. if usage record corresponds to 12/10/2017 and on that for hour 4 and 5, utilization was 10%, this field will return 10% for that day",
          "type": "number",
          "format": "decimal",
          "readOnly": true
        },
        "avgUtilizationPercentage": {
          "description": "This is average utilization for the entire time range. (day or month depending on the grain)",
          "type": "number",
          "format": "decimal",
          "readOnly": true
        },
        "maxUtilizationPercentage": {
          "description": "This is the maximum hourly utilization in the usage time (day or month). E.g. if usage record corresponds to 12/10/2017 and on that for hour 4 and 5, utilization was 100%, this field will return 100% for that day.",
          "type": "number",
          "format": "decimal",
          "readOnly": true
        }
      }
    },
    "ReservationDetail": {
      "description": "reservation detail resource.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ReservationDetailProperties",
          "title": "Reservation Detail properties"
        }
      }
    },
    "ReservationDetailsListResult": {
      "description": "Result of listing reservation details.",
      "properties": {
        "value": {
          "description": "The list of reservation details.",
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/ReservationDetail"
          }
        },
        "nextLink": {
          "description": "The link (url) to the next page of results.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "ReservationDetailProperties": {
      "description": "The properties of the reservation detail.",
      "properties": {
        "reservationOrderId": {
          "description": "The reservation order ID is the identifier for a reservation purchase. Each reservation order ID represents a single purchase transaction. A reservation order contains reservations. The reservation order specifies the VM size and region for the reservations.",
          "type": "string",
          "readOnly": true
        },
        "reservationId": {
          "description": "The reservation ID is the identifier of a reservation within a reservation order. Each reservation is the grouping for applying the benefit scope and also specifies the number of instances to which the reservation benefit can be applied to.",
          "type": "string",
          "readOnly": true
        },
        "skuName": {
          "description": "This is the ARM Sku name. It can be used to join with the serviceType field in additional info in usage records.",
          "type": "string",
          "readOnly": true
        },
        "reservedHours": {
          "description": "This is the total hours reserved for the day. E.g. if reservation for 1 instance was made on 1 PM, this will be 11 hours for that day and 24 hours from subsequent days.",
          "type": "number",
          "format": "decimal",
          "readOnly": true
        },
        "usageDate": {
          "description": "The date on which consumption occurred.",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "usedHours": {
          "description": "This is the total hours used by the instance.",
          "type": "number",
          "format": "decimal",
          "readOnly": true
        },
        "instanceId": {
          "description": "This identifier is the name of the resource or the fully qualified Resource ID.",
          "type": "string",
          "readOnly": true
        },
        "totalReservedQuantity": {
          "description": "This is the total count of instances that are reserved for the reservationId.",
          "type": "number",
          "format": "decimal",
          "readOnly": true
        }
      }
    },
    "ReservationRecommendation": {
      "description": "Reservation recommendation resource.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        },
        {
          "$ref": "#/definitions/ResourceAttributes"
        }
      ],
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ReservationRecommendationProperties",
          "title": "Reservation Recommendation properties"
        }
      }
    },
    "ReservationRecommendationsListResult": {
      "description": "Result of listing reservation recommendations.",
      "properties": {
        "value": {
          "description": "The list of reservation recommendations.",
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/ReservationRecommendation"
          }
        },
        "nextLink": {
          "description": "The link (url) to the next page of results.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "ReservationRecommendationProperties": {
      "description": "The properties of the reservation recommendation.",
      "properties": {
        "lookBackPeriod": {
          "description": "The number of days of usage to look back for recommendation.",
          "type": "string",
          "readOnly": true
        },
        "meterId": {
          "description": "The meter id (GUID)",
          "type": "string",
          "format": "uuid",
          "readOnly": true
        },
        "term": {
          "description": "RI recommendations in one or three year terms.",
          "type": "string",
          "readOnly": true
        },
        "costWithNoReservedInstances": {
          "description": "The total amount of cost without reserved instances.",
          "type": "number",
          "format": "decimal",
          "readOnly": true
        },
        "recommendedQuantity": {
          "description": "Recommended quality for reserved instances.",
          "type": "number",
          "format": "decimal",
          "readOnly": true
        },
        "totalCostWithReservedInstances": {
          "description": "The total amount of cost with reserved instances.",
          "type": "number",
          "format": "decimal",
          "readOnly": true
        },
        "netSavings": {
          "description": "Total estimated savings with reserved instances.",
          "type": "number",
          "format": "decimal",
          "readOnly": true
        },
        "firstUsageDate": {
          "description": "The usage date for looking back.",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "scope": {
          "description": "Shared or single recommendation.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "TagsResult": {
      "description": "A resource listing all tags.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProxyResource"
        }
      ],
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/TagProperties",
          "title": "Tag properties"
        }
      }
    },
    "TagProperties": {
      "description": "The properties of the tag.",
      "properties": {
        "tags": {
          "description": "A list of Tag.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Tag"
          }
        }
      }
    },
    "Tag": {
      "description": "The tag resource.",
      "properties": {
        "key": {
          "description": "Tag key.",
          "type": "string"
        }
      }
    },
    "BudgetsListResult": {
      "description": "Result of listing budgets. It contains a list of available budgets in the scope provided.",
      "properties": {
        "value": {
          "description": "The list of budgets.",
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/Budget"
          }
        },
        "nextLink": {
          "description": "The link (url) to the next page of results.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "Budget": {
      "description": "A budget resource.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ProxyResource"
        }
      ],
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/BudgetProperties",
          "title": "Budget properties"
        }
      }
    },
    "BudgetProperties": {
      "description": "The properties of the budget.",
      "properties": {
        "category": {
          "description": "The category of the budget, whether the budget tracks cost or usage.",
          "type": "string",
          "enum": [
            "Cost",
            "Usage"
          ],
          "x-ms-enum": {
            "name": "CategoryType",
            "modelAsString": true
          }
        },
        "amount": {
          "description": "The total amount of cost to track with the budget",
          "type": "number",
          "format": "decimal"
        },
        "timeGrain": {
          "description": "The time covered by a budget. Tracking of the amount will be reset based on the time grain.",
          "type": "string",
          "enum": [
            "Monthly",
            "Quarterly",
            "Annually",
            "BillingMonth",
            "BillingQuarter",
            "BillingAnnual"
          ],
          "x-ms-enum": {
            "name": "TimeGrainType",
            "modelAsString": true
          }
        },
        "timePeriod": {
          "description": "Has start and end date of the budget. The start date must be first of the month and should be less than the end date. Budget start date must be on or after June 1, 2017. Future start date should not be more than three months. Past start date should  be selected within the timegrain period. There are no restrictions on the end date.",
          "$ref": "#/definitions/BudgetTimePeriod"
        },
        "filters": {
          "description": "May be used to filter budgets by resource group, resource, or meter.",
          "type": "object",
          "$ref": "#/definitions/Filters"
        },
        "currentSpend": {
          "description": "The current amount of cost which is being tracked for a budget.",
          "$ref": "#/definitions/CurrentSpend",
          "readOnly": true
        },
        "notifications": {
          "type": "object",
          "description": "Dictionary of notifications associated with the budget. Budget can have up to five notifications.",
          "additionalProperties": {
            "type": "object",
            "$ref": "#/definitions/Notification"
          },
          "maxItems": 5
        }
      },
      "required": [
        "category",
        "amount",
        "timeGrain",
        "timePeriod"
      ]
    },
    "BudgetTimePeriod": {
      "description": "The start and end date for a budget.",
      "properties": {
        "startDate": {
          "description": "The start date for the budget.",
          "type": "string",
          "format": "date-time"
        },
        "endDate": {
          "description": "The end date for the budget. If not provided, we default this to 10 years from the start date.",
          "type": "string",
          "format": "date-time"
        }
      },
      "required": [
        "startDate"
      ]
    },
    "Filters": {
      "description": "May be used to filter budgets by resource group, resource, or meter.",
      "properties": {
        "resourceGroups": {
          "description": "The list of filters on resource groups, allowed at subscription level only.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "minItems": 0,
          "maxItems": 10
        },
        "resources": {
          "description": "The list of filters on resources.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "minItems": 0,
          "maxItems": 10
        },
        "meters": {
          "description": "The list of filters on meters (GUID), mandatory for budgets of usage category. ",
          "type": "array",
          "items": {
            "type": "string",
            "format": "uuid"
          },
          "minItems": 0,
          "maxItems": 10
        },
        "tags": {
          "type": "object",
          "description": "The dictionary of filters on tags.",
          "additionalProperties": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "minItems": 0,
          "maxItems": 10
        }
      }
    },
    "CurrentSpend": {
      "description": "The current amount of cost which is being tracked for a budget.",
      "properties": {
        "amount": {
          "description": "The total amount of cost which is being tracked by the budget.",
          "type": "number",
          "format": "decimal",
          "readOnly": true
        },
        "unit": {
          "description": "The unit of measure for the budget amount.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "Notification": {
      "description": "The notification associated with a budget.",
      "properties": {
        "enabled": {
          "description": "The notification is enabled or not.",
          "type": "boolean"
        },
        "operator": {
          "description": "The comparison operator.",
          "type": "string",
          "enum": [
            "EqualTo",
            "GreaterThan",
            "GreaterThanOrEqualTo"
          ],
          "x-ms-enum": {
            "name": "OperatorType",
            "modelAsString": true
          }
        },
        "threshold": {
          "description": "Threshold value associated with a notification. Notification is sent when the cost exceeded the threshold. It is always percent and has to be between 0 and 1000.",
          "type": "number",
          "format": "decimal"
        },
        "contactEmails": {
          "description": "Email addresses to send the budget notification to when the threshold is exceeded.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "minItems": 1,
          "maxItems": 50
        },
        "contactRoles": {
          "description": "Contact roles to send the budget notification to when the threshold is exceeded.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "contactGroups": {
          "description": "Action groups to send the budget notification to when the threshold is exceeded.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "minItems": 0,
          "maxItems": 50
        }
      },
      "required": [
        "enabled",
        "operator",
        "threshold",
        "contactEmails"
      ]
    },
    "PriceSheetResult": {
      "description": "An pricesheet resource.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/PriceSheetModel",
          "title": "Price sheet properties"
        }
      }
    },
    "PriceSheetModel": {
      "description": "price sheet result. It contains the pricesheet associated with billing period",
      "properties": {
        "pricesheets": {
          "description": "Price sheet",
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/PriceSheetProperties"
          }
        },
        "nextLink": {
          "description": "The link (url) to the next page of results.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "PriceSheetProperties": {
      "description": "The properties of the price sheet.",
      "properties": {
        "billingPeriodId": {
          "description": "The id of the billing period resource that the usage belongs to.",
          "type": "string",
          "readOnly": true
        },
        "meterId": {
          "description": "The meter id (GUID)",
          "type": "string",
          "format": "uuid",
          "readOnly": true
        },
        "meterDetails": {
          "description": "The details about the meter. By default this is not populated, unless it's specified in $expand.",
          "$ref": "#/definitions/MeterDetails",
          "readOnly": true
        },
        "unitOfMeasure": {
          "description": "Unit of measure",
          "type": "string",
          "readOnly": true
        },
        "includedQuantity": {
          "description": "Included quality for an offer",
          "type": "number",
          "format": "decimal",
          "readOnly": true
        },
        "partNumber": {
          "description": "Part Number",
          "type": "string",
          "readOnly": true
        },
        "unitPrice": {
          "description": "Unit Price",
          "type": "number",
          "format": "decimal",
          "readOnly": true
        },
        "currencyCode": {
          "description": "Currency Code",
          "type": "string",
          "readOnly": true
        },
        "offerId": {
          "description": "Offer Id",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "Forecast": {
      "description": "A forecast resource.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ForecastProperties",
          "title": "Forecast properties"
        }
      }
    },
    "ForecastsListResult": {
      "description": "Result of listing forecasts. It contains a list of available forecasts.",
      "type": "object",
      "properties": {
        "value": {
          "description": "The list of forecasts.",
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/Forecast"
          }
        }
      }
    },
    "ForecastProperties": {
      "description": "The properties of the forecast charge.",
      "type": "object",
      "properties": {
        "usageDate": {
          "description": "The usage date of the forecast.",
          "type": "string",
          "readOnly": true
        },
        "grain": {
          "description": "The granularity of forecast.",
          "type": "string",
          "enum": [
            "Daily",
            "Monthly",
            "Yearly"
          ],
          "x-ms-enum": {
            "name": "Grain",
            "modelAsString": true
          }
        },
        "charge": {
          "description": "The amount of charge",
          "type": "number",
          "format": "decimal",
          "readOnly": true
        },
        "currency": {
          "description": "The ISO currency in which the meter is charged, for example, USD.",
          "type": "string",
          "readOnly": true
        },
        "chargeType": {
          "description": "The type of the charge. Could be actual or forecast",
          "type": "string",
          "enum": [
            "Actual",
            "Forecast"
          ],
          "x-ms-enum": {
            "name": "ChargeType",
            "modelAsString": true
          }
        },
        "confidenceLevels": {
          "description": "The details about the forecast confidence levels. This is populated only when chargeType is Forecast.",
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "percentage": {
                "description": "The percentage level of the confidence",
                "type": "number",
                "format": "decimal",
                "readOnly": true
              },
              "bound": {
                "description": "The boundary of the percentage, values could be 'Upper' or 'Lower'",
                "type": "string",
                "enum": [
                  "Upper",
                  "Lower"
                ],
                "x-ms-enum": {
                  "name": "Bound",
                  "modelAsString": true
                }
              },
              "value": {
                "description": "The amount of forecast within the percentage level",
                "type": "number",
                "format": "decimal",
                "readOnly": true
              }
            }
          },
          "readOnly": true
        }
      }
    },
    "ManagementGroupAggregatedCostResult": {
      "description": "A management group aggregated cost resource.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ManagementGroupAggregatedCostProperties",
          "title": "Management Group Aggregated Cost properties"
        }
      }
    },
    "ManagementGroupAggregatedCostProperties": {
      "description": "The properties of the Management Group Aggregated Cost.",
      "type": "object",
      "properties": {
        "billingPeriodId": {
          "description": "The id of the billing period resource that the aggregated cost belongs to.",
          "type": "string",
          "readOnly": true
        },
        "usageStart": {
          "description": "The start of the date time range covered by aggregated cost.",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "usageEnd": {
          "description": "The end of the date time range covered by the aggregated cost.",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "azureCharges": {
          "description": "Azure Charges.",
          "type": "number",
          "format": "decimal",
          "readOnly": true
        },
        "marketplaceCharges": {
          "description": "Marketplace Charges.",
          "type": "number",
          "format": "decimal",
          "readOnly": true
        },
        "chargesBilledSeparately": {
          "description": "Charges Billed Separately.",
          "type": "number",
          "format": "decimal",
          "readOnly": true
        },
        "currency": {
          "description": "The ISO currency in which the meter is charged, for example, USD.",
          "type": "string",
          "readOnly": true
        },
        "children": {
          "description": "Children of a management group",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ManagementGroupAggregatedCostResult"
          }
        },
        "includedSubscriptions": {
          "description": "List of subscription Guids included in the calculation of aggregated cost",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "excludedSubscriptions": {
          "description": "List of subscription Guids excluded from the calculation of aggregated cost",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ChargesListResult": {
      "description": "Result of listing charge summary.",
      "properties": {
        "value": {
          "description": "The list of charge summary",
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/ChargeSummary"
          }
        }
      }
    },
    "ChargeSummary": {
      "description": "A charge summary resource.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ChargeSummaryProperties",
          "title": "Charge summary properties"
        }
      }
    },
    "ChargeSummaryProperties": {
      "description": "The properties of the charge summary.",
      "type": "object",
      "properties": {
        "billingPeriodId": {
          "description": "The id of the billing period resource that the charge belongs to.",
          "type": "string",
          "readOnly": true
        },
        "usageStart": {
          "description": "Usage start date.",
          "type": "string",
          "readOnly": true
        },
        "usageEnd": {
          "description": " Usage end date.",
          "type": "string",
          "readOnly": true
        },
        "azureCharges": {
          "description": "Azure Charges.",
          "type": "number",
          "format": "decimal",
          "readOnly": true
        },
        "chargesBilledSeparately": {
          "description": "Charges Billed separately.",
          "type": "number",
          "format": "decimal",
          "readOnly": true
        },
        "marketplaceCharges": {
          "description": "Marketplace Charges.",
          "type": "number",
          "format": "decimal",
          "readOnly": true
        },
        "currency": {
          "description": "Currency Code",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "ErrorDetails": {
      "description": "The details of the error.",
      "properties": {
        "code": {
          "description": "Error code.",
          "type": "string",
          "readOnly": true
        },
        "message": {
          "description": "Error message indicating why the operation failed.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "ErrorResponse": {
      "description": "Error response indicates that the service is not able to process the incoming request. The reason is provided in the error message.",
      "type": "object",
      "properties": {
        "error": {
          "description": "The details of the error.",
          "$ref": "#/definitions/ErrorDetails"
        }
      }
    },
    "Operation": {
      "description": "A Consumption REST API operation.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Operation name: {provider}/{resource}/{operation}.",
          "type": "string",
          "readOnly": true
        },
        "display": {
          "description": "The object that represents the operation.",
          "properties": {
            "provider": {
              "description": "Service provider: Microsoft.Consumption.",
              "type": "string",
              "readOnly": true
            },
            "resource": {
              "description": "Resource on which the operation is performed: UsageDetail, etc.",
              "type": "string",
              "readOnly": true
            },
            "operation": {
              "description": "Operation type: Read, write, delete, etc.",
              "type": "string",
              "readOnly": true
            }
          }
        }
      }
    },
    "OperationListResult": {
      "description": "Result of listing consumption operations. It contains a list of operations and a URL link to get the next set of results.",
      "properties": {
        "value": {
          "description": "List of consumption operations supported by the Microsoft.Consumption resource provider.",
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/Operation"
          }
        },
        "nextLink": {
          "description": "URL to get the next set of operation list results if there are any.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "Resource": {
      "description": "The Resource model definition.",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Resource Id."
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Resource name."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "Resource type."
        },
        "tags": {
          "readOnly": true,
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Resource tags."
        }
      },
      "x-ms-azure-resource": true
    },
    "ResourceAttributes": {
      "description": "The Resource model definition.",
      "properties": {
        "location": {
          "readOnly": true,
          "type": "string",
          "description": "Resource location"
        },
        "sku": {
          "readOnly": true,
          "type": "string",
          "description": "Resource sku"
        }
      }
    },
    "ProxyResource": {
      "description": "The Resource model definition.",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Resource Id."
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Resource name."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "Resource type."
        },
        "eTag": {
          "type": "string",
          "description": "eTag of the resource. To handle concurrent update scenario, this field will be used to determine whether the user is updating the latest version or not."
        }
      },
      "x-ms-azure-resource": true
    }
  },
  "parameters": {
    "scopeChargesParameter": {
      "name": "scope",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The scope associated with usage details operations. This includes '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/departments/{departmentId}' for Department scope and '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/enrollmentAccounts/{enrollmentAccountId}' for EnrollmentAccount scope. For department and enrollment accounts, you can also add billing period to the scope using '/providers/Microsoft.Billing/billingPeriods/{billingPeriodName}'. For e.g. to specify billing period at department scope use '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/departments/{departmentId}/providers/Microsoft.Billing/billingPeriods/{billingPeriodName}'",
      "x-ms-parameter-location": "method",
      "x-ms-skip-url-encoding": true
    },
    "scopeUsageDetailsParameter": {
      "name": "scope",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The scope associated with usage details operations. This includes '/subscriptions/{subscriptionId}/' for subscription scope, '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}' for Billing Account scope, '/providers/Microsoft.Billing/departments/{departmentId}' for Department scope, '/providers/Microsoft.Billing/enrollmentAccounts/{enrollmentAccountId}' for EnrollmentAccount scope and '/providers/Microsoft.Management/managementGroups/{managementGroupId}' for Management Group scope. For subscription, billing account, department, enrollment account and management group, you can also add billing period to the scope using '/providers/Microsoft.Billing/billingPeriods/{billingPeriodName}'. For e.g. to specify billing period at department scope use '/providers/Microsoft.Billing/departments/{departmentId}/providers/Microsoft.Billing/billingPeriods/{billingPeriodName}'",
      "x-ms-parameter-location": "method",
      "x-ms-skip-url-encoding": true
    },
    "scopeMarketplaceParameter": {
      "name": "scope",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The scope associated with marketplace operations. This includes '/subscriptions/{subscriptionId}/' for subscription scope, '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}' for Billing Account scope, '/providers/Microsoft.Billing/departments/{departmentId}' for Department scope, '/providers/Microsoft.Billing/enrollmentAccounts/{enrollmentAccountId}' for EnrollmentAccount scope and '/providers/Microsoft.Management/managementGroups/{managementGroupId}' for Management Group scope. For subscription, billing account, department, enrollment account and ManagementGroup, you can also add billing period to the scope using '/providers/Microsoft.Billing/billingPeriods/{billingPeriodName}'. For e.g. to specify billing period at department scope use '/providers/Microsoft.Billing/departments/{departmentId}/providers/Microsoft.Billing/billingPeriods/{billingPeriodName}'",
      "x-ms-parameter-location": "method",
      "x-ms-skip-url-encoding": true
    },
    "scopeBudgetParameter": {
      "name": "scope",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The scope associated with budget operations. This includes '/subscriptions/{subscriptionId}/' for subscription scope, '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for resourceGroup scope, '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}' for Billing Account scope, '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/departments/{departmentId}' for Department scope, '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/enrollmentAccounts/{enrollmentAccountId}' for EnrollmentAccount scope, '/providers/Microsoft.Management/managementGroups/{managementGroupId}' for Management Group scope, '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}' for billingProfile scope, 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/invoiceSections/{invoiceSectionId}' for invoiceSection scope.",
      "x-ms-parameter-location": "method",
      "x-ms-skip-url-encoding": true
    },
    "scopeTagsParameter": {
      "name": "scope",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The scope associated with tags operations. This includes '/subscriptions/{subscriptionId}/' for subscription scope, '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for resourceGroup scope, '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}' for Billing Account scope, '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/departments/{departmentId}' for Department scope, '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/enrollmentAccounts/{enrollmentAccountId}' for EnrollmentAccount scope and '/providers/Microsoft.Management/managementGroups/{managementGroupId}' for Management Group scope..",
      "x-ms-parameter-location": "method",
      "x-ms-skip-url-encoding": true
    },
    "apiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "required": true,
      "type": "string",
      "description": "Version of the API to be used with the client request. The current version is 2019-01-01."
    },
    "billingAccountIdParameter": {
      "name": "billingAccountId",
      "in": "path",
      "description": "BillingAccount ID",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "departmentIdParameter": {
      "name": "departmentId",
      "in": "path",
      "description": "Department ID",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "enrollmentAccountIdParameter": {
      "name": "enrollmentAccountId",
      "in": "path",
      "description": "EnrollmentAccount ID",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "subscriptionIdParameter": {
      "name": "subscriptionId",
      "in": "path",
      "description": "Azure Subscription ID.",
      "required": true,
      "type": "string"
    },
    "resourceGroupNameParameter": {
      "name": "resourceGroupName",
      "in": "path",
      "description": "Azure Resource Group Name.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "budgetNameParameter": {
      "name": "budgetName",
      "in": "path",
      "description": "Budget Name.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "billingPeriodNameParameter": {
      "name": "billingPeriodName",
      "in": "path",
      "description": "Billing Period Name.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "reservationOrderIdParameter": {
      "name": "reservationOrderId",
      "in": "path",
      "description": "Order Id of the reservation",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "reservationIdParameter": {
      "name": "reservationId",
      "in": "path",
      "description": "Id of the reservation",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "grainParameter": {
      "name": "grain",
      "description": "Can be daily or monthly",
      "x-ms-parameter-location": "method",
      "in": "query",
      "required": true,
      "type": "string",
      "enum": [
        "daily",
        "monthly"
      ],
      "x-ms-enum": {
        "name": "datagrain",
        "modelAsString": true,
        "values": [
          {
            "value": "daily",
            "description": "Daily grain of data",
            "name": "DailyGrain"
          },
          {
            "value": "monthly",
            "description": "Monthly grain of data",
            "name": "MonthlyGrain"
          }
        ]
      }
    },
    "managementGroupIdParameter": {
      "name": "managementGroupId",
      "in": "path",
      "description": "Azure Management Group ID.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "billingProfileIdParameter": {
      "name": "billingProfileId",
      "in": "path",
      "description": "Azure Billing Profile ID.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "invoiceSectionIdParameter": {
      "name": "invoiceSectionId",
      "in": "path",
      "description": "Azure Invoice Section ID.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    }
  }
}
