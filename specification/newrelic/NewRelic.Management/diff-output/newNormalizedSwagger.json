{
  "swagger": "2.0",
  "info": {
    "title": "NewRelic.Observability",
    "version": "2025-05-01-preview",
    "description": "// FIXME: (missing-service-description) Add service description"
  },
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "paths": {
    "/providers/newRelic.Observability/operations": {
      "get": {
        "operationId": "Operations_List",
        "parameters": [],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/OperationListResult"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Operations_List_MaximumSet_Gen": {
            "$ref": "./examples/Operations_List_MaximumSet_Gen.json"
          },
          "Operations_List_MinimumSet_Gen": {
            "$ref": "./examples/Operations_List_MinimumSet_Gen.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/newRelic.Observability/accounts": {
      "get": {
        "operationId": "Accounts_List",
        "parameters": [
          {
            "name": "userEmail",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "location",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/AccountsListResponse"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Accounts_List_MaximumSet_Gen": {
            "$ref": "./examples/Accounts_List_MaximumSet_Gen.json"
          },
          "Accounts_List_MinimumSet_Gen": {
            "$ref": "./examples/Accounts_List_MinimumSet_Gen.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/newRelic.Observability/activateSaaS": {
      "post": {
        "operationId": "SaaS_ActivateResource",
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ActivateSaaSParameterRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/SaaSResourceDetailsResponse"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ActivateSaaS": {
            "$ref": "./examples/ActivateSaaS.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/newRelic.Observability/monitors": {
      "get": {
        "operationId": "Monitors_ListBySubscription",
        "parameters": [],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/NewRelicMonitorResourceListResult"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Monitors_ListBySubscription_MaximumSet_Gen": {
            "$ref": "./examples/Monitors_ListBySubscription_MaximumSet_Gen.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/newRelic.Observability/organizations": {
      "get": {
        "operationId": "Organizations_List",
        "parameters": [
          {
            "name": "userEmail",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "location",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/OrganizationsListResponse"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Organizations_List_MaximumSet_Gen": {
            "$ref": "./examples/Organizations_List_MaximumSet_Gen.json"
          },
          "Organizations_List_MinimumSet_Gen": {
            "$ref": "./examples/Organizations_List_MinimumSet_Gen.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/newRelic.Observability/plans": {
      "get": {
        "operationId": "Plans_List",
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "type": "string"
          },
          {
            "name": "organizationId",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/PlanDataListResponse"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Plans_List_MaximumSet_Gen": {
            "$ref": "./examples/Plans_List_MaximumSet_Gen.json"
          },
          "Plans_List_MinimumSet_Gen": {
            "$ref": "./examples/Plans_List_MinimumSet_Gen.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/newRelic.Observability/monitors": {
      "get": {
        "operationId": "Monitors_ListByResourceGroup",
        "parameters": [],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/NewRelicMonitorResourceListResult"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Monitors_ListByResourceGroup_MaximumSet_Gen": {
            "$ref": "./examples/Monitors_ListByResourceGroup_MaximumSet_Gen.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/newRelic.Observability/monitors/{monitorName}": {
      "get": {
        "operationId": "Monitors_Get",
        "parameters": [
          {
            "name": "monitorName",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/NewRelicMonitorResource"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Monitors_Get_MaximumSet_Gen": {
            "$ref": "./examples/Monitors_Get_MaximumSet_Gen.json"
          }
        }
      },
      "put": {
        "operationId": "Monitors_CreateOrUpdate",
        "parameters": [
          {
            "name": "monitorName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "resource",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NewRelicMonitorResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/NewRelicMonitorResource"
            }
          },
          "201": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/NewRelicMonitorResource"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Monitors_CreateOrUpdate_MaximumSet_Gen": {
            "$ref": "./examples/Monitors_CreateOrUpdate_MaximumSet_Gen.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "Monitors_Update",
        "parameters": [
          {
            "name": "monitorName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "properties",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NewRelicMonitorResourceUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/NewRelicMonitorResource"
            }
          },
          "202": {
            "description": "ignore"
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Monitors_Update_MaximumSet_Gen": {
            "$ref": "./examples/Monitors_Update_MaximumSet_Gen.json"
          }
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "Monitors_Delete",
        "parameters": [
          {
            "name": "monitorName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "userEmail",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore"
          },
          "202": {
            "description": "ignore"
          },
          "204": {
            "description": "ignore"
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Monitors_Delete_MaximumSet_Gen": {
            "$ref": "./examples/Monitors_Delete_MaximumSet_Gen.json"
          },
          "Monitors_Delete_MinimumSet_Gen": {
            "$ref": "./examples/Monitors_Delete_MinimumSet_Gen.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/newRelic.Observability/monitors/{monitorName}/getBillingInfo": {
      "post": {
        "operationId": "BillingInfo_Get",
        "parameters": [
          {
            "name": "monitorName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^.*$"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/BillingInfoResponse"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "BillingInfo_Get": {
            "$ref": "./examples/BillingInfo_Get.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/newRelic.Observability/monitors/{monitorName}/getMetricRules": {
      "post": {
        "operationId": "Monitors_GetMetricRules",
        "parameters": [
          {
            "name": "monitorName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MetricsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/MetricRules"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Monitors_GetMetricRules_MaximumSet_Gen": {
            "$ref": "./examples/Monitors_GetMetricRules_MaximumSet_Gen.json"
          },
          "Monitors_GetMetricRules_MinimumSet_Gen": {
            "$ref": "./examples/Monitors_GetMetricRules_MinimumSet_Gen.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/newRelic.Observability/monitors/{monitorName}/getMetricStatus": {
      "post": {
        "operationId": "Monitors_GetMetricStatus",
        "parameters": [
          {
            "name": "monitorName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MetricsStatusRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/MetricsStatusResponse"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Monitors_GetMetricStatus_MaximumSet_Gen": {
            "$ref": "./examples/Monitors_GetMetricStatus_MaximumSet_Gen.json"
          },
          "Monitors_GetMetricStatus_MinimumSet_Gen": {
            "$ref": "./examples/Monitors_GetMetricStatus_MinimumSet_Gen.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/newRelic.Observability/monitors/{monitorName}/latestLinkedSaaS": {
      "post": {
        "operationId": "Monitors_LatestLinkedSaaS",
        "parameters": [
          {
            "name": "monitorName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^.*$"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/LatestLinkedSaaSResponse"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Monitors_LatestLinkedSaaS_MaximumSet_Gen": {
            "$ref": "./examples/Monitors_LatestLinkedSaaS_MaximumSet_Gen.json"
          },
          "Monitors_LatestLinkedSaaS_MinimumSet_Gen": {
            "$ref": "./examples/Monitors_LatestLinkedSaaS_MinimumSet_Gen.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/newRelic.Observability/monitors/{monitorName}/linkSaaS": {
      "post": {
        "operationId": "Monitors_LinkSaaS",
        "parameters": [
          {
            "name": "monitorName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^.*$"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SaaSData"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/NewRelicMonitorResource"
            }
          },
          "202": {
            "description": "ignore"
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Monitors_LinkSaaS": {
            "$ref": "./examples/Monitors_LinkSaaS.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/newRelic.Observability/monitors/{monitorName}/listAppServices": {
      "post": {
        "operationId": "Monitors_ListAppServices",
        "parameters": [
          {
            "name": "monitorName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AppServicesGetRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/AppServicesListResponse"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Monitors_ListAppServices_MaximumSet_Gen": {
            "$ref": "./examples/Monitors_ListAppServices_MaximumSet_Gen.json"
          },
          "Monitors_ListAppServices_MinimumSet_Gen": {
            "$ref": "./examples/Monitors_ListAppServices_MinimumSet_Gen.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/newRelic.Observability/monitors/{monitorName}/listConnectedPartnerResources": {
      "post": {
        "operationId": "ConnectedPartnerResources_List",
        "parameters": [
          {
            "name": "monitorName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^.*$"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/email"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/ConnectedPartnerResourcesListResponse"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ConnectedPartnerResources_List": {
            "$ref": "./examples/ConnectedPartnerResources_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/newRelic.Observability/monitors/{monitorName}/listHosts": {
      "post": {
        "operationId": "Monitors_ListHosts",
        "parameters": [
          {
            "name": "monitorName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/HostsGetRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/VMHostsListResponse"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Monitors_ListHosts_MaximumSet_Gen": {
            "$ref": "./examples/Monitors_ListHosts_MaximumSet_Gen.json"
          },
          "Monitors_ListHosts_MinimumSet_Gen": {
            "$ref": "./examples/Monitors_ListHosts_MinimumSet_Gen.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/newRelic.Observability/monitors/{monitorName}/listLinkedResources": {
      "post": {
        "operationId": "Monitors_ListLinkedResources",
        "parameters": [
          {
            "name": "monitorName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^.*$"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/LinkedResourceListResponse"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Monitors_ListLinkedResources": {
            "$ref": "./examples/LinkedResources_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/newRelic.Observability/monitors/{monitorName}/monitoredResources": {
      "post": {
        "operationId": "Monitors_ListMonitoredResources",
        "parameters": [
          {
            "name": "monitorName",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/MonitoredResourceListResponse"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Monitors_ListMonitoredResources_MaximumSet_Gen": {
            "$ref": "./examples/Monitors_ListMonitoredResources_MaximumSet_Gen.json"
          },
          "Monitors_ListMonitoredResources_MinimumSet_Gen": {
            "$ref": "./examples/Monitors_ListMonitoredResources_MinimumSet_Gen.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/newRelic.Observability/monitors/{monitorName}/monitoredSubscriptions": {
      "get": {
        "operationId": "MonitoredSubscriptions_List",
        "parameters": [
          {
            "name": "monitorName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^.*$"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/MonitoredSubscriptionPropertiesList"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Monitors_GetMonitoredSubscriptions": {
            "$ref": "./examples/MonitoredSubscriptions_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/newRelic.Observability/monitors/{monitorName}/monitoredSubscriptions/{configurationName}": {
      "get": {
        "operationId": "MonitoredSubscriptions_Get",
        "parameters": [
          {
            "name": "monitorName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^.*$"
          },
          {
            "name": "configurationName",
            "in": "path",
            "required": true,
            "type": "string",
            "enum": [
              "default"
            ],
            "x-ms-enum": {
              "name": "ConfigurationName",
              "modelAsString": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/MonitoredSubscriptionProperties"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Monitors_GetMonitoredSubscriptions": {
            "$ref": "./examples/MonitoredSubscriptions_Get.json"
          }
        }
      },
      "put": {
        "operationId": "MonitoredSubscriptions_CreateOrUpdate",
        "parameters": [
          {
            "name": "monitorName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^.*$"
          },
          {
            "name": "configurationName",
            "in": "path",
            "required": true,
            "type": "string",
            "enum": [
              "default"
            ],
            "x-ms-enum": {
              "name": "ConfigurationName",
              "modelAsString": true
            }
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/MonitoredSubscriptionProperties"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/MonitoredSubscriptionProperties"
            }
          },
          "201": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/MonitoredSubscriptionProperties"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Monitors_AddMonitoredSubscriptions": {
            "$ref": "./examples/MonitoredSubscriptions_CreateOrUpdate.json"
          }
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "MonitoredSubscriptions_Update",
        "parameters": [
          {
            "name": "monitorName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^.*$"
          },
          {
            "name": "configurationName",
            "in": "path",
            "required": true,
            "type": "string",
            "enum": [
              "default"
            ],
            "x-ms-enum": {
              "name": "ConfigurationName",
              "modelAsString": true
            }
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/MonitoredSubscriptionProperties"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/MonitoredSubscriptionProperties"
            }
          },
          "202": {
            "description": "ignore"
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Monitors_UpdateMonitoredSubscriptions": {
            "$ref": "./examples/MonitoredSubscriptions_Update.json"
          }
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "MonitoredSubscriptions_Delete",
        "parameters": [
          {
            "name": "monitorName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^.*$"
          },
          {
            "name": "configurationName",
            "in": "path",
            "required": true,
            "type": "string",
            "enum": [
              "default"
            ],
            "x-ms-enum": {
              "name": "ConfigurationName",
              "modelAsString": true
            }
          }
        ],
        "responses": {
          "202": {
            "description": "ignore"
          },
          "204": {
            "description": "ignore"
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Monitors_DeleteMonitoredSubscriptions": {
            "$ref": "./examples/MonitoredSubscriptions_Delete.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/newRelic.Observability/monitors/{monitorName}/refreshIngestionKey": {
      "post": {
        "operationId": "Monitors_RefreshIngestionKey",
        "parameters": [
          {
            "name": "monitorName",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "ignore"
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Monitors_RefreshIngestionKey": {
            "$ref": "./examples/Monitors_RefreshIngestionKey.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/newRelic.Observability/monitors/{monitorName}/resubscribe": {
      "post": {
        "operationId": "Monitors_Resubscribe",
        "parameters": [
          {
            "name": "monitorName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^.*$"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/ResubscribeProperties"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/NewRelicMonitorResource"
            }
          },
          "202": {
            "description": "ignore"
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Monitors_Resubscribe": {
            "$ref": "./examples/Monitors_Resubscribe.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/newRelic.Observability/monitors/{monitorName}/switchBilling": {
      "post": {
        "operationId": "Monitors_SwitchBilling",
        "parameters": [
          {
            "name": "monitorName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SwitchBillingRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/NewRelicMonitorResource"
            }
          },
          "202": {
            "description": "ignore"
          },
          "204": {
            "description": "ignore"
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Monitors_SwitchBilling_MaximumSet_Gen": {
            "$ref": "./examples/Monitors_SwitchBilling_MaximumSet_Gen.json"
          },
          "Monitors_SwitchBilling_MinimumSet_Gen": {
            "$ref": "./examples/Monitors_SwitchBilling_MinimumSet_Gen.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/newRelic.Observability/monitors/{monitorName}/tagRules": {
      "get": {
        "operationId": "TagRules_ListByNewRelicMonitorResource",
        "parameters": [
          {
            "name": "monitorName",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/TagRuleListResult"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "TagRules_ListByNewRelicMonitorResource_MaximumSet_Gen": {
            "$ref": "./examples/TagRules_ListByNewRelicMonitorResource_MaximumSet_Gen.json"
          },
          "TagRules_ListByNewRelicMonitorResource_MinimumSet_Gen": {
            "$ref": "./examples/TagRules_ListByNewRelicMonitorResource_MinimumSet_Gen.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/newRelic.Observability/monitors/{monitorName}/tagRules/{ruleSetName}": {
      "get": {
        "operationId": "TagRules_Get",
        "parameters": [
          {
            "name": "monitorName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "ruleSetName",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/TagRule"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "TagRules_Get_MaximumSet_Gen": {
            "$ref": "./examples/TagRules_Get_MaximumSet_Gen.json"
          },
          "TagRules_Get_MinimumSet_Gen": {
            "$ref": "./examples/TagRules_Get_MinimumSet_Gen.json"
          }
        }
      },
      "put": {
        "operationId": "TagRules_CreateOrUpdate",
        "parameters": [
          {
            "name": "monitorName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "ruleSetName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "resource",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TagRule"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/TagRule"
            }
          },
          "201": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/TagRule"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "TagRules_CreateOrUpdate_MaximumSet_Gen": {
            "$ref": "./examples/TagRules_CreateOrUpdate_MaximumSet_Gen.json"
          },
          "TagRules_CreateOrUpdate_MinimumSet_Gen": {
            "$ref": "./examples/TagRules_CreateOrUpdate_MinimumSet_Gen.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "TagRules_Update",
        "parameters": [
          {
            "name": "monitorName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "ruleSetName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "properties",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TagRuleUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/TagRule"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "TagRules_Update_MaximumSet_Gen": {
            "$ref": "./examples/TagRules_Update_MaximumSet_Gen.json"
          },
          "TagRules_Update_MinimumSet_Gen": {
            "$ref": "./examples/TagRules_Update_MinimumSet_Gen.json"
          }
        }
      },
      "delete": {
        "operationId": "TagRules_Delete",
        "parameters": [
          {
            "name": "monitorName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "ruleSetName",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore"
          },
          "202": {
            "description": "ignore"
          },
          "204": {
            "description": "ignore"
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "TagRules_Delete_MaximumSet_Gen": {
            "$ref": "./examples/TagRules_Delete_MaximumSet_Gen.json"
          },
          "TagRules_Delete_MinimumSet_Gen": {
            "$ref": "./examples/TagRules_Delete_MinimumSet_Gen.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/newRelic.Observability/monitors/{monitorName}/vmHostPayloads": {
      "post": {
        "operationId": "Monitors_VmHostPayload",
        "parameters": [
          {
            "name": "monitorName",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ignore",
            "schema": {
              "$ref": "#/definitions/VMExtensionPayload"
            }
          },
          "default": {
            "description": "ignore",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Monitors_VmHostPayload_MaximumSet_Gen": {
            "$ref": "./examples/Monitors_VmHostPayload_MaximumSet_Gen.json"
          },
          "Monitors_VmHostPayload_MinimumSet_Gen": {
            "$ref": "./examples/Monitors_VmHostPayload_MinimumSet_Gen.json"
          }
        }
      }
    }
  },
  "definitions": {
    "AccountInfo": {
      "type": "object",
      "properties": {
        "accountId": {
          "type": "string"
        },
        "ingestionKey": {
          "type": "string",
          "format": "password",
          "x-ms-secret": true
        },
        "region": {
          "type": "string"
        }
      }
    },
    "AccountProperties": {
      "type": "object",
      "properties": {
        "organizationId": {
          "type": "string"
        },
        "accountId": {
          "type": "string"
        },
        "accountName": {
          "type": "string"
        },
        "region": {
          "type": "string"
        }
      }
    },
    "AccountResource": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/AccountProperties",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "AccountsListResponse": {
      "type": "object",
      "description": "[Placeholder] Discription for page model",
      "properties": {
        "value": {
          "type": "array",
          "description": "[Placeholder] Discription for value property",
          "items": {
            "$ref": "#/definitions/AccountResource"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "[Placeholder] Discription for nextLink property"
        }
      },
      "required": [
        "value"
      ]
    },
    "ActivateSaaSParameterRequest": {
      "type": "object",
      "properties": {
        "saasGuid": {
          "type": "string"
        },
        "publisherId": {
          "type": "string"
        }
      },
      "required": [
        "publisherId",
        "saasGuid"
      ]
    },
    "AppServiceInfo": {
      "type": "object",
      "properties": {
        "azureResourceId": {
          "type": "string"
        },
        "agentVersion": {
          "type": "string"
        },
        "agentStatus": {
          "type": "string"
        }
      }
    },
    "AppServicesGetRequest": {
      "type": "object",
      "properties": {
        "azureResourceIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "userEmail": {
          "type": "string",
          "pattern": "^[A-Za-z0-9._%+-]+@(?:[A-Za-z0-9-]+\\.)+[A-Za-z]{2,}$"
        }
      },
      "required": [
        "userEmail"
      ]
    },
    "AppServicesListResponse": {
      "type": "object",
      "description": "[Placeholder] Discription for page model",
      "properties": {
        "value": {
          "type": "array",
          "description": "[Placeholder] Discription for value property",
          "items": {
            "$ref": "#/definitions/AppServiceInfo"
          },
          "x-ms-identifiers": [
            "azureResourceId"
          ]
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "[Placeholder] Discription for nextLink property"
        }
      },
      "required": [
        "value"
      ]
    },
    "BillingInfoResponse": {
      "type": "object",
      "properties": {
        "marketplaceSaasInfo": {
          "$ref": "#/definitions/MarketplaceSaaSInfo"
        },
        "partnerBillingEntity": {
          "$ref": "#/definitions/PartnerBillingEntity"
        }
      }
    },
    "ConnectedPartnerResourceProperties": {
      "type": "object",
      "properties": {
        "accountName": {
          "type": "string"
        },
        "accountId": {
          "type": "string"
        },
        "azureResourceId": {
          "type": "string"
        },
        "location": {
          "type": "string"
        }
      }
    },
    "ConnectedPartnerResourcesListFormat": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ConnectedPartnerResourceProperties"
        }
      }
    },
    "ConnectedPartnerResourcesListResponse": {
      "type": "object",
      "description": "[Placeholder] Discription for page model",
      "properties": {
        "value": {
          "type": "array",
          "description": "[Placeholder] Discription for value property",
          "items": {
            "$ref": "#/definitions/ConnectedPartnerResourcesListFormat"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "[Placeholder] Discription for nextLink property"
        }
      },
      "required": [
        "value"
      ]
    },
    "FilteringTag": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        },
        "action": {
          "type": "string",
          "enum": [
            "Include",
            "Exclude"
          ],
          "x-ms-enum": {
            "name": "TagAction",
            "modelAsString": true
          }
        }
      }
    },
    "HostsGetRequest": {
      "type": "object",
      "properties": {
        "vmIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "userEmail": {
          "type": "string",
          "pattern": "^[A-Za-z0-9._%+-]+@(?:[A-Za-z0-9-]+\\.)+[A-Za-z]{2,}$"
        }
      },
      "required": [
        "userEmail"
      ]
    },
    "LatestLinkedSaaSResponse": {
      "type": "object",
      "properties": {
        "saaSResourceId": {
          "type": "string"
        },
        "isHiddenSaaS": {
          "type": "boolean"
        }
      }
    },
    "LinkedResource": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        }
      }
    },
    "LinkedResourceListResponse": {
      "type": "object",
      "description": "[Placeholder] Discription for page model",
      "properties": {
        "value": {
          "type": "array",
          "description": "[Placeholder] Discription for value property",
          "items": {
            "$ref": "#/definitions/LinkedResource"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "[Placeholder] Discription for nextLink property"
        }
      },
      "required": [
        "value"
      ]
    },
    "LogRules": {
      "type": "object",
      "properties": {
        "sendAadLogs": {
          "type": "string",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "SendAadLogsStatus",
            "modelAsString": true
          }
        },
        "sendSubscriptionLogs": {
          "type": "string",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "SendSubscriptionLogsStatus",
            "modelAsString": true
          }
        },
        "sendActivityLogs": {
          "type": "string",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "SendActivityLogsStatus",
            "modelAsString": true
          }
        },
        "filteringTags": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FilteringTag"
          }
        }
      }
    },
    "MarketplaceSaaSInfo": {
      "type": "object",
      "properties": {
        "marketplaceSubscriptionId": {
          "type": "string"
        },
        "marketplaceSubscriptionName": {
          "type": "string"
        },
        "marketplaceResourceId": {
          "type": "string"
        },
        "marketplaceStatus": {
          "type": "string"
        },
        "billedAzureSubscriptionId": {
          "type": "string"
        },
        "publisherId": {
          "type": "string"
        },
        "offerId": {
          "type": "string"
        }
      }
    },
    "MetricRules": {
      "type": "object",
      "properties": {
        "sendMetrics": {
          "type": "string",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "SendMetricsStatus",
            "modelAsString": true
          }
        },
        "filteringTags": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FilteringTag"
          }
        },
        "userEmail": {
          "type": "string",
          "pattern": "^[A-Za-z0-9._%+-]+@(?:[A-Za-z0-9-]+\\.)+[A-Za-z]{2,}$"
        }
      }
    },
    "MetricsRequest": {
      "type": "object",
      "properties": {
        "userEmail": {
          "type": "string",
          "pattern": "^[A-Za-z0-9._%+-]+@(?:[A-Za-z0-9-]+\\.)+[A-Za-z]{2,}$"
        }
      },
      "required": [
        "userEmail"
      ]
    },
    "MetricsStatusRequest": {
      "type": "object",
      "properties": {
        "azureResourceIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "userEmail": {
          "type": "string",
          "pattern": "^[A-Za-z0-9._%+-]+@(?:[A-Za-z0-9-]+\\.)+[A-Za-z]{2,}$"
        }
      },
      "required": [
        "userEmail"
      ]
    },
    "MetricsStatusResponse": {
      "type": "object",
      "properties": {
        "azureResourceIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "MonitorProperties": {
      "type": "object",
      "properties": {
        "provisioningState": {
          "type": "string",
          "enum": [
            "Accepted",
            "Creating",
            "Updating",
            "Deleting",
            "Succeeded",
            "Failed",
            "Canceled",
            "Deleted",
            "NotSpecified"
          ],
          "x-ms-enum": {
            "name": "ProvisioningState",
            "modelAsString": true
          },
          "readOnly": true
        },
        "monitoringStatus": {
          "type": "string",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "MonitoringStatus",
            "modelAsString": true
          },
          "readOnly": true
        },
        "marketplaceSubscriptionStatus": {
          "type": "string",
          "enum": [
            "Active",
            "Suspended"
          ],
          "x-ms-enum": {
            "name": "MarketplaceSubscriptionStatus",
            "modelAsString": true
          },
          "readOnly": true
        },
        "marketplaceSubscriptionId": {
          "type": "string",
          "readOnly": true
        },
        "newRelicAccountProperties": {
          "$ref": "#/definitions/NewRelicAccountProperties"
        },
        "userInfo": {
          "$ref": "#/definitions/UserInfo"
        },
        "planData": {
          "$ref": "#/definitions/PlanData"
        },
        "saaSData": {
          "$ref": "#/definitions/SaaSData"
        },
        "liftrResourceCategory": {
          "type": "string",
          "enum": [
            "Unknown",
            "MonitorLogs"
          ],
          "x-ms-enum": {
            "name": "LiftrResourceCategories",
            "modelAsString": true
          },
          "readOnly": true
        },
        "liftrResourcePreference": {
          "type": "integer",
          "format": "int32",
          "readOnly": true
        },
        "orgCreationSource": {
          "type": "string",
          "enum": [
            "LIFTR",
            "NEWRELIC"
          ],
          "x-ms-enum": {
            "name": "OrgCreationSource",
            "modelAsString": true
          }
        },
        "accountCreationSource": {
          "type": "string",
          "enum": [
            "LIFTR",
            "NEWRELIC"
          ],
          "x-ms-enum": {
            "name": "AccountCreationSource",
            "modelAsString": true
          }
        },
        "subscriptionState": {
          "type": "string"
        },
        "saaSAzureSubscriptionStatus": {
          "type": "string"
        }
      }
    },
    "MonitoredResource": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "sendingMetrics": {
          "type": "string",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "SendingMetricsStatus",
            "modelAsString": true
          }
        },
        "reasonForMetricsStatus": {
          "type": "string"
        },
        "sendingLogs": {
          "type": "string",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "SendingLogsStatus",
            "modelAsString": true
          }
        },
        "reasonForLogsStatus": {
          "type": "string"
        }
      }
    },
    "MonitoredResourceListResponse": {
      "type": "object",
      "description": "[Placeholder] Discription for page model",
      "properties": {
        "value": {
          "type": "array",
          "description": "[Placeholder] Discription for value property",
          "items": {
            "$ref": "#/definitions/MonitoredResource"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "[Placeholder] Discription for nextLink property"
        }
      },
      "required": [
        "value"
      ]
    },
    "MonitoredSubscription": {
      "type": "object",
      "properties": {
        "subscriptionId": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": [
            "InProgress",
            "Active",
            "Failed",
            "Deleting"
          ],
          "x-ms-enum": {
            "name": "Status",
            "modelAsString": true
          }
        },
        "error": {
          "type": "string"
        },
        "tagRules": {
          "$ref": "#/definitions/MonitoringTagRulesProperties"
        }
      },
      "required": [
        "subscriptionId"
      ]
    },
    "MonitoredSubscriptionProperties": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/SubscriptionList"
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "MonitoredSubscriptionPropertiesList": {
      "type": "object",
      "description": "[Placeholder] Discription for page model",
      "properties": {
        "value": {
          "type": "array",
          "description": "[Placeholder] Discription for value property",
          "items": {
            "$ref": "#/definitions/MonitoredSubscriptionProperties"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "[Placeholder] Discription for nextLink property"
        }
      },
      "required": [
        "value"
      ]
    },
    "MonitoringTagRulesProperties": {
      "type": "object",
      "properties": {
        "provisioningState": {
          "type": "string",
          "enum": [
            "Accepted",
            "Creating",
            "Updating",
            "Deleting",
            "Succeeded",
            "Failed",
            "Canceled",
            "Deleted",
            "NotSpecified"
          ],
          "x-ms-enum": {
            "name": "ProvisioningState",
            "modelAsString": true
          },
          "readOnly": true
        },
        "logRules": {
          "$ref": "#/definitions/LogRules"
        },
        "metricRules": {
          "$ref": "#/definitions/MetricRules"
        }
      }
    },
    "NewRelicAccountProperties": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "string"
        },
        "accountInfo": {
          "$ref": "#/definitions/AccountInfo"
        },
        "organizationInfo": {
          "$ref": "#/definitions/OrganizationInfo"
        },
        "singleSignOnProperties": {
          "$ref": "#/definitions/NewRelicSingleSignOnProperties"
        }
      }
    },
    "NewRelicMonitorResource": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/MonitorProperties",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "identity": {
          "$ref": "../../../../../common-types/resource-management/v3/managedidentity.json#/definitions/ManagedServiceIdentity"
        }
      },
      "required": [
        "properties"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "NewRelicMonitorResourceListResult": {
      "type": "object",
      "description": "[Placeholder] Discription for page model",
      "properties": {
        "value": {
          "type": "array",
          "description": "[Placeholder] Discription for value property",
          "items": {
            "$ref": "#/definitions/NewRelicMonitorResource"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "[Placeholder] Discription for nextLink property"
        }
      },
      "required": [
        "value"
      ]
    },
    "NewRelicMonitorResourceUpdate": {
      "type": "object",
      "properties": {
        "identity": {
          "$ref": "../../../../../common-types/resource-management/v3/managedidentity.json#/definitions/ManagedServiceIdentity"
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "$ref": "#/definitions/NewRelicMonitorResourceUpdateProperties",
          "x-ms-client-flatten": true
        }
      }
    },
    "NewRelicMonitorResourceUpdateProperties": {
      "type": "object",
      "properties": {
        "newRelicAccountProperties": {
          "$ref": "#/definitions/NewRelicAccountProperties"
        },
        "userInfo": {
          "$ref": "#/definitions/UserInfo"
        },
        "planData": {
          "$ref": "#/definitions/PlanData"
        },
        "saaSData": {
          "$ref": "#/definitions/SaaSData"
        },
        "orgCreationSource": {
          "type": "string",
          "enum": [
            "LIFTR",
            "NEWRELIC"
          ],
          "x-ms-enum": {
            "name": "OrgCreationSource",
            "modelAsString": true
          }
        },
        "accountCreationSource": {
          "type": "string",
          "enum": [
            "LIFTR",
            "NEWRELIC"
          ],
          "x-ms-enum": {
            "name": "AccountCreationSource",
            "modelAsString": true
          }
        }
      }
    },
    "NewRelicSingleSignOnProperties": {
      "type": "object",
      "properties": {
        "singleSignOnState": {
          "type": "string",
          "enum": [
            "Initial",
            "Enable",
            "Disable",
            "Existing"
          ],
          "x-ms-enum": {
            "name": "SingleSignOnStates",
            "modelAsString": true
          }
        },
        "enterpriseAppId": {
          "type": "string"
        },
        "singleSignOnUrl": {
          "type": "string"
        },
        "provisioningState": {
          "type": "string",
          "enum": [
            "Accepted",
            "Creating",
            "Updating",
            "Deleting",
            "Succeeded",
            "Failed",
            "Canceled",
            "Deleted",
            "NotSpecified"
          ],
          "x-ms-enum": {
            "name": "ProvisioningState",
            "modelAsString": true
          }
        }
      }
    },
    "OrganizationInfo": {
      "type": "object",
      "properties": {
        "organizationId": {
          "type": "string"
        }
      }
    },
    "OrganizationProperties": {
      "type": "object",
      "properties": {
        "organizationId": {
          "type": "string"
        },
        "organizationName": {
          "type": "string"
        },
        "billingSource": {
          "type": "string",
          "enum": [
            "AZURE",
            "NEWRELIC"
          ],
          "x-ms-enum": {
            "name": "BillingSource",
            "modelAsString": true
          }
        }
      }
    },
    "OrganizationResource": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/OrganizationProperties",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "OrganizationsListResponse": {
      "type": "object",
      "description": "[Placeholder] Discription for page model",
      "properties": {
        "value": {
          "type": "array",
          "description": "[Placeholder] Discription for value property",
          "items": {
            "$ref": "#/definitions/OrganizationResource"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "[Placeholder] Discription for nextLink property"
        }
      },
      "required": [
        "value"
      ]
    },
    "PartnerBillingEntity": {
      "type": "object",
      "properties": {
        "organizationId": {
          "type": "string"
        },
        "organizationName": {
          "type": "string"
        }
      }
    },
    "PlanData": {
      "type": "object",
      "properties": {
        "usageType": {
          "type": "string",
          "enum": [
            "PAYG",
            "COMMITTED"
          ],
          "x-ms-enum": {
            "name": "UsageType",
            "modelAsString": true
          }
        },
        "billingCycle": {
          "type": "string"
        },
        "planDetails": {
          "type": "string"
        },
        "effectiveDate": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "PlanDataListResponse": {
      "type": "object",
      "description": "[Placeholder] Discription for page model",
      "properties": {
        "value": {
          "type": "array",
          "description": "[Placeholder] Discription for value property",
          "items": {
            "$ref": "#/definitions/PlanDataResource"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "[Placeholder] Discription for nextLink property"
        }
      },
      "required": [
        "value"
      ]
    },
    "PlanDataProperties": {
      "type": "object",
      "properties": {
        "planData": {
          "$ref": "#/definitions/PlanData"
        },
        "orgCreationSource": {
          "type": "string",
          "enum": [
            "LIFTR",
            "NEWRELIC"
          ],
          "x-ms-enum": {
            "name": "OrgCreationSource",
            "modelAsString": true
          }
        },
        "accountCreationSource": {
          "type": "string",
          "enum": [
            "LIFTR",
            "NEWRELIC"
          ],
          "x-ms-enum": {
            "name": "AccountCreationSource",
            "modelAsString": true
          }
        }
      }
    },
    "PlanDataResource": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/PlanDataProperties",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "ResubscribeProperties": {
      "type": "object",
      "properties": {
        "planId": {
          "type": "string"
        },
        "termId": {
          "type": "string"
        },
        "subscriptionId": {
          "type": "string"
        },
        "resourceGroup": {
          "type": "string"
        },
        "organizationId": {
          "type": "string"
        },
        "publisherId": {
          "type": "string"
        },
        "offerId": {
          "type": "string"
        }
      }
    },
    "SaaSData": {
      "type": "object",
      "properties": {
        "saaSResourceId": {
          "type": "string"
        }
      }
    },
    "SaaSResourceDetailsResponse": {
      "type": "object",
      "properties": {
        "saasId": {
          "type": "string"
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "SubscriptionList": {
      "type": "object",
      "properties": {
        "patchOperation": {
          "type": "string",
          "enum": [
            "AddBegin",
            "AddComplete",
            "DeleteBegin",
            "DeleteComplete",
            "Active"
          ],
          "x-ms-enum": {
            "name": "PatchOperation",
            "modelAsString": true
          },
          "x-ms-mutability": [
            "create",
            "update"
          ]
        },
        "monitoredSubscriptionList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MonitoredSubscription"
          }
        },
        "provisioningState": {
          "type": "string",
          "enum": [
            "Accepted",
            "Creating",
            "Updating",
            "Deleting",
            "Succeeded",
            "Failed",
            "Canceled",
            "Deleted",
            "NotSpecified"
          ],
          "x-ms-enum": {
            "name": "ProvisioningState",
            "modelAsString": true
          },
          "readOnly": true
        }
      }
    },
    "SwitchBillingRequest": {
      "type": "object",
      "properties": {
        "azureResourceId": {
          "type": "string"
        },
        "organizationId": {
          "type": "string"
        },
        "planData": {
          "$ref": "#/definitions/PlanData"
        },
        "userEmail": {
          "type": "string",
          "pattern": "^[A-Za-z0-9._%+-]+@(?:[A-Za-z0-9-]+\\.)+[A-Za-z]{2,}$"
        }
      },
      "required": [
        "userEmail"
      ]
    },
    "TagRule": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/MonitoringTagRulesProperties",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      },
      "required": [
        "properties"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "TagRuleListResult": {
      "type": "object",
      "description": "[Placeholder] Discription for page model",
      "properties": {
        "value": {
          "type": "array",
          "description": "[Placeholder] Discription for value property",
          "items": {
            "$ref": "#/definitions/TagRule"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "[Placeholder] Discription for nextLink property"
        }
      },
      "required": [
        "value"
      ]
    },
    "TagRuleUpdate": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/TagRuleUpdateProperties",
          "x-ms-client-flatten": true
        }
      }
    },
    "TagRuleUpdateProperties": {
      "type": "object",
      "properties": {
        "logRules": {
          "$ref": "#/definitions/LogRules"
        },
        "metricRules": {
          "$ref": "#/definitions/MetricRules"
        }
      }
    },
    "UserInfo": {
      "type": "object",
      "properties": {
        "firstName": {
          "type": "string",
          "maxLength": 50
        },
        "lastName": {
          "type": "string",
          "maxLength": 50
        },
        "emailAddress": {
          "type": "string",
          "pattern": "^[A-Za-z0-9._%+-]+@(?:[A-Za-z0-9-]+\\.)+[A-Za-z]{2,}$"
        },
        "phoneNumber": {
          "type": "string",
          "maxLength": 40
        },
        "country": {
          "type": "string"
        }
      }
    },
    "VMExtensionPayload": {
      "type": "object",
      "properties": {
        "ingestionKey": {
          "type": "string"
        }
      }
    },
    "VMHostsListResponse": {
      "type": "object",
      "description": "[Placeholder] Discription for page model",
      "properties": {
        "value": {
          "type": "array",
          "description": "[Placeholder] Discription for value property",
          "items": {
            "$ref": "#/definitions/VMInfo"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "[Placeholder] Discription for nextLink property"
        }
      },
      "required": [
        "value"
      ]
    },
    "VMInfo": {
      "type": "object",
      "properties": {
        "vmId": {
          "type": "string"
        },
        "agentVersion": {
          "type": "string"
        },
        "agentStatus": {
          "type": "string"
        }
      }
    },
    "email": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "pattern": "^[A-Za-z0-9._%+-]+@(?:[A-Za-z0-9-]+\\.)+[A-Za-z]{2,}$"
        }
      }
    }
  },
  "parameters": {}
}