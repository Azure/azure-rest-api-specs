{
  "swagger": "2.0",
  "info": {
    "title": "Microsoft Playwright Service Reporting Data Plane API",
    "version": "2025-02-24",
    "x-typespec-generated": [
      {
        "emitter": "@azure-tools/typespec-autorest"
      }
    ]
  },
  "schemes": [
    "https"
  ],
  "x-ms-parameterized-host": {
    "hostTemplate": "{endpoint}",
    "useSchemePrefix": false,
    "parameters": [
      {
        "name": "endpoint",
        "in": "path",
        "description": "Supported Azure Playwright Service API Endpoints (protocol and hostname, for example:\n  https://{region}.reporting.api.playwright.microsoft.com).",
        "required": true,
        "type": "string"
      }
    ]
  },
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "security": [
    {
      "OAuth2Auth": [
        "https://playwright.microsoft.com/.default"
      ]
    }
  ],
  "securityDefinitions": {
    "OAuth2Auth": {
      "type": "oauth2",
      "flow": "accessCode",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
        "https://playwright.microsoft.com/.default": ""
      },
      "tokenUrl": "https://login.microsoftonline.com/common/v2.0/oauth2/token"
    }
  },
  "tags": [
    {
      "name": "test-run"
    },
    {
      "name": "test-result"
    }
  ],
  "paths": {
    "/accounts/{accountId}/test-results": {
      "get": {
        "operationId": "TestResults_List",
        "tags": [
          "test-result"
        ],
        "description": "List Testresults.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "accountId",
            "in": "path",
            "description": "The account id.",
            "required": true,
            "type": "string",
            "maxLength": 64,
            "pattern": "[A-Za-z0-9]+(_[A-Za-z0-9]+)*(-[A-Za-z0-9]+)+"
          },
          {
            "$ref": "#/parameters/Azure.Core.TopQueryParameter"
          },
          {
            "$ref": "#/parameters/Azure.Core.SkipQueryParameter"
          },
          {
            "$ref": "#/parameters/Azure.Core.MaxPageSizeQueryParameter"
          },
          {
            "$ref": "#/parameters/Azure.Core.FilterQueryParameter"
          },
          {
            "$ref": "#/parameters/Azure.Core.ClientRequestIdHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/PagedTestResultDetails"
            },
            "headers": {
              "x-ms-client-request-id": {
                "type": "string",
                "format": "uuid",
                "description": "An opaque, globally-unique, client-generated string identifier for the request."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "TestResults_ListTestResults": {
            "$ref": "./examples/TestResults_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/accounts/{accountId}/test-results:resultsStats": {
      "post": {
        "operationId": "TestResults_ComputeResultsStats",
        "tags": [
          "test-result"
        ],
        "description": "Get Testresults summary.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "accountId",
            "in": "path",
            "description": "The account id.",
            "required": true,
            "type": "string",
            "maxLength": 64,
            "pattern": "[A-Za-z0-9]+(_[A-Za-z0-9]+)*(-[A-Za-z0-9]+)+"
          },
          {
            "$ref": "#/parameters/Azure.Core.TopQueryParameter"
          },
          {
            "$ref": "#/parameters/Azure.Core.SkipQueryParameter"
          },
          {
            "$ref": "#/parameters/Azure.Core.MaxPageSizeQueryParameter"
          },
          {
            "$ref": "#/parameters/Azure.Core.FilterQueryParameter"
          },
          {
            "$ref": "#/parameters/Azure.Core.ClientRequestIdHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/ResultsStats"
            },
            "headers": {
              "x-ms-client-request-id": {
                "type": "string",
                "format": "uuid",
                "description": "An opaque, globally-unique, client-generated string identifier for the request."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "TestResults_GetTestResultsSummary": {
            "$ref": "./examples/TestResults_ComputeResultsStats.json"
          }
        }
      }
    },
    "/accounts/{accountId}/test-results:uploadBatch": {
      "post": {
        "operationId": "TestResults_UploadBatch",
        "tags": [
          "test-result"
        ],
        "description": "Upload Test Results.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "accountId",
            "in": "path",
            "description": "The account id.",
            "required": true,
            "type": "string",
            "maxLength": 64,
            "pattern": "[A-Za-z0-9]+(_[A-Za-z0-9]+)*(-[A-Za-z0-9]+)+"
          },
          {
            "$ref": "#/parameters/Azure.Core.ClientRequestIdHeader"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UploadTestResultsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "headers": {
              "x-ms-client-request-id": {
                "type": "string",
                "format": "uuid",
                "description": "An opaque, globally-unique, client-generated string identifier for the request."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "TestResults_UploadBatch": {
            "$ref": "./examples/TestResults_UploadBatch.json"
          }
        }
      }
    },
    "/accounts/{accountId}/test-runs": {
      "get": {
        "operationId": "TestRuns_List",
        "tags": [
          "test-run"
        ],
        "description": "List testruns.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "accountId",
            "in": "path",
            "description": "The account id.",
            "required": true,
            "type": "string",
            "maxLength": 64,
            "pattern": "[A-Za-z0-9]+(_[A-Za-z0-9]+)*(-[A-Za-z0-9]+)+"
          },
          {
            "$ref": "#/parameters/Azure.Core.TopQueryParameter"
          },
          {
            "$ref": "#/parameters/Azure.Core.SkipQueryParameter"
          },
          {
            "$ref": "#/parameters/Azure.Core.MaxPageSizeQueryParameter"
          },
          {
            "$ref": "#/parameters/Azure.Core.FilterQueryParameter"
          },
          {
            "$ref": "#/parameters/Azure.Core.ClientRequestIdHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/PagedTestRun"
            },
            "headers": {
              "x-ms-client-request-id": {
                "type": "string",
                "format": "uuid",
                "description": "An opaque, globally-unique, client-generated string identifier for the request."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "TestRuns_ListTestRuns": {
            "$ref": "./examples/TestRuns_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/accounts/{accountId}/test-runs/{testRunId}": {
      "get": {
        "operationId": "TestRuns_Get",
        "tags": [
          "test-run"
        ],
        "description": "Gets a testrun.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "accountId",
            "in": "path",
            "description": "The account id.",
            "required": true,
            "type": "string",
            "maxLength": 64,
            "pattern": "[A-Za-z0-9]+(_[A-Za-z0-9]+)*(-[A-Za-z0-9]+)+"
          },
          {
            "name": "testRunId",
            "in": "path",
            "description": "Identifier of the test run.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/Azure.Core.ClientRequestIdHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/TestRun"
            },
            "headers": {
              "x-ms-client-request-id": {
                "type": "string",
                "format": "uuid",
                "description": "An opaque, globally-unique, client-generated string identifier for the request."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "TestRuns_GetTestRun": {
            "$ref": "./examples/TestRuns_Get.json"
          }
        }
      },
      "patch": {
        "operationId": "TestRuns_CreateOrUpdate",
        "tags": [
          "test-run"
        ],
        "description": "Creates or updates a testrun.",
        "consumes": [
          "application/merge-patch+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "accountId",
            "in": "path",
            "description": "The account id.",
            "required": true,
            "type": "string",
            "maxLength": 64,
            "pattern": "[A-Za-z0-9]+(_[A-Za-z0-9]+)*(-[A-Za-z0-9]+)+"
          },
          {
            "name": "testRunId",
            "in": "path",
            "description": "Identifier of the test run.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/Azure.Core.ClientRequestIdHeader"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "The resource instance.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TestRunCreateOrUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/TestRun"
            },
            "headers": {
              "x-ms-client-request-id": {
                "type": "string",
                "format": "uuid",
                "description": "An opaque, globally-unique, client-generated string identifier for the request."
              }
            }
          },
          "201": {
            "description": "The request has succeeded and a new resource has been created as a result.",
            "schema": {
              "$ref": "#/definitions/TestRun"
            },
            "headers": {
              "x-ms-client-request-id": {
                "type": "string",
                "format": "uuid",
                "description": "An opaque, globally-unique, client-generated string identifier for the request."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "TestRuns_CreateOrUpdateTestRun": {
            "$ref": "./examples/TestRuns_CreateOrUpdate.json"
          }
        }
      }
    },
    "/accounts/{accountId}/test-runs/{testRunId}:createArtifactsUploadBaseUrl": {
      "post": {
        "operationId": "TestRuns_CreateArtifactsUploadBaseUrl",
        "tags": [
          "test-run"
        ],
        "description": "Get TestResults Upload Url.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "accountId",
            "in": "path",
            "description": "The account id.",
            "required": true,
            "type": "string",
            "maxLength": 64,
            "pattern": "[A-Za-z0-9]+(_[A-Za-z0-9]+)*(-[A-Za-z0-9]+)+"
          },
          {
            "name": "testRunId",
            "in": "path",
            "description": "Identifier of the test run.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/Azure.Core.ClientRequestIdHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/TestResultsUrl"
            },
            "headers": {
              "x-ms-client-request-id": {
                "type": "string",
                "format": "uuid",
                "description": "An opaque, globally-unique, client-generated string identifier for the request."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "TestRuns_CreateArtifactsUploadBaseUrl": {
            "$ref": "./examples/TestRuns_CreateArtifactsUploadBaseUrl.json"
          }
        }
      }
    },
    "/accounts/{accountId}/test-runs/{testRunId}:updateShardExecutionStatus": {
      "post": {
        "operationId": "TestRuns_UpdateShardExecutionStatus",
        "tags": [
          "test-run"
        ],
        "description": "Resource action operation template.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "accountId",
            "in": "path",
            "description": "The account id.",
            "required": true,
            "type": "string",
            "maxLength": 64,
            "pattern": "[A-Za-z0-9]+(_[A-Za-z0-9]+)*(-[A-Za-z0-9]+)+"
          },
          {
            "name": "testRunId",
            "in": "path",
            "description": "Identifier of the test run.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/Azure.Core.ClientRequestIdHeader"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ShardExecutionDetails"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "headers": {
              "x-ms-client-request-id": {
                "type": "string",
                "format": "uuid",
                "description": "An opaque, globally-unique, client-generated string identifier for the request."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "TestRuns_UpdateShardExecutionStatus": {
            "$ref": "./examples/TestRuns_UpdateShardExecutionStatus.json"
          }
        }
      }
    },
    "/accounts/{accountId}/test-runs:accountRunStats": {
      "post": {
        "operationId": "TestRuns_ComputeAccountRunStats",
        "tags": [
          "test-run"
        ],
        "description": "Get TestRun summary for an Odata filter.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "accountId",
            "in": "path",
            "description": "The account id.",
            "required": true,
            "type": "string",
            "maxLength": 64,
            "pattern": "[A-Za-z0-9]+(_[A-Za-z0-9]+)*(-[A-Za-z0-9]+)+"
          },
          {
            "$ref": "#/parameters/Azure.Core.TopQueryParameter"
          },
          {
            "$ref": "#/parameters/Azure.Core.SkipQueryParameter"
          },
          {
            "$ref": "#/parameters/Azure.Core.MaxPageSizeQueryParameter"
          },
          {
            "$ref": "#/parameters/Azure.Core.FilterQueryParameter"
          },
          {
            "$ref": "#/parameters/Azure.Core.ClientRequestIdHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/AccountTestRunStats"
            },
            "headers": {
              "x-ms-client-request-id": {
                "type": "string",
                "format": "uuid",
                "description": "An opaque, globally-unique, client-generated string identifier for the request."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "TestRuns_ComputeAccountRunStats": {
            "$ref": "./examples/TestRuns_ComputeAccountRunStats.json"
          }
        }
      }
    },
    "/accounts/{accountId}/test-runs:metadata": {
      "post": {
        "operationId": "TestRuns_ComputeMetadata",
        "tags": [
          "test-run"
        ],
        "description": "Get TestRun metadata for an Odata filter.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "accountId",
            "in": "path",
            "description": "The account id.",
            "required": true,
            "type": "string",
            "maxLength": 64,
            "pattern": "[A-Za-z0-9]+(_[A-Za-z0-9]+)*(-[A-Za-z0-9]+)+"
          },
          {
            "$ref": "#/parameters/Azure.Core.TopQueryParameter"
          },
          {
            "$ref": "#/parameters/Azure.Core.SkipQueryParameter"
          },
          {
            "$ref": "#/parameters/Azure.Core.MaxPageSizeQueryParameter"
          },
          {
            "$ref": "#/parameters/Azure.Core.FilterQueryParameter"
          },
          {
            "$ref": "#/parameters/Azure.Core.ClientRequestIdHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/TestRunsMetadata"
            },
            "headers": {
              "x-ms-client-request-id": {
                "type": "string",
                "format": "uuid",
                "description": "An opaque, globally-unique, client-generated string identifier for the request."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "type": "string",
                "description": "String error code indicating what went wrong."
              }
            }
          }
        },
        "x-ms-examples": {
          "TestRuns_ComputeTestRunMetadata": {
            "$ref": "./examples/TestRuns_ComputeMetadata.json"
          }
        }
      }
    }
  },
  "definitions": {
    "AccessLevel": {
      "type": "string",
      "description": "Access levels for test results URL.",
      "enum": [
        "Read",
        "Write",
        "ReadWrite",
        "ReadAddCreateWrite"
      ],
      "x-ms-enum": {
        "name": "AccessLevel",
        "modelAsString": true,
        "values": [
          {
            "name": "Read",
            "value": "Read",
            "description": "Read access."
          },
          {
            "name": "Write",
            "value": "Write",
            "description": "Write access."
          },
          {
            "name": "ReadWrite",
            "value": "ReadWrite",
            "description": "Read and write access."
          },
          {
            "name": "ReadAddCreateWrite",
            "value": "ReadAddCreateWrite",
            "description": "Read, add, create, and write access."
          }
        ]
      }
    },
    "AccountTestRunStats": {
      "type": "object",
      "description": "Summary statistics of Testrun in an account.",
      "properties": {
        "passed": {
          "type": "integer",
          "format": "int32",
          "description": "Passed  runs within an account"
        },
        "failed": {
          "type": "integer",
          "format": "int32",
          "description": "Failed  runs within an account"
        },
        "flaky": {
          "type": "integer",
          "format": "int32",
          "description": "Flaky  runs within an account"
        },
        "all": {
          "type": "integer",
          "format": "int32",
          "description": "Total  runs within an account"
        },
        "cloudExecutionRuns": {
          "type": "integer",
          "format": "int32",
          "description": "Cloud Executed runs within an account"
        }
      },
      "required": [
        "passed",
        "failed",
        "flaky",
        "all",
        "cloudExecutionRuns"
      ]
    },
    "AttachmentKind": {
      "type": "string",
      "description": "Attachment kinds uploaded for a test result",
      "enum": [
        "Image",
        "Video",
        "Trace"
      ],
      "x-ms-enum": {
        "name": "AttachmentKind",
        "modelAsString": true,
        "values": [
          {
            "name": "Image",
            "value": "Image",
            "description": "Image"
          },
          {
            "name": "Video",
            "value": "Video",
            "description": "Video"
          },
          {
            "name": "Trace",
            "value": "Trace",
            "description": "Trace"
          }
        ]
      }
    },
    "Azure.Core.Foundations.Error": {
      "type": "object",
      "description": "The error object.",
      "properties": {
        "code": {
          "type": "string",
          "description": "One of a server-defined set of error codes."
        },
        "message": {
          "type": "string",
          "description": "A human-readable representation of the error."
        },
        "target": {
          "type": "string",
          "description": "The target of the error."
        },
        "details": {
          "type": "array",
          "description": "An array of details about specific errors that led to this reported error.",
          "items": {
            "$ref": "#/definitions/Azure.Core.Foundations.Error"
          },
          "x-ms-identifiers": []
        },
        "innererror": {
          "$ref": "#/definitions/Azure.Core.Foundations.InnerError",
          "description": "An object containing more specific information than the current object about the error."
        }
      },
      "required": [
        "code",
        "message"
      ]
    },
    "Azure.Core.Foundations.ErrorResponse": {
      "type": "object",
      "description": "A response containing error details.",
      "properties": {
        "error": {
          "$ref": "#/definitions/Azure.Core.Foundations.Error",
          "description": "The error object."
        }
      },
      "required": [
        "error"
      ]
    },
    "Azure.Core.Foundations.InnerError": {
      "type": "object",
      "description": "An object containing more specific information about the error. As per Microsoft One API guidelines - https://github.com/Microsoft/api-guidelines/blob/vNext/Guidelines.md#7102-error-condition-responses.",
      "properties": {
        "code": {
          "type": "string",
          "description": "One of a server-defined set of error codes."
        },
        "innererror": {
          "$ref": "#/definitions/Azure.Core.Foundations.InnerError",
          "description": "Inner error."
        }
      }
    },
    "BrowserType": {
      "type": "string",
      "description": "Supported browser Types for tests",
      "enum": [
        "Chromium",
        "Webkit",
        "FireFox"
      ],
      "x-ms-enum": {
        "name": "BrowserType",
        "modelAsString": true,
        "values": [
          {
            "name": "Chromium",
            "value": "Chromium",
            "description": "Chromium"
          },
          {
            "name": "Webkit",
            "value": "Webkit",
            "description": "Webkit"
          },
          {
            "name": "FireFox",
            "value": "FireFox",
            "description": "Safari"
          }
        ]
      }
    },
    "CiConfig": {
      "type": "object",
      "description": "Model representing continuous integration (CI) configuration. ",
      "properties": {
        "ciProviderName": {
          "$ref": "#/definitions/CiProviderName",
          "description": "Name of the CI provider.  GitHub | ADO"
        },
        "branch": {
          "type": "string",
          "description": "Branch name in the source code repository.",
          "maxLength": 500
        },
        "author": {
          "type": "string",
          "description": "Author of the commit triggering the test run.",
          "maxLength": 500
        },
        "commitId": {
          "type": "string",
          "description": "ID of the commit triggering the test run.",
          "maxLength": 500
        },
        "revisionUrl": {
          "type": "string",
          "format": "uri",
          "description": "URL linking to the revision details.",
          "maxLength": 4096
        }
      }
    },
    "CiProviderName": {
      "type": "string",
      "description": "Supported CI provider for tests",
      "enum": [
        "GitHub",
        "Ado",
        "Default"
      ],
      "x-ms-enum": {
        "name": "CiProviderName",
        "modelAsString": true,
        "values": [
          {
            "name": "GitHub",
            "value": "GitHub",
            "description": "GitHub"
          },
          {
            "name": "Ado",
            "value": "Ado",
            "description": "Azure Devops"
          },
          {
            "name": "Default",
            "value": "Default",
            "description": "default"
          }
        ]
      }
    },
    "CloudReportingSummary": {
      "type": "object",
      "description": "Model representing summary of test run results.",
      "properties": {
        "resultProcessingstatus": {
          "$ref": "#/definitions/TestRunStatus",
          "description": "Processing Status of the the uploaded. Allowed values: RUNNING  | CLIENT_COMPLETE | SERVER_COMPLETE"
        },
        "numTotalTests": {
          "type": "integer",
          "format": "int32",
          "description": "Total number of tests executed.",
          "readOnly": true
        },
        "numPassedTests": {
          "type": "integer",
          "format": "int32",
          "description": "Number of tests that passed.",
          "readOnly": true
        },
        "numFailedTests": {
          "type": "integer",
          "format": "int32",
          "description": "Number of tests that failed.",
          "readOnly": true
        },
        "numSkippedTests": {
          "type": "integer",
          "format": "int32",
          "description": "Number of tests that were skipped.",
          "readOnly": true
        },
        "numFlakyTests": {
          "type": "integer",
          "format": "int32",
          "description": "Number of tests that were flaky.",
          "readOnly": true
        },
        "status": {
          "$ref": "#/definitions/TestStatus",
          "description": "Status of the test run - PASSED | FAILED | INTERRUPTED | TIMEDOUT",
          "readOnly": true
        },
        "jobs": {
          "type": "array",
          "description": "List of jobs associated with the test run.",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "projects": {
          "type": "array",
          "description": "List of projects associated with the test run.",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "tags": {
          "type": "array",
          "description": "List of tags associated with the test run.",
          "items": {
            "type": "string"
          },
          "readOnly": true
        }
      },
      "required": [
        "resultProcessingstatus",
        "numTotalTests",
        "numPassedTests",
        "numFailedTests",
        "numSkippedTests",
        "numFlakyTests",
        "status"
      ]
    },
    "CloudRunSummary": {
      "type": "object",
      "description": "Model representing summary information about a test run.",
      "properties": {
        "status": {
          "$ref": "#/definitions/TestRunStatus",
          "description": "Status of the test run. Allowed values: RUNNING  | CLIENT_COMPLETE | SERVER_COMPLETE"
        },
        "startTime": {
          "type": "string",
          "format": "date-time",
          "description": "Start time of the test run in datetime(RFC 3339 literal format)."
        },
        "endTime": {
          "type": "string",
          "format": "date-time",
          "description": "End time of the test run."
        },
        "billableTime": {
          "type": "integer",
          "format": "int32",
          "description": "Billable time for the test run. Available after testRun Ends"
        },
        "totalTime": {
          "type": "integer",
          "format": "int32",
          "description": "Total time taken for the test run."
        },
        "numBrowserSessions": {
          "type": "integer",
          "format": "int32",
          "description": "Number of browser sessions used in the test run."
        },
        "browserQuotaExceeded": {
          "type": "boolean",
          "description": "Flag indicating if a test-run was throttled because requested browser Quota exceeded"
        }
      },
      "required": [
        "status",
        "startTime",
        "endTime",
        "billableTime",
        "totalTime",
        "numBrowserSessions",
        "browserQuotaExceeded"
      ]
    },
    "OsType": {
      "type": "string",
      "description": "Supported OS  for tests",
      "enum": [
        "Windows",
        "Linux",
        "Mac"
      ],
      "x-ms-enum": {
        "name": "OsType",
        "modelAsString": true,
        "values": [
          {
            "name": "Windows",
            "value": "Windows",
            "description": "Windows"
          },
          {
            "name": "Linux",
            "value": "Linux",
            "description": "Linux"
          },
          {
            "name": "Mac",
            "value": "Mac",
            "description": "MAC"
          }
        ]
      }
    },
    "PagedTestResultDetails": {
      "type": "object",
      "description": "Paged collection of TestResultDetails items",
      "properties": {
        "value": {
          "type": "array",
          "description": "The TestResultDetails items on this page",
          "items": {
            "$ref": "#/definitions/TestResultDetails"
          },
          "x-ms-identifiers": []
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "PagedTestRun": {
      "type": "object",
      "description": "Paged collection of TestRun items",
      "properties": {
        "value": {
          "type": "array",
          "description": "The TestRun items on this page",
          "items": {
            "$ref": "#/definitions/TestRun"
          },
          "x-ms-identifiers": []
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "PreviousRetrySummary": {
      "type": "object",
      "description": "Summary of previous retries.",
      "properties": {
        "testExecutionId": {
          "type": "string",
          "description": "Identifier of the test execution."
        },
        "retryCount": {
          "type": "integer",
          "format": "int32",
          "description": "Number of retryCount attempts."
        },
        "status": {
          "$ref": "#/definitions/TestStatus",
          "description": "Status of the test execution."
        },
        "duration": {
          "type": "string",
          "format": "duration",
          "description": "Duration of the test execution."
        },
        "startTime": {
          "type": "string",
          "format": "date-time",
          "description": "Start time of the test execution- RFC 3339 literal format "
        },
        "attachmentsMetadata": {
          "type": "array",
          "description": "Metadata related to attachments.",
          "items": {
            "$ref": "#/definitions/AttachmentKind"
          }
        },
        "artifactsPath": {
          "type": "string",
          "description": "List of artifacts paths.",
          "readOnly": true
        }
      },
      "required": [
        "testExecutionId",
        "retryCount",
        "status",
        "duration",
        "startTime",
        "attachmentsMetadata"
      ]
    },
    "ResultsStats": {
      "type": "object",
      "description": "Summary statistics of testresults in a run.",
      "properties": {
        "passed": {
          "type": "integer",
          "format": "int32",
          "description": "Passed test-results within a run"
        },
        "failed": {
          "type": "integer",
          "format": "int32",
          "description": "Failed tests within a run"
        },
        "flaky": {
          "type": "integer",
          "format": "int32",
          "description": "Flaky tests within a run"
        },
        "skipped": {
          "type": "integer",
          "format": "int32",
          "description": "Skipped tests within a run"
        },
        "all": {
          "type": "integer",
          "format": "int32",
          "description": "Total tests within a run"
        }
      },
      "required": [
        "passed",
        "failed",
        "flaky",
        "skipped",
        "all"
      ]
    },
    "RunnerType": {
      "type": "string",
      "description": "Supported Runner Types for tests",
      "enum": [
        "MsTest",
        "Nunit",
        "Playwright"
      ],
      "x-ms-enum": {
        "name": "RunnerType",
        "modelAsString": true,
        "values": [
          {
            "name": "MsTest",
            "value": "MsTest",
            "description": "MsTest"
          },
          {
            "name": "Nunit",
            "value": "Nunit",
            "description": "Nunit"
          },
          {
            "name": "Playwright",
            "value": "Playwright",
            "description": "Playwright"
          }
        ]
      }
    },
    "ShardDetails": {
      "type": "object",
      "description": "Model representing a shard.",
      "properties": {
        "total": {
          "type": "integer",
          "format": "int32",
          "description": "Total number of shards.",
          "maximum": 1000
        }
      },
      "required": [
        "total"
      ]
    },
    "ShardDetailsCreateOrUpdate": {
      "type": "object",
      "description": "Model representing a shard.",
      "properties": {
        "total": {
          "type": "integer",
          "format": "int32",
          "description": "Total number of shards.",
          "maximum": 1000
        }
      }
    },
    "ShardExecutionDetails": {
      "type": "object",
      "description": "Execution details of a Shard.",
      "properties": {
        "shardId": {
          "type": "integer",
          "format": "int32",
          "description": "Shard Id for the shard- indexed 0,1,2",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "summary": {
          "$ref": "#/definitions/UpdateShardExecutionSummary",
          "description": "Summary of the test run shard.",
          "x-ms-mutability": [
            "read",
            "update",
            "create"
          ]
        },
        "workers": {
          "type": "integer",
          "format": "int32",
          "description": "number of workers used by playwright client.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "uploadCompleted": {
          "type": "boolean",
          "description": "Flag indicating if upload is completed for the shard.",
          "x-ms-mutability": [
            "read",
            "update",
            "create"
          ]
        }
      },
      "required": [
        "shardId",
        "summary",
        "workers"
      ]
    },
    "TestFramework": {
      "type": "object",
      "description": "Model representing a test framework.",
      "properties": {
        "name": {
          "$ref": "#/definitions/TestFrameworkName",
          "description": "Name of the test framework. Supported Frameworks are Playwright"
        },
        "version": {
          "type": "string",
          "description": "Version of the test framework."
        },
        "runnerType": {
          "$ref": "#/definitions/RunnerType",
          "description": "Name of the test runner.Supported Frameworks are MSTEST, Playwright, NUNIT"
        }
      },
      "required": [
        "name",
        "version",
        "runnerType"
      ]
    },
    "TestFrameworkCreateOrUpdate": {
      "type": "object",
      "description": "Model representing a test framework.",
      "properties": {
        "name": {
          "$ref": "#/definitions/TestFrameworkName",
          "description": "Name of the test framework. Supported Frameworks are Playwright"
        },
        "version": {
          "type": "string",
          "description": "Version of the test framework."
        },
        "runnerType": {
          "$ref": "#/definitions/RunnerType",
          "description": "Name of the test runner.Supported Frameworks are MSTEST, Playwright, NUNIT"
        }
      }
    },
    "TestFrameworkName": {
      "type": "string",
      "description": "Supported Framework",
      "enum": [
        "Playwright"
      ],
      "x-ms-enum": {
        "name": "TestFrameworkName",
        "modelAsString": true,
        "values": [
          {
            "name": "Playwright",
            "value": "Playwright",
            "description": "Playwright"
          }
        ]
      }
    },
    "TestResult": {
      "type": "object",
      "description": "Summary of test results.",
      "properties": {
        "status": {
          "$ref": "#/definitions/TestStatus",
          "description": "Status of the test results."
        },
        "durationInMs": {
          "type": "integer",
          "format": "int64",
          "description": "Duration of the test execution in milliseconds."
        },
        "startTime": {
          "type": "string",
          "format": "date-time",
          "description": "Start time of the test execution.- (RFC 3339 literal format)"
        },
        "attachmentsMetadata": {
          "type": "array",
          "description": "Metadata related to attachments- comma separated IMAGE, VIDEO, TRACE as applicable",
          "items": {
            "$ref": "#/definitions/AttachmentKind"
          }
        }
      },
      "required": [
        "status",
        "durationInMs",
        "startTime"
      ]
    },
    "TestResultDetails": {
      "type": "object",
      "description": "Details of a single test result.",
      "properties": {
        "testExecutionId": {
          "type": "string",
          "description": "Identifier of the test execution.",
          "maxLength": 200,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "testId": {
          "type": "string",
          "description": "Identifier of the test.",
          "maxLength": 200,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "testCombinationId": {
          "type": "string",
          "description": "Identifier of the test combination.",
          "maxLength": 200,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "runId": {
          "type": "string",
          "description": "Identifier of the test run.",
          "maxLength": 200,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "shardId": {
          "type": "string",
          "description": "Identifier of the shard.",
          "maxLength": 200,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "accountId": {
          "type": "string",
          "description": "Identifier of the account.",
          "maxLength": 200,
          "readOnly": true
        },
        "suiteId": {
          "type": "string",
          "description": "Identifier of the suite.",
          "maxLength": 200,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "testTitle": {
          "type": "string",
          "description": "Title of the test.",
          "maxLength": 500,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "suiteTitle": {
          "type": "string",
          "description": "Title of the suite.",
          "maxLength": 500,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "fileName": {
          "type": "string",
          "description": "Name of the file.",
          "maxLength": 300,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "lineNumber": {
          "type": "integer",
          "format": "int32",
          "description": "Line number.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "retryCount": {
          "type": "integer",
          "format": "int32",
          "description": "Number of retryCount attempts. max retryCount is 20. After which testresults metadata will not be stored",
          "maximum": 20,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "status": {
          "$ref": "#/definitions/TestStatus",
          "description": "Status of the test.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "webTestConfig": {
          "$ref": "#/definitions/WebTestConfig",
          "description": "Configuration for the web test.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "ciConfig": {
          "$ref": "#/definitions/CiConfig",
          "description": "Continuous integration configuration.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "result": {
          "$ref": "#/definitions/TestResult",
          "description": "Summary of test results.",
          "readOnly": true
        },
        "previousRetries": {
          "type": "array",
          "description": "Previous retryCount summaries.",
          "items": {
            "$ref": "#/definitions/PreviousRetrySummary"
          },
          "x-ms-identifiers": []
        },
        "tags": {
          "type": "array",
          "description": "List of tags associated with the test result.",
          "maxItems": 100,
          "items": {
            "type": "string"
          },
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "annotations": {
          "type": "array",
          "description": "List of annotations.",
          "maxItems": 100,
          "items": {
            "type": "string"
          },
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "artifactsPath": {
          "type": "string",
          "description": "Relative path in Storage for all the artifacts of this test",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "required": [
        "testExecutionId",
        "testId",
        "testCombinationId",
        "runId",
        "shardId",
        "accountId",
        "suiteId",
        "testTitle",
        "suiteTitle",
        "fileName",
        "lineNumber",
        "retryCount",
        "status",
        "result"
      ]
    },
    "TestResultsUrl": {
      "type": "object",
      "description": "Model representing a test results URL.",
      "properties": {
        "url": {
          "type": "string",
          "format": "uri",
          "description": "URL for accessing test results."
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "Creation timestamp of the test results URL- RFC 3339 literal format"
        },
        "expiresAt": {
          "type": "string",
          "format": "date-time",
          "description": "Expiration timestamp of the test results URL- RFC 3339 literal format"
        },
        "accessLevel": {
          "$ref": "#/definitions/AccessLevel",
          "description": "Access level for the test results URL."
        }
      },
      "required": [
        "url",
        "createdAt",
        "expiresAt",
        "accessLevel"
      ]
    },
    "TestRun": {
      "type": "object",
      "description": "Model representing detailed information about a test run.",
      "properties": {
        "testRunId": {
          "type": "string",
          "description": "Identifier of the test run.",
          "readOnly": true
        },
        "displayName": {
          "type": "string",
          "description": "Display name of the test run, unicode characters allowed.",
          "maxLength": 200
        },
        "startTime": {
          "type": "string",
          "format": "date-time",
          "description": "Start time of the test run -RFC 3339 literal format",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "creatorId": {
          "type": "string",
          "description": "Creator's identifier.",
          "readOnly": true
        },
        "creatorName": {
          "type": "string",
          "description": "Creator's name.",
          "readOnly": true
        },
        "cloudRunSummary": {
          "$ref": "#/definitions/CloudRunSummary",
          "description": "Summary of the Cloud executed run. Only available if cloud run is enabled ",
          "readOnly": true
        },
        "cloudReportSummary": {
          "$ref": "#/definitions/CloudReportingSummary",
          "description": "Summary of reports uploaded on cloud.Only available if cloud reporting is enabled",
          "readOnly": true
        },
        "ciConfig": {
          "$ref": "#/definitions/CiConfig",
          "description": "Continuous integration configuration.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "testRunConfig": {
          "$ref": "#/definitions/TestRunConfig",
          "description": "Client configuration for the test run.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "testResultsUrl": {
          "$ref": "#/definitions/TestResultsUrl",
          "description": "URL for accessing test results.",
          "readOnly": true
        },
        "cloudRunEnabled": {
          "type": "boolean",
          "description": "Flag indicating if cloud run is enabled.",
          "readOnly": true
        },
        "cloudReportingEnabled": {
          "type": "boolean",
          "description": "Must be set to true when Customers want to use Reporting Feature ",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "required": [
        "testRunId",
        "startTime",
        "creatorId",
        "creatorName",
        "cloudRunEnabled",
        "cloudReportingEnabled"
      ]
    },
    "TestRunConfig": {
      "type": "object",
      "description": "Model representing client configuration.",
      "properties": {
        "retryCount": {
          "type": "integer",
          "format": "int32",
          "description": "Number of retry attempts.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "repeatEach": {
          "type": "integer",
          "format": "int32",
          "description": "Interval between repeated test runs.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "workers": {
          "type": "integer",
          "format": "int32",
          "description": "Number of worker instances.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "testFramework": {
          "$ref": "#/definitions/TestFramework",
          "description": "Details of the test framework used.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "shardDetails": {
          "$ref": "#/definitions/ShardDetails",
          "description": "Details of the shards used in the test.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "timeoutInMs": {
          "type": "string",
          "format": "duration",
          "description": "Timeout duration for test execution.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "testType": {
          "type": "string",
          "description": "Type of test being executed (default: WebTest).",
          "default": "WebTest",
          "maxLength": 200,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "testSdkLanguage": {
          "$ref": "#/definitions/TestSdkLanguage",
          "description": "Programming language used for the test SDK. Supported languages are 'JavaScript', 'TypeScript', 'Csharp'",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "reporterPackageVersion": {
          "type": "string",
          "description": "Version of the reporter package.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "required": [
        "timeoutInMs",
        "testSdkLanguage"
      ]
    },
    "TestRunConfigCreateOrUpdate": {
      "type": "object",
      "description": "Model representing client configuration.",
      "properties": {
        "retryCount": {
          "type": "integer",
          "format": "int32",
          "description": "Number of retry attempts.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "repeatEach": {
          "type": "integer",
          "format": "int32",
          "description": "Interval between repeated test runs.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "workers": {
          "type": "integer",
          "format": "int32",
          "description": "Number of worker instances.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "testFramework": {
          "$ref": "#/definitions/TestFrameworkCreateOrUpdate",
          "description": "Details of the test framework used.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "shardDetails": {
          "$ref": "#/definitions/ShardDetailsCreateOrUpdate",
          "description": "Details of the shards used in the test.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "timeoutInMs": {
          "type": "string",
          "format": "duration",
          "description": "Timeout duration for test execution.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "testType": {
          "type": "string",
          "description": "Type of test being executed (default: WebTest).",
          "default": "WebTest",
          "maxLength": 200,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "testSdkLanguage": {
          "$ref": "#/definitions/TestSdkLanguage",
          "description": "Programming language used for the test SDK. Supported languages are 'JavaScript', 'TypeScript', 'Csharp'",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "reporterPackageVersion": {
          "type": "string",
          "description": "Version of the reporter package.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      }
    },
    "TestRunCreateOrUpdate": {
      "type": "object",
      "description": "Model representing detailed information about a test run.",
      "properties": {
        "displayName": {
          "type": "string",
          "description": "Display name of the test run, unicode characters allowed.",
          "maxLength": 200
        },
        "startTime": {
          "type": "string",
          "format": "date-time",
          "description": "Start time of the test run -RFC 3339 literal format",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "ciConfig": {
          "$ref": "#/definitions/CiConfig",
          "description": "Continuous integration configuration.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "testRunConfig": {
          "$ref": "#/definitions/TestRunConfigCreateOrUpdate",
          "description": "Client configuration for the test run.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "cloudReportingEnabled": {
          "type": "boolean",
          "description": "Must be set to true when Customers want to use Reporting Feature ",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      }
    },
    "TestRunStatus": {
      "type": "string",
      "description": "Status of the test run.",
      "enum": [
        "Running",
        "ClientComplete",
        "ServerComplete"
      ],
      "x-ms-enum": {
        "name": "TestRunStatus",
        "modelAsString": true,
        "values": [
          {
            "name": "Running",
            "value": "Running",
            "description": "The test run is currently running."
          },
          {
            "name": "ClientComplete",
            "value": "ClientComplete",
            "description": "The test run completed on the client side."
          },
          {
            "name": "ServerComplete",
            "value": "ServerComplete",
            "description": "The test run completed on the server side."
          }
        ]
      }
    },
    "TestRunsMetadata": {
      "type": "object",
      "description": "Metadata for  testruns/builds.",
      "properties": {
        "branches": {
          "type": "array",
          "description": "List of CI branches for a testrun",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "branches"
      ]
    },
    "TestSdkLanguage": {
      "type": "string",
      "description": "Supported Test SDK Language.",
      "enum": [
        "JavaScript",
        "TypeScript",
        "CSharp"
      ],
      "x-ms-enum": {
        "name": "TestSdkLanguage",
        "modelAsString": true,
        "values": [
          {
            "name": "JavaScript",
            "value": "JavaScript",
            "description": "JavaScript."
          },
          {
            "name": "TypeScript",
            "value": "TypeScript",
            "description": "TypeScript"
          },
          {
            "name": "CSharp",
            "value": "CSharp",
            "description": "Csharp"
          }
        ]
      }
    },
    "TestStatus": {
      "type": "string",
      "description": "status of a test execution",
      "enum": [
        "Passed",
        "Failed",
        "Skipped",
        "Interrupted",
        "TimedOut"
      ],
      "x-ms-enum": {
        "name": "TestStatus",
        "modelAsString": true,
        "values": [
          {
            "name": "Passed",
            "value": "Passed",
            "description": "The test passed successfully."
          },
          {
            "name": "Failed",
            "value": "Failed",
            "description": "The test failed."
          },
          {
            "name": "Skipped",
            "value": "Skipped",
            "description": "The test was skipped."
          },
          {
            "name": "Interrupted",
            "value": "Interrupted",
            "description": "The test was interrupted."
          },
          {
            "name": "TimedOut",
            "value": "TimedOut",
            "description": "The test timed out."
          }
        ]
      }
    },
    "UpdateShardExecutionSummary": {
      "type": "object",
      "description": "Model to update shard result.",
      "properties": {
        "startTime": {
          "type": "string",
          "format": "date-time",
          "description": "Start time of the test run in datetime(RFC 3339 literal format)."
        },
        "endTime": {
          "type": "string",
          "format": "date-time",
          "description": "End time of the test run."
        },
        "uploadMetadata": {
          "$ref": "#/definitions/UploadMetadata",
          "description": "Metadata related to test run uploads."
        }
      },
      "required": [
        "startTime",
        "endTime"
      ]
    },
    "UploadMetadata": {
      "type": "object",
      "description": "Model representing upload metadata.",
      "properties": {
        "testResultsCount": {
          "type": "integer",
          "format": "int32",
          "description": "Total number of test results uploaded."
        },
        "totalAttachmentsCount": {
          "type": "integer",
          "format": "int32",
          "description": "Total number of attachments uploaded."
        },
        "totalAttachmentsSize": {
          "type": "integer",
          "format": "int64",
          "description": "Total size of attachments uploaded in Bytes."
        }
      },
      "required": [
        "testResultsCount",
        "totalAttachmentsCount",
        "totalAttachmentsSize"
      ]
    },
    "UploadTestResultsRequest": {
      "type": "object",
      "description": "Request object for uploading test results.",
      "properties": {
        "values": {
          "type": "array",
          "description": "List of test results.",
          "maxItems": 100,
          "items": {
            "$ref": "#/definitions/TestResultDetails"
          },
          "x-ms-identifiers": []
        }
      },
      "required": [
        "values"
      ]
    },
    "WebTestConfig": {
      "type": "object",
      "description": "Configuration details for the web test.",
      "properties": {
        "jobName": {
          "type": "string",
          "description": "Name of the job.",
          "maxLength": 500
        },
        "projectName": {
          "type": "string",
          "description": "Name of the project.",
          "maxLength": 500
        },
        "browserType": {
          "$ref": "#/definitions/BrowserType",
          "description": "Name of the browser."
        },
        "os": {
          "$ref": "#/definitions/OsType",
          "description": "Operating system details."
        }
      },
      "required": [
        "jobName",
        "projectName",
        "browserType",
        "os"
      ]
    }
  },
  "parameters": {
    "Azure.Core.ClientRequestIdHeader": {
      "name": "x-ms-client-request-id",
      "in": "header",
      "description": "An opaque, globally-unique, client-generated string identifier for the request.",
      "required": false,
      "type": "string",
      "format": "uuid",
      "x-ms-parameter-location": "method",
      "x-ms-client-name": "clientRequestId"
    },
    "Azure.Core.FilterQueryParameter": {
      "name": "filter",
      "in": "query",
      "description": "Filter the result list using the given expression.",
      "required": false,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "Azure.Core.Foundations.ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "description": "The API version to use for this operation.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "x-ms-parameter-location": "method",
      "x-ms-client-name": "apiVersion"
    },
    "Azure.Core.MaxPageSizeQueryParameter": {
      "name": "maxpagesize",
      "in": "query",
      "description": "The maximum number of result items per page.",
      "required": false,
      "type": "integer",
      "format": "int32",
      "x-ms-parameter-location": "method"
    },
    "Azure.Core.SkipQueryParameter": {
      "name": "skip",
      "in": "query",
      "description": "The number of result items to skip.",
      "required": false,
      "type": "integer",
      "format": "int32",
      "default": 0,
      "x-ms-parameter-location": "method"
    },
    "Azure.Core.TopQueryParameter": {
      "name": "top",
      "in": "query",
      "description": "The number of result items to return.",
      "required": false,
      "type": "integer",
      "format": "int32",
      "x-ms-parameter-location": "method"
    }
  }
}
