import "@typespec/rest";
import "@typespec/http";
import "@azure-tools/typespec-azure-core";
import "@azure-tools/typespec-azure-resource-manager";

using TypeSpec.Rest;
using TypeSpec.Http;
using Azure.ResourceManager;
using Azure.ResourceManager.Foundations;

namespace Microsoft.Dashboard;

#suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
union ProvisioningState {
  string,
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  Accepted: "Accepted",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  Creating: "Creating",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  Updating: "Updating",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  Deleting: "Deleting",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  Succeeded: "Succeeded",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  Failed: "Failed",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  Canceled: "Canceled",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  Deleted: "Deleted",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  NotSpecified: "NotSpecified",
}

/**
 * Indicate the state for enable or disable traffic over the public interface.
 */
union PublicNetworkAccess {
  string,
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  Enabled: "Enabled",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  Disabled: "Disabled",
}

#suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
union ZoneRedundancy {
  string,
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  Disabled: "Disabled",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  Enabled: "Enabled",
}

#suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
union ApiKey {
  string,
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  Disabled: "Disabled",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  Enabled: "Enabled",
}

#suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
union DeterministicOutboundIP {
  string,
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  Disabled: "Disabled",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  Enabled: "Enabled",
}

/**
 * The private endpoint connection status.
 */
union PrivateEndpointServiceConnectionStatus {
  string,
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  Pending: "Pending",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  Approved: "Approved",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  Rejected: "Rejected",
}

/**
 * The current provisioning state.
 */
#suppress "@azure-tools/typespec-azure-resource-manager/arm-resource-provisioning-state" "For backward compatibility"
union PrivateEndpointConnectionProvisioningState {
  string,
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  Succeeded: "Succeeded",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  Creating: "Creating",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  Deleting: "Deleting",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  Failed: "Failed",
}

/**
 * Scope for dns deterministic name hash calculation
 */
union AutoGeneratedDomainNameLabelScope {
  string,
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  TenantReuse: "TenantReuse",
}

/**
 * The AutoRenew setting of the Enterprise subscription
 */
union MarketplaceAutoRenew {
  string,
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  Disabled: "Disabled",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  Enabled: "Enabled",
}

/**
 * The StartTLSPolicy setting of the SMTP configuration
 * https://pkg.go.dev/github.com/go-mail/mail#StartTLSPolicy
 */
union StartTLSPolicy {
  string,
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  OpportunisticStartTLS: "OpportunisticStartTLS",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  MandatoryStartTLS: "MandatoryStartTLS",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  NoStartTLS: "NoStartTLS",
}

/**
 * Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).
 */
union ManagedServiceIdentityType {
  string,
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  None: "None",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  SystemAssigned: "SystemAssigned",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  UserAssigned: "UserAssigned",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  `SystemAssigned,UserAssigned`: "SystemAssigned,UserAssigned",
}

#suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
union AvailablePromotion {
  string,
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  None: "None",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  FreeTrial: "FreeTrial",
}

/**
 * The approval/rejection status of managed private endpoint connection.
 */
union ManagedPrivateEndpointConnectionStatus {
  string,
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  Pending: "Pending",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  Approved: "Approved",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  Rejected: "Rejected",
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  Disconnected: "Disconnected",
}

#suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
model ManagedGrafanaListResponse is Azure.Core.Page<ManagedGrafana>;

/**
 * Properties specific to the grafana resource.
 */
model ManagedGrafanaProperties {
  /**
   * Provisioning state of the resource.
   */
  @visibility(Lifecycle.Read)
  provisioningState?: ProvisioningState;

  /**
   * The Grafana software version.
   */
  @visibility(Lifecycle.Read)
  grafanaVersion?: string;

  /**
   * The endpoint of the Grafana instance.
   */
  @visibility(Lifecycle.Read)
  endpoint?: string;

  /**
   * Indicate the state for enable or disable traffic over the public interface.
   */
  publicNetworkAccess?: PublicNetworkAccess = PublicNetworkAccess.Enabled;

  /**
   * The zone redundancy setting of the Grafana instance.
   */
  zoneRedundancy?: ZoneRedundancy = ZoneRedundancy.Disabled;

  /**
   * The api key setting of the Grafana instance.
   */
  apiKey?: ApiKey = ApiKey.Disabled;

  /**
   * Whether a Grafana instance uses deterministic outbound IPs.
   */
  deterministicOutboundIP?: DeterministicOutboundIP = DeterministicOutboundIP.Disabled;

  /**
   * List of outbound IPs if deterministicOutboundIP is enabled.
   */
  @visibility(Lifecycle.Read)
  outboundIPs?: string[];

  /**
   * The private endpoint connections of the Grafana instance.
   */
  @visibility(Lifecycle.Read)
  privateEndpointConnections?: PrivateEndpointConnection[];

  /**
   * Scope for dns deterministic name hash calculation.
   */
  autoGeneratedDomainNameLabelScope?: AutoGeneratedDomainNameLabelScope;

  /**
   * GrafanaIntegrations is a bundled observability experience (e.g. pre-configured data source, tailored Grafana dashboards, alerting defaults) for common monitoring scenarios.
   */
  grafanaIntegrations?: GrafanaIntegrations;

  /**
   * Enterprise settings of a Grafana instance
   */
  enterpriseConfigurations?: EnterpriseConfigurations;

  /**
   * Server configurations of a Grafana instance
   */
  grafanaConfigurations?: GrafanaConfigurations;

  /**
   * Installed plugin list of the Grafana instance. Key is plugin id, value is plugin definition.
   */
  #suppress "@azure-tools/typespec-azure-resource-manager/arm-no-record" "For backward compatibility"
  grafanaPlugins?: Record<GrafanaPlugin>;

  /**
   * The major Grafana software version to target.
   */
  grafanaMajorVersion?: string;
}

/**
 * Properties of the PrivateEndpointConnectProperties.
 */
model PrivateEndpointConnectionProperties {
  /**
   * The resource of private end point.
   */
  privateEndpoint?: PrivateEndpoint;

  /**
   * A collection of information about the state of the connection between service consumer and provider.
   */
  privateLinkServiceConnectionState: PrivateLinkServiceConnectionState;

  /**
   * The private endpoint connection group ids.
   */
  groupIds?: string[];

  /**
   * The provisioning state of the private endpoint connection resource.
   */
  @visibility(Lifecycle.Read)
  provisioningState?: PrivateEndpointConnectionProvisioningState;
}

/**
 * The Private Endpoint resource.
 */
model PrivateEndpoint {
  /**
   * The ARM identifier for Private Endpoint
   */
  @visibility(Lifecycle.Read)
  id?: string;
}

/**
 * A collection of information about the state of the connection between service consumer and provider.
 */
model PrivateLinkServiceConnectionState {
  /**
   * Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.
   */
  status?: PrivateEndpointServiceConnectionStatus;

  /**
   * The reason for approval/rejection of the connection.
   */
  description?: string;

  /**
   * A message indicating if changes on the service provider require any updates on the consumer.
   */
  actionsRequired?: string;
}

/**
 * Common fields that are returned in the response for all Azure Resource Manager resources
 */
model Resource {
  /**
   * Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
   */
  @visibility(Lifecycle.Read)
  id?: string;

  /**
   * The name of the resource
   */
  @visibility(Lifecycle.Read)
  name?: string;

  /**
   * The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
   */
  @visibility(Lifecycle.Read)
  type?: string;

  /**
   * Azure Resource Manager metadata containing createdBy and modifiedBy information.
   */
  @visibility(Lifecycle.Read)
  systemData?: SystemData;
}

/**
 * GrafanaIntegrations is a bundled observability experience (e.g. pre-configured data source, tailored Grafana dashboards, alerting defaults) for common monitoring scenarios.
 */
model GrafanaIntegrations {
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  @OpenAPI.extension("x-ms-identifiers", #[])
  azureMonitorWorkspaceIntegrations?: AzureMonitorWorkspaceIntegration[];
}

/**
 * Integrations for Azure Monitor Workspace.
 */
model AzureMonitorWorkspaceIntegration {
  /**
   * The resource Id of the connected Azure Monitor Workspace.
   */
  azureMonitorWorkspaceResourceId?: string;
}

/**
 * Enterprise settings of a Grafana instance
 */
model EnterpriseConfigurations {
  /**
   * The Plan Id of the Azure Marketplace subscription for the Enterprise plugins
   */
  marketplacePlanId?: string;

  /**
   * The AutoRenew setting of the Enterprise subscription
   */
  marketplaceAutoRenew?: MarketplaceAutoRenew;
}

/**
 * Server configurations of a Grafana instance
 */
model GrafanaConfigurations {
  /**
   * Email server settings.
   * https://grafana.com/docs/grafana/v9.0/setup-grafana/configure-grafana/#smtp
   */
  smtp?: Smtp;

  /**
   * Grafana Snapshots settings
   */
  snapshots?: Snapshots;

  /**
   * Grafana users settings
   */
  users?: Users;

  /**
   * Grafana security settings
   */
  security?: Security;
}

/**
 * Email server settings.
 * https://grafana.com/docs/grafana/v9.0/setup-grafana/configure-grafana/#smtp
 */
model Smtp {
  /**
   * Enable this to allow Grafana to send email. Default is false
   */
  enabled?: boolean;

  /**
   * SMTP server hostname with port, e.g. test.email.net:587
   */
  host?: string;

  /**
   * User of SMTP auth
   */
  user?: string;

  /**
   * Password of SMTP auth. If the password contains # or ;, then you have to wrap it with triple quotes
   */
  password?: string;

  /**
   * Address used when sending out emails
   * https://pkg.go.dev/net/mail#Address
   */
  fromAddress?: string;

  /**
   * Name to be used when sending out emails. Default is "Azure Managed Grafana Notification"
   * https://pkg.go.dev/net/mail#Address
   */
  fromName?: string;

  /**
   * The StartTLSPolicy setting of the SMTP configuration
   * https://pkg.go.dev/github.com/go-mail/mail#StartTLSPolicy
   */
  startTLSPolicy?: StartTLSPolicy;

  /**
   * Verify SSL for SMTP server. Default is false
   * https://pkg.go.dev/crypto/tls#Config
   */
  skipVerify?: boolean;
}

/**
 * Grafana Snapshots settings
 */
model Snapshots {
  /**
   * Set to false to disable external snapshot publish endpoint
   */
  externalEnabled?: boolean;
}

/**
 * Grafana users settings
 */
model Users {
  /**
   * Set to true so viewers can access and use explore and perform temporary edits on panels in dashboards they have access to. They cannot save their changes.
   */
  viewersCanEdit?: boolean;
}

/**
 * Grafana security settings
 */
model Security {
  /**
   * Set to true to execute the CSRF check even if the login cookie is not in a request (default false).
   */
  csrfAlwaysCheck?: boolean;
}

/**
 * Plugin of Grafana
 */
model GrafanaPlugin {
  /**
   * Grafana plugin id
   */
  @visibility(Lifecycle.Read)
  pluginId?: string;
}

/**
 * Managed service identity (system assigned and/or user assigned identities)
 */
model ManagedServiceIdentity {
  /**
   * The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.
   */
  #suppress "@azure-tools/typespec-azure-core/no-format"
  @visibility(Lifecycle.Read)
  @format("uuid")
  principalId?: string;

  /**
   * The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.
   */
  #suppress "@azure-tools/typespec-azure-core/no-format"
  @visibility(Lifecycle.Read)
  @format("uuid")
  tenantId?: string;

  /**
   * Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).
   */
  type: ManagedServiceIdentityType;

  /**
   * The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.
   */
  #suppress "@azure-tools/typespec-azure-resource-manager/arm-no-record" "For backward compatibility"
  userAssignedIdentities?: Record<UserAssignedIdentity>;
}

/**
 * The parameters for a PATCH request to a grafana resource.
 */
model ManagedGrafanaUpdateParameters {
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  sku?: ResourceSku;

  /**
   * The managed identity of the grafana resource.
   */
  identity?: ManagedServiceIdentity;

  /**
   * The new tags of the grafana resource.
   */
  #suppress "@azure-tools/typespec-azure-resource-manager/arm-no-record" "For backward compatibility"
  tags?: Record<string>;

  /**
   * Properties specific to the managed grafana resource.
   */
  properties?: ManagedGrafanaPropertiesUpdateParameters;
}

/**
 * The properties parameters for a PATCH request to a grafana resource.
 */
model ManagedGrafanaPropertiesUpdateParameters {
  /**
   * The zone redundancy setting of the Grafana instance.
   */
  zoneRedundancy?: ZoneRedundancy = ZoneRedundancy.Disabled;

  /**
   * The api key setting of the Grafana instance.
   */
  apiKey?: ApiKey = ApiKey.Disabled;

  /**
   * Whether a Grafana instance uses deterministic outbound IPs.
   */
  deterministicOutboundIP?: DeterministicOutboundIP = DeterministicOutboundIP.Disabled;

  /**
   * Indicate the state for enable or disable traffic over the public interface.
   */
  publicNetworkAccess?: PublicNetworkAccess = PublicNetworkAccess.Enabled;

  /**
   * GrafanaIntegrations is a bundled observability experience (e.g. pre-configured data source, tailored Grafana dashboards, alerting defaults) for common monitoring scenarios.
   */
  grafanaIntegrations?: GrafanaIntegrations;

  /**
   * Enterprise settings of a Grafana instance
   */
  enterpriseConfigurations?: EnterpriseConfigurations;

  /**
   * Server configurations of a Grafana instance
   */
  grafanaConfigurations?: GrafanaConfigurations;

  /**
   * Update of Grafana plugin. Key is plugin id, value is plugin definition. If plugin definition is null, plugin with given plugin id will be removed. Otherwise, given plugin will be installed.
   */
  #suppress "@azure-tools/typespec-azure-resource-manager/arm-no-record" "For backward compatibility"
  grafanaPlugins?: Record<GrafanaPlugin>;

  /**
   * The major Grafana software version to target.
   */
  grafanaMajorVersion?: string;
}

/**
 * Properties of a private link resource.
 */
model PrivateLinkResourceProperties {
  /**
   * Provisioning state of the resource.
   */
  @visibility(Lifecycle.Read)
  provisioningState?: ProvisioningState;

  /**
   * The private link resource group id.
   */
  @visibility(Lifecycle.Read)
  groupId?: string;

  /**
   * The private link resource required member names.
   */
  @visibility(Lifecycle.Read)
  requiredMembers?: string[];

  /**
   * The private link resource Private link DNS zone name.
   */
  requiredZoneNames?: string[];
}

/**
 * Enterprise details of a Grafana instance
 */
model EnterpriseDetails {
  /**
   * SaaS subscription details of a Grafana instance
   */
  saasSubscriptionDetails?: SaasSubscriptionDetails;

  /**
   * The allocation details of the per subscription free trial slot of the subscription.
   */
  marketplaceTrialQuota?: MarketplaceTrialQuota;
}

/**
 * SaaS subscription details of a Grafana instance
 */
model SaasSubscriptionDetails {
  /**
   * The plan Id of the SaaS subscription.
   */
  planId?: string;

  /**
   * The offer Id of the SaaS subscription.
   */
  offerId?: string;

  /**
   * The publisher Id of the SaaS subscription.
   */
  publisherId?: string;

  /**
   * The billing term of the SaaS Subscription.
   */
  term?: SubscriptionTerm;
}

/**
 * The current billing term of the SaaS Subscription.
 */
model SubscriptionTerm {
  /**
   * The unit of the billing term.
   */
  termUnit?: string;

  /**
   * The date and time in UTC of when the billing term starts.
   */
  // FIXME: (utcDateTime) Please double check that this is the correct type for your scenario.
  startDate?: utcDateTime;

  /**
   * The date and time in UTC of when the billing term ends.
   */
  // FIXME: (utcDateTime) Please double check that this is the correct type for your scenario.
  endDate?: utcDateTime;
}

/**
 * The allocation details of the per subscription free trial slot of the subscription.
 */
model MarketplaceTrialQuota {
  /**
   * Available enterprise promotion for the subscription
   */
  availablePromotion?: AvailablePromotion = AvailablePromotion.None;

  /**
   * Resource Id of the Grafana resource which is doing the trial.
   */
  grafanaResourceId?: Azure.Core.armResourceIdentifier<[
    {
      type: "Microsoft.Dashboard/grafana";
    }
  ]>;

  /**
   * The date and time in UTC of when the trial starts.
   */
  // FIXME: (utcDateTime) Please double check that this is the correct type for your scenario.
  trialStartAt?: utcDateTime;

  /**
   * The date and time in UTC of when the trial ends.
   */
  // FIXME: (utcDateTime) Please double check that this is the correct type for your scenario.
  trialEndAt?: utcDateTime;
}

#suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
model GrafanaAvailablePluginListResponse {
  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  @OpenAPI.extension("x-ms-identifiers", #["pluginId"])
  value?: GrafanaAvailablePlugin[];

  #suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
  nextLink?: string;
}

/**
 * Available plugins of grafana
 */
model GrafanaAvailablePlugin {
  /**
   * Grafana plugin id
   */
  @visibility(Lifecycle.Read)
  pluginId?: string;

  /**
   * Grafana plugin display name
   */
  @visibility(Lifecycle.Read)
  name?: string;
}

/**
 * The list of managed private endpoints of a grafana resource
 */
model ManagedPrivateEndpointModelListResponse
  is Azure.Core.Page<ManagedPrivateEndpointModel>;

/**
 * Properties specific to the managed private endpoint.
 */
model ManagedPrivateEndpointModelProperties {
  /**
   * Provisioning state of the resource.
   */
  @visibility(Lifecycle.Read)
  provisioningState?: ProvisioningState;

  /**
   * The ARM resource ID of the resource for which the managed private endpoint is pointing to.
   */
  @visibility(Lifecycle.Read, Lifecycle.Create)
  privateLinkResourceId?: string;

  /**
   * The region of the resource to which the managed private endpoint is pointing to.
   */
  @visibility(Lifecycle.Read, Lifecycle.Create)
  privateLinkResourceRegion?: string;

  /**
   * The group Ids of the managed private endpoint.
   */
  @visibility(Lifecycle.Read, Lifecycle.Create)
  groupIds?: string[];

  /**
   * User input request message of the managed private endpoint.
   */
  @visibility(Lifecycle.Read, Lifecycle.Create)
  requestMessage?: string;

  /**
   * The state of managed private endpoint connection.
   */
  @visibility(Lifecycle.Read)
  connectionState?: ManagedPrivateEndpointConnectionState;

  /**
   * The URL of the data store behind the private link service. It would be the URL in the Grafana data source configuration page without the protocol and port.
   */
  @visibility(Lifecycle.Read, Lifecycle.Create)
  privateLinkServiceUrl?: string;

  /**
   * The private IP of private endpoint after approval. This property is empty before connection is approved.
   */
  @visibility(Lifecycle.Read)
  privateLinkServicePrivateIP?: string;
}

/**
 * The state of managed private endpoint connection.
 */
model ManagedPrivateEndpointConnectionState {
  /**
   * The approval/rejection status of managed private endpoint connection.
   */
  @visibility(Lifecycle.Read)
  status?: ManagedPrivateEndpointConnectionStatus;

  /**
   * Gets or sets the reason for approval/rejection of the connection.
   */
  @visibility(Lifecycle.Read)
  description?: string;
}

/**
 * The parameters for a PATCH request to a managed private endpoint.
 */
model ManagedPrivateEndpointUpdateParameters {
  /**
   * The new tags of the managed private endpoint.
   */
  #suppress "@azure-tools/typespec-azure-resource-manager/arm-no-record" "For backward compatibility"
  tags?: Record<string>;
}

#suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
model IntegrationFabricListResponse is Azure.Core.Page<IntegrationFabric>;

#suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
model IntegrationFabricProperties {
  /**
   * Provisioning state of the resource.
   */
  @visibility(Lifecycle.Read)
  provisioningState?: ProvisioningState;

  /**
   * The resource Id of the Azure resource being integrated with Azure Managed Grafana. E.g., an Azure Kubernetes Service cluster.
   */
  targetResourceId?: Azure.Core.armResourceIdentifier;

  /**
   * The resource Id of the Azure resource which is used to configure Grafana data source. E.g., an Azure Monitor Workspace, an Azure Data Explorer cluster, etc.
   */
  dataSourceResourceId?: Azure.Core.armResourceIdentifier;

  /**
   * A list of integration scenarios covered by this integration fabric
   */
  scenarios?: string[];
}

/**
 * The parameters for a PATCH request to a Integration Fabric resource.
 */
model IntegrationFabricUpdateParameters {
  /**
   * The new tags of the Integration Fabric resource.
   */
  #suppress "@azure-tools/typespec-azure-resource-manager/arm-no-record" "For backward compatibility"
  tags?: Record<string>;

  /**
   * The new properties of this Integration Fabric resource
   */
  properties?: IntegrationFabricPropertiesUpdateParameters;
}

#suppress "@azure-tools/typespec-azure-core/documentation-required" "For backward compatibility"
model IntegrationFabricPropertiesUpdateParameters {
  /**
   * The new integration scenarios covered by this integration fabric.
   */
  scenarios?: string[];
}
