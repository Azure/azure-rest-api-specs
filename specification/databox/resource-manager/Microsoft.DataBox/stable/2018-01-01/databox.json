{
  "swagger": "2.0",
  "info": {
    "version": "2018-01-01",
    "title": "DataBoxManagementClient"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/providers/Microsoft.DataBox/operations": {
      "get": {
        "tags": [
          "Operations"
        ],
        "description": "This method gets all the operations.",
        "operationId": "Operations_List",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The supported operations list.",
            "schema": {
              "$ref": "#/definitions/OperationList"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "OperationsGet": {
            "$ref": "./examples/OperationsGet.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.DataBox/jobs": {
      "get": {
        "tags": [
          "Jobs"
        ],
        "description": "Lists all the jobs available under the subscription.",
        "operationId": "Jobs_List",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "name": "$skipToken",
            "in": "query",
            "description": "$skipToken is supported on Get list of jobs, which provides the next page in the list of jobs.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of jobs available under the subscription.",
            "schema": {
              "$ref": "#/definitions/JobResourceList"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "JobsList": {
            "$ref": "./examples/JobsList.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.DataBox/locations/{location}/availableSkus": {
      "post": {
        "tags": [
          "Service"
        ],
        "description": "This method provides the list of available skus for the given subscription and location.",
        "operationId": "Service_ListAvailableSkus",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/locationParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "name": "availableSkuRequest",
            "in": "body",
            "description": "Filters for showing the available skus.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AvailableSkuRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The list of available skus.",
            "schema": {
              "$ref": "#/definitions/AvailableSkusResult"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "AvailableSkusPost": {
            "$ref": "./examples/AvailableSkusPost.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.DataBox/locations/{location}/validateAddress": {
      "post": {
        "tags": [
          "Service"
        ],
        "description": "This method validates the customer shipping address and provide alternate addresses if any.",
        "operationId": "Service_ValidateAddress",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/locationParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "name": "validateAddress",
            "in": "body",
            "description": "Shipping address of the customer.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ValidateAddress"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The valid and alternate addresses.",
            "schema": {
              "$ref": "#/definitions/AddressValidationOutput"
            }
          }
        },
        "x-ms-examples": {
          "ValidateAddressPost": {
            "$ref": "./examples/ValidateAddressPost.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBox/jobs": {
      "get": {
        "tags": [
          "Jobs"
        ],
        "description": "Lists all the jobs available under the given resource group.",
        "operationId": "Jobs_ListByResourceGroup",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "name": "$skipToken",
            "in": "query",
            "description": "$skipToken is supported on Get list of jobs, which provides the next page in the list of jobs.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of jobs by resource group.",
            "schema": {
              "$ref": "#/definitions/JobResourceList"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "JobsListByResourceGroup": {
            "$ref": "./examples/JobsListByResourceGroup.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBox/jobs/{jobName}": {
      "get": {
        "tags": [
          "Jobs"
        ],
        "description": "Gets information about the specified job.",
        "operationId": "Jobs_Get",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/jobNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "$expand is supported on details parameter for job, which provides details on the job stages.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Job object.",
            "schema": {
              "$ref": "#/definitions/JobResource"
            }
          }
        },
        "x-ms-examples": {
          "JobsGet": {
            "$ref": "./examples/JobsGet.json"
          },
          "JobsGet1": {
            "$ref": "./examples/JobsGet1.json"
          },
          "JobsGet2": {
            "$ref": "./examples/JobsGet2.json"
          },
          "JobsGet3": {
            "$ref": "./examples/JobsGet3.json"
          },
          "JobsGet4": {
            "$ref": "./examples/JobsGet4.json"
          },
          "JobsGet5": {
            "$ref": "./examples/JobsGet5.json"
          }
        }
      },
      "put": {
        "tags": [
          "Jobs"
        ],
        "description": "Creates a new job with the specified parameters. Existing job cannot be updated with this API and should instead be updated with the Update job API.",
        "operationId": "Jobs_Create",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/jobNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "name": "jobResource",
            "in": "body",
            "description": "Job details from request body.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/JobResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Job object.",
            "schema": {
              "$ref": "#/definitions/JobResource"
            }
          },
          "202": {
            "description": "Accepted request for create Job."
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "JobsCreate": {
            "$ref": "./examples/JobsCreate.json"
          }
        }
      },
      "delete": {
        "tags": [
          "Jobs"
        ],
        "description": "Deletes a job.",
        "operationId": "Jobs_Delete",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/jobNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted request for delete Job."
          },
          "204": {
            "description": "Job deleted."
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "JobsDelete": {
            "$ref": "./examples/JobsDelete.json"
          }
        }
      },
      "patch": {
        "tags": [
          "Jobs"
        ],
        "description": "Updates the properties of an existing job.",
        "operationId": "Jobs_Update",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/jobNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "Defines the If-Match condition. The patch will be performed only if the ETag of the job on the server matches this value.",
            "type": "string"
          },
          {
            "name": "jobResourceUpdateParameter",
            "in": "body",
            "description": "Job update parameters from request body.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/JobResourceUpdateParameter"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Job object.",
            "schema": {
              "$ref": "#/definitions/JobResource"
            }
          },
          "202": {
            "description": "Accepted request for job updated."
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "JobsPatch": {
            "$ref": "./examples/JobsPatch.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBox/jobs/{jobName}/bookShipmentPickUp": {
      "post": {
        "tags": [
          "Jobs"
        ],
        "description": "Book shipment pick up.",
        "operationId": "Jobs_BookShipmentPickUp",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/jobNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "name": "shipmentPickUpRequest",
            "in": "body",
            "description": "Details of shipment pick up request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ShipmentPickUpRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Booked shipment pick up successfully.",
            "schema": {
              "$ref": "#/definitions/ShipmentPickUpResponse"
            }
          }
        },
        "x-ms-examples": {
          "BookShipmentPickupPost": {
            "$ref": "./examples/BookShipmentPickupPost.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBox/jobs/{jobName}/cancel": {
      "post": {
        "tags": [
          "Jobs"
        ],
        "description": "CancelJob.",
        "operationId": "Jobs_Cancel",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/jobNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          },
          {
            "name": "cancellationReason",
            "in": "body",
            "description": "Reason for cancellation.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CancellationReason"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Job cancelled."
          }
        },
        "x-ms-examples": {
          "JobsCancelPost": {
            "$ref": "./examples/JobsCancelPost.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBox/jobs/{jobName}/listCredentials": {
      "post": {
        "tags": [
          "Jobs"
        ],
        "description": "This method gets the unencrypted secrets related to the job.",
        "operationId": "Jobs_ListCredentials",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/jobNameParameter"
          },
          {
            "$ref": "#/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "List of unencrypted credentials of the job.",
            "schema": {
              "$ref": "#/definitions/UnencryptedCredentialsList"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": null
        },
        "x-ms-examples": {
          "JobsListCredentials": {
            "$ref": "./examples/JobsListCredentials.json"
          }
        }
      }
    }
  },
  "definitions": {
    "AccountCredentialDetails": {
      "description": "Credential details of the account.",
      "type": "object",
      "properties": {
        "accountName": {
          "description": "Name of the account.",
          "type": "string",
          "readOnly": true
        },
        "accountConnectionString": {
          "description": "Connection string of the account endpoint to use the account as a storage endpoint on the device.",
          "type": "string",
          "readOnly": true
        },
        "shareCredentialDetails": {
          "description": "Per share level unencrypted access credentials.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ShareCredentialDetails"
          },
          "readOnly": true
        }
      }
    },
    "AddressValidationOutput": {
      "description": "Output of the address validation api.",
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/AddressValidationProperties",
          "description": "The address validation properties.",
          "readOnly": true,
          "x-ms-client-flatten": true
        }
      }
    },
    "AddressValidationProperties": {
      "description": "The address validation output.",
      "type": "object",
      "properties": {
        "validationStatus": {
          "description": "The address validation status.",
          "enum": [
            "Valid",
            "Invalid",
            "Ambiguous"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "AddressValidationStatus",
            "modelAsExtensible": true,
            "values": [
              {
                "value": "Valid",
                "description": "Address provided is valid."
              },
              {
                "value": "Invalid",
                "description": "Address provided is invalid or not supported."
              },
              {
                "value": "Ambiguous",
                "description": "Address provided is ambiguous, please choose one of the alternate addresses returned."
              }
            ]
          }
        },
        "alternateAddresses": {
          "description": "List of alternate addresses.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ShippingAddress"
          },
          "readOnly": true
        }
      }
    },
    "ApplianceNetworkConfiguration": {
      "description": "The Network Adapter configuration of a DataBox.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Name of the network.",
          "type": "string",
          "readOnly": true
        },
        "macAddress": {
          "description": "Mac Address.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "ArmBaseObject": {
      "description": "Base class for all objects under resource.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Name of the object.",
          "type": "string",
          "readOnly": true
        },
        "id": {
          "description": "Id of the object.",
          "type": "string",
          "readOnly": true
        },
        "type": {
          "description": "Type of the object.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "AvailableSkuRequest": {
      "description": "The filters for showing the available skus.",
      "required": [
        "transferType",
        "country",
        "location"
      ],
      "type": "object",
      "properties": {
        "transferType": {
          "description": "Type of the transfer.",
          "enum": [
            "ImportToAzure"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "TransferType",
            "modelAsExtensible": true,
            "values": [
              {
                "value": "ImportToAzure",
                "description": "Import data to azure."
              }
            ]
          }
        },
        "country": {
          "description": "ISO country code. Country for hardware shipment. For codes check: https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2#Officially_assigned_code_elements",
          "type": "string"
        },
        "location": {
          "description": "Location for data transfer. For locations check: https://management.azure.com/subscriptions/SUBSCRIPTIONID/locations?api-version=2018-01-01",
          "type": "string"
        },
        "skuNames": {
          "description": "Sku Names to filter for available skus",
          "type": "array",
          "items": {
            "enum": [
              "DataBox",
              "DataBoxDisk",
              "DataBoxHeavy"
            ],
            "type": "string",
            "x-ms-enum": {
              "name": "SkuName",
              "modelAsExtensible": true,
              "values": [
                {
                  "value": "DataBox",
                  "description": "DataBox."
                },
                {
                  "value": "DataBoxDisk",
                  "description": "DataBoxDisk."
                },
                {
                  "value": "DataBoxHeavy",
                  "description": "DataBoxHeavy."
                }
              ]
            }
          }
        }
      }
    },
    "AvailableSkusResult": {
      "description": "The available skus operation response.",
      "type": "object",
      "properties": {
        "value": {
          "description": "List of available skus.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SkuInformation"
          },
          "readOnly": true
        },
        "nextLink": {
          "description": "Link for the next set of skus.",
          "type": "string"
        }
      }
    },
    "CancellationReason": {
      "description": "Reason for cancellation.",
      "required": [
        "reason"
      ],
      "type": "object",
      "properties": {
        "reason": {
          "description": "Reason for cancellation.",
          "type": "string"
        }
      }
    },
    "ContactDetails": {
      "description": "Contact Details.",
      "required": [
        "contactName",
        "phone",
        "emailList"
      ],
      "type": "object",
      "properties": {
        "contactName": {
          "description": "Contact name of the person.",
          "type": "string"
        },
        "phone": {
          "description": "Phone number of the contact person.",
          "type": "string"
        },
        "phoneExtension": {
          "description": "Phone extension number of the contact person.",
          "type": "string"
        },
        "mobile": {
          "description": "Mobile number of the contact person.",
          "type": "string"
        },
        "emailList": {
          "description": "List of Email-ids to be notified about job progress.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "notificationPreference": {
          "description": "Notification preference for a job stage.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/NotificationPreference"
          }
        }
      }
    },
    "CopyLogDetails": {
      "description": "Details for log generated during copy.",
      "required": [
        "copyLogDetailsType"
      ],
      "type": "object",
      "properties": {
        "copyLogDetailsType": {
          "description": "Indicates the type of job details.",
          "enum": [
            "DataBox",
            "DataBoxDisk",
            "DataBoxHeavy"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "ClassDiscriminator",
            "modelAsExtensible": false,
            "values": [
              {
                "value": "DataBox",
                "description": "DataBox orders."
              },
              {
                "value": "DataBoxDisk",
                "description": "DataBoxDisk orders."
              },
              {
                "value": "DataBoxHeavy",
                "description": "DataBoxHeavy orders."
              }
            ]
          }
        }
      },
      "discriminator": "copyLogDetailsType"
    },
    "CopyProgress": {
      "description": "Copy progress.",
      "type": "object",
      "properties": {
        "storageAccountName": {
          "description": "Name of the storage account where the data needs to be uploaded.",
          "type": "string",
          "readOnly": true
        },
        "accountId": {
          "description": "Id of the account where the data needs to be uploaded.",
          "type": "string",
          "readOnly": true
        },
        "bytesSentToCloud": {
          "format": "int64",
          "description": "Amount of data uploaded by the job as of now.",
          "type": "integer",
          "readOnly": true
        },
        "totalBytesToProcess": {
          "format": "int64",
          "description": "Total amount of data to be processed by the job.",
          "type": "integer",
          "readOnly": true
        },
        "filesProcessed": {
          "format": "int64",
          "description": "Number of files processed by the job as of now.",
          "type": "integer",
          "readOnly": true
        },
        "totalFilesToProcess": {
          "format": "int64",
          "description": "Total number of files to be processed by the job.",
          "type": "integer",
          "readOnly": true
        }
      }
    },
    "DataBoxAccountCopyLogDetails": {
      "description": "Copy log details for a storage account of a DataBox job",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/CopyLogDetails"
        }
      ],
      "properties": {
        "accountName": {
          "description": "Destination account name.",
          "type": "string",
          "readOnly": true
        },
        "copyLogLink": {
          "description": "Link for copy logs.",
          "type": "string",
          "readOnly": true
        }
      },
      "x-ms-discriminator-value": "DataBox"
    },
    "DataBoxDiskCopyLogDetails": {
      "description": "Copy Log Details for a disk",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/CopyLogDetails"
        }
      ],
      "properties": {
        "diskSerialNumber": {
          "description": "Disk Serial Number.",
          "type": "string",
          "readOnly": true
        },
        "errorLogLink": {
          "description": "Link for copy error logs.",
          "type": "string",
          "readOnly": true
        },
        "verboseLogLink": {
          "description": "Link for copy verbose logs.",
          "type": "string",
          "readOnly": true
        }
      },
      "x-ms-discriminator-value": "DataBoxDisk"
    },
    "DataBoxDiskCopyProgress": {
      "description": "DataBox Disk Copy Progress",
      "type": "object",
      "properties": {
        "serialNumber": {
          "description": "The serial number of the disk",
          "type": "string",
          "readOnly": true
        },
        "bytesCopied": {
          "format": "int64",
          "description": "Bytes copied during the copy of disk.",
          "type": "integer",
          "readOnly": true
        },
        "percentComplete": {
          "format": "int32",
          "description": "Indicates the percentage completed for the copy of the disk.",
          "type": "integer",
          "readOnly": true
        },
        "status": {
          "description": "The Status of the copy",
          "enum": [
            "NotStarted",
            "InProgress",
            "Completed",
            "CompletedWithErrors",
            "Failed",
            "NotReturned"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "CopyStatus",
            "modelAsExtensible": true,
            "values": [
              {
                "value": "NotStarted",
                "description": "Data copy hasn't started yet."
              },
              {
                "value": "InProgress",
                "description": "Data copy is in progress."
              },
              {
                "value": "Completed",
                "description": "Data copy completed."
              },
              {
                "value": "CompletedWithErrors",
                "description": "Data copy completed with errors."
              },
              {
                "value": "Failed",
                "description": "Data copy failed. No data was copied."
              },
              {
                "value": "NotReturned",
                "description": "No copy triggered as device was not returned."
              }
            ]
          }
        }
      }
    },
    "DataBoxDiskJobDetails": {
      "description": "DataBox Disk Job Details.",
      "required": [
        "contactDetails",
        "shippingAddress",
        "destinationAccountDetails",
        "jobDetailsType"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/JobDetails"
        }
      ],
      "properties": {
        "preferredDisks": {
          "description": "User preference on what size disks are needed for the job. The map is from the disk size in TB to the count. Eg. {2,5} means 5 disks of 2 TB size. Key is string but will be checked against an int.",
          "type": "object",
          "additionalProperties": {
            "format": "int32",
            "type": "integer"
          }
        },
        "copyProgress": {
          "description": "Copy progress per disk.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DataBoxDiskCopyProgress"
          },
          "readOnly": true
        },
        "disksAndSizeDetails": {
          "description": "Contains the map of disk serial number to the disk size being used for the job. Is returned only after the disks are shipped to the customer.",
          "type": "object",
          "additionalProperties": {
            "format": "int32",
            "type": "integer"
          },
          "readOnly": true
        },
        "passkey": {
          "description": "User entered passkey for DataBox Disk job.",
          "type": "string"
        }
      },
      "x-ms-discriminator-value": "DataBoxDisk"
    },
    "DataBoxDiskJobSecrets": {
      "description": "The secrets related to disk job.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/JobSecrets"
        }
      ],
      "properties": {
        "diskSecrets": {
          "description": "Contains the list of secrets object for that device.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DiskSecret"
          },
          "readOnly": true
        },
        "passKey": {
          "description": "PassKey for the disk Job.",
          "type": "string",
          "readOnly": true
        },
        "isPasskeyUserDefined": {
          "description": "Whether passkey was provided by user.",
          "type": "boolean",
          "readOnly": true
        }
      },
      "x-ms-discriminator-value": "DataBoxDisk"
    },
    "DataBoxHeavyAccountCopyLogDetails": {
      "description": "Copy log details for a storage account for DataBoxHeavy",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/CopyLogDetails"
        }
      ],
      "properties": {
        "accountName": {
          "description": "Destination account name.",
          "type": "string",
          "readOnly": true
        },
        "copyLogLink": {
          "description": "Link for copy logs.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "readOnly": true
        }
      },
      "x-ms-discriminator-value": "DataBoxHeavy"
    },
    "DataBoxHeavyJobDetails": {
      "description": "DataBoxHeavy Device Job Details",
      "required": [
        "contactDetails",
        "shippingAddress",
        "destinationAccountDetails",
        "jobDetailsType"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/JobDetails"
        }
      ],
      "properties": {
        "copyProgress": {
          "description": "Copy progress per account.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CopyProgress"
          },
          "readOnly": true
        }
      },
      "x-ms-discriminator-value": "DataBoxHeavy"
    },
    "DataBoxHeavyJobSecrets": {
      "description": "The secrets related to a DataBoxHeavy job.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/JobSecrets"
        }
      ],
      "properties": {
        "cabinetPodSecrets": {
          "description": "Contains the list of secret objects for a DataBoxHeavy job.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DataBoxHeavySecret"
          },
          "readOnly": true
        }
      },
      "x-ms-discriminator-value": "DataBoxHeavy"
    },
    "DataBoxHeavySecret": {
      "description": "The secrets related to a DataBoxHeavy.",
      "type": "object",
      "properties": {
        "deviceSerialNumber": {
          "description": "Serial number of the assigned device.",
          "type": "string",
          "readOnly": true
        },
        "devicePassword": {
          "description": "Password for out of the box experience on device.",
          "type": "string",
          "readOnly": true
        },
        "networkConfigurations": {
          "description": "Network configuration of the appliance.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApplianceNetworkConfiguration"
          },
          "readOnly": true
        },
        "encodedValidationCertPubKey": {
          "description": "The base 64 encoded public key to authenticate with the device",
          "type": "string",
          "readOnly": true
        },
        "accountCredentialDetails": {
          "description": "Per account level access credentials.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AccountCredentialDetails"
          },
          "readOnly": true
        }
      }
    },
    "DataBoxJobDetails": {
      "description": "DataBox Job Details",
      "required": [
        "contactDetails",
        "shippingAddress",
        "destinationAccountDetails",
        "jobDetailsType"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/JobDetails"
        }
      ],
      "properties": {
        "copyProgress": {
          "description": "Copy progress per storage account.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CopyProgress"
          },
          "readOnly": true
        }
      },
      "x-ms-discriminator-value": "DataBox"
    },
    "DataboxJobSecrets": {
      "description": "The secrets related to a DataBox job.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/JobSecrets"
        }
      ],
      "properties": {
        "podSecrets": {
          "description": "Contains the list of secret objects for a job.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DataBoxSecret"
          }
        }
      },
      "x-ms-discriminator-value": "DataBox"
    },
    "DataBoxSecret": {
      "description": "The secrets related to a DataBox.",
      "type": "object",
      "properties": {
        "deviceSerialNumber": {
          "description": "Serial number of the assigned device.",
          "type": "string",
          "readOnly": true
        },
        "devicePassword": {
          "description": "Password for out of the box experience on device.",
          "type": "string",
          "readOnly": true
        },
        "networkConfigurations": {
          "description": "Network configuration of the appliance.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApplianceNetworkConfiguration"
          },
          "readOnly": true
        },
        "encodedValidationCertPubKey": {
          "description": "The base 64 encoded public key to authenticate with the device",
          "type": "string",
          "readOnly": true
        },
        "accountCredentialDetails": {
          "description": "Per account level access credentials.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AccountCredentialDetails"
          },
          "readOnly": true
        }
      }
    },
    "DestinationAccountDetails": {
      "description": "Details of the destination of the data",
      "required": [
        "dataDestinationType"
      ],
      "type": "object",
      "properties": {
        "dataDestinationType": {
          "description": "Data Destination Type.",
          "enum": [
            "UnknownType",
            "StorageAccount",
            "ManagedDisk"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "DataDestinationType",
            "modelAsExtensible": true,
            "values": [
              {
                "value": "UnknownType",
                "description": "Unknown type."
              },
              {
                "value": "StorageAccount",
                "description": "Storage Accounts ."
              },
              {
                "value": "ManagedDisk",
                "description": "Azure Managed disk storage."
              }
            ]
          }
        },
        "accountId": {
          "description": "Arm Id of the destination where the data has to be moved.",
          "type": "string"
        }
      },
      "discriminator": "dataDestinationType"
    },
    "DestinationManagedDiskDetails": {
      "description": "Details for the destination compute disks.",
      "required": [
        "resourceGroupId",
        "stagingStorageAccountId",
        "dataDestinationType"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DestinationAccountDetails"
        }
      ],
      "properties": {
        "resourceGroupId": {
          "description": "Destination Resource Group Id where the Compute disks should be created.",
          "type": "string"
        },
        "stagingStorageAccountId": {
          "description": "Arm Id of the storage account that can be used to copy the vhd for staging.",
          "type": "string"
        }
      },
      "x-ms-discriminator-value": "ManagedDisk"
    },
    "DestinationStorageAccountDetails": {
      "description": "Details for the destination storage account.",
      "required": [
        "storageAccountId",
        "dataDestinationType"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DestinationAccountDetails"
        }
      ],
      "properties": {
        "storageAccountId": {
          "description": "Destination Storage Account Arm Id.",
          "type": "string"
        }
      },
      "x-ms-discriminator-value": "StorageAccount"
    },
    "DestinationToServiceLocationMap": {
      "description": "Map of destination location to service location",
      "type": "object",
      "properties": {
        "destinationLocation": {
          "description": "Location of the destination.",
          "type": "string",
          "readOnly": true
        },
        "serviceLocation": {
          "description": "Location of the service.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "DiskSecret": {
      "description": "Contains all the secrets of a Disk.",
      "type": "object",
      "properties": {
        "diskSerialNumber": {
          "description": "Serial number of the assigned disk.",
          "type": "string",
          "readOnly": true
        },
        "bitLockerKey": {
          "description": "Bit Locker key of the disk which can be used to unlock the disk to copy data.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "Error": {
      "description": "Top level error for the job.",
      "type": "object",
      "properties": {
        "code": {
          "description": "Error code that can be used to programmatically identify the error.",
          "type": "string",
          "readOnly": true
        },
        "message": {
          "description": "Describes the error in detail and provides debugging information.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "JobDetails": {
      "description": "Job details.",
      "required": [
        "contactDetails",
        "shippingAddress",
        "destinationAccountDetails",
        "jobDetailsType"
      ],
      "type": "object",
      "properties": {
        "expectedDataSizeInTeraBytes": {
          "format": "int32",
          "description": "The expected size of the data, which needs to be transferred in this job, in terabytes.",
          "type": "integer"
        },
        "jobStages": {
          "description": "List of stages that run in the job.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/JobStages"
          },
          "readOnly": true
        },
        "contactDetails": {
          "$ref": "#/definitions/ContactDetails",
          "description": "Contact details for notification and shipping."
        },
        "shippingAddress": {
          "$ref": "#/definitions/ShippingAddress",
          "description": "Shipping address of the customer."
        },
        "deliveryPackage": {
          "$ref": "#/definitions/PackageShippingDetails",
          "description": "Delivery package shipping details.",
          "readOnly": true
        },
        "returnPackage": {
          "$ref": "#/definitions/PackageShippingDetails",
          "description": "Return package shipping details.",
          "readOnly": true
        },
        "destinationAccountDetails": {
          "description": "Destination account details.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DestinationAccountDetails"
          }
        },
        "errorDetails": {
          "description": "Error details for failure. This is optional.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/JobErrorDetails"
          },
          "readOnly": true
        },
        "jobDetailsType": {
          "description": "Indicates the type of job details.",
          "enum": [
            "DataBox",
            "DataBoxDisk",
            "DataBoxHeavy"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "ClassDiscriminator",
            "modelAsExtensible": false,
            "values": [
              {
                "value": "DataBox",
                "description": "DataBox orders."
              },
              {
                "value": "DataBoxDisk",
                "description": "DataBoxDisk orders."
              },
              {
                "value": "DataBoxHeavy",
                "description": "DataBoxHeavy orders."
              }
            ]
          }
        },
        "preferences": {
          "$ref": "#/definitions/Preferences",
          "description": "Preferences for the order."
        },
        "copyLogDetails": {
          "description": "List of copy log details.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CopyLogDetails"
          },
          "readOnly": true
        },
        "reverseShipmentLabelSasKey": {
          "description": "Shared access key to download the return shipment label",
          "type": "string",
          "readOnly": true
        },
        "chainOfCustodySasKey": {
          "description": "Shared access key to download the chain of custody logs",
          "type": "string",
          "readOnly": true
        }
      },
      "discriminator": "jobDetailsType"
    },
    "JobErrorDetails": {
      "description": "Job Error Details for providing the information and recommended action.",
      "type": "object",
      "properties": {
        "errorMessage": {
          "description": "Message for the error.",
          "type": "string",
          "readOnly": true
        },
        "errorCode": {
          "format": "int32",
          "description": "Code for the error.",
          "type": "integer",
          "readOnly": true
        },
        "recommendedAction": {
          "description": "Recommended action for the error.",
          "type": "string",
          "readOnly": true
        },
        "exceptionMessage": {
          "description": "Contains the non localized exception message",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "JobProperties": {
      "description": "Job Properties",
      "type": "object",
      "properties": {
        "isCancellable": {
          "description": "Describes whether the job is cancellable or not.",
          "type": "boolean",
          "readOnly": true
        },
        "isDeletable": {
          "description": "Describes whether the job is deletable or not.",
          "type": "boolean",
          "readOnly": true
        },
        "isShippingAddressEditable": {
          "description": "Describes whether the shipping address is editable or not.",
          "type": "boolean",
          "readOnly": true
        },
        "status": {
          "description": "Name of the stage which is in progress.",
          "enum": [
            "DeviceOrdered",
            "DevicePrepared",
            "Dispatched",
            "Delivered",
            "PickedUp",
            "AtAzureDC",
            "DataCopy",
            "Completed",
            "CompletedWithErrors",
            "Cancelled",
            "Failed_IssueReportedAtCustomer",
            "Failed_IssueDetectedAtAzureDC",
            "Aborted"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "StageName",
            "modelAsExtensible": true,
            "values": [
              {
                "value": "DeviceOrdered",
                "description": "An order has been created."
              },
              {
                "value": "DevicePrepared",
                "description": "A device has been prepared for the order."
              },
              {
                "value": "Dispatched",
                "description": "Device has been dispatched to the user of the order."
              },
              {
                "value": "Delivered",
                "description": "Device has been delivered to the user of the order."
              },
              {
                "value": "PickedUp",
                "description": "Device has been picked up from user and in transit to azure datacenter."
              },
              {
                "value": "AtAzureDC",
                "description": "Device has been received at azure datacenter from the user."
              },
              {
                "value": "DataCopy",
                "description": "Data copy from the device at azure datacenter."
              },
              {
                "value": "Completed",
                "description": "Order has completed."
              },
              {
                "value": "CompletedWithErrors",
                "description": "Order has completed with errors."
              },
              {
                "value": "Cancelled",
                "description": "Order has been cancelled."
              },
              {
                "value": "Failed_IssueReportedAtCustomer",
                "description": "Order has failed due to issue reported by user."
              },
              {
                "value": "Failed_IssueDetectedAtAzureDC",
                "description": "Order has failed due to issue detected at azure datacenter."
              },
              {
                "value": "Aborted",
                "description": "Order has been aborted."
              }
            ]
          }
        },
        "startTime": {
          "format": "date-time",
          "description": "Time at which the job was started in UTC ISO 8601 format.",
          "type": "string",
          "readOnly": true
        },
        "error": {
          "$ref": "#/definitions/Error",
          "description": "Top level error for the job.",
          "readOnly": true
        },
        "details": {
          "$ref": "#/definitions/JobDetails",
          "description": "Details of a job run. This field will only be sent for expand details filter."
        },
        "cancellationReason": {
          "description": "Reason for cancellation.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "JobResource": {
      "description": "Job Resource.",
      "required": [
        "properties"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/JobProperties",
          "description": "Properties of a job.",
          "x-ms-client-flatten": true
        },
        "name": {
          "description": "Name of the object.",
          "type": "string",
          "readOnly": true
        },
        "id": {
          "description": "Id of the object.",
          "type": "string",
          "readOnly": true
        },
        "type": {
          "description": "Type of the object.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "JobResourceList": {
      "description": "Job Resource Collection",
      "type": "object",
      "properties": {
        "value": {
          "description": "List of job resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/JobResource"
          }
        },
        "nextLink": {
          "description": "Link for the next set of job resources.",
          "type": "string"
        }
      }
    },
    "JobResourceUpdateParameter": {
      "description": "The JobResourceUpdateParameter.",
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/UpdateJobProperties",
          "description": "Properties of a job to be updated.",
          "x-ms-client-flatten": true
        },
        "tags": {
          "description": "The list of key value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups).",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "JobSecrets": {
      "description": "The base class for the secrets",
      "required": [
        "jobSecretsType"
      ],
      "type": "object",
      "properties": {
        "jobSecretsType": {
          "description": "Used to indicate what type of job secrets object.",
          "enum": [
            "DataBox",
            "DataBoxDisk",
            "DataBoxHeavy"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "ClassDiscriminator",
            "modelAsExtensible": false,
            "values": [
              {
                "value": "DataBox",
                "description": "DataBox orders."
              },
              {
                "value": "DataBoxDisk",
                "description": "DataBoxDisk orders."
              },
              {
                "value": "DataBoxHeavy",
                "description": "DataBoxHeavy orders."
              }
            ]
          }
        }
      },
      "discriminator": "jobSecretsType"
    },
    "JobStages": {
      "description": "Job stages.",
      "type": "object",
      "properties": {
        "stageName": {
          "description": "Name of the job stage.",
          "enum": [
            "DeviceOrdered",
            "DevicePrepared",
            "Dispatched",
            "Delivered",
            "PickedUp",
            "AtAzureDC",
            "DataCopy",
            "Completed",
            "CompletedWithErrors",
            "Cancelled",
            "Failed_IssueReportedAtCustomer",
            "Failed_IssueDetectedAtAzureDC",
            "Aborted"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "StageName",
            "modelAsExtensible": true,
            "values": [
              {
                "value": "DeviceOrdered",
                "description": "An order has been created."
              },
              {
                "value": "DevicePrepared",
                "description": "A device has been prepared for the order."
              },
              {
                "value": "Dispatched",
                "description": "Device has been dispatched to the user of the order."
              },
              {
                "value": "Delivered",
                "description": "Device has been delivered to the user of the order."
              },
              {
                "value": "PickedUp",
                "description": "Device has been picked up from user and in transit to azure datacenter."
              },
              {
                "value": "AtAzureDC",
                "description": "Device has been received at azure datacenter from the user."
              },
              {
                "value": "DataCopy",
                "description": "Data copy from the device at azure datacenter."
              },
              {
                "value": "Completed",
                "description": "Order has completed."
              },
              {
                "value": "CompletedWithErrors",
                "description": "Order has completed with errors."
              },
              {
                "value": "Cancelled",
                "description": "Order has been cancelled."
              },
              {
                "value": "Failed_IssueReportedAtCustomer",
                "description": "Order has failed due to issue reported by user."
              },
              {
                "value": "Failed_IssueDetectedAtAzureDC",
                "description": "Order has failed due to issue detected at azure datacenter."
              },
              {
                "value": "Aborted",
                "description": "Order has been aborted."
              }
            ]
          }
        },
        "displayName": {
          "description": "Display name of the job stage.",
          "type": "string",
          "readOnly": true
        },
        "stageStatus": {
          "description": "Status of the job stage.",
          "enum": [
            "None",
            "InProgress",
            "Succeeded",
            "Failed",
            "Cancelled",
            "Cancelling",
            "SucceededWithErrors"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "StageStatus",
            "modelAsExtensible": true,
            "values": [
              {
                "value": "None",
                "description": "No status available yet."
              },
              {
                "value": "InProgress",
                "description": "Stage is in progress."
              },
              {
                "value": "Succeeded",
                "description": "Stage has succeeded."
              },
              {
                "value": "Failed",
                "description": "Stage has failed."
              },
              {
                "value": "Cancelled",
                "description": "Stage has been cancelled."
              },
              {
                "value": "Cancelling",
                "description": "Stage is cancelling."
              },
              {
                "value": "SucceededWithErrors",
                "description": "Stage has succeeded with errors."
              }
            ]
          }
        },
        "stageTime": {
          "format": "date-time",
          "description": "Time for the job stage in UTC ISO 8601 format.",
          "type": "string",
          "readOnly": true
        },
        "jobStageDetails": {
          "description": "Job Stage Details",
          "type": "object",
          "readOnly": true
        },
        "errorDetails": {
          "description": "Error details for the stage.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/JobErrorDetails"
          },
          "readOnly": true
        }
      }
    },
    "NotificationPreference": {
      "description": "Notification preference for a job stage.",
      "required": [
        "stageName",
        "sendNotification"
      ],
      "type": "object",
      "properties": {
        "stageName": {
          "description": "Name of the stage.",
          "enum": [
            "DevicePrepared",
            "Dispatched",
            "Delivered",
            "PickedUp",
            "AtAzureDC",
            "DataCopy"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "NotificationStageName",
            "modelAsExtensible": true,
            "values": [
              {
                "value": "DevicePrepared",
                "description": "Notification at device prepared stage."
              },
              {
                "value": "Dispatched",
                "description": "Notification at device dispatched stage."
              },
              {
                "value": "Delivered",
                "description": "Notification at device delivered stage."
              },
              {
                "value": "PickedUp",
                "description": "Notification at device picked up from user stage."
              },
              {
                "value": "AtAzureDC",
                "description": "Notification at device received at azure datacenter stage."
              },
              {
                "value": "DataCopy",
                "description": "Notification at data copy started stage."
              }
            ]
          }
        },
        "sendNotification": {
          "description": "Notification is required or not.",
          "type": "boolean",
          "default": true
        }
      }
    },
    "Operation": {
      "description": "Operation entity.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Name of the operation. Format: {resourceProviderNamespace}/{resourceType}/{read|write|delete|action}",
          "type": "string",
          "readOnly": true
        },
        "display": {
          "$ref": "#/definitions/OperationDisplay",
          "description": "Operation display values.",
          "readOnly": true
        },
        "properties": {
          "$ref": "#/definitions/OperationProperties",
          "description": "Operation properties.",
          "readOnly": true,
          "x-ms-client-flatten": true
        },
        "origin": {
          "description": "Origin of the operation. Can be : user|system|user,system",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "OperationDisplay": {
      "description": "Operation display",
      "type": "object",
      "properties": {
        "provider": {
          "description": "Provider name.",
          "type": "string"
        },
        "resource": {
          "description": "Resource name.",
          "type": "string"
        },
        "operation": {
          "description": "Localized name of the operation for display purpose.",
          "type": "string"
        },
        "description": {
          "description": "Localized description of the operation for display purpose.",
          "type": "string"
        }
      }
    },
    "OperationList": {
      "description": "Operation Collection.",
      "type": "object",
      "properties": {
        "value": {
          "description": "List of operations.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Operation"
          },
          "readOnly": true
        },
        "nextLink": {
          "description": "Link for the next set of operations.",
          "type": "string"
        }
      }
    },
    "OperationProperties": {
      "description": "Operation properties.",
      "type": "object",
      "properties": {}
    },
    "PackageShippingDetails": {
      "description": "Shipping details.",
      "type": "object",
      "properties": {
        "carrierName": {
          "description": "Name of the carrier.",
          "type": "string",
          "readOnly": true
        },
        "trackingId": {
          "description": "Tracking Id of shipment.",
          "type": "string",
          "readOnly": true
        },
        "trackingUrl": {
          "description": "Url where shipment can be tracked.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "Preferences": {
      "description": "Preferences related to the order",
      "type": "object",
      "properties": {
        "preferredDataCenterRegion": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "Resource": {
      "description": "Model of the Resource.",
      "required": [
        "location",
        "sku"
      ],
      "type": "object",
      "properties": {
        "location": {
          "description": "The location of the resource. This will be one of the supported and registered Azure Regions (e.g. West US, East US, Southeast Asia, etc.). The region of a resource cannot be changed once it is created, but if an identical region is specified on update the request will succeed.",
          "type": "string",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "tags": {
          "description": "The list of key value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups).",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "sku": {
          "$ref": "#/definitions/Sku",
          "description": "The sku type."
        }
      },
      "x-ms-azure-resource": true
    },
    "ShareCredentialDetails": {
      "description": "Credential details of the shares in account.",
      "type": "object",
      "properties": {
        "shareName": {
          "description": "Name of the share.",
          "type": "string",
          "readOnly": true
        },
        "shareType": {
          "description": "Type of the share.",
          "enum": [
            "UnknownType",
            "HCS",
            "BlockBlob",
            "PageBlob",
            "AzureFile",
            "ManagedDisk"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "ShareDestinationFormatType",
            "modelAsExtensible": true,
            "values": [
              {
                "value": "UnknownType",
                "description": "Unknown format."
              },
              {
                "value": "HCS",
                "description": "StorSimple data format."
              },
              {
                "value": "BlockBlob",
                "description": "Azure storage block blob format."
              },
              {
                "value": "PageBlob",
                "description": "Azure storage page blob format."
              },
              {
                "value": "AzureFile",
                "description": "Azure storage file format."
              },
              {
                "value": "ManagedDisk",
                "description": "Azure Compute Disk."
              }
            ]
          }
        },
        "userName": {
          "description": "User name for the share.",
          "type": "string",
          "readOnly": true
        },
        "password": {
          "description": "Password for the share.",
          "type": "string",
          "readOnly": true
        },
        "supportedAccessProtocols": {
          "description": "Access protocols supported on the device.",
          "type": "array",
          "items": {
            "enum": [
              "SMB",
              "NFS"
            ],
            "type": "string",
            "x-ms-enum": {
              "name": "AccessProtocol",
              "modelAsExtensible": true,
              "values": [
                {
                  "value": "SMB",
                  "description": "Server Message Block protocol(SMB)."
                },
                {
                  "value": "NFS",
                  "description": "Network File System protocol(NFS)."
                }
              ]
            }
          },
          "readOnly": true
        }
      }
    },
    "ShipmentPickUpRequest": {
      "description": "Shipment pick up request details.",
      "required": [
        "startTime",
        "endTime",
        "shipmentLocation"
      ],
      "type": "object",
      "properties": {
        "startTime": {
          "format": "date-time",
          "description": "Minimum date after which the pick up should commence, this must be in local time of pick up area.",
          "type": "string"
        },
        "endTime": {
          "format": "date-time",
          "description": "Maximum date before which the pick up should commence, this must be in local time of pick up area.",
          "type": "string"
        },
        "shipmentLocation": {
          "description": "Shipment Location in the pickup place. Eg.front desk",
          "type": "string"
        }
      }
    },
    "ShipmentPickUpResponse": {
      "description": "Shipment pick up response.",
      "type": "object",
      "properties": {
        "confirmationNumber": {
          "description": "Confirmation number for the pick up request.",
          "type": "string",
          "readOnly": true
        },
        "readyByTime": {
          "format": "date-time",
          "description": "Time by which shipment should be ready for pick up, this is in local time of pick up area.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "ShippingAddress": {
      "description": "Shipping address where customer wishes to receive the device.",
      "required": [
        "streetAddress1",
        "country",
        "postalCode"
      ],
      "type": "object",
      "properties": {
        "streetAddress1": {
          "description": "Street Address line 1.",
          "type": "string"
        },
        "streetAddress2": {
          "description": "Street Address line 2.",
          "type": "string"
        },
        "streetAddress3": {
          "description": "Street Address line 3.",
          "type": "string"
        },
        "city": {
          "description": "Name of the City.",
          "type": "string"
        },
        "stateOrProvince": {
          "description": "Name of the State or Province.",
          "type": "string"
        },
        "country": {
          "description": "Name of the Country.",
          "type": "string"
        },
        "postalCode": {
          "description": "Postal code.",
          "type": "string"
        },
        "zipExtendedCode": {
          "description": "Extended Zip Code.",
          "type": "string"
        },
        "companyName": {
          "description": "Name of the company.",
          "type": "string"
        },
        "addressType": {
          "description": "Type of address.",
          "enum": [
            "None",
            "Residential",
            "Commercial"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "AddressType",
            "modelAsExtensible": true,
            "values": [
              {
                "value": "None",
                "description": "Address type not known."
              },
              {
                "value": "Residential",
                "description": "Residential Address."
              },
              {
                "value": "Commercial",
                "description": "Commercial Address."
              }
            ]
          },
          "default": "None"
        }
      }
    },
    "Sku": {
      "description": "The Sku.",
      "required": [
        "name"
      ],
      "type": "object",
      "properties": {
        "name": {
          "description": "The sku name.",
          "enum": [
            "DataBox",
            "DataBoxDisk",
            "DataBoxHeavy"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "SkuName",
            "modelAsExtensible": true,
            "values": [
              {
                "value": "DataBox",
                "description": "DataBox."
              },
              {
                "value": "DataBoxDisk",
                "description": "DataBoxDisk."
              },
              {
                "value": "DataBoxHeavy",
                "description": "DataBoxHeavy."
              }
            ]
          }
        },
        "displayName": {
          "description": "The display name of the sku.",
          "type": "string"
        },
        "family": {
          "description": "The sku family.",
          "type": "string"
        }
      }
    },
    "SkuCapacity": {
      "description": "Capacity of the sku.",
      "type": "object",
      "properties": {
        "usable": {
          "description": "Usable capacity in TB.",
          "type": "string",
          "readOnly": true
        },
        "maximum": {
          "description": "Maximum capacity in TB.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "SkuCost": {
      "description": "Describes metadata for retrieving price info.",
      "type": "object",
      "properties": {
        "meterId": {
          "description": "Meter id of the Sku.",
          "type": "string",
          "readOnly": true
        },
        "meterType": {
          "description": "The type of the meter.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "SkuInformation": {
      "description": "Information of the sku.",
      "type": "object",
      "properties": {
        "sku": {
          "$ref": "#/definitions/Sku",
          "description": "The Sku.",
          "readOnly": true
        },
        "enabled": {
          "description": "The sku is enabled or not.",
          "type": "boolean",
          "readOnly": true
        },
        "properties": {
          "$ref": "#/definitions/SkuProperties",
          "description": "Properties of the sku.",
          "readOnly": true,
          "x-ms-client-flatten": true
        }
      }
    },
    "SkuProperties": {
      "description": "Properties of the sku.",
      "type": "object",
      "properties": {
        "destinationToServiceLocationMap": {
          "description": "The map of destination location to service location.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DestinationToServiceLocationMap"
          },
          "readOnly": true
        },
        "capacity": {
          "$ref": "#/definitions/SkuCapacity",
          "description": "Capacity of the Sku.",
          "readOnly": true
        },
        "costs": {
          "description": "Cost of the Sku.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SkuCost"
          },
          "readOnly": true
        },
        "apiVersions": {
          "description": "Api versions that support this Sku.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "disabledReason": {
          "description": "Reason why the Sku is disabled.",
          "enum": [
            "None",
            "Country",
            "Region",
            "Feature",
            "OfferType",
            "NoSubscriptionInfo"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "SkuDisabledReason",
            "modelAsExtensible": true,
            "values": [
              {
                "value": "None",
                "description": "SKU is not disabled."
              },
              {
                "value": "Country",
                "description": "SKU is not available in the requested country."
              },
              {
                "value": "Region",
                "description": "SKU is not available to push data to the requested Azure region."
              },
              {
                "value": "Feature",
                "description": "Required features are not enabled for the SKU."
              },
              {
                "value": "OfferType",
                "description": "Subscription does not have required offer types for the SKU."
              },
              {
                "value": "NoSubscriptionInfo",
                "description": "Subscription has not registered to Microsoft.DataBox and Service does not have the subscription notification."
              }
            ]
          }
        },
        "disabledReasonMessage": {
          "description": "Message for why the Sku is disabled.",
          "type": "string",
          "readOnly": true
        },
        "requiredFeature": {
          "description": "Required feature to access the sku.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "UnencryptedCredentials": {
      "description": "Unencrypted credentials for accessing device.",
      "type": "object",
      "properties": {
        "jobName": {
          "description": "Name of the job.",
          "type": "string",
          "readOnly": true
        },
        "jobSecrets": {
          "$ref": "#/definitions/JobSecrets",
          "description": "Secrets related to this job.",
          "readOnly": true
        }
      }
    },
    "UnencryptedCredentialsList": {
      "description": "List of unencrypted credentials for accessing device.",
      "type": "object",
      "properties": {
        "value": {
          "description": "List of unencrypted credentials.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/UnencryptedCredentials"
          }
        },
        "nextLink": {
          "description": "Link for the next set of unencrypted credentials.",
          "type": "string"
        }
      }
    },
    "UpdateJobDetails": {
      "description": "Job details for update.",
      "type": "object",
      "properties": {
        "contactDetails": {
          "$ref": "#/definitions/ContactDetails",
          "description": "Contact details for notification and shipping."
        },
        "shippingAddress": {
          "$ref": "#/definitions/ShippingAddress",
          "description": "Shipping address of the customer."
        }
      }
    },
    "UpdateJobProperties": {
      "description": "Job Properties for update",
      "type": "object",
      "properties": {
        "details": {
          "$ref": "#/definitions/UpdateJobDetails",
          "description": "Details of a job to be updated."
        },
        "destinationAccountDetails": {
          "description": "Destination account details.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DestinationAccountDetails"
          }
        }
      }
    },
    "ValidateAddress": {
      "description": "The requirements to validate customer address where the device needs to be shipped.",
      "required": [
        "shippingAddress",
        "deviceType"
      ],
      "type": "object",
      "properties": {
        "shippingAddress": {
          "$ref": "#/definitions/ShippingAddress",
          "description": "Shipping address of the customer."
        },
        "deviceType": {
          "description": "Device type to be used for the job.",
          "enum": [
            "DataBox",
            "DataBoxDisk",
            "DataBoxHeavy"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "SkuName",
            "modelAsExtensible": true,
            "values": [
              {
                "value": "DataBox",
                "description": "DataBox."
              },
              {
                "value": "DataBoxDisk",
                "description": "DataBoxDisk."
              },
              {
                "value": "DataBoxHeavy",
                "description": "DataBoxHeavy."
              }
            ]
          }
        }
      }
    }
  },
  "parameters": {
    "apiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "description": "The API Version",
      "required": true,
      "type": "string"
    },
    "jobNameParameter": {
      "name": "jobName",
      "in": "path",
      "description": "The name of the job Resource within the specified resource group. job names must be between 3 and 24 characters in length and use any alphanumeric and underscore only",
      "required": true,
      "type": "string",
      "maxLength": 24,
      "minLength": 3,
      "pattern": "^[-\\w\\.]+$",
      "x-ms-parameter-location": "method"
    },
    "locationParameter": {
      "name": "location",
      "in": "path",
      "description": "The location of the resource",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "resourceGroupNameParameter": {
      "name": "resourceGroupName",
      "in": "path",
      "description": "The Resource Group Name",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "subscriptionIdParameter": {
      "name": "subscriptionId",
      "in": "path",
      "description": "The Subscription Id",
      "required": true,
      "type": "string"
    }
  },
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "description": "Azure Active Directory OAuth2 Flow",
      "flow": "implicit",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ]
}
