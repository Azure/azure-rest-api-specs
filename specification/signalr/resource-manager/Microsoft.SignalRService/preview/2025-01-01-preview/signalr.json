{
  "swagger": "2.0",
  "info": {
    "title": "SignalRManagementClient",
    "version": "2025-01-01-preview",
    "description": "REST API for Azure SignalR Service",
    "x-typespec-generated": [
      {
        "emitter": "@azure-tools/typespec-autorest"
      }
    ]
  },
  "schemes": [
    "https"
  ],
  "host": "management.azure.com",
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "description": "Azure Active Directory OAuth2 Flow.",
      "flow": "implicit",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "tags": [
    {
      "name": "Operations"
    },
    {
      "name": "SignalRResources"
    },
    {
      "name": "CustomCertificates"
    },
    {
      "name": "CustomDomains"
    },
    {
      "name": "PrivateEndpointConnections"
    },
    {
      "name": "Replicas"
    },
    {
      "name": "SharedPrivateLinkResources"
    },
    {
      "name": "SignalRSharedPrivateLinkResources"
    }
  ],
  "paths": {
    "/providers/Microsoft.SignalRService/operations": {
      "get": {
        "operationId": "Operations_List",
        "tags": [
          "Operations"
        ],
        "description": "List the operations for the provider",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/OperationList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Operations_List": {
            "$ref": "./examples/Operations_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.SignalRService/locations/{location}/checkNameAvailability": {
      "post": {
        "operationId": "SignalR_CheckNameAvailability",
        "description": "Checks that the resource name is valid and is not already in use.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/LocationParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "The request body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NameAvailabilityParameters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/NameAvailability"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "SignalR_CheckNameAvailability": {
            "$ref": "./examples/SignalR_CheckNameAvailability.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.SignalRService/locations/{location}/usages": {
      "get": {
        "operationId": "Usages_List",
        "description": "List resource usage quotas by location.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/LocationParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/SignalRUsageList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Usages_List": {
            "$ref": "./examples/Usages_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.SignalRService/signalR": {
      "get": {
        "operationId": "SignalR_ListBySubscription",
        "tags": [
          "SignalRResources"
        ],
        "description": "Handles requests to list all resources in a subscription.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/SignalRResourceList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "SignalR_ListBySubscription": {
            "$ref": "./examples/SignalR_ListBySubscription.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.SignalRService/signalR": {
      "get": {
        "operationId": "SignalR_ListByResourceGroup",
        "tags": [
          "SignalRResources"
        ],
        "description": "Handles requests to list all resources in a resource group.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/SignalRResourceList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "SignalR_ListByResourceGroup": {
            "$ref": "./examples/SignalR_ListByResourceGroup.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.SignalRService/signalR/{resourceName}": {
      "get": {
        "operationId": "SignalR_Get",
        "tags": [
          "SignalRResources"
        ],
        "description": "Get the resource and its properties.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "The name of the resource.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]{1,61}[a-zA-Z0-9]$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/SignalRResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "SignalR_Get": {
            "$ref": "./examples/SignalR_Get.json"
          }
        }
      },
      "put": {
        "operationId": "SignalR_CreateOrUpdate",
        "tags": [
          "SignalRResources"
        ],
        "description": "Create or update a resource.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "The name of the resource.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]{1,61}[a-zA-Z0-9]$"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Parameters for the create or update operation",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SignalRResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'SignalRResource' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/SignalRResource"
            }
          },
          "201": {
            "description": "Resource 'SignalRResource' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/SignalRResource"
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "SignalR_CreateOrUpdate": {
            "$ref": "./examples/SignalR_CreateOrUpdate.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation",
          "final-state-schema": "#/definitions/SignalRResource"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "SignalR_Update",
        "tags": [
          "SignalRResources"
        ],
        "description": "Operation to update an exiting resource.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "The name of the resource.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]{1,61}[a-zA-Z0-9]$"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Parameters for the update operation",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SignalRResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/SignalRResource"
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "SignalR_Update": {
            "$ref": "./examples/SignalR_Update.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location",
          "final-state-schema": "#/definitions/SignalRResource"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "SignalR_Delete",
        "tags": [
          "SignalRResources"
        ],
        "description": "Operation to delete a resource.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "The name of the resource.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]{1,61}[a-zA-Z0-9]$"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "SignalR_Delete": {
            "$ref": "./examples/SignalR_Delete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.SignalRService/signalR/{resourceName}/customCertificates": {
      "get": {
        "operationId": "SignalRCustomCertificates_List",
        "tags": [
          "CustomCertificates"
        ],
        "description": "List all custom certificates.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "The name of the resource.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]{1,61}[a-zA-Z0-9]$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/CustomCertificateList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "SignalRCustomCertificates_List": {
            "$ref": "./examples/SignalRCustomCertificates_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.SignalRService/signalR/{resourceName}/customCertificates/{certificateName}": {
      "get": {
        "operationId": "SignalRCustomCertificates_Get",
        "tags": [
          "CustomCertificates"
        ],
        "description": "Get a custom certificate.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "The name of the resource.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]{1,61}[a-zA-Z0-9]$"
          },
          {
            "name": "certificateName",
            "in": "path",
            "description": "Custom certificate name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/CustomCertificate"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "SignalRCustomCertificates_Get": {
            "$ref": "./examples/SignalRCustomCertificates_Get.json"
          }
        }
      },
      "put": {
        "operationId": "SignalRCustomCertificates_CreateOrUpdate",
        "tags": [
          "CustomCertificates"
        ],
        "description": "Create or update a custom certificate.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "The name of the resource.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]{1,61}[a-zA-Z0-9]$"
          },
          {
            "name": "certificateName",
            "in": "path",
            "description": "Custom certificate name",
            "required": true,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CustomCertificate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'CustomCertificate' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/CustomCertificate"
            }
          },
          "201": {
            "description": "Resource 'CustomCertificate' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/CustomCertificate"
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "SignalRCustomCertificates_CreateOrUpdate": {
            "$ref": "./examples/SignalRCustomCertificates_CreateOrUpdate.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation",
          "final-state-schema": "#/definitions/CustomCertificate"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "SignalRCustomCertificates_Delete",
        "tags": [
          "CustomCertificates"
        ],
        "description": "Delete a custom certificate.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "The name of the resource.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]{1,61}[a-zA-Z0-9]$"
          },
          {
            "name": "certificateName",
            "in": "path",
            "description": "Custom certificate name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "SignalRCustomCertificates_Delete": {
            "$ref": "./examples/SignalRCustomCertificates_Delete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.SignalRService/signalR/{resourceName}/customDomains": {
      "get": {
        "operationId": "SignalRCustomDomains_List",
        "tags": [
          "CustomDomains"
        ],
        "description": "List all custom domains.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "The name of the resource.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]{1,61}[a-zA-Z0-9]$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/CustomDomainList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "SignalRCustomDomains_List": {
            "$ref": "./examples/SignalRCustomDomains_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.SignalRService/signalR/{resourceName}/customDomains/{name}": {
      "get": {
        "operationId": "SignalRCustomDomains_Get",
        "tags": [
          "CustomDomains"
        ],
        "description": "Get a custom domain.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "The name of the resource.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]{1,61}[a-zA-Z0-9]$"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Custom domain name.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/CustomDomain"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "SignalRCustomDomains_Get": {
            "$ref": "./examples/SignalRCustomDomains_Get.json"
          }
        }
      },
      "put": {
        "operationId": "SignalRCustomDomains_CreateOrUpdate",
        "tags": [
          "CustomDomains"
        ],
        "description": "Create or update a custom domain.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "The name of the resource.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]{1,61}[a-zA-Z0-9]$"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Custom domain name.",
            "required": true,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CustomDomain"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Resource 'CustomDomain' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/CustomDomain"
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "SignalRCustomDomains_CreateOrUpdate": {
            "$ref": "./examples/SignalRCustomDomains_CreateOrUpdate.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation",
          "final-state-schema": "#/definitions/CustomDomain"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "SignalRCustomDomains_Delete",
        "tags": [
          "CustomDomains"
        ],
        "description": "Delete a custom domain.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "The name of the resource.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]{1,61}[a-zA-Z0-9]$"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Custom domain name.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "SignalRCustomDomains_Delete": {
            "$ref": "./examples/SignalRCustomDomains_Delete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.SignalRService/signalR/{resourceName}/listKeys": {
      "post": {
        "operationId": "SignalR_ListKeys",
        "tags": [
          "SignalRResources"
        ],
        "description": "Get the access keys of the resource.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "The name of the resource.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]{1,61}[a-zA-Z0-9]$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/SignalRKeys"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "SignalR_ListKeys": {
            "$ref": "./examples/SignalR_ListKeys.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.SignalRService/signalR/{resourceName}/privateEndpointConnections": {
      "get": {
        "operationId": "SignalRPrivateEndpointConnections_List",
        "tags": [
          "PrivateEndpointConnections"
        ],
        "description": "List private endpoint connections",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "The name of the resource.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]{1,61}[a-zA-Z0-9]$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnectionList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "SignalRPrivateEndpointConnections_List": {
            "$ref": "./examples/SignalRPrivateEndpointConnections_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.SignalRService/signalR/{resourceName}/privateEndpointConnections/{privateEndpointConnectionName}": {
      "get": {
        "operationId": "SignalRPrivateEndpointConnections_Get",
        "tags": [
          "PrivateEndpointConnections"
        ],
        "description": "Get the specified private endpoint connection",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "The name of the resource.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]{1,61}[a-zA-Z0-9]$"
          },
          {
            "name": "privateEndpointConnectionName",
            "in": "path",
            "description": "The name of the private endpoint connection associated with the Azure resource.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnection"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "SignalRPrivateEndpointConnections_Get": {
            "$ref": "./examples/SignalRPrivateEndpointConnections_Get.json"
          }
        }
      },
      "put": {
        "operationId": "SignalRPrivateEndpointConnections_Update",
        "tags": [
          "PrivateEndpointConnections"
        ],
        "description": "Update the state of specified private endpoint connection",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "The name of the resource.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]{1,61}[a-zA-Z0-9]$"
          },
          {
            "name": "privateEndpointConnectionName",
            "in": "path",
            "description": "The name of the private endpoint connection associated with the Azure resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "The resource of private endpoint and its properties",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnection"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'PrivateEndpointConnection' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnection"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "SignalRPrivateEndpointConnections_Update": {
            "$ref": "./examples/SignalRPrivateEndpointConnections_Update.json"
          }
        }
      },
      "delete": {
        "operationId": "SignalRPrivateEndpointConnections_Delete",
        "tags": [
          "PrivateEndpointConnections"
        ],
        "description": "Delete the specified private endpoint connection",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "The name of the resource.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]{1,61}[a-zA-Z0-9]$"
          },
          {
            "name": "privateEndpointConnectionName",
            "in": "path",
            "description": "The name of the private endpoint connection associated with the Azure resource.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "SignalRPrivateEndpointConnections_Delete": {
            "$ref": "./examples/SignalRPrivateEndpointConnections_Delete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.SignalRService/signalR/{resourceName}/privateLinkResources": {
      "get": {
        "operationId": "SignalRPrivateLinkResources_List",
        "tags": [
          "SignalRResources"
        ],
        "description": "Get the private link resources that need to be created for a resource.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "The name of the resource.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]{1,61}[a-zA-Z0-9]$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/PrivateLinkResourceList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "SignalRPrivateLinkResources_List": {
            "$ref": "./examples/SignalRPrivateLinkResources_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.SignalRService/signalR/{resourceName}/regenerateKey": {
      "post": {
        "operationId": "SignalR_RegenerateKey",
        "tags": [
          "SignalRResources"
        ],
        "description": "Regenerate the access key for the resource. PrimaryKey and SecondaryKey cannot be regenerated at the same time.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "The name of the resource.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]{1,61}[a-zA-Z0-9]$"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Parameter that describes the Regenerate Key Operation.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RegenerateKeyParameters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/SignalRKeys"
            }
          },
          "202": {
            "description": "The request has been accepted for processing, but processing has not yet completed.",
            "schema": {
              "$ref": "#/definitions/SignalRKeys"
            },
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "SignalR_RegenerateKey": {
            "$ref": "./examples/SignalR_RegenerateKey.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location",
          "final-state-schema": "#/definitions/SignalRKeys"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.SignalRService/signalR/{resourceName}/replicas": {
      "get": {
        "operationId": "SignalRReplicas_List",
        "tags": [
          "Replicas"
        ],
        "description": "List all replicas belong to this resource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "The name of the resource.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]{1,61}[a-zA-Z0-9]$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ReplicaList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "SignalRReplicas_List": {
            "$ref": "./examples/SignalRReplicas_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.SignalRService/signalR/{resourceName}/replicas/{replicaName}": {
      "get": {
        "operationId": "SignalRReplicas_Get",
        "tags": [
          "Replicas"
        ],
        "description": "Get the replica and its properties.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "The name of the resource.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]{1,61}[a-zA-Z0-9]$"
          },
          {
            "name": "replicaName",
            "in": "path",
            "description": "The name of the replica.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]{1,61}[a-zA-Z0-9]$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Replica"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "SignalRReplicas_Get": {
            "$ref": "./examples/SignalRReplicas_Get.json"
          }
        }
      },
      "put": {
        "operationId": "SignalRReplicas_CreateOrUpdate",
        "tags": [
          "Replicas"
        ],
        "description": "Create or update a replica.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "The name of the resource.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]{1,61}[a-zA-Z0-9]$"
          },
          {
            "name": "replicaName",
            "in": "path",
            "description": "The name of the replica.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]{1,61}[a-zA-Z0-9]$"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Parameters for the create or update operation",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Replica"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'Replica' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/Replica"
            }
          },
          "201": {
            "description": "Resource 'Replica' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/Replica"
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "SignalRReplicas_CreateOrUpdate": {
            "$ref": "./examples/SignalRReplicas_CreateOrUpdate.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation",
          "final-state-schema": "#/definitions/Replica"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "SignalRReplicas_Update",
        "tags": [
          "Replicas"
        ],
        "description": "Operation to update an exiting replica.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "The name of the resource.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]{1,61}[a-zA-Z0-9]$"
          },
          {
            "name": "replicaName",
            "in": "path",
            "description": "The name of the replica.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]{1,61}[a-zA-Z0-9]$"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Parameters for the update operation",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Replica"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Replica"
            }
          },
          "202": {
            "description": "The request has been accepted for processing, but processing has not yet completed.",
            "schema": {
              "$ref": "#/definitions/Replica"
            },
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "SignalRReplicas_Update": {
            "$ref": "./examples/SignalRReplicas_Update.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location",
          "final-state-schema": "#/definitions/Replica"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "SignalRReplicas_Delete",
        "tags": [
          "Replicas"
        ],
        "description": "Operation to delete a replica.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "The name of the resource.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]{1,61}[a-zA-Z0-9]$"
          },
          {
            "name": "replicaName",
            "in": "path",
            "description": "The name of the replica.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]{1,61}[a-zA-Z0-9]$"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "SignalRReplicas_Delete": {
            "$ref": "./examples/SignalRReplicas_Delete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.SignalRService/signalR/{resourceName}/replicas/{replicaName}/restart": {
      "post": {
        "operationId": "SignalRReplicas_Restart",
        "tags": [
          "Replicas"
        ],
        "description": "Operation to restart a replica.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "The name of the resource.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]{1,61}[a-zA-Z0-9]$"
          },
          {
            "name": "replicaName",
            "in": "path",
            "description": "The name of the replica.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]{1,61}[a-zA-Z0-9]$"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Azure operation completed successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "SignalRReplicas_Restart": {
            "$ref": "./examples/SignalRReplicas_Restart.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.SignalRService/signalR/{resourceName}/replicas/{replicaName}/sharedPrivateLinkResources": {
      "get": {
        "operationId": "SignalRReplicaSharedPrivateLinkResources_List",
        "tags": [
          "SharedPrivateLinkResources"
        ],
        "description": "List shared private link resources",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "The name of the SignalRResource",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]{1,61}[a-zA-Z0-9]$"
          },
          {
            "name": "replicaName",
            "in": "path",
            "description": "The name of the Replica",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]{1,61}[a-zA-Z0-9]$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/SharedPrivateLinkResourceList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "SignalRReplicaSharedPrivateLinkResources_List": {
            "$ref": "./examples/SignalRReplicaSharedPrivateLinkResources_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.SignalRService/signalR/{resourceName}/replicas/{replicaName}/sharedPrivateLinkResources/{sharedPrivateLinkResourceName}": {
      "get": {
        "operationId": "SignalRReplicaSharedPrivateLinkResources_Get",
        "tags": [
          "SharedPrivateLinkResources"
        ],
        "description": "Get the specified shared private link resource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "The name of the SignalRResource",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]{1,61}[a-zA-Z0-9]$"
          },
          {
            "name": "replicaName",
            "in": "path",
            "description": "The name of the Replica",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]{1,61}[a-zA-Z0-9]$"
          },
          {
            "name": "sharedPrivateLinkResourceName",
            "in": "path",
            "description": "The name of the SharedPrivateLinkResource",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]{1,61}[a-zA-Z0-9]$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/SharedPrivateLinkResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "SignalRReplicaSharedPrivateLinkResources_Get": {
            "$ref": "./examples/SignalRReplicaSharedPrivateLinkResources_Get.json"
          }
        }
      },
      "put": {
        "operationId": "SignalRReplicaSharedPrivateLinkResources_CreateOrUpdate",
        "tags": [
          "SharedPrivateLinkResources"
        ],
        "description": "Create or update a shared private link resource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "The name of the SignalRResource",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]{1,61}[a-zA-Z0-9]$"
          },
          {
            "name": "replicaName",
            "in": "path",
            "description": "The name of the Replica",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]{1,61}[a-zA-Z0-9]$"
          },
          {
            "name": "sharedPrivateLinkResourceName",
            "in": "path",
            "description": "The name of the SharedPrivateLinkResource",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]{1,61}[a-zA-Z0-9]$"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "The shared private link resource",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SharedPrivateLinkResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'SharedPrivateLinkResource' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/SharedPrivateLinkResource"
            }
          },
          "201": {
            "description": "Resource 'SharedPrivateLinkResource' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/SharedPrivateLinkResource"
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "SignalRReplicaSharedPrivateLinkResources_CreateOrUpdate": {
            "$ref": "./examples/SignalRReplicaSharedPrivateLinkResources_CreateOrUpdate.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation",
          "final-state-schema": "#/definitions/SharedPrivateLinkResource"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.SignalRService/signalR/{resourceName}/replicas/{replicaName}/skus": {
      "get": {
        "operationId": "SignalR_ListReplicaSkus",
        "tags": [
          "Replicas"
        ],
        "description": "List all available skus of the replica resource.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "The name of the resource.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]{1,61}[a-zA-Z0-9]$"
          },
          {
            "name": "replicaName",
            "in": "path",
            "description": "The name of the replica.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]{1,61}[a-zA-Z0-9]$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/SkuList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "SignalR_ListReplicaSkus": {
            "$ref": "./examples/SignalR_ListReplicaSkus.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.SignalRService/signalR/{resourceName}/restart": {
      "post": {
        "operationId": "SignalR_Restart",
        "tags": [
          "SignalRResources"
        ],
        "description": "Operation to restart a resource.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "The name of the resource.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]{1,61}[a-zA-Z0-9]$"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Azure operation completed successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "SignalR_Restart": {
            "$ref": "./examples/SignalR_Restart.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.SignalRService/signalR/{resourceName}/sharedPrivateLinkResources": {
      "get": {
        "operationId": "SignalRSharedPrivateLinkResources_List",
        "tags": [
          "SignalRSharedPrivateLinkResources"
        ],
        "description": "List shared private link resources",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "The name of the SignalRResource",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]{1,61}[a-zA-Z0-9]$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/SharedPrivateLinkResourceList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "SignalRSharedPrivateLinkResources_List": {
            "$ref": "./examples/SignalRSharedPrivateLinkResources_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.SignalRService/signalR/{resourceName}/sharedPrivateLinkResources/{sharedPrivateLinkResourceName}": {
      "get": {
        "operationId": "SignalRSharedPrivateLinkResources_Get",
        "tags": [
          "SignalRSharedPrivateLinkResources"
        ],
        "description": "Get the specified shared private link resource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "The name of the SignalRResource",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]{1,61}[a-zA-Z0-9]$"
          },
          {
            "name": "sharedPrivateLinkResourceName",
            "in": "path",
            "description": "The name of the SharedPrivateLinkResource",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]{1,61}[a-zA-Z0-9]$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/SharedPrivateLinkResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "SignalRSharedPrivateLinkResources_Get": {
            "$ref": "./examples/SignalRSharedPrivateLinkResources_Get.json"
          }
        }
      },
      "put": {
        "operationId": "SignalRSharedPrivateLinkResources_CreateOrUpdate",
        "tags": [
          "SignalRSharedPrivateLinkResources"
        ],
        "description": "Create or update a shared private link resource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "The name of the SignalRResource",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]{1,61}[a-zA-Z0-9]$"
          },
          {
            "name": "sharedPrivateLinkResourceName",
            "in": "path",
            "description": "The name of the SharedPrivateLinkResource",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]{1,61}[a-zA-Z0-9]$"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "The shared private link resource",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SharedPrivateLinkResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'SharedPrivateLinkResource' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/SharedPrivateLinkResource"
            }
          },
          "201": {
            "description": "Resource 'SharedPrivateLinkResource' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/SharedPrivateLinkResource"
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "SignalRSharedPrivateLinkResources_CreateOrUpdate": {
            "$ref": "./examples/SignalRSharedPrivateLinkResources_CreateOrUpdate.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation",
          "final-state-schema": "#/definitions/SharedPrivateLinkResource"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "SignalRSharedPrivateLinkResources_Delete",
        "tags": [
          "SignalRSharedPrivateLinkResources"
        ],
        "description": "Delete the specified shared private link resource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "The name of the SignalRResource",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]{1,61}[a-zA-Z0-9]$"
          },
          {
            "name": "sharedPrivateLinkResourceName",
            "in": "path",
            "description": "The name of the SharedPrivateLinkResource",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]{1,61}[a-zA-Z0-9]$"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "SignalRSharedPrivateLinkResources_Delete": {
            "$ref": "./examples/SignalRSharedPrivateLinkResources_Delete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.SignalRService/signalR/{resourceName}/skus": {
      "get": {
        "operationId": "SignalR_ListSkus",
        "tags": [
          "SignalRResources"
        ],
        "description": "List all available skus of the resource.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v5/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "The name of the resource.",
            "required": true,
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]{1,61}[a-zA-Z0-9]$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/SkuList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "SignalR_ListSkus": {
            "$ref": "./examples/SignalR_ListSkus.json"
          }
        }
      }
    }
  },
  "definitions": {
    "ACLAction": {
      "type": "string",
      "description": "Azure Networking ACL Action.",
      "enum": [
        "Allow",
        "Deny"
      ],
      "x-ms-enum": {
        "name": "ACLAction",
        "modelAsString": true,
        "values": [
          {
            "name": "Allow",
            "value": "Allow"
          },
          {
            "name": "Deny",
            "value": "Deny"
          }
        ]
      }
    },
    "ApplicationFirewallSettings": {
      "type": "object",
      "description": "Application firewall settings for the resource",
      "properties": {
        "clientConnectionCountRules": {
          "type": "array",
          "description": "Rules to control the client connection count",
          "maxItems": 10,
          "items": {
            "$ref": "#/definitions/ClientConnectionCountRule"
          },
          "x-ms-identifiers": []
        },
        "clientTrafficControlRules": {
          "type": "array",
          "description": "Rules to control the client traffic",
          "maxItems": 10,
          "items": {
            "$ref": "#/definitions/ClientTrafficControlRule"
          },
          "x-ms-identifiers": []
        },
        "maxClientConnectionLifetimeInSeconds": {
          "type": "integer",
          "format": "int64",
          "description": "Config to control the client connection lifetime in seconds, can be set to 0 to disable the config",
          "minimum": 0,
          "maximum": 604800
        }
      }
    },
    "ClientConnectionCountRule": {
      "type": "object",
      "description": "A base class for client connection count rules",
      "properties": {
        "type": {
          "$ref": "#/definitions/ClientConnectionCountRuleDiscriminator"
        }
      },
      "discriminator": "type",
      "required": [
        "type"
      ]
    },
    "ClientConnectionCountRuleDiscriminator": {
      "type": "string",
      "enum": [
        "ThrottleByJwtSignatureRule",
        "ThrottleByUserIdRule",
        "ThrottleByJwtCustomClaimRule"
      ],
      "x-ms-enum": {
        "name": "ClientConnectionCountRuleDiscriminator",
        "modelAsString": true,
        "values": [
          {
            "name": "ThrottleByJwtSignatureRule",
            "value": "ThrottleByJwtSignatureRule"
          },
          {
            "name": "ThrottleByUserIdRule",
            "value": "ThrottleByUserIdRule"
          },
          {
            "name": "ThrottleByJwtCustomClaimRule",
            "value": "ThrottleByJwtCustomClaimRule"
          }
        ]
      }
    },
    "ClientTrafficControlRule": {
      "type": "object",
      "description": "A base class for client traffic control rules",
      "properties": {
        "type": {
          "$ref": "#/definitions/ClientTrafficControlRuleDiscriminator"
        }
      },
      "discriminator": "type",
      "required": [
        "type"
      ]
    },
    "ClientTrafficControlRuleDiscriminator": {
      "type": "string",
      "enum": [
        "TrafficThrottleByJwtSignatureRule",
        "TrafficThrottleByUserIdRule",
        "TrafficThrottleByJwtCustomClaimRule"
      ],
      "x-ms-enum": {
        "name": "ClientTrafficControlRuleDiscriminator",
        "modelAsString": true,
        "values": [
          {
            "name": "TrafficThrottleByJwtSignatureRule",
            "value": "TrafficThrottleByJwtSignatureRule"
          },
          {
            "name": "TrafficThrottleByUserIdRule",
            "value": "TrafficThrottleByUserIdRule"
          },
          {
            "name": "TrafficThrottleByJwtCustomClaimRule",
            "value": "TrafficThrottleByJwtCustomClaimRule"
          }
        ]
      }
    },
    "CustomCertificate": {
      "type": "object",
      "description": "A custom certificate.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/CustomCertificateProperties",
          "description": "Custom certificate properties.",
          "x-ms-client-flatten": true
        }
      },
      "required": [
        "properties"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "CustomCertificateList": {
      "type": "object",
      "description": "Custom certificates list.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The CustomCertificate items on this page",
          "items": {
            "$ref": "#/definitions/CustomCertificate"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "CustomCertificateProperties": {
      "type": "object",
      "description": "Custom certificate properties.",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "Provisioning state of the resource.",
          "readOnly": true
        },
        "keyVaultBaseUri": {
          "type": "string",
          "description": "Base uri of the KeyVault that stores certificate.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "keyVaultSecretName": {
          "type": "string",
          "description": "Certificate secret name.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "keyVaultSecretVersion": {
          "type": "string",
          "description": "Certificate secret version.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "required": [
        "keyVaultBaseUri",
        "keyVaultSecretName"
      ]
    },
    "CustomDomain": {
      "type": "object",
      "description": "A custom domain",
      "properties": {
        "properties": {
          "$ref": "#/definitions/CustomDomainProperties",
          "description": "Properties of a custom domain.",
          "x-ms-client-flatten": true
        }
      },
      "required": [
        "properties"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "CustomDomainList": {
      "type": "object",
      "description": "Custom domains list",
      "properties": {
        "value": {
          "type": "array",
          "description": "The CustomDomain items on this page",
          "items": {
            "$ref": "#/definitions/CustomDomain"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "CustomDomainProperties": {
      "type": "object",
      "description": "Properties of a custom domain.",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "Provisioning state of the resource.",
          "readOnly": true
        },
        "domainName": {
          "type": "string",
          "description": "The custom domain name."
        },
        "customCertificate": {
          "$ref": "#/definitions/ResourceReference",
          "description": "Reference to a resource."
        }
      },
      "required": [
        "domainName",
        "customCertificate"
      ]
    },
    "Dimension": {
      "type": "object",
      "description": "Specifications of the Dimension of metrics.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The public facing name of the dimension."
        },
        "displayName": {
          "type": "string",
          "description": "Localized friendly display name of the dimension."
        },
        "internalName": {
          "type": "string",
          "description": "Name of the dimension as it appears in MDM."
        },
        "toBeExportedForShoebox": {
          "type": "boolean",
          "description": "A Boolean flag indicating whether this dimension should be included for the shoebox export scenario."
        }
      }
    },
    "FeatureFlags": {
      "type": "string",
      "description": "FeatureFlags is the supported features of Azure SignalR service.\n- ServiceMode: Flag for backend server for SignalR service. Values allowed: \"Default\": have your own backend server; \"Serverless\": your application doesn't have a backend server; \"Classic\": for backward compatibility. Support both Default and Serverless mode but not recommended; \"PredefinedOnly\": for future use.\n- EnableConnectivityLogs: \"true\"/\"false\", to enable/disable the connectivity log category respectively.\n- EnableMessagingLogs: \"true\"/\"false\", to enable/disable the connectivity log category respectively.\n- EnableLiveTrace: Live Trace allows you to know what's happening inside Azure SignalR service, it will give you live traces in real time, it will be helpful when you developing your own Azure SignalR based web application or self-troubleshooting some issues. Please note that live traces are counted as outbound messages that will be charged. Values allowed: \"true\"/\"false\", to enable/disable live trace feature.",
      "enum": [
        "ServiceMode",
        "EnableConnectivityLogs",
        "EnableMessagingLogs",
        "EnableLiveTrace"
      ],
      "x-ms-enum": {
        "name": "FeatureFlags",
        "modelAsString": true,
        "values": [
          {
            "name": "ServiceMode",
            "value": "ServiceMode"
          },
          {
            "name": "EnableConnectivityLogs",
            "value": "EnableConnectivityLogs"
          },
          {
            "name": "EnableMessagingLogs",
            "value": "EnableMessagingLogs"
          },
          {
            "name": "EnableLiveTrace",
            "value": "EnableLiveTrace"
          }
        ]
      }
    },
    "IPRule": {
      "type": "object",
      "description": "An IP rule",
      "properties": {
        "value": {
          "type": "string",
          "description": "An IP or CIDR or ServiceTag"
        },
        "action": {
          "$ref": "#/definitions/ACLAction",
          "description": "Azure Networking ACL Action."
        }
      }
    },
    "KeyType": {
      "type": "string",
      "description": "The type of access key.",
      "enum": [
        "Primary",
        "Secondary",
        "Salt"
      ],
      "x-ms-enum": {
        "name": "KeyType",
        "modelAsString": true,
        "values": [
          {
            "name": "Primary",
            "value": "Primary"
          },
          {
            "name": "Secondary",
            "value": "Secondary"
          },
          {
            "name": "Salt",
            "value": "Salt"
          }
        ]
      }
    },
    "LiveTraceCategory": {
      "type": "object",
      "description": "Live trace category configuration of a Microsoft.SignalRService resource.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Gets or sets the live trace category's name.\nAvailable values: ConnectivityLogs, MessagingLogs.\nCase insensitive."
        },
        "enabled": {
          "type": "string",
          "description": "Indicates whether or the live trace category is enabled.\nAvailable values: true, false.\nCase insensitive."
        }
      }
    },
    "LiveTraceConfiguration": {
      "type": "object",
      "description": "Live trace configuration of a Microsoft.SignalRService resource.",
      "properties": {
        "enabled": {
          "type": "string",
          "description": "Indicates whether or not enable live trace.\nWhen it's set to true, live trace client can connect to the service.\nOtherwise, live trace client can't connect to the service, so that you are unable to receive any log, no matter what you configure in \"categories\".\nAvailable values: true, false.\nCase insensitive.",
          "default": "false"
        },
        "categories": {
          "type": "array",
          "description": "Gets or sets the list of category configurations.",
          "items": {
            "$ref": "#/definitions/LiveTraceCategory"
          },
          "x-ms-identifiers": [
            "name"
          ]
        }
      }
    },
    "LogSpecification": {
      "type": "object",
      "description": "Specifications of the Logs for Azure Monitoring.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the log."
        },
        "displayName": {
          "type": "string",
          "description": "Localized friendly display name of the log."
        }
      }
    },
    "ManagedIdentity": {
      "type": "object",
      "description": "A class represent managed identities used for request and response",
      "properties": {
        "type": {
          "$ref": "#/definitions/ManagedIdentityType",
          "description": "Represents the identity type: systemAssigned, userAssigned, None"
        },
        "userAssignedIdentities": {
          "type": "object",
          "description": "Get or set the user assigned identities",
          "additionalProperties": {
            "$ref": "#/definitions/UserAssignedIdentityProperty"
          }
        },
        "principalId": {
          "type": "string",
          "description": "Get the principal id for the system assigned identity.\nOnly be used in response.",
          "readOnly": true
        },
        "tenantId": {
          "type": "string",
          "description": "Get the tenant id for the system assigned identity.\nOnly be used in response",
          "readOnly": true
        }
      }
    },
    "ManagedIdentitySettings": {
      "type": "object",
      "description": "Managed identity settings for upstream.",
      "properties": {
        "resource": {
          "type": "string",
          "description": "The Resource indicating the App ID URI of the target resource.\nIt also appears in the aud (audience) claim of the issued token."
        }
      }
    },
    "ManagedIdentityType": {
      "type": "string",
      "description": "Represents the identity type: systemAssigned, userAssigned, None",
      "enum": [
        "None",
        "SystemAssigned",
        "UserAssigned"
      ],
      "x-ms-enum": {
        "name": "ManagedIdentityType",
        "modelAsString": true,
        "values": [
          {
            "name": "None",
            "value": "None"
          },
          {
            "name": "SystemAssigned",
            "value": "SystemAssigned"
          },
          {
            "name": "UserAssigned",
            "value": "UserAssigned"
          }
        ]
      }
    },
    "MetricSpecification": {
      "type": "object",
      "description": "Specifications of the Metrics for Azure Monitoring.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the metric."
        },
        "displayName": {
          "type": "string",
          "description": "Localized friendly display name of the metric."
        },
        "displayDescription": {
          "type": "string",
          "description": "Localized friendly description of the metric."
        },
        "unit": {
          "type": "string",
          "description": "The unit that makes sense for the metric."
        },
        "aggregationType": {
          "type": "string",
          "description": "Only provide one value for this field. Valid values: Average, Minimum, Maximum, Total, Count."
        },
        "fillGapWithZero": {
          "type": "string",
          "description": "Optional. If set to true, then zero will be returned for time duration where no metric is emitted/published.\nEx. a metric that returns the number of times a particular error code was emitted. The error code may not appear\noften, instead of the RP publishing 0, Shoebox can auto fill in 0s for time periods where nothing was emitted."
        },
        "category": {
          "type": "string",
          "description": "The name of the metric category that the metric belongs to. A metric can only belong to a single category."
        },
        "dimensions": {
          "type": "array",
          "description": "The dimensions of the metrics.",
          "items": {
            "$ref": "#/definitions/Dimension"
          },
          "x-ms-identifiers": [
            "name"
          ]
        }
      }
    },
    "NameAvailability": {
      "type": "object",
      "description": "Result of the request to check name availability. It contains a flag and possible reason of failure.",
      "properties": {
        "nameAvailable": {
          "type": "boolean",
          "description": "Indicates whether the name is available or not."
        },
        "reason": {
          "type": "string",
          "description": "The reason of the availability. Required if name is not available."
        },
        "message": {
          "type": "string",
          "description": "The message of the operation."
        }
      }
    },
    "NameAvailabilityParameters": {
      "type": "object",
      "description": "Data POST-ed to the nameAvailability action",
      "properties": {
        "type": {
          "type": "string",
          "description": "The resource type. Can be \"Microsoft.SignalRService/SignalR\", \"Microsoft.SignalRService/WebPubSub\", \"Microsoft.SignalRService/SignalR/replicas\" or \"Microsoft.SignalRService/WebPubSub/replicas\""
        },
        "name": {
          "type": "string",
          "description": "The resource name to validate. e.g.\"my-resource-name\""
        }
      },
      "required": [
        "type",
        "name"
      ]
    },
    "NetworkACL": {
      "type": "object",
      "description": "Network ACL",
      "properties": {
        "allow": {
          "type": "array",
          "description": "Allowed request types. The value can be one or more of: ClientConnection, ServerConnection, RESTAPI.",
          "items": {
            "$ref": "#/definitions/SignalRRequestType"
          },
          "x-ms-identifiers": []
        },
        "deny": {
          "type": "array",
          "description": "Denied request types. The value can be one or more of: ClientConnection, ServerConnection, RESTAPI.",
          "items": {
            "$ref": "#/definitions/SignalRRequestType"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "Operation": {
      "type": "object",
      "description": "REST API operation supported by resource provider.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the operation with format: {provider}/{resource}/{operation}"
        },
        "isDataAction": {
          "type": "boolean",
          "description": "If the operation is a data action. (for data plane rbac)"
        },
        "display": {
          "$ref": "#/definitions/OperationDisplay",
          "description": "The object that describes a operation."
        },
        "origin": {
          "type": "string",
          "description": "Optional. The intended executor of the operation; governs the display of the operation in the RBAC UX and the audit logs UX."
        },
        "properties": {
          "$ref": "#/definitions/OperationProperties",
          "description": "Extra Operation properties."
        }
      }
    },
    "OperationDisplay": {
      "type": "object",
      "description": "The object that describes a operation.",
      "properties": {
        "provider": {
          "type": "string",
          "description": "Friendly name of the resource provider"
        },
        "resource": {
          "type": "string",
          "description": "Resource type on which the operation is performed."
        },
        "operation": {
          "type": "string",
          "description": "The localized friendly name for the operation."
        },
        "description": {
          "type": "string",
          "description": "The localized friendly description for the operation"
        }
      }
    },
    "OperationList": {
      "type": "object",
      "description": "A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The Operation items on this page",
          "items": {
            "$ref": "#/definitions/Operation"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "OperationProperties": {
      "type": "object",
      "description": "Extra Operation properties.",
      "properties": {
        "serviceSpecification": {
          "$ref": "#/definitions/ServiceSpecification",
          "description": "An object that describes a specification."
        }
      }
    },
    "PrivateEndpoint": {
      "type": "object",
      "description": "Private endpoint",
      "properties": {
        "id": {
          "type": "string",
          "description": "Full qualified Id of the private endpoint"
        }
      }
    },
    "PrivateEndpointACL": {
      "type": "object",
      "description": "ACL for a private endpoint",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the private endpoint connection"
        }
      },
      "required": [
        "name"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/NetworkACL"
        }
      ]
    },
    "PrivateEndpointConnection": {
      "type": "object",
      "description": "A private endpoint connection to an azure resource",
      "properties": {
        "properties": {
          "$ref": "#/definitions/PrivateEndpointConnectionProperties",
          "description": "Private endpoint connection properties",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "PrivateEndpointConnectionList": {
      "type": "object",
      "description": "A list of private endpoint connections",
      "properties": {
        "value": {
          "type": "array",
          "description": "The PrivateEndpointConnection items on this page",
          "items": {
            "$ref": "#/definitions/PrivateEndpointConnection"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "PrivateEndpointConnectionProperties": {
      "type": "object",
      "description": "Private endpoint connection properties",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "Provisioning state of the resource.",
          "readOnly": true
        },
        "privateEndpoint": {
          "$ref": "#/definitions/PrivateEndpoint",
          "description": "Private endpoint"
        },
        "groupIds": {
          "type": "array",
          "description": "Group IDs",
          "items": {
            "type": "string"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        },
        "privateLinkServiceConnectionState": {
          "$ref": "#/definitions/PrivateLinkServiceConnectionState",
          "description": "Connection state of the private endpoint connection"
        }
      }
    },
    "PrivateLinkResource": {
      "type": "object",
      "description": "Private link resource",
      "properties": {
        "properties": {
          "$ref": "#/definitions/PrivateLinkResourceProperties",
          "description": "Private link resource properties",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "PrivateLinkResourceList": {
      "type": "object",
      "description": "Contains a list of PrivateLinkResource and a possible link to query more results",
      "properties": {
        "value": {
          "type": "array",
          "description": "The PrivateLinkResource items on this page",
          "items": {
            "$ref": "#/definitions/PrivateLinkResource"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "PrivateLinkResourceProperties": {
      "type": "object",
      "description": "Private link resource properties",
      "properties": {
        "groupId": {
          "type": "string",
          "description": "Group Id of the private link resource"
        },
        "requiredMembers": {
          "type": "array",
          "description": "Required members of the private link resource",
          "items": {
            "type": "string"
          },
          "x-ms-identifiers": []
        },
        "requiredZoneNames": {
          "type": "array",
          "description": "Required private DNS zone names",
          "items": {
            "type": "string"
          },
          "x-ms-identifiers": []
        },
        "shareablePrivateLinkResourceTypes": {
          "type": "array",
          "description": "The list of resources that are onboarded to private link service",
          "items": {
            "$ref": "#/definitions/ShareablePrivateLinkResourceType"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "PrivateLinkServiceConnectionState": {
      "type": "object",
      "description": "Connection state of the private endpoint connection",
      "properties": {
        "status": {
          "$ref": "#/definitions/PrivateLinkServiceConnectionStatus",
          "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service."
        },
        "description": {
          "type": "string",
          "description": "The reason for approval/rejection of the connection."
        },
        "actionsRequired": {
          "type": "string",
          "description": "A message indicating if changes on the service provider require any updates on the consumer."
        }
      }
    },
    "PrivateLinkServiceConnectionStatus": {
      "type": "string",
      "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.",
      "enum": [
        "Pending",
        "Approved",
        "Rejected",
        "Disconnected"
      ],
      "x-ms-enum": {
        "name": "PrivateLinkServiceConnectionStatus",
        "modelAsString": true,
        "values": [
          {
            "name": "Pending",
            "value": "Pending"
          },
          {
            "name": "Approved",
            "value": "Approved"
          },
          {
            "name": "Rejected",
            "value": "Rejected"
          },
          {
            "name": "Disconnected",
            "value": "Disconnected"
          }
        ]
      }
    },
    "ProvisioningState": {
      "type": "string",
      "description": "Provisioning state of the resource.",
      "enum": [
        "Unknown",
        "Succeeded",
        "Failed",
        "Canceled",
        "Running",
        "Creating",
        "Updating",
        "Deleting",
        "Moving"
      ],
      "x-ms-enum": {
        "name": "ProvisioningState",
        "modelAsString": true,
        "values": [
          {
            "name": "Unknown",
            "value": "Unknown"
          },
          {
            "name": "Succeeded",
            "value": "Succeeded"
          },
          {
            "name": "Failed",
            "value": "Failed"
          },
          {
            "name": "Canceled",
            "value": "Canceled"
          },
          {
            "name": "Running",
            "value": "Running"
          },
          {
            "name": "Creating",
            "value": "Creating"
          },
          {
            "name": "Updating",
            "value": "Updating"
          },
          {
            "name": "Deleting",
            "value": "Deleting"
          },
          {
            "name": "Moving",
            "value": "Moving"
          }
        ]
      }
    },
    "RegenerateKeyParameters": {
      "type": "object",
      "description": "Parameters describes the request to regenerate access keys",
      "properties": {
        "keyType": {
          "$ref": "#/definitions/KeyType",
          "description": "The type of access key."
        }
      }
    },
    "Replica": {
      "type": "object",
      "description": "A class represent a replica resource.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ReplicaProperties",
          "x-ms-client-flatten": true
        },
        "sku": {
          "$ref": "#/definitions/ResourceSku",
          "description": "The billing information of the resource."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "ReplicaList": {
      "type": "object",
      "description": "Paged collection of Replica items",
      "properties": {
        "value": {
          "type": "array",
          "description": "The Replica items on this page",
          "items": {
            "$ref": "#/definitions/Replica"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "ReplicaProperties": {
      "type": "object",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "Provisioning state of the resource.",
          "readOnly": true
        },
        "regionEndpointEnabled": {
          "type": "string",
          "description": "Enable or disable the regional endpoint. Default to \"Enabled\".\nWhen it's Disabled, new connections will not be routed to this endpoint, however existing connections will not be affected.",
          "default": "Enabled"
        },
        "resourceStopped": {
          "type": "string",
          "description": "Stop or start the resource.  Default to \"false\".\nWhen it's true, the data plane of the resource is shutdown.\nWhen it's false, the data plane of the resource is started.",
          "default": "false"
        }
      }
    },
    "ResourceLogCategory": {
      "type": "object",
      "description": "Resource log category configuration of a Microsoft.SignalRService resource.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Gets or sets the resource log category's name.\nAvailable values: ConnectivityLogs, MessagingLogs.\nCase insensitive."
        },
        "enabled": {
          "type": "string",
          "description": "Indicates whether or the resource log category is enabled.\nAvailable values: true, false.\nCase insensitive."
        }
      }
    },
    "ResourceLogConfiguration": {
      "type": "object",
      "description": "Resource log configuration of a Microsoft.SignalRService resource.",
      "properties": {
        "categories": {
          "type": "array",
          "description": "Gets or sets the list of category configurations.",
          "items": {
            "$ref": "#/definitions/ResourceLogCategory"
          },
          "x-ms-identifiers": [
            "name"
          ]
        }
      }
    },
    "ResourceReference": {
      "type": "object",
      "description": "Reference to a resource.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Resource ID."
        }
      }
    },
    "ResourceSku": {
      "type": "object",
      "description": "The billing information of the resource.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the SKU. Required.\n\nAllowed values: Standard_S1, Free_F1, Premium_P1, Premium_P2"
        },
        "tier": {
          "$ref": "#/definitions/SignalRSkuTier",
          "description": "Optional tier of this particular SKU. 'Standard' or 'Free'.\n\n`Basic` is deprecated, use `Standard` instead."
        },
        "size": {
          "type": "string",
          "description": "Not used. Retained for future use.",
          "readOnly": true
        },
        "family": {
          "type": "string",
          "description": "Not used. Retained for future use.",
          "readOnly": true
        },
        "capacity": {
          "type": "integer",
          "format": "int32",
          "description": "Optional, integer. The unit count of the resource.\n1 for Free_F1/Standard_S1/Premium_P1, 100 for Premium_P2 by default.\n\nIf present, following values are allowed:\nFree_F1: 1;\nStandard_S1: 1,2,3,4,5,6,7,8,9,10,20,30,40,50,60,70,80,90,100;\nPremium_P1:  1,2,3,4,5,6,7,8,9,10,20,30,40,50,60,70,80,90,100;\nPremium_P2:  100,200,300,400,500,600,700,800,900,1000;"
        }
      },
      "required": [
        "name"
      ]
    },
    "RouteSettings": {
      "type": "object",
      "description": "Route settings for the resource",
      "properties": {
        "serverBalanceWeight": {
          "type": "integer",
          "format": "int32",
          "description": "Gets or sets the server balance weight.\nA higher value means a greater balance of client connections across different app server instances.\nA value of 0 distributes connections randomly, while a value of 255 ensures maximum balancing.\nThe default value is 255.\nRecommended ```255``` for multiple app servers in same size.",
          "minimum": 0,
          "maximum": 255
        },
        "connectionBalanceWeight": {
          "type": "integer",
          "format": "int32",
          "description": "Gets or sets the connection balance weight.\nA higher value means a greater balance of client connections across different server connections.\nA value of 0 distributes connections randomly, while a value of 255 ensures maximum balancing.\nThe default value is 255.\nRecommended ```255``` for all of the cases.",
          "minimum": 0,
          "maximum": 255
        },
        "latencyWeight": {
          "type": "integer",
          "format": "int32",
          "description": "Gets or sets the weight for latency-based routing.\nA higher value increases the influence of latency-based routing.\nA value of 0 disables latency-based routing entirely, while a value of 255 enables it fully.\nThe default value is 0.\nRecommended ```255``` for replicas or app servers in different regions for disaster recovery.",
          "minimum": 0,
          "maximum": 255
        }
      }
    },
    "ScaleType": {
      "type": "string",
      "description": "The scale type applicable to the sku.",
      "enum": [
        "None",
        "Manual",
        "Automatic"
      ],
      "x-ms-enum": {
        "name": "ScaleType",
        "modelAsString": true,
        "values": [
          {
            "name": "None",
            "value": "None"
          },
          {
            "name": "Manual",
            "value": "Manual"
          },
          {
            "name": "Automatic",
            "value": "Automatic"
          }
        ]
      }
    },
    "ServerlessSettings": {
      "type": "object",
      "description": "Serverless settings.",
      "properties": {
        "connectionTimeoutInSeconds": {
          "type": "integer",
          "format": "int32",
          "description": "Gets or sets Client Connection Timeout. Optional to be set.\nValue in seconds.\nDefault value is 30 seconds.\nCustomer should set the timeout to a shorter period if messages are expected to be sent in shorter intervals,\nand want the client to disconnect more quickly after the last message is sent.\nYou can set the timeout to a longer period if messages are expected to be sent in longer intervals,\nand they want to keep the same client connection alive during this session.\nThe service considers the client disconnected if it hasn't received a message (including keep-alive) in this interval.",
          "default": 30,
          "minimum": 1,
          "maximum": 120
        },
        "keepAliveIntervalInSeconds": {
          "type": "integer",
          "format": "int32",
          "description": "Gets or sets the Keep-Alive Interval. Optional to set.\nValue is in seconds.\nThe default value is 15 seconds.\nCustomers should set this value to a shorter period if they want the service to send keep-alive messages more frequently,\nensuring timely checks of the connection status.\nConversely, customers can set this value to a longer period if they want the service to send keep-alive messages less frequently,\nreducing network traffic, but note that it may take longer to detect a disconnection.\nThis interval ensures that the connection is maintained by sending periodic keep-alive messages to the client.",
          "minimum": 1,
          "maximum": 120
        }
      }
    },
    "ServerlessUpstreamSettings": {
      "type": "object",
      "description": "The settings for the Upstream when the service is in server-less mode.",
      "properties": {
        "templates": {
          "type": "array",
          "description": "Gets or sets the list of Upstream URL templates. Order matters, and the first matching template takes effects.",
          "items": {
            "$ref": "#/definitions/UpstreamTemplate"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "ServiceKind": {
      "type": "string",
      "description": "The kind of the service",
      "enum": [
        "SignalR",
        "RawWebSockets"
      ],
      "x-ms-enum": {
        "name": "ServiceKind",
        "modelAsString": true,
        "values": [
          {
            "name": "SignalR",
            "value": "SignalR"
          },
          {
            "name": "RawWebSockets",
            "value": "RawWebSockets"
          }
        ]
      }
    },
    "ServiceSpecification": {
      "type": "object",
      "description": "An object that describes a specification.",
      "properties": {
        "metricSpecifications": {
          "type": "array",
          "description": "Specifications of the Metrics for Azure Monitoring.",
          "items": {
            "$ref": "#/definitions/MetricSpecification"
          },
          "x-ms-identifiers": [
            "name",
            "unit"
          ]
        },
        "logSpecifications": {
          "type": "array",
          "description": "Specifications of the Logs for Azure Monitoring.",
          "items": {
            "$ref": "#/definitions/LogSpecification"
          },
          "x-ms-identifiers": [
            "name"
          ]
        }
      }
    },
    "ShareablePrivateLinkResourceProperties": {
      "type": "object",
      "description": "Describes the properties of a resource type that has been onboarded to private link service",
      "properties": {
        "description": {
          "type": "string",
          "description": "The description of the resource type that has been onboarded to private link service"
        },
        "groupId": {
          "type": "string",
          "description": "The resource provider group id for the resource that has been onboarded to private link service"
        },
        "type": {
          "type": "string",
          "description": "The resource provider type for the resource that has been onboarded to private link service"
        }
      }
    },
    "ShareablePrivateLinkResourceType": {
      "type": "object",
      "description": "Describes a  resource type that has been onboarded to private link service",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the resource type that has been onboarded to private link service"
        },
        "properties": {
          "$ref": "#/definitions/ShareablePrivateLinkResourceProperties",
          "description": "Describes the properties of a resource type that has been onboarded to private link service"
        }
      }
    },
    "SharedPrivateLinkResource": {
      "type": "object",
      "description": "Describes a Shared Private Link Resource",
      "properties": {
        "properties": {
          "$ref": "#/definitions/SharedPrivateLinkResourceProperties",
          "description": "Describes the properties of an existing Shared Private Link Resource",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "SharedPrivateLinkResourceList": {
      "type": "object",
      "description": "A list of shared private link resources",
      "properties": {
        "value": {
          "type": "array",
          "description": "The SharedPrivateLinkResource items on this page",
          "items": {
            "$ref": "#/definitions/SharedPrivateLinkResource"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "SharedPrivateLinkResourceProperties": {
      "type": "object",
      "description": "Describes the properties of an existing Shared Private Link Resource",
      "properties": {
        "groupId": {
          "type": "string",
          "description": "The group id from the provider of resource the shared private link resource is for"
        },
        "privateLinkResourceId": {
          "type": "string",
          "description": "The resource id of the resource the shared private link resource is for"
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "Provisioning state of the resource.",
          "readOnly": true
        },
        "requestMessage": {
          "type": "string",
          "description": "The request message for requesting approval of the shared private link resource"
        },
        "fqdns": {
          "type": "array",
          "description": "A list of FQDNs for third party private link service",
          "items": {
            "type": "string"
          },
          "x-ms-identifiers": []
        },
        "status": {
          "$ref": "#/definitions/SharedPrivateLinkResourceStatus",
          "description": "Status of the shared private link resource",
          "readOnly": true
        }
      },
      "required": [
        "groupId",
        "privateLinkResourceId"
      ]
    },
    "SharedPrivateLinkResourceStatus": {
      "type": "string",
      "description": "Status of the shared private link resource",
      "enum": [
        "Pending",
        "Approved",
        "Rejected",
        "Disconnected",
        "Timeout"
      ],
      "x-ms-enum": {
        "name": "SharedPrivateLinkResourceStatus",
        "modelAsString": true,
        "values": [
          {
            "name": "Pending",
            "value": "Pending"
          },
          {
            "name": "Approved",
            "value": "Approved"
          },
          {
            "name": "Rejected",
            "value": "Rejected"
          },
          {
            "name": "Disconnected",
            "value": "Disconnected"
          },
          {
            "name": "Timeout",
            "value": "Timeout"
          }
        ]
      }
    },
    "SignalRCorsSettings": {
      "type": "object",
      "description": "Cross-Origin Resource Sharing (CORS) settings.",
      "properties": {
        "allowedOrigins": {
          "type": "array",
          "description": "Gets or sets the list of origins that should be allowed to make cross-origin calls (for example: http://example.com:12345). Use \"*\" to allow all. If omitted, allow all by default.",
          "items": {
            "type": "string"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "SignalRFeature": {
      "type": "object",
      "description": "Feature of a resource, which controls the runtime behavior.",
      "properties": {
        "flag": {
          "$ref": "#/definitions/FeatureFlags",
          "description": "FeatureFlags is the supported features of Azure SignalR service.\n- ServiceMode: Flag for backend server for SignalR service. Values allowed: \"Default\": have your own backend server; \"Serverless\": your application doesn't have a backend server; \"Classic\": for backward compatibility. Support both Default and Serverless mode but not recommended; \"PredefinedOnly\": for future use.\n- EnableConnectivityLogs: \"true\"/\"false\", to enable/disable the connectivity log category respectively.\n- EnableMessagingLogs: \"true\"/\"false\", to enable/disable the connectivity log category respectively.\n- EnableLiveTrace: Live Trace allows you to know what's happening inside Azure SignalR service, it will give you live traces in real time, it will be helpful when you developing your own Azure SignalR based web application or self-troubleshooting some issues. Please note that live traces are counted as outbound messages that will be charged. Values allowed: \"true\"/\"false\", to enable/disable live trace feature."
        },
        "value": {
          "type": "string",
          "description": "Value of the feature flag. See Azure SignalR service document https://docs.microsoft.com/azure/azure-signalr/ for allowed values.",
          "minLength": 1,
          "maxLength": 128
        },
        "properties": {
          "type": "object",
          "description": "Optional properties related to this feature.",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "required": [
        "flag",
        "value"
      ]
    },
    "SignalRKeys": {
      "type": "object",
      "description": "A class represents the access keys of the resource.",
      "properties": {
        "primaryKey": {
          "type": "string",
          "format": "password",
          "description": "The primary access key.",
          "x-ms-secret": true
        },
        "secondaryKey": {
          "type": "string",
          "format": "password",
          "description": "The secondary access key.",
          "x-ms-secret": true
        },
        "primaryConnectionString": {
          "type": "string",
          "format": "password",
          "description": "Connection string constructed via the primaryKey",
          "x-ms-secret": true
        },
        "secondaryConnectionString": {
          "type": "string",
          "format": "password",
          "description": "Connection string constructed via the secondaryKey",
          "x-ms-secret": true
        }
      }
    },
    "SignalRNetworkACLs": {
      "type": "object",
      "description": "Network ACLs for the resource",
      "properties": {
        "defaultAction": {
          "$ref": "#/definitions/ACLAction",
          "description": "Azure Networking ACL Action."
        },
        "publicNetwork": {
          "$ref": "#/definitions/NetworkACL",
          "description": "Network ACL"
        },
        "privateEndpoints": {
          "type": "array",
          "description": "ACLs for requests from private endpoints",
          "items": {
            "$ref": "#/definitions/PrivateEndpointACL"
          },
          "x-ms-identifiers": [
            "name"
          ]
        },
        "ipRules": {
          "type": "array",
          "description": "IP rules for filtering public traffic",
          "maxItems": 30,
          "items": {
            "$ref": "#/definitions/IPRule"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "SignalRProperties": {
      "type": "object",
      "description": "A class that describes the properties of the resource",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "Provisioning state of the resource.",
          "readOnly": true
        },
        "externalIP": {
          "type": "string",
          "description": "The publicly accessible IP of the resource.",
          "readOnly": true
        },
        "hostName": {
          "type": "string",
          "description": "FQDN of the service instance.",
          "readOnly": true
        },
        "publicPort": {
          "type": "integer",
          "format": "int32",
          "description": "The publicly accessible port of the resource which is designed for browser/client side usage.",
          "readOnly": true
        },
        "serverPort": {
          "type": "integer",
          "format": "int32",
          "description": "The publicly accessible port of the resource which is designed for customer server side usage.",
          "readOnly": true
        },
        "version": {
          "type": "string",
          "description": "Version of the resource. Probably you need the same or higher version of client SDKs.",
          "readOnly": true
        },
        "privateEndpointConnections": {
          "type": "array",
          "description": "Private endpoint connections to the resource.",
          "items": {
            "$ref": "#/definitions/PrivateEndpointConnection"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        },
        "sharedPrivateLinkResources": {
          "type": "array",
          "description": "The list of shared private link resources.",
          "items": {
            "$ref": "#/definitions/SharedPrivateLinkResource"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        },
        "tls": {
          "$ref": "#/definitions/SignalRTlsSettings",
          "description": "TLS settings for the resource"
        },
        "hostNamePrefix": {
          "type": "string",
          "description": "Deprecated.",
          "readOnly": true
        },
        "features": {
          "type": "array",
          "description": "List of the featureFlags.\n\nFeatureFlags that are not included in the parameters for the update operation will not be modified.\nAnd the response will only include featureFlags that are explicitly set.\nWhen a featureFlag is not explicitly set, its globally default value will be used\nBut keep in mind, the default value doesn't mean \"false\". It varies in terms of different FeatureFlags.",
          "items": {
            "$ref": "#/definitions/SignalRFeature"
          },
          "x-ms-identifiers": []
        },
        "liveTraceConfiguration": {
          "$ref": "#/definitions/LiveTraceConfiguration",
          "description": "Live trace configuration of a Microsoft.SignalRService resource."
        },
        "resourceLogConfiguration": {
          "$ref": "#/definitions/ResourceLogConfiguration",
          "description": "Resource log configuration of a Microsoft.SignalRService resource."
        },
        "cors": {
          "$ref": "#/definitions/SignalRCorsSettings",
          "description": "Cross-Origin Resource Sharing (CORS) settings."
        },
        "serverless": {
          "$ref": "#/definitions/ServerlessSettings",
          "description": "Serverless settings."
        },
        "upstream": {
          "$ref": "#/definitions/ServerlessUpstreamSettings",
          "description": "The settings for the Upstream when the service is in server-less mode."
        },
        "networkACLs": {
          "$ref": "#/definitions/SignalRNetworkACLs",
          "description": "Network ACLs for the resource"
        },
        "applicationFirewall": {
          "$ref": "#/definitions/ApplicationFirewallSettings",
          "description": "Application firewall settings for the resource"
        },
        "publicNetworkAccess": {
          "type": "string",
          "description": "Enable or disable public network access. Default to \"Enabled\".\nWhen it's Enabled, network ACLs still apply.\nWhen it's Disabled, public network access is always disabled no matter what you set in network ACLs.",
          "default": "Enabled"
        },
        "disableLocalAuth": {
          "type": "boolean",
          "description": "DisableLocalAuth\nEnable or disable local auth with AccessKey\nWhen set as true, connection with AccessKey=xxx won't work.",
          "default": false
        },
        "disableAadAuth": {
          "type": "boolean",
          "description": "DisableLocalAuth\nEnable or disable aad auth\nWhen set as true, connection with AuthType=aad won't work.",
          "default": false
        },
        "regionEndpointEnabled": {
          "type": "string",
          "description": "Enable or disable the regional endpoint. Default to \"Enabled\".\nWhen it's Disabled, new connections will not be routed to this endpoint, however existing connections will not be affected.\nThis property is replica specific. Disable the regional endpoint without replica is not allowed.",
          "default": "Enabled"
        },
        "resourceStopped": {
          "type": "string",
          "description": "Stop or start the resource.  Default to \"False\".\nWhen it's true, the data plane of the resource is shutdown.\nWhen it's false, the data plane of the resource is started.",
          "default": "false"
        },
        "routeSettings": {
          "$ref": "#/definitions/RouteSettings",
          "description": "Route settings for the resource"
        }
      }
    },
    "SignalRRequestType": {
      "type": "string",
      "description": "The incoming request type to the service",
      "enum": [
        "ClientConnection",
        "ServerConnection",
        "RESTAPI",
        "Trace"
      ],
      "x-ms-enum": {
        "name": "SignalRRequestType",
        "modelAsString": true,
        "values": [
          {
            "name": "ClientConnection",
            "value": "ClientConnection"
          },
          {
            "name": "ServerConnection",
            "value": "ServerConnection"
          },
          {
            "name": "RESTAPI",
            "value": "RESTAPI"
          },
          {
            "name": "Trace",
            "value": "Trace"
          }
        ]
      }
    },
    "SignalRResource": {
      "type": "object",
      "description": "A class representing a resource.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/SignalRProperties",
          "description": "A class that describes the properties of the resource",
          "x-ms-client-flatten": true
        },
        "sku": {
          "$ref": "#/definitions/ResourceSku",
          "description": "The billing information of the resource."
        },
        "kind": {
          "$ref": "#/definitions/ServiceKind",
          "description": "The kind of the service",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "identity": {
          "$ref": "#/definitions/ManagedIdentity",
          "description": "A class represent managed identities used for request and response"
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v5/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "SignalRResourceList": {
      "type": "object",
      "description": "Object that includes an array of resources and a possible link for next set.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The SignalRResource items on this page",
          "items": {
            "$ref": "#/definitions/SignalRResource"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "SignalRSkuTier": {
      "type": "string",
      "description": "Optional tier of this particular SKU. 'Standard' or 'Free'.\n\n`Basic` is deprecated, use `Standard` instead.",
      "enum": [
        "Free",
        "Basic",
        "Standard",
        "Premium"
      ],
      "x-ms-enum": {
        "name": "SignalRSkuTier",
        "modelAsString": true,
        "values": [
          {
            "name": "Free",
            "value": "Free"
          },
          {
            "name": "Basic",
            "value": "Basic"
          },
          {
            "name": "Standard",
            "value": "Standard"
          },
          {
            "name": "Premium",
            "value": "Premium"
          }
        ]
      }
    },
    "SignalRTlsSettings": {
      "type": "object",
      "description": "TLS settings for the resource",
      "properties": {
        "clientCertEnabled": {
          "type": "boolean",
          "description": "Request client certificate during TLS handshake if enabled. Not supported for free tier. Any input will be ignored for free tier.",
          "default": false
        }
      }
    },
    "SignalRUsage": {
      "type": "object",
      "description": "Object that describes a specific usage of the resources.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Fully qualified ARM resource id"
        },
        "currentValue": {
          "type": "integer",
          "format": "int64",
          "description": "Current value for the usage quota."
        },
        "limit": {
          "type": "integer",
          "format": "int64",
          "description": "The maximum permitted value for the usage quota. If there is no limit, this value will be -1."
        },
        "name": {
          "$ref": "#/definitions/SignalRUsageName",
          "description": "Localizable String object containing the name and a localized value."
        },
        "unit": {
          "type": "string",
          "description": "Representing the units of the usage quota. Possible values are: Count, Bytes, Seconds, Percent, CountPerSecond, BytesPerSecond."
        }
      }
    },
    "SignalRUsageList": {
      "type": "object",
      "description": "Object that includes an array of the resource usages and a possible link for next set.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The SignalRUsage items on this page",
          "items": {
            "$ref": "#/definitions/SignalRUsage"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "SignalRUsageName": {
      "type": "object",
      "description": "Localizable String object containing the name and a localized value.",
      "properties": {
        "value": {
          "type": "string",
          "description": "The identifier of the usage."
        },
        "localizedValue": {
          "type": "string",
          "description": "Localized name of the usage."
        }
      }
    },
    "Sku": {
      "type": "object",
      "description": "Describes an available sku.\"",
      "properties": {
        "resourceType": {
          "type": "string",
          "description": "The resource type that this object applies to",
          "readOnly": true
        },
        "sku": {
          "$ref": "#/definitions/ResourceSku",
          "description": "The billing information of the resource.",
          "readOnly": true
        },
        "capacity": {
          "$ref": "#/definitions/SkuCapacity",
          "description": "Describes scaling information of a sku.",
          "readOnly": true
        }
      }
    },
    "SkuCapacity": {
      "type": "object",
      "description": "Describes scaling information of a sku.",
      "properties": {
        "minimum": {
          "type": "integer",
          "format": "int32",
          "description": "The lowest permitted capacity for this resource",
          "readOnly": true
        },
        "maximum": {
          "type": "integer",
          "format": "int32",
          "description": "The highest permitted capacity for this resource",
          "readOnly": true
        },
        "default": {
          "type": "integer",
          "format": "int32",
          "description": "The default capacity.",
          "readOnly": true
        },
        "allowedValues": {
          "type": "array",
          "description": "Allows capacity value list.",
          "items": {
            "type": "integer",
            "format": "int32"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        },
        "scaleType": {
          "$ref": "#/definitions/ScaleType",
          "description": "The scale type applicable to the sku.",
          "readOnly": true
        }
      }
    },
    "SkuList": {
      "type": "object",
      "description": "The list skus operation response",
      "properties": {
        "value": {
          "type": "array",
          "description": "The list of skus available for the resource.",
          "items": {
            "$ref": "#/definitions/Sku"
          },
          "readOnly": true,
          "x-ms-identifiers": [
            "resourceType",
            "/sku/name",
            "/sku/tier"
          ]
        },
        "nextLink": {
          "type": "string",
          "description": "The URL the client should use to fetch the next page (per server side paging).\nIt's null for now, added for future use.",
          "readOnly": true
        }
      }
    },
    "ThrottleByJwtCustomClaimRule": {
      "type": "object",
      "description": "Throttle the client connection by a custom JWT claim",
      "properties": {
        "claimName": {
          "type": "string",
          "description": "The name of the claim in the JWT token. The client connection with the same claim value will be aggregated. If the claim is not found in the token, the connection will be allowed."
        },
        "maxCount": {
          "type": "integer",
          "format": "int32",
          "description": "Maximum connection count allowed for the same Jwt claim value. Clients with the same Jwt claim will get rejected if the connection count exceeds this value. Default value is 20.",
          "default": 20,
          "minimum": 0,
          "maximum": 2147483647
        }
      },
      "required": [
        "claimName"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/ClientConnectionCountRule"
        }
      ],
      "x-ms-discriminator-value": "ThrottleByJwtCustomClaimRule"
    },
    "ThrottleByJwtSignatureRule": {
      "type": "object",
      "description": "Throttle the client connection by the JWT signature",
      "properties": {
        "maxCount": {
          "type": "integer",
          "format": "int32",
          "description": "Maximum connection count allowed for the same JWT signature. Clients with the same JWT signature will get rejected if the connection count exceeds this value. Default value is 20.",
          "default": 20,
          "minimum": 0,
          "maximum": 2147483647
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ClientConnectionCountRule"
        }
      ],
      "x-ms-discriminator-value": "ThrottleByJwtSignatureRule"
    },
    "ThrottleByUserIdRule": {
      "type": "object",
      "description": "Throttle the client connection by the user ID",
      "properties": {
        "maxCount": {
          "type": "integer",
          "format": "int32",
          "description": "Maximum connection count allowed for the same user ID. Clients with the same user ID will get rejected if the connection count exceeds this value. Default value is 20.",
          "default": 20,
          "minimum": 0,
          "maximum": 2147483647
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ClientConnectionCountRule"
        }
      ],
      "x-ms-discriminator-value": "ThrottleByUserIdRule"
    },
    "TrafficThrottleByJwtCustomClaimRule": {
      "type": "object",
      "description": "Throttle the client traffic by a custom JWT claim",
      "properties": {
        "claimName": {
          "type": "string",
          "description": "The name of the claim in the JWT token. The message bytes with the same claim value will be aggregated. If the claim is not found in the token, the rule will be skipped."
        },
        "maxInboundMessageBytes": {
          "type": "integer",
          "format": "int64",
          "description": "Maximum accumulated inbound message bytes allowed for the same JWT signature within a time window. Clients with the same JWT claim will get disconnected if the message bytes exceeds this value. Default value is 1GB.",
          "minimum": 0
        },
        "aggregationWindowInSeconds": {
          "type": "integer",
          "format": "int32",
          "description": "The aggregation window for the message bytes. The message bytes will be aggregated in this window and be reset after the window. Default value is 60 seconds.",
          "default": 60,
          "minimum": 10,
          "maximum": 3600
        }
      },
      "required": [
        "claimName"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/ClientTrafficControlRule"
        }
      ],
      "x-ms-discriminator-value": "TrafficThrottleByJwtCustomClaimRule"
    },
    "TrafficThrottleByJwtSignatureRule": {
      "type": "object",
      "description": "Throttle the client traffic by the JWT signature",
      "properties": {
        "maxInboundMessageBytes": {
          "type": "integer",
          "format": "int64",
          "description": "Maximum accumulated inbound message bytes allowed for the same JWT signature within a time window. Clients with the same JWT signature will get disconnected if the message bytes exceeds this value. Default value is 1GB.",
          "minimum": 0
        },
        "aggregationWindowInSeconds": {
          "type": "integer",
          "format": "int32",
          "description": "The aggregation window for the message bytes. The message bytes will be aggregated in this window and be reset after the window. Default value is 60 seconds.",
          "default": 60,
          "minimum": 10,
          "maximum": 3600
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ClientTrafficControlRule"
        }
      ],
      "x-ms-discriminator-value": "TrafficThrottleByJwtSignatureRule"
    },
    "TrafficThrottleByUserIdRule": {
      "type": "object",
      "description": "Throttle the client traffic by the user ID",
      "properties": {
        "maxInboundMessageBytes": {
          "type": "integer",
          "format": "int64",
          "description": "Maximum accumulated inbound message bytes allowed for the same user ID within a time window. Clients with the same user ID will get disconnected if the message bytes exceeds this value. Default value is 1GB.",
          "minimum": 0
        },
        "aggregationWindowInSeconds": {
          "type": "integer",
          "format": "int32",
          "description": "The aggregation window for the message bytes. The message bytes will be aggregated in this window and be reset after the window. Default value is 60 seconds.",
          "default": 60,
          "minimum": 10,
          "maximum": 3600
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ClientTrafficControlRule"
        }
      ],
      "x-ms-discriminator-value": "TrafficThrottleByUserIdRule"
    },
    "UpstreamAuthSettings": {
      "type": "object",
      "description": "Upstream auth settings. If not set, no auth is used for upstream messages.",
      "properties": {
        "type": {
          "$ref": "#/definitions/UpstreamAuthType",
          "description": "Upstream auth type enum."
        },
        "managedIdentity": {
          "$ref": "#/definitions/ManagedIdentitySettings",
          "description": "Managed identity settings for upstream."
        }
      }
    },
    "UpstreamAuthType": {
      "type": "string",
      "description": "Upstream auth type enum.",
      "enum": [
        "None",
        "ManagedIdentity"
      ],
      "x-ms-enum": {
        "name": "UpstreamAuthType",
        "modelAsString": true,
        "values": [
          {
            "name": "None",
            "value": "None"
          },
          {
            "name": "ManagedIdentity",
            "value": "ManagedIdentity"
          }
        ]
      }
    },
    "UpstreamTemplate": {
      "type": "object",
      "description": "Upstream template item settings. It defines the Upstream URL of the incoming requests.\nThe template defines the pattern of the event, the hub or the category of the incoming request that matches current URL template.",
      "properties": {
        "hubPattern": {
          "type": "string",
          "description": "Gets or sets the matching pattern for hub names. If not set, it matches any hub.\nThere are 3 kind of patterns supported:\n1. \"*\", it to matches any hub name.\n2. Combine multiple hubs with \",\", for example \"hub1,hub2\", it matches \"hub1\" and \"hub2\".\n3. The single hub name, for example, \"hub1\", it matches \"hub1\"."
        },
        "eventPattern": {
          "type": "string",
          "description": "Gets or sets the matching pattern for event names. If not set, it matches any event.\nThere are 3 kind of patterns supported:\n1. \"*\", it to matches any event name.\n2. Combine multiple events with \",\", for example \"connect,disconnect\", it matches event \"connect\" and \"disconnect\".\n3. The single event name, for example, \"connect\", it matches \"connect\"."
        },
        "categoryPattern": {
          "type": "string",
          "description": "Gets or sets the matching pattern for category names. If not set, it matches any category.\nThere are 3 kind of patterns supported:\n1. \"*\", it to matches any category name.\n2. Combine multiple categories with \",\", for example \"connections,messages\", it matches category \"connections\" and \"messages\".\n3. The single category name, for example, \"connections\", it matches the category \"connections\"."
        },
        "urlTemplate": {
          "type": "string",
          "description": "Gets or sets the Upstream URL template. You can use 3 predefined parameters {hub}, {category} {event} inside the template, the value of the Upstream URL is dynamically calculated when the client request comes in.\nFor example, if the urlTemplate is `http://example.com/{hub}/api/{event}`, with a client request from hub `chat` connects, it will first POST to this URL: `http://example.com/chat/api/connect`."
        },
        "auth": {
          "$ref": "#/definitions/UpstreamAuthSettings",
          "description": "Upstream auth settings. If not set, no auth is used for upstream messages."
        }
      },
      "required": [
        "urlTemplate"
      ]
    },
    "UserAssignedIdentityProperty": {
      "type": "object",
      "description": "Properties of user assigned identity.",
      "properties": {
        "principalId": {
          "type": "string",
          "description": "Get the principal id for the user assigned identity",
          "readOnly": true
        },
        "clientId": {
          "type": "string",
          "description": "Get the client id for the user assigned identity",
          "readOnly": true
        }
      }
    }
  },
  "parameters": {}
}
