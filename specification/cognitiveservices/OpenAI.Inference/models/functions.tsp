import "@typespec/versioning";

namespace Azure.OpenAI;

using TypeSpec.Versioning;

@doc("Specify the name of the only function to call.")
@added(ServiceApiVersions.v2023_07_01_Preview)
model FunctionName {
  @doc("The name of the function to call.")
  name: string;
}

@doc("Preset values to contro how the mode; responds to function calls.")
@added(ServiceApiVersions.v2023_07_01_Preview)
enum FunctionCallPreset {
  @doc("Means the model can pick between an end-user or calling a function.")
  auto: "auto",

  @doc("Means the model does not call a function, and responds to the end-user")
  none: "none",
}

#suppress "@azure-tools/typespec-autorest/union-unsupported" "External API shape is defined in OpenAPI 3.0 as oneOf."
alias FunctionCallConfig = FunctionCallPreset | FunctionName;

@doc("""
  The definition of a function that can be called by the model.
  See the [guide](/docs/guides/gpt/function-calling) for examples.
  """)
@added(ServiceApiVersions.v2023_07_01_Preview)
model FunctionDefinition {
  @doc("""
      The name of the function to be called. Must be a-z, A-Z, 0-9, or contain underscores and dashes,
      with a maximum length of 64.
      """)
  name: string;

  @doc("The description of what the function does.")
  description?: string;

  #suppress "@azure-tools/typespec-azure-core/bad-record-type" "External API shape takes an arbitrary json"
  @doc("""
      The parameters the functions accepts, described as a JSON Schema object.
      See the [guide](/docs/guides/gpt/function-calling) for examples, and the [JSON Schema reference](https://json-schema.org/understanding-json-schema/)
      for documentation about the format.
      """)
  parameters?: Record<unknown>;
}

@doc("The name and arguments of a function that should be called, as generated by the model.")
@added(ServiceApiVersions.v2023_07_01_Preview)
model FunctionCall {
  @doc("The name of the function to call.")
  name: string;

  @doc("""
      The arguments to call the function with, as generated by the model in JSON format.
      Note that the model does not always generate valid JSON, and may hallucinate parameters
      not defined by your function schema. Validate the arguments in your code before calling
      your function.
      """)
  parameters: string;
}
