import "@azure-tools/typespec-azure-core";
import "@typespec/http";
import "@typespec/versioning";

using Azure.Core;
using TypeSpec.Http;
using TypeSpec.Versioning;

namespace Azure.OpenAI;

@doc("The desired size of the generated images. Must be one of 256x256, 512x512, or 1024x1024.")
@added(ServiceApiVersions.v2023_06_01_Preview)
enum ImageSize {
  @doc("Image size of 256x256.")
  Size256x256: "256x256",

  @doc("Image size of 512x512.")
  Size512x512: "512x512",

  @doc("Image size of 1024x1024.")
  Size1024x1024: "1024x1024",
}

@doc("Represents the request data used to generate images.")
@added(ServiceApiVersions.v2023_06_01_Preview)
model ImageGenerationOptions {
  @doc("A description of the desired images.")
  prompt: string;

  @doc("The number of images to generate (defaults to 1).")
  n?: int32 = 1;

  @doc("The desired size of the generated images. Must be one of 256x256, 512x512, or 1024x1024 (defaults to 1024x1024).")
  size?: ImageSize = ImageSize.Size1024x1024;

  @doc("A unique identifier representing your end-user, which can help to monitor and detect abuse.")
  user?: string;
}

@doc("The image url if successful, and an error otherwise.")
@added(ServiceApiVersions.v2023_06_01_Preview)
model ImageLocation {
  @doc("The URL that provides temporary access to download the generated image.")
  url?: url;

  @doc("The error if the operation failed.")
  error?: Foundations.Error;
}

@doc("The result of the operation if the operation succeeded.")
@added(ServiceApiVersions.v2023_06_01_Preview)
model ImageResponse {
  @doc("A timestamp when this job or item was created (in unix epochs).")
  created: int64;

  @doc("The images generated by the operator.")
  data: ImageLocation[];
}

@doc("The result of the operation if the operation succeeded.")
@added(ServiceApiVersions.v2023_06_01_Preview)
model ImageOperationResponse {
  @doc("The ID of the operation.")
  id: string;

  @doc("A timestamp when this job or item was created (in unix epochs).")
  created: int64;

  @doc("A timestamp when this operation and its associated images expire and will be deleted (in unix epochs).")
  expires?: int64;

  @doc("The result of the operation if the operation succeeded.")
  result?: ImageResponse;

  @doc("The status of the operation")
  status: State;

  @doc("The error if the operation failed.")
  error?: Foundations.Error;
}

@lroStatus
@doc("The state of a job or item.")
@added(ServiceApiVersions.v2023_06_01_Preview)
enum State {
  @doc("The operation was created and is queued to be processed in the future.")
  notRunning,

  @doc("The operation has started to be processed.")
  running,

  @lroSucceeded
  @doc("The operation has successfully be processed and is ready for consumption.")
  succeeded,

  @lroCanceled
  @doc("The operation has been canceled and is incomplete.")
  canceled,

  @lroFailed
  @doc("The operation has completed processing with a failure and cannot be further consumed.")
  failed,
}

@doc("Provides status details for long running operations.")
@added(ServiceApiVersions.v2023_06_01_Preview)
model ImageOperationStatus {
  @key("operationId")
  @visibility("read", "query")
  @doc("The unique ID of the operation.")
  id: string;

  @doc("The status of the operation")
  status: State;
}

#suppress "@azure-tools/typespec-azure-core/long-running-polling-operation-required" "template"
@Foundations.Private.needsRoute
@post
@doc("Long running operation template to match Azure OpenAI .")
op OaiLongRunningRpcOperation<
  TParams extends TypeSpec.Reflection.Model,
  TResponse extends TypeSpec.Reflection.Model,
  TStatusResult extends TypeSpec.Reflection.Model,
  TStatusError = Foundations.Error,
  Traits extends TypeSpec.Reflection.Model = {},
  TErrorResponse = Azure.Core.Foundations.ErrorResponse
> is Foundations.Operation<
  TParams &
    Azure.Core.Traits.Private.TraitProperties<
      Traits,
      Azure.Core.Traits.TraitLocation.Parameters
    >,
  Azure.Core.Foundations.AcceptedResponse &
    TResponse &
    Foundations.LongRunningStatusLocation<TStatusResult> &
    Azure.Core.Traits.Private.TraitProperties<
      Traits,
      Azure.Core.Traits.TraitLocation.Response
    >,
  Traits,
  TErrorResponse
>;
