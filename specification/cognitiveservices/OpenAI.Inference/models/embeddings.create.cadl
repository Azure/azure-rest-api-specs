import "@cadl-lang/rest";

using Cadl.Rest;
using Cadl.Http;

namespace Azure.OpenAI;

@doc("Embedding request body schema")
model EmbeddingsRequest {
    @doc("The ID of the end-user, for use in tracking and rate-limiting.")
    user?: string;

    @doc("input type of embedding search to use")
    inputType?: string;

    @doc("ID of the model to use")
    "model"?: string;

    @doc("""
    An input to embed, encoded as a string, a list of strings, or a list of token
    lists
    """)
    input: EmbeddingsInput;
    // https://stackoverflow.com/questions/70112647/equivalent-use-of-oneof-from-openapi-3-in-openapi-2
    // we technically have string, string[], integer[], and integer[][]
    // but since we are targeting openAPIv2 we are not able to use polymorphism effectively, we need to simply
    // have a typeless object as part of the response
}

@doc("Embedding request body schema, base fields")
model EmbeddingsInput {
}
