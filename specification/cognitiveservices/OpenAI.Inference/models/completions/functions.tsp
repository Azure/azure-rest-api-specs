import "@typespec/versioning";

namespace Azure.OpenAI;

using TypeSpec.Versioning;

@doc("""
A structure that specifies the exact name of a specific, request-provided function to use when processing a chat
completions operation.
""")
@added(ServiceApiVersions.v2023_07_01_Preview)
model FunctionName {
  @doc("The name of the function to call.")
  name: string;
}

@doc("""
The collection of predefined behaviors for handling request-provided function information in a chat completions
operation.
""")
@added(ServiceApiVersions.v2023_07_01_Preview)
enum FunctionCallPreset {
  @doc("""
  Specifies that the model may either use any of the functions provided in this chat completions request or
  instead return a standard chat completions response as if no functions were provided.
  """)
  auto: "auto",

  @doc("""
  Specifies that the model should not respond with a function call and should instead provide a standard chat
  completions response. Response content may still be influenced by the provided function information.
  """)
  none: "none",
}

#suppress "@azure-tools/typespec-autorest/union-unsupported" "External API shape is defined in OpenAPI 3.0 as oneOf."
alias FunctionCallConfig = FunctionCallPreset | FunctionName;

@doc("""
The definition of a caller-specified function that chat completions may invoke in response to matching user input.
""")
@added(ServiceApiVersions.v2023_07_01_Preview)
model FunctionDefinition {
  @doc("The name of the function to be called.")
  name: string;

  @doc("""
  A description of what the function does. The model will use this description when selecting the function and
  interpreting its parameters.
  """)
  description?: string;

  #suppress "@azure-tools/typespec-azure-core/no-unknown" "External API shape takes an arbitrary json"
  @doc("The parameters the function accepts, described as a JSON Schema object.")
  parameters?: unknown;
}

@doc("The name and arguments of a function that should be called, as generated by the model.")
@added(ServiceApiVersions.v2023_07_01_Preview)
model FunctionCall {
  @doc("The name of the function to call.")
  name: string;

  @doc("""
  The arguments to call the function with, as generated by the model in JSON format.
  Note that the model does not always generate valid JSON, and may hallucinate parameters
  not defined by your function schema. Validate the arguments in your code before calling
  your function.
  """)
  arguments: string;
}
