{
  "swagger": "2.0",
  "info": {
    "title": "Microsoft Cognitive Language Service - Generate Question and Answer pairs ",
    "version": "2022-10-01-preview",
    "description": "The language service API is a suite of natural language processing (NLP) skills\nbuilt with best-in-class Microsoft machine learning algorithms.  The API can be\nused to analyze unstructured text for tasks such as sentiment analysis, key\nphrase extraction, language detection, question answering and question answers\ngeneration. Further documentation can be found in <a\nhref=\"https://docs.microsoft.com/en-us/azure/cognitive-services/text-analytics/overview\">https://docs.microsoft.com/en-us/azure/cognitive-services/text-analytics/overview</a>.",
    "x-cadl-generated": [
      {
        "emitter": "@azure-tools/cadl-autorest"
      }
    ]
  },
  "schemes": [
    "https"
  ],
  "x-ms-parameterized-host": {
    "hostTemplate": "{Endpoint}/language",
    "useSchemePrefix": false,
    "parameters": [
      {
        "name": "Endpoint",
        "in": "path",
        "required": true,
        "description": "Supported Cognitive Services endpoint (e.g.,\nhttps://RESOURCE-NAME.api.cognitiveservices.azure.com).",
        "type": "string"
      }
    ]
  },
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "security": [
    {
      "ApiKeyAuth": []
    }
  ],
  "securityDefinitions": {
    "ApiKeyAuth": {
      "type": "apiKey",
      "in": "header",
      "name": "Ocp-Apim-Subscription-Key"
    }
  },
  "tags": [],
  "paths": {
    "/generate-questionanswers": {
      "post": {
        "operationId": "GenerateQuestionAnswersOperations_SubmitJob",
        "summary": "Generate Question and Answers from a set of documents.",
        "description": "Generate Question and Answers from a set of documents.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "RequestBody",
            "in": "body",
            "required": true,
            "description": "The request body",
            "schema": {
              "$ref": "#/definitions/GenerationRequest"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "The request has been accepted for processing, but processing has not yet completed.",
            "headers": {
              "Operation-Location": {
                "description": "The location of an instance of OperationStatus",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Succesfull QAGeneration Request": {
            "$ref": "./examples/SuccesfulSubmitQAGeneration_URL.json"
          },
          "Succesful Marked Answer QAGeneration Request": {
            "$ref": "./examples/SuccessfulQAGenerationJob_UseMarkedAnswer.json"
          }
        }
      }
    },
    "/generate-questionanswers/jobs/{JobId}": {
      "get": {
        "operationId": "GenerateQuestionAnswersOperations_GetJobStatus",
        "summary": "Gets the status of a question answers generation job.",
        "description": "Gets the status of a question answers generation job.",
        "parameters": [
          {
            "$ref": "#/parameters/JobIdParameter"
          },
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/GenerationJobState"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Sucesful QAGeneration JOB": {
            "$ref": "/examples/SuccessfulQAGenerationJobStatus_URL.json"
          },
          "Sucesful Marked Answer QAGeneration JOB Response": {
            "$ref": "/examples/SuccessfulQAGenerationJobStatus_UseMarkedAnswer.json"
          }
        }
      }
    }
  },
  "definitions": {
    "Azure.Core.Foundations.Error": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "description": "One of a server-defined set of error codes."
        },
        "message": {
          "type": "string",
          "description": "A human-readable representation of the error."
        },
        "target": {
          "type": "string",
          "description": "The target of the error."
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Azure.Core.Foundations.Error"
          },
          "x-ms-identifiers": [],
          "x-cadl-name": "Azure.Core.Foundations.Error[]",
          "description": "An array of details about specific errors that led to this reported error."
        },
        "innererror": {
          "$ref": "#/definitions/Azure.Core.Foundations.InnerError",
          "description": "An object containing more specific information than the current object about the error."
        }
      },
      "description": "The error object.",
      "required": [
        "code",
        "message",
        "details"
      ]
    },
    "Azure.Core.Foundations.ErrorResponse": {
      "type": "object",
      "properties": {
        "error": {
          "$ref": "#/definitions/Azure.Core.Foundations.Error",
          "description": "The error object."
        }
      },
      "description": "A response containing error details.",
      "required": [
        "error"
      ]
    },
    "Azure.Core.Foundations.InnerError": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "description": "One of a server-defined set of error codes."
        },
        "innererror": {
          "$ref": "#/definitions/Azure.Core.Foundations.InnerError",
          "description": "Inner error."
        }
      },
      "description": "An object containing more specific information about the error. As per Microsoft One API guidelines - https://github.com/Microsoft/api-guidelines/blob/vNext/Guidelines.md#7102-error-condition-responses.",
      "required": [
        "code"
      ]
    },
    "DocumentKind": {
      "type": "string",
      "enum": [
        "Raw",
        "URL",
        "HTML"
      ],
      "x-ms-enum": {
        "name": "DocumentKind",
        "modelAsString": true,
        "values": [
          {
            "name": "Raw",
            "value": "Raw"
          },
          {
            "name": "URL",
            "value": "URL"
          },
          {
            "name": "Html",
            "value": "HTML"
          }
        ]
      }
    },
    "Error": {
      "type": "object",
      "properties": {
        "code": {
          "$ref": "#/definitions/ErrorCode",
          "description": "One of a server-defined set of error codes."
        },
        "message": {
          "type": "string",
          "description": "A human-readable representation of the error."
        },
        "target": {
          "type": "string",
          "description": "The target of the error."
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "x-ms-identifiers": [],
          "x-cadl-name": "Error[]",
          "description": "An array of details about specific errors that led to this reported error."
        },
        "innererror": {
          "$ref": "#/definitions/InnerErrorModel",
          "description": "An object containing more specific information than the current object about\nthe error."
        }
      },
      "description": "The error object.",
      "required": [
        "code",
        "message"
      ]
    },
    "ErrorCode": {
      "type": "string",
      "enum": [
        "InvalidRequest",
        "InvalidArgument",
        "Unauthorized",
        "Forbidden",
        "NotFound",
        "ProjectNotFound",
        "OperationNotFound",
        "AzureCognitiveSearchNotFound",
        "AzureCognitiveSearchIndexNotFound",
        "TooManyRequests",
        "AzureCognitiveSearchThrottling",
        "AzureCognitiveSearchIndexLimitReached",
        "InternalServerError",
        "ServiceUnavailable",
        "Timeout",
        "QuotaExceeded",
        "Conflict",
        "Warning"
      ],
      "x-ms-enum": {
        "name": "ErrorCode",
        "modelAsString": true
      }
    },
    "GeneratedQA": {
      "type": "object",
      "properties": {
        "question": {
          "type": "string",
          "description": "A question generated for a specific answer from a document in the job."
        },
        "answer": {
          "type": "string",
          "description": "Entity or phrase which is the answer to the generated question from a\nparticular document in the job."
        },
        "confidenceScore": {
          "type": "number",
          "format": "float",
          "description": "Confidence score of a question generated against the answer in the document's\ncontent."
        },
        "confidenceBucket": {
          "type": "string",
          "description": "Confidence bucket of a question generated against the answer in the document's\ncontent. Possible values &quot;low&quot;, &quot;medium&quot;, &quot;high&quot;."
        },
        "documentId": {
          "type": "string",
          "description": "A unique, non-empty document identifier, GUID will be assigned if user had not\nprovided Id in job request."
        }
      },
      "description": "Question and Answer generated from the document."
    },
    "GenerationDocument": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "A unique, non-empty document identifier."
        },
        "content": {
          "type": "string",
          "description": "The input text, html or URL to process."
        },
        "documentKind": {
          "$ref": "#/definitions/DocumentKind",
          "description": "Document type."
        },
        "language": {
          "type": "string",
          "description": "(Optional) This is the 2 letter ISO 639-1 representation of a language. For\nexample, use \"en\" for English; \"es\" for Spanish etc. If not set, use \"en\"\nfor English as default."
        }
      },
      "description": "An input document to be processed for question answer generation.",
      "required": [
        "id",
        "content",
        "documentKind"
      ]
    },
    "GenerationJobState": {
      "type": "object",
      "properties": {
        "displayName": {
          "type": "string"
        },
        "createdDateTime": {
          "type": "string",
          "format": "date-time"
        },
        "expirationDateTime": {
          "type": "string",
          "format": "date-time"
        },
        "JobId": {
          "type": "string"
        },
        "lastUpdatedDateTime": {
          "type": "string",
          "format": "date-time"
        },
        "status": {
          "$ref": "#/definitions/State"
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "x-ms-identifiers": [],
          "x-cadl-name": "Error[]"
        },
        "nextLink": {
          "type": "string"
        },
        "result": {
          "$ref": "#/definitions/GenerationResult",
          "description": "Result of question answer generation job."
        }
      },
      "description": "Generation Job state represents the job metadata and any errors and a result\nobject if job succeeded.",
      "required": [
        "createdDateTime",
        "JobId",
        "lastUpdatedDateTime",
        "status"
      ]
    },
    "GenerationParameters": {
      "type": "object",
      "properties": {
        "fetchRawContent": {
          "type": "boolean",
          "description": "Enable to fetch raw contents of document in the result."
        },
        "useMarkedAnswer": {
          "type": "boolean",
          "description": "Specify this as true - if the documents have marker tags &lt;answer&gt; and\n&lt;/answer&gt; for marked answers. Example: Satya Nadella was born in\n&lt;answer&gt; Hyderabad &lt;/answer&gt; of present-day Telangana, India into a\nTelugu-speaking Hindu family."
        },
        "maxQACount": {
          "type": "integer",
          "format": "int32",
          "description": "Maximum number of question answer pairs to be generated."
        }
      },
      "description": "Parameters for configuring question answers generation and limiting the output."
    },
    "GenerationRequest": {
      "type": "object",
      "properties": {
        "documents": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GenerationDocument"
          },
          "x-cadl-name": "GenerationDocument[]",
          "description": "The set of documents to process as part of question answers generation job."
        },
        "parameters": {
          "$ref": "#/definitions/GenerationParameters",
          "description": "Parameters that define max number of question answers to be generated, fetch\nraw contents of documents or not, etc."
        }
      },
      "description": "Question Answers Generation job with documents and parameters."
    },
    "GenerationResult": {
      "type": "object",
      "properties": {
        "documents": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GenerationDocument"
          },
          "x-cadl-name": "GenerationDocument[]",
          "description": "The set of documents with processed raw contents."
        },
        "value": {
          "type": "array",
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/GeneratedQA"
            },
            "x-ms-identifiers": [],
            "x-cadl-name": "GeneratedQA[]"
          },
          "x-ms-identifiers": [],
          "x-cadl-name": "GeneratedQA[][]",
          "description": "The set of question and answers generated in the generation job."
        }
      },
      "description": "Result of question answer generation job."
    },
    "InnerErrorCode": {
      "type": "string",
      "enum": [
        "InvalidRequest",
        "InvalidParameterValue",
        "KnowledgeBaseNotFound",
        "AzureCognitiveSearchNotFound",
        "AzureCognitiveSearchThrottling",
        "ExtractionFailure",
        "InvalidRequestBodyFormat",
        "EmptyRequest",
        "MissingInputDocuments",
        "InvalidDocument",
        "ModelVersionIncorrect",
        "InvalidDocumentBatch",
        "UnsupportedLanguageCode",
        "InvalidCountryHint"
      ],
      "x-ms-enum": {
        "name": "InnerErrorCode",
        "modelAsString": true
      }
    },
    "InnerErrorModel": {
      "type": "object",
      "properties": {
        "code": {
          "$ref": "#/definitions/InnerErrorCode",
          "description": "One of a server-defined set of error codes."
        },
        "message": {
          "type": "string",
          "description": "Error message."
        },
        "details": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-cadl-name": "Record<string>",
          "description": "Error details."
        },
        "target": {
          "type": "string",
          "description": "Error target."
        },
        "innererror": {
          "$ref": "#/definitions/InnerErrorModel",
          "description": "An object containing more specific information than the current object about\nthe error."
        }
      },
      "description": "An object containing more specific information about the error. As per\nMicrosoft One API guidelines -\nhttps://github.com/Microsoft/api-guidelines/blob/vNext/Guidelines.md#7102-error-condition-responses.",
      "required": [
        "code",
        "message"
      ]
    },
    "State": {
      "type": "string",
      "enum": [
        "notStarted",
        "running",
        "succeeded",
        "partiallyCompleted",
        "failed",
        "cancelled",
        "cancelling"
      ],
      "x-ms-enum": {
        "name": "State",
        "modelAsString": true,
        "values": [
          {
            "name": "NotStarted",
            "value": "notStarted"
          },
          {
            "name": "Running",
            "value": "running"
          },
          {
            "name": "Succeeded",
            "value": "succeeded"
          },
          {
            "name": "PartiallyCompleted",
            "value": "partiallyCompleted"
          },
          {
            "name": "Failed",
            "value": "failed"
          },
          {
            "name": "Cancelled",
            "value": "cancelled"
          },
          {
            "name": "Cancelling",
            "value": "cancelling"
          }
        ]
      }
    }
  },
  "parameters": {
    "Azure.Core.Foundations.ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "required": true,
      "description": "The API version to use for this operation.",
      "minLength": 1,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "JobIdParameter": {
      "name": "JobId",
      "in": "path",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    }
  }
}
