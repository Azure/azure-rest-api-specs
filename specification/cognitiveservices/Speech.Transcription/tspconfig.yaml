parameters:
  "service-dir":
    default: "sdk/cognitiveservices"
emit:
  - "@azure-tools/typespec-autorest"
linter:
  extends:
    - "@azure-tools/typespec-azure-rulesets/data-plane"
options:
  "@azure-tools/typespec-autorest":
    # Intentionally not overwriting the data-plane spec files & gitignoring the output of this emitter
    # since this specification is only intended for generating the SDK for now
    azure-resource-provider-folder: "data-plane"
    emitter-output-dir: "{project-root}/tsp-output"
    omit-unreachable-types: true
    output-file: "{azure-resource-provider-folder}/@azure-tools/typespec-autorest/{version-status}/{version}/Transcription.json"
  "@azure-tools/typespec-csharp":
    emitter-output-dir: "{output-dir}/{service-dir}/Azure.AI.Speech.Transcription"
    clear-output-folder: true
    namespace: "Azure.AI.Speech.Transcription"
    model-namespace: false
    flavor: azure
    generate-protocol-methods: true
    generate-convenience-methods: true
  "@azure-tools/typespec-java":
    namespace: com.azure.ai.speech.transcription
    partial-update: true
    emitter-output-dir: "{output-dir}/{service-dir}/azure-ai-speech-transcription"
    flavor: azure
  "@azure-tools/typespec-python":
    package-version: "1.0.0"
    package-name: "azure-ai-speech-transcription"
    package-pprint-name: '"Azure AI Speech Transcription"'
    emitter-output-dir: "{output-dir}/{service-dir}/azure-ai-speech-transcription"
    flavor: azure
    generate-test: true
    generate-sample: true
  "@azure-tools/typespec-ts":
    emitter-output-dir: "{output-dir}/{service-dir}/azure-ai-speech-transcription"
    is-modular-library: true
    package-details:
      name: "@azure/azure-ai-speech-transcription"
    flavor: modular
  "@azure-tools/typespec-go":
    emitter-output-dir: "{output-dir}/{service-dir}/azspeechtranscription"
    module: "github.com/Azure/azure-sdk-for-go/{service-dir}/azspeechtranscription"
    generate-fakes: true
    inject-spans: true
    single-client: true
    flavor: azure
