{
  "swagger": "2.0",
  "info": {
    "title": "Content Moderator Client",
    "version": "1.1-preview",
    "description": "[Description]"
  },
  "securityDefinitions": {
    "apim_key": {
      "type": "apiKey",
      "name": "Ocp-Apim-Subscription-Key",
      "in": "header"
    }
  },
  "security": [
    {
      "apim_key": []
    }
  ],
  "paths": {
    "/contentmoderator/moderate/v1.1-preview/text/detect": {
      "post": {
        "tags": [
          "Text"
        ],
        "summary": "Text Detect",
        "description": "A sync API for text detection",
        "operationId": "Text_Detect",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "x-ms-long-running-operation": true,
        "parameters": [
          {
            "$ref": "#/parameters/Locale"
          },
          {
            "name": "textDetectRequest",
            "in": "body",
            "description": "Text detect request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TextDetectRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Status 200",
            "schema": {
              "$ref": "#/definitions/TextDetectResponse"
            }
          },
          "default": {
            "description": "Client error or server error (4xx or 5xx)",
            "schema": {
              "$ref": "#/definitions/ErrorCode"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "TextCategory": {
      "type": "string",
      "x-nullable": false,
      "enum": [
        "DisInfoTopics",
        "HateSpeech",
        "PII",
        "Profanity",
        "SelfHarm",
        "SensitiveTopics",
        "Sexual",
        "Violence"
      ],
      "x-ms-enum": {
        "name": "TextCategory",
        "modelAsString": false
      }
    },
    "TextDetectMode": {
      "type": "string",
      "x-nullable": false,
      "enum": [
        "Quick",
        "Normal"
      ],
      "default": "Normal",
      "x-ms-enum": {
        "name": "TextDetectMode",
        "modelAsString": false
      }
    },
    "ModelOutputDetailKVPair": {
      "type": "object",
      "required": [
        "key", 
        "value",
        "valueType"
        ],
      "properties": {
        "key": {
          "type": "string"
        },
        "value": {
          "type": "string"
        },
        "valueType": {
          "type": "string",
          "x-nullable": false,
          "enum": [
            "Number",
            "Boolean",
            "String"
          ],
          "x-ms-enum": {
            "name": "ValueType",
            "modelAsString": false
          }
        }
      }
    },
    "ModelOutputDetail": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/ModelOutputDetailKVPair"
      }
    },
    "BasicTextDetectResult":{
      "type": "object",
      "required": ["category", "isDetected"],
      "properties": {
        "textDetectResultType": {
          "type": "string",
          "description": "Whether the text is detected as a whole or has masks",
          "x-nullable": false,
          "enum": [
            "Whole",
            "Masked"
          ],
          "x-ms-enum": {
            "name": "textDetectResultType",
            "modelAsString": false
          }
        },
        "category": {
          "$ref": "#/definitions/TextCategory"
        },
        "isDetected": {
          "type": "boolean",
          "description": "Whether this category is detected in input text"
        }
      },
      "discriminator": "textDetectResultType"
    },
    "WholeTextDetectResult": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BasicTextDetectResult"
        }
      ],
      "properties": {
        "modelOutputDetail": {
          "$ref": "#/definitions/ModelOutputDetail"
        }
      },
      "x-ms-discriminator-value": "Whole"
    },
    "MaskedTextDetectResult": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BasicTextDetectResult"
        }
      ],
      "properties": {
        "masks": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "start": {
                "description": "Inclusive start offset of mask",
                "type": "integer"
              },
              "end": {
                "description": "Exclusive end offset of mask",
                "type": "integer"
              },
              "modelOutputDetail": {
                "$ref": "#/definitions/ModelOutputDetail"
              }
            }
          }
        }
      },
      "x-ms-discriminator-value": "Masked"
    },
    "TextDetectRequest": {
      "description": "The text detect request",
      "type": "object",
      "required": [
        "text"
      ],
      "properties": {
        "text": {
          "type": "string",
          "description": "The text need to perform detection"
        },
        "categories": {
          "type": "array",
          "description": "The categories will be detected, if not assigned, all the categories will be detected",
          "items": {
            "$ref": "#/definitions/TextCategory"
          }
        },
        "detectMode": {
          "$ref": "#/definitions/TextDetectMode"
        }
      }
    },
    "TextDetectResponse": {
      "type": "object",
      "required": ["detectResults"],
      "properties": {
        "wholeTextDetectResults": {
          "type": "array",
          "items": {
              "$ref": "#/definitions/WholeTextDetectResult"
            }
        },
        "maskedTextDetectResults": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MaskedTextDetectResult"
          }
        }
      }
    },
    "ErrorCode": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        },
        "code": {
          "type": "string"
        }
      }
    }
  },
  "parameters": {
    "Endpoint": {
      "name": "endpoint",
      "description": "Supported Cognitive Services endpoints (protocol and hostname, for example: https://<resource-name>.cognitiveservices.azure.com).",
      "x-ms-parameter-location": "client",
      "required": true,
      "type": "string",
      "in": "path",
      "x-ms-skip-url-encoding": true
    },
    "Locale": {
      "name": "locale",
      "description": "Locale hint for text recognition and document analysis.  Value may contain only the language code (ex. \"en\", \"fr\") or BCP 47 language tag (ex. \"en-US\").",
      "required": false,
      "type": "string",
      "in": "query",
      "x-ms-parameter-location": "method"
    }
  },
  "x-ms-parameterized-host": {
    "hostTemplate": "{endpoint}/contentmoderator/moderate/v1.1-preview",
    "useSchemePrefix": false,
    "parameters": [
      {
        "$ref": "#/parameters/Endpoint"
      }
    ]
  }
}
