{
  "swagger": "2.0",
  "info": {
    "title": "Content Moderator Client",
    "version": "2022-09-30-preview",
    "description": "Detect harmful content"
  },
  "securityDefinitions": {
    "apim_key": {
      "type": "apiKey",
      "name": "Ocp-Apim-Subscription-Key",
      "in": "header"
    }
  },
  "security": [
    {
      "apim_key": []
    }
  ],
  "basePath": "/contentmoderator/moderate",
  "paths": {
    "/text/detect": {
      "post": {
        "tags": [
          "Text"
        ],
        "summary": "Text Detect",
        "description": "A sync API for harmful content detection",
        "operationId": "Text_Detect",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "x-ms-long-running-operation": true,
        "parameters": [
          {
            "$ref": "#/parameters/Locale"
          },
          {
            "$ref": "#/parameters/QueryApiVersion"
          },
          {
            "name": "textDetectRequest",
            "in": "body",
            "description": "The detection request of the text",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TextDetectRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Status 200",
            "schema": {
              "$ref": "#/definitions/TextDetectResponse"
            }
          },
          "default": {
            "description": "Client error or server error (4xx or 5xx)",
            "schema": {
              "$ref": "#/definitions/ErrorCode"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "TextCategory": {
      "type": "string",
      "x-nullable": false,
      "enum": [
        "HateSpeech",
        "PII",
        "Profanity",
        "SelfHarm",
        "Sexual",
        "Violence"
      ],
      "x-ms-enum": {
        "name": "TextCategory",
        "modelAsString": false
      }
    },
    "TextDetectDiagnosis": {
      "type": "object",
      "properties": {
        "start": {
          "description": "Inclusive start offset",
          "type": "integer"
        },
        "end": {
          "description": "Exclusive end offset",
          "type": "integer"
        },
        "detected": {
          "type": "boolean",
          "description": "Whether this category is detected in [start,end)"
        },
        "score": {
          "description": "The score of detection result",
          "type": "number",
          "format": "float"
        },
        "diagnosisDetail": {
          "description": "The additional fields of model output",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "TextDetectResult": {
      "type": "object",
      "required": [
        "category"
      ],
      "properties": {
        "category": {
          "$ref": "#/definitions/TextCategory"
        },
        "detected": {
          "description": "Whether this category is detected in this input text",
          "type": "boolean"
        },
        "score": {
          "description": "The score of detection result",
          "type": "number",
          "format": "float"
        },
        "modelOutputDetail": {
          "description": "The additional fields of model output",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "diagnoses": {
          "description": "The diagnoses array, each element contains detection result in [start,end)",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TextDetectDiagnosis"
          }
        }
      }
    },
    "TextDetectRequest": {
      "description": "The detection request of the text",
      "type": "object",
      "required": [
        "text"
      ],
      "properties": {
        "text": {
          "type": "string",
          "description": "The text needs to be scanned"
        },
        "categories": {
          "type": "array",
          "description": "The categories will be detected, if not assigned, all the categories will be detected",
          "items": {
            "$ref": "#/definitions/TextCategory"
          }
        }
      }
    },
    "TextDetectResponse": {
      "description": "The detection response of the text",
      "type": "object",
      "required": [
        "value"
      ],
      "properties": {
        "value": {
          "type": "array",
          "items": {
              "$ref": "#/definitions/TextDetectResult"
            }
        }
      }
    },
    "ErrorCode": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        },
        "code": {
          "type": "string"
        }
      }
    }
  },
  "parameters": {
    "Endpoint": {
      "name": "endpoint",
      "description": "Supported Cognitive Services endpoints (protocol and hostname, for example: https://<resource-name>.cognitiveservices.azure.com).",
      "x-ms-parameter-location": "client",
      "required": true,
      "type": "string",
      "in": "path",
      "x-ms-skip-url-encoding": true
    },
    "Locale": {
      "name": "locale",
      "description": "Locale hint for text recognition and document analysis.  Value may contain only the language code (ex. \"en\", \"fr\") or BCP 47 language tag (ex. \"en-US\").",
      "required": false,
      "type": "string",
      "in": "query",
      "x-ms-parameter-location": "method"
    },
    "QueryApiVersion": {
      "name": "api-version",
      "description": "Requested API version.",
      "required": true,
      "type": "string",
      "in": "query",
      "enum": [
        "2022-09-30-preview"
      ],
      "x-ms-enum": {
        "name": "ApiVersion",
        "modelAsString": true
      },
      "x-ms-parameter-location": "client"
    }
  },
  "x-ms-parameterized-host": {
    "hostTemplate": "{endpoint}/contentmoderator/moderate",
    "useSchemePrefix": false,
    "parameters": [
      {
        "$ref": "#/parameters/Endpoint"
      }
    ]
  }
}
