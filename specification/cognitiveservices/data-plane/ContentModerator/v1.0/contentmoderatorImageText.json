{
  "swagger": "2.0",
  "info": {
    "title": "Content Moderator Image Text Client",
    "version": "1.0",
    "description": "You use the API to scan your content as it is generated. Content Moderator then processes your content and sends the results along with relevant information either back to your systems or to the built-in review tool. You can use this information to take decisions e.g. take it down, send to human judge, etc.\r\n\r\nWhen using the API, images need to have a minimum of 128 pixels and a maximum file size of 4MB. \r\nText can be at most 1024 characters long. \r\nIf the content passed to the text API or the image API exceeds the size limits, the API will return an error code that informs about the issue.\r\n\r\nThis API is currently available in:\r\n\r\n* West US - westus.api.cognitive.microsoft.com\r\n* East US 2 - eastus2.api.cognitive.microsoft.com\r\n* West Central US - westcentralus.api.cognitive.microsoft.com\r\n* West Europe - westeurope.api.cognitive.microsoft.com\r\n* Southeast Asia - southeastasia.api.cognitive.microsoft.com ."
  },
  "x-ms-parameterized-host": {
    "hostTemplate": "{azureRegion}.api.cognitive.microsoft.com",
    "parameters": [
      {
        "$ref": "#/parameters/AzureRegion"
      }
    ]
  },
  "basePath": "/contentmoderator/moderate/v1.0",
  "schemes": [
    "https"
  ],
  "paths": {
    "/ProcessImage/FindFaces": {
      "post": {
        "tags": [
          "Images"
        ],
        "operationId": "ImagesFindFacesBase",
        "description": "Returns the list of faces found.",
        "parameters": [
          {
            "name": "CacheImage",
            "in": "query",
            "description": "Whether to retain the submitted image for future use; defaults to false if omitted.",
            "type": "boolean"
          },
          {
            "$ref": "#/parameters/ocpApimSubscriptionKeyParameter"
          },
          {
            "$ref": "#/parameters/contentTypeHeader"
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The list of faces found.",
            "schema": {
              "$ref": "#/definitions/FoundFaces"
            }
          },
          "default": {
            "description": ""
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/ProcessImage/OCR": {
      "post": {
        "tags": [
          "Images"
        ],
        "operationId": "ImagesOCRBase",
        "description": "Returns any text found in the image for the language specified. If no language is specified in input then the detection defaults to English.",
        "parameters": [
          {
            "name": "language",
            "in": "query",
            "description": "<a href=\"http://www-01.sil.org/iso639-3/codes.asp\">ISO 639-3 code</a>.",
            "required": true,
            "type": "string",
            "default": "eng"
          },
          {
            "name": "CacheImage",
            "in": "query",
            "description": "Whether to retain the submitted image for future use; defaults to false if omitted.",
            "type": "boolean",
            "default": false
          },
          {
            "name": "enhanced",
            "in": "query",
            "description": "When set to True, the image goes through additional processing to come with additional candidates.\n\nimage/tiff is not supported when enhanced is set to true\n\nNote: This impacts the response time.",
            "type": "boolean",
            "default": false
          },
          {
            "$ref": "#/parameters/ocpApimSubscriptionKeyParameter"
          },
          {
            "$ref": "#/parameters/contentTypeHeader"
          }
        ],
        "consumes": [
          "image/gif",
          "image/jpeg",
          "image/png",
          "image/bmp",
          "image/tiff"
        ],
        "responses": {
          "200": {
            "description": "The found text and list of candidate text.",
            "schema": {
              "$ref": "#/definitions/OCRResponse"
            }
          },
          "default": {
            "description": ""
          }

        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/ProcessImage/Evaluate": {
      "post": {
        "tags": [
          "Images"
        ],
        "operationId": "ImagesEvaluateBase",
        "description": "Returns probabilities of the image containing racy or adult content.",
        "parameters": [
          {
            "name": "CacheImage",
            "in": "query",
            "description": "Whether to retain the submitted image for future use; defaults to false if omitted.",
            "type": "boolean"
          },
          {
            "$ref": "#/parameters/ocpApimSubscriptionKeyParameter"
          },
          {
            "$ref": "#/parameters/contentTypeHeader"
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/EvaluateResponse"
            }
          },
          "default": {
            "description": ""
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/ProcessImage/Match": {
      "post": {
        "tags": [
          "Images"
        ],
        "operationId": "ImagesMatchBase",
        "description": "Fuzzily match an image against one of your custom Image Lists. You can create and manage your custom image lists using <a href=\"/docs/services/578ff44d2703741568569ab9/operations/578ff7b12703741568569abe\">this</a> API. \r\n\r\nReturns ID and tags of matching image.<br/>\r\n<br/>\r\nNote: Refresh Index must be run on the corresponding Image List before additions and removals are reflected in the response.",
        "parameters": [
          {
            "name": "listId",
            "in": "query",
            "description": "The list id.",
            "type": "string"
          },
          {
            "name": "cacheimage",
            "in": "query",
            "description": "Use cached image.",
            "type": "boolean"
          },
          {
            "$ref": "#/parameters/ocpApimSubscriptionKeyParameter"
          },
          {
            "$ref": "#/parameters/contentTypeHeader"
          }
        ],
        "consumes": [
          "image/gif",
          "image/jpeg",
          "image/png",
          "image/bmp",
          "image/tiff"
        ],
        "responses": {
          "200": {
            "description": "Supported values for tags are:\r\n<ul>\r\n<li>101: Nudity</li>\r\n<li>102: Sexual Content</li>\r\n<li>201: Alcohol</li>\r\n<li>202: Tobacco</li>\r\n<li>203: Drugs</li>\r\n<li>301: Child Exploitation</li>\r\n<li>401: Violence</li>\r\n<li>402: Weapons</li>\r\n<li>403: Gore</li>\r\n<li>501: Profanity</li>\r\n<li>502: Vulgarity</li>\r\n</ul>.",
            "schema": {
              "$ref": "#/definitions/MatchResponse"
            }
          },
          "default": {
            "description": ""
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/ProcessText/Screen/": {
      "post": {
        "tags": [
          "Text"
        ],
        "summary": "Detect profanity and match against custom and shared blacklists",
        "description": "Detects profanity in more than 100 languages and match against custom and shared blacklists.",
        "operationId": "Text_ScreenText",

        "parameters": [
          {
            "name": "language",
            "in": "query",
            "required": true,
            "description": "Language of the text.",
            "type": "string",
            "default": "eng"
          },
          {
            "name": "autocorrect",
            "in": "query",
            "required": false,
            "description": "Autocorrect text.",
            "type": "boolean",
            "default": false
          },
          {
            "name": "PII",
            "in": "query",
            "description": "Detect personal identifiable information.",
            "required": false,
            "type": "boolean",
            "default": false
          },
          {
            "name": "listId",
            "in": "query",
            "description": "Comma separated list Ids.",
            "required": false,
            "type": "string"
          },
          {
            "name": "classify",
            "description": "Classify input.",
            "in": "query",
            "required": false,
            "type": "boolean",
            "default": false
          },
          {
            "$ref": "#/parameters/contentTypeHeader"
          },
          {
            "name": "Text Content",
            "description": "Content to screen.",
            "in": "body",
            "required": true,
            "schema": {
              "format": "binary",
              "type": "string"
            }
          }
        ],
        "consumes": [
          "text/plain",
          "text/html",
          "text/xml",
          "text/markdown"
        ],
        "responses": {
          "200": {
            "description": "Status 200",
            "schema": {
              "$ref": "#/definitions/ScreenResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/ProcessText/DetectLanguage": {
      "post": {
        "tags": [
          "Text"
        ],
        "operationId": "Text_DetectLanguage",
        "description": "This operation will detect the language of given input content. Returns the <a href=\"http://www-01.sil.org/iso639-3/codes.asp\">ISO 639-3 code</a> for the predominant language comprising the submitted text. Over 110 languages supported.",
        "parameters": [
          {
            "$ref": "#/parameters/ocpApimSubscriptionKeyParameter"
          },
          {
            "$ref": "#/parameters/contentTypeHeader"
          },
          {
            "name": "text",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Text content file."
          }
        ],
        "consumes": [
          "text/plain",
          "text/html",
          "text/xml",
          "text/markdown"
        ],
        "responses": {
          "200": {
            "description": "The detected language result.",
            "schema": {
              "$ref": "#/definitions/DetectedLanguageResult"
            }
          },
          "default": {
            "description": ""
          }
        },
        "x-ms-examples": {
          "Detect Language request": {
            "$ref": "./examples/DetectLanguageResource.json"
          }
        },
        "produces": [
          "application/json"
        ]
      }
    }
  },
  "x-ms-paths": {
    "/ProcessImage/FindFaces?overload=stream": {
      "post": {
        "tags": [
          "Images"
        ],
        "operationId": "ImagesFindFaces_Stream",
        "description": "Returns the list of faces found.",
        "parameters": [
          {
            "name": "CacheImage",
            "in": "query",
            "description": "Whether to retain the submitted image for future use; defaults to false if omitted.",
            "type": "boolean"
          },
          {
            "$ref": "#/parameters/ocpApimSubscriptionKeyParameter"
          },
          {
            "$ref": "#/parameters/contentTypeHeader"
          },
          {
            "$ref": "#/parameters/ImageStreamParameter"
          }
        ],
        "consumes": [
          "image/gif",
          "image/jpeg",
          "image/png",
          "image/bmp",
          "image/tiff"
        ],
        "responses": {
          "200": {
            "description": "The list of faces found.",
            "schema": {
              "$ref": "#/definitions/FoundFaces"
            }
          },
          "default": {
            "description": ""
          }
        },
        "x-ms-examples": {
          "Find Faces request": {
            "$ref": "./examples/FindFacesStreamResource.json"
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/ProcessImage/FindFaces?overload=url": {
      "post": {
        "tags": [
          "Images"
        ],
        "operationId": "Images_FindFaces",
        "description": "Returns the list of faces found.",
        "parameters": [
          {
            "name": "CacheImage",
            "in": "query",
            "description": "Whether to retain the submitted image for future use; defaults to false if omitted.",
            "type": "boolean"
          },
          {
            "$ref": "#/parameters/ocpApimSubscriptionKeyParameter"
          },
          {
            "$ref": "#/parameters/contentTypeHeader"
          },
          {
            "$ref": "#/parameters/ImageUrlParameter"
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The list of faces found.",
            "schema": {
              "$ref": "#/definitions/FoundFaces"
            }
          },
          "default": {
            "description": ""
          }
        },
        "x-ms-examples": {
          "Find Faces request": {
            "$ref": "./examples/FindFacesResource.json"
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/ProcessImage/OCR?overload=url": {
      "post": {
        "tags": [
          "Images"
        ],
        "operationId": "Images_OCR",
        "description": "Returns any text found in the image for the language specified. If no language is specified in input then the detection defaults to English.",
        "parameters": [
          {
            "name": "language",
            "in": "query",
            "description": "<a href=\"http://www-01.sil.org/iso639-3/codes.asp\">ISO 639-3 code</a>.",
            "required": true,
            "type": "string",
            "default": "eng"
          },
          {
            "name": "CacheImage",
            "in": "query",
            "description": "Whether to retain the submitted image for future use; defaults to false if omitted.",
            "type": "boolean",
            "default": false
          },
          {
            "name": "enhanced",
            "in": "query",
            "description": "When set to True, the image goes through additional processing to come with additional candidates.\n\nimage/tiff is not supported when enhanced is set to true\n\nNote: This impacts the response time.",
            "type": "boolean",
            "default": false
          },
          {
            "$ref": "#/parameters/ocpApimSubscriptionKeyParameter"
          },
          {
            "$ref": "#/parameters/contentTypeHeader"
          },
          {
            "$ref": "#/parameters/ImageUrlParameter"
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The found text and list of candidate text.",
            "schema": {
              "$ref": "#/definitions/OCRResponse"
            }
          },
          "default": {
            "description": ""
          }

        },
        "x-ms-examples": {
          "Image OCR request": {
            "$ref": "./examples/OCRResource.json"
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/ProcessImage/OCR?overload=stream": {
      "post": {
        "tags": [
          "Images"
        ],
        "operationId": "ImagesOCR_Stream",
        "description": "Returns any text found in the image for the language specified. If no language is specified in input then the detection defaults to English.",
        "parameters": [
          {
            "name": "language",
            "in": "query",
            "description": "<a href=\"http://www-01.sil.org/iso639-3/codes.asp\">ISO 639-3 code</a>.",
            "required": true,
            "type": "string",
            "default": "eng"
          },
          {
            "name": "CacheImage",
            "in": "query",
            "description": "Whether to retain the submitted image for future use; defaults to false if omitted.",
            "type": "boolean",
            "default": false
          },
          {
            "name": "enhanced",
            "in": "query",
            "description": "When set to True, the image goes through additional processing to come with additional candidates.\n\nimage/tiff is not supported when enhanced is set to true\n\nNote: This impacts the response time.",
            "type": "boolean",
            "default": false
          },
          {
            "$ref": "#/parameters/ocpApimSubscriptionKeyParameter"
          },
          {
            "$ref": "#/parameters/contentTypeHeader"
          },
          {
            "$ref": "#/parameters/ImageStreamParameter"
          }
        ],
        "consumes": [
          "image/gif",
          "image/jpeg",
          "image/png",
          "image/bmp",
          "image/tiff",
          "application/octet-steam"
        ],
        "responses": {
          "200": {
            "description": "The found text and list of candidate text.",
            "schema": {
              "$ref": "#/definitions/OCRResponse"
            }
          },
          "default": {
            "description": ""
          }

        },
        "x-ms-examples": {
          "Image OCR request": {
            "$ref": "./examples/OCRStreamResource.json"
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/ProcessImage/Evaluate?overload=stream": {
      "post": {
        "tags": [
          "Images"
        ],
        "operationId": "ImagesEvaluate_Stream",
        "description": "Returns probabilities of the image containing racy or adult content.",
        "parameters": [
          {
            "name": "CacheImage",
            "in": "query",
            "description": "Whether to retain the submitted image for future use; defaults to false if omitted.",
            "type": "boolean"
          },
          {
            "$ref": "#/parameters/ocpApimSubscriptionKeyParameter"
          },
          {
            "$ref": "#/parameters/contentTypeHeader"
          },
          {
            "$ref": "#/parameters/ImageStreamParameter"
          }
        ],
        "consumes": [
          "image/gif",
          "image/jpeg",
          "image/png",
          "image/bmp",
          "image/tiff"
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/EvaluateResponse"
            }
          },
          "default": {
            "description": ""
          }
        },
        "x-ms-examples": {
          "Evaluate Image request": {
            "$ref": "./examples/EvaluateImageStreamResource.json"
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/ProcessImage/Evaluate?overload=url": {
      "post": {
        "tags": [
          "Images"
        ],
        "operationId": "Images_Evaluate",
        "description": "Returns probabilities of the image containing racy or adult content.",
        "parameters": [
          {
            "name": "CacheImage",
            "in": "query",
            "description": "Whether to retain the submitted image for future use; defaults to false if omitted.",
            "type": "boolean"
          },
          {
            "$ref": "#/parameters/ocpApimSubscriptionKeyParameter"
          },
          {
            "$ref": "#/parameters/contentTypeHeader"
          },
          {
            "$ref": "#/parameters/ImageUrlParameter"
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/EvaluateResponse"
            }
          },
          "default": {
            "description": ""
          }
        },
        "x-ms-examples": {
          "Evaluate Image request": {
            "$ref": "./examples/EvaluateImageResource.json"
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/ProcessImage/Match?overload=url": {
      "post": {
        "tags": [
          "Images"
        ],
        "operationId": "Images_Match",
        "description": "Fuzzily match an image against one of your custom Image Lists. You can create and manage your custom image lists using <a href=\"/docs/services/578ff44d2703741568569ab9/operations/578ff7b12703741568569abe\">this</a> API. \r\n\r\nReturns ID and tags of matching image.<br/>\r\n<br/>\r\nNote: Refresh Index must be run on the corresponding Image List before additions and removals are reflected in the response.",
        "parameters": [
          {
            "name": "listId",
            "in": "query",
            "description": "The list id.",
            "type": "string"
          },
          {
            "name": "cacheimage",
            "in": "query",
            "description": "Use cached image.",
            "type": "boolean"
          },
          {
            "$ref": "#/parameters/ocpApimSubscriptionKeyParameter"
          },
          {
            "$ref": "#/parameters/contentTypeHeader"
          },
          {
            "$ref": "#/parameters/ImageUrlParameter"
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Supported values for tags are:\r\n<ul>\r\n<li>101: Nudity</li>\r\n<li>102: Sexual Content</li>\r\n<li>201: Alcohol</li>\r\n<li>202: Tobacco</li>\r\n<li>203: Drugs</li>\r\n<li>301: Child Exploitation</li>\r\n<li>401: Violence</li>\r\n<li>402: Weapons</li>\r\n<li>403: Gore</li>\r\n<li>501: Profanity</li>\r\n<li>502: Vulgarity</li>\r\n</ul>.",
            "schema": {
              "$ref": "#/definitions/MatchResponse"
            }
          },
          "default": {
            "description": ""
          }
        },
        "x-ms-examples": {
          "Match Image request": {
            "$ref": "./examples/MatchImageResource.json"
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/ProcessImage/Match?overload=stream": {
      "post": {
        "tags": [
          "Images"
        ],
        "operationId": "ImagesMatch_Stream",
        "description": "Fuzzily match an image against one of your custom Image Lists. You can create and manage your custom image lists using <a href=\"/docs/services/578ff44d2703741568569ab9/operations/578ff7b12703741568569abe\">this</a> API. \r\n\r\nReturns ID and tags of matching image.<br/>\r\n<br/>\r\nNote: Refresh Index must be run on the corresponding Image List before additions and removals are reflected in the response.",
        "parameters": [
          {
            "name": "listId",
            "in": "query",
            "description": "The list id.",
            "type": "string"
          },
          {
            "name": "cacheimage",
            "in": "query",
            "description": "Use cached image.",
            "type": "boolean"
          },
          {
            "$ref": "#/parameters/ocpApimSubscriptionKeyParameter"
          },
          {
            "$ref": "#/parameters/contentTypeHeader"
          },
          {
            "$ref": "#/parameters/ImageStreamParameter"
          }
        ],
        "consumes": [
          "image/gif",
          "image/jpeg",
          "image/png",
          "image/bmp",
          "image/tiff"
        ],
        "responses": {
          "200": {
            "description": "Supported values for tags are:\r\n<ul>\r\n<li>101: Nudity</li>\r\n<li>102: Sexual Content</li>\r\n<li>201: Alcohol</li>\r\n<li>202: Tobacco</li>\r\n<li>203: Drugs</li>\r\n<li>301: Child Exploitation</li>\r\n<li>401: Violence</li>\r\n<li>402: Weapons</li>\r\n<li>403: Gore</li>\r\n<li>501: Profanity</li>\r\n<li>502: Vulgarity</li>\r\n</ul>.",
            "schema": {
              "$ref": "#/definitions/MatchResponse"
            }
          },
          "default": {
            "description": ""
          }
        },
        "x-ms-examples": {
          "Match Image request": {
            "$ref": "./examples/MatchImageStreamResource.json"
          }
        },
        "produces": [
          "application/json"
        ]
      }
    }
  },
  "definitions": {
    "ScreenResponse": {
      "description": "The response for a Screen text request.",
      "properties": {
        "originalText": {
          "description": "The original text.",
          "type": "string"
        },
        "normalizedText": {
          "description": "The normalized text.",
          "type": "string"
        },
        "misrepresentation": {
          "description": "The misrepresentation text.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "status": {
          "description": "The evaluate status.",
          "$ref": "#/definitions/ResponseStatus"
        },
        "pii": {
          "description": "Personal Identifier Information details.",
          "$ref": "#/definitions/PIIDetailsProperties"
        },
        "language": {
          "description": "Language of the input text content.",
          "type": "string"
        },
        "terms": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TermsProperties"
          }
        },
        "trackingId": {
          "description": "Unique Content Moderator transaction Id.",
          "type": "string"
        }
      }
    },
    "PIIDetailsProperties": {
      "description": "Personal Identifier Information details.",
      "properties": {
        "email": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EmailProperties"
          }

        },
        "ipa": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/IPAProperties"

          }
        },
        "phone": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PhoneProperties"
          }
        },
        "address": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AddressProperties"
          }
        }
      }
    },
    "EmailProperties": {
      "description": "Email Address details.",
      "properties": {
        "detected": {
          "description": "Detected Email Address from the input text content.",
          "type": "string"
        },
        "subType": {
          "description": "Subtype of the detected Email Address.",
          "type": "string"
        },
        "text": {
          "description": "Email Address in the input text content.",
          "type": "string"
        },
        "index": {
          "description": "Index(Location) of the Email address in the input text content.",
          "type": "number"
        }
      }
    },
    "IPAProperties": {
      "description": "IP Address details.",
      "properties": {
        "subType": {
          "description": "Subtype of the detected IP Address.",
          "type": "string"
        },
        "text": {
          "description": "Detected IP Address.",
          "type": "string"
        },
        "index": {
          "description": "Index(Location) of the IP Address in the input text content.",
          "type": "number"
        }
      }
    },
    "PhoneProperties": {
      "description": "Phone Property details.",
      "properties": {
        "countryCode": {
          "description": "CountryCode of the detected Phone number.",
          "type": "string"
        },
        "text": {
          "description": "Detected Phone number.",
          "type": "string"
        },
        "index": {
          "description": "Index(Location) of the Phone number in the input text content.",
          "type": "number"
        }
      }
    },
    "AddressProperties": {
      "description": "Address details.",
      "properties": {
        "text": {
          "description": "Detected Address.",
          "type": "string"
        },
        "index": {
          "description": "Index(Location) of the Address in the input text content.",
          "type": "number"
        }
      }

    },
    "TermsProperties": {
      "description": "Detected Terms details.",
      "properties": {
        "index": {
          "description": "Index(Location) of the detected profanity term in the input text content.",
          "type": "number"
        },
        "originalIndex": {
          "description": "Original Index(Location) of the detected profanity term in the input text content.",
          "type": "number"
        },
        "listId": {
          "description": "Matched Terms list Id.",
          "type": "number"
        },
        "term": {
          "description": "Detected profanity term.",
          "type": "string"
        }
      }

    },

    "FoundFaces": {
      "description": "Request object the contains found faces.",
      "properties": {
        "status": {
          "description": "The evaluate status",
          "$ref": "#/definitions/ResponseStatus"
        },
        "trackingId": {
          "description": "The tracking id.",
          "type": "string"
        },
        "cacheId": {
          "description": "The cache id.",
          "type": "string"
        },
        "result": {
          "description": "True if result was found.",
          "type": "boolean"
        },
        "count": {
          "description": "Number of faces found.",
          "type": "integer"
        },
        "advancedInfo": {
          "description": "The advanced info.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "faces": {
          "description": "The list of faces.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/FoundFace"
          }
        }
      }
    },
    "FoundFace": {
      "description": "Coordinates to the found face.",
      "properties": {
        "bottom": {
          "description": "The bottom coordinate.",
          "type": "integer"
        },
        "left": {
          "description": "The left coordinate.",
          "type": "integer"
        },
        "right": {
          "description": "The right coordinate.",
          "type": "integer"
        },
        "top": {
          "description": "The top coordinate.",
          "type": "integer"
        }
      }
    },
    "OCRResponse": {
      "description": "Contains the text found in image for the language specified.",
      "properties": {
        "status": {
          "description": "The evaluate status",
          "$ref": "#/definitions/ResponseStatus"
        },
        "metadata": {
          "description": "Array of KeyValue.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/KeyValuePair"
          }
        },
        "trackingId": {
          "description": "The tracking id.",
          "type": "string"
        },
        "cacheId": {
          "description": "The cache id.",
          "type": "string"
        },
        "language": {
          "description": "The ISO 639-3 code.",
          "type": "string"
        },
        "text": {
          "description": "The found text.",
          "type": "string"
        },
        "candidates": {
          "description": "The list of candidate text.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Candidate"
          }
        }
      }
    },
    "KeyValuePair": {
      "description": "The key value pair object properties.",
      "properties": {
        "key": {
          "description": "The key parameter.",
          "type": "string"
        },
        "value": {
          "description": "The value parameter.",
          "type": "string"
        }
      }
    },
    "Candidate": {
      "description": "OCR candidate text.",
      "properties": {
        "text": {
          "description": "The text found.",
          "type": "string"
        },
        "confidence": {
          "description": "The confidence level.",
          "type": "number"
        }
      }
    },
    "EvaluateResponse": {
      "description": "Evaluate response object.",
      "properties": {
        "cacheID": {
          "description": "The cache id.",
          "type": "string"
        },
        "result": {
          "description": "Evaluate result.",
          "type": "boolean"
        },
        "trackingId": {
          "description": "The tracking id.",
          "type": "string"
        },
        "adultClassificationScore": {
          "description": "The adult classification score.",
          "type": "number"
        },
        "isImageAdultClassified": {
          "description": "Indicates if an image is classified as adult.",
          "type": "boolean"
        },
        "racyClassificationScore": {
          "description": "The racy classication score.",
          "type": "number"
        },
        "isImageRacyClassified": {
          "description": "Indicates if the image is classified as racy.",
          "type": "boolean"
        },
        "advancedInfo": {
          "description": "The advanced info.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "status": {
          "description": "The evaluate status",
          "$ref": "#/definitions/ResponseStatus"
        }
      }
    },
    "ResponseStatus": {
      "description": "The evaluate response status object.",
      "properties": {
        "code": {
          "description": "Evaluate response status code.",
          "type": "integer"
        },
        "description": {
          "description": "Description of evaluate response status code.",
          "type": "string"
        },
        "exception": {
          "description": "The evaluate response exception object."
        }
      }
    },
    "MatchResponse": {
      "description": "The response for a Match request.",
      "properties": {
        "trackingId": {
          "description": "The tracking id.",
          "type": "string"
        },
        "cacheID": {
          "description": "The cache id.",
          "type": "string"
        },
        "isMatch": {
          "description": "Indicates if there is a match.",
          "type": "boolean"
        },
        "matches": {
          "description": "The match details.",
          "$ref": "#/definitions/MatchDetailProperties"
        },
        "status": {
          "description": "The evaluate status",
          "$ref": "#/definitions/ResponseStatus"
        }
      }
    },
    "MatchDetailProperties": {
      "description": "The match detail.",
      "properties": {
        "score": {
          "description": "Confidence score of the image match.",
          "type": "number"
        },
        "matchId": {
          "description": "The match id.",
          "type": "string"
        },
        "source": {
          "description": "The source.",
          "type": "string"
        },
        "tags": {
          "description": "The tags for match details.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/MatchDetailTag"
          }
        },
        "label": {
          "description": "The label.",
          "type": "string"
        }
      }
    },
    "MatchDetailTag": {
      "description": "The details for a match.",
      "properties": {
        "key": {
          "description": "The key parameter.",
          "type": "string"
        },
        "value": {
          "description": "The value parameter.",
          "type": "string"
        }
      }
    },
    "DetectedLanguageResult": {
      "description": "Detect language result.",
      "properties": {
        "trackingId": {
          "description": "The tracking id.",
          "type": "string"
        },
        "status": {
          "description": "The detect language status",
          "$ref": "#/definitions/ResponseStatus"
        },
        "detectedLanguage": {
          "description": "The detected language.",
          "type": "string"
        }
      }
    }
  },
  "parameters": {
    "contentTypeHeader": {
      "name": "Content-Type",
      "description": "The content type.",
      "required": true,
      "type": "string",
      "in": "header"
    },
    "ImageUrlParameter": {
      "name": "ImageUrl",
      "in": "body",
      "required": true,
      "schema": {
        "type": "object",
        "properties": {
          "dataRepresentation": {
            "type": "string",
            "default": "URL"
          },
          "value": {
            "type": "string"
          }
        }
      },
      "description": "The image url."
    },
    "ImageStreamParameter": {
      "name": "ImageStream",
      "required": true,
      "in": "body",
      "schema": {
        "type": "object",
        "format": "file"
      },
      "description": "The image file."
    },
    "ocpApimSubscriptionKeyParameter": {
      "name": "Ocp-Apim-Subscription-Key",
      "description": "The subscription key in header",
      "x-ms-parameter-location": "client",
      "required": true,
      "type": "string",
      "in": "header"
    },
    "AzureRegion": {
      "name": "azureRegion",
      "description": "Supported Azure regions for Computer Vision endpoints",
      "x-ms-parameter-location": "client",
      "required": true,
      "type": "string",
      "in": "path",
      "x-ms-skip-url-encoding": true,
      "x-ms-enum": {
        "name": "AzureRegion",
        "modelAsString": true
      },
      "enum": [
        "westus",
        "westeurope",
        "southeastasia",
        "eastus2",
        "westcentralus"
      ]
    }
  }
} 