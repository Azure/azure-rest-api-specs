{
  "swagger": "2.0",
  "info": {
    "title": "Anomaly Detector Client",
    "description": "Root cause analysis(RCA) helps trace the crucial dimension combinations that contribute to the given anomaly point with aggregated dimension combination. For example, when a point with dimension Country = Sum, version = Sum is detected as anomaly point, using root cause analysis algorithm, we can locate the child dimension combination, for example, it might be Country = CN, version = IOS causes the given anomaly. Our algorithm supports finding root cause  from both single and multiple measures.",
    "version": "1.2-preview"
  },
  "paths": {
    "/rootCauseAnalysis/dataSets/{dataSetId}": {
      "put": {
        "tags": [
          "RootCauseAnalysisDataSet"
        ],
        "summary": "Create a root cause analysis data set",
        "operationId": "CreateRootCauseAnalysisDataSet",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "dataSetId",
            "description": "The root cause analysis data set unique id, should be a string of uuid.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "body",
            "description": "create a root cause analysis data set request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RootCauseAnalysisDataSet"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "headers": {
              "Location": {
                "description": "Location of the newly created resource.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Client error or server error (4xx or 5xx)",
            "schema": {
              "$ref": "#/definitions/ErrorCode"
            }
          }
        },
        "x-ms-examples": {
          "Create a root cause analysis data set": {
            "$ref": "./examples/CreateRootCauseAnalysisDataSet.json"
          }
        }
      },
      "get": {
        "tags": [
          "RootCauseAnalysisDataSet"
        ],
        "summary": "Get a root cause analysis data set by its id",
        "operationId": "GetRootCauseAnalysisDataSet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "dataSetId",
            "description": "The root cause analysis data set unique id, should be a string of uuid.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/RootCauseAnalysisDataSet"
            }
          },
          "default": {
            "description": "Client error or server error (4xx or 5xx)",
            "schema": {
              "$ref": "#/definitions/ErrorCode"
            }
          }
        },
        "x-ms-examples": {
          "Get a root cause analysis data set by its id": {
            "$ref": "./examples/GetRootCauseAnalysisDataSet.json"
          }
        }
      },
      "delete": {
        "tags": [
          "RootCauseAnalysisDataSet"
        ],
        "summary": "Delete a root cause analysis data set",
        "operationId": "DeleteRootCauseAnalysisDataSet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "dataSetId",
            "description": "The root cause analysis data set unique id, should be a string of uuid.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "204": {
            "description": "The resource is deleted successfully or does not exist."
          },
          "default": {
            "description": "Client error or server error (4xx or 5xx)",
            "schema": {
              "$ref": "#/definitions/ErrorCode"
            }
          }
        },
        "x-ms-examples": {
          "Delete a root cause analysis data set": {
            "$ref": "./examples/DeleteRootCauseAnalysisDataSet.json"
          }
        }
      }
    },
    "/rootCauseAnalysis/dataSets": {
      "get": {
        "tags": [
          "RootCauseAnalysisDataSet"
        ],
        "summary": "List root cause analysis data sets",
        "operationId": "ListRootCauseAnalysisDataSets",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "skip",
            "description": "For paging, skipped number",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "maxpagesize",
            "description": "The maximum number of items in one page",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "filter",
            "description": "The filter expression filters out the resources to be returned, currently contains(displayName, 'filter nameâ€™) is supported",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/RootCauseAnalysisDataSetList"
            }
          },
          "default": {
            "description": "Client error or server error (4xx or 5xx)",
            "schema": {
              "$ref": "#/definitions/ErrorCode"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "List root cause analysis data sets": {
            "$ref": "./examples/ListRootCauseAnalysisDataSets.json"
          }
        }
      }
    },
    "/rootCauseAnalysis/dataSets/{dataSetId}/timestamps/{timestamp}/partitions/{partitionId}": {
      "put": {
        "tags": [
          "RootCauseAnalysisDataSet"
        ],
        "summary": "Upload data to root cause analysis data set by partition",
        "operationId": "UploadRootCauseAnalysisData",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "dataSetId",
            "description": "The root cause analysis data set unique id. Should be a string of uuid",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "timestamp",
            "description": "Timestamp of the data, should be a string of ISO format.",
            "required": true,
            "type": "string",
            "format": "date-time"
          },
          {
            "in": "path",
            "name": "partitionId",
            "description": "The partition unique id",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Data to be uploaded to perform root cause analysis",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RootCauseAnalysisUploadDataPartitionRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "headers": {
              "Location": {
                "description": "Location of the newly created resource.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Client error or server error (4xx or 5xx)",
            "schema": {
              "$ref": "#/definitions/ErrorCode"
            }
          }
        },
        "x-ms-examples": {
          "Upload data to root cause analysis data set by partition": {
            "$ref": "./examples/UploadRootCauseAnalysisData.json"
          }
        }
      },
      "delete": {
        "tags": [
          "RootCauseAnalysisDataSet"
        ],
        "summary": "Delete root cause analysis data by partition Id",
        "operationId": "DeleteRootCauseAnalysisDataByPartitionId",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "dataSetId",
            "description": "The root cause analysis data set unique id",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "timestamp",
            "description": "The time stamp to be queried, should be a string of ISO format",
            "required": true,
            "type": "string",
            "format": "date-time"
          },
          {
            "in": "path",
            "name": "partitionId",
            "description": "The root cause analysis data set partition unique id",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "204": {
            "description": "The resource is deleted successfully or does not exist."
          },
          "default": {
            "description": "Client error or server error (4xx or 5xx)",
            "schema": {
              "$ref": "#/definitions/ErrorCode"
            }
          }
        },
        "x-ms-examples": {
          "Delete root cause analysis data by partition Id": {
            "$ref": "./examples/DeleteRootCauseAnalysisDataByPartitionId.json"
          }
        }
      }
    },
    "/rootCauseAnalysis/dataSets/{dataSetId}/timestamps:upload": {
      "post": {
        "tags": [
          "RootCauseAnalysisDataSet"
        ],
        "summary": "Upload data to root cause analysis data set by block",
        "operationId": "UploadRootCauseAnalysisDataByBlock",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "dataSetId",
            "description": "The root cause analysis data set unique id",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Data to be uploaded to perform root cause analysis",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RootCauseAnalysisUploadDataBlockRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Success"
          },
          "default": {
            "description": "Client error or server error (4xx or 5xx)",
            "schema": {
              "$ref": "#/definitions/ErrorCode"
            }
          }
        },
        "x-ms-examples": {
          "Upload data to root cause analysis data set by block": {
            "$ref": "./examples/UploadRootCauseAnalysisDataByBlock.json"
          }
        }
      }
    },
    "/rootCauseAnalysis/dataSets/{dataSetId}/timestamps:purge": {
      "post": {
        "tags": [
          "RootCauseAnalysisDataSet"
        ],
        "summary": "Delete root cause analysis data by time range",
        "operationId": "DeleteRootCauseAnalysisDataByTimeRange",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "dataSetId",
            "description": "The root cause analysis data set unique id",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "query",
            "name": "start",
            "description": "Start date time, should be ISO format",
            "type": "string"
          },
          {
            "in": "query",
            "name": "end",
            "description": "End date time, should be ISO format",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "description": "Client error or server error (4xx or 5xx)",
            "schema": {
              "$ref": "#/definitions/ErrorCode"
            }
          }
        },
        "x-ms-examples": {
          "Delete root cause analysis data by time range": {
            "$ref": "./examples/DeleteRootCauseAnalysisDataByTimeRange.json"
          }
        }
      }
    },
    "/rootCauseAnalysis/dataSets/{dataSetId}/timestamps/{timestamp}/partitions": {
      "get": {
        "tags": [
          "RootCauseAnalysisDataSet"
        ],
        "summary": "List data meta for a given timestamp",
        "operationId": "ListRootCauseAnalysisDataMetaByTimestamp",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "dataSetId",
            "description": "The root cause analysis data set unique id",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "timestamp",
            "description": "The time stamp to be queried, should be a string of ISO format",
            "required": true,
            "type": "string",
            "format": "date-time"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/RootCauseAnalysisDataMetaListResponse"
            }
          },
          "default": {
            "description": "Client error or server error (4xx or 5xx)",
            "schema": {
              "$ref": "#/definitions/ErrorCode"
            }
          }
        },
        "x-ms-examples": {
          "List data meta for a given timestamp": {
            "$ref": "./examples/ListRootCauseAnalysisDataMetaByTimestamp.json"
          }
        }
      }
    },
    "/rootCauseAnalysis/dataSets/{dataSetId}/timestamps": {
      "get": {
        "tags": [
          "RootCauseAnalysisDataSet"
        ],
        "summary": "List data meta",
        "operationId": "ListRootCauseAnalysisDataMetaByTimeRange",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "dataSetId",
            "description": "The root cause analysis data set unique id",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "query",
            "name": "skip",
            "description": "For paging, skipped number",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "maxpagesize",
            "description": "The maximum number of items in one page",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "filter",
            "description": "The filter expression filters out the resources, currently 2 kinds of operation are supported. They are ge(timestamp, XXXX) and le(timestamp, XXXX). Timestamp must be ISO format",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/RootCauseAnalysisDataMetaListResponse"
            }
          },
          "default": {
            "description": "Client error or server error (4xx or 5xx)",
            "schema": {
              "$ref": "#/definitions/ErrorCode"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "List data meta": {
            "$ref": "./examples/ListRootCauseAnalysisDataMetaByTimeRange.json"
          }
        }
      }
    },
    "/rootCauseAnalysis/instances/{instanceId}": {
      "put": {
        "tags": [
          "RootCauseAnalysisInstance"
        ],
        "summary": "Create an instance for root cause analysis",
        "operationId": "CreateRootCauseAnalysisInstance",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "instanceId",
            "description": "Instance unique id, should be a string of uuid.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Create a root cause analysis instance request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RootCauseAnalysisInstance"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "headers": {
              "Location": {
                "description": "Location of the newly created resource.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Client error or server error (4xx or 5xx)",
            "schema": {
              "$ref": "#/definitions/ErrorCode"
            }
          }
        },
        "x-ms-examples": {
          "Create an instance for root cause analysis": {
            "$ref": "./examples/CreateRootCauseAnalysisInstance.json"
          }
        }
      },
      "get": {
        "tags": [
          "RootCauseAnalysisInstance"
        ],
        "summary": "Query an instance information for root cause analysis",
        "operationId": "GetRootCauseAnalysisInstance",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "instanceId",
            "description": "Instance unique id, should be a string of uuid.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/RootCauseAnalysisInstance"
            }
          },
          "default": {
            "description": "Client error or server error (4xx or 5xx)",
            "schema": {
              "$ref": "#/definitions/ErrorCode"
            }
          }
        },
        "x-ms-examples": {
          "Query an instance information for root cause analysis": {
            "$ref": "./examples/GetRootCauseAnalysisInstance.json"
          }
        }
      },
      "delete": {
        "tags": [
          "RootCauseAnalysisInstance"
        ],
        "summary": "Delete an instance for root cause analysis",
        "operationId": "DeleteRootCauseAnalysisInstance",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "instanceId",
            "description": "Instance unique id",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "204": {
            "description": "The resource is deleted successfully or does not exist."
          },
          "default": {
            "description": "Client error or server error (4xx or 5xx)",
            "schema": {
              "$ref": "#/definitions/ErrorCode"
            }
          }
        },
        "x-ms-examples": {
          "Delete an instance for root cause analysis": {
            "$ref": "./examples/DeleteRootCauseAnalysisInstance.json"
          }
        }
      }
    },
    "/rootCauseAnalysis/instances": {
      "get": {
        "tags": [
          "RootCauseAnalysisInstance"
        ],
        "summary": "Get instance list for root cause analysis",
        "operationId": "ListRootCauseAnalysisInstances",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "skip",
            "description": "For paging, skipped number",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "maxpagesize",
            "description": "The maximum number of items in one page",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "filter",
            "description": "The filter expression filters out the resources to be returned, currently contains(displayName, 'filter nameâ€™) is supported",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/RootCauseAnalysisInstanceResponseList"
            }
          },
          "default": {
            "description": "Client error or server error (4xx or 5xx)",
            "schema": {
              "$ref": "#/definitions/ErrorCode"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "Get instance list for root cause analysis": {
            "$ref": "./examples/ListRootCauseAnalysisInstances.json"
          }
        }
      }
    },
    "/rootCauseAnalysis/instances/{instanceId}/models/{modelId}": {
      "put": {
        "tags": [
          "RootCauseAnalysisModel"
        ],
        "summary": "Trigger a model training task for root cause analysis",
        "operationId": "CreateRootCauseAnalysisTrainingTask",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "instanceId",
            "description": "Instance unique id, should be a string of uuid",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "modelId",
            "description": "Model unique id, should be a string of uuid",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RootCauseAnalysisTrainingRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "headers": {
              "Location": {
                "description": "Location of the newly created resource.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Client error or server error (4xx or 5xx)",
            "schema": {
              "$ref": "#/definitions/ErrorCode"
            }
          }
        },
        "x-ms-examples": {
          "Trigger a model training task for root cause analysis": {
            "$ref": "./examples/CreateRootCauseAnalysisTrainingTask.json"
          }
        }
      },
      "delete": {
        "tags": [
          "RootCauseAnalysisModel"
        ],
        "summary": "Delete a model for root cause analysis",
        "operationId": "DeleteRootCauseAnalysisModel",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "instanceId",
            "description": "Instance unique id, should be a string of uuid.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "modelId",
            "description": "Model unique id, should be a string of uuid.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "204": {
            "description": "The resource is deleted successfully or does not exist."
          },
          "default": {
            "description": "Client error or server error (4xx or 5xx)",
            "schema": {
              "$ref": "#/definitions/ErrorCode"
            }
          }
        },
        "x-ms-examples": {
          "Delete a model for root cause analysis": {
            "$ref": "./examples/DeleteRootCauseAnalysisModel.json"
          }
        }
      },
      "get": {
        "tags": [
          "RootCauseAnalysisModel"
        ],
        "summary": "Query a training task state for root cause analysis",
        "operationId": "GetRootCauseAnalysisTrainingState",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "instanceId",
            "description": "Instance unique id, should be a string of uuid.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "modelId",
            "description": "Model unique id, should be a string of uuid.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/RootCauseAnalysisTrainingResponse"
            }
          },
          "default": {
            "description": "Client error or server error (4xx or 5xx)",
            "schema": {
              "$ref": "#/definitions/ErrorCode"
            }
          }
        },
        "x-ms-examples": {
          "Query a training task state for root cause analysis": {
            "$ref": "./examples/GetRootCauseAnalysisTrainingState.json"
          }
        }
      }
    },
    "/rootCauseAnalysis/instances/{instanceId}/models": {
      "get": {
        "tags": [
          "RootCauseAnalysisModel"
        ],
        "summary": "Query training task state list for root cause analysis",
        "operationId": "ListRootCauseAnalysisTrainingStates",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "instanceId",
            "description": "Instance unique id, should be a string of uuid.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "query",
            "name": "skip",
            "description": "For paging, skipped number",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "maxpagesize",
            "description": "The maximum number of items in one page",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "filter",
            "description": "The filter expression filters out the resources to be returned, currently contains(displayName, 'filter nameâ€™) is supported",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/RootCauseAnalysisTrainingResponseList"
            }
          },
          "default": {
            "description": "Client error or server error (4xx or 5xx)",
            "schema": {
              "$ref": "#/definitions/ErrorCode"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "Query training task state list for root cause analysis": {
            "$ref": "./examples/ListRootCauseAnalysisTrainingStates.json"
          }
        }
      }
    },
    "/rootCauseAnalysis/instances/{instanceId}/models/{modelId}/inferences/{inferenceId}": {
      "put": {
        "tags": [
          "RootCauseAnalysisModel"
        ],
        "summary": "Trigger an inference task for root cause analysis",
        "operationId": "CreateRootCauseAnalysisInferenceTask",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "instanceId",
            "description": "Instance unique id, should be a string of uuid.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "modelId",
            "description": "Model unique id, should be a string of uuid.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "inferenceId",
            "description": "Inference unique id, should be a string of uuid.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Inference request of root cause analysis",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RootCauseAnalysisInferenceRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "headers": {
              "Location": {
                "description": "Location of the newly created resource.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Client error or server error (4xx or 5xx)",
            "schema": {
              "$ref": "#/definitions/ErrorCode"
            }
          }
        },
        "x-ms-examples": {
          "Trigger an inference task for root cause analysis": {
            "$ref": "./examples/CreateRootCauseAnalysisInferenceTask.json"
          }
        }
      },
      "get": {
        "tags": [
          "RootCauseAnalysisModel"
        ],
        "summary": "Query an inference task state for root cause analysis",
        "operationId": "GetRootCauseAnalysisInferenceState",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "instanceId",
            "description": "Instance unique id, should be a string of uuid.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "modelId",
            "description": "Model unique id, should be a string of uuid.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "inferenceId",
            "description": "Inference unique id, should be a string of uuid.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/RootCauseAnalysisInferenceResponse"
            }
          },
          "default": {
            "description": "Client error or server error (4xx or 5xx)",
            "schema": {
              "$ref": "#/definitions/ErrorCode"
            }
          }
        },
        "x-ms-examples": {
          "Query an inference task state for root cause analysis": {
            "$ref": "./examples/GetRootCauseAnalysisInferenceState.json"
          }
        }
      }
    }
  },
  "definitions": {
    "RootCauseAnalysisMeasure": {
      "required": [
        "displayName"
      ],
      "type": "object",
      "properties": {
        "displayName": {
          "description": "Root cause analysis measure name",
          "type": "string"
        }
      }
    },
    "RootCauseAnalysisDataSet": {
      "required": [
        "displayName",
        "kind"
      ],
      "type": "object",
      "properties": {
        "kind": {
          "description": "Root cause analysis kind",
          "enum": [
            "multidimensional"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "RootCauseAnalysisType",
            "modelAsString": true
          }
        },
        "dataSetId": {
          "format": "uuid",
          "description": "Root cause analysis data set unique ID",
          "type": "string",
          "readOnly": true
        },
        "displayName": {
          "description": "Root cause analysis data set name",
          "type": "string"
        }
      },
      "discriminator": "kind",
      "example": {
  "granularity": "daily",
  "customInterval": 0,
  "dimensionKeys": [
    "Region",
    "Version"
  ],
  "aggregateIdentifier": "__SUM__",
  "measures": [
    {
      "displayName": "error rate"
    },
    {
      "displayName": "error count"
    },
    {
      "displayName": "total call count"
    }
  ],
  "displayName": "Sample Multidimensional Root Cause Analysis Dataset Name",
  "kind": "multidimensional"
}
    },
    "MultiDimRCADataSet": {
      "required": [
        "aggregateIdentifier",
        "customInterval",
        "dimensionKeys",
        "granularity",
        "measures"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/RootCauseAnalysisDataSet"
        }
      ],
      "properties": {
        "granularity": {
          "description": "Multidimensional root cause data set granularity",
          "enum": [
            "yearly",
            "monthly",
            "weekly",
            "daily",
            "hourly",
            "minutely",
            "secondly",
            "microsecond",
            "none"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "Granularity",
            "modelAsString": true
          }
        },
        "customInterval": {
          "format": "int32",
          "description": "Multidimensional root cause data set customized granularity interval in seconds",
          "type": "integer"
        },
        "dimensionKeys": {
          "description": "Multidimensional root cause data set dimension keys",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "aggregateIdentifier": {
          "description": "Multidimensional root cause analysis measure aggregate value",
          "type": "string"
        },
        "measures": {
          "description": "Measure list to do multidimensional root cause analysis",
          "type": "array",
          "items": {
            "$ref": "#/definitions/RootCauseAnalysisMeasure"
          }
        }
      },
      "x-ms-discriminator-value": "multidimensional"
    },
    "ErrorCode": {
      "type": "object",
      "properties": {
        "message": {
          "description": "Human-readable error message",
          "type": "string"
        },
        "code": {
          "description": "Error code",
          "type": "string"
        }
      }
    },
    "RootCauseAnalysisDataSetList": {
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "nextLink": {
          "description": "Link of next page, only provided when there are next pages",
          "type": "string"
        },
        "value": {
          "description": "Response values",
          "type": "array",
          "items": {
            "$ref": "#/definitions/RootCauseAnalysisDataSet"
          }
        }
      }
    },
    "RootCauseAnalysisUploadDataPartitionRequest": {
      "required": [
        "$type",
        "kind"
      ],
      "type": "object",
      "properties": {
        "$type": {
          "type": "string"
        },
        "kind": {
          "description": "Root cause analysis kind",
          "enum": [
            "multidimensional"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "RootCauseAnalysisType",
            "modelAsString": true
          }
        }
      },
      "discriminator": "$type",
      "example": {
  "data": [
    [
      "CN",
      "__SUM__",
      0.38,
      3800,
      10000
    ]
  ],
  "kind": "multidimensional"
}
    },
    "MultiDimRCAUploadDataPartitionRequest": {
      "required": [
        "data"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/RootCauseAnalysisUploadDataPartitionRequest"
        }
      ],
      "properties": {
        "data": {
          "description": "Multidimensional root cause data detail, the first few columns should be the dimension value. the last few columns should be the measure values",
          "type": "array",
          "items": {
            "type": "array",
            "items": {
              "type": "object"
            }
          }
        }
      },
      "x-ms-discriminator-value": "multidimensional"
    },
    "MultiDimRCADataPartition": {
      "required": [
        "data",
        "partitionIdentity",
        "timestamp"
      ],
      "type": "object",
      "properties": {
        "partitionIdentity": {
          "description": "Multidimensional root cause analysis data partition unique ID",
          "type": "string"
        },
        "timestamp": {
          "format": "date-time",
          "description": "Multidimensional root cause analysis date time of the data",
          "type": "string"
        },
        "data": {
          "description": "Multidimensional root cause data detail, the first few columns should be the dimension value. the last few columns should be the measure values",
          "type": "array",
          "items": {
            "type": "array",
            "items": {
              "type": "object"
            }
          }
        }
      }
    },
    "RootCauseAnalysisUploadDataBlockRequest": {
      "required": [
        "$type",
        "kind"
      ],
      "type": "object",
      "properties": {
        "$type": {
          "type": "string"
        },
        "kind": {
          "description": "Root cause analysis kind",
          "enum": [
            "multidimensional"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "RootCauseAnalysisType",
            "modelAsString": true
          }
        }
      },
      "discriminator": "$type",
      "example": {
  "value": [
    {
      "partitionIdentity": "PartitionIdentity1",
      "timestamp": "2021-12-01T00:00:00Z",
      "data": [
        [
          "CN",
          "__SUM__",
          0.38,
          3800,
          10000
        ],
        [
          "CN",
          "ios",
          0.3,
          3000,
          10000
        ],
        [
          "CN",
          "Android",
          0.006,
          60,
          10000
        ],
        [
          "US",
          "__SUM__",
          0.6,
          6000,
          10000
        ],
        [
          "JP",
          "__SUM__",
          0.001,
          10,
          10000
        ],
        [
          "DE",
          "__SUM__",
          0.0002,
          20,
          10000
        ],
        [
          "CA",
          "__SUM__",
          0.006,
          60,
          10000
        ],
        [
          "__SUM__",
          "__SUM__",
          1,
          10000,
          10000
        ]
      ]
    },
    {
      "partitionIdentity": "PartitionIdentity2",
      "timestamp": "2021-11-30T00:00:00Z",
      "data": [
        [
          "CN",
          "__SUM__",
          0.03,
          30,
          1000
        ],
        [
          "CN",
          "ios",
          0.02,
          20,
          1000
        ],
        [
          "CN",
          "Android",
          0.01,
          10,
          1000
        ],
        [
          "US",
          "__SUM__",
          0.3,
          300,
          1000
        ],
        [
          "JP",
          "__SUM__",
          0.1,
          10,
          1000
        ],
        [
          "DE",
          "__SUM__",
          0.01,
          10,
          1000
        ],
        [
          "CA",
          "__SUM__",
          0.01,
          10,
          1000
        ],
        [
          "__SUM__",
          "__SUM__",
          1,
          1000,
          1000
        ]
      ]
    },
    {
      "partitionIdentity": "PartitionIdentity3",
      "timestamp": "2021-11-29T00:00:00Z",
      "data": [
        [
          "CN",
          "__SUM__",
          0.3,
          300,
          1000
        ],
        [
          "CN",
          "ios",
          0.3,
          300,
          1000
        ],
        [
          "CN",
          "Android",
          0,
          0,
          1000
        ],
        [
          "US",
          "__SUM__",
          0.4,
          400,
          1000
        ],
        [
          "JP",
          "__SUM__",
          0.01,
          10,
          1000
        ],
        [
          "DE",
          "__SUM__",
          0.01,
          10,
          1000
        ],
        [
          "CA",
          "__SUM__",
          0.01,
          10,
          1000
        ],
        [
          "__SUM__",
          "__SUM__",
          1,
          1000,
          1000
        ]
      ]
    },
    {
      "partitionIdentity": "PartitionIdentity4",
      "timestamp": "2021-11-28T00:00:00Z",
      "data": [
        [
          "CN",
          "__SUM__",
          0.3,
          302,
          1000
        ],
        [
          "CN",
          "ios",
          0.3,
          302,
          1000
        ],
        [
          "CN",
          "Android",
          0,
          0,
          1000
        ],
        [
          "US",
          "__SUM__",
          0.4,
          401,
          1000
        ],
        [
          "JP",
          "__SUM__",
          0.009,
          9,
          1000
        ],
        [
          "DE",
          "__SUM__",
          0.011,
          11,
          1000
        ],
        [
          "CA",
          "__SUM__",
          0.01,
          1,
          1000
        ],
        [
          "__SUM__",
          "__SUM__",
          1,
          1000,
          1000
        ]
      ]
    },
    {
      "partitionIdentity": "PartitionIdentity5",
      "timestamp": "2021-11-27T00:00:00Z",
      "data": [
        [
          "CN",
          "__SUM__",
          0.299,
          299,
          1000
        ],
        [
          "CN",
          "ios",
          0.31,
          310,
          1000
        ],
        [
          "CN",
          "Android",
          0.001,
          1,
          1000
        ],
        [
          "US",
          "__SUM__",
          0.401,
          401,
          1000
        ],
        [
          "JP",
          "__SUM__",
          0.01,
          10,
          1000
        ],
        [
          "DE",
          "__SUM__",
          0.01,
          10,
          1000
        ],
        [
          "CA",
          "__SUM__",
          0.01,
          1,
          100
        ],
        [
          "__SUM__",
          "__SUM__",
          1,
          1000,
          1000
        ]
      ]
    }
  ],
  "kind": "multidimensional"
}
    },
    "MultiDimRCAUploadDataBlockRequest": {
      "required": [
        "value"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/RootCauseAnalysisUploadDataBlockRequest"
        }
      ],
      "properties": {
        "value": {
          "description": "Multidimensional root cause analysis data",
          "type": "array",
          "items": {
            "$ref": "#/definitions/MultiDimRCADataPartition"
          }
        }
      },
      "x-ms-discriminator-value": "multidimensional"
    },
    "RootCauseAnalysisDataMeta": {
      "required": [
        "kind"
      ],
      "type": "object",
      "properties": {
        "kind": {
          "description": "Root cause analysis kind",
          "enum": [
            "multidimensional"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "RootCauseAnalysisType",
            "modelAsString": true
          }
        }
      },
      "discriminator": "kind"
    },
    "MultiDimRCADataMeta": {
      "required": [
        "dataSize",
        "lastModifiedDateTime",
        "partitionIdentity",
        "timestamp"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/RootCauseAnalysisDataMeta"
        }
      ],
      "properties": {
        "partitionIdentity": {
          "description": "Multidimensional root cause analysis partition identity",
          "type": "string"
        },
        "dataSize": {
          "format": "int32",
          "description": "Multidimensional root cause analysis data size in the partition identity",
          "type": "integer"
        },
        "timestamp": {
          "format": "date-time",
          "description": "Multidimensional root cause date time of the data",
          "type": "string"
        },
        "lastModifiedDateTime": {
          "format": "date-time",
          "description": "Multidimensional root cause data last time updated",
          "type": "string"
        }
      },
      "x-ms-discriminator-value": "multidimensional"
    },
    "RootCauseAnalysisDataMetaListResponse": {
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "nextLink": {
          "description": "Link of next page, only provided when there are next pages",
          "type": "string"
        },
        "value": {
          "description": "Response values",
          "type": "array",
          "items": {
            "$ref": "#/definitions/RootCauseAnalysisDataMeta"
          }
        }
      }
    },
    "MultiDimRCAMeasure": {
      "required": [
        "dataSetId",
        "measureName"
      ],
      "type": "object",
      "properties": {
        "dataSetId": {
          "format": "uuid",
          "description": "Target dataset id for root cause analysis instance",
          "type": "string"
        },
        "measureName": {
          "description": "Target measure name for root cause analysis instance",
          "type": "string"
        }
      }
    },
    "RootCauseAnalysisInstance": {
      "required": [
        "displayName",
        "kind"
      ],
      "type": "object",
      "properties": {
        "kind": {
          "description": "Root cause analysis type",
          "enum": [
            "multidimensional"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "RootCauseAnalysisType",
            "modelAsString": true
          }
        },
        "instanceId": {
          "format": "uuid",
          "description": "Instance unique ID for root cause analysis",
          "type": "string",
          "readOnly": true
        },
        "displayName": {
          "description": "Instance name for root cause analysis",
          "type": "string"
        }
      },
      "discriminator": "kind",
      "example": {
  "targetMeasure": {
    "dataSetId": "01234567-8901-2345-6789-012345678901",
    "measureName": "error rate"
  },
  "assistiveMeasures": [
    {
      "dataSetId": "01234567-8901-2345-6789-012345678901",
      "measureName": "error count"
    },
    {
      "dataSetId": "01234567-8901-2345-6789-012345678901",
      "measureName": "total call count"
    }
  ],
  "displayName": "Sample Root Cause Analysis Instance Name",
  "kind": "multidimensional"
}
    },
    "MultiRCADimInstance": {
      "required": [
        "assistiveMeasures",
        "targetMeasure"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/RootCauseAnalysisInstance"
        }
      ],
      "properties": {
        "targetMeasure": {
          "$ref": "#/definitions/MultiDimRCAMeasure"
        },
        "assistiveMeasures": {
          "description": "Data sets for root cause analysis",
          "type": "array",
          "items": {
            "$ref": "#/definitions/MultiDimRCAMeasure"
          }
        }
      },
      "x-ms-discriminator-value": "multidimensional"
    },
    "RootCauseAnalysisInstanceResponseList": {
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "nextLink": {
          "description": "Link of next page, only provided when there are next pages",
          "type": "string"
        },
        "value": {
          "description": "Response values",
          "type": "array",
          "items": {
            "$ref": "#/definitions/RootCauseAnalysisInstance"
          }
        }
      }
    },
    "MultiDimRCATrainingParameter": {
      "required": [
        "endDateTime",
        "startDateTime"
      ],
      "type": "object",
      "properties": {
        "startDateTime": {
          "format": "date-time",
          "description": "Start time of data used to train model",
          "type": "string"
        },
        "endDateTime": {
          "format": "date-time",
          "description": "End time of data used to train model",
          "type": "string"
        }
      }
    },
    "RootCauseAnalysisTrainingRequest": {
      "required": [
        "displayName",
        "kind"
      ],
      "type": "object",
      "properties": {
        "kind": {
          "description": "Root cause analysis kind",
          "enum": [
            "multidimensional"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "RootCauseAnalysisType",
            "modelAsString": true
          }
        },
        "displayName": {
          "description": "Model name",
          "type": "string"
        }
      },
      "discriminator": "kind",
      "example": {
  "parameter": {
    "startDateTime": "2021-10-01T00:00:00Z",
    "endDateTime": "2021-11-30T00:00:00Z"
  },
  "displayName": "Sample Root Cause Analysis Model Name",
  "kind": "multidimensional"
}
    },
    "MultiDimRCATrainingRequest": {
      "required": [
        "parameter"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/RootCauseAnalysisTrainingRequest"
        }
      ],
      "properties": {
        "parameter": {
          "$ref": "#/definitions/MultiDimRCATrainingParameter"
        }
      },
      "x-ms-discriminator-value": "multidimensional"
    },
    "MultiDimRCATrainingTaskInfo": {
      "required": [
        "bestEpoch",
        "bestValidationLoss",
        "edgeSize",
        "epochs",
        "latencyInSecond",
        "nodeSize",
        "trainLoss",
        "validationLoss"
      ],
      "type": "object",
      "properties": {
        "epochs": {
          "description": "Train epochs",
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "trainLoss": {
          "description": "Train loss for each epoch",
          "type": "array",
          "items": {
            "format": "double",
            "type": "number"
          }
        },
        "validationLoss": {
          "description": "Validation loss for each epoch",
          "type": "array",
          "items": {
            "format": "double",
            "type": "number"
          }
        },
        "latencyInSecond": {
          "description": "Latency in second for each epoch",
          "type": "array",
          "items": {
            "format": "double",
            "type": "number"
          }
        },
        "bestEpoch": {
          "format": "int32",
          "description": "Best epoch",
          "type": "integer"
        },
        "bestValidationLoss": {
          "format": "double",
          "description": "Best validation loss",
          "type": "number"
        },
        "nodeSize": {
          "description": "Node size for each timestamp",
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "edgeSize": {
          "description": "Edge size for each timestamp",
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        }
      }
    },
    "ErrorDetail": {
      "type": "object",
      "properties": {
        "message": {
          "description": "Human-readable error message",
          "type": "string"
        },
        "code": {
          "$ref": "#/definitions/ErrorCode"
        }
      }
    },
    "RootCauseAnalysisTrainingResponse": {
      "required": [
        "createdDateTime",
        "displayName",
        "instanceId",
        "kind",
        "lastModifiedDateTime",
        "modelId",
        "status",
        "taskId"
      ],
      "type": "object",
      "properties": {
        "kind": {
          "description": "kind of root cause analysis",
          "enum": [
            "multidimensional"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "RootCauseAnalysisType",
            "modelAsString": true
          }
        },
        "taskId": {
          "format": "uuid",
          "description": "Training task unique id for root cause analysis",
          "type": "string"
        },
        "instanceId": {
          "format": "uuid",
          "description": "Instance unique id for root cause analysis",
          "type": "string"
        },
        "modelId": {
          "format": "uuid",
          "description": "Model unique id for root cause analysis",
          "type": "string"
        },
        "displayName": {
          "description": "Model name for root cause analysis",
          "type": "string"
        },
        "status": {
          "description": "Training task status for root cause analysis",
          "enum": [
            "scheduled",
            "running",
            "succeeded",
            "failed",
            "canceled"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "RootCauseAnalysisTrainingStatus",
            "modelAsString": true
          }
        },
        "createdDateTime": {
          "format": "date-time",
          "description": "Training task created date time",
          "type": "string"
        },
        "lastModifiedDateTime": {
          "format": "date-time",
          "description": "Training task state modified date time",
          "type": "string"
        },
        "error": {
          "$ref": "#/definitions/ErrorDetail"
        },
        "taskInfo": {
          "$ref": "#/definitions/MultiDimRCATrainingTaskInfo"
        },
        "parameter": {
          "$ref": "#/definitions/MultiDimRCATrainingParameter"
        }
      },
      "discriminator": "kind"
    },
    "MultiDimRCATrainingResponse": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/RootCauseAnalysisTrainingResponse"
        }
      ],
      "x-ms-discriminator-value": "multidimensional"
    },
    "RootCauseAnalysisTrainingResponseList": {
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "nextLink": {
          "description": "Link of next page, only provided when there are next pages",
          "type": "string"
        },
        "value": {
          "description": "Response values",
          "type": "array",
          "items": {
            "$ref": "#/definitions/RootCauseAnalysisTrainingResponse"
          }
        }
      }
    },
    "MultiDimRCAInferenceParameter": {
      "required": [
        "dimensionScope",
        "timestamp"
      ],
      "type": "object",
      "properties": {
        "timestamp": {
          "format": "date-time",
          "description": "Timestamp of issue to be analyzed",
          "type": "string"
        },
        "dimensionScope": {
          "description": "Dimension scope used to narrow down the search",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "RootCauseAnalysisInferenceRequest": {
      "required": [
        "kind"
      ],
      "type": "object",
      "properties": {
        "kind": {
          "description": "Root cause analysis kind",
          "enum": [
            "multidimensional"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "RootCauseAnalysisType",
            "modelAsString": true
          }
        }
      },
      "discriminator": "kind",
      "example": {
  "parameter": {
    "timestamp": "2021-12-01T00:00:00Z",
    "dimensionScope": {}
  },
  "kind": "multidimensional"
}
    },
    "MultiDimRCAInferenceRequest": {
      "required": [
        "parameter"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/RootCauseAnalysisInferenceRequest"
        }
      ],
      "properties": {
        "parameter": {
          "$ref": "#/definitions/MultiDimRCAInferenceParameter"
        }
      },
      "x-ms-discriminator-value": "multidimensional"
    },
    "MultiDimRootCauseMeasure": {
      "required": [
        "contributionScore",
        "dataSetId",
        "displayName",
        "trendType"
      ],
      "type": "object",
      "properties": {
        "dataSetId": {
          "format": "uuid",
          "description": "data set unique id of the root cause measure",
          "type": "string"
        },
        "displayName": {
          "description": "name of the root cause measure",
          "type": "string"
        },
        "trendType": {
          "description": "trend type of the measure",
          "enum": [
            "rise",
            "drop"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "MultiDimRootCauseMeasureTrendType",
            "modelAsString": true
          }
        },
        "contributionScore": {
          "format": "double",
          "description": "contribution score of the measure",
          "type": "number"
        }
      }
    },
    "MultiDimRootCause": {
      "required": [
        "dimension",
        "measures",
        "score"
      ],
      "type": "object",
      "properties": {
        "dimension": {
          "description": "dimension combination of the root cause",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "score": {
          "format": "double",
          "description": "score of the root cause",
          "type": "number"
        },
        "measures": {
          "description": "root cause measures",
          "type": "array",
          "items": {
            "$ref": "#/definitions/MultiDimRootCauseMeasure"
          }
        }
      }
    },
    "MultiDimRCAInferenceResult": {
      "required": [
        "rootCauses"
      ],
      "type": "object",
      "properties": {
        "rootCauses": {
          "description": "root causes",
          "type": "array",
          "items": {
            "$ref": "#/definitions/MultiDimRootCause"
          }
        }
      }
    },
    "RootCauseAnalysisInferenceResponse": {
      "required": [
        "createdDateTime",
        "inferenceId",
        "instanceId",
        "kind",
        "lastModifiedDateTime",
        "modelId",
        "status"
      ],
      "type": "object",
      "properties": {
        "kind": {
          "description": "kind of root cause analysis",
          "enum": [
            "multidimensional"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "RootCauseAnalysisType",
            "modelAsString": true
          }
        },
        "inferenceId": {
          "format": "uuid",
          "description": "Inference unique id for root cause analysis",
          "type": "string"
        },
        "instanceId": {
          "format": "uuid",
          "description": "Instance unique id for root cause analysis",
          "type": "string"
        },
        "modelId": {
          "format": "uuid",
          "description": "Model unique id for root cause analysis",
          "type": "string"
        },
        "status": {
          "description": "Inference task status for root cause analysis",
          "enum": [
            "scheduled",
            "running",
            "succeeded",
            "failed",
            "canceled"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "RootCauseAnalysisInferenceStatus",
            "modelAsString": true
          }
        },
        "createdDateTime": {
          "format": "date-time",
          "description": "Inference task created date time",
          "type": "string"
        },
        "lastModifiedDateTime": {
          "format": "date-time",
          "description": "Inference task state modified date time",
          "type": "string"
        },
        "error": {
          "$ref": "#/definitions/ErrorDetail"
        },
        "result": {
          "$ref": "#/definitions/MultiDimRCAInferenceResult"
        },
        "parameter": {
          "$ref": "#/definitions/MultiDimRCAInferenceParameter"
        }
      },
      "discriminator": "kind"
    },
    "MultiDimRCAInferenceResponse": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/RootCauseAnalysisInferenceResponse"
        }
      ],
      "x-ms-discriminator-value": "multidimensional"
    }
  },
  "securityDefinitions": {
    "apiKeyHeader": {
      "type": "apiKey",
      "name": "Ocp-Apim-Subscription-Key",
      "in": "header",
      "description": "The secret key for your Azure Cognitive Services subscription."
    }
  },
  "security": [
    {
      "apiKeyHeader": [ ]
    }
  ],
  "parameters": {
    "Endpoint": {
      "name": "Endpoint",
      "description": "Supported Cognitive Services endpoints (protocol and hostname, for example: https://westus2.api.cognitive.microsoft.com).",
      "x-ms-parameter-location": "client",
      "required": true,
      "type": "string",
      "in": "path",
      "x-ms-skip-url-encoding": true
    }
  },
  "x-ms-parameterized-host": {
    "hostTemplate": "{Endpoint}/anomalydetector/v1.2-preview",
    "useSchemePrefix": false,
    "parameters": [
      {
        "$ref": "#/parameters/Endpoint"
      }
    ]
  }
}