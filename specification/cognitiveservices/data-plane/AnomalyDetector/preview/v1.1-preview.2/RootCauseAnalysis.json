{
  "swagger": "2.0",
  "info": {
    "title": "Anomaly Detector Client",
    "description": "Root cause analysis(RCA) helps trace the crucial dimension combinations that contribute to the given anomaly point with aggregated dimension combination. For example, when a point with dimension Country = Sum, version = Sum is detected as anomaly point, using root cause analysis algorithm, we can locate the child dimension combination, for example, it might be Country = CN, version = IOS causes the given anomaly. Our algorithm supports finding root cause  from both single and multiple measures.",
    "version": "1.1-preview.2"
  },
  "paths": {
    "/rootCauseAnalysis/dataSets/{dataSetId}": {
      "put": {
        "tags": [
          "RootCauseAnalysisDataSet"
        ],
        "summary": "Create a root cause analysis data set",
        "operationId": "CreateRootCauseAnalysisDataSet",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "dataSetId",
            "description": "The root cause analysis data set unique id, should be a string of uuid",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "body",
            "description": "create a root cause analysis data set request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RootCauseAnalysisDataSet"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "headers": {
              "Location": {
                "description": "Location of the newly created resource.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Client error or server error (4xx or 5xx)",
            "schema": {
              "$ref": "#/definitions/ErrorDetail"
            },
            "headers": {
              "x-ms-error-code": {
                "description": "error code",
                "type": "string"
              }
            }
          }
        },
        "x-ms-examples": {
          "Create a root cause analysis data set": {
            "$ref": "./examples/CreateRootCauseAnalysisDataSet.json"
          }
        }
      },
      "get": {
        "tags": [
          "RootCauseAnalysisDataSet"
        ],
        "summary": "Get a root cause analysis data set by its id",
        "operationId": "GetRootCauseAnalysisDataSet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "dataSetId",
            "description": "The root cause analysis data set unique id, should be a string of uuid",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/RootCauseAnalysisDataSet"
            }
          },
          "default": {
            "description": "Client error or server error (4xx or 5xx)",
            "schema": {
              "$ref": "#/definitions/ErrorDetail"
            },
            "headers": {
              "x-ms-error-code": {
                "description": "error code",
                "type": "string"
              }
            }
          }
        },
        "x-ms-examples": {
          "Get a root cause analysis data set by its id": {
            "$ref": "./examples/GetRootCauseAnalysisDataSet.json"
          }
        }
      },
      "delete": {
        "tags": [
          "RootCauseAnalysisDataSet"
        ],
        "summary": "Delete a root cause analysis data set",
        "operationId": "DeleteRootCauseAnalysisDataSet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "dataSetId",
            "description": "The root cause analysis data set unique id, should be a string of uuid",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "204": {
            "description": "The resource is deleted successfully or does not exist."
          },
          "default": {
            "description": "Client error or server error (4xx or 5xx)",
            "schema": {
              "$ref": "#/definitions/ErrorDetail"
            },
            "headers": {
              "x-ms-error-code": {
                "description": "error code",
                "type": "string"
              }
            }
          }
        },
        "x-ms-examples": {
          "Delete a root cause analysis data set": {
            "$ref": "./examples/DeleteRootCauseAnalysisDataSet.json"
          }
        }
      }
    },
    "/rootCauseAnalysis/dataSets": {
      "get": {
        "tags": [
          "RootCauseAnalysisDataSet"
        ],
        "summary": "List root cause analysis data sets",
        "operationId": "ListRootCauseAnalysisDataSets",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "skip",
            "description": "For paging, skipped number",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "maxpagesize",
            "description": "The maximum number of items in one page",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "filter",
            "description": "The filter expression filters out the resources to be returned, currently contains(displayName, 'filter name’) is supported",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/RootCauseAnalysisDataSetList"
            }
          },
          "default": {
            "description": "Client error or server error (4xx or 5xx)",
            "schema": {
              "$ref": "#/definitions/ErrorDetail"
            },
            "headers": {
              "x-ms-error-code": {
                "description": "error code",
                "type": "string"
              }
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "List root cause analysis data sets": {
            "$ref": "./examples/ListRootCauseAnalysisDataSets.json"
          }
        }
      }
    },
    "/rootCauseAnalysis/dataSets/{dataSetId}/timestamps/{timestamp}/partitions/{partitionId}": {
      "put": {
        "tags": [
          "RootCauseAnalysisDataSet"
        ],
        "summary": "Upload data to root cause analysis data set by partition",
        "operationId": "UploadRootCauseAnalysisDataByPartition",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "dataSetId",
            "description": "The root cause analysis data set unique id. Should be a string of uuid",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "timestamp",
            "description": "Timestamp of the data, should be a string of ISO format",
            "required": true,
            "type": "string",
            "format": "date-time"
          },
          {
            "in": "path",
            "name": "partitionId",
            "description": "The partition unique id，should be a string of uuid",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Data to be uploaded to perform root cause analysis",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RootCauseAnalysisUploadDataPartitionRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "headers": {
              "Location": {
                "description": "Location of the newly created resource.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Client error or server error (4xx or 5xx)",
            "schema": {
              "$ref": "#/definitions/ErrorDetail"
            },
            "headers": {
              "x-ms-error-code": {
                "description": "error code",
                "type": "string"
              }
            }
          }
        },
        "x-ms-examples": {
          "Upload data to root cause analysis data set by partition": {
            "$ref": "./examples/UploadRootCauseAnalysisDataByPartition.json"
          }
        }
      },
      "delete": {
        "tags": [
          "RootCauseAnalysisDataSet"
        ],
        "summary": "Delete root cause analysis data by partition Id",
        "operationId": "DeleteRootCauseAnalysisDataByPartitionId",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "dataSetId",
            "description": "Data set unique id，should be a string of uuid",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "timestamp",
            "description": "The time stamp to be queried, should be a string of ISO format",
            "required": true,
            "type": "string",
            "format": "date-time"
          },
          {
            "in": "path",
            "name": "partitionId",
            "description": "Data partition unique id，should be a string of uuid",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "204": {
            "description": "The resource is deleted successfully or does not exist."
          },
          "default": {
            "description": "Client error or server error (4xx or 5xx)",
            "schema": {
              "$ref": "#/definitions/ErrorDetail"
            },
            "headers": {
              "x-ms-error-code": {
                "description": "error code",
                "type": "string"
              }
            }
          }
        },
        "x-ms-examples": {
          "Delete root cause analysis data by partition Id": {
            "$ref": "./examples/DeleteRootCauseAnalysisDataByPartitionId.json"
          }
        }
      }
    },
    "/rootCauseAnalysis/dataSets/{dataSetId}/timestamps:upload": {
      "post": {
        "tags": [
          "RootCauseAnalysisDataSet"
        ],
        "summary": "Upload data to root cause analysis data set by block",
        "operationId": "UploadRootCauseAnalysisDataByBlock",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "dataSetId",
            "description": "The root cause analysis data set unique id，should be a string of uuid",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Data to be uploaded to perform root cause analysis",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RootCauseAnalysisUploadDataBlockRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Success"
          },
          "default": {
            "description": "Client error or server error (4xx or 5xx)",
            "schema": {
              "$ref": "#/definitions/ErrorDetail"
            },
            "headers": {
              "x-ms-error-code": {
                "description": "error code",
                "type": "string"
              }
            }
          }
        },
        "x-ms-examples": {
          "Upload data to root cause analysis data set by block": {
            "$ref": "./examples/UploadRootCauseAnalysisDataByBlock.json"
          }
        }
      }
    },
    "/rootCauseAnalysis/dataSets/{dataSetId}/timestamps:purge": {
      "post": {
        "tags": [
          "RootCauseAnalysisDataSet"
        ],
        "summary": "Delete root cause analysis data by time range",
        "operationId": "DeleteRootCauseAnalysisDataByTimeRange",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "dataSetId",
            "description": "The root cause analysis data set unique id，should be a string of uuid",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "query",
            "name": "start",
            "description": "Start date time, should be ISO format",
            "type": "string"
          },
          {
            "in": "query",
            "name": "end",
            "description": "End date time, should be ISO format",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "description": "Client error or server error (4xx or 5xx)",
            "schema": {
              "$ref": "#/definitions/ErrorDetail"
            },
            "headers": {
              "x-ms-error-code": {
                "description": "error code",
                "type": "string"
              }
            }
          }
        },
        "x-ms-examples": {
          "Delete root cause analysis data by time range": {
            "$ref": "./examples/DeleteRootCauseAnalysisDataByTimeRange.json"
          }
        }
      }
    },
    "/rootCauseAnalysis/dataSets/{dataSetId}/timestamps/{timestamp}/partitions": {
      "get": {
        "tags": [
          "RootCauseAnalysisDataSet"
        ],
        "summary": "List data meta for a given timestamp",
        "operationId": "ListRootCauseAnalysisDataMetaByTimestamp",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "dataSetId",
            "description": "The root cause analysis data set unique id, should be a string of uuid",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "timestamp",
            "description": "The time stamp to be queried, should be a string of ISO format, should be a string of uuid",
            "required": true,
            "type": "string",
            "format": "date-time"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/RootCauseAnalysisDataMetaListResponse"
            }
          },
          "default": {
            "description": "Client error or server error (4xx or 5xx)",
            "schema": {
              "$ref": "#/definitions/ErrorDetail"
            },
            "headers": {
              "x-ms-error-code": {
                "description": "error code",
                "type": "string"
              }
            }
          }
        },
        "x-ms-examples": {
          "List data meta for a given timestamp": {
            "$ref": "./examples/ListRootCauseAnalysisDataMetaByTimestamp.json"
          }
        }
      }
    },
    "/rootCauseAnalysis/dataSets/{dataSetId}/timestamps": {
      "get": {
        "tags": [
          "RootCauseAnalysisDataSet"
        ],
        "summary": "List data meta",
        "operationId": "ListRootCauseAnalysisDataMetaByTimeRange",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "dataSetId",
            "description": "The root cause analysis data set unique id, should be a string of uuid",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "query",
            "name": "skip",
            "description": "For paging, skipped number",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "maxpagesize",
            "description": "The maximum number of items in one page",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "filter",
            "description": "The filter expression filters out the resources, currently 2 kinds of operation are supported. They are timestamp ge XXXX and timestamp le XXXX. Timestamp must be ISO format",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/RootCauseAnalysisDataMetaListResponse"
            }
          },
          "default": {
            "description": "Client error or server error (4xx or 5xx)",
            "schema": {
              "$ref": "#/definitions/ErrorDetail"
            },
            "headers": {
              "x-ms-error-code": {
                "description": "error code",
                "type": "string"
              }
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "List data meta": {
            "$ref": "./examples/ListRootCauseAnalysisDataMetaByTimeRange.json"
          }
        }
      }
    },
    "/rootCauseAnalysis/instances/{instanceId}": {
      "put": {
        "tags": [
          "RootCauseAnalysisInstance"
        ],
        "summary": "Create an instance for root cause analysis",
        "operationId": "CreateRootCauseAnalysisInstance",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "instanceId",
            "description": "Instance unique id, should be a string of uuid.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Create a root cause analysis instance request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RootCauseAnalysisInstance"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "headers": {
              "Location": {
                "description": "Location of the newly created resource.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Client error or server error (4xx or 5xx)",
            "schema": {
              "$ref": "#/definitions/ErrorDetail"
            },
            "headers": {
              "x-ms-error-code": {
                "description": "error code",
                "type": "string"
              }
            }
          }
        },
        "x-ms-examples": {
          "Create an instance for root cause analysis": {
            "$ref": "./examples/CreateRootCauseAnalysisInstance.json"
          }
        }
      },
      "get": {
        "tags": [
          "RootCauseAnalysisInstance"
        ],
        "summary": "Query an instance information for root cause analysis",
        "operationId": "GetRootCauseAnalysisInstance",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "instanceId",
            "description": "Instance unique id, should be a string of uuid.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/RootCauseAnalysisInstance"
            }
          },
          "default": {
            "description": "Client error or server error (4xx or 5xx)",
            "schema": {
              "$ref": "#/definitions/ErrorDetail"
            },
            "headers": {
              "x-ms-error-code": {
                "description": "error code",
                "type": "string"
              }
            }
          }
        },
        "x-ms-examples": {
          "Query an instance information for root cause analysis": {
            "$ref": "./examples/GetRootCauseAnalysisInstance.json"
          }
        }
      },
      "delete": {
        "tags": [
          "RootCauseAnalysisInstance"
        ],
        "summary": "Delete an instance for root cause analysis",
        "operationId": "DeleteRootCauseAnalysisInstance",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "instanceId",
            "description": "Instance unique id",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "204": {
            "description": "The resource is deleted successfully or does not exist."
          },
          "default": {
            "description": "Client error or server error (4xx or 5xx)",
            "schema": {
              "$ref": "#/definitions/ErrorDetail"
            },
            "headers": {
              "x-ms-error-code": {
                "description": "error code",
                "type": "string"
              }
            }
          }
        },
        "x-ms-examples": {
          "Delete an instance for root cause analysis": {
            "$ref": "./examples/DeleteRootCauseAnalysisInstance.json"
          }
        }
      }
    },
    "/rootCauseAnalysis/instances": {
      "get": {
        "tags": [
          "RootCauseAnalysisInstance"
        ],
        "summary": "Get instance list for root cause analysis",
        "operationId": "ListRootCauseAnalysisInstances",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "skip",
            "description": "For paging, skipped number",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "maxpagesize",
            "description": "The maximum number of items in one page",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "filter",
            "description": "The filter expression filters out the resources to be returned, currently contains(displayName, 'filter name’) is supported",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/RootCauseAnalysisInstanceResponseList"
            }
          },
          "default": {
            "description": "Client error or server error (4xx or 5xx)",
            "schema": {
              "$ref": "#/definitions/ErrorDetail"
            },
            "headers": {
              "x-ms-error-code": {
                "description": "error code",
                "type": "string"
              }
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "Get instance list for root cause analysis": {
            "$ref": "./examples/ListRootCauseAnalysisInstances.json"
          }
        }
      }
    },
    "/rootCauseAnalysis/kinds": {
      "get": {
        "tags": [
          "RootCauseAnalysisKind"
        ],
        "summary": "Get kind list for root cause analysis",
        "operationId": "ListRootCauseAnalysisKinds",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/RootCauseAnalysisKindList"
            }
          },
          "default": {
            "description": "Client error or server error (4xx or 5xx)",
            "schema": {
              "$ref": "#/definitions/ErrorDetail"
            },
            "headers": {
              "x-ms-error-code": {
                "description": "error code",
                "type": "string"
              }
            }
          }
        },
        "x-ms-examples": {
          "Get kind list for root cause analysis": {
            "$ref": "./examples/ListRootCauseAnalysisKinds.json"
          }
        }
      }
    },
    "/rootCauseAnalysis/instances/{instanceId}/models/{modelId}": {
      "put": {
        "tags": [
          "RootCauseAnalysisModel"
        ],
        "summary": "Create a training model for root cause analysis",
        "operationId": "CreateRootCauseAnalysisTrainingTask",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "instanceId",
            "description": "Instance unique id, should be a string of uuid",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "modelId",
            "description": "Model unique id, should be a string of uuid",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RootCauseAnalysisTrainingRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/RootCauseAnalysisTrainingResponse"
            },
            "examples": {
              "application/json": {
  "taskId": "11111111-1111-4444-4444-000000000000",
  "instanceId": "11111111-2222-3333-4444-000000000000",
  "modelId": "11223344-5555-6666-7777-000000000000",
  "displayName": "Model name 1",
  "kind": "multidimensional",
  "status": "scheduled",
  "createdDateTime": "2021-11-30T00:00:00Z",
  "lastModifiedDateTime": "2021-11-30T00:00:00Z",
  "parameter": {
    "startDateTime": "2021-10-01T00:00:00Z",
    "endDateTime": "2021-11-30T00:00:00Z"
  }
}
            },
            "headers": {
              "Location": {
                "description": "Location of the newly created resource.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Client error or server error (4xx or 5xx)",
            "schema": {
              "$ref": "#/definitions/ErrorDetail"
            },
            "headers": {
              "x-ms-error-code": {
                "description": "error code",
                "type": "string"
              }
            }
          }
        },
        "x-ms-examples": {
          "Create a training model for root cause analysis": {
            "$ref": "./examples/CreateRootCauseAnalysisTrainingTask.json"
          }
        }
      },
      "delete": {
        "tags": [
          "RootCauseAnalysisModel"
        ],
        "summary": "Delete a model for root cause analysis",
        "operationId": "DeleteRootCauseAnalysisModel",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "instanceId",
            "description": "Instance unique id, should be a string of uuid.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "modelId",
            "description": "Model unique id, should be a string of uuid.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "204": {
            "description": "The resource is deleted successfully or does not exist."
          },
          "default": {
            "description": "Client error or server error (4xx or 5xx)",
            "schema": {
              "$ref": "#/definitions/ErrorDetail"
            },
            "headers": {
              "x-ms-error-code": {
                "description": "error code",
                "type": "string"
              }
            }
          }
        },
        "x-ms-examples": {
          "Delete a model for root cause analysis": {
            "$ref": "./examples/DeleteRootCauseAnalysisModel.json"
          }
        }
      },
      "get": {
        "tags": [
          "RootCauseAnalysisModel"
        ],
        "summary": "Query a training task state for root cause analysis",
        "operationId": "GetRootCauseAnalysisTrainingState",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "instanceId",
            "description": "Instance unique id, should be a string of uuid.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "modelId",
            "description": "Model unique id, should be a string of uuid.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/RootCauseAnalysisTrainingResponse"
            }
          },
          "default": {
            "description": "Client error or server error (4xx or 5xx)",
            "schema": {
              "$ref": "#/definitions/ErrorDetail"
            },
            "headers": {
              "x-ms-error-code": {
                "description": "error code",
                "type": "string"
              }
            }
          }
        },
        "x-ms-examples": {
          "Query a training task state for root cause analysis": {
            "$ref": "./examples/GetRootCauseAnalysisTrainingState.json"
          }
        }
      }
    },
    "/rootCauseAnalysis/instances/{instanceId}/models": {
      "get": {
        "tags": [
          "RootCauseAnalysisModel"
        ],
        "summary": "Query training task state list for root cause analysis",
        "operationId": "ListRootCauseAnalysisTrainingStates",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "instanceId",
            "description": "Instance unique id, should be a string of uuid.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "query",
            "name": "skip",
            "description": "For paging, skipped number",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "maxpagesize",
            "description": "The maximum number of items in one page",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "filter",
            "description": "The filter expression filters out the resources to be returned, currently contains(displayName, 'filter name’) is supported",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/RootCauseAnalysisTrainingResponseList"
            }
          },
          "default": {
            "description": "Client error or server error (4xx or 5xx)",
            "schema": {
              "$ref": "#/definitions/ErrorDetail"
            },
            "headers": {
              "x-ms-error-code": {
                "description": "error code",
                "type": "string"
              }
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "Query training task state list for root cause analysis": {
            "$ref": "./examples/ListRootCauseAnalysisTrainingStates.json"
          }
        }
      }
    },
    "/rootCauseAnalysis/instances/{instanceId}/models/{modelId}/inferences/{inferenceId}": {
      "put": {
        "tags": [
          "RootCauseAnalysisModel"
        ],
        "summary": "Create an inference task for root cause analysis",
        "operationId": "CreateRootCauseAnalysisInferenceTask",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "instanceId",
            "description": "Instance unique id, should be a string of uuid.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "modelId",
            "description": "Model unique id, should be a string of uuid.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "inferenceId",
            "description": "Inference unique id, should be a string of uuid.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Inference request of root cause analysis",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RootCauseAnalysisInferenceRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/RootCauseAnalysisInferenceResponse"
            },
            "examples": {
              "application/json": {
  "taskId": "11111111-1111-4444-4444-000000000000",
  "instanceId": "11111111-2222-3333-4444-000000000000",
  "modelId": "11223344-5555-6666-7777-000000000000",
  "displayName": "Model name 1",
  "kind": "multidimensional",
  "status": "scheduled",
  "createdDateTime": "2021-11-30T00:00:00Z",
  "lastModifiedDateTime": "2021-11-30T00:00:00Z",
  "parameter": {
    "startDateTime": "2021-10-01T00:00:00Z",
    "endDateTime": "2021-11-30T00:00:00Z"
  }
}
            },
            "headers": {
              "Location": {
                "description": "Location of the newly created resource.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Client error or server error (4xx or 5xx)",
            "schema": {
              "$ref": "#/definitions/ErrorDetail"
            },
            "headers": {
              "x-ms-error-code": {
                "description": "error code",
                "type": "string"
              }
            }
          }
        },
        "x-ms-examples": {
          "Create an inference task for root cause analysis": {
            "$ref": "./examples/CreateRootCauseAnalysisInferenceTask.json"
          }
        }
      },
      "get": {
        "tags": [
          "RootCauseAnalysisModel"
        ],
        "summary": "Query an inference task state for root cause analysis",
        "operationId": "GetRootCauseAnalysisInferenceState",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "instanceId",
            "description": "Instance unique id, should be a string of uuid.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "modelId",
            "description": "Model unique id, should be a string of uuid.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "inferenceId",
            "description": "Inference unique id, should be a string of uuid.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/RootCauseAnalysisInferenceResponse"
            }
          },
          "default": {
            "description": "Client error or server error (4xx or 5xx)",
            "schema": {
              "$ref": "#/definitions/ErrorDetail"
            },
            "headers": {
              "x-ms-error-code": {
                "description": "error code",
                "type": "string"
              }
            }
          }
        },
        "x-ms-examples": {
          "Query an inference task state for root cause analysis": {
            "$ref": "./examples/GetRootCauseAnalysisInferenceState.json"
          }
        }
      }
    }
  },
  "definitions": {
    "RootCauseAnalysisMeasure": {
      "required": [
        "displayName"
      ],
      "type": "object",
      "properties": {
        "displayName": {
          "description": "Root cause analysis measure name",
          "type": "string"
        }
      }
    },
    "RootCauseAnalysisDataSet": {
      "required": [
        "displayName",
        "kind"
      ],
      "type": "object",
      "properties": {
        "kind": {
          "description": "Root cause analysis kind",
          "enum": [
            "multidimensional"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "RootCauseAnalysisType",
            "modelAsString": true
          }
        },
        "dataSetId": {
          "format": "uuid",
          "description": "Root cause analysis data set unique ID",
          "type": "string",
          "readOnly": true
        },
        "displayName": {
          "description": "Root cause analysis data set name",
          "type": "string"
        }
      },
      "discriminator": "kind",
      "example": {
  "granularity": "daily",
  "customInterval": 0,
  "dimensionKeys": [
    "Region",
    "Version"
  ],
  "aggregatedIdentifier": "__SUM__",
  "measures": [
    {
      "displayName": "error rate"
    },
    {
      "displayName": "error count"
    },
    {
      "displayName": "total call count"
    }
  ],
  "displayName": "Sample Multidimensional Root Cause Analysis Dataset Name",
  "kind": "multidimensional"
}
    },
    "MultiDimRCADataSet": {
      "required": [
        "aggregatedIdentifier",
        "customInterval",
        "dimensionKeys",
        "granularity",
        "measures"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/RootCauseAnalysisDataSet"
        }
      ],
      "properties": {
        "granularity": {
          "description": "Multidimensional root cause data set granularity",
          "enum": [
            "yearly",
            "monthly",
            "weekly",
            "daily",
            "hourly",
            "minutely",
            "secondly",
            "microsecond",
            "none"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "Granularity",
            "modelAsString": true
          }
        },
        "customInterval": {
          "format": "int32",
          "description": "Multidimensional root cause data set customized granularity interval. For example, if the granularity is daily and customInterval is 3, it means the data interval should be 3 days.",
          "type": "integer"
        },
        "dimensionKeys": {
          "description": "Multidimensional root cause data set dimension keys",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "aggregatedIdentifier": {
          "description": "Identifier to describe the aggregated dimension for this data set. Only one identifier should be used.",
          "type": "string"
        },
        "measures": {
          "description": "Measures for the data",
          "type": "array",
          "items": {
            "$ref": "#/definitions/RootCauseAnalysisMeasure"
          }
        }
      },
      "x-ms-discriminator-value": "multidimensional"
    },
    "ErrorDetail": {
      "type": "object",
      "properties": {
        "message": {
          "description": "Human-readable error message",
          "type": "string"
        },
        "code": {
          "description": "Error code",
          "type": "string"
        }
      }
    },
    "RootCauseAnalysisDataSetList": {
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "nextLink": {
          "description": "Link of next page, only provided when there are next pages",
          "type": "string"
        },
        "value": {
          "description": "Response values",
          "type": "array",
          "items": {
            "$ref": "#/definitions/RootCauseAnalysisDataSet"
          }
        }
      }
    },
    "RootCauseAnalysisUploadDataPartitionRequest": {
      "required": [
        "data",
        "kind"
      ],
      "type": "object",
      "properties": {
        "kind": {
          "description": "Root cause analysis kind",
          "enum": [
            "multidimensional"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "RootCauseAnalysisType",
            "modelAsString": true
          }
        },
        "data": {
          "description": "Root cause data detail, the first few columns should be the dimension value. the last few columns should be the measure values. For the value doesn't exist, use null to define it.",
          "type": "array",
          "items": {
            "type": "array",
            "items": {
              "type": "object"
            }
          }
        }
      },
      "example": {
  "kind": "multidimensional",
  "data": [
    [
      "CN",
      "__SUM__",
      0.38,
      3800,
      10000
    ]
  ]
}
    },
    "RootCauseAnalysisDataPartition": {
      "required": [
        "data",
        "partitionId",
        "timestamp"
      ],
      "type": "object",
      "properties": {
        "partitionId": {
          "format": "uuid",
          "description": "Root cause analysis data partition unique ID",
          "type": "string"
        },
        "timestamp": {
          "format": "date-time",
          "description": "Root cause analysis date time of the data (UTC)",
          "type": "string"
        },
        "data": {
          "description": "Root cause data detail, the first few columns should be the dimension value. the last few columns should be the measure values",
          "type": "array",
          "items": {
            "type": "array",
            "items": {
              "type": "object"
            }
          }
        }
      }
    },
    "RootCauseAnalysisUploadDataBlockRequest": {
      "required": [
        "kind",
        "value"
      ],
      "type": "object",
      "properties": {
        "kind": {
          "description": "Root cause analysis kind",
          "enum": [
            "multidimensional"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "RootCauseAnalysisType",
            "modelAsString": true
          }
        },
        "value": {
          "description": "Root cause analysis data",
          "type": "array",
          "items": {
            "$ref": "#/definitions/RootCauseAnalysisDataPartition"
          }
        }
      },
      "example": {
  "kind": "multidimensional",
  "value": [
    {
      "partitionId": "11111111-2222-3333-4444-000000000000",
      "timestamp": "2021-12-01T00:00:00Z",
      "data": [
        [
          "CN",
          "__SUM__",
          0.38,
          3800,
          10000
        ],
        [
          "CN",
          "ios",
          0.3,
          3000,
          10000
        ],
        [
          "CN",
          "Android",
          0.006,
          60,
          10000
        ],
        [
          "US",
          "__SUM__",
          0.6,
          6000,
          10000
        ],
        [
          "JP",
          "__SUM__",
          0.001,
          10,
          10000
        ],
        [
          "DE",
          "__SUM__",
          0.0002,
          20,
          10000
        ],
        [
          "CA",
          "__SUM__",
          0.006,
          60,
          10000
        ],
        [
          "__SUM__",
          "__SUM__",
          1,
          10000,
          10000
        ]
      ]
    },
    {
      "partitionId": "21111111-2222-3333-4444-000000000000",
      "timestamp": "2021-11-30T00:00:00Z",
      "data": [
        [
          "CN",
          "__SUM__",
          0.03,
          30,
          1000
        ],
        [
          "CN",
          "ios",
          0.02,
          20,
          1000
        ],
        [
          "CN",
          "Android",
          0.01,
          10,
          1000
        ],
        [
          "US",
          "__SUM__",
          0.3,
          300,
          1000
        ],
        [
          "JP",
          "__SUM__",
          0.1,
          10,
          1000
        ],
        [
          "DE",
          "__SUM__",
          0.01,
          10,
          1000
        ],
        [
          "CA",
          "__SUM__",
          0.01,
          10,
          1000
        ],
        [
          "__SUM__",
          "__SUM__",
          1,
          1000,
          1000
        ]
      ]
    },
    {
      "partitionId": "31111111-2222-3333-4444-000000000000",
      "timestamp": "2021-11-29T00:00:00Z",
      "data": [
        [
          "CN",
          "__SUM__",
          0.3,
          300,
          1000
        ],
        [
          "CN",
          "ios",
          0.3,
          300,
          1000
        ],
        [
          "CN",
          "Android",
          0,
          0,
          1000
        ],
        [
          "US",
          "__SUM__",
          0.4,
          400,
          1000
        ],
        [
          "JP",
          "__SUM__",
          0.01,
          10,
          1000
        ],
        [
          "DE",
          "__SUM__",
          0.01,
          10,
          1000
        ],
        [
          "CA",
          "__SUM__",
          0.01,
          10,
          1000
        ],
        [
          "__SUM__",
          "__SUM__",
          1,
          1000,
          1000
        ]
      ]
    },
    {
      "partitionId": "41111111-2222-3333-4444-000000000000",
      "timestamp": "2021-11-28T00:00:00Z",
      "data": [
        [
          "CN",
          "__SUM__",
          0.3,
          302,
          1000
        ],
        [
          "CN",
          "ios",
          0.3,
          302,
          1000
        ],
        [
          "CN",
          "Android",
          0,
          0,
          1000
        ],
        [
          "US",
          "__SUM__",
          0.4,
          401,
          1000
        ],
        [
          "JP",
          "__SUM__",
          0.009,
          9,
          1000
        ],
        [
          "DE",
          "__SUM__",
          0.011,
          11,
          1000
        ],
        [
          "CA",
          "__SUM__",
          0.01,
          1,
          1000
        ],
        [
          "__SUM__",
          "__SUM__",
          1,
          1000,
          1000
        ]
      ]
    },
    {
      "partitionId": "51111111-2222-3333-4444-000000000000",
      "timestamp": "2021-11-27T00:00:00Z",
      "data": [
        [
          "CN",
          "__SUM__",
          0.299,
          299,
          1000
        ],
        [
          "CN",
          "ios",
          0.31,
          310,
          1000
        ],
        [
          "CN",
          "Android",
          0.001,
          1,
          1000
        ],
        [
          "US",
          "__SUM__",
          0.401,
          401,
          1000
        ],
        [
          "JP",
          "__SUM__",
          0.01,
          10,
          1000
        ],
        [
          "DE",
          "__SUM__",
          0.01,
          10,
          1000
        ],
        [
          "CA",
          "__SUM__",
          0.01,
          1,
          100
        ],
        [
          "__SUM__",
          "__SUM__",
          1,
          1000,
          1000
        ]
      ]
    }
  ]
}
    },
    "RootCauseAnalysisDataMeta": {
      "required": [
        "lastModifiedDateTime",
        "partitionId",
        "rowCount",
        "timestamp"
      ],
      "type": "object",
      "properties": {
        "partitionId": {
          "format": "uuid",
          "description": "Root cause analysis partition ID",
          "type": "string"
        },
        "rowCount": {
          "format": "int32",
          "description": "Root cause analysis data row count in the partition ID",
          "type": "integer"
        },
        "timestamp": {
          "format": "date-time",
          "description": "Root cause date time of the data (UTC)",
          "type": "string"
        },
        "lastModifiedDateTime": {
          "format": "date-time",
          "description": "Root cause data last time updated (UTC)",
          "type": "string"
        }
      }
    },
    "RootCauseAnalysisDataMetaListResponse": {
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "nextLink": {
          "description": "Link of next page, only provided when there are next pages",
          "type": "string"
        },
        "value": {
          "description": "Response values",
          "type": "array",
          "items": {
            "$ref": "#/definitions/RootCauseAnalysisDataMeta"
          }
        }
      }
    },
    "MultiDimRCAMeasure": {
      "required": [
        "dataSetId",
        "measureName"
      ],
      "type": "object",
      "properties": {
        "dataSetId": {
          "format": "uuid",
          "description": "Target dataset id for root cause analysis instance",
          "type": "string"
        },
        "measureName": {
          "description": "Target measure display name for root cause analysis instance",
          "type": "string"
        }
      }
    },
    "RootCauseAnalysisInstance": {
      "required": [
        "displayName",
        "kind"
      ],
      "type": "object",
      "properties": {
        "kind": {
          "description": "Root cause analysis type",
          "enum": [
            "multidimensional"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "RootCauseAnalysisType",
            "modelAsString": true
          }
        },
        "instanceId": {
          "format": "uuid",
          "description": "Instance unique ID for root cause analysis",
          "type": "string",
          "readOnly": true
        },
        "displayName": {
          "description": "Instance name for root cause analysis",
          "type": "string"
        }
      },
      "discriminator": "kind",
      "example": {
  "targetMeasure": {
    "dataSetId": "01234567-8901-2345-6789-012345678901",
    "measureName": "error rate"
  },
  "assistiveMeasures": [
    {
      "dataSetId": "01234567-8901-2345-6789-012345678901",
      "measureName": "error count"
    },
    {
      "dataSetId": "01234567-8901-2345-6789-012345678901",
      "measureName": "total call count"
    }
  ],
  "displayName": "Sample Root Cause Analysis Instance Name",
  "kind": "multidimensional"
}
    },
    "MultiRCADimInstance": {
      "required": [
        "assistiveMeasures",
        "targetMeasure"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/RootCauseAnalysisInstance"
        }
      ],
      "properties": {
        "targetMeasure": {
          "$ref": "#/definitions/MultiDimRCAMeasure"
        },
        "assistiveMeasures": {
          "description": "Data sets for root cause analysis",
          "type": "array",
          "items": {
            "$ref": "#/definitions/MultiDimRCAMeasure"
          }
        }
      },
      "x-ms-discriminator-value": "multidimensional"
    },
    "RootCauseAnalysisInstanceResponseList": {
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "nextLink": {
          "description": "Link of next page, only provided when there are next pages",
          "type": "string"
        },
        "value": {
          "description": "Response values",
          "type": "array",
          "items": {
            "$ref": "#/definitions/RootCauseAnalysisInstance"
          }
        }
      }
    },
    "RootCauseAnalysisKindList": {
      "required": [
        "kinds"
      ],
      "type": "object",
      "properties": {
        "kinds": {
          "description": "Root cause analysis kind list",
          "type": "array",
          "items": {
            "enum": [
              "multidimensional"
            ],
            "type": "string",
            "x-ms-enum": {
              "name": "RootCauseAnalysisType",
              "modelAsString": true
            }
          }
        }
      }
    },
    "RootCauseAnalysisTrainingParameter": {
      "required": [
        "$type"
      ],
      "type": "object",
      "properties": {
        "$type": {
          "type": "string"
        }
      },
      "discriminator": "$type"
    },
    "MultiDimRCATrainingParameter": {
      "required": [
        "endDateTime",
        "startDateTime"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/RootCauseAnalysisTrainingParameter"
        }
      ],
      "properties": {
        "startDateTime": {
          "format": "date-time",
          "description": "Start time of data used to train model (UTC)",
          "type": "string"
        },
        "endDateTime": {
          "format": "date-time",
          "description": "End time of data used to train model (UTC)",
          "type": "string"
        }
      },
      "x-ms-discriminator-value": "multidimensional"
    },
    "RootCauseAnalysisTrainingRequest": {
      "required": [
        "displayName",
        "kind",
        "parameter"
      ],
      "type": "object",
      "properties": {
        "displayName": {
          "description": "Model display name",
          "type": "string"
        },
        "kind": {
          "description": "Root cause analysis kind",
          "enum": [
            "multidimensional"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "RootCauseAnalysisType",
            "modelAsString": true
          }
        },
        "parameter": {
          "description": "Parameter for training"
        }
      },
      "example": {
  "displayName": "Sample Root Cause Analysis Model Name",
  "kind": "multidimensional",
  "parameter": {
    "startDateTime": "2021-10-01T00:00:00Z",
    "endDateTime": "2021-11-30T00:00:00Z"
  }
}
    },
    "RootCauseAnalysisTrainingTaskInfo": {
      "required": [
        "$type"
      ],
      "type": "object",
      "properties": {
        "$type": {
          "type": "string"
        }
      },
      "discriminator": "$type"
    },
    "MultiDimRCATrainingTaskInfo": {
      "required": [
        "bestEpoch",
        "bestValidationLoss",
        "edgeSize",
        "epoch",
        "latencyInSecond",
        "nodeSize",
        "trainLoss",
        "validationLoss"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/RootCauseAnalysisTrainingTaskInfo"
        }
      ],
      "properties": {
        "epoch": {
          "description": "Train epochs",
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "trainLoss": {
          "description": "Train loss for each epoch",
          "type": "array",
          "items": {
            "format": "double",
            "type": "number"
          }
        },
        "validationLoss": {
          "description": "Validation loss for each epoch",
          "type": "array",
          "items": {
            "format": "double",
            "type": "number"
          }
        },
        "latencyInSecond": {
          "description": "Latency in second for each epoch",
          "type": "array",
          "items": {
            "format": "double",
            "type": "number"
          }
        },
        "bestEpoch": {
          "format": "int32",
          "description": "Best epoch",
          "type": "integer"
        },
        "bestValidationLoss": {
          "format": "double",
          "description": "Best validation loss",
          "type": "number"
        },
        "nodeSize": {
          "description": "Node size for each timestamp",
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "edgeSize": {
          "description": "Edge size for each timestamp",
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        }
      },
      "x-ms-discriminator-value": "multidimensional"
    },
    "RootCauseAnalysisTrainingResponse": {
      "required": [
        "createdDateTime",
        "displayName",
        "instanceId",
        "kind",
        "lastModifiedDateTime",
        "modelId",
        "status",
        "taskId"
      ],
      "type": "object",
      "properties": {
        "taskId": {
          "format": "uuid",
          "description": "Training task unique id for root cause analysis",
          "type": "string"
        },
        "instanceId": {
          "format": "uuid",
          "description": "Instance unique id for root cause analysis",
          "type": "string"
        },
        "modelId": {
          "format": "uuid",
          "description": "Model unique id for root cause analysis",
          "type": "string"
        },
        "displayName": {
          "description": "Model name for root cause analysis",
          "type": "string"
        },
        "kind": {
          "description": "kind of root cause analysis",
          "enum": [
            "multidimensional"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "RootCauseAnalysisType",
            "modelAsString": true
          }
        },
        "status": {
          "description": "Training task status for root cause analysis",
          "enum": [
            "scheduled",
            "running",
            "succeeded",
            "failed",
            "canceled"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "RootCauseAnalysisTrainingStatus",
            "modelAsString": true
          }
        },
        "createdDateTime": {
          "format": "date-time",
          "description": "Training task created date time (UTC)",
          "type": "string"
        },
        "lastModifiedDateTime": {
          "format": "date-time",
          "description": "Training task state modified date time (UTC)",
          "type": "string"
        },
        "error": {
          "$ref": "#/definitions/ErrorDetail"
        },
        "taskInfo": {
          "description": "Training task information, if status is failed, this failed will not be shown"
        },
        "parameter": {
          "description": "Root cause analysis training parameter"
        }
      }
    },
    "RootCauseAnalysisTrainingResponseList": {
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "nextLink": {
          "description": "Link of next page, only provided when there are next pages",
          "type": "string"
        },
        "value": {
          "description": "Response values",
          "type": "array",
          "items": {
            "$ref": "#/definitions/RootCauseAnalysisTrainingResponse"
          }
        }
      }
    },
    "RootCauseAnalysisInferenceParameter": {
      "required": [
        "$type"
      ],
      "type": "object",
      "properties": {
        "$type": {
          "type": "string"
        }
      },
      "discriminator": "$type"
    },
    "MultiDimRCAInferenceParameter": {
      "required": [
        "dimensionScope",
        "timestamp"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/RootCauseAnalysisInferenceParameter"
        }
      ],
      "properties": {
        "timestamp": {
          "format": "date-time",
          "description": "Timestamp of issue to be analyzed (UTC)",
          "type": "string"
        },
        "dimensionScope": {
          "description": "Dimension scope used to narrow down the search. Only dimension with specific value needs to be provided.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "x-ms-discriminator-value": "multidimensional"
    },
    "RootCauseAnalysisInferenceRequest": {
      "required": [
        "kind",
        "parameter"
      ],
      "type": "object",
      "properties": {
        "kind": {
          "description": "Root cause analysis kind",
          "enum": [
            "multidimensional"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "RootCauseAnalysisType",
            "modelAsString": true
          }
        },
        "parameter": {
          "description": "Parameter for inference"
        }
      },
      "example": {
  "kind": "multidimensional",
  "parameter": {
    "timestamp": "2021-12-01T00:00:00Z",
    "dimensionScope": {}
  }
}
    },
    "MultiDimRootCauseMeasure": {
      "required": [
        "contributionScore",
        "dataSetId",
        "displayName",
        "trendType"
      ],
      "type": "object",
      "properties": {
        "dataSetId": {
          "format": "uuid",
          "description": "Data set unique id of the root cause measure",
          "type": "string"
        },
        "displayName": {
          "description": "Name of the root cause measure",
          "type": "string"
        },
        "trendType": {
          "description": "Trend type of the measure",
          "enum": [
            "rise",
            "drop"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "MultiDimRootCauseMeasureTrendType",
            "modelAsString": true
          }
        },
        "contributionScore": {
          "format": "double",
          "description": "Contribution score to show how much this measure contributes to the root cause",
          "type": "number"
        }
      }
    },
    "MultiDimRootCause": {
      "required": [
        "dimension",
        "measures",
        "score"
      ],
      "type": "object",
      "properties": {
        "dimension": {
          "description": "Dimension combination of the root cause",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "score": {
          "format": "double",
          "description": "Score of the root cause item",
          "type": "number"
        },
        "measures": {
          "description": "Root cause measures",
          "type": "array",
          "items": {
            "$ref": "#/definitions/MultiDimRootCauseMeasure"
          }
        }
      }
    },
    "RootCauseAnalysisInferenceResult": {
      "required": [
        "$type"
      ],
      "type": "object",
      "properties": {
        "$type": {
          "type": "string"
        }
      },
      "discriminator": "$type"
    },
    "MultiDimRCAInferenceResult": {
      "required": [
        "rootCauses"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/RootCauseAnalysisInferenceResult"
        }
      ],
      "properties": {
        "rootCauses": {
          "description": "root causes",
          "type": "array",
          "items": {
            "$ref": "#/definitions/MultiDimRootCause"
          }
        }
      },
      "x-ms-discriminator-value": "multidimensional"
    },
    "RootCauseAnalysisInferenceResponse": {
      "required": [
        "createdDateTime",
        "inferenceId",
        "instanceId",
        "kind",
        "lastModifiedDateTime",
        "modelId",
        "status"
      ],
      "type": "object",
      "properties": {
        "inferenceId": {
          "format": "uuid",
          "description": "Inference unique id for root cause analysis",
          "type": "string"
        },
        "instanceId": {
          "format": "uuid",
          "description": "Instance unique id for root cause analysis",
          "type": "string"
        },
        "modelId": {
          "format": "uuid",
          "description": "Model unique id for root cause analysis",
          "type": "string"
        },
        "kind": {
          "description": "Kind of root cause analysis",
          "enum": [
            "multidimensional"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "RootCauseAnalysisType",
            "modelAsString": true
          }
        },
        "status": {
          "description": "Inference task status for root cause analysis",
          "enum": [
            "scheduled",
            "running",
            "succeeded",
            "failed",
            "canceled"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "RootCauseAnalysisInferenceStatus",
            "modelAsString": true
          }
        },
        "createdDateTime": {
          "format": "date-time",
          "description": "Inference task created date time (UTC)",
          "type": "string"
        },
        "lastModifiedDateTime": {
          "format": "date-time",
          "description": "Inference task state modified date time (UTC)",
          "type": "string"
        },
        "error": {
          "$ref": "#/definitions/ErrorDetail"
        },
        "result": {
          "description": "Root cause analysis inference result, if status is failed, this field wil not be shown"
        },
        "parameter": {
          "description": "Root cause analysis inference parameter"
        }
      }
    }
  },
  "securityDefinitions": {
    "apiKeyHeader": {
      "type": "apiKey",
      "name": "Ocp-Apim-Subscription-Key",
      "in": "header",
      "description": "The secret key for your Azure Cognitive Services subscription."
    }
  },
  "security": [
    {
      "apiKeyHeader": [ ]
    }
  ],
  "parameters": {
    "Endpoint": {
      "name": "Endpoint",
      "description": "Supported Cognitive Services endpoints (protocol and hostname, for example: https://westus2.api.cognitive.microsoft.com).",
      "x-ms-parameter-location": "client",
      "required": true,
      "type": "string",
      "in": "path",
      "x-ms-skip-url-encoding": true
    },
    "ApiVersion": {
      "name": "ApiVersion",
      "description": "Anomaly Detector API version (for example, v1.0).",
      "x-ms-parameter-location": "client",
      "required": true,
      "type": "string",
      "enum": [
        "v1.1-preview.2"
      ],
      "in": "path",
      "x-ms-skip-url-encoding": true
    }
  },
  "x-ms-parameterized-host": {
    "hostTemplate": "{Endpoint}/anomalydetector/{ApiVersion}",
    "useSchemePrefix": false,
    "parameters": [
      {
        "$ref": "#/parameters/Endpoint"
      },
      {
        "$ref": "#/parameters/ApiVersion"
      }
    ]
  }
}