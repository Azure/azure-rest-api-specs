{
  "swagger": "2.0",
  "info": {
    "version": "v3.1-preview.6",
    "contact": {
      "name": "Microsoft Cognitive Services",
      "url": "https://azure.microsoft.com/en-us/services/cognitive-services/text-analytics/",
      "email": "mlapi@microsoft.com"
    },
    "title": "Text Analytics Client",
    "description": "The Text Analytics API is a suite of natural language processing (NLP)  services built with best-in-class Microsoft machine learning algorithms.  The API can be used to analyze unstructured text for tasks such as sentiment analysis, key phrase extraction and language detection. Functionality for analysis of text specific to the healthcare domain and personal information are also available in the API. Further documentation can be found in <a href=\"https://docs.microsoft.com/en-us/azure/cognitive-services/text-analytics/overview\">https://docs.microsoft.com/en-us/azure/cognitive-services/text-analytics/overview</a>"
  },
  "securityDefinitions": {
    "apim_key": {
      "type": "apiKey",
      "name": "Ocp-Apim-Subscription-Key",
      "in": "header"
    }
  },
  "security": [
    {
      "apim_key": []
    }
  ],
  "x-ms-parameterized-host": {
    "hostTemplate": "{Endpoint}/text/analytics/v3.1-preview.5",
    "useSchemePrefix": false,
    "parameters": [
      {
        "$ref": "#/parameters/Endpoint"
      }
    ]
  },
  "paths": {
    "/entities/recognition/general": {
      "post": {
        "summary": "Named Entity Recognition",
        "description": "The API returns a list of general named entities in a given document. For the list of supported entity types, check <a href=\"https://aka.ms/taner\">Supported Entity Types in Text Analytics API</a>. See the <a href=\"https://aka.ms/talangs\">Supported languages in Text Analytics API</a> for the list of enabled languages.",
        "operationId": "EntitiesRecognitionGeneral",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ModelVersion"
          },
          {
            "$ref": "#/parameters/ShowStats"
          },
          {
            "$ref": "#/parameters/LoggingOptOut"
          },
          {
            "$ref": "#/parameters/StringIndexType"
          },
          {
            "$ref": "#/parameters/MultiLanguageInput"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful call results in a list of recognized entities returned for each valid document.",
            "schema": {
              "$ref": "#/definitions/EntitiesResult"
            }
          },
          "400": {
            "description": "Bad Request.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            },
            "x-ms-error-response": true
          },
          "500": {
            "description": "Internal error response",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            },
            "x-ms-error-response": true
          }
        },
        "x-ms-examples": {
          "Successful Entities request": {
            "$ref": ".//examples//SuccessfulEntitiesRequest.json"
          }
        },
        "deprecated": false
      }
    }
  },
  "definitions": {
    "JobManifest": {
      "properties": {
        "tasks": {
          "description": "The set of tasks to execute on the input documents. Cannot specify the same task more than once.",
          "properties": {
            "entityRecognitionTasks": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/EntitiesTask"
              }
            },
            "entityRecognitionPiiTasks": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PiiTask"
              }
            },
            "keyPhraseExtractionTasks": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/KeyPhrasesTask"
              }
            },
            "entityLinkingTasks": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/EntityLinkingTask"
              }
            },
            "sentimentAnalysisTasks": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SentimentAnalysisTask"
              }
            }
          },
          "type": "object"
        }
      },
      "required": [
        "tasks"
      ],
      "type": "object"
    },
    "MultiLanguageBatchInput": {
      "type": "object",
      "required": [
        "documents"
      ],
      "properties": {
        "documents": {
          "type": "array",
          "description": "The set of documents to process as part of this batch.",
          "items": {
            "$ref": "#/definitions/MultiLanguageInput"
          }
        }
      },
      "description": "Contains a set of input documents to be analyzed by the service."
    },
    "MultiLanguageInput": {
      "type": "object",
      "required": [
        "id",
        "text"
      ],
      "properties": {
        "id": {
          "type": "string",
          "description": "A unique, non-empty document identifier."
        },
        "text": {
          "type": "string",
          "description": "The input text to process."
        },
        "language": {
          "type": "string",
          "description": "(Optional) This is the 2 letter ISO 639-1 representation of a language. For example, use \"en\" for English; \"es\" for Spanish etc. If not set, use \"en\" for English as default."
        }
      },
      "description": "Contains an input document to be analyzed by the service."
    },
    "DocumentError": {
      "type": "object",
      "required": [
        "id",
        "error"
      ],
      "properties": {
        "id": {
          "type": "string",
          "description": "Document Id."
        },
        "error": {
          "type": "object",
          "description": "Document Error.",
          "$ref": "#/definitions/TextAnalyticsError"
        }
      }
    },
    "ErrorResponse": {
      "type": "object",
      "required": [
        "error"
      ],
      "properties": {
        "error": {
          "type": "object",
          "description": "Document Error.",
          "$ref": "#/definitions/TextAnalyticsError"
        }
      }
    },
    "TextAnalyticsError": {
      "type": "object",
      "required": [
        "code",
        "message"
      ],
      "properties": {
        "code": {
          "type": "string",
          "enum": [
            "InvalidRequest",
            "InvalidArgument",
            "InternalServerError",
            "ServiceUnavailable",
            "NotFound"
          ],
          "x-ms-enum": {
            "name": "ErrorCodeValue",
            "modelAsString": false
          },
          "description": "Error code."
        },
        "message": {
          "type": "string",
          "description": "Error message."
        },
        "target": {
          "type": "string",
          "description": "Error target."
        },
        "innererror": {
          "$ref": "#/definitions/InnerError",
          "description": "Inner error contains more specific information."
        },
        "details": {
          "type": "array",
          "description": "Details about specific errors that led to this reported error.",
          "items": {
            "$ref": "#/definitions/TextAnalyticsError"
          }
        }
      }
    },
    "TextAnalyticsWarning": {
      "type": "object",
      "required": [
        "code",
        "message"
      ],
      "properties": {
        "code": {
          "type": "string",
          "enum": [
            "LongWordsInDocument",
            "DocumentTruncated"
          ],
          "x-ms-enum": {
            "name": "WarningCodeValue",
            "modelAsString": true
          },
          "description": "Error code."
        },
        "message": {
          "type": "string",
          "description": "Warning message."
        },
        "targetRef": {
          "type": "string",
          "description": "A JSON pointer reference indicating the target object."
        }
      }
    },
    "PiiTask": {
      "properties": {
        "parameters": {
          "properties": {
            "domain": {
              "default": "none",
              "enum": [
                "phi",
                "none"
              ],
              "type": "string"
            },
            "model-version": {
              "default": "latest",
              "type": "string"
            },
            "loggingOptOut": {
              "default": true,
              "type": "boolean"
            },
            "pii-categories": {
              "$ref": "#/definitions/PiiCategories"
            },
            "stringIndexType": {
              "$ref": "#/definitions/StringIndexType"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "EntitiesTask": {
      "properties": {
        "parameters": {
          "properties": {
            "model-version": {
              "default": "latest",
              "type": "string"
            },
            "loggingOptOut": {
              "default": false,
              "type": "boolean"
            },
            "stringIndexType": {
              "$ref": "#/definitions/StringIndexType"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "SentimentAnalysisTask": {
      "properties": {
        "parameters": {
          "properties": {
            "model-version": {
              "default": "latest",
              "type": "string"
            },
            "loggingOptOut": {
              "default": false,
              "type": "boolean"
            },
            "opinionMining": {
              "default": false,
              "type": "boolean"
            },
            "stringIndexType": {
              "$ref": "#/definitions/StringIndexType"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "InnerError": {
      "type": "object",
      "required": [
        "code",
        "message"
      ],
      "properties": {
        "code": {
          "type": "string",
          "enum": [
            "InvalidParameterValue",
            "InvalidRequestBodyFormat",
            "EmptyRequest",
            "MissingInputRecords",
            "InvalidDocument",
            "ModelVersionIncorrect",
            "InvalidDocumentBatch",
            "UnsupportedLanguageCode",
            "InvalidCountryHint"
          ],
          "x-ms-enum": {
            "name": "InnerErrorCodeValue",
            "modelAsString": true
          },
          "description": "Error code."
        },
        "message": {
          "type": "string",
          "description": "Error message."
        },
        "details": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Error details."
        },
        "target": {
          "type": "string",
          "description": "Error target."
        },
        "innererror": {
          "$ref": "#/definitions/InnerError",
          "description": "Inner error contains more specific information."
        }
      }
    },
    "AnalyzeBatchInput": {
      "allOf": [
        {
          "$ref": "#/definitions/JobDescriptor"
        },
        {
          "$ref": "#/definitions/AnalysisInput"
        },
        {
          "$ref": "#/definitions/JobManifest"
        }
      ]
    },
    "AnalyzeJobState": {
      "allOf": [
        {
          "$ref": "#/definitions/AnalyzeJobMetadata"
        },
        {
          "$ref": "#/definitions/TasksState"
        },
        {
          "$ref": "#/definitions/AnalyzeJobErrorsAndStatistics"
        },
        {
          "$ref": "#/definitions/Pagination"
        }
      ]
    },
    "SentimentResponse": {
      "type": "object",
      "required": [
        "documents",
        "errors",
        "modelVersion"
      ],
      "properties": {
        "documents": {
          "type": "array",
          "description": "Sentiment analysis per document.",
          "items": {
            "$ref": "#/definitions/DocumentSentiment"
          }
        },
        "errors": {
          "type": "array",
          "description": "Errors by document id.",
          "items": {
            "$ref": "#/definitions/DocumentError"
          }
        },
        "statistics": {
          "$ref": "#/definitions/RequestStatistics"
        },
        "modelVersion": {
          "type": "string",
          "description": "This field indicates which model is used for scoring."
        }
      }
    },
    "TaskState": {
      "properties": {
        "lastUpdateDateTime": {
          "format": "date-time",
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "status": {
          "enum": [
            "notStarted",
            "running",
            "succeeded",
            "failed",
            "rejected",
            "cancelled",
            "cancelling"
          ],
          "x-ms-enum": {
            "modelAsString": false,
            "name": "State"
          }
        }
      },
      "required": [
        "status",
        "lastUpdateDateTime"
      ],
      "type": "object"
    },
    "TasksState": {
      "properties": {
        "tasks": {
          "properties": {
            "details": {
              "allOf": [
                {
                  "$ref": "#/definitions/TaskState"
                }
              ],
              "type": "object"
            },
            "completed": {
              "type": "integer"
            },
            "failed": {
              "type": "integer"
            },
            "inProgress": {
              "type": "integer"
            },
            "total": {
              "type": "integer"
            },
            "entityRecognitionTasks": {
              "type": "array",
              "items": {
                "type": "object",
                "allOf": [
                  {
                    "$ref": "#/definitions/TaskState"
                  },
                  {
                    "$ref": "#/definitions/EntitiesTaskResult"
                  }
                ]
              }
            },
            "entityRecognitionPiiTasks": {
              "type": "array",
              "items": {
                "type": "object",
                "allOf": [
                  {
                    "$ref": "#/definitions/TaskState"
                  },
                  {
                    "$ref": "#/definitions/PiiTaskResult"
                  }
                ]
              }
            },
            "keyPhraseExtractionTasks": {
              "type": "array",
              "items": {
                "type": "object",
                "allOf": [
                  {
                    "$ref": "#/definitions/TaskState"
                  },
                  {
                    "$ref": "#/definitions/KeyPhraseTaskResult"
                  }
                ]
              }
            },
            "entityLinkingTasks": {
              "type": "array",
              "items": {
                "type": "object",
                "allOf": [
                  {
                    "$ref": "#/definitions/TaskState"
                  },
                  {
                    "$ref": "#/definitions/EntityLinkingTaskResult"
                  }
                ]
              }
            },
            "sentimentAnalysisTasks": {
              "type": "array",
              "items": {
                "type": "object",
                "allOf": [
                  {
                    "$ref": "#/definitions/TaskState"
                  },
                  {
                    "$ref": "#/definitions/SentimentTaskResult"
                  }
                ]
              }
            }
          },
          "required": [
            "total",
            "completed",
            "failed",
            "inProgress"
          ],
          "type": "object"
        }
      },
      "required": [
        "tasks"
      ],
      "type": "object"
    },
    "DocumentSentiment": {
      "type": "object",
      "required": [
        "id",
        "sentiment",
        "confidenceScores",
        "sentences",
        "warnings"
      ],
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique, non-empty document identifier."
        },
        "sentiment": {
          "type": "string",
          "description": "Predicted sentiment for document (Negative, Neutral, Positive, or Mixed).",
          "enum": [
            "positive",
            "neutral",
            "negative",
            "mixed"
          ],
          "x-ms-enum": {
            "name": "DocumentSentimentValue",
            "modelAsString": false
          }
        },
        "statistics": {
          "$ref": "#/definitions/DocumentStatistics"
        },
        "confidenceScores": {
          "description": "Document level sentiment confidence scores between 0 and 1 for each sentiment class.",
          "$ref": "#/definitions/SentimentConfidenceScorePerLabel"
        },
        "sentences": {
          "type": "array",
          "description": "Sentence level sentiment analysis.",
          "items": {
            "$ref": "#/definitions/SentenceSentiment"
          }
        },
        "warnings": {
          "type": "array",
          "description": "Warnings encountered while processing document.",
          "items": {
            "$ref": "#/definitions/TextAnalyticsWarning"
          }
        }
      }
    },
    "RequestStatistics": {
      "type": "object",
      "required": [
        "documentsCount",
        "validDocumentsCount",
        "erroneousDocumentsCount",
        "transactionsCount"
      ],
      "properties": {
        "documentsCount": {
          "type": "integer",
          "format": "int32",
          "description": "Number of documents submitted in the request."
        },
        "validDocumentsCount": {
          "type": "integer",
          "format": "int32",
          "description": "Number of valid documents. This excludes empty, over-size limit or non-supported languages documents."
        },
        "erroneousDocumentsCount": {
          "type": "integer",
          "format": "int32",
          "description": "Number of invalid documents. This includes empty, over-size limit or non-supported languages documents."
        },
        "transactionsCount": {
          "type": "integer",
          "format": "int64",
          "description": "Number of transactions for the request."
        }
      },
      "description": "if showStats=true was specified in the request this field will contain information about the request payload."
    },
    "DocumentStatistics": {
      "type": "object",
      "required": [
        "charactersCount",
        "transactionsCount"
      ],
      "properties": {
        "charactersCount": {
          "type": "integer",
          "format": "int32",
          "description": "Number of text elements recognized in the document."
        },
        "transactionsCount": {
          "type": "integer",
          "format": "int32",
          "description": "Number of transactions for the document."
        }
      },
      "description": "if showStats=true was specified in the request this field will contain information about the document payload."
    },
    "SentimentConfidenceScorePerLabel": {
      "type": "object",
      "required": [
        "positive",
        "neutral",
        "negative"
      ],
      "properties": {
        "positive": {
          "type": "number",
          "format": "double"
        },
        "neutral": {
          "type": "number",
          "format": "double"
        },
        "negative": {
          "type": "number",
          "format": "double"
        }
      },
      "description": "Represents the confidence scores between 0 and 1 across all sentiment classes: positive, neutral, negative."
    },
    "SentenceSentiment": {
      "type": "object",
      "required": [
        "text",
        "sentiment",
        "confidenceScores",
        "offset",
        "length"
      ],
      "properties": {
        "text": {
          "type": "string",
          "description": "The sentence text."
        },
        "sentiment": {
          "type": "string",
          "description": "The predicted Sentiment for the sentence.",
          "enum": [
            "positive",
            "neutral",
            "negative"
          ],
          "x-ms-enum": {
            "name": "SentenceSentimentValue",
            "modelAsString": false
          }
        },
        "confidenceScores": {
          "description": "The sentiment confidence score between 0 and 1 for the sentence for all classes.",
          "$ref": "#/definitions/SentimentConfidenceScorePerLabel"
        },
        "offset": {
          "type": "integer",
          "format": "int32",
          "description": "The sentence offset from the start of the document."
        },
        "length": {
          "type": "integer",
          "format": "int32",
          "description": "The length of the sentence."
        },
        "targets": {
          "type": "array",
          "description": "The array of sentence targets for the sentence.",
          "items": {
            "$ref": "#/definitions/SentenceTarget"
          }
        },
        "assessments": {
          "type": "array",
          "description": "The array of assessments for the sentence.",
          "items": {
            "$ref": "#/definitions/SentenceAssessment"
          }
        }
      }
    },
    "SentenceTarget": {
      "type": "object",
      "required": [
        "confidenceScores",
        "length",
        "offset",
        "relations",
        "sentiment",
        "text"
      ],
      "properties": {
        "sentiment": {
          "type": "string",
          "enum": [
            "positive",
            "mixed",
            "negative"
          ],
          "x-ms-enum": {
            "name": "TokenSentimentValue",
            "modelAsString": false
          },
          "description": "Targeted sentiment in the sentence."
        },
        "confidenceScores": {
          "description": "Target sentiment confidence scores for the target in the sentence.",
          "$ref": "#/definitions/TargetConfidenceScoreLabel"
        },
        "offset": {
          "type": "integer",
          "format": "int32",
          "description": "The target offset from the start of the sentence."
        },
        "length": {
          "type": "integer",
          "format": "int32",
          "description": "The length of the target."
        },
        "text": {
          "type": "string",
          "description": "The target text detected."
        },
        "relations": {
          "type": "array",
          "description": "The array of either assessment or target objects which is related to the target.",
          "items": {
            "$ref": "#/definitions/TargetRelation"
          }
        }
      }
    },
    "SentenceAssessment": {
      "type": "object",
      "required": [
        "confidenceScores",
        "isNegated",
        "length",
        "offset",
        "sentiment",
        "text"
      ],
      "properties": {
        "sentiment": {
          "type": "string",
          "enum": [
            "positive",
            "mixed",
            "negative"
          ],
          "x-ms-enum": {
            "name": "TokenSentimentValue",
            "modelAsString": false
          },
          "description": "Assessment sentiment in the sentence."
        },
        "confidenceScores": {
          "description": "Assessment sentiment confidence scores in the sentence.",
          "$ref": "#/definitions/TargetConfidenceScoreLabel"
        },
        "offset": {
          "type": "integer",
          "format": "int32",
          "description": "The assessment offset from the start of the sentence."
        },
        "length": {
          "type": "integer",
          "format": "int32",
          "description": "The length of the assessment."
        },
        "text": {
          "type": "string",
          "description": "The assessment text detected."
        },
        "isNegated": {
          "type": "boolean",
          "description": "The indicator representing if the assessment is negated."
        }
      }
    },
    "TargetRelation": {
      "type": "object",
      "required": [
        "ref",
        "relationType"
      ],
      "properties": {
        "relationType": {
          "type": "string",
          "enum": [
            "assessment",
            "target"
          ],
          "x-ms-enum": {
            "name": "TargetRelationType",
            "modelAsString": false
          },
          "description": "The type related to the target."
        },
        "ref": {
          "type": "string",
          "description": "The JSON pointer indicating the linked object."
        }
      }
    },
    "TargetConfidenceScoreLabel": {
      "type": "object",
      "required": [
        "negative",
        "positive"
      ],
      "properties": {
        "positive": {
          "type": "number",
          "format": "double"
        },
        "negative": {
          "type": "number",
          "format": "double"
        }
      },
      "description": "Represents the confidence scores across all sentiment classes: positive, neutral, negative."
    },
    "EntitiesResult": {
      "type": "object",
      "required": [
        "documents",
        "errors",
        "modelVersion"
      ],
      "properties": {
        "documents": {
          "type": "array",
          "description": "Response by document",
          "items": {
            "$ref": "#/definitions/DocumentEntities"
          }
        },
        "errors": {
          "type": "array",
          "description": "Errors by document id.",
          "items": {
            "$ref": "#/definitions/DocumentError"
          }
        },
        "statistics": {
          "$ref": "#/definitions/RequestStatistics"
        },
        "modelVersion": {
          "type": "string",
          "description": "This field indicates which model is used for scoring."
        }
      }
    },
    "DocumentEntities": {
      "type": "object",
      "required": [
        "id",
        "entities",
        "warnings"
      ],
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique, non-empty document identifier."
        },
        "entities": {
          "type": "array",
          "description": "Recognized entities in the document.",
          "items": {
            "$ref": "#/definitions/Entity"
          }
        },
        "warnings": {
          "type": "array",
          "description": "Warnings encountered while processing document.",
          "items": {
            "$ref": "#/definitions/TextAnalyticsWarning"
          }
        },
        "statistics": {
          "description": "if showStats=true was specified in the request this field will contain information about the document payload.",
          "$ref": "#/definitions/DocumentStatistics"
        }
      }
    },
    "PiiDocumentEntities": {
      "type": "object",
      "required": [
        "id",
        "redactedText",
        "entities",
        "warnings"
      ],
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique, non-empty document identifier."
        },
        "redactedText": {
          "type": "string",
          "description": "Returns redacted text."
        },
        "entities": {
          "type": "array",
          "description": "Recognized entities in the document.",
          "items": {
            "$ref": "#/definitions/Entity"
          }
        },
        "warnings": {
          "type": "array",
          "description": "Warnings encountered while processing document.",
          "items": {
            "$ref": "#/definitions/TextAnalyticsWarning"
          }
        },
        "statistics": {
          "description": "if showStats=true was specified in the request this field will contain information about the document payload.",
          "$ref": "#/definitions/DocumentStatistics"
        }
      }
    },
    "Entity": {
      "type": "object",
      "required": [
        "text",
        "category",
        "offset",
        "length",
        "confidenceScore"
      ],
      "properties": {
        "text": {
          "type": "string",
          "description": "Entity text as appears in the request."
        },
        "category": {
          "type": "string",
          "description": "Entity type."
        },
        "subcategory": {
          "type": "string",
          "description": "(Optional) Entity sub type."
        },
        "offset": {
          "type": "integer",
          "format": "int32",
          "description": "Start position for the entity text. Use of different 'stringIndexType' values can affect the offset returned."
        },
        "length": {
          "type": "integer",
          "format": "int32",
          "description": "Length for the entity text. Use of different 'stringIndexType' values can affect the length returned."
        },
        "confidenceScore": {
          "type": "number",
          "format": "double",
          "description": "Confidence score between 0 and 1 of the extracted entity."
        },
        "resolutions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BaseResolution"
          }
        },
        "extraInformation": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BaseExtraInformation"
          }
        }
      }
    },
    "EntityLinkingResult": {
      "type": "object",
      "required": [
        "documents",
        "errors",
        "modelVersion"
      ],
      "properties": {
        "documents": {
          "type": "array",
          "description": "Response by document",
          "items": {
            "$ref": "#/definitions/DocumentLinkedEntities"
          }
        },
        "errors": {
          "type": "array",
          "description": "Errors by document id.",
          "items": {
            "$ref": "#/definitions/DocumentError"
          }
        },
        "statistics": {
          "$ref": "#/definitions/RequestStatistics"
        },
        "modelVersion": {
          "type": "string",
          "description": "This field indicates which model is used for scoring."
        }
      }
    },
    "DocumentLinkedEntities": {
      "type": "object",
      "required": [
        "id",
        "entities",
        "warnings"
      ],
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique, non-empty document identifier."
        },
        "entities": {
          "type": "array",
          "description": "Recognized well known entities in the document.",
          "items": {
            "$ref": "#/definitions/LinkedEntity"
          }
        },
        "warnings": {
          "type": "array",
          "description": "Warnings encountered while processing document.",
          "items": {
            "$ref": "#/definitions/TextAnalyticsWarning"
          }
        },
        "statistics": {
          "description": "if showStats=true was specified in the request this field will contain information about the document payload.",
          "$ref": "#/definitions/DocumentStatistics"
        }
      }
    },
    "HealthcareJobState": {
      "allOf": [
        {
          "$ref": "#/definitions/JobMetadata"
        },
        {
          "$ref": "#/definitions/HealthcareTaskResult"
        },
        {
          "$ref": "#/definitions/Pagination"
        }
      ]
    },
    "HealthcareResult": {
      "type": "object",
      "required": [
        "documents",
        "errors",
        "modelVersion"
      ],
      "properties": {
        "documents": {
          "type": "array",
          "description": "Response by document",
          "items": {
            "$ref": "#/definitions/DocumentHealthcareEntities"
          }
        },
        "errors": {
          "type": "array",
          "description": "Errors by document id.",
          "items": {
            "$ref": "#/definitions/DocumentError"
          }
        },
        "statistics": {
          "$ref": "#/definitions/RequestStatistics"
        },
        "modelVersion": {
          "type": "string",
          "description": "This field indicates which model is used for scoring."
        }
      }
    },
    "DocumentHealthcareEntities": {
      "type": "object",
      "required": [
        "id",
        "entities",
        "relations",
        "warnings"
      ],
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique, non-empty document identifier."
        },
        "entities": {
          "description": "Healthcare entities.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/HealthcareEntity"
          }
        },
        "relations": {
          "type": "array",
          "description": "Healthcare entity relations.",
          "items": {
            "$ref": "#/definitions/HealthcareRelation"
          }
        },
        "warnings": {
          "type": "array",
          "description": "Warnings encountered while processing document.",
          "items": {
            "$ref": "#/definitions/TextAnalyticsWarning"
          }
        },
        "statistics": {
          "description": "if showStats=true was specified in the request this field will contain information about the document payload.",
          "$ref": "#/definitions/DocumentStatistics"
        }
      }
    },
    "HealthcareEntity": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Entity"
        },
        {
          "$ref": "#/definitions/HealthcareLinkingProperties"
        }
      ]
    },
    "HealthcareRelation": {
      "type": "object",
      "description": "Every relation is an entity graph of a certain relationType, where all entities are connected and have specific roles within the relation context.",
      "required": [
        "relationType",
        "entities"
      ],
      "properties": {
        "relationType": {
          "description": "Type of relation. Examples include: `DosageOfMedication` or 'FrequencyOfMedication', etc.",
          "type": "string",
          "enum": [
            "Abbreviation",
            "DirectionOfBodyStructure",
            "DirectionOfCondition",
            "DirectionOfExamination",
            "DirectionOfTreatment",
            "DosageOfMedication",
            "FormOfMedication",
            "FrequencyOfMedication",
            "FrequencyOfTreatment",
            "QualifierOfCondition",
            "RelationOfExamination",
            "RouteOfMedication",
            "TimeOfCondition",
            "TimeOfEvent",
            "TimeOfExamination",
            "TimeOfMedication",
            "TimeOfTreatment",
            "UnitOfCondition",
            "UnitOfExamination",
            "ValueOfCondition",
            "ValueOfExamination"
          ],
          "x-ms-enum": {
            "name": "relationType",
            "modelAsString": true
          }
        },
        "entities": {
          "description": "The entities in the relation.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/HealthcareRelationEntity"
          }
        }
      }
    },
    "HealthcareAssertion": {
      "type": "object",
      "properties": {
        "conditionality": {
          "description": "Describes any conditionality on the entity.",
          "type": "string",
          "enum": [
            "hypothetical",
            "conditional"
          ],
          "x-ms-enum": {
            "name": "Conditionality",
            "modelAsString": false
          }
        },
        "certainty": {
          "description": "Describes the entities certainty and polarity.",
          "type": "string",
          "enum": [
            "positive",
            "positivePossible",
            "neutralPossible",
            "negativePossible",
            "negative"
          ],
          "x-ms-enum": {
            "name": "Certainty",
            "modelAsString": false
          }
        },
        "association": {
          "description": "Describes if the entity is the subject of the text or if it describes someone else.",
          "type": "string",
          "enum": [
            "subject",
            "other"
          ],
          "x-ms-enum": {
            "name": "Association",
            "modelAsString": false
          }
        }
      }
    },
    "HealthcareRelationEntity": {
      "type": "object",
      "required": [
        "ref",
        "role"
      ],
      "properties": {
        "ref": {
          "description": "Reference link object, using a JSON pointer RFC 6901 (URI Fragment Identifier Representation), pointing to the entity .",
          "type": "string"
        },
        "role": {
          "description": "Role of entity in the relationship. For example: 'CD20-positive diffuse large B-cell lymphoma' has the following entities with their roles in parenthesis:  CD20 (GeneOrProtein), Positive (Expression), diffuse large B-cell lymphoma (Diagnosis).",
          "type": "string"
        }
      }
    },
    "HealthcareEntityLink": {
      "type": "object",
      "required": [
        "dataSource",
        "id"
      ],
      "properties": {
        "dataSource": {
          "description": "Entity Catalog. Examples include: UMLS, CHV, MSH, etc.",
          "type": "string"
        },
        "id": {
          "description": "Entity id in the given source catalog.",
          "type": "string"
        }
      }
    },
    "HealthcareLinkingProperties": {
      "properties": {
        "assertion": {
          "type": "object",
          "$ref": "#/definitions/HealthcareAssertion"
        },
        "name": {
          "description": "Preferred name for the entity. Example: 'histologically' would have a 'name' of 'histologic'.",
          "type": "string"
        },
        "links": {
          "description": "Entity references in known data sources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/HealthcareEntityLink"
          }
        }
      }
    },
    "LinkedEntity": {
      "type": "object",
      "required": [
        "name",
        "matches",
        "language",
        "url",
        "dataSource"
      ],
      "properties": {
        "name": {
          "type": "string",
          "description": "Entity Linking formal name."
        },
        "matches": {
          "type": "array",
          "description": "List of instances this entity appears in the text.",
          "items": {
            "$ref": "#/definitions/Match"
          }
        },
        "language": {
          "type": "string",
          "description": "Language used in the data source."
        },
        "id": {
          "type": "string",
          "description": "Unique identifier of the recognized entity from the data source."
        },
        "url": {
          "type": "string",
          "description": "URL for the entity's page from the data source."
        },
        "dataSource": {
          "type": "string",
          "description": "Data source used to extract entity linking, such as Wiki/Bing etc."
        },
        "bingId": {
          "type": "string",
          "description": "Bing Entity Search API unique identifier of the recognized entity."
        }
      }
    },
    "Match": {
      "type": "object",
      "required": [
        "confidenceScore",
        "text",
        "offset",
        "length"
      ],
      "properties": {
        "confidenceScore": {
          "type": "number",
          "format": "double",
          "description": "If a well known item is recognized, a decimal number denoting the confidence level between 0 and 1 will be returned."
        },
        "text": {
          "type": "string",
          "description": "Entity text as appears in the request."
        },
        "offset": {
          "type": "integer",
          "format": "int32",
          "description": "Start position for the entity match text."
        },
        "length": {
          "type": "integer",
          "format": "int32",
          "description": "Length for the entity match text."
        }
      }
    },
    "AnalysisInput": {
      "type": "object",
      "required": [
        "analysisInput"
      ],
      "properties": {
        "analysisInput": {
          "$ref": "#/definitions/MultiLanguageBatchInput"
        }
      }
    },
    "EntitiesTaskResult": {
      "type": "object",
      "properties": {
        "results": {
          "$ref": "#/definitions/EntitiesResult"
        }
      }
    },
    "PiiTaskResult": {
      "type": "object",
      "properties": {
        "results": {
          "$ref": "#/definitions/PiiResult"
        }
      }
    },
    "KeyPhraseTaskResult": {
      "type": "object",
      "properties": {
        "results": {
          "$ref": "#/definitions/KeyPhraseResult"
        }
      }
    },
    "EntityLinkingTaskResult": {
      "type": "object",
      "properties": {
        "results": {
          "$ref": "#/definitions/EntityLinkingResult"
        }
      }
    },
    "SentimentTaskResult": {
      "type": "object",
      "properties": {
        "results": {
          "$ref": "#/definitions/SentimentResponse"
        }
      }
    },
    "HealthcareTaskResult": {
      "properties": {
        "results": {
          "$ref": "#/definitions/HealthcareResult"
        },
        "errors": {
          "items": {
            "$ref": "#/definitions/TextAnalyticsError"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "JobDescriptor": {
      "properties": {
        "displayName": {
          "description": "Optional display name for the analysis job.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "JobMetadata": {
      "properties": {
        "createdDateTime": {
          "format": "date-time",
          "type": "string"
        },
        "expirationDateTime": {
          "format": "date-time",
          "type": "string"
        },
        "jobId": {
          "format": "uuid",
          "type": "string"
        },
        "lastUpdateDateTime": {
          "format": "date-time",
          "type": "string"
        },
        "status": {
          "enum": [
            "notStarted",
            "running",
            "succeeded",
            "failed",
            "cancelled",
            "cancelling",
            "partiallyCompleted"
          ],
          "type": "string",
          "x-ms-enum": {
            "modelAsString": false,
            "name": "State"
          }
        }
      },
      "required": [
        "jobId",
        "lastUpdateDateTime",
        "createdDateTime",
        "status"
      ],
      "type": "object"
    },
    "AnalyzeJobDisplayName": {
      "properties": {
        "displayName": {
          "type": "string"
        }
      }
    },
    "AnalyzeJobMetadata": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/JobMetadata"
        },
        {
          "$ref": "#/definitions/AnalyzeJobDisplayName"
        }
      ]
    },
    "AnalyzeJobErrorsAndStatistics": {
      "properties": {
        "errors": {
          "items": {
            "$ref": "#/definitions/TextAnalyticsError"
          },
          "type": "array"
        },
        "statistics": {
          "$ref": "#/definitions/RequestStatistics"
        }
      },
      "type": "object"
    },
    "KeyPhraseResult": {
      "type": "object",
      "required": [
        "documents",
        "errors",
        "modelVersion"
      ],
      "properties": {
        "documents": {
          "type": "array",
          "description": "Response by document",
          "items": {
            "$ref": "#/definitions/DocumentKeyPhrases"
          }
        },
        "errors": {
          "type": "array",
          "description": "Errors by document id.",
          "items": {
            "$ref": "#/definitions/DocumentError"
          }
        },
        "statistics": {
          "$ref": "#/definitions/RequestStatistics"
        },
        "modelVersion": {
          "type": "string",
          "description": "This field indicates which model is used for scoring."
        }
      }
    },
    "DocumentKeyPhrases": {
      "type": "object",
      "required": [
        "id",
        "keyPhrases",
        "warnings"
      ],
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique, non-empty document identifier."
        },
        "keyPhrases": {
          "type": "array",
          "description": "A list of representative words or phrases. The number of key phrases returned is proportional to the number of words in the input document.",
          "items": {
            "type": "string"
          }
        },
        "warnings": {
          "type": "array",
          "description": "Warnings encountered while processing document.",
          "items": {
            "$ref": "#/definitions/TextAnalyticsWarning"
          }
        },
        "statistics": {
          "description": "if showStats=true was specified in the request this field will contain information about the document payload.",
          "$ref": "#/definitions/DocumentStatistics"
        }
      }
    },
    "KeyPhrasesTask": {
      "properties": {
        "parameters": {
          "properties": {
            "model-version": {
              "default": "latest",
              "type": "string"
            },
            "loggingOptOut": {
              "default": false,
              "type": "boolean"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "EntityLinkingTask": {
      "properties": {
        "parameters": {
          "properties": {
            "model-version": {
              "default": "latest",
              "type": "string"
            },
            "loggingOptOut": {
              "default": false,
              "type": "boolean"
            },
            "stringIndexType": {
              "$ref": "#/definitions/StringIndexType"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "LanguageBatchInput": {
      "type": "object",
      "required": [
        "documents"
      ],
      "properties": {
        "documents": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LanguageInput"
          }
        }
      }
    },
    "LanguageInput": {
      "type": "object",
      "required": [
        "id",
        "text"
      ],
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique, non-empty document identifier."
        },
        "text": {
          "type": "string"
        },
        "countryHint": {
          "type": "string"
        }
      }
    },
    "Pagination": {
      "properties": {
        "@nextLink": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "PiiResult": {
      "type": "object",
      "required": [
        "documents",
        "errors",
        "modelVersion"
      ],
      "properties": {
        "documents": {
          "type": "array",
          "description": "Response by document",
          "items": {
            "$ref": "#/definitions/PiiDocumentEntities"
          }
        },
        "errors": {
          "type": "array",
          "description": "Errors by document id.",
          "items": {
            "$ref": "#/definitions/DocumentError"
          }
        },
        "statistics": {
          "$ref": "#/definitions/RequestStatistics"
        },
        "modelVersion": {
          "type": "string",
          "description": "This field indicates which model is used for scoring."
        }
      }
    },
    "LanguageResult": {
      "type": "object",
      "required": [
        "documents",
        "errors",
        "modelVersion"
      ],
      "properties": {
        "documents": {
          "type": "array",
          "description": "Response by document",
          "items": {
            "$ref": "#/definitions/DocumentLanguage"
          }
        },
        "errors": {
          "type": "array",
          "description": "Errors by document id.",
          "items": {
            "$ref": "#/definitions/DocumentError"
          }
        },
        "statistics": {
          "$ref": "#/definitions/RequestStatistics"
        },
        "modelVersion": {
          "type": "string",
          "description": "This field indicates which model is used for scoring."
        }
      }
    },
    "DocumentLanguage": {
      "type": "object",
      "required": [
        "id",
        "detectedLanguage",
        "warnings"
      ],
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique, non-empty document identifier."
        },
        "detectedLanguage": {
          "description": "Detected Language.",
          "$ref": "#/definitions/DetectedLanguage"
        },
        "warnings": {
          "type": "array",
          "description": "Warnings encountered while processing document.",
          "items": {
            "$ref": "#/definitions/TextAnalyticsWarning"
          }
        },
        "statistics": {
          "description": "if showStats=true was specified in the request this field will contain information about the document payload.",
          "$ref": "#/definitions/DocumentStatistics"
        }
      }
    },
    "DetectedLanguage": {
      "type": "object",
      "required": [
        "name",
        "iso6391Name",
        "confidenceScore"
      ],
      "properties": {
        "name": {
          "type": "string",
          "description": "Long name of a detected language (e.g. English, French)."
        },
        "iso6391Name": {
          "type": "string",
          "description": "A two letter representation of the detected language according to the ISO 639-1 standard (e.g. en, fr)."
        },
        "confidenceScore": {
          "type": "number",
          "format": "double",
          "description": "A confidence score between 0 and 1. Scores close to 1 indicate 100% certainty that the identified language is true."
        }
      }
    },
    "StringIndexType": {
      "default": "TextElement_v8",
      "enum": [
        "TextElement_v8",
        "UnicodeCodePoint",
        "Utf16CodeUnit"
      ],
      "x-ms-enum": {
        "name": "StringIndexType",
        "modelAsString": true,
        "values": [
          {
            "value": "TextElement_v8",
            "description": "Returned offset and length values will correspond to TextElements (Graphemes and Grapheme clusters) confirming to the Unicode 8.0.0 standard. Use this option if your application is written in .Net Framework or .Net Core and you will be using StringInfo."
          },
          {
            "value": "UnicodeCodePoint",
            "description": "Returned offset and length values will correspond to Unicode code points. Use this option if your application is written in a language that support Unicode, for example Python."
          },
          {
            "value": "Utf16CodeUnit",
            "description": "Returned offset and length values will correspond to UTF-16 code units. Use this option if your application is written in a language that support Unicode, for example Java, JavaScript."
          }
        ]
      },
      "type": "string"
    },
    "PiiCategories": {
      "description": "(Optional) describes the PII categories to return",
      "items": {
        "type": "string",
        "x-ms-enum": {
          "name": "PiiCategory",
          "modelAsString": true
        },
        "enum": [
          "ABARoutingNumber",
          "ARNationalIdentityNumber",
          "AUBankAccountNumber",
          "AUDriversLicenseNumber",
          "AUMedicalAccountNumber",
          "AUPassportNumber",
          "AUTaxFileNumber",
          "AUBusinessNumber",
          "AUCompanyNumber",
          "ATIdentityCard",
          "ATTaxIdentificationNumber",
          "ATValueAddedTaxNumber",
          "AzureDocumentDBAuthKey",
          "AzureIAASDatabaseConnectionAndSQLString",
          "AzureIoTConnectionString",
          "AzurePublishSettingPassword",
          "AzureRedisCacheString",
          "AzureSAS",
          "AzureServiceBusString",
          "AzureStorageAccountKey",
          "AzureStorageAccountGeneric",
          "BENationalNumber",
          "BENationalNumberV2",
          "BEValueAddedTaxNumber",
          "BRCPFNumber",
          "BRLegalEntityNumber",
          "BRNationalIDRG",
          "BGUniformCivilNumber",
          "CABankAccountNumber",
          "CADriversLicenseNumber",
          "CAHealthServiceNumber",
          "CAPassportNumber",
          "CAPersonalHealthIdentification",
          "CASocialInsuranceNumber",
          "CLIdentityCardNumber",
          "CNResidentIdentityCardNumber",
          "CreditCardNumber",
          "HRIdentityCardNumber",
          "HRNationalIDNumber",
          "HRPersonalIdentificationNumber",
          "HRPersonalIdentificationOIBNumberV2",
          "CYIdentityCard",
          "CYTaxIdentificationNumber",
          "CZPersonalIdentityNumber",
          "CZPersonalIdentityV2",
          "DKPersonalIdentificationNumber",
          "DKPersonalIdentificationV2",
          "DrugEnforcementAgencyNumber",
          "EEPersonalIdentificationCode",
          "EUDebitCardNumber",
          "EUDriversLicenseNumber",
          "EUGPSCoordinates",
          "EUNationalIdentificationNumber",
          "EUPassportNumber",
          "EUSocialSecurityNumber",
          "EUTaxIdentificationNumber",
          "FIEuropeanHealthNumber",
          "FINationalID",
          "FINationalIDV2",
          "FIPassportNumber",
          "FRDriversLicenseNumber",
          "FRHealthInsuranceNumber",
          "FRNationalID",
          "FRPassportNumber",
          "FRSocialSecurityNumber",
          "FRTaxIdentificationNumber",
          "FRValueAddedTaxNumber",
          "DEDriversLicenseNumber",
          "DEPassportNumber",
          "DEIdentityCardNumber",
          "DETaxIdentificationNumber",
          "DEValueAddedNumber",
          "GRNationalIDCard",
          "GRNationalIDV2",
          "GRTaxIdentificationNumber",
          "HKIdentityCardNumber",
          "HUValueAddedNumber",
          "HUPersonalIdentificationNumber",
          "HUTaxIdentificationNumber",
          "INPermanentAccount",
          "INUniqueIdentificationNumber",
          "IDIdentityCardNumber",
          "InternationalBankingAccountNumber",
          "IEPersonalPublicServiceNumber",
          "IEPersonalPublicServiceNumberV2",
          "ILBankAccountNumber",
          "ILNationalID",
          "ITDriversLicenseNumber",
          "ITFiscalCode",
          "ITValueAddedTaxNumber",
          "JPBankAccountNumber",
          "JPDriversLicenseNumber",
          "JPPassportNumber",
          "JPResidentRegistrationNumber",
          "JPSocialInsuranceNumber",
          "JPMyNumberCorporate",
          "JPMyNumberPersonal",
          "JPResidenceCardNumber",
          "LVPersonalCode",
          "LTPersonalCode",
          "LUNationalIdentificationNumberNatural",
          "LUNationalIdentificationNumberNonNatural",
          "MYIdentityCardNumber",
          "MTIdentityCardNumber",
          "MTTaxIDNumber",
          "NLCitizensServiceNumber",
          "NLCitizensServiceNumberV2",
          "NLTaxIdentificationNumber",
          "NLValueAddedTaxNumber",
          "NZBankAccountNumber",
          "NZDriversLicenseNumber",
          "NZInlandRevenueNumber",
          "NZMinistryOfHealthNumber",
          "NZSocialWelfareNumber",
          "NOIdentityNumber",
          "PHUnifiedMultiPurposeIDNumber",
          "PLIdentityCard",
          "PLNationalID",
          "PLNationalIDV2",
          "PLPassportNumber",
          "PLTaxIdentificationNumber",
          "PLREGONNumber",
          "PTCitizenCardNumber",
          "PTCitizenCardNumberV2",
          "PTTaxIdentificationNumber",
          "ROPersonalNumericalCode",
          "RUPassportNumberDomestic",
          "RUPassportNumberInternational",
          "SANationalID",
          "SGNationalRegistrationIdentityCardNumber",
          "SKPersonalNumber",
          "SITaxIdentificationNumber",
          "SIUniqueMasterCitizenNumber",
          "ZAIdentificationNumber",
          "KRResidentRegistrationNumber",
          "ESDNI",
          "ESSocialSecurityNumber",
          "ESTaxIdentificationNumber",
          "SQLServerConnectionString",
          "SENationalID",
          "SENationalIDV2",
          "SEPassportNumber",
          "SETaxIdentificationNumber",
          "SWIFTCode",
          "CHSocialSecurityNumber",
          "TWNationalID",
          "TWPassportNumber",
          "TWResidentCertificate",
          "THPopulationIdentificationCode",
          "TRNationalIdentificationNumber",
          "UKDriversLicenseNumber",
          "UKElectoralRollNumber",
          "UKNationalHealthNumber",
          "UKNationalInsuranceNumber",
          "UKUniqueTaxpayerNumber",
          "USUKPassportNumber",
          "USBankAccountNumber",
          "USDriversLicenseNumber",
          "USIndividualTaxpayerIdentification",
          "USSocialSecurityNumber",
          "UAPassportNumberDomestic",
          "UAPassportNumberInternational",
          "Organization",
          "Email",
          "URL",
          "Age",
          "PhoneNumber",
          "IPAddress",
          "Date",
          "Person",
          "Address",
          "All",
          "Default"
        ]
      },
      "type": "array",
      "uniqueItems": true
    },
    "BaseResolution": {
      "type":"object",
      "discriminator": "resolutionKind",
      "properties": {
        "resolutionKind":{
          "type": "string",
          "enum": [
            "BooleanResolution",
            "DateTimeResolution",
            "NumberResolution",
            "OrdinalResolution",
            "SpeedResolution",
            "WeightResolution",
            "LengthResolution",
            "VolumeResolution",
            "AreaResolution",
            "AgeResolution",
            "InformationResolution",
            "TemperatureResolution",
            "CurrencyResolution",
            "NumericRangeResolution",
            "TemporalSpanResolution"
          ],
          "x-ms-enum": {
            "name": "ResolutionKind",
            "modelAsString": false
          }
        }
      },
      "required": [
        "resolutionKind"
      ]
    },
    "BaseExtraInformation":{
      "type":"object",
      "discriminator": "extraInformationKind",
      "properties": {
        "extraInformationKind":{
          "type": "string",
          "enum": [
            "PersonNameExtraInfo",
            "ColorExtraInfo",
            "OrganizationExtraInfo"
          ]
        }
      },
      "required": [
        "extraInformationKind"
      ]
    },
    "PersonNameExtraInfo":{
      "allOf": [
        {
          "$ref": "#/definitions/BaseExtraInformation"
        }
      ],
      "type":"object",
      "properties":{
        "firstName":{
          "type":"string"
        },
        "middleName":{
          "type":"string"
        },
        "lastName":{
          "type":"string"
        }
      },
      "description": "Breaking down the Person Name match into its subparts."
    },
    "ColorExtraInfo":{
      "allOf": [
        {
          "$ref": "#/definitions/BaseExtraInformation"
        }
      ],
      "type":"object",
      "properties":{
        "normalizedValue":{
          "type":"string"
        }
      },
      "description": "A normalized value from the set of known colors."
    },
    "OrganizationExtraInfo":{
      "allOf": [
        {
          "$ref": "#/definitions/BaseExtraInformation"
        }
      ],
      "type":"object",
      "properties":{
        "normalizedValue":{
          "type":"string"
        }
      },
      "description": "The normalized organization name in English"
    },
    "QuantityResolution":{
      "description": "represents resolutions for quantities.",
      "type": "object",
      "properties": {
        "value": {
          "type": "string",
          "description": "The numeric value that the extracted text denotes."
        },
        "quantityUnitKind": {
          "$ref": "#/definitions/BaseUnitKind"
        }
      },
      "required": [
        "value",
        "quantityUnitKind"
      ]
    },
    "AgeResolution":{
      "allOf": [
        {
          "$ref": "#/definitions/BaseResolution"
        },
        {
          "$ref": "#/definitions/QuantityResolution"
        }
      ],
      "type":"object",
      "properties": {
        "duration":{
          "type":"string",
          "description": "A value formatted based on the ISO 8601 (https://en.wikipedia.org/wiki/ISO_8601#Durations), or the constant string 'Unspecified' if the age unit is not known."
        }
      }
    },
    "VolumeResolution":{
      "allOf": [
        {
          "$ref": "#/definitions/BaseResolution"
        },
        {
          "$ref": "#/definitions/QuantityResolution"
        }
      ]
    },
    "SpeedResolution":{
      "allOf": [
        {
          "$ref": "#/definitions/BaseResolution"
        },
        {
          "$ref": "#/definitions/QuantityResolution"
        }
      ]
    },
    "AreaResolution":{
      "allOf": [
        {
          "$ref": "#/definitions/BaseResolution"
        },
        {
          "$ref": "#/definitions/QuantityResolution"
        }
      ]
    },
    "LengthResolution":{
      "allOf": [
        {
          "$ref": "#/definitions/BaseResolution"
        },
        {
          "$ref": "#/definitions/QuantityResolution"
        }
      ]
    },
    "InformationResolution":{
      "allOf": [
        {
          "$ref": "#/definitions/BaseResolution"
        },
        {
          "$ref": "#/definitions/QuantityResolution"
        }
      ]
    },
    "TemperatureResolution":{
      "allOf": [
        {
          "$ref": "#/definitions/BaseResolution"
        },
        {
          "$ref": "#/definitions/QuantityResolution"
        }
      ]
    },
    "WeightResolution":{
      "allOf": [
        {
          "$ref": "#/definitions/BaseResolution"
        },
        {
          "$ref": "#/definitions/QuantityResolution"
        }
      ]
    },
    "CurrencyResolution":{
      "allOf": [
        {
          "$ref": "#/definitions/BaseResolution"
        },
        {
          "$ref": "#/definitions/QuantityResolution"
        }
      ],
      "type": "object",
      "properties": {
        "ISO4217":{
          "type": "string",
          "description": "The alphabetic code based on another ISO standard, ISO 3166, which lists the codes for country names. The first two letters of the ISO 4217 three-letter code are the same as the code for the country name, and, where possible, the third letter corresponds to the first letter of the currency name."
        }
      }
    },
    "BaseUnitKind": {
      "type": "object",
      "discriminator": "kind",
      "properties": {
          "kind": {
              "type": "string",
              "enum": [
                  "SpeedUnit",
                  "TemperatureUnit",
                  "WeightUnit",
                  "InformationUnit",
                  "VolumeUnit",
                  "AreaUnit",
                  "LengthUnit",
                  "AgeUnit",
                  "CurrencyUnit"
              ]
          }
      },
      "required": [
        "kind"
      ]
    },
    "WeightUnit": {
      "allOf": [
          {
            "$ref": "#/definitions/BaseUnitKind"
          }
      ],
      "properties": {
          "value": {
              "type": "string",
              "enum": [
                "Kilogram",
                "Gram",
                "Milligram",
                "Gallon",
                "MetricTon",
                "Ton",
                "Pound",
                "Ounce",
                "Grain",
                "PennyWeight",
                "LongTonBritish",
                "ShortTonUS",
                "ShortHundredWeightUS",
                "Stone",
                "Dram",
                "Unspecified"
              ]
          }
      },
      "required": [
          "value"
      ],
      "x-ms-discriminator-value": "WeightUnit"
    },

    "VolumeUnit": {
      "allOf": [
          {
            "$ref": "#/definitions/BaseUnitKind"
          }
      ],
      "properties": {
          "value": {
              "type": "string",
              "enum": [
                "CubicMeter",
                "CubicCentimeter",
                "CubicMillimeter",
                "Hectoliter",
                "Decaliter",
                "Liter",
                "Centiliter",
                "Milliliter",
                "CubicYard",
                "CubicInch",
                "CubicFoot",
                "CubicMile",
                "FluidOunce",
                "Teaspoon",
                "Tablespoon",
                "Pint",
                "Quart",
                "Cup",
                "Gill",
                "Pinch",
                "FluidDram",
                "Barrel",
                "Minim",
                "Cord",
                "Peck",
                "Bushel",
                "Hogshead",
                "Unspecified"
              ]
          }
      },
      "required": [
          "value"
      ],
      "x-ms-discriminator-value": "VolumeUnit"
    },
    "SpeedUnit": {
      "allOf": [
          {"$ref": "#/definitions/BaseUnitKind"}
      ],
      "properties": {
          "value": {
              "type": "string",
              "enum": [
                  "MeterPerSecond",
                  "KilometerPerHour",
                  "KilometerPerMinute",
                  "KilometerPerSecond",
                  "MilePerHour",
                  "Knot",
                  "FootPerSecond",
                  "FootPerMinute",
                  "YardPerMinute",
                  "YardPerSecond",
                  "MeterPerMillisecond",
                  "CentimeterPerMillisecond",
                  "KilometerPerMillisecond",
                  "Unspecified"
              ]
          }
      },
      "required": [
          "value"
      ],
      "x-ms-discriminator-value": "SpeedUnit"
    },
    "AreaUnit": {
      "allOf": [
          {
            "$ref": "#/definitions/BaseUnitKind"
          }
      ],
      "properties": {
          "value": {
              "type": "string",
              "enum": [
                "SquareKilometer",
                "SquareHectometer",
                "SquareDecameter",
                "SquareDecimeter",
                "SquareMeter",
                "SquareCentimeter",
                "SquareMillimeter",
                "SquareInch",
                "SquareFoot",
                "SquareMile",
                "SquareYard",
                "Acre",
                "Unspecified"
              ]
          }
      },
      "required": [
        "value"
      ],
      "x-ms-discriminator-value": "LengthUnit"
    },

    "LengthUnit": {
      "allOf": [
          {
            "$ref": "#/definitions/BaseUnitKind"
          }
      ],
      "properties": {
          "value": {
              "type": "string",
              "enum": [
                  "Kilometer",
                  "Hectometer",
                  "Decameter",
                  "Meter",
                  "Decimeter",
                  "Centimeter",
                  "Millimeter",
                  "Micrometer",
                  "Nanometer",
                  "Picometer",
                  "Mile",
                  "Yard",
                  "Inch",
                  "Foot",
                  "LightYear",
                  "Pt",
                  "Unspecified"
              ]
          }
      },
      "required": [
        "value"
      ],
      "x-ms-discriminator-value": "LengthUnit"
    },
    "AgeUnit":{
      "allOf": [
        {
          "$ref": "#/definitions/BaseUnitKind"
        }
       ],
       "properties": {
         "value": {
            "type": "string",
            "enum": [
              "Year",
              "Month",
              "Week",
              "Day",
              "Unspecified"
            ]
          }
        },
        "required": [
          "value"
        ],
        "x-ms-discriminator-value": "AgeUnit"
    },
    "TemperatureUnit":{
      "allOf": [
        {
          "$ref": "#/definitions/BaseUnitKind"
        }
      ],
      "properties": {
        "value": {
            "type": "string",
            "enum": [
              "F",
              "K",
              "R",
              "D",
              "C",
              "Unspecified"
            ]
          }
        },
        "required": [
          "value"
        ],
        "x-ms-discriminator-value": "TemperatureUnit"
    },
    "InformationUnit":{
      "allOf": [
        {
          "$ref": "#/definitions/BaseUnitKind"
        }
      ],
      "properties": {
        "value": {
            "type": "string",
            "enum": [
              "Bit",
              "Kilobit",
              "Megabit",
              "Gigabit",
              "Terabit",
              "Petabit",
              "Byte",
              "Kilobyte",
              "Megabyte",
              "Gigabyte",
              "Terabyte",
              "Petabyte",
              "Unspecified"
            ]
          }
        },
        "required": [
          "value"
        ],
        "x-ms-discriminator-value": "InformationUnit"
    },
    "CurrencyUnit":{
      "allOf": [
        {
          "$ref": "#/definitions/BaseUnitKind"
        }
      ],
      "properties": {
        "value": {
          "type": "string"
        }
      }
    },
    "TemporalSpanResolution": {
      "allOf":[
        {
          "$ref": "#/definitions/BaseResolution"
        }
      ],
      "type":"object",
      "properties": {
        "begin":{
          "$ref": "#/definitions/TimeExpression"
        },
        "end":{
          "$ref": "#/definitions/TimeExpression"
        },
        "duration":{
          "type":"string",
          "description": "An optional duration value formatted based on the ISO 8601 (https://en.wikipedia.org/wiki/ISO_8601#Durations)"
        },
        "modifier":{
          "$ref": "#/definitions/TemporalModifier"
        }
      },
      "description": "represents the resolution of a date and/or time span."
    },
    "NumericRangeResolution": {
      "allOf":[
        {
          "$ref": "#/definitions/BaseResolution"
        }
      ],
      "type": "object",
      "properties": {
        "rangeKind":{
          "type":"string",
          "enum": [
            "NumberResolution",
            "SpeedResolution",
            "WeightResolution",
            "LengthResolution",
            "VolumeResolution",
            "AreaResolution",
            "AgeResolution",
            "InformationResolution",
            "TemperatureResolution",
            "CurrencyResolution"
          ],
          "x-ms-enum": {
            "name": "RangeKind",
            "modelAsString": false
          }
        },
        "begin":{
          "$ref": "#/definitions/QuantityResolution",
          "description": "The beginning value of  the interval."
        },
        "end":{
          "$ref": "#/definitions/QuantityResolution",
          "description": "The ending value of the interval."
        }
      },
      "required": [
        "rangeKind"
      ]
    },
    "BooleanResolution":{
      "allOf": [
        {
          "$ref": "#/definitions/BaseResolution"
        }
      ],
      "type":"object",
      "properties":{
        "value":{
          "type":"boolean"
        }
      },
      "description": "A resolution for boolean expressions"
    },
    "DateTimeResolution":{
      "allOf": [
        {
          "$ref": "#/definitions/BaseResolution"
        }
      ],
      "type":"object",
      "properties":{
        "timex": {
          "$ref": "#/definitions/TimeExpression"
        },
        "dateTimeSubKind": {
          "type": "string",
          "enum": [
            "Time",
            "Date",
            "DateTime",
            "Duration",
            "Set"
          ],
          "x-ms-enum": {
            "name": "DateTimeSubKind",
            "modelAsString": false
          },
          "description": "The date time SubKind"
        },
        "value": {
          "type": "string",
          "description": "The actual time that the extracted text denote."
        },
        "modifier":{
          "$ref": "#/definitions/TemporalModifier"
        }
      },
      "required": [
        "timex",
        "dateTimeSubKind",
        "value"
      ]
    },
    "NumberResolution":{
      "allOf": [
        {
          "$ref": "#/definitions/BaseResolution"
        }
      ],
      "type": "object",
      "properties": {
        "numberKind": {
          "type": "string",
          "enum": [
            "Integer",
            "Decimal",
            "Power",
            "Fraction",
            "Percent",
            "Unspecified"
          ],
          "x-ms-enum": {
            "name": "NumberKind",
            "modelAsString": false
          },
          "description": "The type of the extracted number entity."
        },
        "value": {
          "type": "string",
          "description": "A numeric representation of what the extracted text denotes."
        }
      },
      "required": [
        "numberKind",
        "value"
      ]
    },
    "OrdinalResolution":{
      "allOf": [
        {
          "$ref": "#/definitions/BaseResolution"
        }
      ],
      "type": "object",
      "properties": {
        "offset":{
          "type": "string",
          "description": "The offset With respect to the reference (e.g., offset = -1 in \"show me the second to last\""
        },
        "relativeTo":{
          "type":"string",
          "enum": [
            "Current",
            "End",
            "Start"
          ],
          "x-ms-enum": {
            "name": "RelativeTo",
            "modelAsString": true
          },
          "description": "The reference point that the ordinal number denotes."
        },
        "value":{
          "type": "string",
          "description": "A simple arithmetic expression that the ordinal denotes."
        }
      },
      "required": [
        "offset",
        "relativeTo",
        "value"
      ]
    },
    "TemporalModifier":{
      "type": "string",
      "description": "An optional modifier of a date/time instance.",
      "enum": [
        "AfterApprox",
        "Before",
        "BeforeStart",
        "Approx",
        "ReferenceUndefined",
        "SinceEnd",
        "AfterMid",
        "Start",
        "After",
        "BeforeEnd",
        "Until",
        "End",
        "Less",
        "Since",
        "AfterStart",
        "BeforeApprox",
        "Mid",
        "More"
      ],
      "x-ms-enum": {
        "name": "Modifier",
        "modelAsString": true
      }
    },
    "TimeExpression":{
      "type": "string",
      "description": "An extended ISO 8601 date/time representation as described in (https://github.com/Microsoft/Recognizers-Text/blob/master/Patterns/English/English-DateTime.yaml)"
    }
  },
  "parameters": {
    "Endpoint": {
      "name": "Endpoint",
      "description": "Supported Cognitive Services endpoints (protocol and hostname, for example: https://westus.api.cognitive.microsoft.com).",
      "x-ms-parameter-location": "client",
      "required": true,
      "type": "string",
      "in": "path",
      "x-ms-skip-url-encoding": true
    },
    "StringIndexType": {
      "name": "stringIndexType",
      "in": "query",
      "type": "string",
      "description": "(Optional) Specifies the method used to interpret string offsets.  Defaults to Text Elements (Graphemes) according to Unicode v8.0.0. For additional information see https://aka.ms/text-analytics-offsets",
      "default": "TextElement_v8",
      "enum": [
        "TextElement_v8",
        "UnicodeCodePoint",
        "Utf16CodeUnit"
      ],
      "x-ms-enum": {
        "name": "StringIndexType",
        "modelAsString": true,
        "values": [
          {
            "value": "TextElement_v8",
            "description": "Returned offset and length values will correspond to TextElements (Graphemes and Grapheme clusters) confirming to the Unicode 8.0.0 standard. Use this option if your application is written in .Net Framework or .Net Core and you will be using StringInfo."
          },
          {
            "value": "UnicodeCodePoint",
            "description": "Returned offset and length values will correspond to Unicode code points. Use this option if your application is written in a language that support Unicode, for example Python."
          },
          {
            "value": "Utf16CodeUnit",
            "description": "Returned offset and length values will correspond to UTF-16 code units. Use this option if your application is written in a language that support Unicode, for example Java, JavaScript."
          }
        ]
      },
      "x-ms-parameter-location": "method"
    },
    "PiiCategories": {
      "description": "(Optional) describes the PII categories to return",
      "in": "query",
      "collectionFormat": "csv",
      "items": {
        "type": "string",
        "x-ms-enum": {
          "name": "PiiCategory",
          "modelAsString": true
        },
        "enum": [
          "ABARoutingNumber",
          "ARNationalIdentityNumber",
          "AUBankAccountNumber",
          "AUDriversLicenseNumber",
          "AUMedicalAccountNumber",
          "AUPassportNumber",
          "AUTaxFileNumber",
          "AUBusinessNumber",
          "AUCompanyNumber",
          "ATIdentityCard",
          "ATTaxIdentificationNumber",
          "ATValueAddedTaxNumber",
          "AzureDocumentDBAuthKey",
          "AzureIAASDatabaseConnectionAndSQLString",
          "AzureIoTConnectionString",
          "AzurePublishSettingPassword",
          "AzureRedisCacheString",
          "AzureSAS",
          "AzureServiceBusString",
          "AzureStorageAccountKey",
          "AzureStorageAccountGeneric",
          "BENationalNumber",
          "BENationalNumberV2",
          "BEValueAddedTaxNumber",
          "BRCPFNumber",
          "BRLegalEntityNumber",
          "BRNationalIDRG",
          "BGUniformCivilNumber",
          "CABankAccountNumber",
          "CADriversLicenseNumber",
          "CAHealthServiceNumber",
          "CAPassportNumber",
          "CAPersonalHealthIdentification",
          "CASocialInsuranceNumber",
          "CLIdentityCardNumber",
          "CNResidentIdentityCardNumber",
          "CreditCardNumber",
          "HRIdentityCardNumber",
          "HRNationalIDNumber",
          "HRPersonalIdentificationNumber",
          "HRPersonalIdentificationOIBNumberV2",
          "CYIdentityCard",
          "CYTaxIdentificationNumber",
          "CZPersonalIdentityNumber",
          "CZPersonalIdentityV2",
          "DKPersonalIdentificationNumber",
          "DKPersonalIdentificationV2",
          "DrugEnforcementAgencyNumber",
          "EEPersonalIdentificationCode",
          "EUDebitCardNumber",
          "EUDriversLicenseNumber",
          "EUGPSCoordinates",
          "EUNationalIdentificationNumber",
          "EUPassportNumber",
          "EUSocialSecurityNumber",
          "EUTaxIdentificationNumber",
          "FIEuropeanHealthNumber",
          "FINationalID",
          "FINationalIDV2",
          "FIPassportNumber",
          "FRDriversLicenseNumber",
          "FRHealthInsuranceNumber",
          "FRNationalID",
          "FRPassportNumber",
          "FRSocialSecurityNumber",
          "FRTaxIdentificationNumber",
          "FRValueAddedTaxNumber",
          "DEDriversLicenseNumber",
          "DEPassportNumber",
          "DEIdentityCardNumber",
          "DETaxIdentificationNumber",
          "DEValueAddedNumber",
          "GRNationalIDCard",
          "GRNationalIDV2",
          "GRTaxIdentificationNumber",
          "HKIdentityCardNumber",
          "HUValueAddedNumber",
          "HUPersonalIdentificationNumber",
          "HUTaxIdentificationNumber",
          "INPermanentAccount",
          "INUniqueIdentificationNumber",
          "IDIdentityCardNumber",
          "InternationalBankingAccountNumber",
          "IEPersonalPublicServiceNumber",
          "IEPersonalPublicServiceNumberV2",
          "ILBankAccountNumber",
          "ILNationalID",
          "ITDriversLicenseNumber",
          "ITFiscalCode",
          "ITValueAddedTaxNumber",
          "JPBankAccountNumber",
          "JPDriversLicenseNumber",
          "JPPassportNumber",
          "JPResidentRegistrationNumber",
          "JPSocialInsuranceNumber",
          "JPMyNumberCorporate",
          "JPMyNumberPersonal",
          "JPResidenceCardNumber",
          "LVPersonalCode",
          "LTPersonalCode",
          "LUNationalIdentificationNumberNatural",
          "LUNationalIdentificationNumberNonNatural",
          "MYIdentityCardNumber",
          "MTIdentityCardNumber",
          "MTTaxIDNumber",
          "NLCitizensServiceNumber",
          "NLCitizensServiceNumberV2",
          "NLTaxIdentificationNumber",
          "NLValueAddedTaxNumber",
          "NZBankAccountNumber",
          "NZDriversLicenseNumber",
          "NZInlandRevenueNumber",
          "NZMinistryOfHealthNumber",
          "NZSocialWelfareNumber",
          "NOIdentityNumber",
          "PHUnifiedMultiPurposeIDNumber",
          "PLIdentityCard",
          "PLNationalID",
          "PLNationalIDV2",
          "PLPassportNumber",
          "PLTaxIdentificationNumber",
          "PLREGONNumber",
          "PTCitizenCardNumber",
          "PTCitizenCardNumberV2",
          "PTTaxIdentificationNumber",
          "ROPersonalNumericalCode",
          "RUPassportNumberDomestic",
          "RUPassportNumberInternational",
          "SANationalID",
          "SGNationalRegistrationIdentityCardNumber",
          "SKPersonalNumber",
          "SITaxIdentificationNumber",
          "SIUniqueMasterCitizenNumber",
          "ZAIdentificationNumber",
          "KRResidentRegistrationNumber",
          "ESDNI",
          "ESSocialSecurityNumber",
          "ESTaxIdentificationNumber",
          "SQLServerConnectionString",
          "SENationalID",
          "SENationalIDV2",
          "SEPassportNumber",
          "SETaxIdentificationNumber",
          "SWIFTCode",
          "CHSocialSecurityNumber",
          "TWNationalID",
          "TWPassportNumber",
          "TWResidentCertificate",
          "THPopulationIdentificationCode",
          "TRNationalIdentificationNumber",
          "UKDriversLicenseNumber",
          "UKElectoralRollNumber",
          "UKNationalHealthNumber",
          "UKNationalInsuranceNumber",
          "UKUniqueTaxpayerNumber",
          "USUKPassportNumber",
          "USBankAccountNumber",
          "USDriversLicenseNumber",
          "USIndividualTaxpayerIdentification",
          "USSocialSecurityNumber",
          "UAPassportNumberDomestic",
          "UAPassportNumberInternational",
          "Organization",
          "Email",
          "URL",
          "Age",
          "PhoneNumber",
          "IPAddress",
          "Date",
          "Person",
          "Address",
          "All",
          "Default"
        ]
      },
      "name": "piiCategories",
      "required": false,
      "type": "array",
      "uniqueItems": true,
      "x-ms-parameter-location": "method"
    },
    "JobId": {
      "description": "Job ID",
      "format": "uuid",
      "in": "path",
      "name": "jobId",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "AnalyzeJobId": {
      "description": "Job ID for Analyze",
      "in": "path",
      "name": "jobId",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "ShowStats": {
      "name": "showStats",
      "in": "query",
      "description": "(Optional) if set to true, response will contain request and document level statistics.",
      "type": "boolean",
      "required": false,
      "x-ms-parameter-location": "method"
    },
    "LoggingOptOut": {
      "name": "loggingOptOut",
      "in": "query",
      "description": "(Optional) If set to true, you opt-out of having your text input logged for troubleshooting. By default, Text Analytics logs your input text for 48 hours, solely to allow for troubleshooting issues in providing you with the Text Analytics natural language processing functions. Setting this parameter to true, disables input logging and may limit our ability to remediate issues that occur.  Please see Cognitive Services Compliance and Privacy notes at https://aka.ms/cs-compliance for additional details, and Microsoft Responsible AI principles at https://www.microsoft.com/en-us/ai/responsible-ai.",
      "type": "boolean",
      "required": false,
      "x-ms-parameter-location": "method"
    },
    "ModelVersion": {
      "name": "model-version",
      "in": "query",
      "description": "(Optional) This value indicates which model will be used for scoring. If a model-version is not specified, the API should default to the latest, non-preview version. ",
      "type": "string",
      "required": false,
      "x-ms-parameter-location": "method"
    },
    "MultiLanguageInput": {
      "in": "body",
      "name": "input",
      "description": "Collection of documents to analyze.",
      "required": true,
      "schema": {
        "$ref": "#/definitions/MultiLanguageBatchInput"
      },
      "x-ms-parameter-location": "method"
    },
    "LanguageInput": {
      "in": "body",
      "name": "input",
      "description": "Collection of documents to analyze for language endpoint.",
      "required": true,
      "schema": {
        "$ref": "#/definitions/LanguageBatchInput"
      },
      "x-ms-parameter-location": "method"
    }
  }
}
