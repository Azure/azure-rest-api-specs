{
  "swagger": "2.0",
  "info": {
    "title": "Speaker Verification API",
    "version": "2021-09-05",
    "x-ms-code-generation-settings": {
      "header": "MIT",
      "strictSpecAdherence": false
    },
    "description": "The Azure Cognitive Service Speaker Recognition service provides algorithms that verify and identify speakers by their unique voice characteristics.\nSpeaker Recognition is used to answer the question \"who is speaking?\""
  },
  "x-ms-parameterized-host": {
    "hostTemplate": "{endpoint}/speaker/verification",
    "useSchemePrefix": false,
    "positionInOperation\"": "first",
    "parameters": [
      {
        "$ref": "#/parameters/endpoint"
      }
    ]
  },
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "securityDefinitions": {
    "apiKeyHeader": {
      "type": "apiKey",
      "name": "Ocp-Apim-Subscription-Key",
      "in": "header"
    }
  },
  "security": [
    {
      "apiKeyHeader": []
    }
  ],
  "parameters": {
    "endpoint": {
      "name": "Endpoint",
      "description": "Supported Cognitive Services endpoints (protocol and hostname, for example: https://westus.api.cognitive.microsoft.com).",
      "x-ms-parameter-location": "client",
      "required": true,
      "type": "string",
      "in": "path",
      "x-ms-skip-url-encoding": true
    },
    "apiVersionParam": {
      "name": "x-ms-version",
      "x-ms-parameter-location": "client",
      "x-ms-client-name": "version",
      "in": "query",
      "required": false,
      "type": "string",
      "description": "Specifies the version of the operation to use for this request.",
      "x-ms-global": "true,",
      "enum": [
        "2021-09-05"
      ],
      "default": "2021-09-05"
    },
    "profileIdParam": {
      "in": "path",
      "name": "profileId",
      "required": true,
      "type": "string",
      "format": "uuid",
      "x-nullable": false,
      "description": "Unique identifier for profile id (guid).",
      "x-ms-parameter-location": "method"
    },
    "localeParam": {
      "in": "path",
      "name": "locale",
      "required": true,
      "type": "string",
      "x-nullable": false,
      "pattern": "^[a-zA-Z]{2}-?[a-zA-Z]{2}$",
      "description": "A combination of language code and country code.",
      "x-ms-parameter-location": "method"
    }
  },
  "definitions": {
    "ProfileId": {
      "type": "string",
      "description": "Unique identifier for profile id (guid).",
      "format": "uuid",
      "x-nullable": false,
      "example": "49a36324-fc4b-4387-aa06-090cfbf0064f"
    },
    "Locale": {
      "type": "string",
      "pattern": "^[a-zA-Z]{2}-?[a-zA-Z]{2}$",
      "description": "Language identifier consisting of a combination of language code and country code.",
      "x-nullable": false,
      "example": "en-US"
    },
    "ProfileStatus": {
      "type": "string",
      "description": "Status representing the current state of the profile. Available values are:\n* Active: profile is active and can be used if the enrollment status is 'Enrolled'.\n* Inactive: profile has not been activated and an activation phrase must be submitted.",
      "enum": [
        "Active",
        "Inactive"
      ],
      "x-ms-enum": {
        "name": "TrainingStatusType",
        "modelAsString": false
      },
      "example": "Inactive"
    },
    "EnrollmentStatus": {
      "type": "string",
      "description": "Status representing the current state of the profile. Available values are:\n* Enrolling: profile has no voice print and not ready for recognition requests.\n* Training: voice print of profile is being created and canâ€™t be used for recognition at the moment.\n* Enrolled: profile has a voice print and ready for recognition requests.",
      "enum": [
        "Enrolling",
        "Training",
        "Enrolled"
      ],
      "x-ms-enum": {
        "name": "TrainingStatusType",
        "modelAsString": false
      },
      "example": "Enrolling"
    },
    "CreatedDateTime": {
      "type": "string",
      "format": "date-time",
      "description": "Profile creation datetime.",
      "example": "2015-04-23T18:25:43.41Z"
    },
    "LastUpdatedDateTime": {
      "type": "string",
      "format": "date-time",
      "description": "Last datetime when the profile was updated.",
      "example": "2015-04-23T19:34:51.52Z"
    },
    "EnrollmentsCount": {
      "type": "integer",
      "description": "Number of enrollment audios accepted for this profile.",
      "example": 1
    },
    "EnrollmentsLengthInSec": {
      "type": "number",
      "description": "Total length of enrollment audios accepted for this profile in seconds.",
      "example": 1.83
    },
    "EnrollmentsSpeechLengthInSec": {
      "type": "number",
      "description": "Summation of pure speech (which is the amount of audio after removing silence and non-speech segments) across all profile enrollments in seconds.",
      "example": 1.35
    },
    "RemainingEnrollmentsCount": {
      "type": "integer",
      "description": "Number of enrollment audios needed to complete profile enrollment.",
      "example": 2
    },
    "RemainingEnrollmentsSpeechLengthInSec": {
      "type": "number",
      "description": "Amount of pure speech (which is the amount of audio after removing silence and non-speech segments) needed to complete profile enrollment in seconds.",
      "example": 18.65
    },
    "ModelVersion": {
      "type": "string",
      "format": "date",
      "description": "Date specifying the model assigned to this profile. Format is yyyy-mm-dd. If profile has no enrollments, this value will be empty.",
      "example": "2019-12-05"
    },
    "PassPhrase": {
      "type": "string",
      "description": "Passphrase associated with this enrollment.",
      "example": "my voice is my passport verify me"
    },
    "ActivationPhrase": {
      "type": "string",
      "description": "Activation phrases available to activate a profile.",
      "example": "this is my activation phrase to identify me"
    },
    "LocaleInfo": {
      "description": "Speaker profile locale",
      "properties": {
        "locale": {
          "$ref": "#/definitions/Locale"
        }
      }
    },
    "TdProfileInfoList": {
      "description": "Text-Dependent Speaker profile info list",
      "properties": {
        "profiles": {
          "items": {
            "$ref": "#/definitions/TdProfileInfo"
          }
        },
        "nextLink": {
          "type": "string",
          "example": "{opaqueUrl}"
        }
      }
    },
    "TdProfileInfo": {
      "description": "Text-Dependent Speaker profile info",
      "properties": {
        "profileId": {
          "$ref": "#/definitions/ProfileId"
        },
        "locale": {
          "$ref": "#/definitions/Locale"
        },
        "enrollmentStatus": {
          "$ref": "#/definitions/EnrollmentStatus"
        },
        "createdDateTime": {
          "$ref": "#/definitions/CreatedDateTime"
        },
        "lastUpdatedDateTime": {
          "$ref": "#/definitions/LastUpdatedDateTime"
        },
        "enrollmentsCount": {
          "$ref": "#/definitions/EnrollmentsCount"
        },
        "enrollmentsLengthInSec": {
          "$ref": "#/definitions/EnrollmentsLengthInSec"
        },
        "enrollmentsSpeechLengthInSec": {
          "$ref": "#/definitions/EnrollmentsSpeechLengthInSec"
        },
        "remainingEnrollmentsCount": {
          "$ref": "#/definitions/RemainingEnrollmentsCount"
        },
        "modelVersion": {
          "$ref": "#/definitions/ModelVersion"
        }
      }
    },
    "TdEnrollmentInfo": {
      "description": "Text-Dependent Speaker profile enrollment info",
      "properties": {
        "profileId": {
          "$ref": "#/definitions/ProfileId"
        },
        "enrollmentStatus": {
          "$ref": "#/definitions/EnrollmentStatus"
        },
        "enrollmentsCount": {
          "$ref": "#/definitions/EnrollmentsCount"
        },
        "enrollmentsLengthInSec": {
          "$ref": "#/definitions/EnrollmentsLengthInSec"
        },
        "enrollmentsSpeechLengthInSec": {
          "$ref": "#/definitions/EnrollmentsSpeechLengthInSec"
        },
        "remainingEnrollmentsCount": {
          "$ref": "#/definitions/RemainingEnrollmentsCount"
        },
        "passPhrase": {
          "$ref": "#/definitions/PassPhrase"
        },
        "audioLengthInSec": {
          "type": "number",
          "description": "This enrollment audio length in seconds.",
          "example": 1.83
        },
        "audioSpeechLengthInSec": {
          "type": "number",
          "description": "This enrollment audio pure speech (which is the amount of audio after removing silence and non-speech segments) length in seconds.",
          "example": 1.35
        }
      }
    },
    "TiProfileInfoList": {
      "description": "Text-Independent Speaker profile info list",
      "properties": {
        "profiles": {
          "items": {
            "$ref": "#/definitions/TiProfileInfo"
          }
        },
        "nextLink": {
          "type": "string",
          "example": "{opaqueUrl}"
        }
      }
    },
    "TiProfileInfo": {
      "description": "Text-Independent Speaker profile info",
      "properties": {
        "profileId": {
          "$ref": "#/definitions/ProfileId"
        },
        "locale": {
          "$ref": "#/definitions/Locale"
        },
        "profileStatus": {
          "$ref": "#/definitions/ProfileStatus"
        },
        "enrollmentStatus": {
          "$ref": "#/definitions/EnrollmentStatus"
        },
        "createdDateTime": {
          "$ref": "#/definitions/CreatedDateTime"
        },
        "lastUpdatedDateTime": {
          "$ref": "#/definitions/LastUpdatedDateTime"
        },
        "enrollmentsCount": {
          "$ref": "#/definitions/EnrollmentsCount"
        },
        "enrollmentsLengthInSec": {
          "$ref": "#/definitions/EnrollmentsLengthInSec"
        },
        "enrollmentsSpeechLengthInSec": {
          "$ref": "#/definitions/EnrollmentsSpeechLengthInSec"
        },
        "remainingEnrollmentsSpeechLengthInSec": {
          "$ref": "#/definitions/RemainingEnrollmentsSpeechLengthInSec"
        },
        "modelVersion": {
          "$ref": "#/definitions/ModelVersion"
        }
      }
    },
    "TiEnrollmentInfo": {
      "description": "Text-Independent Speaker profile enrollment info",
      "properties": {
        "profileId": {
          "$ref": "#/definitions/ProfileId"
        },
        "enrollmentStatus": {
          "$ref": "#/definitions/EnrollmentStatus"
        },
        "enrollmentsCount": {
          "$ref": "#/definitions/EnrollmentsCount"
        },
        "enrollmentsLengthInSec": {
          "$ref": "#/definitions/EnrollmentsLengthInSec"
        },
        "enrollmentsSpeechLengthInSec": {
          "$ref": "#/definitions/EnrollmentsSpeechLengthInSec"
        },
        "remainingEnrollmentsSpeechLengthInSec": {
          "$ref": "#/definitions/RemainingEnrollmentsSpeechLengthInSec"
        },
        "audioLengthInSec": {
          "type": "number",
          "description": "This enrollment audio length in seconds.",
          "example": 1.83
        },
        "audioSpeechLengthInSec": {
          "type": "number",
          "description": "This enrollment audio pure speech (which is the amount of audio after removing silence and non-speech segments) length in seconds.",
          "example": 1.35
        }
      }
    },
    "RecognitionInfo": {
      "description": "Speaker recognition result",
      "properties": {
        "recognitionResult": {
          "type": "string",
          "description": "Does audio belong to targeted profile?",
          "enum": [
            "accept",
            "reject"
          ],
          "x-ms-enum": {
            "name": "ResultType",
            "modelAsString": false
          },
          "example": "Accept"
        },
        "score": {
          "type": "number",
          "description": "A float number indicating the similarity between input audio and targeted voice print. This number must be between 0 and 1. A higher number means higher similarity.",
          "example": 0.63
        }
      }
    },
    "PassPhraseInfo": {
      "description": "Pass phrase list",
      "properties": {
        "phrases": {
          "items": {
            "properties": {
              "passPhrase": {
                "$ref": "#/definitions/PassPhrase"
              }
            }
          }
        }
      }
    },
    "ActivationPhraseInfo": {
      "description": "Activation phrase list",
      "properties": {
        "phrases": {
          "items": {
            "properties": {
              "activationPhrase": {
                "$ref": "#/definitions/ActivationPhrase"
              }
            }
          }
        }
      }
    },
    "SpeakerError": {
      "description": "Speaker error message",
      "required": [
        "error"
      ],
      "properties": {
        "error": {
          "properties": {
            "code": {
              "type": "string"
            },
            "message": {
              "type": "string"
            }
          }
        }
      }
    }
  },
  "paths": {
    "/text-dependent/profiles": {
      "parameters": [
        {
          "$ref": "#/parameters/apiVersionParam"
        }
      ],
      "post": {
        "description": "Create a new speaker profile with specified locale.",
        "operationId": "TextDependent_CreateProfile",
        "summary": "Create Profile",
        "x-ms-examples": {
          "Successful Query": {
            "$ref": "./examples/textDependentCreateProfile.json"
          }
        },
        "tags": [
          "text-dependent"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "profileInfo",
            "description": "Provide following detail info when creating a new profile.\nFields  | Description\n------- | ------------\nlocale  | Locale for the language of this speaker profile. A complete supported locale list is here: <ul><li>**en-US (American English)**</li></li></ul>",
            "schema": {
              "required": [
                "locale"
              ],
              "$ref": "#/definitions/LocaleInfo"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Speaker profile created successfully. GUID is returned to reference the created profile.",
            "headers": {
              "location": {
                "type": "string",
                "description": "url location of new resource"
              }
            },
            "schema": {
              "$ref": "#/definitions/TdProfileInfo"
            }
          },
          "default": {
            "description": "Failure",
            "schema": {
              "$ref": "#/definitions/SpeakerError"
            },
            "x-ms-error-response": true
          }
        }
      },
      "get": {
        "x-ms-pageable": {
          "nextLinkName": "nextLink",
          "itemName": "profiles"
        },
        "description": "Retrieves a set of profiles.\nProfiles are sorted alphabetically by ProfileId",
        "operationId": "TextDependent_ListProfiles",
        "summary": "List Profiles",
        "x-ms-examples": {
          "Successful Query": {
            "$ref": "./examples/textDependentListProfiles.json"
          }
        },
        "tags": [
          "text-dependent"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "maxpagesize",
            "description": "The number of profiles to return. Default is 100 and the maximum is 500",
            "type": "integer",
            "default": 100
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TdProfileInfoList"
            }
          },
          "default": {
            "description": "Failure",
            "schema": {
              "$ref": "#/definitions/SpeakerError"
            },
            "x-ms-error-response": true
          }
        }
      }
    },
    "/text-dependent/profiles/{profileId}": {
      "parameters": [
        {
          "$ref": "#/parameters/apiVersionParam"
        },
        {
          "$ref": "#/parameters/profileIdParam"
        }
      ],
      "get": {
        "description": "Retrieves a single profile by ID.",
        "operationId": "TextDependent_GetProfile",
        "summary": "Retrieve Single Profile",
        "x-ms-examples": {
          "Successful Query": {
            "$ref": "./examples/textDependentFetchProfile.json"
          }
        },
        "tags": [
          "text-dependent"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TdProfileInfo"
            }
          },
          "default": {
            "description": "Failure",
            "schema": {
              "$ref": "#/definitions/SpeakerError"
            },
            "x-ms-error-response": true
          }
        }
      },
      "delete": {
        "description": "Deletes an existing profile.",
        "operationId": "TextDependent_DeleteProfile",
        "summary": "Delete Profile",
        "x-ms-examples": {
          "Successful Query": {
            "$ref": "./examples/deleteProfile.json"
          }
        },
        "tags": [
          "text-dependent"
        ],
        "responses": {
          "204": {
            "description": "OK"
          },
          "default": {
            "description": "Failure",
            "schema": {
              "$ref": "#/definitions/SpeakerError"
            }
          }
        }
      }
    },
    "/text-dependent/profiles/{profileId}:reset": {
      "parameters": [
        {
          "$ref": "#/parameters/apiVersionParam"
        },
        {
          "$ref": "#/parameters/profileIdParam"
        }
      ],
      "post": {
        "description": "Resets existing profile to its original creation state. The reset operation does the following:\n* Updates enrollmentStatus to Enrolling.\n* Updates lastUpdatedDateTime.\n* Updates enrollmentsCount to 0.\n* Updates enrollmentsLength to 0.\n* Updates enrollmentsSpeechLength to 0.\n* Updates remainingEnrollmentsCount to the initial required number.\n* Removes all associated enrollments from storage.\n* Removes chosen passphrase association.\n* Resets value of modelVersion.",
        "operationId": "TextDependent_ResetProfile",
        "summary": "Reset Profile",
        "x-ms-examples": {
          "Successful Query": {
            "$ref": "./examples/textDependentResetProfile.json"
          }
        },
        "tags": [
          "text-dependent"
        ],
        "responses": {
          "200": {
            "description": "Speaker profile reset successfully. Profile is returned with reset vaules.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "url location of the resource"
              }
            },
            "schema": {
              "$ref": "#/definitions/TdProfileInfo"
            }
          },
          "default": {
            "description": "Failure",
            "schema": {
              "$ref": "#/definitions/SpeakerError"
            },
            "x-ms-error-response": true
          }
        }
      }
    },
    "/text-dependent/profiles/{profileId}/enrollments": {
      "parameters": [
        {
          "$ref": "#/parameters/apiVersionParam"
        },
        {
          "$ref": "#/parameters/profileIdParam"
        }
      ],
      "post": {
        "description": "Adds an enrollment to existing profile.\nIf the minimum number of requested enrollment audios is reached, a voice print is created.\nIf the voice print was created before, it gets recreated from all existing enrollment audios including the new one.\n\nLimitations:\n* Minimum audio input length per request is **1 second**\n* Maximum audio input length per request is **10 seconds**\n* Minimum number of enrollments for creating a voiceprint is **3**\n* Maximum number of enrollments for creating a voiceprint is **50**\n* Minimum audio Signal-to-noise ratio (SNR) is **2dB**\n\nConstraints:\n* First enrollment must match an existing passphrase.\n* All enrollments after the first one, must use the same passphrase used in the first enrollment.",
        "operationId": "TextDependent_CreateEnrollment",
        "summary": "Enroll Profile",
        "x-ms-examples": {
          "Successful Query": {
            "$ref": "./examples/textDependentCreateEnrollment.json"
          }
        },
        "tags": [
          "text-dependent"
        ],
        "consumes": [
          "audio/wav; codecs=audio/pcm"
        ],
        "parameters": [
          {
            "name": "audioData",
            "in": "body",
            "description": "Binary audio file. Supported formats are audio/wav; codecs=audio/pcm. Supports audio up to 5MB.",
            "required": true,
            "schema": {
              "type": "object",
              "format": "file"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/TdEnrollmentInfo"
            }
          },
          "default": {
            "description": "Failure",
            "schema": {
              "$ref": "#/definitions/SpeakerError"
            },
            "x-ms-error-response": true
          }
        }
      }
    },
    "/text-dependent/profiles/{profileId}:verify": {
      "parameters": [
        {
          "$ref": "#/parameters/apiVersionParam"
        },
        {
          "$ref": "#/parameters/profileIdParam"
        }
      ],
      "post": {
        "description": "Verifies existing profiles against input audio.\n\nLimitations:\n* Minimum audio input length per request is **1 second**\n* Maximum audio input length per request is **10 seconds**\n* Minimum audio Signal-to-noise ratio (SNR) is **10 dB**",
        "operationId": "TextDependent_VerifyProfile",
        "summary": "Verify Profile",
        "x-ms-examples": {
          "Successful Query": {
            "$ref": "./examples/verify.json"
          }
        },
        "tags": [
          "text-dependent"
        ],
        "consumes": [
          "audio/wav; codecs=audio/pcm"
        ],
        "parameters": [
          {
            "name": "audioData",
            "in": "body",
            "description": "Binary audio file. Supported formats are audio/wav; codecs=audio/pcm. Supports audio up to 5MB.",
            "required": true,
            "schema": {
              "type": "object",
              "format": "file"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RecognitionInfo"
            }
          },
          "default": {
            "description": "Failure",
            "schema": {
              "$ref": "#/definitions/SpeakerError"
            },
            "x-ms-error-response": true
          }
        }
      }
    },
    "/text-dependent/phrases/{locale}": {
      "parameters": [
        {
          "$ref": "#/parameters/apiVersionParam"
        },
        {
          "$ref": "#/parameters/localeParam"
        }
      ],
      "get": {
        "description": "Retrieves list of supported passphrases for a specific locale.",
        "operationId": "TextDependent_ListPhrases",
        "summary": "Pass Phrases",
        "x-ms-examples": {
          "Successful Query": {
            "$ref": "./examples/phrases.json"
          }
        },
        "tags": [
          "text-dependent"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PassPhraseInfo"
            }
          },
          "default": {
            "description": "Failure",
            "schema": {
              "$ref": "#/definitions/SpeakerError"
            },
            "x-ms-error-response": true
          }
        }
      }
    },
    "/text-independent/profiles": {
      "parameters": [
        {
          "$ref": "#/parameters/apiVersionParam"
        }
      ],
      "post": {
        "description": "Creates a new speaker profile with specified locale.",
        "operationId": "TextIndependent_CreateProfile",
        "summary": "Create Profile",
        "x-ms-examples": {
          "Successful Query": {
            "$ref": "./examples/textIndependentCreateProfile.json"
          }
        },
        "tags": [
          "text-independent"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "profileInfo",
            "description": "Provide following detail info when creating a new profile.\nFields  | Description\n------- | ------------\nlocale  | Locale for the language of this speaker profile. A complete supported locale list is here: <ul><li>**en-US (American English)**</li><li>**es-ES (Castilian Spanish)**</li><li>**fr-FR (Standard French)**</li><li>**zh-CN (Mandarin Chinese)**</li></ul>",
            "schema": {
              "required": [
                "locale"
              ],
              "$ref": "#/definitions/LocaleInfo"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Speaker profile created successfully. GUID is returned to reference the created profile.",
            "headers": {
              "location": {
                "type": "string",
                "description": "url location of new resource"
              }
            },
            "schema": {
              "$ref": "#/definitions/TiProfileInfo"
            }
          },
          "default": {
            "description": "Failure",
            "schema": {
              "$ref": "#/definitions/SpeakerError"
            },
            "x-ms-error-response": true
          }
        }
      },
      "get": {
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "description": "Retrieves a set of profiles.\nProfiles are sorted alphabetically by ProfileId",
        "operationId": "TextIndependent_ListProfiles",
        "summary": "List Profiles",
        "x-ms-examples": {
          "Successful Query": {
            "$ref": "./examples/textIndependentListProfiles.json"
          }
        },
        "tags": [
          "text-independent"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "maxpagesize",
            "description": "The number of profiles to return. Default is 100 and the maximum is 500",
            "type": "integer",
            "default": 100
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TiProfileInfoList"
            }
          },
          "default": {
            "description": "Failure",
            "schema": {
              "$ref": "#/definitions/SpeakerError"
            },
            "x-ms-error-response": true
          }
        }
      }
    },
    "/text-independent/profiles/{profileId}": {
      "parameters": [
        {
          "$ref": "#/parameters/apiVersionParam"
        },
        {
          "$ref": "#/parameters/profileIdParam"
        }
      ],
      "get": {
        "description": "Retrieves a single profile by ID.",
        "operationId": "TextIndependent_GetProfile",
        "summary": "Retrieve Single Profile",
        "x-ms-examples": {
          "Successful Query": {
            "$ref": "./examples/textIndependentFetchProfile.json"
          }
        },
        "tags": [
          "text-independent"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TiProfileInfo"
            }
          },
          "default": {
            "description": "Failure",
            "schema": {
              "$ref": "#/definitions/SpeakerError"
            },
            "x-ms-error-response": true
          }
        }
      },
      "delete": {
        "description": "Deletes an existing profile.",
        "operationId": "TextIndependent_DeleteProfile",
        "summary": "Delete Profile",
        "x-ms-examples": {
          "Successful Query": {
            "$ref": "./examples/deleteProfile.json"
          }
        },
        "tags": [
          "text-independent"
        ],
        "responses": {
          "204": {
            "description": "OK"
          },
          "default": {
            "description": "Failure",
            "schema": {
              "$ref": "#/definitions/SpeakerError"
            },
            "x-ms-error-response": true
          }
        }
      }
    },
    "/text-independent/profiles/{profileId}:reset": {
      "parameters": [
        {
          "$ref": "#/parameters/apiVersionParam"
        },
        {
          "$ref": "#/parameters/profileIdParam"
        }
      ],
      "post": {
        "description": "Resets existing profile to its original creation state. The reset operation does the following:\n* Updates enrollmentStatus to Enrolling.\n* Updates lastUpdatedDateTime.\n* Updates enrollmentsCount to 0.\n* Updates enrollmentsLength to 0.\n* Updates enrollmentsSpeechLength to 0.\n* Updates remainingEnrollmentsSpeechLength to the required number.\n* Removes all associated enrollments from storage.\n* Removes chosen passphrase association.\n* Resets value of modelVersion.",
        "operationId": "TextIndependent_ResetProfile",
        "summary": "Reset Profile",
        "x-ms-examples": {
          "Successful Query": {
            "$ref": "./examples/TextIndependentResetProfile.json"
          }
        },
        "tags": [
          "text-independent"
        ],
        "responses": {
          "200": {
            "description": "Speaker profile reset successfully. Profile is returned with reset vaules.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "url location of the resource"
              }
            },
            "schema": {
              "$ref": "#/definitions/TiProfileInfo"
            }
          },
          "default": {
            "description": "Failure",
            "schema": {
              "$ref": "#/definitions/SpeakerError"
            },
            "x-ms-error-response": true
          }
        }
      }
    },
    "/text-independent/profiles/{profileId}/enrollments": {
      "parameters": [
        {
          "$ref": "#/parameters/apiVersionParam"
        },
        {
          "$ref": "#/parameters/profileIdParam"
        }
      ],
      "post": {
        "description": "Adds an enrollment to existing profile.\nThe first enrollment must be a predefined activation phrase which can be listed using the /phrases/{locale} api.\nIf the minimum number of requested enrollment audios is reached, a voice print is created.\nAny further enrollment will be used to improve the voice print.\n\nLimitations:\n* Minimum audio input length per request is **1 second**\n* Maximum audio input length per request is **120 seconds**\n* Minimum total effective speech length (excluding silence and other non-speech frames) for creating a voiceprint is **20 seconds**\n  This limitation can be disabled by setting \"ignoreMinLength\" to **true**.\n\n* Maximum total audio input length allowed for creating a voiceprint is **300 seconds**\n* Minimum audio Signal-to-noise ratio (SNR) is **2dB**",
        "operationId": "TextIndependent_CreateEnrollment",
        "summary": "Enroll Profile",
        "x-ms-examples": {
          "Successful Query": {
            "$ref": "./examples/textIndependentCreateEnrollment.json"
          }
        },
        "tags": [
          "text-independent"
        ],
        "consumes": [
          "audio/wav; codecs=audio/pcm"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "ignoreMinLength",
            "type": "boolean",
            "description": "If true, a voice print will be created immediately for this profile regardless of how much speech is supplied or stored. Default is false.",
            "default": false
          },
          {
            "name": "audioData",
            "in": "body",
            "description": "Binary audio file. Supported formats are audio/wav; codecs=audio/pcm. Supports audio up to 5MB.",
            "required": true,
            "schema": {
              "type": "object",
              "format": "file"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/TiEnrollmentInfo"
            }
          },
          "default": {
            "description": "Failure",
            "schema": {
              "$ref": "#/definitions/SpeakerError"
            },
            "x-ms-error-response": true
          }
        }
      }
    },
    "/text-independent/profiles/{profileId}:verify": {
      "parameters": [
        {
          "$ref": "#/parameters/apiVersionParam"
        },
        {
          "$ref": "#/parameters/profileIdParam"
        }
      ],
      "post": {
        "description": "Verifies existing profiles against input audio.\n\nLimitations:\n* Minimum audio input length is **1 second**\n* Maximum audio input length is **120 seconds**\n* Minimum effective speech length (excluding silence and other \"non-speech\" frames) is **4 seconds**\n  This limitation can be disabled by setting \"ignoreMinLength\" to **true**.\n* Minimum audio Signal-to-noise ratio (SNR) is **2dB**",
        "operationId": "TextIndependent_VerifyProfile",
        "summary": "Verify Profile",
        "x-ms-examples": {
          "Successful Query": {
            "$ref": "./examples/verify.json"
          }
        },
        "tags": [
          "text-independent"
        ],
        "consumes": [
          "audio/wav; codecs=audio/pcm"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "ignoreMinLength",
            "type": "boolean",
            "description": "If true, a voice print will be created immediately for this profile regardless of how much speech is supplied or stored. Default is false.",
            "default": false
          },
          {
            "name": "audioData",
            "in": "body",
            "description": "Binary audio file. Supported formats are audio/wav; codecs=audio/pcm. Supports audio up to 5MB.",
            "required": true,
            "schema": {
              "type": "object",
              "format": "file"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RecognitionInfo"
            }
          },
          "default": {
            "description": "Failure",
            "schema": {
              "$ref": "#/definitions/SpeakerError"
            },
            "x-ms-error-response": true
          }
        }
      }
    },
    "/text-independent/phrases/{locale}": {
      "parameters": [
        {
          "$ref": "#/parameters/apiVersionParam"
        },
        {
          "$ref": "#/parameters/localeParam"
        }
      ],
      "get": {
        "description": "Retrieves list of supported passphrases for a specific locale.",
        "operationId": "TextIndependent_ActivationPhrase",
        "summary": "Pass Phrases",
        "x-ms-examples": {
          "Successful Query": {
            "$ref": "./examples/activationPhrases.json"
          }
        },
        "tags": [
          "text-independent"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ActivationPhraseInfo"
            }
          },
          "default": {
            "description": "Failure",
            "schema": {
              "$ref": "#/definitions/SpeakerError"
            },
            "x-ms-error-response": true
          }
        }
      }
    }
  },
  "tags": []
}