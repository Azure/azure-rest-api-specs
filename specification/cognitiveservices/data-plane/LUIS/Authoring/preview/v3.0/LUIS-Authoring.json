{
  "swagger": "2.0",
  "info": {
    "title": "LUIS Authoring Client",
    "version": "3.0-preview"
  },
  "x-ms-parameterized-host": {
    "hostTemplate": "{Endpoint}/luis/authoring/v3.0-preview",
    "useSchemePrefix": false,
    "parameters": [
      {
        "$ref": "#/parameters/Endpoint"
      }
    ]
  },
  "securityDefinitions": {
    "apiKeyHeader": {
      "type": "apiKey",
      "name": "Ocp-Apim-Subscription-Key",
      "in": "header"
    }
  },
  "security": [
    {
      "apiKeyHeader": []
    }
  ],
  "paths": {
    "/apps/{appId}/versions/{versionId}/phraselists": {
      "post": {
        "description": "Creates a new phraselist feature in a version of the application.",
        "operationId": "Features_AddPhraseList",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "name": "phraselistCreateObject",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PhraselistCreateObject"
            },
            "description": "A Phraselist object containing Name, comma-separated Phrases and the isExchangeable boolean. Default value for isExchangeable is true."
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "The ID of the created feature.",
            "schema": {
              "$ref": "#/definitions/FeatureIDResponse"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Successful Create Phraselist Feature request": {
            "$ref": "./examples/features/SuccessfulCreatePhraselistFeatureRequest.json"
          }
        }
      },
      "get": {
        "description": "Gets all the phraselist features in a version of the application.",
        "operationId": "Features_ListPhraseLists",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "$ref": "#/parameters/SkipInPath"
          },
          {
            "$ref": "#/parameters/TakeInPath"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of all phraselist features.",
            "schema": {
              "$ref": "#/definitions/PhraseListFeatureInfoList"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Successful Get Application Version Phraselist Features request": {
            "$ref": "./examples/features/SuccessfulGetApplicationVersionPhraselistFeaturesRequest.json"
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/features": {
      "get": {
        "description": "Gets all the extraction phraselist and pattern features in a version of the application.",
        "operationId": "Features_List",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "$ref": "#/parameters/SkipInPath"
          },
          {
            "$ref": "#/parameters/TakeInPath"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of all phraselist features and a list of all pattern features.",
            "schema": {
              "$ref": "#/definitions/FeaturesResponseObject"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Successful Get Application Version Features request": {
            "$ref": "./examples/features/SuccessfulGetApplicationVersionFeaturesRequest.json"
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/phraselists/{phraselistId}": {
      "get": {
        "description": "Gets phraselist feature info in a version of the application.",
        "operationId": "Features_GetPhraseList",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "name": "phraselistId",
            "in": "path",
            "description": "The ID of the feature to be retrieved.",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "A phraselist feature info.",
            "schema": {
              "$ref": "#/definitions/PhraseListFeatureInfo"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Successful Get Phraselist Feature Info request": {
            "$ref": "./examples/features/SuccessfulGetPhraselistFeatureInfoRequest.json"
          }
        }
      },
      "put": {
        "description": "Updates the phrases, the state and the name of the phraselist feature in a version of the application.",
        "operationId": "Features_UpdatePhraseList",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "name": "phraselistId",
            "in": "path",
            "description": "The ID of the feature to be updated.",
            "required": true,
            "type": "integer"
          },
          {
            "name": "phraselistUpdateObject",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/PhraselistUpdateObject"
            },
            "description": "The new values for: - Just a boolean called IsActive, in which case the status of the feature will be changed. - Name, Pattern, Mode, and a boolean called IsActive to update the feature."
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successfully updated phraselist.",
            "schema": {
              "$ref": "#/definitions/OperationStatus"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Successful Update Phraselist Feature Info request": {
            "$ref": "./examples/features/SuccessfulUpdatePhraselistFeatureInfoRequest.json"
          }
        }
      },
      "delete": {
        "description": "Deletes a phraselist feature from a version of the application.",
        "operationId": "Features_DeletePhraseList",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "name": "phraselistId",
            "in": "path",
            "description": "The ID of the feature to be deleted.",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted phraselist.",
            "schema": {
              "$ref": "#/definitions/OperationStatus"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Successful Delete Phraselist Feature Info request": {
            "$ref": "./examples/features/SuccessfulDeletePhraselistFeatureInfoRequest.json"
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/example": {
      "post": {
        "description": "Adds a labeled example utterance in a version of the application.",
        "operationId": "Examples_Add",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "$ref": "#/parameters/EnableNestedChildren"
          },
          {
            "name": "exampleLabelObject",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ExampleLabelObject"
            },
            "description": "A labeled example utterance with the expected intent and entities."
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "The ID of the created example utterance.",
            "schema": {
              "$ref": "#/definitions/LabelExampleResponse"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Successful Add Label request": {
            "$ref": "./examples/examples/SuccessfulAddLabelRequest.json"
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/examples": {
      "post": {
        "description": "Adds a batch of labeled example utterances to a version of the application.",
        "operationId": "Examples_Batch",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "$ref": "#/parameters/EnableNestedChildren"
          },
          {
            "name": "exampleLabelObjectArray",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ExampleLabelObjectArray"
            },
            "description": "Array of example utterances."
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "A string array determining which labeled example utterances were added successfully.",
            "schema": {
              "$ref": "#/definitions/BatchLabelExampleResponse"
            }
          },
          "207": {
            "description": "Indicates that the request was partially successful. The response contains a string array indicating the status of each of the added labeled example utterances.",
            "schema": {
              "$ref": "#/definitions/BatchLabelExampleResponse"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Successful Batch Add Labels request": {
            "$ref": "./examples/examples/SuccessfulBatchAddLabelsRequest.json"
          }
        }
      },
      "get": {
        "description": "Returns example utterances to be reviewed from a version of the application.",
        "operationId": "Examples_List",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "$ref": "#/parameters/SkipInPath"
          },
          {
            "$ref": "#/parameters/TakeInPath"
          },
          {
            "$ref": "#/parameters/EnableNestedChildren"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of predictions and label pairs for every example utterance in the application.",
            "schema": {
              "$ref": "#/definitions/LabeledUtterances"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Successful Review Labeled Examples request": {
            "$ref": "./examples/examples/SuccessfulReviewLabeledExamplesRequest.json"
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/examples/{exampleId}": {
      "delete": {
        "description": "Deletes the labeled example utterances with the specified ID from a version of the application.",
        "operationId": "Examples_Delete",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "name": "exampleId",
            "in": "path",
            "description": "The example ID.",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted example utterance.",
            "schema": {
              "$ref": "#/definitions/OperationStatus"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Successful Delete Example Label request": {
            "$ref": "./examples/examples/SuccessfulDeleteExampleLabelRequest.json"
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/intents": {
      "post": {
        "description": "Adds an intent to a version of the application.",
        "operationId": "Model_AddIntent",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "name": "intentCreateObject",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ModelCreateObject"
            },
            "description": "A model object containing the name of the new intent."
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "The ID of the created intent model.",
            "x-nullable": false,
            "schema": {
              "$ref": "#/definitions/GuidResponse"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Successful Create Intent Classifier request": {
            "$ref": "./examples/model/SuccessfulCreateIntentClassifierRequest.json"
          }
        }
      },
      "get": {
        "description": "Gets information about the intent models in a version of the application.",
        "operationId": "Model_ListIntents",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "$ref": "#/parameters/SkipInPath"
          },
          {
            "$ref": "#/parameters/TakeInPath"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of intent model infos.",
            "schema": {
              "$ref": "#/definitions/IntentClassifiersList"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Successful Get Application Version Intent Infos request": {
            "$ref": "./examples/model/SuccessfulGetApplicationVersionIntentInfosRequest.json"
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/entities": {
      "post": {
        "description": "Adds an entity extractor to a version of the application.",
        "operationId": "Model_AddEntity",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "name": "entityModelCreateObject",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EntityModelCreateObject"
            },
            "description": "A model object containing the name of the new entity extractor and its children."
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "The ID of the created model.",
            "x-nullable": false,
            "schema": {
              "$ref": "#/definitions/GuidResponse"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Successful Create Entity Extractor request": {
            "$ref": "./examples/model/SuccessfulCreateEntityExtractorRequest.json"
          }
        }
      },
      "get": {
        "description": "Gets information about all the simple entity models in a version of the application.",
        "operationId": "Model_ListEntities",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "$ref": "#/parameters/SkipInPath"
          },
          {
            "$ref": "#/parameters/TakeInPath"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of entity model infos.",
            "schema": {
              "$ref": "#/definitions/NDepthEntityExtractorsList"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Successful Get Application Version Entity Infos request": {
            "$ref": "./examples/model/SuccessfulGetApplicationVersionEntityInfosRequest.json"
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/hierarchicalentities": {
      "get": {
        "description": "Gets information about all the hierarchical entity models in a version of the application.",
        "operationId": "Model_ListHierarchicalEntities",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "$ref": "#/parameters/SkipInPath"
          },
          {
            "$ref": "#/parameters/TakeInPath"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of hierarchical entity model infos.",
            "schema": {
              "$ref": "#/definitions/HierarchicalEntityExtractorsList"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Successful Get Application Version Hierarchical Entity Infos request": {
            "$ref": "./examples/model/SuccessfulGetApplicationVersionHierarchicalEntityInfosRequest.json"
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/compositeentities": {
      "get": {
        "description": "Gets information about all the composite entity models in a version of the application.",
        "operationId": "Model_ListCompositeEntities",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "$ref": "#/parameters/SkipInPath"
          },
          {
            "$ref": "#/parameters/TakeInPath"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of composite entity model infos.",
            "schema": {
              "$ref": "#/definitions/CompositeEntityExtractorsList"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Successful Get Application Version Composite Entity Infos request": {
            "$ref": "./examples/model/SuccessfulGetApplicationVersionCompositeEntityInfosRequest.json"
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/closedlists": {
      "get": {
        "description": "Gets information about all the list entity models in a version of the application.",
        "operationId": "Model_ListClosedLists",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "$ref": "#/parameters/SkipInPath"
          },
          {
            "$ref": "#/parameters/TakeInPath"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of list entity model infos.",
            "schema": {
              "$ref": "#/definitions/ClosedListEntityExtractorsList"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Successful Get Application Version Closed List Infos request": {
            "$ref": "./examples/model/SuccessfulGetApplicationVersionClosedListInfosRequest.json"
          }
        }
      },
      "post": {
        "description": "Adds a list entity model to a version of the application.",
        "operationId": "Model_AddClosedList",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "name": "closedListModelCreateObject",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ClosedListModelCreateObject"
            },
            "description": "A model containing the name and words for the new list entity extractor."
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "The ID of the created model.",
            "x-nullable": false,
            "schema": {
              "$ref": "#/definitions/GuidResponse"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Successful Create Closed List Entity Model request": {
            "$ref": "./examples/model/SuccessfulCreateClosedListEntityModelRequest.json"
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/prebuilts": {
      "post": {
        "description": "Adds a list of prebuilt entities to a version of the application.",
        "operationId": "Model_AddPrebuilt",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "name": "prebuiltExtractorNames",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PrebuiltExtractorNames"
            },
            "description": "An array of prebuilt entity extractor names."
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "An array of the created prebuilt extractor infos.",
            "schema": {
              "$ref": "#/definitions/PrebuiltEntityExtractorsList"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Successful Add Application Version Prebuilt Infos request": {
            "$ref": "./examples/model/SuccessfulAddApplicationVersionPrebuiltInfosRequest.json"
          }
        }
      },
      "get": {
        "description": "Gets information about all the prebuilt entities in a version of the application.",
        "operationId": "Model_ListPrebuilts",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "$ref": "#/parameters/SkipInPath"
          },
          {
            "$ref": "#/parameters/TakeInPath"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of prebuilt entity models infos.",
            "schema": {
              "$ref": "#/definitions/PrebuiltEntityExtractorsList"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Successful Get Application Version Prebuilt Infos request": {
            "$ref": "./examples/model/SuccessfulGetApplicationVersionPrebuiltInfosRequest.json"
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/listprebuilts": {
      "get": {
        "description": "Gets all the available prebuilt entities in a version of the application.",
        "operationId": "Model_ListPrebuiltEntities",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of the possible prebuilt entity extractors.",
            "schema": {
              "$ref": "#/definitions/AvailablePrebuiltEntityModels"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Successful Get Available Prebuilt Entity Extractors request": {
            "$ref": "./examples/model/SuccessfulGetAvailablePrebuiltEntityExtractorsRequest.json"
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/models": {
      "get": {
        "description": "Gets information about all the intent and entity models in a version of the application.",
        "operationId": "Model_ListModels",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "$ref": "#/parameters/SkipInPath"
          },
          {
            "$ref": "#/parameters/TakeInPath"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of application model infos.",
            "schema": {
              "$ref": "#/definitions/ModelsInfoResponseObject"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Successful Get Application Version Model Infos request": {
            "$ref": "./examples/model/SuccessfulGetApplicationVersionModelInfosRequest.json"
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/models/{modelId}/examples": {
      "get": {
        "description": "Gets the example utterances for the given intent or entity model in a version of the application.",
        "operationId": "Model_Examples",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "name": "modelId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID (GUID) of the model.",
            "x-ms-parameter-location": "method"
          },
          {
            "$ref": "#/parameters/SkipInPath"
          },
          {
            "$ref": "#/parameters/TakeInPath"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of example utterances for the model.",
            "schema": {
              "$ref": "#/definitions/ExamplesPerModelResponseObject"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Successful Get Examples Per Model Request": {
            "$ref": "./examples/model/SuccessfulGetExamplesPerModelRequest.json"
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/intents/{intentId}": {
      "get": {
        "description": "Gets information about the intent model in a version of the application.",
        "operationId": "Model_GetIntent",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "$ref": "#/parameters/IntentIdInPath"
          }
        ],
        "responses": {
          "200": {
            "description": "An intent model info.",
            "schema": {
              "$ref": "#/definitions/IntentClassifier"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Successful Get Intent Info request": {
            "$ref": "./examples/model/SuccessfulGetIntentInfoRequest.json"
          }
        }
      },
      "put": {
        "description": "Updates the name of an intent in a version of the application.",
        "operationId": "Model_UpdateIntent",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "$ref": "#/parameters/IntentIdInPath"
          },
          {
            "name": "modelUpdateObject",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ModelUpdateObject"
            },
            "description": "A model object containing the new intent name."
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation.",
            "schema": {
              "$ref": "#/definitions/OperationStatus"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Successful Rename Intent Model request": {
            "$ref": "./examples/model/SuccessfulRenameIntentModelRequest.json"
          }
        }
      },
      "delete": {
        "description": "Deletes an intent from a version of the application.",
        "operationId": "Model_DeleteIntent",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "$ref": "#/parameters/IntentIdInPath"
          },
          {
            "name": "deleteUtterances",
            "in": "query",
            "type": "boolean",
            "description": "If true, deletes the intent's example utterances. If false, moves the example utterances to the None intent. The default value is false.",
            "default": false
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation.",
            "schema": {
              "$ref": "#/definitions/OperationStatus"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Successful Delete Intent Model request": {
            "$ref": "./examples/model/SuccessfulDeleteIntentModelRequest.json"
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/entities/{entityId}": {
      "get": {
        "description": "Gets information about an entity model in a version of the application.",
        "operationId": "Model_GetEntity",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "name": "entityId",
            "in": "path",
            "description": "The entity extractor ID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "An entity model info.",
            "schema": {
              "$ref": "#/definitions/NDepthEntityExtractor"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Successful Get Entity Info request": {
            "$ref": "./examples/model/SuccessfulGetEntityInfoRequest.json"
          }
        }
      },
      "delete": {
        "description": "Deletes an entity or a child from a version of the application.",
        "operationId": "Model_DeleteEntity",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "name": "entityId",
            "in": "path",
            "description": "The entity extractor or the child entity extractor ID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted entity.",
            "schema": {
              "$ref": "#/definitions/OperationStatus"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Successful Delete Entity Info request": {
            "$ref": "./examples/model/SuccessfulDeleteEntityExtractorRequest.json"
          }
        }
      },
      "patch": {
        "description": "Updates the name of an entity extractor or the name and instanceOf model of a child entity extractor.",
        "operationId": "Model_UpdateEntityChild",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "name": "entityId",
            "in": "path",
            "description": "The entity extractor or the child entity extractor ID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "entityModelUpdateObject",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EntityModelUpdateObject"
            },
            "description": "A model object containing the name new entity extractor or the name and instance of model of a child entity extractor "
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation.",
            "schema": {
              "$ref": "#/definitions/OperationStatus"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Successful Update Entity Extractor request": {
            "$ref": "./examples/model/SuccessfulUpdateEntityExtractorRequest.json"
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/intents/{intentId}/features": {
      "post": {
        "description": "Adds a new feature relation to be used by the intent in a version of the application.",
        "operationId": "Features_AddIntentFeature",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "$ref": "#/parameters/IntentIdInPath"
          },
          {
            "name": "featureRelationCreateObject",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ModelFeatureInformation"
            },
            "description": "A Feature relation information object."
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation.",
            "schema": {
              "$ref": "#/definitions/OperationStatus"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Successful Add Feature Relation request": {
            "$ref": "./examples/model/SuccessfulAddIntentFeatureRelationRequest.json"
          }
        }
      },
      "get": {
        "description": "Gets the information of the features used by the intent in a version of the application.",
        "operationId": "Model_GetIntentFeatures",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "$ref": "#/parameters/IntentIdInPath"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of feature information objects for the intent.",
            "schema": {
              "$ref": "#/definitions/FeaturesPerModelResponseObject"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Successful Get Features information request": {
            "$ref": "./examples/model/SuccessfulGetIntentFeaturesInfoRequest.json"
          }
        }
      },
      "put": {
        "description": "Updates the information of the features used by the intent in a version of the application.",
        "operationId": "Model_ReplaceIntentFeatures",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "$ref": "#/parameters/IntentIdInPath"
          },
          {
            "name": "featureRelationsUpdateObject",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FeaturesPerModelResponseObject"
            },
            "description": "A list of feature information objects containing the new feature relations."
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation.",
            "schema": {
              "$ref": "#/definitions/OperationStatus"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Successful Replace Features request": {
            "$ref": "./examples/model/SuccessfulReplaceIntentFeaturesRequest.json"
          }
        }
      },
      "delete": {
        "description": "Deletes a relation from the feature relations used by the intent in a version of the application.",
        "operationId": "Model_DeleteIntentFeature",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "$ref": "#/parameters/IntentIdInPath"
          },
          {
            "name": "featureRelationDeleteObject",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ModelFeatureInformation"
            },
            "description": "A feature information object containing the feature relation to delete."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation.",
            "schema": {
              "$ref": "#/definitions/OperationStatus"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Successful Delete feature relation request": {
            "$ref": "./examples/model/SuccessfulDeleteIntentFeatureRelationRequest.json"
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/entities/{entityId}/features": {
      "post": {
        "description": "Adds a new feature relation to be used by the entity in a version of the application.",
        "operationId": "Features_AddEntityFeature",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "$ref": "#/parameters/EntityIdInPath"
          },
          {
            "name": "featureRelationCreateObject",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ModelFeatureInformation"
            },
            "description": "A Feature relation information object."
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation.",
            "schema": {
              "$ref": "#/definitions/OperationStatus"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Successful Add Feature Relation request": {
            "$ref": "./examples/model/SuccessfulAddEntityFeatureRelationRequest.json"
          }
        }
      },
      "get": {
        "description": "Gets the information of the features used by the entity in a version of the application.",
        "operationId": "Model_GetEntityFeatures",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "$ref": "#/parameters/EntityIdInPath"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of feature information objects for the entity.",
            "schema": {
              "$ref": "#/definitions/FeaturesPerModelResponseObject"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Successful Get Features information request": {
            "$ref": "./examples/model/SuccessfulGetEntityFeaturesInfoRequest.json"
          }
        }
      },
      "put": {
        "description": "Updates the information of the features used by the entity in a version of the application.",
        "operationId": "Model_ReplaceEntityFeatures",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "$ref": "#/parameters/EntityIdInPath"
          },
          {
            "name": "featureRelationsUpdateObject",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FeaturesPerModelResponseObject"
            },
            "description": "A list of feature information objects containing the new feature relations."
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation.",
            "schema": {
              "$ref": "#/definitions/OperationStatus"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Successful Replace Features request": {
            "$ref": "./examples/model/SuccessfulReplaceEntityFeaturesRequest.json"
          }
        }
      },
      "delete": {
        "description": "Deletes a relation from the feature relations used by the entity in a version of the application.",
        "operationId": "Model_DeleteEntityFeature",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "$ref": "#/parameters/EntityIdInPath"
          },
          {
            "name": "featureRelationDeleteObject",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ModelFeatureInformation"
            },
            "description": "A feature information object containing the feature relation to delete."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation.",
            "schema": {
              "$ref": "#/definitions/OperationStatus"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Successful Delete feature relation request": {
            "$ref": "./examples/model/SuccessfulDeleteEntityFeatureRelationRequest.json"
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/hierarchicalentities/{hEntityId}": {
      "get": {
        "description": "Gets information about a hierarchical entity in a version of the application.",
        "operationId": "Model_GetHierarchicalEntity",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "$ref": "#/parameters/HEntityIdInPath"
          }
        ],
        "responses": {
          "200": {
            "description": "A hierarchical entity model info.",
            "schema": {
              "$ref": "#/definitions/HierarchicalEntityExtractor"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Successful Get Hierarchical Entity Info request": {
            "$ref": "./examples/model/SuccessfulGetHierarchicalEntityInfoRequest.json"
          }
        }
      },
      "patch": {
        "description": "Updates the name of a hierarchical entity model in a version of the application.",
        "operationId": "Model_UpdateHierarchicalEntity",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "$ref": "#/parameters/HEntityIdInPath"
          },
          {
            "name": "modelUpdateObject",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ModelUpdateObject"
            },
            "description": "Model containing names of the hierarchical entity."
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation.",
            "schema": {
              "$ref": "#/definitions/OperationStatus"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Successful Get Hierarchical Entity Info request": {
            "$ref": "./examples/model/SuccessfulUpdateHierarchicalEntityModelRequest.json"
          }
        }
      },
      "delete": {
        "description": "Deletes a hierarchical entity from a version of the application.",
        "operationId": "Model_DeleteHierarchicalEntity",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "$ref": "#/parameters/HEntityIdInPath"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted entity.",
            "schema": {
              "$ref": "#/definitions/OperationStatus"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Successful Delete Hierarchical Entity Model request": {
            "$ref": "./examples/model/SuccessfulDeleteHierarchicalEntityModelRequest.json"
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/compositeentities/{cEntityId}": {
      "get": {
        "description": "Gets information about a composite entity in a version of the application.",
        "operationId": "Model_GetCompositeEntity",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "$ref": "#/parameters/CEntityIdInPath"
          }
        ],
        "responses": {
          "200": {
            "description": "The composite entity model info.",
            "schema": {
              "$ref": "#/definitions/CompositeEntityExtractor"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Successful Get Composite Entity Info request": {
            "$ref": "./examples/model/SuccessfulGetCompositeEntityInfoRequest.json"
          }
        }
      },
      "put": {
        "description": "Updates a composite entity in a version of the application.",
        "operationId": "Model_UpdateCompositeEntity",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "$ref": "#/parameters/CEntityIdInPath"
          },
          {
            "name": "compositeModelUpdateObject",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CompositeEntityModel"
            },
            "description": "A model object containing the new entity extractor name and children."
          }
        ],
        "consumes": [
          "application/json"
        ],
        "x-ms-examples": {
          "Successful Update Composite Entity Extractor request": {
            "$ref": "./examples/model/SuccessfulUpdateCompositeEntityModelRequest.json"
          }
        },
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successfully updated composite entity.",
            "schema": {
              "$ref": "#/definitions/OperationStatus"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "Deletes a composite entity from a version of the application.",
        "operationId": "Model_DeleteCompositeEntity",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "$ref": "#/parameters/CEntityIdInPath"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted composite entity.",
            "schema": {
              "$ref": "#/definitions/OperationStatus"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Successful Delete Entity Info request": {
            "$ref": "./examples/model/SuccessfulDeleteCompositeEntityModelRequest.json"
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/closedlists/{clEntityId}": {
      "get": {
        "description": "Gets information about a list entity in a version of the application.",
        "operationId": "Model_GetClosedList",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "name": "clEntityId",
            "in": "path",
            "description": "The list model ID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "The list model info.",
            "schema": {
              "$ref": "#/definitions/ClosedListEntityExtractor"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Successful Get Closed List Entity Info request": {
            "$ref": "./examples/model/SuccessfulGetClosedListEntityInfoRequest.json"
          }
        }
      },
      "put": {
        "description": "Updates the list entity in a version of the application.",
        "operationId": "Model_UpdateClosedList",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "name": "clEntityId",
            "in": "path",
            "description": "The list model ID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "closedListModelUpdateObject",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ClosedListModelUpdateObject"
            },
            "description": "The new list entity name and words list."
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successfully updated list entity name and words list.",
            "schema": {
              "$ref": "#/definitions/OperationStatus"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Successful Update Closed List Entity Info request": {
            "$ref": "./examples/model/SuccessfulUpdateClosedListEntityModelRequest.json"
          }
        }
      },
      "patch": {
        "description": "Adds a batch of sublists to an existing list entity in a version of the application.",
        "operationId": "Model_PatchClosedList",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "name": "clEntityId",
            "in": "path",
            "description": "The list entity model ID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "closedListModelPatchObject",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ClosedListModelPatchObject"
            },
            "description": "A words list batch."
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successfully added sublists to the list entity.",
            "schema": {
              "$ref": "#/definitions/OperationStatus"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Successful Add SubLists to Closed List Entity request": {
            "$ref": "./examples/model/SuccessfulPatchClosedListEntityModelRequest.json"
          }
        }
      },
      "delete": {
        "description": "Deletes a list entity model from a version of the application.",
        "operationId": "Model_DeleteClosedList",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "name": "clEntityId",
            "in": "path",
            "description": "The list entity model ID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully delete list entity from a version of application.",
            "schema": {
              "$ref": "#/definitions/OperationStatus"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Successful Delete Closed List Entity Info request": {
            "$ref": "./examples/model/SuccessfulDeleteClosedListEntityModelRequest.json"
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/prebuilts/{prebuiltId}": {
      "get": {
        "description": "Gets information about a prebuilt entity model in a version of the application.",
        "operationId": "Model_GetPrebuilt",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "name": "prebuiltId",
            "in": "path",
            "description": "The prebuilt entity extractor ID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "A prebuilt entity models info.",
            "schema": {
              "$ref": "#/definitions/PrebuiltEntityExtractor"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Successful Get Prebuilt Info request": {
            "$ref": "./examples/model/SuccessfulGetPrebuiltInfoRequest.json"
          }
        }
      },
      "delete": {
        "description": "Deletes a prebuilt entity extractor from a version of the application.",
        "operationId": "Model_DeletePrebuilt",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "name": "prebuiltId",
            "in": "path",
            "description": "The prebuilt entity extractor ID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation.",
            "schema": {
              "$ref": "#/definitions/OperationStatus"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Successful Get Prebuilt Info request": {
            "$ref": "./examples/model/SuccessfulDeletePrebuiltEntityRequest.json"
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/closedlists/{clEntityId}/sublists/{subListId}": {
      "delete": {
        "description": "Deletes a sublist of a specific list entity model from a version of the application.",
        "operationId": "Model_DeleteSubList",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "name": "clEntityId",
            "in": "path",
            "description": "The list entity extractor ID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "subListId",
            "in": "path",
            "description": "The sublist ID.",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted sublist.",
            "schema": {
              "$ref": "#/definitions/OperationStatus"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Successful Delete Sublist request": {
            "$ref": "./examples/model/SuccessfulDeleteSublistRequest.json"
          }
        }
      },
      "put": {
        "description": "Updates one of the list entity's sublists in a version of the application.",
        "operationId": "Model_UpdateSubList",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "name": "clEntityId",
            "in": "path",
            "description": "The list entity extractor ID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "subListId",
            "in": "path",
            "description": "The sublist ID.",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "wordListBaseUpdateObject",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WordListBaseUpdateObject"
            },
            "description": "A sublist update object containing the new canonical form and the list of words."
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successfully updated sublist.",
            "schema": {
              "$ref": "#/definitions/OperationStatus"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Successful Update Sublist request": {
            "$ref": "./examples/model/SuccessfulUpdateSublistRequest.json"
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/intents/{intentId}/suggest": {
      "get": {
        "description": "Suggests example utterances that would improve the accuracy of the intent model in a version of the application.",
        "operationId": "Model_ListIntentSuggestions",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "$ref": "#/parameters/IntentIdInPath"
          },
          {
            "$ref": "#/parameters/TakeInPath"
          },
          {
            "$ref": "#/parameters/EnableNestedChildren"
          }
        ],
        "responses": {
          "200": {
            "description": "If there's no trained intent model, nothing is returned in the response. If there's a trained model and active learning finds any relevant queries, they are returned with the intent model predictions. If there's a trained model but active learning didn't find any relevant queries, an empty list is returned in the response.",
            "schema": {
              "$ref": "#/definitions/IntentsSuggestionExamples"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Successful Get Intents Suggestion Examples": {
            "$ref": "./examples/model/SuccessfulGetIntentsSuggestionExamples.json"
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/entities/{entityId}/suggest": {
      "get": {
        "description": "Get suggested example utterances that would improve the accuracy of the entity model in a version of the application.",
        "operationId": "Model_ListEntitySuggestions",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "name": "entityId",
            "in": "path",
            "description": "The target entity extractor model to enhance.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "$ref": "#/parameters/TakeInPath"
          },
          {
            "$ref": "#/parameters/EnableNestedChildren"
          }
        ],
        "responses": {
          "200": {
            "description": "If there's no trained entity model, nothing is returned in the response. If there's a trained model and active learning finds any relevant queries, they are returned with the entity model predictions. If there's a trained model but active learning didn't find any relevant queries, an empty list is returned in the response.",
            "schema": {
              "$ref": "#/definitions/EntitiesSuggestionExamples"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Successful Get Entity Suggestion Examples": {
            "$ref": "./examples/model/SuccessfulGetEntitySuggestionExamples.json"
          }
        }
      }
    },
    "/apps/": {
      "post": {
        "description": "Creates a new LUIS app.",
        "operationId": "Apps_Add",
        "parameters": [
          {
            "name": "applicationCreateObject",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ApplicationCreateObject"
            },
            "description": "An application containing Name, Description (optional), Culture, Usage Scenario (optional), Domain (optional) and initial version ID (optional) of the application. Default value for the version ID is \"0.1\". Note: the culture cannot be changed after the app is created."
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "The ID of the created application.",
            "x-nullable": false,
            "schema": {
              "$ref": "#/definitions/GuidResponse"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Successful Application Creation": {
            "$ref": "./examples/apps/SuccessfulAddApplicationRequest.json"
          }
        }
      },
      "get": {
        "description": "Lists all of the user's applications.",
        "operationId": "Apps_List",
        "parameters": [
          {
            "$ref": "#/parameters/SkipInPath"
          },
          {
            "$ref": "#/parameters/TakeInPath"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of the user applications.",
            "schema": {
              "$ref": "#/definitions/ApplicationsInfoList"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Successful Get Applications List request": {
            "$ref": "./examples/apps/SuccessfulGetApplicationsListRequest.json"
          }
        }
      }
    },
    "/apps/import": {
      "post": {
        "description": "Imports an application to LUIS, the application's structure is included in the request body.",
        "operationId": "Apps_Import",
        "parameters": [
          {
            "name": "appName",
            "in": "query",
            "description": "The application name to create. If not specified, the application name will be read from the imported object. If the application name already exists, an error is returned.",
            "type": "string"
          },
          {
            "name": "luisApp",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LuisApp"
            },
            "description": "A LUIS application structure."
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "The ID of the imported application.",
            "x-nullable": false,
            "schema": {
              "$ref": "#/definitions/GuidResponse"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Successful Import Application": {
            "$ref": "./examples/apps/SuccessfulImportApplicationRequest.json"
          }
        }
      }
    },
    "/apps/assistants": {
      "get": {
        "description": "Gets the endpoint URLs for the prebuilt Cortana applications.",
        "operationId": "Apps_ListCortanaEndpoints",
        "responses": {
          "200": {
            "description": "A personal assistant apps JSON object containing the endpoint URLs for Cortana applications and the user's endpoint keys.",
            "schema": {
              "$ref": "#/definitions/PersonalAssistantsResponse"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Successful Get Personal Assistant Applications": {
            "$ref": "./examples/apps/SuccessfulGetPersonalAssistantApplications.json"
          }
        }
      }
    },
    "/apps/domains": {
      "get": {
        "description": "Gets the available application domains.",
        "operationId": "Apps_ListDomains",
        "responses": {
          "200": {
            "description": "A list object containing the available application domains.",
            "schema": {
              "$ref": "#/definitions/AvailableDomains"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Successful Get Application Domains request": {
            "$ref": "./examples/apps/SuccessfulGetApplicationDomainsRequest.json"
          }
        }
      }
    },
    "/apps/usagescenarios": {
      "get": {
        "description": "Gets the application available usage scenarios.",
        "operationId": "Apps_ListUsageScenarios",
        "responses": {
          "200": {
            "description": "A list object containing the available application usage scenarios.",
            "schema": {
              "$ref": "#/definitions/ApplicationUsageScenarios"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Successful Get Application Usage Scenarios request": {
            "$ref": "./examples/apps/SuccessfulGetApplicationUsageScenariosListRequest.json"
          }
        }
      }
    },
    "/apps/cultures": {
      "get": {
        "description": "Gets a list of supported cultures. Cultures are equivalent to the written language and locale. For example,\"en-us\" represents the U.S. variation of English.",
        "operationId": "Apps_ListSupportedCultures",
        "responses": {
          "200": {
            "description": "A list object containing the supported application cultures.",
            "schema": {
              "$ref": "#/definitions/AvailableCultures"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Successful Get Application Cultures request": {
            "$ref": "./examples/apps/SuccessfulGetApplicationCulturesRequest.json"
          }
        }
      }
    },
    "/apps/{appId}/querylogs": {
      "get": {
        "description": "Gets the logs of the past month's endpoint queries for the application.",
        "operationId": "Apps_DownloadQueryLogs",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          }
        ],
        "responses": {
          "200": {
            "description": "A CSV file containing the query logs for the past month.",
            "schema": {
              "type": "object",
              "format": "file",
              "description": "The query logs of an application for the past month in CSV format."
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/octet-stream"
        ],
        "x-ms-examples": {
          "Successful Download Application Query logs request": {
            "$ref": "./examples/apps/SuccessfulDownloadApplicationQueryLogsRequest.json"
          }
        }
      }
    },
    "/apps/{appId}": {
      "get": {
        "description": "Gets the application info.",
        "operationId": "Apps_Get",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          }
        ],
        "responses": {
          "200": {
            "description": "The application info.",
            "schema": {
              "$ref": "#/definitions/ApplicationInfoResponse"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Successful Get Application Info request": {
            "$ref": "./examples/apps/SuccessfulGetApplicationInfoRequest.json"
          }
        }
      },
      "put": {
        "description": "Updates the name or description of the application.",
        "operationId": "Apps_Update",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "name": "applicationUpdateObject",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ApplicationUpdateObject"
            },
            "description": "A model containing Name and Description of the application."
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successfully updated application name and description.",
            "schema": {
              "$ref": "#/definitions/OperationStatus"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Successful Rename Application request": {
            "$ref": "./examples/apps/SuccessfulRenameApplicationRequest.json"
          }
        }
      },
      "delete": {
        "description": "Deletes an application.",
        "operationId": "Apps_Delete",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/ForcePath"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted application.",
            "schema": {
              "$ref": "#/definitions/OperationStatus"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Successful Rename Application request": {
            "$ref": "./examples/apps/SuccessfulDeleteApplicationRequest.json"
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/clone": {
      "post": {
        "description": "Creates a new version from the selected version.",
        "operationId": "Versions_Clone",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "name": "versionCloneObject",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TaskUpdateObject"
            },
            "description": "A model containing the new version ID."
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "The new version ID.",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Successful Clone Application Version request": {
            "$ref": "./examples/versions/SuccessfulCloneApplicatioVersionRequest.json"
          }
        }
      }
    },
    "/apps/{appId}/publish": {
      "post": {
        "description": "Publishes a specific version of the application.",
        "operationId": "Apps_Publish",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "name": "applicationPublishObject",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ApplicationPublishObject"
            },
            "description": "The application publish object. The region is the target region that the application is published to."
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "An object containing the application endpoint URL, its assigned endpoint key and publishing status.",
            "schema": {
              "$ref": "#/definitions/ProductionOrStagingEndpointInfo"
            }
          },
          "207": {
            "description": "An object containing the application endpoint URL, its assigned endpoint key and publishing status in case that publishing one or more regions failed.",
            "schema": {
              "$ref": "#/definitions/ProductionOrStagingEndpointInfo"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Successful Publish Application request": {
            "$ref": "./examples/apps/SuccessfulPublishApplicationRequest.json"
          }
        }
      }
    },
    "/apps/{appId}/versions": {
      "get": {
        "description": "Gets a list of versions for this application ID.",
        "operationId": "Versions_List",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/SkipInPath"
          },
          {
            "$ref": "#/parameters/TakeInPath"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of all versions of the application.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/VersionInfo"
              }
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Successful Get Application Versions info request": {
            "$ref": "./examples/versions/SuccessfulGetApplicationVersionsInfoRequest.json"
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/": {
      "get": {
        "description": "Gets the version information such as date created, last modified date, endpoint URL, count of intents and entities, training and publishing status.",
        "operationId": "Versions_Get",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          }
        ],
        "responses": {
          "200": {
            "description": "A model containing the version info.",
            "schema": {
              "$ref": "#/definitions/VersionInfo"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Successful Get Application Version info request": {
            "$ref": "./examples/versions/SuccessfulGetApplicationVersionInfoRequest.json"
          }
        }
      },
      "put": {
        "description": "Updates the name or description of the application version.",
        "operationId": "Versions_Update",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "name": "versionUpdateObject",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TaskUpdateObject"
            },
            "description": "A model containing Name and Description of the application."
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation.",
            "schema": {
              "$ref": "#/definitions/OperationStatus"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Successful Rename Application Version request": {
            "$ref": "./examples/versions/SuccessfulRenameApplicationVersionRequest.json"
          }
        }
      },
      "delete": {
        "description": "Deletes an application version.",
        "operationId": "Versions_Delete",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation.",
            "schema": {
              "$ref": "#/definitions/OperationStatus"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Successful Delete Application Version request": {
            "$ref": "./examples/versions/SuccessfulDeleteApplicationVersionRequest.json"
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/export": {
      "get": {
        "description": "Exports a LUIS application to JSON format.",
        "operationId": "Versions_Export",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/LuisApp"
            },
            "description": "The LUIS application structure in JSON format."
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Successful Export Application Version": {
            "$ref": "./examples/versions/SuccessfulExportApplicationVersionRequest.json"
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/train": {
      "post": {
        "description": "Sends a training request for a version of a specified LUIS app. This POST request initiates a request asynchronously. To determine whether the training request is successful, submit a GET request to get training status. Note: The application version is not fully trained unless all the models (intents and entities) are trained successfully or are up to date. To verify training success, get the training status at least once after training is complete.",
        "operationId": "Train_TrainVersion",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          }
        ],
        "responses": {
          "202": {
            "description": "This response indicates the initial training status.",
            "schema": {
              "$ref": "#/definitions/EnqueueTrainingResponse"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Successful Train Application Version request": {
            "$ref": "./examples/train/SuccessfulTrainApplicationVersionRequest.json"
          }
        }
      },
      "get": {
        "description": "Gets the training status of all models (intents and entities) for the specified LUIS app. You must call the train API to train the LUIS app before you call this API to get training status. \"appID\" specifies the LUIS app ID. \"versionId\" specifies the version number of the LUIS app. For example, \"0.1\".",
        "operationId": "Train_GetStatus",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response provides an array of training status details for a LUIS app that you submitted for training. Each element in the response array provides training status for a model (intent or entity) in the LUIS app. Note: Training status is not provided for prebuilt entities because they are pretrained. The \"modelId\" property identifies which intent or entity the training status corresponds to. To get the name and type of each model, use the models API which has a request URL in this format: https://westus.api.cognitive.microsoft.com/luis/api/v3.0-preview/apps/{appId}/versions/{versionId}/models The details property for each model can contain the following fields: \"statusId\": An integer from 0 to 3 that corresponds to the value of the status field. \"status\": A string with one of the following values: \"Success\", \"UpToDate\", \"InProgress\", \"Fail\". If the status is \"Fail\", the \"failureReason\" property provides the reason for failure. \"exampleCount\": The number of examples used for training. In the case of the None intent or prebuilt domain intents and entities, this number includes example provided internally by the system as well as examples you added to your LUIS app. \"failureReason\": A string that indicates the reason training failed.  The value \"FewLabels\" means that no labeled example utterances were provided for training. \"trainingDateTime\": A string indicating the time the model was last trained. The value uses the ISO 8601 format for representing times in UTC (Coordinated Universal Time) with a UTC designator (\"Z\"), for example: \"2017-08-10T01:08:34Z\".",
            "schema": {
              "$ref": "#/definitions/ModelTrainingInfoList"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json",
          "JSON"
        ],
        "x-ms-examples": {
          "Successful Get Application Version Training Status request": {
            "$ref": "./examples/train/SuccessfulGetApplicationVersionTrainingStatusRequest.json"
          }
        }
      }
    },
    "/apps/{appId}/versions/import": {
      "post": {
        "description": "Imports a new version into a LUIS application.",
        "operationId": "Versions_Import",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "name": "versionId",
            "in": "query",
            "description": "The new versionId to import. If not specified, the versionId will be read from the imported object.",
            "type": "string"
          },
          {
            "name": "luisApp",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LuisApp"
            },
            "description": "A LUIS application structure."
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "The created application version.",
            "schema": {
              "$ref": "#/definitions/VersionResponse"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Successful Import Application": {
            "$ref": "./examples/versions/SuccessfulImportApplicationVersionRequest.json"
          }
        }
      }
    },
    "/apps/{appId}/settings": {
      "get": {
        "description": "Get the application settings including 'UseAllTrainingData'.",
        "operationId": "Apps_GetSettings",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          }
        ],
        "responses": {
          "200": {
            "description": "The application settings.",
            "schema": {
              "$ref": "#/definitions/ApplicationSettings"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Successful Get Application Settings request": {
            "$ref": "./examples/apps/SuccessfulGetApplicationSettingsRequest.json"
          }
        }
      },
      "put": {
        "description": "Updates the application settings including 'UseAllTrainingData'.",
        "operationId": "Apps_UpdateSettings",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "name": "applicationSettingUpdateObject",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ApplicationSettingUpdateObject"
            },
            "description": "An object containing the new application settings."
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successfully updated application settings.",
            "schema": {
              "$ref": "#/definitions/OperationStatus"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Successful Update Application Settings request": {
            "$ref": "./examples/apps/SuccessfulUpdateApplicationSettingsRequest.json"
          }
        }
      }
    },
    "/apps/{appId}/publishsettings": {
      "get": {
        "description": "Get the application publish settings including 'UseAllTrainingData'.",
        "operationId": "Apps_GetPublishSettings",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          }
        ],
        "responses": {
          "200": {
            "description": "The application publish settings.",
            "schema": {
              "$ref": "#/definitions/PublishSettings"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Successful Get Publish Settings request": {
            "$ref": "./examples/apps/SuccessfulGetPublishSettingsRequest.json"
          }
        }
      },
      "put": {
        "description": "Updates the application publish settings including 'UseAllTrainingData'.",
        "operationId": "Apps_UpdatePublishSettings",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "name": "publishSettingUpdateObject",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PublishSettingUpdateObject"
            },
            "description": "An object containing the new publish application settings."
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successfully updated application settings.",
            "schema": {
              "$ref": "#/definitions/OperationStatus"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Successful Update Publish Settings request": {
            "$ref": "./examples/apps/SuccessfulUpdatePublishSettingsRequest.json"
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/suggest": {
      "delete": {
        "description": "Deleted an unlabelled utterance in a version of the application.",
        "operationId": "Versions_DeleteUnlabelledUtterance",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "name": "utterance",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The utterance text to delete."
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation.",
            "schema": {
              "$ref": "#/definitions/OperationStatus"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Successful Delete Unlabelled Utterance": {
            "$ref": "./examples/versions/SuccessfulDeleteUnlabelledUtteranceRequest.json"
          }
        }
      }
    },
    "/apps/{appId}/endpoints": {
      "get": {
        "description": "Returns the available endpoint deployment regions and URLs.",
        "operationId": "Apps_ListEndpoints",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a list of endpoints regions and their corresponding endpoint URL.",
            "schema": {
              "$ref": "#/definitions/AvailableEndpoints"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Successful Get Endpoints request": {
            "$ref": "./examples/apps/SuccessfulGetEndpointsRequest.json"
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/closedlists/{clEntityId}/sublists": {
      "post": {
        "description": "Adds a sublist to an existing list entity in a version of the application.",
        "operationId": "Model_AddSubList",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "name": "clEntityId",
            "in": "path",
            "description": "The list entity extractor ID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "wordListCreateObject",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WordListObject"
            },
            "description": "Words list."
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "The ID of the newly created sublist.",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Successful Add Sublist request": {
            "$ref": "./examples/model/SuccessfulAddSublistToClosedListEntityModelRequest.json"
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/customprebuiltdomains": {
      "post": {
        "description": "Adds a customizable prebuilt domain along with all of its intent and entity models in a version of the application.",
        "operationId": "Model_AddCustomPrebuiltDomain",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "name": "prebuiltDomainObject",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PrebuiltDomainCreateBaseObject"
            },
            "description": "A prebuilt domain create object containing the name of the domain."
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "An array of the created customizable prebuilt domain intent and entity model Ids.",
            "schema": {
              "$ref": "#/definitions/GuidList"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Successful Add Custom Prebuilt Domain to Application request": {
            "$ref": "./examples/model/SuccessfulAddCustomPrebuildDomainToApplicationRequest.json"
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/customprebuiltintents": {
      "post": {
        "description": "Adds a customizable prebuilt intent model to a version of the application.",
        "operationId": "Model_AddCustomPrebuiltIntent",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "name": "prebuiltDomainModelCreateObject",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PrebuiltDomainModelCreateObject"
            },
            "description": "A model object containing the name of the customizable prebuilt intent and the name of the domain to which this model belongs."
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "The ID of the created intent model.",
            "x-nullable": false,
            "schema": {
              "$ref": "#/definitions/GuidResponse"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Successful Add Custom Prebuilt Intent request": {
            "$ref": "./examples/model/SuccessfulAddCustomPrebuildIntentRequest.json"
          }
        }
      },
      "get": {
        "description": "Gets information about customizable prebuilt intents added to a version of the application.",
        "operationId": "Model_ListCustomPrebuiltIntents",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a list of all customizable prebuilt intents and their representations in a version of the application.",
            "schema": {
              "$ref": "#/definitions/IntentClassifiersList"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Successful Get Custom Prebuilt Intent request": {
            "$ref": "./examples/model/SuccessfulGetCustomPrebuildIntentRequest.json"
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/customprebuiltentities": {
      "post": {
        "description": "Adds a prebuilt entity model to a version of the application.",
        "operationId": "Model_AddCustomPrebuiltEntity",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "name": "prebuiltDomainModelCreateObject",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PrebuiltDomainModelCreateObject"
            },
            "description": "A model object containing the name of the prebuilt entity and the name of the domain to which this model belongs."
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "The ID of the created prebuilt model.",
            "x-nullable": false,
            "schema": {
              "$ref": "#/definitions/GuidResponse"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Successful Add Custom Prebuilt Entity request": {
            "$ref": "./examples/model/SuccessfulAddCustomPrebuiltEntityRequest.json"
          }
        }
      },
      "get": {
        "description": "Gets all prebuilt entities used in a version of the application.",
        "operationId": "Model_ListCustomPrebuiltEntities",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a list of all prebuilt entities and their representations.",
            "schema": {
              "$ref": "#/definitions/EntityExtractorsList"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Successful Get Custom Prebuilt Domain Entities request": {
            "$ref": "./examples/model/SuccessfulGetCustomPrebuiltDomainEntitiesRequest.json"
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/customprebuiltmodels": {
      "get": {
        "description": "Gets all prebuilt intent and entity model information used in a version of this application.",
        "operationId": "Model_ListCustomPrebuiltModels",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a list of all prebuilt models and their representations.",
            "schema": {
              "$ref": "#/definitions/CustomPrebuiltModelList"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Successful Get Custom Prebuilt Domain Models request": {
            "$ref": "./examples/model/SuccessfulGetCustomPrebuiltDomainModelsRequest.json"
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/customprebuiltdomains/{domainName}": {
      "delete": {
        "description": "Deletes a prebuilt domain's models in a version of the application.",
        "operationId": "Model_DeleteCustomPrebuiltDomain",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "name": "domainName",
            "in": "path",
            "description": "Domain name.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation.",
            "schema": {
              "$ref": "#/definitions/OperationStatus"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Successful Delete Prebuilt Domain from Application request": {
            "$ref": "./examples/model/SuccessfulDeletePrebuiltDomainFromApplicationRequest.json"
          }
        }
      }
    },
    "/apps/customprebuiltdomains": {
      "get": {
        "description": "Gets all the available custom prebuilt domains for all cultures.",
        "operationId": "Apps_ListAvailableCustomPrebuiltDomains",
        "responses": {
          "200": {
            "description": "Returns a list of all custom prebuilt domains and their intents/entities representation.",
            "schema": {
              "$ref": "#/definitions/PrebuiltDomainsList"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Successful Get Available Custom Prebuilt Domains request": {
            "$ref": "./examples/apps/SuccessfulGetAvailableCustomPrebuiltDomainsRequest.json"
          }
        }
      },
      "post": {
        "description": "Adds a prebuilt domain along with its intent and entity models as a new application.",
        "operationId": "Apps_AddCustomPrebuiltDomain",
        "parameters": [
          {
            "name": "prebuiltDomainCreateObject",
            "in": "body",
            "required": true,
            "description": "A prebuilt domain create object containing the name and culture of the domain.",
            "schema": {
              "$ref": "#/definitions/PrebuiltDomainCreateObject"
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "The ID of the created application.",
            "x-nullable": false,
            "schema": {
              "$ref": "#/definitions/GuidResponse"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Successful Add Custom Prebuilt Application request": {
            "$ref": "./examples/apps/SuccessfulAddCustomPrebuiltApplicationRequest.json"
          }
        }
      }
    },
    "/apps/customprebuiltdomains/{culture}": {
      "get": {
        "description": "Gets all the available prebuilt domains for a specific culture.",
        "operationId": "Apps_ListAvailableCustomPrebuiltDomainsForCulture",
        "parameters": [
          {
            "name": "culture",
            "in": "path",
            "description": "Culture.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a list of all domains and their intents and entities for a specific culture.",
            "schema": {
              "$ref": "#/definitions/PrebuiltDomainsList"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Successful Get AvailableCustomPrebuiltDomainsForCulture request": {
            "$ref": "./examples/apps/SuccessfulGetAvailableCustomPrebuiltDomainsForCultureRequest.json"
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/entities/{entityId}/children": {
      "post": {
        "description": "Creates a single child in an existing entity model hierarchy in a version of the application.",
        "operationId": "Model_AddEntityChild",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "name": "entityId",
            "in": "path",
            "description": "The entity extractor ID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "childEntityModelCreateObject",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ChildEntityModelCreateObject"
            },
            "description": "A model object containing the name of the new child model and its children."
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "The ID of the created model.",
            "x-nullable": false,
            "schema": {
              "$ref": "#/definitions/GuidResponse"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Successful Create Entity Child Model request": {
            "$ref": "./examples/model/SuccessfulCreateEntityChildModelRequest.json"
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/hierarchicalentities/{hEntityId}/children/{hChildId}": {
      "get": {
        "description": "Gets information about the child's model contained in an hierarchical entity child model in a version of the application.",
        "operationId": "Model_GetHierarchicalEntityChild",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "$ref": "#/parameters/HEntityIdInPath"
          },
          {
            "name": "hChildId",
            "in": "path",
            "description": "The hierarchical entity extractor child ID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "The hierarchical entity child model info.",
            "schema": {
              "$ref": "#/definitions/HierarchicalChildEntity"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Successful Get Hierarchical Entity Child Info request": {
            "$ref": "./examples/model/SuccessfulGetHierarchicalChildEntityInfoRequest.json"
          }
        }
      },
      "patch": {
        "description": "Renames a single child in an existing hierarchical entity model in a version of the application.",
        "operationId": "Model_UpdateHierarchicalEntityChild",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "$ref": "#/parameters/HEntityIdInPath"
          },
          {
            "name": "hChildId",
            "in": "path",
            "required": true,
            "description": "The hierarchical entity extractor child ID.",
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "hierarchicalChildModelUpdateObject",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                }
              }
            },
            "description": "Model object containing new name of the hierarchical entity child."
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successfully updated entity child.",
            "schema": {
              "$ref": "#/definitions/OperationStatus"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Successful Update Hierarchical Entity Child Model request": {
            "$ref": "./examples/model/SuccessfulUpdateHierarchicalChildModelRequest.json"
          }
        }
      },
      "delete": {
        "description": "Deletes a hierarchical entity extractor child in a version of the application.",
        "operationId": "Model_DeleteHierarchicalEntityChild",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "$ref": "#/parameters/HEntityIdInPath"
          },
          {
            "name": "hChildId",
            "in": "path",
            "description": "The hierarchical entity extractor child ID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted entity.",
            "schema": {
              "$ref": "#/definitions/OperationStatus"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Successful Delete Hierarchical Entity Child Model request": {
            "$ref": "./examples/model/SuccessfulDeleteHierarchicalChildModelRequest.json"
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/compositeentities/{cEntityId}/children": {
      "post": {
        "description": "Creates a single child in an existing composite entity model in a version of the application.",
        "operationId": "Model_AddCompositeEntityChild",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "$ref": "#/parameters/CEntityIdInPath"
          },
          {
            "name": "compositeChildModelCreateObject",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                }
              }
            },
            "description": "A model object containing the name of the new composite child model."
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "The ID of the created model.",
            "x-nullable": false,
            "schema": {
              "$ref": "#/definitions/GuidResponse"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Successful Create Composite Entity Child Model request": {
            "$ref": "./examples/model/SuccessfulCreateCompositeChildModelRequest.json"
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/compositeentities/{cEntityId}/children/{cChildId}": {
      "delete": {
        "description": "Deletes a composite entity extractor child from a version of the application.",
        "operationId": "Model_DeleteCompositeEntityChild",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "$ref": "#/parameters/CEntityIdInPath"
          },
          {
            "name": "cChildId",
            "in": "path",
            "description": "The hierarchical entity extractor child ID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted entity.",
            "schema": {
              "$ref": "#/definitions/OperationStatus"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Successful Delete Composite Entity Child Model request": {
            "$ref": "./examples/model/SuccessfulDeleteCompositeChildModelRequest.json"
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/regexentities": {
      "get": {
        "summary": "Gets information about the regular expression entity models in a version of the application.",
        "operationId": "Model_ListRegexEntityInfos",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "$ref": "#/parameters/SkipInPath"
          },
          {
            "$ref": "#/parameters/TakeInPath"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of regular expression entity model infos.",
            "schema": {
              "$ref": "#/definitions/RegexEntityExtractorList"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Successful Get Regex Entity Models request": {
            "$ref": "./examples/model/SuccessfulGetApplicationVersionRegexEntityInfosRequest.json"
          }
        }
      },
      "post": {
        "summary": "Adds a regular expression entity model to a version of the application.",
        "operationId": "Model_CreateRegexEntityModel",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "name": "regexEntityExtractorCreateObj",
            "in": "body",
            "description": "A model object containing the name and regex pattern for the new regular expression entity extractor.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RegexModelCreateObject"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "The ID of the created model.",
            "x-nullable": false,
            "schema": {
              "$ref": "#/definitions/GuidResponse"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Successful Create Regex Entity Model request": {
            "$ref": "./examples/model/SuccessfulCreateRegexEntityExtractorRequest.json"
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/patternanyentities": {
      "get": {
        "summary": "Get information about the Pattern.Any entity models in a version of the application.",
        "operationId": "Model_ListPatternAnyEntityInfos",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "$ref": "#/parameters/SkipInPath"
          },
          {
            "$ref": "#/parameters/TakeInPath"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of Pattern.Any entity model infos.",
            "schema": {
              "$ref": "#/definitions/PatternAnyEntityExtractorList"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Successful Create Regex Entity Model request": {
            "$ref": "./examples/model/SuccessfulGetApplicationVersionPatternAnyEntityInfosRequest.json"
          }
        }
      },
      "post": {
        "summary": "Adds a pattern.any entity extractor to a version of the application.",
        "operationId": "Model_CreatePatternAnyEntityModel",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "name": "extractorCreateObject",
            "in": "body",
            "description": "A model object containing the name and explicit list for the new Pattern.Any entity extractor.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PatternAnyModelCreateObject"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "The ID of the created Pattern.Any entity model.",
            "x-nullable": false,
            "schema": {
              "$ref": "#/definitions/GuidResponse"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Successful Create Regex Entity Model request": {
            "$ref": "./examples/model/SuccessfulCreatePatternAnyEntityExtractorRequest.json"
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/entities/{entityId}/roles": {
      "get": {
        "summary": "Get all roles for an entity in a version of the application",
        "operationId": "Model_ListEntityRoles",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "name": "entityId",
            "in": "path",
            "description": "entity Id",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of the entity roles",
            "schema": {
              "$ref": "#/definitions/EntityRoleList"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Successful Get Entity Roles request": {
            "$ref": "./examples/model/SuccessfulGetEntityRolesRequest.json"
          }
        }
      },
      "post": {
        "summary": "Create an entity role in a version of the application.",
        "operationId": "Model_CreateEntityRole",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "name": "entityId",
            "in": "path",
            "description": "The entity model ID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "entityRoleCreateObject",
            "in": "body",
            "description": "An entity role object containing the name of role.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EntityRoleCreateObject"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "The ID of the created entity role",
            "x-nullable": false,
            "schema": {
              "$ref": "#/definitions/GuidResponse"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Successful Create Entity Role request": {
            "$ref": "./examples/model/SuccessfulCreateEntityRoleRequest.json"
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/prebuilts/{entityId}/roles": {
      "get": {
        "summary": "Get a prebuilt entity's roles in a version of the application.",
        "operationId": "Model_ListPrebuiltEntityRoles",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "name": "entityId",
            "in": "path",
            "description": "entity Id",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of the entity roles",
            "schema": {
              "$ref": "#/definitions/EntityRoleList"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Successful Get Prebuilt Entity Roles request": {
            "$ref": "./examples/model/SuccessfulGetPrebuiltEntityRolesRequest.json"
          }
        }
      },
      "post": {
        "summary": "Create a role for a prebuilt entity in a version of the application.",
        "operationId": "Model_CreatePrebuiltEntityRole",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "name": "entityId",
            "in": "path",
            "description": "The entity model ID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "entityRoleCreateObject",
            "in": "body",
            "description": "An entity role object containing the name of role.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EntityRoleCreateObject"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "The ID of the created entity role",
            "x-nullable": false,
            "schema": {
              "$ref": "#/definitions/GuidResponse"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Successful Create Prebuilt Entity Role request": {
            "$ref": "./examples/model/SuccessfulCreatePrebuiltEntityRoleRequest.json"
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/closedlists/{entityId}/roles": {
      "get": {
        "summary": "Get all roles for a list entity in a version of the application.",
        "operationId": "Model_ListClosedListEntityRoles",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "name": "entityId",
            "in": "path",
            "description": "entity Id",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of the entity roles",
            "schema": {
              "$ref": "#/definitions/EntityRoleList"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Successful Get Closed List Entity Roles request": {
            "$ref": "./examples/model/SuccessfulGetClosedListEntityRolesRequest.json"
          }
        }
      },
      "post": {
        "summary": "Create a role for a list entity in a version of the application.",
        "operationId": "Model_CreateClosedListEntityRole",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "name": "entityId",
            "in": "path",
            "description": "The entity model ID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "entityRoleCreateObject",
            "in": "body",
            "description": "An entity role object containing the name of role.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EntityRoleCreateObject"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "The ID of the created entity role",
            "x-nullable": false,
            "schema": {
              "$ref": "#/definitions/GuidResponse"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Successful Create Closed List Entity Role request": {
            "$ref": "./examples/model/SuccessfulCreateClosedListEntityRoleRequest.json"
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/regexentities/{entityId}/roles": {
      "get": {
        "summary": "Get all roles for a regular expression entity in a version of the application.",
        "operationId": "Model_ListRegexEntityRoles",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "name": "entityId",
            "in": "path",
            "description": "entity Id",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of the entity roles",
            "schema": {
              "$ref": "#/definitions/EntityRoleList"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Successful Get Regex Entity Roles request": {
            "$ref": "./examples/model/SuccessfulGetRegexEntityRolesRequest.json"
          }
        }
      },
      "post": {
        "summary": "Create a role for an regular expression entity in a version of the application.",
        "operationId": "Model_CreateRegexEntityRole",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "name": "entityId",
            "in": "path",
            "description": "The entity model ID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "entityRoleCreateObject",
            "in": "body",
            "description": "An entity role object containing the name of role.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EntityRoleCreateObject"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "The ID of the created entity role",
            "x-nullable": false,
            "schema": {
              "$ref": "#/definitions/GuidResponse"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Successful Create Regex Entity Role request": {
            "$ref": "./examples/model/SuccessfulCreateRegexEntityRoleRequest.json"
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/compositeentities/{cEntityId}/roles": {
      "get": {
        "summary": "Get all roles for a composite entity in a version of the application",
        "operationId": "Model_ListCompositeEntityRoles",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "$ref": "#/parameters/CEntityIdInPath"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of the entity roles",
            "schema": {
              "$ref": "#/definitions/EntityRoleList"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Successful Get Composite Entity Roles request": {
            "$ref": "./examples/model/SuccessfulGetCompositeEntityRolesRequest.json"
          }
        }
      },
      "post": {
        "summary": "Create a role for a composite entity in a version of the application.",
        "operationId": "Model_CreateCompositeEntityRole",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "$ref": "#/parameters/CEntityIdInPath"
          },
          {
            "name": "entityRoleCreateObject",
            "in": "body",
            "description": "An entity role object containing the name of role.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EntityRoleCreateObject"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "The ID of the created entity role",
            "x-nullable": false,
            "schema": {
              "$ref": "#/definitions/GuidResponse"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Successful Create Composite Entity Role request": {
            "$ref": "./examples/model/SuccessfulCreateCompositeEntityRoleRequest.json"
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/patternanyentities/{entityId}/roles": {
      "get": {
        "summary": "Get all roles for a Pattern.any entity in a version of the application",
        "operationId": "Model_ListPatternAnyEntityRoles",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "name": "entityId",
            "in": "path",
            "description": "entity Id",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of the entity roles",
            "schema": {
              "$ref": "#/definitions/EntityRoleList"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Successful Get Pattern.Any Entity Roles request": {
            "$ref": "./examples/model/SuccessfulGetPatternAnyEntityRolesRequest.json"
          }
        }
      },
      "post": {
        "summary": "Create a role for an Pattern.any entity in a version of the application.",
        "operationId": "Model_CreatePatternAnyEntityRole",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "name": "entityId",
            "in": "path",
            "description": "The entity model ID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "entityRoleCreateObject",
            "in": "body",
            "description": "An entity role object containing the name of role.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EntityRoleCreateObject"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "The ID of the created entity role",
            "x-nullable": false,
            "schema": {
              "$ref": "#/definitions/GuidResponse"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Successful Create Pattern.Any Entity Role request": {
            "$ref": "./examples/model/SuccessfulCreatePatternAnyEntityRoleRequest.json"
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/hierarchicalentities/{hEntityId}/roles": {
      "get": {
        "summary": "Get all roles for a hierarchical entity in a version of the application",
        "operationId": "Model_ListHierarchicalEntityRoles",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "$ref": "#/parameters/HEntityIdInPath"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of the entity roles",
            "schema": {
              "$ref": "#/definitions/EntityRoleList"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Successful Get Hierarchical Entity Roles request": {
            "$ref": "./examples/model/SuccessfulGetHierarchicalEntityRolesRequest.json"
          }
        }
      },
      "post": {
        "summary": "Create a role for an hierarchical entity in a version of the application.",
        "operationId": "Model_CreateHierarchicalEntityRole",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "$ref": "#/parameters/HEntityIdInPath"
          },
          {
            "name": "entityRoleCreateObject",
            "in": "body",
            "description": "An entity role object containing the name of role.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EntityRoleCreateObject"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "The ID of the created entity role",
            "x-nullable": false,
            "schema": {
              "$ref": "#/definitions/GuidResponse"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Successful Create Hierarchical Entity Role request": {
            "$ref": "./examples/model/SuccessfulCreateHierarchicalEntityRoleRequest.json"
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/customprebuiltentities/{entityId}/roles": {
      "get": {
        "summary": "Get all roles for a prebuilt entity in a version of the application",
        "operationId": "Model_ListCustomPrebuiltEntityRoles",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "name": "entityId",
            "in": "path",
            "description": "entity Id",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of the entity roles",
            "schema": {
              "$ref": "#/definitions/EntityRoleList"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Successful Get Custom Prebuilt Entity Roles request": {
            "$ref": "./examples/model/SuccessfulGetCustomPrebuiltEntityRolesRequest.json"
          }
        }
      },
      "post": {
        "summary": "Create a role for a prebuilt entity in a version of the application.",
        "operationId": "Model_CreateCustomPrebuiltEntityRole",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "name": "entityId",
            "in": "path",
            "description": "The entity model ID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "entityRoleCreateObject",
            "in": "body",
            "description": "An entity role object containing the name of role.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EntityRoleCreateObject"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "The ID of the created entity role",
            "x-nullable": false,
            "schema": {
              "$ref": "#/definitions/GuidResponse"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Successful Create Custom Prebuilt Entity Role request": {
            "$ref": "./examples/model/SuccessfulCreateCustomPrebuiltEntityRoleRequest.json"
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/patternanyentities/{entityId}/explicitlist": {
      "get": {
        "summary": "Get the explicit (exception) list of the pattern.any entity in a version of the application.",
        "operationId": "Model_GetExplicitList",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "name": "entityId",
            "in": "path",
            "description": "The Pattern.Any entity id.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of the explicit list items",
            "schema": {
              "$ref": "#/definitions/ExplicitListItemList"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Successful Get Explicit List request": {
            "$ref": "./examples/model/SuccessfulGetPatternAnyExplicitListRequest.json"
          }
        }
      },
      "post": {
        "summary": "Add a new exception to the explicit list for the Pattern.Any entity in a version of the application.",
        "operationId": "Model_AddExplicitListItem",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "name": "entityId",
            "in": "path",
            "description": "The Pattern.Any entity extractor ID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "item",
            "in": "body",
            "description": "The new explicit list item.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ExplicitListItemCreateObject"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "The ID of the created explicit list item.",
            "schema": {
              "$ref": "#/definitions/ExplicitListItemIDResponse"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Successful Create Custom Prebuilt Entity Role request": {
            "$ref": "./examples/model/SuccessfulCreatePatternAnyExplicitListRequest.json"
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/regexentities/{regexEntityId}": {
      "get": {
        "summary": "Gets information about a regular expression entity in a version of the application.",
        "operationId": "Model_GetRegexEntityEntityInfo",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "name": "regexEntityId",
            "in": "path",
            "description": "The regular expression entity model ID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "A regular expression entity model info.",
            "schema": {
              "$ref": "#/definitions/RegexEntityExtractor"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Successful Get Regex Entity request": {
            "$ref": "./examples/model/SuccessfulGetRegexEntityInfoRequest.json"
          }
        }
      },
      "put": {
        "summary": "Updates the regular expression entity in a version of the application.",
        "operationId": "Model_UpdateRegexEntityModel",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "name": "regexEntityId",
            "in": "path",
            "description": "The regular expression entity extractor ID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "regexEntityUpdateObject",
            "in": "body",
            "description": "An object containing the new entity name and regex pattern.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RegexModelUpdateObject"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully updated the regular expression entity extractor.",
            "schema": {
              "$ref": "#/definitions/OperationStatus"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Successful Update Regex Entity request": {
            "$ref": "./examples/model/SuccessfulUpdateRegexEntityModelRequest.json"
          }
        }
      },
      "delete": {
        "summary": "Deletes a regular expression entity from a version of the application.",
        "operationId": "Model_DeleteRegexEntityModel",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "name": "regexEntityId",
            "in": "path",
            "description": "The regular expression entity extractor ID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully operation.",
            "schema": {
              "$ref": "#/definitions/OperationStatus"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Successful Delete Regex Entity request": {
            "$ref": "./examples/model/SuccessfulDeleteRegexEntityRequest.json"
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/patternanyentities/{entityId}": {
      "get": {
        "summary": "Gets information about the Pattern.Any model in a version of the application.",
        "operationId": "Model_GetPatternAnyEntityInfo",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "name": "entityId",
            "in": "path",
            "description": "The entity extractor ID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "A regular expression entity model info.",
            "schema": {
              "$ref": "#/definitions/PatternAnyEntityExtractor"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Successful Get Pattern.Any Entity request": {
            "$ref": "./examples/model/SuccessfulGetPatternAnyEntityInfoRequest.json"
          }
        }
      },
      "put": {
        "summary": "Updates the name and explicit (exception) list of a Pattern.Any entity model in a version of the application.",
        "operationId": "Model_UpdatePatternAnyEntityModel",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "name": "entityId",
            "in": "path",
            "description": "The Pattern.Any entity extractor ID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "patternAnyUpdateObject",
            "in": "body",
            "description": "An object containing the explicit list of the Pattern.Any entity.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PatternAnyModelUpdateObject"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully updated the Pattern.Any entity extractor.",
            "schema": {
              "$ref": "#/definitions/OperationStatus"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Successful Update Pattern.Any Entity request": {
            "$ref": "./examples/model/SuccessfulUpdatePatternAnyEntityRequest.json"
          }
        }
      },
      "delete": {
        "summary": "Deletes a Pattern.Any entity extractor from a version of the application.",
        "operationId": "Model_DeletePatternAnyEntityModel",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "name": "entityId",
            "in": "path",
            "description": "The Pattern.Any entity extractor ID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully operation.",
            "schema": {
              "$ref": "#/definitions/OperationStatus"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Successful Delete Pattern.Any Entity request": {
            "$ref": "./examples/model/SuccessfulDeletePatternAnyEntityRequest.json"
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/entities/{entityId}/roles/{roleId}": {
      "get": {
        "summary": "Get one role for a given entity in a version of the application",
        "operationId": "Model_GetEntityRole",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "name": "entityId",
            "in": "path",
            "description": "entity ID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "roleId",
            "in": "path",
            "description": "entity role ID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "An entity role",
            "schema": {
              "$ref": "#/definitions/EntityRole"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Successful Get Entity Extractor Role request": {
            "$ref": "./examples/model/SuccessfulGetEntityRoleInfoRequest.json"
          }
        }
      },
      "put": {
        "summary": "Update a role for a given entity in a version of the application.",
        "operationId": "Model_UpdateEntityRole",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "name": "entityId",
            "in": "path",
            "description": "The entity ID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "roleId",
            "in": "path",
            "description": "The entity role ID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "entityRoleUpdateObject",
            "in": "body",
            "description": "The new entity role.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EntityRoleUpdateObject"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully updated the entity role.",
            "schema": {
              "$ref": "#/definitions/OperationStatus"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Successful Update Entity Extractor Role request": {
            "$ref": "./examples/model/SuccessfulUpdateEntityRoleRequest.json"
          }
        }
      },
      "delete": {
        "summary": "Delete an entity role in a version of the application.",
        "operationId": "Model_DeleteEntityRole",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "name": "entityId",
            "in": "path",
            "description": "The entity ID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "roleId",
            "in": "path",
            "description": "The entity role Id.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully operation.",
            "schema": {
              "$ref": "#/definitions/OperationStatus"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Successful Delete Entity Extractor Role request": {
            "$ref": "./examples/model/SuccessfulDeleteEntityRoleRequest.json"
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/prebuilts/{entityId}/roles/{roleId}": {
      "get": {
        "summary": "Get one role for a given prebuilt entity in a version of the application",
        "operationId": "Model_GetPrebuiltEntityRole",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "name": "entityId",
            "in": "path",
            "description": "entity ID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "roleId",
            "in": "path",
            "description": "entity role ID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "An entity role",
            "schema": {
              "$ref": "#/definitions/EntityRole"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Successful Get Prebuilt Entity Role request": {
            "$ref": "./examples/model/SuccessfulGetPrebuiltEntityRoleInfoRequest.json"
          }
        }
      },
      "put": {
        "summary": "Update a role for a given prebuilt entity in a version of the application",
        "operationId": "Model_UpdatePrebuiltEntityRole",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "name": "entityId",
            "in": "path",
            "description": "The entity ID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "roleId",
            "in": "path",
            "description": "The entity role ID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "entityRoleUpdateObject",
            "in": "body",
            "description": "The new entity role.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EntityRoleUpdateObject"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully updated the entity role.",
            "schema": {
              "$ref": "#/definitions/OperationStatus"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Successful Update Prebuilt Entity Extractor Role request": {
            "$ref": "./examples/model/SuccessfulUpdatePrebuiltEntityRoleRequest.json"
          }
        }
      },
      "delete": {
        "summary": "Delete a role in a prebuilt entity in a version of the application.",
        "operationId": "Model_DeletePrebuiltEntityRole",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "name": "entityId",
            "in": "path",
            "description": "The entity ID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "roleId",
            "in": "path",
            "description": "The entity role Id.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully operation.",
            "schema": {
              "$ref": "#/definitions/OperationStatus"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Successful Delete Prebuilt Entity Role request": {
            "$ref": "./examples/model/SuccessfulDeletePrebuiltEntityRoleRequest.json"
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/closedlists/{entityId}/roles/{roleId}": {
      "get": {
        "summary": "Get one role for a given list entity in a version of the application.",
        "operationId": "Model_GetClosedListEntityRole",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "name": "entityId",
            "in": "path",
            "description": "entity ID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "roleId",
            "in": "path",
            "description": "entity role ID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "An entity role",
            "schema": {
              "$ref": "#/definitions/EntityRole"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Successful Get Closed List Entity Role request": {
            "$ref": "./examples/model/SuccessfulGetClosedListEntityRoleInfoRequest.json"
          }
        }
      },
      "put": {
        "summary": "Update a role for a given list entity in a version of the application.",
        "operationId": "Model_UpdateClosedListEntityRole",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "name": "entityId",
            "in": "path",
            "description": "The entity ID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "roleId",
            "in": "path",
            "description": "The entity role ID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "entityRoleUpdateObject",
            "in": "body",
            "description": "The new entity role.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EntityRoleUpdateObject"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully updated the entity role.",
            "schema": {
              "$ref": "#/definitions/OperationStatus"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Successful Update Closed List Entity Extractor Role request": {
            "$ref": "./examples/model/SuccessfulUpdateClosedListEntityRoleRequest.json"
          }
        }
      },
      "delete": {
        "summary": "Delete a role for a given list entity in a version of the application.",
        "operationId": "Model_DeleteClosedListEntityRole",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "name": "entityId",
            "in": "path",
            "description": "The entity ID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "roleId",
            "in": "path",
            "description": "The entity role Id.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully operation.",
            "schema": {
              "$ref": "#/definitions/OperationStatus"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Successful Delete Prebuilt Entity Role request": {
            "$ref": "./examples/model/SuccessfulDeletePrebuiltEntityRoleRequest.json"
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/regexentities/{entityId}/roles/{roleId}": {
      "get": {
        "summary": "Get one role for a given regular expression entity in a version of the application.",
        "operationId": "Model_GetRegexEntityRole",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "name": "entityId",
            "in": "path",
            "description": "entity ID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "roleId",
            "in": "path",
            "description": "entity role ID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "An entity role",
            "schema": {
              "$ref": "#/definitions/EntityRole"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Successful Get Regex Entity Role request": {
            "$ref": "./examples/model/SuccessfulGetRegexEntityRoleInfoRequest.json"
          }
        }
      },
      "put": {
        "summary": "Update a role for a given regular expression entity in a version of the application",
        "operationId": "Model_UpdateRegexEntityRole",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "name": "entityId",
            "in": "path",
            "description": "The entity ID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "roleId",
            "in": "path",
            "description": "The entity role ID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "entityRoleUpdateObject",
            "in": "body",
            "description": "The new entity role.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EntityRoleUpdateObject"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully updated the entity role.",
            "schema": {
              "$ref": "#/definitions/OperationStatus"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Successful Update Regex Entity Extractor Role request": {
            "$ref": "./examples/model/SuccessfulUpdateRegexEntityRoleRequest.json"
          }
        }
      },
      "delete": {
        "summary": "Delete a role for a given regular expression in a version of the application.",
        "operationId": "Model_DeleteRegexEntityRole",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "name": "entityId",
            "in": "path",
            "description": "The entity ID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "roleId",
            "in": "path",
            "description": "The entity role Id.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully operation.",
            "schema": {
              "$ref": "#/definitions/OperationStatus"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Successful Delete Regex Entity Role request": {
            "$ref": "./examples/model/SuccessfulDeleteRegexEntityRoleRequest.json"
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/compositeentities/{cEntityId}/roles/{roleId}": {
      "get": {
        "summary": "Get one role for a given composite entity in a version of the application",
        "operationId": "Model_GetCompositeEntityRole",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "$ref": "#/parameters/CEntityIdInPath"
          },
          {
            "name": "roleId",
            "in": "path",
            "description": "entity role ID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "An entity role",
            "schema": {
              "$ref": "#/definitions/EntityRole"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Successful Get Composite Entity Role request": {
            "$ref": "./examples/model/SuccessfulGetCompositeEntityRoleInfoRequest.json"
          }
        }
      },
      "put": {
        "summary": "Update a role for a given composite entity in a version of the application",
        "operationId": "Model_UpdateCompositeEntityRole",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "$ref": "#/parameters/CEntityIdInPath"
          },
          {
            "name": "roleId",
            "in": "path",
            "description": "The entity role ID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "entityRoleUpdateObject",
            "in": "body",
            "description": "The new entity role.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EntityRoleUpdateObject"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully updated the entity role.",
            "schema": {
              "$ref": "#/definitions/OperationStatus"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Successful Update Composite Entity Extractor Role request": {
            "$ref": "./examples/model/SuccessfulUpdateCompositeEntityRoleRequest.json"
          }
        }
      },
      "delete": {
        "summary": "Delete a role for a given composite entity in a version of the application.",
        "operationId": "Model_DeleteCompositeEntityRole",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "$ref": "#/parameters/CEntityIdInPath"
          },
          {
            "name": "roleId",
            "in": "path",
            "description": "The entity role Id.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully operation.",
            "schema": {
              "$ref": "#/definitions/OperationStatus"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Successful Delete Composite Entity Role request": {
            "$ref": "./examples/model/SuccessfulDeleteCompositeEntityRoleRequest.json"
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/patternanyentities/{entityId}/roles/{roleId}": {
      "get": {
        "summary": "Get one role for a given Pattern.any entity in a version of the application.",
        "operationId": "Model_GetPatternAnyEntityRole",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "name": "entityId",
            "in": "path",
            "description": "entity ID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "roleId",
            "in": "path",
            "description": "entity role ID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "An entity role",
            "schema": {
              "$ref": "#/definitions/EntityRole"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Successful Get Pattern.Any Entity Role request": {
            "$ref": "./examples/model/SuccessfulGetPatternAnyEntityRoleInfoRequest.json"
          }
        }
      },
      "put": {
        "summary": "Update a role for a given Pattern.any entity in a version of the application.",
        "operationId": "Model_UpdatePatternAnyEntityRole",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "name": "entityId",
            "in": "path",
            "description": "The entity ID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "roleId",
            "in": "path",
            "description": "The entity role ID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "entityRoleUpdateObject",
            "in": "body",
            "description": "The new entity role.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EntityRoleUpdateObject"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully updated the entity role.",
            "schema": {
              "$ref": "#/definitions/OperationStatus"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Successful Update Pattern.Any Entity Extractor Role request": {
            "$ref": "./examples/model/SuccessfulUpdatePatternAnyEntityRoleRequest.json"
          }
        }
      },
      "delete": {
        "summary": "Delete a role for a given Pattern.any entity in a version of the application.",
        "operationId": "Model_DeletePatternAnyEntityRole",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "name": "entityId",
            "in": "path",
            "description": "The entity ID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "roleId",
            "in": "path",
            "description": "The entity role Id.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully operation.",
            "schema": {
              "$ref": "#/definitions/OperationStatus"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Successful Delete Pattern.Any Entity Role request": {
            "$ref": "./examples/model/SuccessfulDeletePatternAnyEntityRoleRequest.json"
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/hierarchicalentities/{hEntityId}/roles/{roleId}": {
      "get": {
        "summary": "Get one role for a given hierarchical entity in a version of the application.",
        "operationId": "Model_GetHierarchicalEntityRole",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "$ref": "#/parameters/HEntityIdInPath"
          },
          {
            "name": "roleId",
            "in": "path",
            "description": "entity role ID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "An entity role",
            "schema": {
              "$ref": "#/definitions/EntityRole"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Successful Get Hierarchical Entity Role request": {
            "$ref": "./examples/model/SuccessfulGetHierarchicalEntityRoleInfoRequest.json"
          }
        }
      },
      "put": {
        "summary": "Update a role for a given hierarchical entity in a version of the application.",
        "operationId": "Model_UpdateHierarchicalEntityRole",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "$ref": "#/parameters/HEntityIdInPath"
          },
          {
            "name": "roleId",
            "in": "path",
            "description": "The entity role ID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "entityRoleUpdateObject",
            "in": "body",
            "description": "The new entity role.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EntityRoleUpdateObject"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully updated the entity role.",
            "schema": {
              "$ref": "#/definitions/OperationStatus"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Successful Update Hierarchical Entity Extractor Role request": {
            "$ref": "./examples/model/SuccessfulUpdateHierarchicalEntityRoleRequest.json"
          }
        }
      },
      "delete": {
        "summary": "Delete a role for a given hierarchical role in a version of the application.",
        "operationId": "Model_DeleteHierarchicalEntityRole",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "$ref": "#/parameters/HEntityIdInPath"
          },
          {
            "name": "roleId",
            "in": "path",
            "description": "The entity role Id.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully operation.",
            "schema": {
              "$ref": "#/definitions/OperationStatus"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Successful Delete Hierarchical Entity Role request": {
            "$ref": "./examples/model/SuccessfulDeleteHierarchicalEntityRoleRequest.json"
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/customprebuiltentities/{entityId}/roles/{roleId}": {
      "get": {
        "summary": "Get one role for a given prebuilt entity in a version of the application.",
        "operationId": "Model_GetCustomEntityRole",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "name": "entityId",
            "in": "path",
            "description": "entity ID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "roleId",
            "in": "path",
            "description": "entity role ID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "An entity role",
            "schema": {
              "$ref": "#/definitions/EntityRole"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Successful Get Custom Prebuilt Domain Entity Role request": {
            "$ref": "./examples/model/SuccessfulGetCustomPrebuiltEntityRoleInfoRequest.json"
          }
        }
      },
      "put": {
        "summary": "Update a role for a given prebuilt entity in a version of the application.",
        "operationId": "Model_UpdateCustomPrebuiltEntityRole",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "name": "entityId",
            "in": "path",
            "description": "The entity ID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "roleId",
            "in": "path",
            "description": "The entity role ID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "entityRoleUpdateObject",
            "in": "body",
            "description": "The new entity role.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EntityRoleUpdateObject"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully updated the entity role.",
            "schema": {
              "$ref": "#/definitions/OperationStatus"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Successful Update Custom Prebuilt Entity Extractor Role request": {
            "$ref": "./examples/model/SuccessfulUpdateCustomPrebuiltEntityRoleRequest.json"
          }
        }
      },
      "delete": {
        "summary": "Delete a role for a given prebuilt entity in a version of the application.",
        "operationId": "Model_DeleteCustomEntityRole",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "name": "entityId",
            "in": "path",
            "description": "The entity ID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "roleId",
            "in": "path",
            "description": "The entity role Id.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully operation.",
            "schema": {
              "$ref": "#/definitions/OperationStatus"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Successful Delete Custom Prebuilt Entity Role request": {
            "$ref": "./examples/model/SuccessfulDeleteCustomPrebuiltEntityRoleRequest.json"
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/patternanyentities/{entityId}/explicitlist/{itemId}": {
      "get": {
        "summary": "Get the explicit (exception) list of the pattern.any entity in a version of the application.",
        "operationId": "Model_GetExplicitListItem",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "name": "entityId",
            "in": "path",
            "description": "The Pattern.Any entity Id.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "itemId",
            "in": "path",
            "description": "The explicit list item Id.",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "An explicit list item info.",
            "schema": {
              "$ref": "#/definitions/ExplicitListItem"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Successful Get Pattern.Any Explicit List Item request": {
            "$ref": "./examples/model/SuccessfulGetPatternAnyExplicitListItemRequest.json"
          }
        }
      },
      "put": {
        "summary": "Updates an explicit (exception) list item for a Pattern.Any entity in a version of the application.",
        "operationId": "Model_UpdateExplicitListItem",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "name": "entityId",
            "in": "path",
            "description": "The Pattern.Any entity extractor ID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "itemId",
            "in": "path",
            "description": "The explicit list item ID.",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "item",
            "in": "body",
            "description": "The new explicit list item.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ExplicitListItemUpdateObject"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully updated the explicit list item.",
            "schema": {
              "$ref": "#/definitions/OperationStatus"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Successful Update Pattern.Any Entity Explicit List Item request": {
            "$ref": "./examples/model/SuccessfulUpdatePatternAnyEntityExplicitListItemRequest.json"
          }
        }
      },
      "delete": {
        "summary": "Delete an item from the explicit (exception) list for a Pattern.any entity in a version of the application.",
        "operationId": "Model_DeleteExplicitListItem",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "name": "entityId",
            "in": "path",
            "description": "The pattern.any entity id.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "itemId",
            "in": "path",
            "description": "The explicit list item which will be deleted.",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully operation.",
            "schema": {
              "$ref": "#/definitions/OperationStatus"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Successful Delete Pattern.Any Explicit List Item request": {
            "$ref": "./examples/model/SuccessfulDeletePatternAnyExplicitListItemRequest.json"
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/patternrule": {
      "post": {
        "summary": "Adds a pattern to a version of the application.",
        "operationId": "Pattern_AddPattern",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "name": "pattern",
            "in": "body",
            "description": "The input pattern.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PatternRuleCreateObject"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "The created pattern",
            "schema": {
              "$ref": "#/definitions/PatternRuleInfo"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Successful Add Pattern request": {
            "$ref": "./examples/patterns/SuccessfulAddPatternRequest.json"
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/patternrules": {
      "get": {
        "summary": "Gets patterns in a version of the application.",
        "operationId": "Pattern_ListPatterns",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "$ref": "#/parameters/SkipInPath"
          },
          {
            "$ref": "#/parameters/TakeInPath"
          }
        ],
        "responses": {
          "200": {
            "description": "The retrieved patterns",
            "schema": {
              "$ref": "#/definitions/PatternRuleList"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Successful Get Application Version Patterns request": {
            "$ref": "./examples/patterns/SuccessfulGetPatternsRequest.json"
          }
        }
      },
      "put": {
        "summary": "Updates patterns in a version of the application.",
        "operationId": "Pattern_UpdatePatterns",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "name": "patterns",
            "in": "body",
            "description": "An array represents the patterns.",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PatternRuleUpdateObject"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The updated patterns",
            "schema": {
              "$ref": "#/definitions/PatternRuleList"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Successful Batch Update Patterns request": {
            "$ref": "./examples/patterns/SuccessfulUpdatePatternsRequest.json"
          }
        }
      },
      "post": {
        "summary": "Adds a batch of patterns in a version of the application.",
        "operationId": "Pattern_BatchAddPatterns",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "name": "patterns",
            "in": "body",
            "description": "A JSON array containing patterns.",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PatternRuleCreateObject"
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "The created patterns",
            "schema": {
              "$ref": "#/definitions/PatternRuleList"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Successful Batch Add Patterns request": {
            "$ref": "./examples/patterns/SuccessfulBatchAddLabelsRequest.json"
          }
        }
      },
      "delete": {
        "summary": "Deletes a list of patterns in a version of the application.",
        "operationId": "Pattern_DeletePatterns",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "name": "patternIds",
            "in": "body",
            "description": "The patterns IDs.",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "format": "uuid",
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully operation.",
            "schema": {
              "$ref": "#/definitions/OperationStatus"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Successful Batch Delete Patterns request": {
            "$ref": "./examples/patterns/SuccessfulDeletePatternsRequest.json"
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/patternrules/{patternId}": {
      "put": {
        "summary": "Updates a pattern in a version of the application.",
        "operationId": "Pattern_UpdatePattern",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "name": "patternId",
            "in": "path",
            "description": "The pattern ID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "pattern",
            "in": "body",
            "description": "An object representing a pattern.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PatternRuleUpdateObject"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The updated pattern",
            "schema": {
              "$ref": "#/definitions/PatternRuleInfo"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Successful Update Pattern request": {
            "$ref": "./examples/patterns/SuccessfulUpdatePatternRequest.json"
          }
        }
      },
      "delete": {
        "summary": "Deletes the pattern with the specified ID from a version of the application..",
        "operationId": "Pattern_DeletePattern",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "name": "patternId",
            "in": "path",
            "description": "The pattern ID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully operation.",
            "schema": {
              "$ref": "#/definitions/OperationStatus"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Successful Delete Pattern request": {
            "$ref": "./examples/patterns/SuccessfulDeletePatternRequest.json"
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/intents/{intentId}/patternrules": {
      "get": {
        "summary": "Returns patterns for the specific intent in a version of the application.",
        "operationId": "Pattern_ListIntentPatterns",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "$ref": "#/parameters/IntentIdInPath"
          },
          {
            "$ref": "#/parameters/SkipInPath"
          },
          {
            "$ref": "#/parameters/TakeInPath"
          }
        ],
        "responses": {
          "200": {
            "description": "The retrieved patterns",
            "schema": {
              "$ref": "#/definitions/PatternRuleList"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Successful Get Intent Patterns request": {
            "$ref": "./examples/patterns/SuccessfulGetIntentPatternsRequest.json"
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/settings": {
      "get": {
        "description": "Gets the settings in a version of the application.",
        "operationId": "Settings_List",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of the application version settings.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AppVersionSettingObject"
              }
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Successful Get Application Version settings request": {
            "$ref": "./examples/versions/SuccessfulGetApplicationVersionSettingsRequest.json"
          }
        }
      },
      "put": {
        "description": "Updates the settings in a version of the application.",
        "operationId": "Settings_Update",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "name": "listOfAppVersionSettingObject",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AppVersionSettingObject"
              }
            },
            "description": "A list of the updated application version settings."
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation.",
            "schema": {
              "$ref": "#/definitions/OperationStatus"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Successful Update Application Version settings request": {
            "$ref": "./examples/versions/SuccessfulUpdateApplicationVersionSettingsRequest.json"
          }
        }
      }
    },
    "/apps/{appId}/azureaccounts": {
      "post": {
        "description": "Assigns an Azure account to the application.",
        "operationId": "AzureAccounts_AssignToApp",
        "summary": "apps - Assign a LUIS Azure account to an application",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/BearerAuthPath"
          },
          {
            "$ref": "#/parameters/ArmTokenParamter"
          },
          {
            "name": "azureAccountInfoObject",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/AzureAccountInfoObject"
            },
            "description": "The Azure account information object."
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "Successful operation.",
            "schema": {
              "$ref": "#/definitions/OperationStatus"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Successful Assign azure account request": {
            "$ref": "./examples/stats/SuccessfulAssignAzureAccountRequest.json"
          }
        }
      },
      "get": {
        "description": "Gets the LUIS Azure accounts assigned to the application for the user using his ARM token.",
        "operationId": "AzureAccounts_GetAssigned",
        "summary": "apps - Get LUIS Azure accounts assigned to the application",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/BearerAuthPath"
          },
          {
            "$ref": "#/parameters/ArmTokenParamter"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of azure account information objects.",
            "schema": {
              "$ref": "#/definitions/AzureAccountInfoList"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Successful Get assigned azure accounts request": {
            "$ref": "./examples/stats/SuccessfulGetAssignedAzureAccountsRequest.json"
          }
        }
      },
      "delete": {
        "description": "Removes assigned Azure account from the application.",
        "operationId": "AzureAccounts_RemoveFromApp",
        "summary": "apps - Removes an assigned LUIS Azure account from an application",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/BearerAuthPath"
          },
          {
            "$ref": "#/parameters/ArmTokenParamter"
          },
          {
            "name": "azureAccountInfoObject",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/AzureAccountInfoObject"
            },
            "description": "The Azure account information object."
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation.",
            "schema": {
              "$ref": "#/definitions/OperationStatus"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Successful delete assigned azure account request": {
            "$ref": "./examples/stats/SuccessfulDeleteAssignedAzureAccountRequest.json"
          }
        }
      }
    },
    "/azureaccounts": {
      "get": {
        "description": "Gets the LUIS Azure accounts for the user using his ARM token.",
        "operationId": "AzureAccounts_ListUserLUISAccounts",
        "summary": "user - Get LUIS Azure accounts",
        "parameters": [
          {
            "$ref": "#/parameters/BearerAuthPath"
          },
          {
            "$ref": "#/parameters/ArmTokenParamter"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of Azure account information objects.",
            "schema": {
              "$ref": "#/definitions/AzureAccountInfoList"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Successful Get azure accounts request": {
            "$ref": "./examples/stats/SuccessfulGetAzureAccountsRequest.json"
          }
        }
      }
    },
    "/package/{appId}/slot/{slotName}/gzip": {
      "get": {
        "description": "Packages a published LUIS application as a GZip file to be used in the LUIS container.",
        "operationId": "Apps_PackagePublishedApplicationAsGzip",
        "summary": "package - Gets published LUIS application package in binary stream GZip format",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/SlotNameInPath"
          }
        ],
        "responses": {
          "200": {
            "description": "The GZip binary stream of the published application package.",
            "schema": {
              "type": "file"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/octet-stream",
          "application/json"
        ],
        "x-ms-examples": {
          "Successful Get published application package request": {
            "$ref": "./examples/package/SuccessfulGetTrainedApplicationPackageRequest.json"
          }
        }
      }
    },
    "/package/{appId}/versions/{versionId}/gzip": {
      "get": {
        "description": "Packages trained LUIS application as GZip file to be used in the LUIS container.",
        "operationId": "Apps_PackageTrainedApplicationAsGzip",
        "summary": "package - Gets trained LUIS application package in binary stream GZip format",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          }
        ],
        "responses": {
          "200": {
            "description": "The GZip binary stream of the trained application package.",
            "schema": {
              "type": "file"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/octet-stream",
          "application/json"
        ],
        "x-ms-examples": {
          "Successful Get published application package request": {
            "$ref": "./examples/package/SuccessfulGetPublishedApplicationPackageRequest.json"
          }
        }
      }
    }
  },
  "x-ms-paths": {
    "/apps/import?JsonVersion=V2": {
      "post": {
        "description": "Imports an application to LUIS, the application's structure is included in the request body.",
        "operationId": "Apps_ImportV2App",
        "parameters": [
          {
            "name": "appName",
            "in": "query",
            "description": "The application name to create. If not specified, the application name will be read from the imported object. If the application name already exists, an error is returned.",
            "type": "string"
          },
          {
            "name": "luisAppV2",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LuisAppV2"
            },
            "description": "A LUIS application structure."
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "The ID of the imported application.",
            "x-nullable": false,
            "schema": {
              "$ref": "#/definitions/GuidResponse"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Successful Import Application": {
            "$ref": "./examples/apps/SuccessfulImportV2ApplicationRequest.json"
          }
        }
      }
    },
    "/apps/import?format=lu": {
      "post": {
        "description": "Imports an application to LUIS, the application's structure is included in the request body.",
        "operationId": "Apps_ImportLuFormat",
        "parameters": [
          {
            "name": "appName",
            "in": "query",
            "description": "The application name to create. If not specified, the application name will be read from the imported object. If the application name already exists, an error is returned.",
            "type": "string"
          },
          {
            "name": "luisAppLu",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "A LUIS application structure."
          }
        ],
        "consumes": [
          "text/plain"
        ],
        "responses": {
          "201": {
            "description": "The ID of the imported application.",
            "x-nullable": false,
            "schema": {
              "$ref": "#/definitions/GuidResponse"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Successful Import Application": {
            "$ref": "./examples/apps/SuccessfulImportLuApplicationRequest.json"
          }
        }
      }
    },
    "/apps/{appId}/versions/import?JsonVersion=V2": {
      "post": {
        "description": "Imports a new version into a LUIS application.",
        "operationId": "Versions_ImportV2App",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "name": "versionId",
            "in": "query",
            "description": "The new versionId to import. If not specified, the versionId will be read from the imported object.",
            "type": "string"
          },
          {
            "name": "luisAppV2",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LuisAppV2"
            },
            "description": "A LUIS application structure."
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "The created application version.",
            "schema": {
              "$ref": "#/definitions/VersionResponse"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Successful Import Application": {
            "$ref": "./examples/versions/SuccessfulImportV2ApplicationVersionRequest.json"
          }
        }
      }
    },
    "/apps/{appId}/versions/import?format=lu": {
      "post": {
        "description": "Imports a new version into a LUIS application.",
        "operationId": "Versions_ImportLuFormat",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "name": "versionId",
            "in": "query",
            "description": "The new versionId to import. If not specified, the versionId will be read from the imported object.",
            "type": "string"
          },
          {
            "name": "luisAppLu",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "An LU representing the LUIS application structure."
          }
        ],
        "consumes": [
          "text/plain"
        ],
        "responses": {
          "201": {
            "description": "The created application version.",
            "schema": {
              "$ref": "#/definitions/VersionResponse"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Successful Import Application": {
            "$ref": "./examples/versions/SuccessfulImportLuApplicationVersionRequest.json"
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/export?format=lu": {
      "get": {
        "description": "Exports a LUIS application to text format.",
        "operationId": "Versions_ExportLuFormat",
        "parameters": [
          {
            "in": "query",
            "name": "format",
            "required": true,
            "description": "Lu format extension",
            "type": "string",
            "enum": [
              "lu"
            ]
          },
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          }
        ],
        "responses": {
          "200": {
            "description": "The LUIS application structure in LU format.",
            "schema": {
              "description": "The LUIS application structure in LU format.",
              "type": "object",
              "format": "file"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/octet-stream"
        ],
        "x-ms-examples": {
          "Successful Export Application Version": {
            "$ref": "./examples/versions/SuccessfulExportLuApplicationVersionRequest.json"
          }
        }
      }
    }
  },
  "definitions": {
    "EntityLabelObject": {
      "description": "Defines the entity type and position of the extracted entity within the example.",
      "type": "object",
      "required": [
        "entityName",
        "startCharIndex",
        "endCharIndex"
      ],
      "properties": {
        "entityName": {
          "description": "The entity type.",
          "type": "string"
        },
        "startCharIndex": {
          "description": "The index within the utterance where the extracted entity starts.",
          "type": "integer"
        },
        "endCharIndex": {
          "description": "The index within the utterance where the extracted entity ends.",
          "type": "integer"
        },
        "role": {
          "description": "The role the entity plays in the utterance.",
          "type": "string"
        },
        "children": {
          "description": "The identified entities within the example utterance.",
          "items": {
            "type": "object",
            "$ref": "#/definitions/EntityLabelObject"
          },
          "type": "array",
          "example": [
            {
              "entityName": "child",
              "startCharIndex": 0,
              "endCharIndex": 0,
              "children": []
            }
          ]
        }
      }
    },
    "ApplicationCreateObject": {
      "description": "Properties for creating a new LUIS Application",
      "type": "object",
      "required": [
        "culture",
        "name"
      ],
      "properties": {
        "culture": {
          "description": "The culture for the new application. It is the language that your app understands and speaks. E.g.: \"en-us\". Note: the culture cannot be changed after the app is created.",
          "type": "string"
        },
        "domain": {
          "description": "The domain for the new application. Optional. E.g.: Comics.",
          "type": "string"
        },
        "description": {
          "description": "Description of the new application. Optional.",
          "type": "string"
        },
        "initialVersionId": {
          "description": "The initial version ID. Optional. Default value is: \"0.1\"",
          "type": "string"
        },
        "usageScenario": {
          "description": "Defines the scenario for the new application. Optional. E.g.: IoT.",
          "type": "string"
        },
        "name": {
          "description": "The name for the new application.",
          "type": "string"
        }
      }
    },
    "PrebuiltDomainCreateBaseObject": {
      "description": "A model object containing the name of the custom prebuilt entity and the name of the domain to which this model belongs.",
      "type": "object",
      "properties": {
        "domainName": {
          "description": "The domain name.",
          "type": "string"
        }
      }
    },
    "PrebuiltDomainCreateObject": {
      "description": "A prebuilt domain create object containing the name and culture of the domain.",
      "type": "object",
      "properties": {
        "domainName": {
          "description": "The domain name.",
          "type": "string"
        },
        "culture": {
          "description": "The culture of the new domain.",
          "type": "string"
        }
      }
    },
    "PrebuiltDomainModelCreateObject": {
      "description": "A model object containing the name of the custom prebuilt intent or entity and the name of the domain to which this model belongs.",
      "type": "object",
      "properties": {
        "domainName": {
          "description": "The domain name.",
          "type": "string"
        },
        "modelName": {
          "description": "The intent name or entity name.",
          "type": "string"
        }
      }
    },
    "CompositeEntityModel": {
      "description": "A composite entity extractor.",
      "type": "object",
      "properties": {
        "children": {
          "description": "Child entities.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "name": {
          "description": "Entity name.",
          "type": "string"
        }
      }
    },
    "EntityModelCreateObject": {
      "description": "An entity extractor create object.",
      "type": "object",
      "properties": {
        "children": {
          "description": "Child entities.",
          "items": {
            "type": "object",
            "$ref": "#/definitions/ChildEntityModelCreateObject"
          },
          "type": "array"
        },
        "name": {
          "description": "Entity name.",
          "type": "string"
        }
      }
    },
    "ChildEntityModelCreateObject": {
      "description": "A child entity extractor create object.",
      "type": "object",
      "properties": {
        "children": {
          "description": "Child entities.",
          "items": {
            "type": "object",
            "$ref": "#/definitions/ChildEntityModelCreateObject"
          },
          "type": "array"
        },
        "name": {
          "description": "Entity name.",
          "type": "string"
        },
        "instanceOf": {
          "description": "The instance of model name",
          "type": "string"
        }
      }
    },
    "EntityModelUpdateObject": {
      "description": "An entity extractor update object.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Entity name.",
          "type": "string"
        },
        "instanceOf": {
          "description": "The instance of model name",
          "type": "string"
        }
      }
    },
    "JSONEntity": {
      "description": "Exported Model - Extracted Entity from utterance.",
      "type": "object",
      "required": [
        "startPos",
        "endPos",
        "entity"
      ],
      "properties": {
        "startPos": {
          "description": "The index within the utterance where the extracted entity starts.",
          "type": "integer"
        },
        "endPos": {
          "description": "The index within the utterance where the extracted entity ends.",
          "type": "integer"
        },
        "entity": {
          "description": "The entity name.",
          "type": "string"
        },
        "role": {
          "description": "The role the entity plays in the utterance.",
          "type": "string"
        },
        "children": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/JSONEntity"
          },
          "example": [
            {
              "entity": "child1",
              "startPos": 0,
              "endPos": 0,
              "children": []
            }
          ]
        }
      }
    },
    "ApplicationSettingUpdateObject": {
      "description": "Object model for updating an application's settings.",
      "type": "object",
      "properties": {
        "public": {
          "description": "Setting your application as public allows other people to use your application's endpoint using their own keys.",
          "type": "boolean",
          "x-nullable": false,
          "x-ms-client-name": "isPublic"
        }
      }
    },
    "PublishSettingUpdateObject": {
      "description": "Object model for updating an application's publish settings.",
      "type": "object",
      "properties": {
        "sentimentAnalysis": {
          "description": "Setting sentiment analysis as true returns the Sentiment of the input utterance along with the response",
          "type": "boolean",
          "x-nullable": false
        },
        "speech": {
          "description": "Setting speech as public enables speech priming in your app",
          "type": "boolean",
          "x-nullable": false
        },
        "spellChecker": {
          "description": "Setting spell checker as public enables spell checking the input utterance.",
          "type": "boolean",
          "x-nullable": false
        }
      }
    },
    "ExampleLabelObject": {
      "description": "A labeled example utterance.",
      "type": "object",
      "properties": {
        "text": {
          "description": "The example utterance.",
          "type": "string"
        },
        "entityLabels": {
          "description": "The identified entities within the example utterance.",
          "items": {
            "type": "object",
            "$ref": "#/definitions/EntityLabelObject"
          },
          "type": "array"
        },
        "intentName": {
          "description": "The identified intent representing the example utterance.",
          "type": "string"
        }
      }
    },
    "PhraselistCreateObject": {
      "description": "Object model for creating a phraselist model.",
      "type": "object",
      "properties": {
        "phrases": {
          "description": "List of comma-separated phrases that represent the Phraselist.",
          "type": "string"
        },
        "name": {
          "description": "The Phraselist name.",
          "type": "string"
        },
        "isExchangeable": {
          "description": "An interchangeable phrase list feature serves as a list of synonyms for training. A non-exchangeable phrase list serves as separate features for training. So, if your non-interchangeable phrase list contains 5 phrases, they will be mapped to 5 separate features. You can think of the non-interchangeable phrase list as an additional bag of words to add to LUIS existing vocabulary features. It is used as a lexicon lookup feature where its value is 1 if the lexicon contains a given word or 0 if it doesn’t.  Default value is true.",
          "default": true,
          "type": "boolean"
        },
        "enabledForAllModels": {
          "description": "Indicates if the Phraselist is enabled for all models in the application.",
          "default": true,
          "type": "boolean"
        }
      }
    },
    "SubClosedList": {
      "description": "Sublist of items for a list entity.",
      "type": "object",
      "properties": {
        "canonicalForm": {
          "description": "The standard form that the list represents.",
          "type": "string"
        },
        "list": {
          "description": "List of synonym words.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      }
    },
    "SubClosedListResponse": {
      "description": "Sublist of items for a list entity.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/SubClosedList"
        }
      ],
      "properties": {
        "id": {
          "description": "The sublist ID",
          "type": "integer",
          "x-nullable": false
        }
      }
    },
    "ApplicationUpdateObject": {
      "description": "Object model for updating the name or description of an application.",
      "type": "object",
      "properties": {
        "name": {
          "description": "The application's new name.",
          "type": "string"
        },
        "description": {
          "description": "The application's new description.",
          "type": "string"
        }
      }
    },
    "PrebuiltExtractorNames": {
      "description": "Object model for adding a prebuilt entity to the application.",
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "JSONRegexFeature": {
      "description": "Exported Model - A Pattern feature.",
      "type": "object",
      "properties": {
        "pattern": {
          "description": "The Regular Expression to match.",
          "type": "string"
        },
        "activated": {
          "description": "Indicates if the Pattern feature is enabled.",
          "type": "boolean"
        },
        "name": {
          "description": "Name of the feature.",
          "type": "string"
        }
      }
    },
    "ClosedList": {
      "description": "Exported Model - A list entity.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Name of the list entity.",
          "type": "string"
        },
        "subLists": {
          "description": "Sublists for the list entity.",
          "items": {
            "type": "object",
            "$ref": "#/definitions/SubClosedList"
          },
          "type": "array"
        },
        "roles": {
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      }
    },
    "ClosedListModelPatchObject": {
      "description": "Object model for adding a batch of sublists to an existing list entity.",
      "type": "object",
      "properties": {
        "subLists": {
          "description": "Sublists to add.",
          "items": {
            "type": "object",
            "$ref": "#/definitions/WordListObject"
          },
          "type": "array"
        }
      }
    },
    "JSONModelFeature": {
      "description": "Exported Model - Phraselist Model Feature.",
      "type": "object",
      "properties": {
        "activated": {
          "description": "Indicates if the feature is enabled.",
          "type": "boolean"
        },
        "name": {
          "description": "The Phraselist name.",
          "type": "string"
        },
        "words": {
          "description": "List of comma-separated phrases that represent the Phraselist.",
          "type": "string"
        },
        "mode": {
          "description": "An interchangeable phrase list feature serves as a list of synonyms for training. A non-exchangeable phrase list serves as separate features for training. So, if your non-interchangeable phrase list contains 5 phrases, they will be mapped to 5 separate features. You can think of the non-interchangeable phrase list as an additional bag of words to add to LUIS existing vocabulary features. It is used as a lexicon lookup feature where its value is 1 if the lexicon contains a given word or 0 if it doesn’t.  Default value is true.",
          "type": "boolean"
        },
        "enabledForAllModels": {
          "description": "Indicates if the Phraselist is enabled for all models in the application.",
          "default": true,
          "type": "boolean"
        }
      }
    },
    "ModelCreateObject": {
      "description": "Object model for creating a new entity extractor.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Name of the new entity extractor.",
          "type": "string"
        }
      }
    },
    "WordListObject": {
      "description": "Sublist of items for a list entity.",
      "type": "object",
      "properties": {
        "canonicalForm": {
          "description": "The standard form that the list represents.",
          "type": "string"
        },
        "list": {
          "description": "List of synonym words.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      }
    },
    "WordListBaseUpdateObject": {
      "description": "Object model for updating one of the list entity's sublists.",
      "type": "object",
      "properties": {
        "canonicalForm": {
          "description": "The standard form that the list represents.",
          "type": "string"
        },
        "list": {
          "description": "List of synonym words.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      }
    },
    "JSONUtterance": {
      "description": "Exported Model - Utterance that was used to train the model.",
      "type": "object",
      "properties": {
        "text": {
          "description": "The utterance.",
          "type": "string"
        },
        "intent": {
          "description": "The matched intent.",
          "type": "string"
        },
        "entities": {
          "description": "The matched entities.",
          "items": {
            "type": "object",
            "$ref": "#/definitions/JSONEntity"
          },
          "type": "array"
        }
      }
    },
    "ModelUpdateObject": {
      "description": "Object model for updating an intent classifier.",
      "type": "object",
      "properties": {
        "name": {
          "description": "The entity's new name.",
          "type": "string"
        }
      }
    },
    "ClosedListModelUpdateObject": {
      "description": "Object model for updating a list entity.",
      "type": "object",
      "properties": {
        "subLists": {
          "description": "The new sublists for the feature.",
          "items": {
            "type": "object",
            "$ref": "#/definitions/WordListObject"
          },
          "type": "array"
        },
        "name": {
          "description": "The new name of the list entity.",
          "type": "string"
        }
      }
    },
    "ClosedListModelCreateObject": {
      "description": "Object model for creating a list entity.",
      "type": "object",
      "properties": {
        "subLists": {
          "description": "Sublists for the feature.",
          "items": {
            "type": "object",
            "$ref": "#/definitions/WordListObject"
          },
          "type": "array"
        },
        "name": {
          "description": "Name of the list entity.",
          "type": "string"
        }
      }
    },
    "ExampleLabelObjectArray": {
      "description": "Object model for adding a batch of labeled examples.",
      "items": {
        "type": "object",
        "$ref": "#/definitions/ExampleLabelObject"
      },
      "type": "array"
    },
    "VersionInfo": {
      "description": "Object model of an application version.",
      "type": "object",
      "required": [
        "version",
        "trainingStatus"
      ],
      "properties": {
        "version": {
          "description": "The version ID. E.g.: \"0.1\"",
          "type": "string"
        },
        "createdDateTime": {
          "description": "The version's creation timestamp.",
          "type": "string",
          "format": "date-time"
        },
        "lastModifiedDateTime": {
          "description": "Timestamp of the last update.",
          "type": "string",
          "format": "date-time"
        },
        "lastTrainedDateTime": {
          "description": "Timestamp of the last time the model was trained.",
          "type": "string",
          "format": "date-time"
        },
        "lastPublishedDateTime": {
          "description": "Timestamp when was last published.",
          "type": "string",
          "format": "date-time"
        },
        "endpointUrl": {
          "description": "The Runtime endpoint URL for this model version.",
          "type": "string"
        },
        "assignedEndpointKey": {
          "description": "The endpoint key.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "externalApiKeys": {
          "description": "External keys.",
          "type": "object"
        },
        "intentsCount": {
          "description": "Number of intents in this model.",
          "type": "integer"
        },
        "entitiesCount": {
          "description": "Number of entities in this model.",
          "type": "integer"
        },
        "endpointHitsCount": {
          "description": "Number of calls made to this endpoint.",
          "type": "integer"
        },
        "trainingStatus": {
          "description": "The current training status.",
          "type": "string",
          "enum": [
            "NeedsTraining",
            "InProgress",
            "Trained"
          ],
          "x-ms-enum": {
            "name": "TrainingStatus"
          }
        }
      }
    },
    "TaskUpdateObject": {
      "description": "Object model for cloning an application's version.",
      "type": "object",
      "properties": {
        "version": {
          "description": "The new version for the cloned model.",
          "type": "string"
        }
      }
    },
    "PhraselistUpdateObject": {
      "description": "Object model for updating a Phraselist.",
      "type": "object",
      "properties": {
        "phrases": {
          "description": "List of comma-separated phrases that represent the Phraselist.",
          "type": "string"
        },
        "name": {
          "description": "The Phraselist name.",
          "type": "string"
        },
        "isActive": {
          "description": "Indicates if the Phraselist is enabled.",
          "default": true,
          "type": "boolean"
        },
        "isExchangeable": {
          "description": "An exchangeable phrase list feature are serves as single feature to the LUIS underlying training algorithm. It is used as a lexicon lookup feature where its value is 1 if the lexicon contains a given word or 0 if it doesn’t. Think of an exchangeable as a synonyms list. A non-exchangeable phrase list feature has all the phrases in the list serve as separate features to the underlying training algorithm. So, if you your phrase list feature contains 5 phrases, they will be mapped to 5 separate features. You can think of the non-exchangeable phrase list feature as an additional bag of words that you are willing to add to LUIS existing vocabulary features. Think of a non-exchangeable as set of different words. Default value is true.",
          "default": true,
          "type": "boolean"
        },
        "enabledForAllModels": {
          "description": "Indicates if the Phraselist is enabled for all models in the application.",
          "default": true,
          "type": "boolean"
        }
      }
    },
    "PrebuiltDomainObject": {
      "type": "object",
      "properties": {
        "domain_name": {
          "type": "string"
        },
        "model_name": {
          "type": "string"
        }
      }
    },
    "JsonChild": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "instanceOf": {
          "type": "string"
        },
        "children": {
          "items": {
            "type": "object",
            "$ref": "#/definitions/JsonChild"
          },
          "type": "array"
        },
        "features": {
          "items": {
            "type": "object",
            "$ref": "#/definitions/JsonModelFeatureInformation"
          },
          "type": "array"
        }
      }
    },
    "HierarchicalModel": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "children": {
          "items": {
            "type": "object",
            "$ref": "#/definitions/JsonChild"
          },
          "type": "array"
        },
        "features": {
          "items": {
            "type": "object",
            "$ref": "#/definitions/JsonModelFeatureInformation"
          },
          "type": "array"
        },
        "roles": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "inherits": {
          "type": "object",
          "$ref": "#/definitions/PrebuiltDomainObject"
        }
      }
    },
    "HierarchicalModelV2": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "children": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "inherits": {
          "type": "object",
          "$ref": "#/definitions/PrebuiltDomainObject"
        },
        "roles": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ApplicationPublishObject": {
      "description": "Object model for publishing a specific application version.",
      "type": "object",
      "properties": {
        "versionId": {
          "description": "The version ID to publish.",
          "type": "string"
        },
        "isStaging": {
          "description": "Indicates if the staging slot should be used, instead of the Production one.",
          "default": false,
          "type": "boolean"
        }
      }
    },
    "LuisAppV2": {
      "description": "Exported Model - An exported LUIS Application.",
      "additionalProperties": true,
      "type": "object",
      "properties": {
        "luis_schema_version": {
          "description": "Luis schema deserialization version.",
          "type": "string"
        },
        "name": {
          "description": "The name of the application.",
          "type": "string"
        },
        "versionId": {
          "description": "The version ID of the application that was exported.",
          "type": "string"
        },
        "desc": {
          "description": "The description of the application.",
          "type": "string"
        },
        "culture": {
          "description": "The culture of the application. E.g.: en-us.",
          "type": "string"
        },
        "intents": {
          "description": "List of intents.",
          "items": {
            "type": "object",
            "$ref": "#/definitions/HierarchicalModelV2"
          },
          "type": "array"
        },
        "entities": {
          "description": "List of entities.",
          "items": {
            "type": "object",
            "$ref": "#/definitions/HierarchicalModelV2"
          },
          "type": "array"
        },
        "closedLists": {
          "description": "List of list entities.",
          "items": {
            "type": "object",
            "$ref": "#/definitions/ClosedList"
          },
          "type": "array"
        },
        "composites": {
          "description": "List of composite entities.",
          "items": {
            "type": "object",
            "$ref": "#/definitions/HierarchicalModelV2"
          },
          "type": "array"
        },
        "patternAnyEntities": {
          "description": "List of Pattern.Any entities.",
          "items": {
            "type": "object",
            "$ref": "#/definitions/PatternAny"
          },
          "type": "array"
        },
        "regex_entities": {
          "description": "List of regular expression entities.",
          "items": {
            "type": "object",
            "$ref": "#/definitions/RegexEntity"
          },
          "type": "array"
        },
        "prebuiltEntities": {
          "description": "List of prebuilt entities.",
          "items": {
            "type": "object",
            "$ref": "#/definitions/PrebuiltEntity"
          },
          "type": "array"
        },
        "regex_features": {
          "description": "List of pattern features.",
          "items": {
            "type": "object",
            "$ref": "#/definitions/JSONRegexFeature"
          },
          "type": "array"
        },
        "model_features": {
          "description": "List of model features.",
          "items": {
            "type": "object",
            "$ref": "#/definitions/JSONModelFeature"
          },
          "type": "array"
        },
        "patterns": {
          "description": "List of patterns.",
          "items": {
            "type": "object",
            "$ref": "#/definitions/PatternRule"
          },
          "type": "array"
        },
        "utterances": {
          "description": "List of example utterances.",
          "items": {
            "type": "object",
            "$ref": "#/definitions/JSONUtterance"
          },
          "type": "array"
        }
      }
    },
    "LuisApp": {
      "description": "Exported Model - An exported LUIS Application.",
      "additionalProperties": true,
      "type": "object",
      "properties": {
        "name": {
          "description": "The name of the application.",
          "type": "string"
        },
        "versionId": {
          "description": "The version ID of the application that was exported.",
          "type": "string"
        },
        "desc": {
          "description": "The description of the application.",
          "type": "string"
        },
        "culture": {
          "description": "The culture of the application. E.g.: en-us.",
          "type": "string"
        },
        "intents": {
          "description": "List of intents.",
          "items": {
            "type": "object",
            "$ref": "#/definitions/HierarchicalModel"
          },
          "type": "array"
        },
        "entities": {
          "description": "List of entities.",
          "items": {
            "type": "object",
            "$ref": "#/definitions/HierarchicalModel"
          },
          "type": "array"
        },
        "closedLists": {
          "description": "List of list entities.",
          "items": {
            "type": "object",
            "$ref": "#/definitions/ClosedList"
          },
          "type": "array"
        },
        "composites": {
          "description": "List of composite entities.",
          "items": {
            "type": "object",
            "$ref": "#/definitions/HierarchicalModel"
          },
          "type": "array"
        },
        "hierarchicals": {
          "description": "List of hierarchical entities.",
          "items": {
            "type": "object",
            "$ref": "#/definitions/HierarchicalModel"
          },
          "type": "array"
        },
        "patternAnyEntities": {
          "description": "List of Pattern.Any entities.",
          "items": {
            "type": "object",
            "$ref": "#/definitions/PatternAny"
          },
          "type": "array"
        },
        "regex_entities": {
          "description": "List of regular expression entities.",
          "items": {
            "type": "object",
            "$ref": "#/definitions/RegexEntity"
          },
          "type": "array"
        },
        "prebuiltEntities": {
          "description": "List of prebuilt entities.",
          "items": {
            "type": "object",
            "$ref": "#/definitions/PrebuiltEntity"
          },
          "type": "array"
        },
        "regex_features": {
          "description": "List of pattern features.",
          "items": {
            "type": "object",
            "$ref": "#/definitions/JSONRegexFeature"
          },
          "type": "array"
        },
        "phraselists": {
          "description": "List of model features.",
          "items": {
            "type": "object",
            "$ref": "#/definitions/JSONModelFeature"
          },
          "type": "array"
        },
        "patterns": {
          "description": "List of patterns.",
          "items": {
            "type": "object",
            "$ref": "#/definitions/PatternRule"
          },
          "type": "array"
        },
        "utterances": {
          "description": "List of example utterances.",
          "items": {
            "type": "object",
            "$ref": "#/definitions/JSONUtterance"
          },
          "type": "array"
        }
      }
    },
    "GuidResponse": {
      "description": "The ID (GUID) returned by an operation.",
      "type": "string",
      "format": "uuid"
    },
    "VersionResponse": {
      "description": "The new version ID returned by when importing a model version.",
      "type": "string"
    },
    "FeatureIDResponse": {
      "description": "The ID of the created feature.",
      "type": "integer",
      "x-nullable": false
    },
    "LabeledUtterances": {
      "description": "A list of predictions and label pairs for every example in the application.",
      "type": "array",
      "items": {
        "$ref": "#/definitions/LabeledUtterance"
      }
    },
    "LabeledUtterance": {
      "description": "A prediction and label pair of an example.",
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "ID of Labeled Utterance."
        },
        "text": {
          "type": "string",
          "description": "The utterance. For example, \"What's the weather like in seattle?\""
        },
        "tokenizedText": {
          "type": "array",
          "description": "The utterance tokenized.",
          "items": {
            "type": "string"
          }
        },
        "intentLabel": {
          "description": "The intent matching the example.",
          "type": "string"
        },
        "entityLabels": {
          "description": "The entities matching the example.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/EntityLabel"
          }
        },
        "intentPredictions": {
          "description": "List of suggested intents.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/IntentPrediction"
          }
        },
        "entityPredictions": {
          "description": "List of suggested entities.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/EntityPrediction"
          }
        }
      }
    },
    "IntentsSuggestionExamples": {
      "description": "List of predicted/suggested intents.",
      "type": "array",
      "items": {
        "$ref": "#/definitions/IntentsSuggestionExample"
      }
    },
    "IntentsSuggestionExample": {
      "description": "Predicted/suggested intent.",
      "type": "object",
      "properties": {
        "text": {
          "type": "string",
          "description": "The utterance. For example, \"What's the weather like in seattle?\""
        },
        "tokenizedText": {
          "type": "array",
          "description": "The tokenized utterance.",
          "items": {
            "type": "string"
          }
        },
        "intentPredictions": {
          "description": "Predicted/suggested intents.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/IntentPrediction"
          }
        },
        "entityPredictions": {
          "description": "Predicted/suggested entities.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/EntityPrediction"
          }
        }
      }
    },
    "EntitiesSuggestionExamples": {
      "description": "List of predicted/suggested entities.",
      "type": "array",
      "items": {
        "$ref": "#/definitions/EntitiesSuggestionExample"
      }
    },
    "EntitiesSuggestionExample": {
      "description": "Predicted/suggested entity.",
      "type": "object",
      "properties": {
        "text": {
          "type": "string",
          "description": "The utterance. For example, \"What's the weather like in seattle?\""
        },
        "tokenizedText": {
          "type": "array",
          "description": "The utterance tokenized.",
          "items": {
            "type": "string"
          }
        },
        "intentPredictions": {
          "description": "Predicted/suggested intents.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/IntentPrediction"
          }
        },
        "entityPredictions": {
          "description": "Predicted/suggested entities.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/EntityPrediction"
          }
        }
      }
    },
    "EntityLabel": {
      "description": "Defines the entity type and position of the extracted entity within the example.",
      "type": "object",
      "properties": {
        "entityName": {
          "description": "The entity type.",
          "type": "string"
        },
        "startTokenIndex": {
          "description": "The index within the utterance where the extracted entity starts.",
          "type": "integer"
        },
        "endTokenIndex": {
          "description": "The index within the utterance where the extracted entity ends.",
          "type": "integer"
        },
        "role": {
          "type": "string",
          "description": "The role of the predicted entity."
        },
        "roleId": {
          "type": "string",
          "format": "uuid",
          "description": "The role id for the predicted entity."
        },
        "children": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/EntityLabel"
          },
          "example": [
            {
              "entityName": "child",
              "startTokenIndex": 0,
              "endTokenIndex": 0,
              "children": []
            }
          ]
        }
      },
      "required": [
        "entityName",
        "startTokenIndex",
        "endTokenIndex"
      ]
    },
    "IntentPrediction": {
      "description": "A suggested intent.",
      "type": "object",
      "properties": {
        "name": {
          "description": "The intent's name",
          "type": "string"
        },
        "score": {
          "description": "The intent's score, based on the prediction model.",
          "type": "number"
        }
      }
    },
    "EntityPrediction": {
      "description": "A suggested entity.",
      "type": "object",
      "required": [
        "entityName",
        "startTokenIndex",
        "endTokenIndex",
        "phrase"
      ],
      "properties": {
        "entityName": {
          "description": "The entity's name",
          "type": "string"
        },
        "startTokenIndex": {
          "description": "The index within the utterance where the extracted entity starts.",
          "type": "integer"
        },
        "endTokenIndex": {
          "description": "The index within the utterance where the extracted entity ends.",
          "type": "integer"
        },
        "phrase": {
          "type": "string",
          "description": "The actual token(s) that comprise the entity."
        },
        "children": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/EntityPrediction"
          },
          "example": [
            {
              "entityName": "child",
              "startTokenIndex": 0,
              "endTokenIndex": 0,
              "phrase": "string"
            }
          ]
        }
      }
    },
    "PersonalAssistantsResponse": {
      "type": "object",
      "description": "Response containing user's endpoint keys and the endpoint URLs of the prebuilt Cortana applications.",
      "properties": {
        "endpointKeys": {
          "$ref": "#/definitions/EndpointKeys"
        },
        "endpointUrls": {
          "$ref": "#/definitions/PersonalAssistantUrls"
        }
      }
    },
    "EndpointKeys": {
      "type": "array",
      "description": "An a array of GUIDs, comprised of Azure Endpoint Keys and the Authoring API key.",
      "items": {
        "type": "string",
        "format": "uuid"
      }
    },
    "PersonalAssistantUrls": {
      "type": "object",
      "description": "Endpoint URLs for prebuilt Cortana applications.",
      "additionalProperties": {
        "type": "string"
      }
    },
    "ModelInfo": {
      "description": "Base type used in entity types.",
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid",
          "description": "The ID of the Entity Model."
        },
        "name": {
          "type": "string",
          "description": "Name of the Entity Model."
        },
        "typeId": {
          "type": "integer",
          "description": "The type ID of the Entity Model."
        },
        "readableType": {
          "$ref": "#/definitions/ReadableType"
        }
      },
      "required": [
        "id",
        "readableType"
      ]
    },
    "ModelsInfoResponseObject": {
      "description": "A list of application model infos.",
      "type": "array",
      "items": {
        "$ref": "#/definitions/ModelInfoResponse"
      }
    },
    "ModelInfoResponse": {
      "description": "An application model info.",
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid",
          "description": "The ID of the Entity Model."
        },
        "name": {
          "type": "string",
          "description": "Name of the Entity Model."
        },
        "typeId": {
          "type": "integer",
          "description": "The type ID of the Entity Model."
        },
        "readableType": {
          "$ref": "#/definitions/ReadableType"
        }
      },
      "required": [
        "id",
        "readableType"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/HierarchicalEntityExtractor"
        },
        {
          "$ref": "#/definitions/CompositeEntityExtractor"
        },
        {
          "$ref": "#/definitions/ClosedListEntityExtractor"
        },
        {
          "$ref": "#/definitions/IntentClassifier"
        },
        {
          "$ref": "#/definitions/EntityExtractor"
        },
        {
          "$ref": "#/definitions/RegexEntityExtractor"
        },
        {
          "$ref": "#/definitions/PatternAnyEntityExtractor"
        },
        {
          "$ref": "#/definitions/NDepthEntityExtractor"
        }
      ]
    },
    "EntityModelInfo": {
      "description": "An Entity Extractor model info.",
      "type": "object",
      "properties": {
        "roles": {
          "$ref": "#/definitions/EntityRoleList"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ModelInfo"
        }
      ]
    },
    "ReadableType": {
      "description": "Full name of the entity type.",
      "type": "string",
      "enum": [
        "Entity Extractor",
        "Child Entity Extractor",
        "Hierarchical Entity Extractor",
        "Hierarchical Child Entity Extractor",
        "Composite Entity Extractor",
        "List Entity Extractor",
        "Prebuilt Entity Extractor",
        "Intent Classifier",
        "Pattern.Any Entity Extractor",
        "Closed List Entity Extractor",
        "Regex Entity Extractor"
      ]
    },
    "HierarchicalEntityExtractor": {
      "description": "Hierarchical Entity Extractor.",
      "type": "object",
      "x-ms-discriminator-value": "Hierarchical Entity Extractor",
      "allOf": [
        {
          "$ref": "#/definitions/ModelInfo"
        },
        {
          "$ref": "#/definitions/EntityModelInfo"
        }
      ],
      "properties": {
        "children": {
          "description": "List of child entities.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ChildEntity"
          }
        }
      }
    },
    "HierarchicalEntityExtractorsList": {
      "description": "List of Hierarchical Entity Extractors.",
      "type": "array",
      "items": {
        "$ref": "#/definitions/HierarchicalEntityExtractor"
      }
    },
    "CompositeEntityExtractor": {
      "description": "A Composite Entity Extractor.",
      "type": "object",
      "x-ms-discriminator-value": "Composite Entity Extractor",
      "allOf": [
        {
          "$ref": "#/definitions/ModelInfo"
        },
        {
          "$ref": "#/definitions/EntityModelInfo"
        }
      ],
      "properties": {
        "children": {
          "description": "List of child entities.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ChildEntity"
          }
        }
      }
    },
    "CompositeEntityExtractorsList": {
      "description": "List of Composite Entity Extractors.",
      "type": "array",
      "items": {
        "$ref": "#/definitions/CompositeEntityExtractor"
      }
    },
    "ClosedListEntityExtractor": {
      "description": "List Entity Extractor.",
      "type": "object",
      "x-ms-discriminator-value": "List Entity Extractor",
      "allOf": [
        {
          "$ref": "#/definitions/ModelInfo"
        },
        {
          "$ref": "#/definitions/EntityModelInfo"
        }
      ],
      "properties": {
        "subLists": {
          "description": "List of sublists.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SubClosedListResponse"
          }
        }
      }
    },
    "ClosedListEntityExtractorsList": {
      "description": "List of List Entity Extractors.",
      "type": "array",
      "items": {
        "$ref": "#/definitions/ClosedListEntityExtractor"
      }
    },
    "PrebuiltEntityExtractor": {
      "description": "Prebuilt Entity Extractor.",
      "type": "object",
      "x-ms-discriminator-value": "Prebuilt Entity Extractor",
      "allOf": [
        {
          "$ref": "#/definitions/ModelInfo"
        },
        {
          "$ref": "#/definitions/EntityModelInfo"
        }
      ]
    },
    "PrebuiltEntityExtractorsList": {
      "description": "List of Prebuilt Entity Extractors.",
      "type": "array",
      "items": {
        "$ref": "#/definitions/PrebuiltEntityExtractor"
      }
    },
    "ChildEntity": {
      "type": "object",
      "description": "The base child entity type.",
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid",
          "description": "The ID (GUID) belonging to a child entity."
        },
        "name": {
          "type": "string",
          "description": "The name of a child entity."
        },
        "instanceOf": {
          "description": "Instance of Model.",
          "type": "string"
        },
        "typeId": {
          "description": "The type ID of the Entity Model.",
          "type": "integer"
        },
        "readableType": {
          "$ref": "#/definitions/ReadableType"
        },
        "children": {
          "description": "List of children",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ChildEntity"
          }
        }
      },
      "required": [
        "id"
      ]
    },
    "HierarchicalChildEntity": {
      "description": "A Hierarchical Child Entity.",
      "type": "object",
      "properties": {
        "typeId": {
          "description": "The type ID of the Entity Model.",
          "type": "integer"
        },
        "readableType": {
          "$ref": "#/definitions/ReadableType"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ChildEntity"
        }
      ]
    },
    "CustomPrebuiltModel": {
      "description": "A Custom Prebuilt model.",
      "allOf": [
        {
          "$ref": "#/definitions/ModelInfo"
        },
        {
          "$ref": "#/definitions/IntentClassifier"
        },
        {
          "$ref": "#/definitions/EntityExtractor"
        }
      ]
    },
    "CustomPrebuiltModelList": {
      "description": "A List of Custom Prebuilt models.",
      "type": "array",
      "items": {
        "$ref": "#/definitions/CustomPrebuiltModel"
      }
    },
    "IntentClassifier": {
      "description": "Intent Classifier.",
      "type": "object",
      "x-ms-discriminator-value": "Intent Classifier",
      "allOf": [
        {
          "$ref": "#/definitions/ModelInfo"
        }
      ],
      "properties": {
        "customPrebuiltDomainName": {
          "description": "The domain name.",
          "type": "string"
        },
        "customPrebuiltModelName": {
          "description": "The intent name or entity name.",
          "type": "string"
        }
      }
    },
    "EntityExtractor": {
      "description": "Entity Extractor.",
      "type": "object",
      "x-ms-discriminator-value": "Entity Extractor",
      "allOf": [
        {
          "$ref": "#/definitions/ModelInfo"
        },
        {
          "$ref": "#/definitions/EntityModelInfo"
        }
      ],
      "properties": {
        "customPrebuiltDomainName": {
          "description": "The domain name.",
          "type": "string"
        },
        "customPrebuiltModelName": {
          "description": "The intent name or entity name.",
          "type": "string"
        }
      }
    },
    "NDepthEntityExtractor": {
      "description": "N-Depth Entity Extractor.",
      "type": "object",
      "x-ms-discriminator-value": "N-Depth Entity Extractor",
      "allOf": [
        {
          "$ref": "#/definitions/ModelInfo"
        },
        {
          "$ref": "#/definitions/EntityModelInfo"
        }
      ],
      "properties": {
        "customPrebuiltDomainName": {
          "description": "The domain name.",
          "type": "string"
        },
        "customPrebuiltModelName": {
          "description": "The intent name or entity name.",
          "type": "string"
        },
        "children": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ChildEntity"
          }
        }
      }
    },
    "IntentClassifiersList": {
      "description": "List of Intent Classifiers.",
      "type": "array",
      "items": {
        "$ref": "#/definitions/IntentClassifier"
      }
    },
    "EntityExtractorsList": {
      "description": "List of Entity Extractors.",
      "type": "array",
      "items": {
        "$ref": "#/definitions/EntityExtractor"
      }
    },
    "NDepthEntityExtractorsList": {
      "description": "List of N-Depth Entity Extractors.",
      "type": "array",
      "items": {
        "$ref": "#/definitions/NDepthEntityExtractor"
      }
    },
    "FeaturesResponseObject": {
      "description": "Model Features, including Patterns and Phraselists.",
      "type": "object",
      "properties": {
        "phraselistFeatures": {
          "$ref": "#/definitions/PhraseListFeatureInfoList"
        },
        "patternFeatures": {
          "$ref": "#/definitions/PatternFeatureInfoList"
        }
      }
    },
    "FeatureInfoObject": {
      "description": "The base class Features-related response objects inherit from.",
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "A six-digit ID used for Features."
        },
        "name": {
          "type": "string",
          "description": "The name of the Feature."
        },
        "isActive": {
          "description": "Indicates if the feature is enabled.",
          "type": "boolean"
        },
        "enabledForAllModels": {
          "description": "Indicates if the feature is enabled for all models in the application.",
          "type": "boolean"
        }
      }
    },
    "PatternFeatureInfo": {
      "description": "Pattern feature.",
      "type": "object",
      "properties": {
        "pattern": {
          "description": "The Regular Expression to match.",
          "type": "string"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/FeatureInfoObject"
        }
      ]
    },
    "PatternFeatureInfoList": {
      "description": "List of Pattern features.",
      "type": "array",
      "items": {
        "$ref": "#/definitions/PatternFeatureInfo"
      }
    },
    "PhraseListFeatureInfo": {
      "description": "Phraselist Feature.",
      "type": "object",
      "properties": {
        "phrases": {
          "type": "string",
          "description": "A list of comma-separated values."
        },
        "isExchangeable": {
          "description": "An exchangeable phrase list feature are serves as single feature to the LUIS underlying training algorithm. It is used as a lexicon lookup feature where its value is 1 if the lexicon contains a given word or 0 if it doesn’t. Think of an exchangeable as a synonyms list. A non-exchangeable phrase list feature has all the phrases in the list serve as separate features to the underlying training algorithm. So, if you your phrase list feature contains 5 phrases, they will be mapped to 5 separate features. You can think of the non-exchangeable phrase list feature as an additional bag of words that you are willing to add to LUIS existing vocabulary features. Think of a non-exchangeable as set of different words. Default value is true.",
          "type": "boolean"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/FeatureInfoObject"
        }
      ]
    },
    "PhraseListFeatureInfoList": {
      "description": "List of Phraselist Features.",
      "type": "array",
      "items": {
        "$ref": "#/definitions/PhraseListFeatureInfo"
      }
    },
    "LabelExampleResponse": {
      "description": "Response when adding a labeled example utterance.",
      "type": "object",
      "properties": {
        "UtteranceText": {
          "description": "The example utterance.",
          "type": "string"
        },
        "ExampleId": {
          "description": "The newly created sample ID.",
          "type": "integer"
        }
      }
    },
    "BatchLabelExample": {
      "description": "Response when adding a batch of labeled example utterances.",
      "type": "object",
      "properties": {
        "value": {
          "$ref": "#/definitions/LabelExampleResponse"
        },
        "hasError": {
          "type": "boolean"
        },
        "error": {
          "$ref": "#/definitions/OperationStatus"
        }
      }
    },
    "BatchLabelExampleResponse": {
      "description": "Response when adding a batch of labeled example utterances.",
      "type": "array",
      "items": {
        "$ref": "#/definitions/BatchLabelExample"
      }
    },
    "ApplicationInfoResponse": {
      "description": "Response containing the Application Info.",
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid",
          "description": "The ID (GUID) of the application."
        },
        "name": {
          "description": "The name of the application.",
          "type": "string"
        },
        "description": {
          "description": "The description of the application.",
          "type": "string"
        },
        "culture": {
          "description": "The culture of the application. For example, \"en-us\".",
          "type": "string"
        },
        "usageScenario": {
          "description": "Defines the scenario for the new application. Optional. For example, IoT.",
          "type": "string"
        },
        "domain": {
          "description": "The domain for the new application. Optional. For example, Comics.",
          "type": "string"
        },
        "versionsCount": {
          "description": "Amount of model versions within the application.",
          "type": "integer"
        },
        "createdDateTime": {
          "description": "The version's creation timestamp.",
          "type": "string"
        },
        "endpoints": {
          "description": "The Runtime endpoint URL for this model version.",
          "type": "object"
        },
        "endpointHitsCount": {
          "description": "Number of calls made to this endpoint.",
          "type": "integer"
        },
        "activeVersion": {
          "description": "The version ID currently marked as active.",
          "type": "string"
        }
      }
    },
    "ApplicationsInfoList": {
      "description": "List of Application Infos.",
      "type": "array",
      "items": {
        "$ref": "#/definitions/ApplicationInfoResponse"
      }
    },
    "ProductionOrStagingEndpointInfo": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/EndpointInfo"
        }
      ]
    },
    "EndpointInfo": {
      "type": "object",
      "description": "The base class \"ProductionOrStagingEndpointInfo\" inherits from.",
      "properties": {
        "versionId": {
          "description": "The version ID to publish.",
          "type": "string"
        },
        "isStaging": {
          "description": "Indicates if the staging slot should be used, instead of the Production one.",
          "type": "boolean"
        },
        "endpointUrl": {
          "description": "The Runtime endpoint URL for this model version.",
          "type": "string"
        },
        "region": {
          "description": "The target region that the application is published to.",
          "type": "string"
        },
        "assignedEndpointKey": {
          "description": "The endpoint key.",
          "type": "string"
        },
        "endpointRegion": {
          "type": "string",
          "description": "The endpoint's region."
        },
        "failedRegions": {
          "type": "string",
          "description": "Regions where publishing failed."
        },
        "publishedDateTime": {
          "description": "Timestamp when was last published.",
          "type": "string"
        }
      }
    },
    "AvailableEndpoints": {
      "type": "object",
      "description": "Collection of endpoint URLs where the selected application is deployed to.",
      "additionalProperties": {
        "type": "string"
      }
    },
    "AvailableCulture": {
      "description": "Available culture for using in a new application.",
      "type": "object",
      "properties": {
        "name": {
          "description": "The language name.",
          "type": "string"
        },
        "code": {
          "description": "The ISO value for the language.",
          "type": "string"
        }
      }
    },
    "AvailableCultures": {
      "type": "array",
      "description": "A list of available application cultures.",
      "items": {
        "$ref": "#/definitions/AvailableCulture"
      }
    },
    "AvailableDomains": {
      "description": "A list of available application domains.",
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "ApplicationUsageScenarios": {
      "description": "A list of possible application usage scenarios.",
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "ApplicationSettings": {
      "description": "The application settings.",
      "type": "object",
      "properties": {
        "id": {
          "description": "The application ID.",
          "type": "string",
          "format": "uuid"
        },
        "public": {
          "description": "Setting your application as public allows other people to use your application's endpoint using their own keys for billing purposes.",
          "type": "boolean",
          "x-nullable": false,
          "x-ms-client-name": "isPublic"
        }
      },
      "required": [
        "id",
        "public"
      ]
    },
    "PublishSettings": {
      "description": "The application publish settings.",
      "type": "object",
      "properties": {
        "id": {
          "description": "The application ID.",
          "type": "string",
          "format": "uuid"
        },
        "sentimentAnalysis": {
          "description": "Setting sentiment analysis as true returns the sentiment of the input utterance along with the response",
          "type": "boolean",
          "x-nullable": false,
          "x-ms-client-name": "IsSentimentAnalysisEnabled"
        },
        "speech": {
          "description": "Enables speech priming in your app",
          "type": "boolean",
          "x-nullable": false,
          "x-ms-client-name": "IsSpeechEnabled"
        },
        "spellChecker": {
          "description": "Enables spell checking of the utterance.",
          "type": "boolean",
          "x-nullable": false,
          "x-ms-client-name": "IsSpellCheckerEnabled"
        }
      },
      "required": [
        "id",
        "sentimentAnalysis",
        "speech",
        "spellChecker"
      ]
    },
    "AvailablePrebuiltEntityModel": {
      "description": "Available Prebuilt entity model for using in an application.",
      "type": "object",
      "properties": {
        "name": {
          "description": "The entity name.",
          "type": "string"
        },
        "description": {
          "description": "The entity description and usage information.",
          "type": "string"
        },
        "examples": {
          "description": "Usage examples.",
          "type": "string"
        }
      }
    },
    "AvailablePrebuiltEntityModels": {
      "description": "List of Available Prebuilt entity models.",
      "type": "array",
      "items": {
        "$ref": "#/definitions/AvailablePrebuiltEntityModel"
      }
    },
    "EnqueueTrainingResponse": {
      "description": "Response model when requesting to train the model.",
      "type": "object",
      "properties": {
        "statusId": {
          "description": "The train request status ID.",
          "type": "integer"
        },
        "status": {
          "$ref": "#/definitions/TrainingStatus"
        }
      }
    },
    "TrainingStatus": {
      "description": "The Training status.",
      "type": "string",
      "enum": [
        "Queued",
        "InProgress",
        "UpToDate",
        "Fail",
        "Success"
      ]
    },
    "ModelTrainingInfo": {
      "description": "Model Training Info.",
      "type": "object",
      "properties": {
        "modelId": {
          "type": "string",
          "format": "uuid",
          "description": "The ID (GUID) of the model."
        },
        "details": {
          "$ref": "#/definitions/ModelTrainingDetails"
        }
      }
    },
    "ModelTrainingDetails": {
      "description": "Model Training Details.",
      "type": "object",
      "properties": {
        "statusId": {
          "description": "The train request status ID.",
          "type": "integer"
        },
        "status": {
          "$ref": "#/definitions/TrainingStatus"
        },
        "exampleCount": {
          "description": "The count of examples used to train the model.",
          "type": "integer"
        },
        "trainingDateTime": {
          "description": "When the model was trained.",
          "type": "string",
          "format": "date-time"
        },
        "failureReason": {
          "description": "Reason for the training failure.",
          "type": "string"
        }
      }
    },
    "ModelTrainingInfoList": {
      "description": "List of Model Training Infos.",
      "type": "array",
      "items": {
        "$ref": "#/definitions/ModelTrainingInfo"
      }
    },
    "UserAccessList": {
      "description": "List of user permissions.",
      "type": "object",
      "properties": {
        "owner": {
          "type": "string",
          "description": "The email address of owner of the application."
        },
        "emails": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "UserCollaborator": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string",
          "description": "The email address of the user."
        }
      }
    },
    "CollaboratorsArray": {
      "type": "object",
      "properties": {
        "emails": {
          "type": "array",
          "description": "The email address of the users.",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "OperationStatus": {
      "description": "Response of an Operation status.",
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "description": "Status Code.",
          "enum": [
            "Failed",
            "FAILED",
            "Success"
          ],
          "x-ms-enum": {
            "modelAsString": true,
            "name": "OperationStatusType"
          }
        },
        "message": {
          "type": "string",
          "description": "Status details."
        }
      }
    },
    "ErrorResponse": {
      "description": "Error response when invoking an operation on the API.",
      "type": "object",
      "properties": {
        "errorType": {
          "type": "string"
        }
      },
      "additionalProperties": {
        "type": "object"
      }
    },
    "OperationError": {
      "description": "Operation error details when invoking an operation on the API.",
      "type": "object",
      "properties": {
        "code": {
          "type": "string"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "PrebuiltDomainsList": {
      "description": "List of Prebuilt Domains.",
      "type": "array",
      "items": {
        "$ref": "#/definitions/PrebuiltDomain"
      }
    },
    "PrebuiltDomain": {
      "description": "Prebuilt Domain.",
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "culture": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "examples": {
          "type": "string"
        },
        "intents": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PrebuiltDomainItem"
          }
        },
        "entities": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PrebuiltDomainItem"
          }
        }
      }
    },
    "PrebuiltDomainItem": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "examples": {
          "type": "string"
        }
      }
    },
    "GuidList": {
      "description": "List of IDs (GUID)",
      "type": "array",
      "items": {
        "$ref": "#/definitions/GuidResponse"
      }
    },
    "EntityRoleCreateObject": {
      "description": "Object model for creating an entity role.",
      "type": "object",
      "properties": {
        "name": {
          "description": "The entity role name.",
          "type": "string"
        }
      }
    },
    "RegexModelCreateObject": {
      "description": "Model object for creating a regular expression entity model.",
      "type": "object",
      "properties": {
        "regexPattern": {
          "description": "The regular expression entity pattern.",
          "type": "string"
        },
        "name": {
          "description": "The model name.",
          "type": "string"
        }
      }
    },
    "PatternAnyModelCreateObject": {
      "description": "Model object for creating a Pattern.Any entity model.",
      "type": "object",
      "properties": {
        "name": {
          "description": "The model name.",
          "type": "string"
        },
        "explicitList": {
          "description": "The Pattern.Any explicit list.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ExplicitListItemCreateObject": {
      "description": "Object model for creating an explicit (exception) list item.",
      "type": "object",
      "properties": {
        "explicitListItem": {
          "description": "The explicit list item.",
          "type": "string"
        }
      }
    },
    "RegexModelUpdateObject": {
      "description": "Model object for updating a regular expression entity model.",
      "type": "object",
      "properties": {
        "regexPattern": {
          "description": "The regular expression entity pattern.",
          "type": "string"
        },
        "name": {
          "description": "The model name.",
          "type": "string"
        }
      }
    },
    "PatternAnyModelUpdateObject": {
      "description": "Model object for updating a Pattern.Any entity model.",
      "type": "object",
      "properties": {
        "name": {
          "description": "The model name.",
          "type": "string"
        },
        "explicitList": {
          "description": "The Pattern.Any explicit list.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "EntityRoleUpdateObject": {
      "description": "Object model for updating an entity role.",
      "type": "object",
      "properties": {
        "name": {
          "description": "The entity role name.",
          "type": "string"
        }
      }
    },
    "ExplicitListItemUpdateObject": {
      "description": "Model object for updating an explicit (exception) list item.",
      "type": "object",
      "properties": {
        "explicitListItem": {
          "description": "The explicit list item.",
          "type": "string"
        }
      }
    },
    "PatternRuleCreateObject": {
      "description": "Object model for creating a pattern",
      "type": "object",
      "properties": {
        "pattern": {
          "description": "The pattern text.",
          "type": "string"
        },
        "intent": {
          "description": "The intent's name which the pattern belongs to.",
          "type": "string"
        }
      }
    },
    "PatternRuleUpdateObject": {
      "description": "Object model for updating a pattern.",
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "description": "The pattern ID.",
          "type": "string"
        },
        "pattern": {
          "description": "The pattern text.",
          "type": "string"
        },
        "intent": {
          "description": "The intent's name which the pattern belongs to.",
          "type": "string"
        }
      }
    },
    "RegexEntityExtractor": {
      "description": "Regular Expression Entity Extractor.",
      "type": "object",
      "x-ms-discriminator-value": "Regex Entity Extractor",
      "allOf": [
        {
          "$ref": "#/definitions/ModelInfo"
        },
        {
          "$ref": "#/definitions/EntityModelInfo"
        }
      ],
      "properties": {
        "regexPattern": {
          "description": "The Regular Expression entity pattern.",
          "type": "string"
        }
      }
    },
    "RegexEntityExtractorList": {
      "description": "List of Regular Expression Entity Extractors.",
      "type": "array",
      "items": {
        "$ref": "#/definitions/RegexEntityExtractor"
      }
    },
    "PatternAnyEntityExtractor": {
      "description": "Pattern.Any Entity Extractor.",
      "type": "object",
      "x-ms-discriminator-value": "Pattern.Any Entity Extractor",
      "allOf": [
        {
          "$ref": "#/definitions/ModelInfo"
        },
        {
          "$ref": "#/definitions/EntityModelInfo"
        }
      ],
      "properties": {
        "explicitList": {
          "$ref": "#/definitions/ExplicitListItemList"
        }
      }
    },
    "PatternAnyEntityExtractorList": {
      "description": "List of Pattern.Any Entity Extractors.",
      "type": "array",
      "items": {
        "$ref": "#/definitions/PatternAnyEntityExtractor"
      }
    },
    "EntityRole": {
      "description": "Entity extractor role",
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "description": "The entity role ID.",
          "type": "string"
        },
        "name": {
          "description": "The entity role name.",
          "type": "string"
        }
      }
    },
    "EntityRoleList": {
      "description": "List of Pattern.Any Entity Extractors.",
      "type": "array",
      "items": {
        "$ref": "#/definitions/EntityRole"
      }
    },
    "ExplicitListItem": {
      "description": "Explicit (exception) list item",
      "type": "object",
      "properties": {
        "id": {
          "format": "int64",
          "description": "The explicit list item ID.",
          "type": "integer"
        },
        "explicitListItem": {
          "description": "The explicit list item value.",
          "type": "string"
        }
      }
    },
    "ExplicitListItemList": {
      "description": "List of explicit (exception) list items",
      "type": "array",
      "items": {
        "$ref": "#/definitions/ExplicitListItem"
      }
    },
    "ExplicitListItemIDResponse": {
      "description": "The ID of the created explicit list item.",
      "type": "integer",
      "x-nullable": false
    },
    "PatternRuleInfo": {
      "description": "Pattern rule",
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "description": "The pattern ID.",
          "type": "string"
        },
        "pattern": {
          "description": "The pattern text.",
          "type": "string"
        },
        "intent": {
          "description": "The intent's name where the pattern belongs to.",
          "type": "string"
        }
      }
    },
    "PatternRuleList": {
      "description": "List of patterns",
      "type": "array",
      "items": {
        "$ref": "#/definitions/PatternRuleInfo"
      }
    },
    "ExamplesPerModelResponseObject": {
      "description": "A list of example utterances per model.",
      "type": "array",
      "items": {
        "$ref": "#/definitions/LabelTextObject"
      }
    },
    "LabelTextObject": {
      "description": "An object containing the example utterance's text.",
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "The ID of the Label."
        },
        "text": {
          "type": "string",
          "description": "The text of the label."
        }
      }
    },
    "FeaturesPerModelResponseObject": {
      "description": "A list of feature information objects per model.",
      "type": "array",
      "items": {
        "$ref": "#/definitions/ModelFeatureInformation"
      }
    },
    "ModelFeatureInformation": {
      "description": "An object containing the model feature information either the model name or feature name.",
      "type": "object",
      "properties": {
        "modelName": {
          "type": "string",
          "description": "The name of the model used."
        },
        "featureName": {
          "type": "string",
          "description": "The name of the feature used."
        },
        "isRequired": {
          "type": "boolean"
        }
      }
    },
    "JsonModelFeatureInformation": {
      "description": "An object containing the model feature information either the model name or feature name.",
      "type": "object",
      "properties": {
        "modelName": {
          "type": "string",
          "description": "The name of the model used."
        },
        "featureName": {
          "type": "string",
          "description": "The name of the feature used."
        }
      }
    },
    "PatternAny": {
      "description": "Pattern.Any Entity Extractor.",
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "explicitList": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "roles": {
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      }
    },
    "RegexEntity": {
      "description": "Regular Expression Entity Extractor.",
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "regexPattern": {
          "type": "string"
        },
        "roles": {
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      }
    },
    "PrebuiltEntity": {
      "description": "Prebuilt Entity Extractor.",
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "roles": {
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      }
    },
    "PatternRule": {
      "description": "Pattern",
      "type": "object",
      "properties": {
        "pattern": {
          "description": "The pattern text.",
          "type": "string"
        },
        "intent": {
          "description": "The intent's name where the pattern belongs to.",
          "type": "string"
        }
      }
    },
    "AppVersionSettingObject": {
      "description": "Object model of an application version setting.",
      "type": "object",
      "properties": {
        "name": {
          "description": "The application version setting name.",
          "type": "string"
        },
        "value": {
          "description": "The application version setting value.",
          "type": "string"
        }
      }
    },
    "AzureAccountInfoList": {
      "description": "List of Azure account info objects.",
      "type": "array",
      "items": {
        "$ref": "#/definitions/AzureAccountInfoObject"
      }
    },
    "AzureAccountInfoObject": {
      "description": "Defines the Azure account information object.",
      "type": "object",
      "required": [
        "azureSubscriptionId",
        "resourceGroup",
        "accountName"
      ],
      "properties": {
        "azureSubscriptionId": {
          "description": "The id for the Azure subscription.",
          "type": "string"
        },
        "resourceGroup": {
          "description": "The Azure resource group name.",
          "type": "string"
        },
        "accountName": {
          "description": "The Azure account name.",
          "type": "string"
        }
      }
    }
  },
  "parameters": {
    "AppIdInPath": {
      "name": "appId",
      "in": "path",
      "required": true,
      "type": "string",
      "format": "uuid",
      "description": "The application ID.",
      "x-ms-parameter-location": "method"
    },
    "VersionIdInPath": {
      "name": "versionId",
      "in": "path",
      "description": "The version ID.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "CEntityIdInPath": {
      "name": "cEntityId",
      "in": "path",
      "description": "The composite entity extractor ID.",
      "required": true,
      "type": "string",
      "format": "uuid",
      "x-ms-parameter-location": "method"
    },
    "HEntityIdInPath": {
      "name": "hEntityId",
      "in": "path",
      "description": "The hierarchical entity extractor ID.",
      "required": true,
      "type": "string",
      "format": "uuid",
      "x-ms-parameter-location": "method"
    },
    "IntentIdInPath": {
      "name": "intentId",
      "in": "path",
      "description": "The intent classifier ID.",
      "required": true,
      "type": "string",
      "format": "uuid",
      "x-ms-parameter-location": "method"
    },
    "EntityIdInPath": {
      "name": "entityId",
      "in": "path",
      "description": "The entity extractor ID.",
      "required": true,
      "type": "string",
      "format": "uuid",
      "x-ms-parameter-location": "method"
    },
    "SlotNameInPath": {
      "name": "slotName",
      "in": "path",
      "description": "The publishing slot name.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "SkipInPath": {
      "name": "skip",
      "in": "query",
      "description": "The number of entries to skip. Default value is 0.",
      "type": "integer",
      "default": 0,
      "minimum": 0,
      "x-ms-parameter-location": "method"
    },
    "TakeInPath": {
      "name": "take",
      "in": "query",
      "description": "The number of entries to return. Maximum page size is 500. Default is 100.",
      "type": "integer",
      "default": 100,
      "minimum": 0,
      "maximum": 500,
      "x-ms-parameter-location": "method"
    },
    "ForcePath": {
      "name": "force",
      "in": "query",
      "description": "A flag to indicate whether to force an operation.",
      "type": "boolean",
      "default": false,
      "x-ms-parameter-location": "method"
    },
    "BearerAuthPath": {
      "name": "Authorization",
      "in": "header",
      "description": "The bearer authorization header to use; containing the user's ARM token used to validate Azure accounts information.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "ArmTokenParamter": {
      "in": "header",
      "name": "ArmToken",
      "required": false,
      "description": "The custom arm token header to use; containing the user's ARM token used to validate azure accounts information.",
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "Endpoint": {
      "name": "Endpoint",
      "description": "Supported Cognitive Services endpoints (protocol and hostname, for example: https://westus.api.cognitive.microsoft.com).",
      "x-ms-parameter-location": "client",
      "required": true,
      "type": "string",
      "in": "path",
      "x-ms-skip-url-encoding": true
    },
    "EnableNestedChildren": {
      "name": "enableNestedChildren",
      "in": "query",
      "type": "boolean",
      "default": false,
      "description": "Toggles nested/flat format",
      "x-ms-parameter-location": "method"
    }
  }
}
