{
  "swagger": "2.0",
  "info": {
    "title": "LUIS Authoring Client",
    "version": "2.0"
  },
  "x-ms-parameterized-host": {
    "hostTemplate": "{Endpoint}/luis/api/v2.0",
    "useSchemePrefix": false,
    "parameters": [
      {
        "$ref": "#/parameters/Endpoint"
      }
    ]
  },
  "paths": {
    "/apps/{appId}/versions/{versionId}/patterns": {
      "post": {
        "description": "[DEPRECATED NOTICE: This operation will soon be removed] Creates a new pattern feature.",
        "operationId": "Features_CreatePatternFeature",
        "deprecated": true,
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "name": "patternCreateObject",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PatternCreateObject"
            },
            "description": "The Name and Pattern of the feature."
          },
          {
            "$ref": "#/parameters/ApiKey"
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "The ID of the created feature.",
            "schema": {
              "$ref": "#/definitions/FeatureIDResponse"
            }
          },
          "400": {
            "description": "This error can be returned if the request's parameters are incorrect meaning the required parameters are missing, malformed, or too large.\r\n\r\nThis error can be returned if the request's body is incorrect meaning the JSON is missing, malformed, or too large. \r\n\r\nSpecific reasons you can receive this error:\r\n\r\n* REGEX pattern is too complex\r\n",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "429": {
            "$ref": "#/responses/429"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Create Pattern Feature request": {
            "$ref": "./examples/features/CreatePatternFeatureRequest.json"
          }
        }
      },
      "get": {
        "description": "[DEPRECATED NOTICE: This operation will soon be removed] Gets all the pattern features.",
        "operationId": "Features_GetApplicationVersionPatternFeatures",
        "deprecated": true,
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "$ref": "#/parameters/SkipInPath"
          },
          {
            "$ref": "#/parameters/TakeInPath"
          },
          {
            "$ref": "#/parameters/ApiKey"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of pattern features.",
            "schema": {
              "$ref": "#/definitions/PatternFeatureInfoList"
            }
          },
          "429": {
            "$ref": "#/responses/429"
          },
          "400": {
            "description": "This error can be returned if the request's parameters are incorrect meaning the required parameters are missing, malformed, or too large.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Get Application Version Pattern Features request": {
            "$ref": "./examples/features/GetApplicationVersionPatternFeaturesRequest.json"
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/phraselists": {
      "post": {
        "description": "Creates a new phraselist feature.",
        "operationId": "Features_AddPhraseList",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "name": "phraselistCreateObject",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PhraselistCreateObject"
            },
            "description": "A Phraselist object containing Name, comma-separated Phrases and the isExchangeable boolean. Default value for isExchangeable is true."
          },
          {
            "$ref": "#/parameters/ApiKey"
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "The ID of the created feature.",
            "schema": {
              "$ref": "#/definitions/FeatureIDResponse"
            }
          },
          "429": {
            "$ref": "#/responses/429"
          },
          "400": {
            "description": "This error can be returned if the request's parameters are incorrect meaning the required parameters are missing, malformed, or too large.\r\n\r\nThis error can be returned if the request's body is incorrect meaning the JSON is missing, malformed, or too large.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Create Phraselist Feature request": {
            "$ref": "./examples/features/CreatePhraselistFeatureRequest.json"
          }
        }
      },
      "get": {
        "description": "Gets all the phraselist features.",
        "operationId": "Features_ListPhraseLists",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "$ref": "#/parameters/SkipInPath"
          },
          {
            "$ref": "#/parameters/TakeInPath"
          },
          {
            "$ref": "#/parameters/ApiKey"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of all phraselist features.",
            "schema": {
              "$ref": "#/definitions/PhraseListFeatureInfoList"
            }
          },
          "429": {
            "$ref": "#/responses/429"
          },
          "400": {
            "description": "This error can be returned if the request's parameters are incorrect meaning the required parameters are missing, malformed, or too large.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Get Application Version Phraselist Features request": {
            "$ref": "./examples/features/GetApplicationVersionPhraselistFeaturesRequest.json"
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/features": {
      "get": {
        "description": "Gets all the extraction features for the specified application version.",
        "operationId": "Features_List",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "$ref": "#/parameters/SkipInPath"
          },
          {
            "$ref": "#/parameters/TakeInPath"
          },
          {
            "$ref": "#/parameters/ApiKey"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of all phraselist features and a list of all pattern features.",
            "schema": {
              "$ref": "#/definitions/FeaturesResponseObject"
            }
          },
          "429": {
            "$ref": "#/responses/429"
          },
          "400": {
            "description": "This error can be returned if the request's parameters are incorrect meaning the required parameters are missing, malformed, or too large.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Get Application Version Features request": {
            "$ref": "./examples/features/GetApplicationVersionFeaturesRequest.json"
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/patterns/{patternId}": {
      "get": {
        "description": "[DEPRECATED NOTICE: This operation will soon be removed] Gets the specified pattern feature's info.",
        "operationId": "Features_GetPatternFeatureInfo",
        "deprecated": true,
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "name": "patternId",
            "in": "path",
            "description": "The pattern feature ID.",
            "required": true,
            "type": "integer"
          },
          {
            "$ref": "#/parameters/ApiKey"
          }
        ],
        "responses": {
          "200": {
            "description": "The pattern feature info.",
            "schema": {
              "$ref": "#/definitions/PatternFeatureInfo"
            }
          },
          "429": {
            "$ref": "#/responses/429"
          },
          "400": {
            "description": "This error can be returned if the request's parameters are incorrect meaning the required parameters are missing, malformed, or too large.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Get Pattern Feature Info request": {
            "$ref": "./examples/features/GetPatternFeatureInfoRequest.json"
          }
        }
      },
      "put": {
        "description": "[DEPRECATED NOTICE: This operation will soon be removed] Updates the pattern, the name and the state of the pattern feature.",
        "operationId": "Features_UpdatePatternFeature",
        "deprecated": true,
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "name": "patternId",
            "in": "path",
            "description": "The pattern feature ID.",
            "required": true,
            "type": "integer"
          },
          {
            "name": "patternUpdateObject",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PatternUpdateObject"
            },
            "description": "The new values for: - Just a boolean called IsActive, in which case the status of the feature will be changed. - Name, Pattern and a boolean called IsActive to update the feature."
          },
          {
            "$ref": "#/parameters/ApiKey"
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation.",
            "schema": {
              "$ref": "#/definitions/OperationStatus"
            }
          },
          "429": {
            "$ref": "#/responses/429"
          },
          "400": {
            "description": "This error can be returned if the request's parameters are incorrect meaning the required parameters are missing, malformed, or too large.\r\n\r\nThis error can be returned if the request's body is incorrect meaning the JSON is missing, malformed, or too large.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          }
        },
        "x-ms-examples": {
          "Update Pattern Feature Info request": {
            "$ref": "./examples/features/UpdatePatternFeatureInfoRequest.json"
          }
        }
      },
      "delete": {
        "description": "[DEPRECATED NOTICE: This operation will soon be removed] Deletes a pattern feature.",
        "operationId": "Features_DeletePatternFeature",
        "deprecated": true,
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "name": "patternId",
            "in": "path",
            "description": "The pattern feature ID.",
            "required": true,
            "type": "integer"
          },
          {
            "$ref": "#/parameters/ApiKey"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation.",
            "schema": {
              "$ref": "#/definitions/OperationStatus"
            }
          },
          "429": {
            "$ref": "#/responses/429"
          },
          "400": {
            "description": "This error can be returned if the request's parameters are incorrect meaning the required parameters are missing or malformed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Delete Pattern Feature Info request": {
            "$ref": "./examples/features/DeletePatternFeatureInfoRequest.json"
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/phraselists/{phraselistId}": {
      "get": {
        "description": "Gets phraselist feature info.",
        "operationId": "Features_GetPhraseList",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "name": "phraselistId",
            "in": "path",
            "description": "The ID of the feature to be retrieved.",
            "required": true,
            "type": "integer"
          },
          {
            "$ref": "#/parameters/ApiKey"
          }
        ],
        "responses": {
          "200": {
            "description": "A phraselist feature info.",
            "schema": {
              "$ref": "#/definitions/PhraseListFeatureInfo"
            }
          },
          "429": {
            "$ref": "#/responses/429"
          },
          "400": {
            "description": "This error can be returned if the request's parameters are incorrect meaning the required parameters are missing, malformed, or too large.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Get Phraselist Feature Info request": {
            "$ref": "./examples/features/GetPhraselistFeatureInfoRequest.json"
          }
        }
      },
      "put": {
        "description": "Updates the phrases, the state and the name of the phraselist feature.",
        "operationId": "Features_UpdatePhraseList",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "name": "phraselistId",
            "in": "path",
            "description": "The ID of the feature to be updated.",
            "required": true,
            "type": "integer"
          },
          {
            "name": "phraselistUpdateObject",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/PhraselistUpdateObject"
            },
            "description": "The new values for: - Just a boolean called IsActive, in which case the status of the feature will be changed. - Name, Pattern, Mode, and a boolean called IsActive to update the feature."
          },
          {
            "$ref": "#/parameters/ApiKey"
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successfully updated phraselist.",
            "schema": {
              "$ref": "#/definitions/OperationStatus"
            }
          },
          "429": {
            "$ref": "#/responses/429"
          },
          "400": {
            "description": "This error can be returned if the request's parameters are incorrect meaning the required parameters are missing, malformed, or too large.\r\n\r\nThis error can be returned if the request's body is incorrect meaning the JSON is missing, malformed, or too large.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Update Phraselist Feature Info request": {
            "$ref": "./examples/features/UpdatePhraselistFeatureInfoRequest.json"
          }
        }
      },
      "delete": {
        "description": "Deletes a phraselist feature.",
        "operationId": "Features_DeletePhraseList",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "name": "phraselistId",
            "in": "path",
            "description": "The ID of the feature to be deleted.",
            "required": true,
            "type": "integer"
          },
          {
            "$ref": "#/parameters/ApiKey"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted phraselist.",
            "schema": {
              "$ref": "#/definitions/OperationStatus"
            }
          },
          "429": {
            "$ref": "#/responses/429"
          },
          "400": {
            "description": "This error can be returned if the request's parameters are incorrect meaning the required parameters are missing or malformed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Delete Phraselist Feature Info request": {
            "$ref": "./examples/features/DeletePhraselistFeatureInfoRequest.json"
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/example": {
      "post": {
        "description": "Adds a labeled example to the application.",
        "operationId": "Examples_Add",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "name": "exampleLabelObject",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ExampleLabelObject"
            },
            "description": "An example label with the expected intent and entities."
          },
          {
            "$ref": "#/parameters/ApiKey"
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "The ID of the created example.",
            "schema": {
              "$ref": "#/definitions/LabelExampleResponse"
            }
          },
          "429": {
            "$ref": "#/responses/429"
          },
          "400": {
            "description": "This error can be returned if the request's parameters are incorrect meaning the required parameters are missing, malformed, or too large.\r\n\r\nThis error can be returned if the request's body is incorrect meaning the JSON is missing, malformed, or too large.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Add Label request": {
            "$ref": "./examples/examples/AddLabelRequest.json"
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/examples": {
      "post": {
        "description": "Adds a batch of labeled examples to the application.",
        "operationId": "Examples_Batch",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "name": "exampleLabelObjectArray",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ExampleLabelObjectArray"
            },
            "description": "Array of examples."
          },
          {
            "$ref": "#/parameters/ApiKey"
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "A string array determining which labels were added successfully.",
            "schema": {
              "$ref": "#/definitions/BatchLabelExampleResponse"
            }
          },
          "207": {
            "description": "Indicates that the request was partially successful. The response contains a string array indicating the status of each of the added labels.",
            "schema": {
              "$ref": "#/definitions/BatchLabelExampleResponse"
            }
          },
          "429": {
            "$ref": "#/responses/429"
          },
          "400": {
            "description": "This error can be returned if the request's parameters are incorrect meaning the required parameters are missing, malformed, or too large.\r\n\r\nThis error can be returned if the request's body is incorrect meaning the JSON is missing, malformed, or too large. \r\n\r\nThis error can be returned for several reasons: \r\n\r\n* too many items in batch\r\n* labeled examples list contains duplicates.\r\n* Item(s) includes intent that does not exist\r\n* item(s) include entity that does not exist\r\n* item(s) include prebuilt entity \r\n\r\nExamples of malformed JSON are:\r\n\r\n* incorrect use of a comma, for example a comma after the last item in the array\r\n* missing comma between property/value pairs\r\n* incorrect or missing colon between property and value\r\n* entityLabel array is present and has empty item in array {} without property or value\r\n",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "409": {
            "description": "This error can be returned if another \"Batch add labels\" was already in progress. Wait until the other operation finishes before starting a new one.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "403": {
            "$ref": "#/responses/403"
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Batch Add Labels request": {
            "$ref": "./examples/examples/BatchAddLabelsRequest.json"
          }
        }
      },
      "get": {
        "description": "Returns examples to be reviewed.",
        "operationId": "Examples_List",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "$ref": "#/parameters/SkipInPath"
          },
          {
            "$ref": "#/parameters/TakeInPath"
          },
          {
            "$ref": "#/parameters/ApiKey"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of predictions and label pairs for every example in the application.",
            "schema": {
              "$ref": "#/definitions/LabeledUtterances"
            }
          },
          "429": {
            "$ref": "#/responses/429"
          },
          "400": {
            "description": "This error can be returned if the request's parameters are incorrect meaning the required parameters are missing, malformed, or too large.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Review Labeled Examples request": {
            "$ref": "./examples/examples/ReviewLabeledExamplesRequest.json"
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/examples/{exampleId}": {
      "delete": {
        "description": "Deletes the labeled example with the specified ID.",
        "operationId": "Examples_Delete",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "name": "exampleId",
            "in": "path",
            "description": "The example ID.",
            "required": true,
            "type": "integer"
          },
          {
            "$ref": "#/parameters/ApiKey"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted example label.",
            "schema": {
              "$ref": "#/definitions/OperationStatus"
            }
          },
          "429": {
            "$ref": "#/responses/429"
          },
          "400": {
            "description": "This error can be returned if the request's parameters are incorrect meaning the required parameters are missing or malformed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Delete Example Label request": {
            "$ref": "./examples/examples/DeleteExampleLabelRequest.json"
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/intents": {
      "post": {
        "description": "Adds an intent classifier to the application.",
        "operationId": "Model_AddIntent",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "name": "intentCreateObject",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ModelCreateObject"
            },
            "description": "A model object containing the name of the new intent classifier."
          },
          {
            "$ref": "#/parameters/ApiKey"
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "The ID of the created model.",
            "x-nullable": false,
            "schema": {
              "$ref": "#/definitions/GuidResponse"
            }
          },
          "429": {
            "$ref": "#/responses/429"
          },
          "400": {
            "description": "This error can be returned if the request's parameters are incorrect meaning the required parameters are missing, malformed, or too large.\r\n    \r\nThis error can be returned if the request's body is incorrect meaning the JSON is missing, malformed, or too large. \r\n    \r\nThis error can be returned if you are attempting to create an intent when the max intent count is exceeded.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Create Intent Classifier request": {
            "$ref": "./examples/model/CreateIntentClassifierRequest.json"
          }
        }
      },
      "get": {
        "description": "Gets information about the intent models.",
        "operationId": "Model_ListIntents",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "$ref": "#/parameters/SkipInPath"
          },
          {
            "$ref": "#/parameters/TakeInPath"
          },
          {
            "$ref": "#/parameters/ApiKey"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of intent model infos.",
            "schema": {
              "$ref": "#/definitions/IntentClassifiersList"
            }
          },
          "429": {
            "$ref": "#/responses/429"
          },
          "400": {
            "description": "This error can be returned if the request's parameters are incorrect meaning the required parameters are missing, malformed, or too large.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Get Application Version Intent Infos request": {
            "$ref": "./examples/model/GetApplicationVersionIntentInfosRequest.json"
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/entities": {
      "post": {
        "description": "Adds an entity extractor to the application.",
        "operationId": "Model_AddEntity",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "name": "modelCreateObject",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ModelCreateObject"
            },
            "description": "A model object containing the name for the new entity extractor."
          },
          {
            "$ref": "#/parameters/ApiKey"
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "The ID of the created model.",
            "x-nullable": false,
            "schema": {
              "$ref": "#/definitions/GuidResponse"
            }
          },
          "429": {
            "$ref": "#/responses/429"
          },
          "400": {
            "description": "This error can be returned if the request's parameters are incorrect meaning the required parameters are missing, malformed, or too large.\r\n\r\nThis error can be returned if the request's body is incorrect meaning the JSON is missing, malformed, or too large. \r\n\r\nThis error can be returned if you are attempting to create an entity when the max entity count is exceeded.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Create Entity Extractor request": {
            "$ref": "./examples/model/CreateEntityExtractorRequest.json"
          }
        }
      },
      "get": {
        "description": "Gets information about the entity models.",
        "operationId": "Model_ListEntities",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "$ref": "#/parameters/SkipInPath"
          },
          {
            "$ref": "#/parameters/TakeInPath"
          },
          {
            "$ref": "#/parameters/ApiKey"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of entity model infos.",
            "schema": {
              "$ref": "#/definitions/EntityExtractorsList"
            }
          },
          "429": {
            "$ref": "#/responses/429"
          },
          "400": {
            "description": "This error can be returned if the request's parameters are incorrect meaning the required parameters are missing, malformed, or too large.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Get Application Version Entity Infos request": {
            "$ref": "./examples/model/GetApplicationVersionEntityInfosRequest.json"
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/hierarchicalentities": {
      "post": {
        "description": "Adds a hierarchical entity extractor to the application version.",
        "operationId": "Model_AddHierarchicalEntity",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "name": "hierarchicalModelCreateObject",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/HierarchicalEntityModel"
            },
            "description": "A model containing the name and children of the new entity extractor."
          },
          {
            "$ref": "#/parameters/ApiKey"
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "The ID of the created model.",
            "x-nullable": false,
            "schema": {
              "$ref": "#/definitions/GuidResponse"
            }
          },
          "429": {
            "$ref": "#/responses/429"
          },
          "400": {
            "description": "This error can be returned if the request's parameters are incorrect meaning the required parameters are missing, malformed, or too large.\r\n\r\nThis error can be returned if the request's body is incorrect meaning the JSON is missing, malformed, or too large. \r\n\r\nThis error can be returned if you are attempting to create a hierarchical entity when the max child count is exceeded.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Create Hierarchical Entity Extractor request": {
            "$ref": "./examples/model/CreateHierarchicalEntityExtractorRequest.json"
          }
        }
      },
      "get": {
        "description": "Gets information about the hierarchical entity models.",
        "operationId": "Model_ListHierarchicalEntities",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "$ref": "#/parameters/SkipInPath"
          },
          {
            "$ref": "#/parameters/TakeInPath"
          },
          {
            "$ref": "#/parameters/ApiKey"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of hierarchical entity model infos.",
            "schema": {
              "$ref": "#/definitions/HierarchicalEntityExtractorsList"
            }
          },
          "429": {
            "$ref": "#/responses/429"
          },
          "400": {
            "description": "This error can be returned if the request's parameters are incorrect meaning the required parameters are missing, malformed, or too large.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Get Application Version Hierarchical Entity Infos request": {
            "$ref": "./examples/model/GetApplicationVersionHierarchicalEntityInfosRequest.json"
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/compositeentities": {
      "post": {
        "description": "Adds a composite entity extractor to the application.",
        "operationId": "Model_AddCompositeEntity",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "name": "compositeModelCreateObject",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CompositeEntityModel"
            },
            "description": "A model containing the name and children of the new entity extractor."
          },
          {
            "$ref": "#/parameters/ApiKey"
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "The ID of the created Model.",
            "x-nullable": false,
            "schema": {
              "$ref": "#/definitions/GuidResponse"
            }
          },
          "429": {
            "$ref": "#/responses/429"
          },
          "400": {
            "description": "This error can be returned if the request's parameters are incorrect meaning the required parameters are missing, malformed, or too large.\r\n\r\nThis error can be returned if the request's body is incorrect meaning the JSON is missing, malformed, or too large. \r\n\r\nThis error can be returned if you are attempting to create a composite entity child when the max child count is exceeded.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Create Composite Entity Extractor": {
            "$ref": "./examples/model/CreateCompositeEntityExtractorRequest.json"
          }
        }
      },
      "get": {
        "description": "Gets information about the composite entity models.",
        "operationId": "Model_ListCompositeEntities",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "$ref": "#/parameters/SkipInPath"
          },
          {
            "$ref": "#/parameters/TakeInPath"
          },
          {
            "$ref": "#/parameters/ApiKey"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of composite entity model infos.",
            "schema": {
              "$ref": "#/definitions/CompositeEntityExtractorsList"
            }
          },
          "429": {
            "$ref": "#/responses/429"
          },
          "400": {
            "description": "This error can be returned if the request's parameters are incorrect meaning the required parameters are missing, malformed, or too large.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Get Application Version Composite Entity Infos request": {
            "$ref": "./examples/model/GetApplicationVersionCompositeEntityInfosRequest.json"
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/closedlists": {
      "get": {
        "description": "Gets information about the closedlist models.",
        "operationId": "Model_ListClosedLists",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "$ref": "#/parameters/SkipInPath"
          },
          {
            "$ref": "#/parameters/TakeInPath"
          },
          {
            "$ref": "#/parameters/ApiKey"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of closedlist entity model infos.",
            "schema": {
              "$ref": "#/definitions/ClosedListEntityExtractorsList"
            }
          },
          "429": {
            "$ref": "#/responses/429"
          },
          "400": {
            "description": "This error can be returned if the request's parameters are incorrect meaning the required parameters are missing, malformed, or too large.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Get Application Version Closed List Infos request": {
            "$ref": "./examples/model/GetApplicationVersionClosedListInfosRequest.json"
          }
        }
      },
      "post": {
        "description": "Adds a closed list model to the application.",
        "operationId": "Model_AddClosedList",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "name": "closedListModelCreateObject",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ClosedListModelCreateObject"
            },
            "description": "A model containing the name and words for the new closed list entity extractor."
          },
          {
            "$ref": "#/parameters/ApiKey"
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "The ID of the created model.",
            "x-nullable": false,
            "schema": {
              "$ref": "#/definitions/GuidResponse"
            }
          },
          "429": {
            "$ref": "#/responses/429"
          },
          "400": {
            "description": "This error can be returned if the request's parameters are incorrect meaning the required parameters are missing, malformed, or too large.\r\n  \r\nThis error can be returned if the request's body is incorrect meaning the JSON is missing, malformed, or too large. \r\n  \r\nThis error can be returned if you are attempting to create an entity list when the max sublist item count is already exceeded. The total item count across all sublists is 20,000.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Create Closed List Entity Model request": {
            "$ref": "./examples/model/CreateClosedListEntityModelRequest.json"
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/prebuilts": {
      "post": {
        "description": "Adds a list of prebuilt entity extractors to the application.",
        "operationId": "Model_AddPrebuilt",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "name": "prebuiltExtractorNames",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PrebuiltExtractorNames"
            },
            "description": "An array of prebuilt entity extractor names."
          },
          {
            "$ref": "#/parameters/ApiKey"
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "An array of the created prebuilt extractor infos.",
            "schema": {
              "$ref": "#/definitions/PrebuiltEntityExtractorsList"
            }
          },
          "429": {
            "$ref": "#/responses/429"
          },
          "400": {
            "description": "This error can be returned if the request's parameters are incorrect meaning the required parameters are missing, malformed, or too large.\r\n\r\nThis error can be returned if the request's body is incorrect meaning the JSON is missing, malformed, or too large.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Add Application Version Prebuilt Infos request": {
            "$ref": "./examples/model/AddApplicationVersionPrebuiltInfosRequest.json"
          }
        }
      },
      "get": {
        "description": "Gets information about the prebuilt entity models.",
        "operationId": "Model_ListPrebuilts",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "$ref": "#/parameters/SkipInPath"
          },
          {
            "$ref": "#/parameters/TakeInPath"
          },
          {
            "$ref": "#/parameters/ApiKey"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of prebuilt entity models infos.",
            "schema": {
              "$ref": "#/definitions/PrebuiltEntityExtractorsList"
            }
          },
          "429": {
            "$ref": "#/responses/429"
          },
          "400": {
            "description": "This error can be returned if the request's parameters are incorrect meaning the required parameters are missing, malformed, or too large.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Get Application Version Prebuilt Infos request": {
            "$ref": "./examples/model/GetApplicationVersionPrebuiltInfosRequest.json"
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/listprebuilts": {
      "get": {
        "description": "Gets all the available prebuilt entity extractors for the application.",
        "operationId": "Model_ListPrebuiltEntities",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "$ref": "#/parameters/ApiKey"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of the possible prebuilt entity extractors.",
            "schema": {
              "$ref": "#/definitions/AvailablePrebuiltEntityModels"
            }
          },
          "429": {
            "$ref": "#/responses/429"
          },
          "400": {
            "description": "This error can be returned if the request's parameters are incorrect meaning the required parameters are missing, malformed, or too large.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Get Available Prebuilt Entity Extractors request": {
            "$ref": "./examples/model/GetAvailablePrebuiltEntityExtractorsRequest.json"
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/models": {
      "get": {
        "description": "Gets information about the application version models.",
        "operationId": "Model_ListModels",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "$ref": "#/parameters/SkipInPath"
          },
          {
            "$ref": "#/parameters/TakeInPath"
          },
          {
            "$ref": "#/parameters/ApiKey"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of application model infos.",
            "schema": {
              "$ref": "#/definitions/ModelsInfoResponseObject"
            }
          },
          "429": {
            "$ref": "#/responses/429"
          },
          "400": {
            "description": "This error can be returned if the request's parameters are incorrect meaning the required parameters are missing, malformed, or too large.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Get Application Version Model Infos request": {
            "$ref": "./examples/model/GetApplicationVersionModelInfosRequest.json"
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/models/{modelId}/examples": {
      "get": {
        "description": "Gets the utterances for the given model in the given app version.",
        "operationId": "Model_Examples",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "name": "modelId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID (GUID) of the model.",
            "x-ms-parameter-location": "method"
          },
          {
            "$ref": "#/parameters/SkipInPath"
          },
          {
            "$ref": "#/parameters/TakeInPath"
          },
          {
            "$ref": "#/parameters/ApiKey"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of examples for the model.",
            "schema": {
              "$ref": "#/definitions/ExamplesPerModelResponseObject"
            }
          },
          "429": {
            "$ref": "#/responses/429"
          },
          "400": {
            "description": "This error can be returned if the request's parameters are incorrect meaning the required parameters are missing, malformed, or too large.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Get Examples Per Model Request": {
            "$ref": "./examples/model/GetExamplesPerModelRequest.json"
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/intents/{intentId}": {
      "get": {
        "description": "Gets information about the intent model.",
        "operationId": "Model_GetIntent",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "$ref": "#/parameters/IntentIdInPath"
          },
          {
            "$ref": "#/parameters/ApiKey"
          }
        ],
        "responses": {
          "200": {
            "description": "An intent model info.",
            "schema": {
              "$ref": "#/definitions/IntentClassifier"
            }
          },
          "429": {
            "$ref": "#/responses/429"
          },
          "400": {
            "description": "This error can be returned if the request's parameters are incorrect meaning the required parameters are missing, malformed, or too large.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Get Intent Info request": {
            "$ref": "./examples/model/GetIntentInfoRequest.json"
          }
        }
      },
      "put": {
        "description": "Updates the name of an intent classifier.",
        "operationId": "Model_UpdateIntent",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "$ref": "#/parameters/IntentIdInPath"
          },
          {
            "name": "modelUpdateObject",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ModelUpdateObject"
            },
            "description": "A model object containing the new intent classifier name."
          },
          {
            "$ref": "#/parameters/ApiKey"
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation.",
            "schema": {
              "$ref": "#/definitions/OperationStatus"
            }
          },
          "429": {
            "$ref": "#/responses/429"
          },
          "400": {
            "description": "This error can be returned if the request's parameters are incorrect meaning the required parameters are missing, malformed, or too large.\r\n\r\nThis error can be returned if the request's body is incorrect meaning the JSON is missing, malformed, or too large.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Rename Intent Model request": {
            "$ref": "./examples/model/RenameIntentModelRequest.json"
          }
        }
      },
      "delete": {
        "description": "Deletes an intent classifier from the application.",
        "operationId": "Model_DeleteIntent",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "$ref": "#/parameters/IntentIdInPath"
          },
          {
            "name": "deleteUtterances",
            "in": "query",
            "type": "boolean",
            "description": "Also delete the intent's utterances (true). Or move the utterances to the None intent (false - the default value).",
            "default": false
          },
          {
            "$ref": "#/parameters/ApiKey"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation.",
            "schema": {
              "$ref": "#/definitions/OperationStatus"
            }
          },
          "429": {
            "$ref": "#/responses/429"
          },
          "400": {
            "description": "This error can be returned if the request's parameters are incorrect meaning the required parameters are missing or malformed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Delete Intent Model request": {
            "$ref": "./examples/model/DeleteIntentModelRequest.json"
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/entities/{entityId}": {
      "get": {
        "description": "Gets information about the entity model.",
        "operationId": "Model_GetEntity",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "name": "entityId",
            "in": "path",
            "description": "The entity extractor ID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "$ref": "#/parameters/ApiKey"
          }
        ],
        "responses": {
          "200": {
            "description": "An entity model info.",
            "schema": {
              "$ref": "#/definitions/EntityExtractor"
            }
          },
          "429": {
            "$ref": "#/responses/429"
          },
          "400": {
            "description": "This error can be returned if the request's parameters are incorrect meaning the required parameters are missing, malformed, or too large.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Get Entity Info request": {
            "$ref": "./examples/model/GetEntityInfoRequest.json"
          }
        }
      },
      "put": {
        "description": "Updates the name of an entity extractor.",
        "operationId": "Model_UpdateEntity",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "name": "entityId",
            "in": "path",
            "description": "The entity extractor ID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "modelUpdateObject",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ModelUpdateObject"
            },
            "description": "A model object containing the new entity extractor name."
          },
          {
            "$ref": "#/parameters/ApiKey"
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successfully updated entity extractor name.",
            "schema": {
              "$ref": "#/definitions/OperationStatus"
            }
          },
          "429": {
            "$ref": "#/responses/429"
          },
          "400": {
            "description": "This error can be returned if the request's parameters are incorrect meaning the required parameters are missing, malformed, or too large.\r\n\r\nThis error can be returned if the request's body is incorrect meaning the JSON is missing, malformed, or too large.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Rename Entity Info request": {
            "$ref": "./examples/model/RenameEntityExtractorRequest.json"
          }
        }
      },
      "delete": {
        "description": "Deletes an entity extractor from the application.",
        "operationId": "Model_DeleteEntity",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "name": "entityId",
            "in": "path",
            "description": "The entity extractor ID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "$ref": "#/parameters/ApiKey"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted entity.",
            "schema": {
              "$ref": "#/definitions/OperationStatus"
            }
          },
          "429": {
            "$ref": "#/responses/429"
          },
          "400": {
            "description": "This error can be returned if the request's parameters are incorrect meaning the required parameters are missing or malformed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Delete Entity Info request": {
            "$ref": "./examples/model/DeleteEntityExtractorRequest.json"
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/hierarchicalentities/{hEntityId}": {
      "get": {
        "description": "Gets information about the hierarchical entity model.",
        "operationId": "Model_GetHierarchicalEntity",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "$ref": "#/parameters/HEntityIdInPath"
          },
          {
            "$ref": "#/parameters/ApiKey"
          }
        ],
        "responses": {
          "200": {
            "description": "A hierarchical entity model info.",
            "schema": {
              "$ref": "#/definitions/HierarchicalEntityExtractor"
            }
          },
          "429": {
            "$ref": "#/responses/429"
          },
          "400": {
            "description": "This error can be returned if the request's parameters are incorrect meaning the required parameters are missing, malformed, or too large.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Get Hierarchical Entity Info request": {
            "$ref": "./examples/model/GetHierarchicalEntityInfoRequest.json"
          }
        }
      },
      "put": {
        "description": "Updates the name and children of a hierarchical entity model.",
        "operationId": "Model_UpdateHierarchicalEntity",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "$ref": "#/parameters/HEntityIdInPath"
          },
          {
            "name": "hierarchicalModelUpdateObject",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/HierarchicalEntityModel"
            },
            "description": "Model containing names of the children of the hierarchical entity."
          },
          {
            "$ref": "#/parameters/ApiKey"
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation.",
            "schema": {
              "$ref": "#/definitions/OperationStatus"
            }
          },
          "429": {
            "$ref": "#/responses/429"
          },
          "400": {
            "description": "This error can be returned if the request's parameters are incorrect meaning the required parameters are missing, malformed, or too large.\r\n\r\nThis error can be returned if the request's body is incorrect meaning the JSON is missing, malformed, or too large.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Get Hierarchical Entity Info request": {
            "$ref": "./examples/model/UpdateHierarchicalEntityModelRequest.json"
          }
        }
      },
      "delete": {
        "description": "Deletes a hierarchical entity extractor from the application version.",
        "operationId": "Model_DeleteHierarchicalEntity",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "$ref": "#/parameters/HEntityIdInPath"
          },
          {
            "$ref": "#/parameters/ApiKey"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted entity.",
            "schema": {
              "$ref": "#/definitions/OperationStatus"
            }
          },
          "429": {
            "$ref": "#/responses/429"
          },
          "400": {
            "description": "This error can be returned if the request's parameters are incorrect meaning the required parameters are missing or malformed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Delete Hierarchical Entity Model request": {
            "$ref": "./examples/model/DeleteHierarchicalEntityModelRequest.json"
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/compositeentities/{cEntityId}": {
      "get": {
        "description": "Gets information about the composite entity model.",
        "operationId": "Model_GetCompositeEntity",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "$ref": "#/parameters/CEntityIdInPath"
          },
          {
            "$ref": "#/parameters/ApiKey"
          }
        ],
        "responses": {
          "200": {
            "description": "The composite entity model info.",
            "schema": {
              "$ref": "#/definitions/CompositeEntityExtractor"
            }
          },
          "429": {
            "$ref": "#/responses/429"
          },
          "400": {
            "description": "This error can be returned if the request's parameters are incorrect meaning the required parameters are missing, malformed, or too large.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Get Composite Entity Info request": {
            "$ref": "./examples/model/GetCompositeEntityInfoRequest.json"
          }
        }
      },
      "put": {
        "description": "Updates the composite entity extractor.",
        "operationId": "Model_UpdateCompositeEntity",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "$ref": "#/parameters/CEntityIdInPath"
          },
          {
            "name": "compositeModelUpdateObject",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CompositeEntityModel"
            },
            "description": "A model object containing the new entity extractor name and children."
          },
          {
            "$ref": "#/parameters/ApiKey"
          }
        ],
        "consumes": [
          "application/json"
        ],
        "x-ms-examples": {
          "Update Composite Entity Extractor request": {
            "$ref": "./examples/model/UpdateCompositeEntityModelRequest.json"
          }
        },
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successfully updated composite entity.",
            "schema": {
              "$ref": "#/definitions/OperationStatus"
            }
          },
          "429": {
            "$ref": "#/responses/429"
          },
          "400": {
            "description": "This error can be returned if the request's parameters are incorrect meaning the required parameters are missing, malformed, or too large.\r\n\r\nThis error can be returned if the request's body is incorrect meaning the JSON is missing, malformed, or too large. \r\n\r\nThis error can be returned if you are attempting to create a composite entity child when the max child count is exceeded.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          }
        }
      },
      "delete": {
        "description": "Deletes a composite entity extractor from the application.",
        "operationId": "Model_DeleteCompositeEntity",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "$ref": "#/parameters/CEntityIdInPath"
          },
          {
            "$ref": "#/parameters/ApiKey"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted composite entity.",
            "schema": {
              "$ref": "#/definitions/OperationStatus"
            }
          },
          "429": {
            "$ref": "#/responses/429"
          },
          "400": {
            "description": "This error can be returned if the request's parameters are incorrect meaning the required parameters are missing or malformed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Delete Entity Info request": {
            "$ref": "./examples/model/DeleteCompositeEntityModelRequest.json"
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/closedlists/{clEntityId}": {
      "get": {
        "description": "Gets information of a closed list model.",
        "operationId": "Model_GetClosedList",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "name": "clEntityId",
            "in": "path",
            "description": "The closed list model ID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "$ref": "#/parameters/ApiKey"
          }
        ],
        "responses": {
          "200": {
            "description": "The closed list model info.",
            "schema": {
              "$ref": "#/definitions/ClosedListEntityExtractor"
            }
          },
          "429": {
            "$ref": "#/responses/429"
          },
          "400": {
            "description": "This error can be returned if the request's parameters are incorrect meaning the required parameters are missing, malformed, or too large.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Get Closed List Entity Info request": {
            "$ref": "./examples/model/GetClosedListEntityInfoRequest.json"
          }
        }
      },
      "put": {
        "description": "Updates the closed list model.",
        "operationId": "Model_UpdateClosedList",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "name": "clEntityId",
            "in": "path",
            "description": "The closed list model ID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "closedListModelUpdateObject",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ClosedListModelUpdateObject"
            },
            "description": "The new entity name and words list."
          },
          {
            "$ref": "#/parameters/ApiKey"
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successfully updated Closed List name and words list.",
            "schema": {
              "$ref": "#/definitions/OperationStatus"
            }
          },
          "429": {
            "$ref": "#/responses/429"
          },
          "400": {
            "description": "This error can be returned if the request's parameters are incorrect meaning the required parameters are missing, malformed, or too large.\r\n\r\nThis error can be returned if the request's body is incorrect meaning the JSON is missing, malformed, or too large.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Update Closed List Entity Info request": {
            "$ref": "./examples/model/UpdateClosedListEntityModelRequest.json"
          }
        }
      },
      "patch": {
        "description": "Adds a batch of sublists to an existing closedlist.",
        "operationId": "Model_PatchClosedList",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "name": "clEntityId",
            "in": "path",
            "description": "The closed list model ID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "closedListModelPatchObject",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ClosedListModelPatchObject"
            },
            "description": "A words list batch."
          },
          {
            "$ref": "#/parameters/ApiKey"
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successfully added sublists to Closed List.",
            "schema": {
              "$ref": "#/definitions/OperationStatus"
            }
          },
          "429": {
            "$ref": "#/responses/429"
          },
          "400": {
            "description": "This error can be returned if the request's parameters are incorrect meaning the required parameters are missing, malformed, or too large.\r\n\r\nThis error can be returned if the request's body is incorrect meaning the JSON is missing, malformed, or too large. \r\n\r\nThis error can be returned if the sublist is already in the closed list.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Add SubLists to Closed List Entity request": {
            "$ref": "./examples/model/PatchClosedListEntityModelRequest.json"
          }
        }
      },
      "delete": {
        "description": "Deletes a closed list model from the application.",
        "operationId": "Model_DeleteClosedList",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "name": "clEntityId",
            "in": "path",
            "description": "The closed list model ID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "$ref": "#/parameters/ApiKey"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully delete Closed List from application.",
            "schema": {
              "$ref": "#/definitions/OperationStatus"
            }
          },
          "429": {
            "$ref": "#/responses/429"
          },
          "400": {
            "description": "This error can be returned if the request's parameters are incorrect meaning the required parameters are missing or malformed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Delete Closed List Entity Info request": {
            "$ref": "./examples/model/DeleteClosedListEntityModelRequest.json"
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/prebuilts/{prebuiltId}": {
      "get": {
        "description": "Gets information about the prebuilt entity model.",
        "operationId": "Model_GetPrebuilt",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "name": "prebuiltId",
            "in": "path",
            "description": "The prebuilt entity extractor ID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "$ref": "#/parameters/ApiKey"
          }
        ],
        "responses": {
          "200": {
            "description": "A prebuilt entity models info.",
            "schema": {
              "$ref": "#/definitions/PrebuiltEntityExtractor"
            }
          },
          "429": {
            "$ref": "#/responses/429"
          },
          "400": {
            "description": "This error can be returned if the request's parameters are incorrect meaning the required parameters are missing, malformed, or too large.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Get Prebuilt Info request": {
            "$ref": "./examples/model/GetPrebuiltInfoRequest.json"
          }
        }
      },
      "delete": {
        "description": "Deletes a prebuilt entity extractor from the application.",
        "operationId": "Model_DeletePrebuilt",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "name": "prebuiltId",
            "in": "path",
            "description": "The prebuilt entity extractor ID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "$ref": "#/parameters/ApiKey"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation.",
            "schema": {
              "$ref": "#/definitions/OperationStatus"
            }
          },
          "429": {
            "$ref": "#/responses/429"
          },
          "400": {
            "description": "This error can be returned if the request's parameters are incorrect meaning the required parameters are missing or malformed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Get Prebuilt Info request": {
            "$ref": "./examples/model/DeletePrebuiltEntityRequest.json"
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/closedlists/{clEntityId}/sublists/{subListId}": {
      "delete": {
        "description": "Deletes a sublist of a specific closed list model.",
        "operationId": "Model_DeleteSubList",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "name": "clEntityId",
            "in": "path",
            "description": "The closed list entity extractor ID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "subListId",
            "in": "path",
            "description": "The sublist ID.",
            "required": true,
            "type": "integer"
          },
          {
            "$ref": "#/parameters/ApiKey"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted sublist.",
            "schema": {
              "$ref": "#/definitions/OperationStatus"
            }
          },
          "429": {
            "$ref": "#/responses/429"
          },
          "400": {
            "description": "This error can be returned if the request's parameters are incorrect meaning the required parameters are missing or malformed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Delete Sublist request": {
            "$ref": "./examples/model/DeleteSublistRequest.json"
          }
        }
      },
      "put": {
        "description": "Updates one of the closed list's sublists.",
        "operationId": "Model_UpdateSubList",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "name": "clEntityId",
            "in": "path",
            "description": "The closed list entity extractor ID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "subListId",
            "in": "path",
            "description": "The sublist ID.",
            "required": true,
            "type": "integer"
          },
          {
            "name": "wordListBaseUpdateObject",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WordListBaseUpdateObject"
            },
            "description": "A sublist update object containing the new canonical form and the list of words."
          },
          {
            "$ref": "#/parameters/ApiKey"
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successfully updated sublist.",
            "schema": {
              "$ref": "#/definitions/OperationStatus"
            }
          },
          "429": {
            "$ref": "#/responses/429"
          },
          "400": {
            "description": "This error can be returned if the request's parameters are incorrect meaning the required parameters are missing, malformed, or too large.\r\n\r\nThis error can be returned if the request's body is incorrect meaning the JSON is missing, malformed, or too large.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Update Sublist request": {
            "$ref": "./examples/model/UpdateSublistRequest.json"
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/intents/{intentId}/suggest": {
      "get": {
        "description": "Suggests examples that would improve the accuracy of the intent model.",
        "operationId": "Model_GetIntentSuggestions",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "$ref": "#/parameters/IntentIdInPath"
          },
          {
            "$ref": "#/parameters/TakeInPath"
          },
          {
            "$ref": "#/parameters/ApiKey"
          }
        ],
        "responses": {
          "200": {
            "description": "If there's no trained model, nothing is returned in the response. If there's a trained model and the active learning algorithm finds any relevant queries, they are returned with the model predictions. If there's a trained model but the active learning algorithm didn't find any relevant queries, an empty list is returned in the response.",
            "schema": {
              "$ref": "#/definitions/IntentsSuggestionExamples"
            }
          },
          "400": {
            "description": "This error can be returned if the request's parameters are incorrect meaning the required parameters are missing, malformed, or too large.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "429": {
            "$ref": "#/responses/429"
          },
          "403": {
            "$ref": "#/responses/403"
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Get Intents Suggestion Examples": {
            "$ref": "./examples/model/GetIntentsSuggestionExamples.json"
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/entities/{entityId}/suggest": {
      "get": {
        "description": "Get suggestion examples that would improve the accuracy of the entity model.",
        "operationId": "Model_GetEntitySuggestions",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "name": "entityId",
            "in": "path",
            "description": "The target entity extractor model to enhance.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "$ref": "#/parameters/TakeInPath"
          },
          {
            "$ref": "#/parameters/ApiKey"
          }
        ],
        "responses": {
          "200": {
            "description": "If there's no trained model, nothing is returned in the response. If there's a trained model and the active learning algorithm finds any relevant queries, they are returned with the model predictions. If there's a trained model but the active learning algorithm didn't find any relevant queries, an empty list is returned in the response.",
            "schema": {
              "$ref": "#/definitions/EntitiesSuggestionExamples"
            }
          },
          "429": {
            "$ref": "#/responses/429"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "400": {
            "description": "This error can be returned if the request's parameters are incorrect meaning the required parameters are missing, malformed, or too large.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "403": {
            "$ref": "#/responses/403"
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Get Entity Suggestion Examples": {
            "$ref": "./examples/model/GetEntitySuggestionExamples.json"
          }
        }
      }
    },
    "/apps/": {
      "post": {
        "description": "Creates a new LUIS app.",
        "operationId": "Apps_Add",
        "parameters": [
          {
            "name": "applicationCreateObject",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ApplicationCreateObject"
            },
            "description": "A model containing Name, Description (optional), Culture, Usage Scenario (optional), Domain (optional) and initial version ID (optional) of the application. Default value for the version ID is 0.1. Note: the culture cannot be changed after the app is created."
          },
          {
            "$ref": "#/parameters/ApiKey"
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "The ID of the created application.",
            "x-nullable": false,
            "schema": {
              "$ref": "#/definitions/GuidResponse"
            }
          },
          "429": {
            "$ref": "#/responses/429"
          },
          "400": {
            "description": "This error can be returned if the request's parameters are incorrect meaning the required parameters are missing, malformed, or too large.\r\n\r\nThis error can be returned if the request's body is incorrect meaning the JSON is missing, malformed, or too large.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Application Creation": {
            "$ref": "./examples/apps/AddApplicationRequest.json"
          }
        }
      },
      "get": {
        "description": "Lists all of the user applications.",
        "operationId": "Apps_List",
        "parameters": [
          {
            "$ref": "#/parameters/SkipInPath"
          },
          {
            "$ref": "#/parameters/TakeInPath"
          },
          {
            "$ref": "#/parameters/ApiKey"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of the user applications.",
            "schema": {
              "$ref": "#/definitions/ApplicationsInfoList"
            }
          },
          "429": {
            "$ref": "#/responses/429"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "400": {
            "description": "This error can be returned if the request's parameters are incorrect meaning the required parameters are missing, malformed, or too large.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "403": {
            "$ref": "#/responses/403"
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "$ref": "./examples/apps/GetApplicationsListRequest.json"
        }
      }
    },
    "/apps/import": {
      "post": {
        "description": "Imports an application to LUIS, the application's structure should be included in in the request body.",
        "operationId": "Apps_Import",
        "parameters": [
          {
            "name": "appName",
            "in": "query",
            "description": "The application name to create. If not specified, the application name will be read from the imported object.",
            "type": "string"
          },
          {
            "name": "luisApp",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LuisApp"
            },
            "description": "A LUIS application structure."
          },
          {
            "$ref": "#/parameters/ApiKey"
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "The ID of the imported application.",
            "x-nullable": false,
            "schema": {
              "$ref": "#/definitions/GuidResponse"
            }
          },
          "429": {
            "$ref": "#/responses/429"
          },
          "400": {
            "description": "This error can be returned if the request's parameters are incorrect meaning the required parameters are missing, malformed, or too large.\r\n\r\nThis error can be returned if the request's body is incorrect meaning the JSON is missing, malformed, or too large. \r\n\r\nThis error is returned is your import JSON is incorrect. This is usual due to using values in the JSON that are no longer used or missing properties that are required. The error message will reference the exact property that is causing the problem.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Import Application": {
            "$ref": "./examples/apps/ImportApplicationRequest.json"
          }
        }
      }
    },
    "/apps/assistants": {
      "get": {
        "description": "Gets the endpoint URLs for the prebuilt Cortana applications.",
        "operationId": "Apps_ListCortanaEndpoints",
        "parameters": [
          {
            "$ref": "#/parameters/ApiKey"
          }
        ],
        "responses": {
          "200": {
            "description": "A personal assistant apps JSON object containing the endpoint URLs for Cortana applications and the user's endpoint keys.",
            "schema": {
              "$ref": "#/definitions/PersonalAssistantsResponse"
            }
          },
          "429": {
            "$ref": "#/responses/429"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Get Personal Assistant Applications": {
            "$ref": "./examples/apps/GetPersonalAssistantApplications.json"
          }
        }
      }
    },
    "/apps/domains": {
      "get": {
        "description": "Gets the available application domains.",
        "operationId": "Apps_ListDomains",
        "parameters": [
          {
            "$ref": "#/parameters/ApiKey"
          }
        ],
        "responses": {
          "200": {
            "description": "A list object containing the available application domains.",
            "schema": {
              "$ref": "#/definitions/AvailableDomains"
            }
          },
          "429": {
            "$ref": "#/responses/429"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Get Application Domains request": {
            "$ref": "./examples/apps/GetApplicationDomainsRequest.json"
          }
        }
      }
    },
    "/apps/usagescenarios": {
      "get": {
        "description": "Gets the application available usage scenarios.",
        "operationId": "Apps_ListUsageScenarios",
        "parameters": [
          {
            "$ref": "#/parameters/ApiKey"
          }
        ],
        "responses": {
          "200": {
            "description": "A list object containing the available application usage scenarios.",
            "schema": {
              "$ref": "#/definitions/ApplicationUsageScenarios"
            }
          },
          "429": {
            "$ref": "#/responses/429"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Get Application Usage Scenarios request": {
            "$ref": "./examples/apps/GetApplicationUsageScenariosListRequest.json"
          }
        }
      }
    },
    "/apps/cultures": {
      "get": {
        "description": "Gets the supported application cultures.",
        "operationId": "Apps_ListSupportedCultures",
        "parameters": [
          {
            "$ref": "#/parameters/ApiKey"
          }
        ],
        "responses": {
          "200": {
            "description": "A list object containing the supported application cultures.",
            "schema": {
              "$ref": "#/definitions/AvailableCultures"
            }
          },
          "429": {
            "$ref": "#/responses/429"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Get Application Cultures request": {
            "$ref": "./examples/apps/GetApplicationCulturesRequest.json"
          }
        }
      }
    },
    "/apps/{appId}/querylogs": {
      "get": {
        "description": "Gets the query logs of the past month for the application.",
        "operationId": "Apps_DownloadQueryLogs",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/ApiKey"
          }
        ],
        "responses": {
          "200": {
            "description": "A CSV file containing the query logs for the past month.",
            "schema": {
              "type": "object",
              "format": "file",
              "description": "The query logs of an application for the past month in CSV format."
            }
          },
          "429": {
            "$ref": "#/responses/429"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "400": {
            "description": "This error can be returned if the request's parameters are incorrect meaning the required parameters are missing, malformed, or too large.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "403": {
            "$ref": "#/responses/403"
          }
        },
        "produces": [
          "application/octet-stream",
          "application/json"
        ],
        "x-ms-examples": {
          "Download Application Query logs request": {
            "$ref": "./examples/apps/DownloadApplicationQueryLogsRequest.json"
          }
        }
      }
    },
    "/apps/{appId}": {
      "get": {
        "description": "Gets the application info.",
        "operationId": "Apps_Get",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/ApiKey"
          }
        ],
        "responses": {
          "200": {
            "description": "The application info.",
            "schema": {
              "$ref": "#/definitions/ApplicationInfoResponse"
            }
          },
          "429": {
            "$ref": "#/responses/429"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "400": {
            "description": "This error can be returned if the request's parameters are incorrect meaning the required parameters are missing, malformed, or too large.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "403": {
            "$ref": "#/responses/403"
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Get Application Info request": {
            "$ref": "./examples/apps/GetApplicationInfoRequest.json"
          }
        }
      },
      "put": {
        "description": "Updates the name or description of the application.",
        "operationId": "Apps_Update",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "name": "applicationUpdateObject",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ApplicationUpdateObject"
            },
            "description": "A model containing Name and Description of the application."
          },
          {
            "$ref": "#/parameters/ApiKey"
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successfully updated application name and description.",
            "schema": {
              "$ref": "#/definitions/OperationStatus"
            }
          },
          "429": {
            "$ref": "#/responses/429"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "400": {
            "description": "This error can be returned if the request's parameters are incorrect meaning the required parameters are missing, malformed, or too large.\r\n\r\nThis error can be returned if the request's body is incorrect meaning the JSON is missing, malformed, or too large.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "403": {
            "$ref": "#/responses/403"
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Rename Application request": {
            "$ref": "./examples/apps/RenameApplicationRequest.json"
          }
        }
      },
      "delete": {
        "description": "Deletes an application.",
        "operationId": "Apps_Delete",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/ApiKey"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted application.",
            "schema": {
              "$ref": "#/definitions/OperationStatus"
            }
          },
          "429": {
            "$ref": "#/responses/429"
          },
          "400": {
            "description": "This error can be returned if the request's parameters are incorrect meaning the required parameters are missing or malformed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Rename Application request": {
            "$ref": "./examples/apps/DeleteApplicationRequest.json"
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/clone": {
      "post": {
        "description": "Creates a new version using the current snapshot of the selected application version.",
        "operationId": "Versions_Clone",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "name": "versionCloneObject",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/TaskUpdateObject"
            },
            "description": "A model containing the new version ID."
          },
          {
            "$ref": "#/parameters/ApiKey"
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "The version ID of the created task.",
            "schema": {
              "type": "string"
            }
          },
          "429": {
            "$ref": "#/responses/429"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "400": {
            "description": "This error can be returned if the request's parameters are incorrect meaning the required parameters are missing, malformed, or too large.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "403": {
            "$ref": "#/responses/403"
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Clone Application Version request": {
            "$ref": "./examples/versions/CloneApplicatioVersionRequest.json"
          }
        }
      }
    },
    "/apps/{appId}/publish": {
      "post": {
        "description": "Publishes a specific version of the application.",
        "operationId": "Apps_Publish",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "name": "applicationPublishObject",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ApplicationPublishObject"
            },
            "description": "The application publish object. The region is the target region that the application is published to."
          },
          {
            "$ref": "#/parameters/ApiKey"
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "An object containing the application endpoint URL and its assigned endpoint key.",
            "schema": {
              "$ref": "#/definitions/ProductionOrStagingEndpointInfo"
            }
          },
          "429": {
            "$ref": "#/responses/429"
          },
          "400": {
            "description": "This error can be returned if the request's parameters are incorrect meaning the required parameters are missing, malformed, or too large.\r\n\r\nThis error can be returned if the request's body is incorrect meaning the JSON is missing, malformed, or too large. \r\n\r\nOther reasons for receiving this error:\r\n\r\n* app can't be published because model isn't trained\r\n* app can't be published in region specified\r\n\r\n",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Publish Application request": {
            "$ref": "./examples/apps/PublishApplicationRequest.json"
          }
        }
      }
    },
    "/apps/{appId}/versions": {
      "get": {
        "description": "Gets the application versions info.",
        "operationId": "Versions_List",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/SkipInPath"
          },
          {
            "$ref": "#/parameters/TakeInPath"
          },
          {
            "$ref": "#/parameters/ApiKey"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of all versions of the application.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/VersionInfo"
              }
            }
          },
          "429": {
            "$ref": "#/responses/429"
          },
          "400": {
            "description": "This error can be returned if the request's parameters are incorrect meaning the required parameters are missing, malformed, or too large.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Get Application Versions info request": {
            "$ref": "./examples/versions/GetApplicationVersionsInfoRequest.json"
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/": {
      "get": {
        "description": "Gets the version info.",
        "operationId": "Versions_Get",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "$ref": "#/parameters/ApiKey"
          }
        ],
        "responses": {
          "200": {
            "description": "A model containing the version info.",
            "schema": {
              "$ref": "#/definitions/VersionInfo"
            }
          },
          "429": {
            "$ref": "#/responses/429"
          },
          "400": {
            "description": "This error can be returned if the request's parameters are incorrect meaning the required parameters are missing, malformed, or too large.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Get Application Version info request": {
            "$ref": "./examples/versions/GetApplicationVersionInfoRequest.json"
          }
        }
      },
      "put": {
        "description": "Updates the name or description of the application version.",
        "operationId": "Versions_Update",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "name": "versionUpdateObject",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TaskUpdateObject"
            },
            "description": "A model containing Name and Description of the application."
          },
          {
            "$ref": "#/parameters/ApiKey"
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation.",
            "schema": {
              "$ref": "#/definitions/OperationStatus"
            }
          },
          "429": {
            "$ref": "#/responses/429"
          },
          "400": {
            "description": "This error can be returned if the request's parameters are incorrect meaning the required parameters are missing, malformed, or too large.\r\n\r\nThis error can be returned if the request's body is incorrect meaning the JSON is missing, malformed, or too large.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Rename Application Version request": {
            "$ref": "./examples/versions/RenameApplicationVersionRequest.json"
          }
        }
      },
      "delete": {
        "description": "Deletes an application version.",
        "operationId": "Versions_Delete",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "$ref": "#/parameters/ApiKey"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation.",
            "schema": {
              "$ref": "#/definitions/OperationStatus"
            }
          },
          "429": {
            "$ref": "#/responses/429"
          },
          "400": {
            "description": "This error can be returned if the request's parameters are incorrect meaning the required parameters are missing or malformed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Delete Application Version request": {
            "$ref": "./examples/versions/DeleteApplicationVersionRequest.json"
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/export": {
      "get": {
        "description": "Exports a LUIS application to JSON format.",
        "operationId": "Versions_Export",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "$ref": "#/parameters/ApiKey"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/LuisApp"
            },
            "description": "The LUIS application structure in JSON format."
          },
          "429": {
            "$ref": "#/responses/429"
          },
          "400": {
            "description": "This error can be returned if the request's parameters are incorrect meaning the required parameters are missing, malformed, or too large.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Export Application Version": {
            "$ref": "./examples/versions/ExportApplicationVersionRequest.json"
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/train": {
      "post": {
        "description": "Sends a training request for a version of a specified LUIS app. This POST request initiates a request asynchronously. To determine whether the training request is successful, submit a GET request to get training status. Note: The application version is not fully trained unless all the models (intents and entities) are trained successfully or are up to date. To verify training success, get the training status at least once after training is complete.",
        "operationId": "Train_TrainVersion",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "$ref": "#/parameters/ApiKey"
          }
        ],
        "responses": {
          "202": {
            "description": "This response indicates the initial training status.",
            "schema": {
              "$ref": "#/definitions/EnqueueTrainingResponse"
            }
          },
          "400": {
            "description": "This error can be returned if the request's parameters are incorrect meaning the required parameters are missing, malformed, or too large.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "429": {
            "$ref": "#/responses/429"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "409": {
            "description": "This error can be returned if training is already queued or in progress.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Train Application Version request": {
            "$ref": "./examples/train/TrainApplicationVersionRequest.json"
          }
        }
      },
      "get": {
        "description": "Gets the training status of all models (intents and entities) for the specified LUIS app. You must call the train API to train the LUIS app before you call this API to get training status. \"appID\" specifies the LUIS app ID. \"versionId\" specifies the version number of the LUIS app. For example, \"0.1\".",
        "operationId": "Train_GetStatus",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "$ref": "#/parameters/ApiKey"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response provides an array of training status details for a LUIS app that you submitted for training. Each element in the response array provides training status for a model (intent or entity) in the LUIS app. Note: Training status is not provided for prebuilt entities because they are pretrained. The \"modelId\" property identifies which intent or entity the training status corresponds to. To get the name and type of each model, use the models API which has a request URL in this format: https://westus.api.cognitive.microsoft.com/luis/api/v2.0/apps/{appId}/versions/{versionId}/models The details property for each model can contain the following fields: \"statusId\": An integer from 0 to 3 that corresponds to the value of the status field. \"status\": A string with one of the following values: \"Success\", \"UpToDate\", \"InProgress\", \"Fail\". If the status is \"Fail\", the \"failureReason\" property provides the reason for failure. \"exampleCount\": The number of examples used for training. In the case of the None intent or prebuilt domain intents and entities, this number includes example provided internally by the system as well as examples you added to your LUIS app. \"failureReason\": A string that indicates the reason training failed.  The value \"FewLabels\" means that no labeled examples were provided for training. \"trainingDateTime\": A string indicating the time the model was last trained. The value uses the ISO 8601 format for representing times in UTC (Coordinated Universal Time) with a UTC designator (\"Z\"), for example: \"2017-08-10T01:08:34Z\".",
            "schema": {
              "$ref": "#/definitions/ModelTrainingInfoList"
            }
          },
          "400": {
            "description": "This response can occur for any of the following reasons: \r\n\r\n* You need to submit a training request before you request training status. \r\n* The format of appId is incorrect. \r\n* The value of appId is incorrect. \r\n* The value of  versionId is incorrect.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "429": {
            "$ref": "#/responses/429"
          },
          "403": {
            "$ref": "#/responses/403"
          }
        },
        "produces": [
          "application/json",
          "JSON"
        ],
        "x-ms-examples": {
          "Get Application Version Training Status request": {
            "$ref": "./examples/train/GetApplicationVersionTrainingStatusRequest.json"
          }
        }
      }
    },
    "/apps/{appId}/versions/import": {
      "post": {
        "description": "Imports a new version into a LUIS application.",
        "operationId": "Versions_Import",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "name": "versionId",
            "in": "query",
            "description": "The new versionId to import. If not specified, the versionId will be read from the imported object.",
            "type": "string"
          },
          {
            "name": "luisApp",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LuisApp"
            },
            "description": "A LUIS application structure."
          },
          {
            "$ref": "#/parameters/ApiKey"
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "The created application version.",
            "schema": {
              "$ref": "#/definitions/VersionResponse"
            }
          },
          "429": {
            "$ref": "#/responses/429"
          },
          "400": {
            "description": "This error can be returned if the request's parameters are incorrect meaning the required parameters are missing, malformed, or too large.\r\n\r\nThis error can be returned if the request's body is incorrect meaning the JSON is missing, malformed, or too large.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Import Application": {
            "$ref": "./examples/versions/ImportApplicationVersionRequest.json"
          }
        }
      }
    },
    "/apps/{appId}/settings": {
      "get": {
        "description": "Get the application settings.",
        "operationId": "Apps_GetSettings",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/ApiKey"
          }
        ],
        "responses": {
          "200": {
            "description": "The application settings.",
            "schema": {
              "$ref": "#/definitions/ApplicationSettings"
            }
          },
          "429": {
            "$ref": "#/responses/429"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "400": {
            "description": "This error can be returned if the request's parameters are incorrect meaning the required parameters are missing, malformed, or too large.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "403": {
            "$ref": "#/responses/403"
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Get Application Settings request": {
            "$ref": "./examples/apps/GetApplicationSettingsRequest.json"
          }
        }
      },
      "put": {
        "description": "Updates the application settings.",
        "operationId": "Apps_UpdateSettings",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "name": "applicationSettingUpdateObject",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ApplicationSettingUpdateObject"
            },
            "description": "An object containing the new application settings."
          },
          {
            "$ref": "#/parameters/ApiKey"
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successfully updated application settings.",
            "schema": {
              "$ref": "#/definitions/OperationStatus"
            }
          },
          "429": {
            "$ref": "#/responses/429"
          },
          "400": {
            "description": "This error can be returned if the request's parameters are incorrect meaning the required parameters are missing, malformed, or too large.\r\n\r\nThis error can be returned if the request's body is incorrect meaning the JSON is missing, malformed, or too large.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Update Application Settings request": {
            "$ref": "./examples/apps/UpdateApplicationSettingsRequest.json"
          }
        }
      }
    },
    "/apps/{appId}/publishsettings": {
      "get": {
        "description": "Get the application publish settings.",
        "operationId": "Apps_GetPublishSettings",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/ApiKey"
          }
        ],
        "responses": {
          "200": {
            "description": "The application publish settings.",
            "schema": {
              "$ref": "#/definitions/PublishSettings"
            }
          },
          "429": {
            "$ref": "#/responses/429"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "400": {
            "description": "This error can be returned if the request's parameters are incorrect meaning the required parameters are missing, malformed, or too large.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "403": {
            "$ref": "#/responses/403"
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Get Publish Settings request": {
            "$ref": "./examples/apps/GetPublishSettingsRequest.json"
          }
        }
      },
      "put": {
        "description": "Updates the application publish settings.",
        "operationId": "Apps_UpdatePublishSettings",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "name": "publishSettingUpdateObject",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PublishSettingUpdateObject"
            },
            "description": "An object containing the new publish application settings."
          },
          {
            "$ref": "#/parameters/ApiKey"
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successfully updated application settings.",
            "schema": {
              "$ref": "#/definitions/OperationStatus"
            }
          },
          "429": {
            "$ref": "#/responses/429"
          },
          "400": {
            "description": "This error can be returned if the request's parameters are incorrect meaning the required parameters are missing, malformed, or too large.\r\n\r\nThis error can be returned if the request's body is incorrect meaning the JSON is missing, malformed, or too large.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Update Publish Settings request": {
            "$ref": "./examples/apps/UpdatePublishSettingsRequest.json"
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/suggest": {
      "delete": {
        "description": "Deleted an unlabelled utterance.",
        "operationId": "Versions_DeleteUnlabelledUtterance",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "name": "utterance",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The utterance text to delete."
          },
          {
            "$ref": "#/parameters/ApiKey"
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation.",
            "schema": {
              "$ref": "#/definitions/OperationStatus"
            }
          },
          "429": {
            "$ref": "#/responses/429"
          },
          "400": {
            "description": "This error can be returned if the request's parameters are incorrect meaning the required parameters are missing or malformed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Delete Unlabelled Utterance": {
            "$ref": "./examples/versions/DeleteUnlabelledUtteranceRequest.json"
          }
        }
      }
    },
    "/apps/{appId}/permissions": {
      "get": {
        "description": "Gets the list of user emails that have permissions to access your application.",
        "operationId": "Permissions_List",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/ApiKey"
          }
        ],
        "responses": {
          "200": {
            "description": "The list includes a single owner. All collaborators are listed in the emails array.",
            "schema": {
              "$ref": "#/definitions/UserAccessList"
            }
          },
          "429": {
            "$ref": "#/responses/429"
          },
          "400": {
            "description": "This error can be returned if the request's parameters are incorrect meaning the required parameters are missing, malformed, or too large.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Get Application User Access List": {
            "$ref": "./examples/permissions/GetApplicationUserAccessListRequest.json"
          }
        }
      },
      "post": {
        "description": "Adds a user to the allowed list of users to access this LUIS application. Users are added using their email address.",
        "operationId": "Permissions_Add",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "name": "userToAdd",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserCollaborator"
            },
            "description": "A model containing the user's email address."
          },
          {
            "$ref": "#/parameters/ApiKey"
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation.",
            "schema": {
              "$ref": "#/definitions/OperationStatus"
            }
          },
          "429": {
            "$ref": "#/responses/429"
          },
          "400": {
            "description": "This error can be returned if the request's parameters are incorrect meaning the required parameters are missing, malformed, or too large.\r\n\r\nThis error can be returned if the request's body is incorrect meaning the JSON is missing, malformed, or too large.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Add User To Access List": {
            "$ref": "./examples/permissions/AddUserToAccessListRequest.json"
          }
        }
      },
      "delete": {
        "description": "Removes a user from the allowed list of users to access this LUIS application. Users are removed using their email address.",
        "operationId": "Permissions_Delete",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "name": "userToDelete",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserCollaborator"
            },
            "description": "A model containing the user's email address."
          },
          {
            "$ref": "#/parameters/ApiKey"
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation.",
            "schema": {
              "$ref": "#/definitions/OperationStatus"
            }
          },
          "429": {
            "$ref": "#/responses/429"
          },
          "400": {
            "description": "This error can be returned if the request's parameters are incorrect meaning the required parameters are missing or malformed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Remove User From Access List": {
            "$ref": "./examples/permissions/RemoveUserFromAccessListRequest.json"
          }
        }
      },
      "put": {
        "description": "Replaces the current users access list with the one sent in the body. If an empty list is sent, all access to other users will be removed.",
        "operationId": "Permissions_Update",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "name": "collaborators",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CollaboratorsArray"
            },
            "description": "A model containing a list of user's email addresses."
          },
          {
            "$ref": "#/parameters/ApiKey"
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation.",
            "schema": {
              "$ref": "#/definitions/OperationStatus"
            }
          },
          "429": {
            "$ref": "#/responses/429"
          },
          "400": {
            "description": "This error can be returned if the request's parameters are incorrect meaning the required parameters are missing, malformed, or too large.\r\n\r\nThis error can be returned if the request's body is incorrect meaning the JSON is missing, malformed, or too large.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Replaces Users From Access List": {
            "$ref": "./examples/permissions/ReplacesUsersFromAccessListRequest.json"
          }
        }
      }
    },
    "/apps/{appId}/endpoints": {
      "get": {
        "description": "Returns the available endpoint deployment regions and URLs.",
        "operationId": "Apps_ListEndpoints",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/ApiKey"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a list of endpoints regions and their corresponding endpoint URL.",
            "schema": {
              "$ref": "#/definitions/AvailableEndpoints"
            }
          },
          "429": {
            "$ref": "#/responses/429"
          },
          "400": {
            "description": "This error can be returned if the request's parameters are incorrect meaning the required parameters are missing, malformed, or too large.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Get Endpoints request": {
            "$ref": "./examples/apps/GetEndpointsRequest.json"
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/closedlists/{clEntityId}/sublists": {
      "post": {
        "description": "Adds a list to an existing closed list.",
        "operationId": "Model_AddSubList",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "name": "clEntityId",
            "in": "path",
            "description": "The closed list entity extractor ID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "wordListCreateObject",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WordListObject"
            },
            "description": "Words list."
          },
          {
            "$ref": "#/parameters/ApiKey"
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "The ID of the newly created list.",
            "schema": {
              "type": "integer"
            }
          },
          "429": {
            "$ref": "#/responses/429"
          },
          "400": {
            "description": "This error can be returned if the request's parameters are incorrect meaning the required parameters are missing, malformed, or too large.\r\n\r\nThis error can be returned if the request's body is incorrect meaning the JSON is missing, malformed, or too large.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Add Sublist request": {
            "$ref": "./examples/model/AddSublistToClosedListEntityModelRequest.json"
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/customprebuiltdomains": {
      "post": {
        "description": "Adds a customizable prebuilt domain along with all of its models to this application.",
        "operationId": "Model_AddCustomPrebuiltDomain",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "name": "prebuiltDomainObject",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PrebuiltDomainCreateBaseObject"
            },
            "description": "A prebuilt domain create object containing the name of the domain."
          },
          {
            "$ref": "#/parameters/ApiKey"
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "An array of the created custom prebuilt domain model Ids.",
            "schema": {
              "$ref": "#/definitions/GuidList"
            }
          },
          "429": {
            "$ref": "#/responses/429"
          },
          "400": {
            "description": "This error can be returned if the request's parameters are incorrect meaning the required parameters are missing, malformed, or too large.\r\n\r\nThis error can be returned if the request's body is incorrect meaning the JSON is missing, malformed, or too large.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Add Custom Prebuilt Domain to Application request": {
            "$ref": "./examples/model/AddCustomPrebuiltDomainToApplicationRequest.json"
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/customprebuiltintents": {
      "post": {
        "description": "Adds a custom prebuilt intent model to the application.",
        "operationId": "Model_AddCustomPrebuiltIntent",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "name": "prebuiltDomainModelCreateObject",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PrebuiltDomainModelCreateObject"
            },
            "description": "A model object containing the name of the custom prebuilt intent and the name of the domain to which this model belongs."
          },
          {
            "$ref": "#/parameters/ApiKey"
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "The ID of the created model.",
            "x-nullable": false,
            "schema": {
              "$ref": "#/definitions/GuidResponse"
            }
          },
          "429": {
            "$ref": "#/responses/429"
          },
          "400": {
            "description": "This error can be returned if the request's parameters are incorrect meaning the required parameters are missing or malformed.\r\n\r\nThis error can be returned if the request's body are incorrect meaning the JSON is missing or malformed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Add Custom Prebuilt Intent request": {
            "$ref": "./examples/model/AddCustomPrebuiltIntentRequest.json"
          }
        }
      },
      "get": {
        "description": "Gets custom prebuilt intents information of this application.",
        "operationId": "Model_ListCustomPrebuiltIntents",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "$ref": "#/parameters/ApiKey"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a list of all custom prebuilt intents and their representations.",
            "schema": {
              "$ref": "#/definitions/IntentClassifiersList"
            }
          },
          "429": {
            "$ref": "#/responses/429"
          },
          "400": {
            "description": "This error can be returned if the request's parameters are incorrect meaning the required parameters are missing, malformed, or too large.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Get Custom Prebuilt Intent request": {
            "$ref": "./examples/model/GetCustomPrebuiltIntentRequest.json"
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/customprebuiltentities": {
      "post": {
        "description": "Adds a custom prebuilt entity model to the application.",
        "operationId": "Model_AddCustomPrebuiltEntity",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "name": "prebuiltDomainModelCreateObject",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PrebuiltDomainModelCreateObject"
            },
            "description": "A model object containing the name of the custom prebuilt entity and the name of the domain to which this model belongs."
          },
          {
            "$ref": "#/parameters/ApiKey"
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "The ID of the created model.",
            "x-nullable": false,
            "schema": {
              "$ref": "#/definitions/GuidResponse"
            }
          },
          "429": {
            "$ref": "#/responses/429"
          },
          "400": {
            "description": "This error can be returned if the request's parameters are incorrect meaning the required parameters are missing, malformed, or too large.\r\n\r\nThis error can be returned if the request's body is incorrect meaning the JSON is missing, malformed, or too large.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Add Custom Prebuilt Entity request": {
            "$ref": "./examples/model/AddCustomPrebuiltEntityRequest.json"
          }
        }
      },
      "get": {
        "description": "Gets all custom prebuilt entities information of this application.",
        "operationId": "Model_ListCustomPrebuiltEntities",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "$ref": "#/parameters/ApiKey"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a list of all custom prebuilt entities and their representations.",
            "schema": {
              "$ref": "#/definitions/EntityExtractorsList"
            }
          },
          "429": {
            "$ref": "#/responses/429"
          },
          "400": {
            "description": "This error can be returned if the request's parameters are incorrect meaning the required parameters are missing, malformed, or too large.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Get Custom Prebuilt Domain Entities request": {
            "$ref": "./examples/model/GetCustomPrebuiltDomainEntitiesRequest.json"
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/customprebuiltmodels": {
      "get": {
        "description": "Gets all custom prebuilt models information of this application.",
        "operationId": "Model_ListCustomPrebuiltModels",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "$ref": "#/parameters/ApiKey"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a list of all custom prebuilt models and their representations.",
            "schema": {
              "$ref": "#/definitions/CustomPrebuiltModelList"
            }
          },
          "429": {
            "$ref": "#/responses/429"
          },
          "400": {
            "description": "This error can be returned if the request's parameters are incorrect meaning the required parameters are missing, malformed, or too large.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Get Custom Prebuilt Domain Models request": {
            "$ref": "./examples/model/GetCustomPrebuiltDomainModelsRequest.json"
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/customprebuiltdomains/{domainName}": {
      "delete": {
        "description": "Deletes a prebuilt domain's models from the application.",
        "operationId": "Model_DeleteCustomPrebuiltDomain",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "name": "domainName",
            "in": "path",
            "description": "Domain name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiKey"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation.",
            "schema": {
              "$ref": "#/definitions/OperationStatus"
            }
          },
          "429": {
            "$ref": "#/responses/429"
          },
          "400": {
            "description": "This error can be returned if the request's parameters are incorrect meaning the required parameters are missing or malformed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Delete Prebuilt Domain from Application request": {
            "$ref": "./examples/model/DeletePrebuiltDomainFromApplicationRequest.json"
          }
        }
      }
    },
    "/apps/customprebuiltdomains": {
      "get": {
        "description": "Gets all the available custom prebuilt domains for all cultures.",
        "operationId": "Apps_ListAvailableCustomPrebuiltDomains",
        "parameters": [
          {
            "$ref": "#/parameters/ApiKey"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a list of all custom prebuilt domains and their intents/entities representation.",
            "schema": {
              "$ref": "#/definitions/PrebuiltDomainsList"
            }
          },
          "429": {
            "$ref": "#/responses/429"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Get Available Custom Prebuilt Domains request": {
            "$ref": "./examples/apps/GetAvailableCustomPrebuiltDomainsRequest.json"
          }
        }
      },
      "post": {
        "description": "Adds a prebuilt domain along with its models as a new application.",
        "operationId": "Apps_AddCustomPrebuiltDomain",
        "parameters": [
          {
            "name": "prebuiltDomainCreateObject",
            "in": "body",
            "required": true,
            "description": "A prebuilt domain create object containing the name and culture of the domain.",
            "schema": {
              "$ref": "#/definitions/PrebuiltDomainCreateObject"
            }
          },
          {
            "$ref": "#/parameters/ApiKey"
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "The ID of the created application.",
            "x-nullable": false,
            "schema": {
              "$ref": "#/definitions/GuidResponse"
            }
          },
          "429": {
            "$ref": "#/responses/429"
          },
          "400": {
            "description": "This error can be returned if the request's parameters are incorrect meaning the required parameters are missing, malformed, or too large.\r\n\r\nThis error can be returned if the request's body is incorrect meaning the JSON is missing, malformed, or too large. \r\n\r\nYou will receive this error If you add a second prebuilt application before renaming the first.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "$ref": "./examples/apps/AddCustomPrebuiltApplicationRequest.json"
        }
      }
    },
    "/apps/customprebuiltdomains/{culture}": {
      "get": {
        "description": "Gets all the available custom prebuilt domains for a specific culture.",
        "operationId": "Apps_ListAvailableCustomPrebuiltDomainsForCulture",
        "parameters": [
          {
            "name": "culture",
            "in": "path",
            "description": "Culture.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiKey"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a list of all domains and their intents/entities representation for a specific culture.",
            "schema": {
              "$ref": "#/definitions/PrebuiltDomainsList"
            }
          },
          "429": {
            "$ref": "#/responses/429"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Get AvailableCustomPrebuiltDomainsForCulture request": {
            "$ref": "./examples/apps/GetAvailableCustomPrebuiltDomainsForCultureRequest.json"
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/hierarchicalentities/{hEntityId}/children/{hChildId}": {
      "get": {
        "description": "Gets information about the hierarchical entity child model.",
        "operationId": "Model_GetHierarchicalEntityChild",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "$ref": "#/parameters/HEntityIdInPath"
          },
          {
            "name": "hChildId",
            "in": "path",
            "description": "The hierarchical entity extractor child ID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "$ref": "#/parameters/ApiKey"
          }
        ],
        "responses": {
          "200": {
            "description": "The hierarchical entity child model info.",
            "schema": {
              "$ref": "#/definitions/HierarchicalChildEntity"
            }
          },
          "429": {
            "$ref": "#/responses/429"
          },
          "400": {
            "description": "This error can be returned if the request's parameters are incorrect meaning the required parameters are missing, malformed, or too large.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Get Hierarchical Entity Child Info request": {
            "$ref": "./examples/model/GetHierarchicalChildEntityInfoRequest.json"
          }
        }
      },
      "put": {
        "description": "Renames a single child in an existing hierarchical entity model.",
        "operationId": "Model_UpdateHierarchicalEntityChild",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "$ref": "#/parameters/HEntityIdInPath"
          },
          {
            "name": "hChildId",
            "in": "path",
            "required": true,
            "description": "The hierarchical entity extractor child ID.",
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "hierarchicalChildModelUpdateObject",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                }
              }
            },
            "description": "Model object containing new name of the hierarchical entity child."
          },
          {
            "$ref": "#/parameters/ApiKey"
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successfully updated entity child.",
            "schema": {
              "$ref": "#/definitions/OperationStatus"
            }
          },
          "429": {
            "$ref": "#/responses/429"
          },
          "400": {
            "description": "This error can be returned if the request's parameters are incorrect meaning the required parameters are missing, malformed, or too large.\r\n\r\nThis error can be returned if the request's body is incorrect meaning the JSON is missing, malformed, or too large.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Update Hierarchical Entity Child Model request": {
            "$ref": "./examples/model/UpdateHierarchicalChildModelRequest.json"
          }
        }
      },
      "delete": {
        "description": "Deletes a hierarchical entity extractor child from the application.",
        "operationId": "Model_DeleteHierarchicalEntityChild",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "$ref": "#/parameters/HEntityIdInPath"
          },
          {
            "name": "hChildId",
            "in": "path",
            "description": "The hierarchical entity extractor child ID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "$ref": "#/parameters/ApiKey"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted entity.",
            "schema": {
              "$ref": "#/definitions/OperationStatus"
            }
          },
          "429": {
            "$ref": "#/responses/429"
          },
          "400": {
            "description": "This error can be returned if the request's parameters are incorrect meaning the required parameters are missing or malformed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Delete Hierarchical Entity Child Model request": {
            "$ref": "./examples/model/DeleteHierarchicalChildModelRequest.json"
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/hierarchicalentities/{hEntityId}/children": {
      "post": {
        "description": "Creates a single child in an existing hierarchical entity model.",
        "operationId": "Model_AddHierarchicalEntityChild",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "$ref": "#/parameters/HEntityIdInPath"
          },
          {
            "name": "hierarchicalChildModelCreateObject",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                }
              }
            },
            "description": "A model object containing the name of the new hierarchical child model."
          },
          {
            "$ref": "#/parameters/ApiKey"
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "The ID of the created model.",
            "x-nullable": false,
            "schema": {
              "$ref": "#/definitions/GuidResponse"
            }
          },
          "429": {
            "$ref": "#/responses/429"
          },
          "400": {
            "description": "This error can be returned if the request's parameters are incorrect meaning the required parameters are missing, malformed, or too large.\r\n\r\nThis error can be returned if the request's body is incorrect meaning the JSON is missing, malformed, or too large. \r\n\r\nThis error can be returned if you are attempting to create a hierarchical entity when the max child count is exceeded.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Create Hierarchical Entity Child Model request": {
            "$ref": "./examples/model/CreateHierarchicalChildModelRequest.json"
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/compositeentities/{cEntityId}/children": {
      "post": {
        "description": "Creates a single child in an existing composite entity model.",
        "operationId": "Model_AddCompositeEntityChild",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "$ref": "#/parameters/CEntityIdInPath"
          },
          {
            "name": "compositeChildModelCreateObject",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                }
              }
            },
            "description": "A model object containing the name of the new composite child model."
          },
          {
            "$ref": "#/parameters/ApiKey"
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "The ID of the created model.",
            "x-nullable": false,
            "schema": {
              "$ref": "#/definitions/GuidResponse"
            }
          },
          "429": {
            "$ref": "#/responses/429"
          },
          "400": {
            "description": "This error can be returned if the request's parameters are incorrect meaning the required parameters are missing, malformed, or too large.\r\n\r\nThis error can be returned if the request's body is incorrect meaning the JSON is missing, malformed, or too large.\r\n\r\nThis error can be returned if you are attempting to create a composite entity child when the max child count is exceeded.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Create Composite Entity Child Model request": {
            "$ref": "./examples/model/CreateCompositeChildModelRequest.json"
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/compositeentities/{cEntityId}/children/{cChildId}": {
      "delete": {
        "description": "Deletes a composite entity extractor child from the application.",
        "operationId": "Model_DeleteCompositeEntityChild",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "$ref": "#/parameters/CEntityIdInPath"
          },
          {
            "name": "cChildId",
            "in": "path",
            "description": "The hierarchical entity extractor child ID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "$ref": "#/parameters/ApiKey"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted entity.",
            "schema": {
              "$ref": "#/definitions/OperationStatus"
            }
          },
          "429": {
            "$ref": "#/responses/429"
          },
          "400": {
            "description": "This error can be returned if the request's parameters are incorrect meaning the required parameters are missing or malformed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Delete Composite Entity Child Model request": {
            "$ref": "./examples/model/DeleteCompositeChildModelRequest.json"
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/regexentities": {
      "get": {
        "summary": "Gets information about the regex entity models.",
        "operationId": "Model_GetRegexEntityInfos",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "$ref": "#/parameters/SkipInPath"
          },
          {
            "$ref": "#/parameters/TakeInPath"
          },
          {
            "$ref": "#/parameters/ApiKey"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of regex entity model infos.",
            "schema": {
              "$ref": "#/definitions/RegexEntityExtractorList"
            }
          },
          "429": {
            "$ref": "#/responses/429"
          },
          "400": {
            "description": "This error can be returned if the request's parameters are incorrect meaning the required parameters are missing, malformed, or too large.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          }
        },
        "x-ms-examples": {
          "Get Regex Entity Models request": {
            "$ref": "./examples/model/GetApplicationVersionRegexEntityInfosRequest.json"
          }
        }
      },
      "post": {
        "summary": "Adds a regex entity model to the application version.",
        "operationId": "Model_CreateRegexEntityModel",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "name": "regexEntityExtractorCreateObj",
            "in": "body",
            "description": "A model object containing the name and regex pattern for the new regex entity extractor.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RegexModelCreateObject"
            }
          },
          {
            "$ref": "#/parameters/ApiKey"
          }
        ],
        "responses": {
          "201": {
            "description": "The ID of the created model.",
            "x-nullable": false,
            "schema": {
              "$ref": "#/definitions/GuidResponse"
            }
          },
          "429": {
            "$ref": "#/responses/429"
          },
          "400": {
            "description": "This error can be returned if the request's parameters are incorrect meaning the required parameters are missing, malformed, or too large.\r\n\r\nThis error can be returned if the request's body is incorrect meaning the JSON is missing, malformed, or too large. \r\n\r\nThis error can be returned if you are attempting to create an entity when the max entity count is exceeded.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          }
        },
        "x-ms-examples": {
          "Create Regex Entity Model request": {
            "$ref": "./examples/model/CreateRegexEntityExtractorRequest.json"
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/patternanyentities": {
      "get": {
        "summary": "Get information about the Pattern.Any entity models.",
        "operationId": "Model_GetPatternAnyEntityInfos",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "$ref": "#/parameters/SkipInPath"
          },
          {
            "$ref": "#/parameters/TakeInPath"
          },
          {
            "$ref": "#/parameters/ApiKey"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of Pattern.Any entity model infos.",
            "schema": {
              "$ref": "#/definitions/PatternAnyEntityExtractorList"
            }
          },
          "429": {
            "$ref": "#/responses/429"
          },
          "400": {
            "description": "This error can be returned if the request's parameters are incorrect meaning the required parameters are missing, malformed, or too large.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          }
        },
        "x-ms-examples": {
          "Create Regex Entity Model request": {
            "$ref": "./examples/model/GetApplicationVersionPatternAnyEntityInfosRequest.json"
          }
        }
      },
      "post": {
        "summary": "Adds a pattern.any entity extractor to the application.",
        "operationId": "Model_CreatePatternAnyEntityModel",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "name": "extractorCreateObject",
            "in": "body",
            "description": "A model object containing the name and explicit list for the new Pattern.Any entity extractor.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PatternAnyModelCreateObject"
            }
          },
          {
            "$ref": "#/parameters/ApiKey"
          }
        ],
        "responses": {
          "201": {
            "description": "The ID of the created Pattern.Any entity model.",
            "x-nullable": false,
            "schema": {
              "$ref": "#/definitions/GuidResponse"
            }
          },
          "429": {
            "$ref": "#/responses/429"
          },
          "400": {
            "description": "This error can be returned if the request's parameters are incorrect meaning the required parameters are missing, malformed, or too large.\r\n\r\nThis error can be returned if the request's body is incorrect meaning the JSON is missing, malformed, or too large. \r\n\r\nThis error can be returned if you are attempting to create an entity when the max entity count is exceeded.\r\n",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          }
        },
        "x-ms-examples": {
          "Create Regex Entity Model request": {
            "$ref": "./examples/model/CreatePatternAnyEntityExtractorRequest.json"
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/entities/{entityId}/roles": {
      "get": {
        "summary": "Get All Entity Roles for a given entity",
        "operationId": "Model_GetEntityRoles",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "name": "entityId",
            "in": "path",
            "description": "entity Id",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "$ref": "#/parameters/ApiKey"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of the entity roles",
            "schema": {
              "$ref": "#/definitions/EntityRoleList"
            }
          },
          "429": {
            "$ref": "#/responses/429"
          },
          "400": {
            "description": "This error can be returned if the request's parameters are incorrect meaning the required parameters are missing, malformed, or too large.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          }
        },
        "x-ms-examples": {
          "Get Entity Roles request": {
            "$ref": "./examples/model/GetEntityRolesRequest.json"
          }
        }
      },
      "post": {
        "summary": "Create an entity role for an entity in the application.",
        "operationId": "Model_CreateEntityRole",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "name": "entityId",
            "in": "path",
            "description": "The entity model ID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "entityRoleCreateObject",
            "in": "body",
            "description": "An entity role object containing the name of role.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EntityRoleCreateObject"
            }
          },
          {
            "$ref": "#/parameters/ApiKey"
          }
        ],
        "responses": {
          "201": {
            "description": "The ID of the created entity role",
            "x-nullable": false,
            "schema": {
              "$ref": "#/definitions/GuidResponse"
            }
          },
          "429": {
            "$ref": "#/responses/429"
          },
          "400": {
            "description": "This error can be returned if the request's parameters are incorrect meaning the required parameters are missing, malformed, or too large.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          }
        },
        "x-ms-examples": {
          "Create Entity Role request": {
            "$ref": "./examples/model/CreateEntityRoleRequest.json"
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/prebuilts/{entityId}/roles": {
      "get": {
        "summary": "Get All Entity Roles for a given entity",
        "operationId": "Model_GetPrebuiltEntityRoles",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "name": "entityId",
            "in": "path",
            "description": "entity Id",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "$ref": "#/parameters/ApiKey"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of the entity roles",
            "schema": {
              "$ref": "#/definitions/EntityRoleList"
            }
          },
          "429": {
            "$ref": "#/responses/429"
          },
          "400": {
            "description": "This error can be returned if the request's parameters are incorrect meaning the required parameters are missing, malformed, or too large.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          }
        },
        "x-ms-examples": {
          "Get Prebuilt Entity Roles request": {
            "$ref": "./examples/model/GetPrebuiltEntityRolesRequest.json"
          }
        }
      },
      "post": {
        "summary": "Create an entity role for an entity in the application.",
        "operationId": "Model_CreatePrebuiltEntityRole",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "name": "entityId",
            "in": "path",
            "description": "The entity model ID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "entityRoleCreateObject",
            "in": "body",
            "description": "An entity role object containing the name of role.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EntityRoleCreateObject"
            }
          },
          {
            "$ref": "#/parameters/ApiKey"
          }
        ],
        "responses": {
          "201": {
            "description": "The ID of the created entity role",
            "x-nullable": false,
            "schema": {
              "$ref": "#/definitions/GuidResponse"
            }
          },
          "429": {
            "$ref": "#/responses/429"
          },
          "400": {
            "description": "This error can be returned if the request's parameters are incorrect meaning the required parameters are missing, malformed, or too large.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          }
        },
        "x-ms-examples": {
          "Create Prebuilt Entity Role request": {
            "$ref": "./examples/model/CreatePrebuiltEntityRoleRequest.json"
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/closedlists/{entityId}/roles": {
      "get": {
        "summary": "Get All Entity Roles for a given entity",
        "operationId": "Model_GetClosedListEntityRoles",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "name": "entityId",
            "in": "path",
            "description": "entity Id",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "$ref": "#/parameters/ApiKey"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of the entity roles",
            "schema": {
              "$ref": "#/definitions/EntityRoleList"
            }
          },
          "429": {
            "$ref": "#/responses/429"
          },
          "400": {
            "description": "This error can be returned if the request's parameters are incorrect meaning the required parameters are missing, malformed, or too large.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          }
        },
        "x-ms-examples": {
          "Get Closed List Entity Roles request": {
            "$ref": "./examples/model/GetClosedListEntityRolesRequest.json"
          }
        }
      },
      "post": {
        "summary": "Create an entity role for an entity in the application.",
        "operationId": "Model_CreateClosedListEntityRole",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "name": "entityId",
            "in": "path",
            "description": "The entity model ID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "entityRoleCreateObject",
            "in": "body",
            "description": "An entity role object containing the name of role.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EntityRoleCreateObject"
            }
          },
          {
            "$ref": "#/parameters/ApiKey"
          }
        ],
        "responses": {
          "201": {
            "description": "The ID of the created entity role",
            "x-nullable": false,
            "schema": {
              "$ref": "#/definitions/GuidResponse"
            }
          },
          "429": {
            "$ref": "#/responses/429"
          },
          "400": {
            "description": "This error can be returned if the request's parameters are incorrect meaning the required parameters are missing, malformed, or too large.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          }
        },
        "x-ms-examples": {
          "Create Closed List Entity Role request": {
            "$ref": "./examples/model/CreateClosedListEntityRoleRequest.json"
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/regexentities/{entityId}/roles": {
      "get": {
        "summary": "Get All Entity Roles for a given entity",
        "operationId": "Model_GetRegexEntityRoles",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "name": "entityId",
            "in": "path",
            "description": "entity Id",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "$ref": "#/parameters/ApiKey"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of the entity roles",
            "schema": {
              "$ref": "#/definitions/EntityRoleList"
            }
          },
          "429": {
            "$ref": "#/responses/429"
          },
          "400": {
            "description": "This error can be returned if the request's parameters are incorrect meaning the required parameters are missing, malformed, or too large.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          }
        },
        "x-ms-examples": {
          "Get Regex Entity Roles request": {
            "$ref": "./examples/model/GetRegexEntityRolesRequest.json"
          }
        }
      },
      "post": {
        "summary": "Create an entity role for an entity in the application.",
        "operationId": "Model_CreateRegexEntityRole",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "name": "entityId",
            "in": "path",
            "description": "The entity model ID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "entityRoleCreateObject",
            "in": "body",
            "description": "An entity role object containing the name of role.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EntityRoleCreateObject"
            }
          },
          {
            "$ref": "#/parameters/ApiKey"
          }
        ],
        "responses": {
          "201": {
            "description": "The ID of the created entity role",
            "x-nullable": false,
            "schema": {
              "$ref": "#/definitions/GuidResponse"
            }
          },
          "429": {
            "$ref": "#/responses/429"
          },
          "400": {
            "description": "This error can be returned if the request's parameters are incorrect meaning the required parameters are missing, malformed, or too large.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          }
        },
        "x-ms-examples": {
          "Create Regex Entity Role request": {
            "$ref": "./examples/model/CreateRegexEntityRoleRequest.json"
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/compositeentities/{cEntityId}/roles": {
      "get": {
        "summary": "Get All Entity Roles for a given entity",
        "operationId": "Model_GetCompositeEntityRoles",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "$ref": "#/parameters/CEntityIdInPath"
          },
          {
            "$ref": "#/parameters/ApiKey"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of the entity roles",
            "schema": {
              "$ref": "#/definitions/EntityRoleList"
            }
          },
          "429": {
            "$ref": "#/responses/429"
          },
          "400": {
            "description": "This error can be returned if the request's parameters are incorrect meaning the required parameters are missing, malformed, or too large.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          }
        },
        "x-ms-examples": {
          "Get Composite Entity Roles request": {
            "$ref": "./examples/model/GetCompositeEntityRolesRequest.json"
          }
        }
      },
      "post": {
        "summary": "Create an entity role for an entity in the application.",
        "operationId": "Model_CreateCompositeEntityRole",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "$ref": "#/parameters/CEntityIdInPath"
          },
          {
            "name": "entityRoleCreateObject",
            "in": "body",
            "description": "An entity role object containing the name of role.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EntityRoleCreateObject"
            }
          },
          {
            "$ref": "#/parameters/ApiKey"
          }
        ],
        "responses": {
          "201": {
            "description": "The ID of the created entity role",
            "x-nullable": false,
            "schema": {
              "$ref": "#/definitions/GuidResponse"
            }
          },
          "429": {
            "$ref": "#/responses/429"
          },
          "400": {
            "description": "This error can be returned if the request's parameters are incorrect meaning the required parameters are missing, malformed, or too large.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          }
        },
        "x-ms-examples": {
          "Create Composite Entity Role request": {
            "$ref": "./examples/model/CreateCompositeEntityRoleRequest.json"
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/patternanyentities/{entityId}/roles": {
      "get": {
        "summary": "Get All Entity Roles for a given entity",
        "operationId": "Model_GetPatternAnyEntityRoles",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "name": "entityId",
            "in": "path",
            "description": "entity Id",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "$ref": "#/parameters/ApiKey"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of the entity roles",
            "schema": {
              "$ref": "#/definitions/EntityRoleList"
            }
          },
          "429": {
            "$ref": "#/responses/429"
          },
          "400": {
            "description": "This error can be returned if the request's parameters are incorrect meaning the required parameters are missing, malformed, or too large.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          }
        },
        "x-ms-examples": {
          "Get Pattern.Any Entity Roles request": {
            "$ref": "./examples/model/GetPatternAnyEntityRolesRequest.json"
          }
        }
      },
      "post": {
        "summary": "Create an entity role for an entity in the application.",
        "operationId": "Model_CreatePatternAnyEntityRole",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "name": "entityId",
            "in": "path",
            "description": "The entity model ID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "entityRoleCreateObject",
            "in": "body",
            "description": "An entity role object containing the name of role.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EntityRoleCreateObject"
            }
          },
          {
            "$ref": "#/parameters/ApiKey"
          }
        ],
        "responses": {
          "201": {
            "description": "The ID of the created entity role",
            "x-nullable": false,
            "schema": {
              "$ref": "#/definitions/GuidResponse"
            }
          },
          "429": {
            "$ref": "#/responses/429"
          },
          "400": {
            "description": "This error can be returned if the request's parameters are incorrect meaning the required parameters are missing, malformed, or too large.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          }
        },
        "x-ms-examples": {
          "Create Pattern.Any Entity Role request": {
            "$ref": "./examples/model/CreatePatternAnyEntityRoleRequest.json"
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/hierarchicalentities/{hEntityId}/roles": {
      "get": {
        "summary": "Get All Entity Roles for a given entity",
        "operationId": "Model_GetHierarchicalEntityRoles",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "$ref": "#/parameters/HEntityIdInPath"
          },
          {
            "$ref": "#/parameters/ApiKey"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of the entity roles",
            "schema": {
              "$ref": "#/definitions/EntityRoleList"
            }
          },
          "429": {
            "$ref": "#/responses/429"
          },
          "400": {
            "description": "This error can be returned if the request's parameters are incorrect meaning the required parameters are missing, malformed, or too large.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          }
        },
        "x-ms-examples": {
          "Get Hierarchical Entity Roles request": {
            "$ref": "./examples/model/GetHierarchicalEntityRolesRequest.json"
          }
        }
      },
      "post": {
        "summary": "Create an entity role for an entity in the application.",
        "operationId": "Model_CreateHierarchicalEntityRole",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "$ref": "#/parameters/HEntityIdInPath"
          },
          {
            "name": "entityRoleCreateObject",
            "in": "body",
            "description": "An entity role object containing the name of role.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EntityRoleCreateObject"
            }
          },
          {
            "$ref": "#/parameters/ApiKey"
          }
        ],
        "responses": {
          "201": {
            "description": "The ID of the created entity role",
            "x-nullable": false,
            "schema": {
              "$ref": "#/definitions/GuidResponse"
            }
          },
          "429": {
            "$ref": "#/responses/429"
          },
          "400": {
            "description": "This error can be returned if the request's parameters are incorrect meaning the required parameters are missing, malformed, or too large.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          }
        },
        "x-ms-examples": {
          "Create Hierarchical Entity Role request": {
            "$ref": "./examples/model/CreateHierarchicalEntityRoleRequest.json"
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/customprebuiltentities/{entityId}/roles": {
      "get": {
        "summary": "Get All Entity Roles for a given entity",
        "operationId": "Model_GetCustomPrebuiltEntityRoles",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "name": "entityId",
            "in": "path",
            "description": "entity Id",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "$ref": "#/parameters/ApiKey"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of the entity roles",
            "schema": {
              "$ref": "#/definitions/EntityRoleList"
            }
          },
          "429": {
            "$ref": "#/responses/429"
          },
          "400": {
            "description": "This error can be returned if the request's parameters are incorrect meaning the required parameters are missing, malformed, or too large.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          }
        },
        "x-ms-examples": {
          "Get Custom Prebuilt Entity Roles request": {
            "$ref": "./examples/model/GetCustomPrebuiltEntityRolesRequest.json"
          }
        }
      },
      "post": {
        "summary": "Create an entity role for an entity in the application.",
        "operationId": "Model_CreateCustomPrebuiltEntityRole",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "name": "entityId",
            "in": "path",
            "description": "The entity model ID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "entityRoleCreateObject",
            "in": "body",
            "description": "An entity role object containing the name of role.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EntityRoleCreateObject"
            }
          },
          {
            "$ref": "#/parameters/ApiKey"
          }
        ],
        "responses": {
          "201": {
            "description": "The ID of the created entity role",
            "x-nullable": false,
            "schema": {
              "$ref": "#/definitions/GuidResponse"
            }
          },
          "429": {
            "$ref": "#/responses/429"
          },
          "400": {
            "description": "This error can be returned if the request's parameters are incorrect meaning the required parameters are missing, malformed, or too large.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          }
        },
        "x-ms-examples": {
          "Create Custom Prebuilt Entity Role request": {
            "$ref": "./examples/model/CreateCustomPrebuiltEntityRoleRequest.json"
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/patternanyentities/{entityId}/explicitlist": {
      "get": {
        "summary": "Get the explicit list of the pattern.any entity.",
        "operationId": "Model_GetExplicitList",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "name": "entityId",
            "in": "path",
            "description": "The Pattern.Any entity id.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "$ref": "#/parameters/ApiKey"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of the explict list items",
            "schema": {
              "$ref": "#/definitions/ExplicitListItemList"
            }
          },
          "429": {
            "$ref": "#/responses/429"
          },
          "400": {
            "description": "This error can be returned if the request's parameters are incorrect meaning the required parameters are missing, malformed, or too large.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          }
        },
        "x-ms-examples": {
          "Get Explicit List request": {
            "$ref": "./examples/model/GetPatternAnyExplicitListRequest.json"
          }
        }
      },
      "post": {
        "summary": "Add a new item to the explicit list for the Pattern.Any entity.",
        "operationId": "Model_AddExplicitListItem",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "name": "entityId",
            "in": "path",
            "description": "The Pattern.Any entity extractor ID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "item",
            "in": "body",
            "description": "The new explicit list item.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ExplicitListItemCreateObject"
            }
          },
          {
            "$ref": "#/parameters/ApiKey"
          }
        ],
        "responses": {
          "201": {
            "description": "The ID of the created explicit list item.",
            "schema": {
              "$ref": "#/definitions/ExplicitListItemIDResponse"
            }
          },
          "429": {
            "$ref": "#/responses/429"
          },
          "400": {
            "description": "This error can be returned if the request's parameters are incorrect meaning the required parameters are missing, malformed, or too large.\r\n\r\nThis error can be returned if the request's body is incorrect meaning the JSON is missing, malformed, or too large.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          }
        },
        "x-ms-examples": {
          "Create Custom Prebuilt Entity Role request": {
            "$ref": "./examples/model/CreatePatternAnyExplicitListRequest.json"
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/regexentities/{regexEntityId}": {
      "get": {
        "summary": "Gets information of a regex entity model.",
        "operationId": "Model_GetRegexEntityEntityInfo",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "name": "regexEntityId",
            "in": "path",
            "description": "The regex entity model ID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "$ref": "#/parameters/ApiKey"
          }
        ],
        "responses": {
          "200": {
            "description": "A regex entity model info.",
            "schema": {
              "$ref": "#/definitions/RegexEntityExtractor"
            }
          },
          "429": {
            "$ref": "#/responses/429"
          },
          "400": {
            "description": "This error can be returned if the request's parameters are incorrect meaning the required parameters are missing, malformed, or too large.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          }
        },
        "x-ms-examples": {
          "Get Regex Entity request": {
            "$ref": "./examples/model/GetRegexEntityInfoRequest.json"
          }
        }
      },
      "put": {
        "summary": "Updates the regex entity model.",
        "operationId": "Model_UpdateRegexEntityModel",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "name": "regexEntityId",
            "in": "path",
            "description": "The regex entity extractor ID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "regexEntityUpdateObject",
            "in": "body",
            "description": "An object containing the new entity name and regex pattern.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RegexModelUpdateObject"
            }
          },
          {
            "$ref": "#/parameters/ApiKey"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully updated the regex entity extractor.",
            "schema": {
              "$ref": "#/definitions/OperationStatus"
            }
          },
          "429": {
            "$ref": "#/responses/429"
          },
          "400": {
            "description": "This error can be returned if the request's parameters are incorrect meaning the required parameters are missing, malformed, or too large.\r\n\r\nThis error can be returned if the request's body is incorrect meaning the JSON is missing, malformed, or too large.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          }
        },
        "x-ms-examples": {
          "Update Regex Entity request": {
            "$ref": "./examples/model/UpdateRegexEntityModelRequest.json"
          }
        }
      },
      "delete": {
        "summary": "Deletes a regex entity model from the application.",
        "operationId": "Model_DeleteRegexEntityModel",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "name": "regexEntityId",
            "in": "path",
            "description": "The regex entity extractor ID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "$ref": "#/parameters/ApiKey"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully operation.",
            "schema": {
              "$ref": "#/definitions/OperationStatus"
            }
          },
          "429": {
            "$ref": "#/responses/429"
          },
          "400": {
            "description": "This error can be returned if the request's parameters are incorrect meaning the required parameters are missing or malformed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          }
        },
        "x-ms-examples": {
          "Delete Regex Entity request": {
            "$ref": "./examples/model/DeleteRegexEntityRequest.json"
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/patternanyentities/{entityId}": {
      "get": {
        "summary": "Gets information about the application version's Pattern.Any model.",
        "operationId": "Model_GetPatternAnyEntityInfo",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "name": "entityId",
            "in": "path",
            "description": "The entity extractor ID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "$ref": "#/parameters/ApiKey"
          }
        ],
        "responses": {
          "200": {
            "description": "A regex entity model info.",
            "schema": {
              "$ref": "#/definitions/PatternAnyEntityExtractor"
            }
          },
          "429": {
            "$ref": "#/responses/429"
          },
          "400": {
            "description": "This error can be returned if the request's parameters are incorrect meaning the required parameters are missing, malformed, or too large.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          }
        },
        "x-ms-examples": {
          "Get Pattern.Any Entity request": {
            "$ref": "./examples/model/GetPatternAnyEntityInfoRequest.json"
          }
        }
      },
      "put": {
        "summary": "Updates the name and explicit list of a Pattern.Any entity model.",
        "operationId": "Model_UpdatePatternAnyEntityModel",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "name": "entityId",
            "in": "path",
            "description": "The Pattern.Any entity extractor ID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "patternAnyUpdateObject",
            "in": "body",
            "description": "An object containing the explicit list of the Pattern.Any entity.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PatternAnyModelUpdateObject"
            }
          },
          {
            "$ref": "#/parameters/ApiKey"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully updated the Pattern.Any entity extractor.",
            "schema": {
              "$ref": "#/definitions/OperationStatus"
            }
          },
          "429": {
            "$ref": "#/responses/429"
          },
          "400": {
            "description": "This error can be returned if the request's parameters are incorrect meaning the required parameters are missing, malformed, or too large.\r\n\r\nThis error can be returned if the request's body is incorrect meaning the JSON is missing, malformed, or too large.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          }
        },
        "x-ms-examples": {
          "Update Pattern.Any Entity request": {
            "$ref": "./examples/model/UpdatePatternAnyEntityRequest.json"
          }
        }
      },
      "delete": {
        "summary": "Deletes a Pattern.Any entity extractor from the application.",
        "operationId": "Model_DeletePatternAnyEntityModel",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "name": "entityId",
            "in": "path",
            "description": "The Pattern.Any entity extractor ID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "$ref": "#/parameters/ApiKey"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully operation.",
            "schema": {
              "$ref": "#/definitions/OperationStatus"
            }
          },
          "429": {
            "$ref": "#/responses/429"
          },
          "400": {
            "description": "This error can be returned if the request's parameters are incorrect meaning the required parameters are missing or malformed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          }
        },
        "x-ms-examples": {
          "Delete Pattern.Any Entity request": {
            "$ref": "./examples/model/DeletePatternAnyEntityRequest.json"
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/entities/{entityId}/roles/{roleId}": {
      "get": {
        "summary": "Get one entity role for a given entity",
        "operationId": "Model_GetEntityRole",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "name": "entityId",
            "in": "path",
            "description": "entity ID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "roleId",
            "in": "path",
            "description": "entity role ID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "$ref": "#/parameters/ApiKey"
          }
        ],
        "responses": {
          "200": {
            "description": "An entity role",
            "schema": {
              "$ref": "#/definitions/EntityRole"
            }
          },
          "429": {
            "$ref": "#/responses/429"
          },
          "400": {
            "description": "This error can be returned if the request's parameters are incorrect meaning the required parameters are missing, malformed, or too large.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          }
        },
        "x-ms-examples": {
          "Get Entity Extractor Role request": {
            "$ref": "./examples/model/GetEntityRoleInfoRequest.json"
          }
        }
      },
      "put": {
        "summary": "Update an entity role for a given entity",
        "operationId": "Model_UpdateEntityRole",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "name": "entityId",
            "in": "path",
            "description": "The entity ID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "roleId",
            "in": "path",
            "description": "The entity role ID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "entityRoleUpdateObject",
            "in": "body",
            "description": "The new entity role.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EntityRoleUpdateObject"
            }
          },
          {
            "$ref": "#/parameters/ApiKey"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully updated the entity role.",
            "schema": {
              "$ref": "#/definitions/OperationStatus"
            }
          },
          "429": {
            "$ref": "#/responses/429"
          },
          "400": {
            "description": "This error can be returned if the request's parameters are incorrect meaning the required parameters are missing, malformed, or too large.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          }
        },
        "x-ms-examples": {
          "Update Entity Extractor Role request": {
            "$ref": "./examples/model/UpdateEntityRoleRequest.json"
          }
        }
      },
      "delete": {
        "summary": "Delete an entity role.",
        "operationId": "Model_DeleteEntityRole",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "name": "entityId",
            "in": "path",
            "description": "The entity ID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "roleId",
            "in": "path",
            "description": "The entity role Id.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "$ref": "#/parameters/ApiKey"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully operation.",
            "schema": {
              "$ref": "#/definitions/OperationStatus"
            }
          },
          "429": {
            "$ref": "#/responses/429"
          },
          "400": {
            "description": "This error can be returned if the request's parameters are incorrect meaning the required parameters are missing, malformed, or too large.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          }
        },
        "x-ms-examples": {
          "Delete Entity Extractor Role request": {
            "$ref": "./examples/model/DeleteEntityRoleRequest.json"
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/prebuilts/{entityId}/roles/{roleId}": {
      "get": {
        "summary": "Get one entity role for a given entity",
        "operationId": "Model_GetPrebuiltEntityRole",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "name": "entityId",
            "in": "path",
            "description": "entity ID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "roleId",
            "in": "path",
            "description": "entity role ID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "$ref": "#/parameters/ApiKey"
          }
        ],
        "responses": {
          "200": {
            "description": "An entity role",
            "schema": {
              "$ref": "#/definitions/EntityRole"
            }
          },
          "429": {
            "$ref": "#/responses/429"
          },
          "400": {
            "description": "This error can be returned if the request's parameters are incorrect meaning the required parameters are missing, malformed, or too large.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          }
        },
        "x-ms-examples": {
          "Get Prebuilt Entity Role request": {
            "$ref": "./examples/model/GetPrebuiltEntityRoleInfoRequest.json"
          }
        }
      },
      "put": {
        "summary": "Update an entity role for a given entity",
        "operationId": "Model_UpdatePrebuiltEntityRole",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "name": "entityId",
            "in": "path",
            "description": "The entity ID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "roleId",
            "in": "path",
            "description": "The entity role ID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "entityRoleUpdateObject",
            "in": "body",
            "description": "The new entity role.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EntityRoleUpdateObject"
            }
          },
          {
            "$ref": "#/parameters/ApiKey"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully updated the entity role.",
            "schema": {
              "$ref": "#/definitions/OperationStatus"
            }
          },
          "429": {
            "$ref": "#/responses/429"
          },
          "400": {
            "description": "This error can be returned if the request's parameters are incorrect meaning the required parameters are missing, malformed, or too large.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          }
        },
        "x-ms-examples": {
          "Update Prebuilt Entity Extractor Role request": {
            "$ref": "./examples/model/UpdatePrebuiltEntityRoleRequest.json"
          }
        }
      },
      "delete": {
        "summary": "Delete an entity role.",
        "operationId": "Model_DeletePrebuiltEntityRole",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "name": "entityId",
            "in": "path",
            "description": "The entity ID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "roleId",
            "in": "path",
            "description": "The entity role Id.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "$ref": "#/parameters/ApiKey"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully operation.",
            "schema": {
              "$ref": "#/definitions/OperationStatus"
            }
          },
          "429": {
            "$ref": "#/responses/429"
          },
          "400": {
            "description": "This error can be returned if the request's parameters are incorrect meaning the required parameters are missing, malformed, or too large.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          }
        },
        "x-ms-examples": {
          "Delete Prebuilt Entity Role request": {
            "$ref": "./examples/model/DeletePrebuiltEntityRoleRequest.json"
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/closedlists/{entityId}/roles/{roleId}": {
      "get": {
        "summary": "Get one entity role for a given entity",
        "operationId": "Model_GetClosedListEntityRole",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "name": "entityId",
            "in": "path",
            "description": "entity ID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "roleId",
            "in": "path",
            "description": "entity role ID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "$ref": "#/parameters/ApiKey"
          }
        ],
        "responses": {
          "200": {
            "description": "An entity role",
            "schema": {
              "$ref": "#/definitions/EntityRole"
            }
          },
          "429": {
            "$ref": "#/responses/429"
          },
          "400": {
            "description": "This error can be returned if the request's parameters are incorrect meaning the required parameters are missing, malformed, or too large.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          }
        },
        "x-ms-examples": {
          "Get Closed List Entity Role request": {
            "$ref": "./examples/model/GetClosedListEntityRoleInfoRequest.json"
          }
        }
      },
      "put": {
        "summary": "Update an entity role for a given entity",
        "operationId": "Model_UpdateClosedListEntityRole",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "name": "entityId",
            "in": "path",
            "description": "The entity ID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "roleId",
            "in": "path",
            "description": "The entity role ID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "entityRoleUpdateObject",
            "in": "body",
            "description": "The new entity role.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EntityRoleUpdateObject"
            }
          },
          {
            "$ref": "#/parameters/ApiKey"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully updated the entity role.",
            "schema": {
              "$ref": "#/definitions/OperationStatus"
            }
          },
          "429": {
            "$ref": "#/responses/429"
          },
          "400": {
            "description": "This error can be returned if the request's parameters are incorrect meaning the required parameters are missing, malformed, or too large.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          }
        },
        "x-ms-examples": {
          "Update Closed List Entity Extractor Role request": {
            "$ref": "./examples/model/UpdateClosedListEntityRoleRequest.json"
          }
        }
      },
      "delete": {
        "summary": "Delete an entity role.",
        "operationId": "Model_DeleteClosedListEntityRole",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "name": "entityId",
            "in": "path",
            "description": "The entity ID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "roleId",
            "in": "path",
            "description": "The entity role Id.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "$ref": "#/parameters/ApiKey"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully operation.",
            "schema": {
              "$ref": "#/definitions/OperationStatus"
            }
          },
          "429": {
            "$ref": "#/responses/429"
          },
          "400": {
            "description": "This error can be returned if the request's parameters are incorrect meaning the required parameters are missing, malformed, or too large.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          }
        },
        "x-ms-examples": {
          "Delete Prebuilt Entity Role request": {
            "$ref": "./examples/model/DeletePrebuiltEntityRoleRequest.json"
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/regexentities/{entityId}/roles/{roleId}": {
      "get": {
        "summary": "Get one entity role for a given entity",
        "operationId": "Model_GetRegexEntityRole",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "name": "entityId",
            "in": "path",
            "description": "entity ID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "roleId",
            "in": "path",
            "description": "entity role ID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "$ref": "#/parameters/ApiKey"
          }
        ],
        "responses": {
          "200": {
            "description": "An entity role",
            "schema": {
              "$ref": "#/definitions/EntityRole"
            }
          },
          "429": {
            "$ref": "#/responses/429"
          },
          "400": {
            "description": "This error can be returned if the request's parameters are incorrect meaning the required parameters are missing, malformed, or too large.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          }
        },
        "x-ms-examples": {
          "Get Regex Entity Role request": {
            "$ref": "./examples/model/GetRegexEntityRoleInfoRequest.json"
          }
        }
      },
      "put": {
        "summary": "Update an entity role for a given entity",
        "operationId": "Model_UpdateRegexEntityRole",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "name": "entityId",
            "in": "path",
            "description": "The entity ID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "roleId",
            "in": "path",
            "description": "The entity role ID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "entityRoleUpdateObject",
            "in": "body",
            "description": "The new entity role.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EntityRoleUpdateObject"
            }
          },
          {
            "$ref": "#/parameters/ApiKey"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully updated the entity role.",
            "schema": {
              "$ref": "#/definitions/OperationStatus"
            }
          },
          "429": {
            "$ref": "#/responses/429"
          },
          "400": {
            "description": "This error can be returned if the request's parameters are incorrect meaning the required parameters are missing, malformed, or too large.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          }
        },
        "x-ms-examples": {
          "Update Regex Entity Extractor Role request": {
            "$ref": "./examples/model/UpdateRegexEntityRoleRequest.json"
          }
        }
      },
      "delete": {
        "summary": "Delete an entity role.",
        "operationId": "Model_DeleteRegexEntityRole",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "name": "entityId",
            "in": "path",
            "description": "The entity ID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "roleId",
            "in": "path",
            "description": "The entity role Id.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "$ref": "#/parameters/ApiKey"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully operation.",
            "schema": {
              "$ref": "#/definitions/OperationStatus"
            }
          },
          "429": {
            "$ref": "#/responses/429"
          },
          "400": {
            "description": "This error can be returned if the request's parameters are incorrect meaning the required parameters are missing, malformed, or too large.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          }
        },
        "x-ms-examples": {
          "Delete Regex Entity Role request": {
            "$ref": "./examples/model/DeleteRegexEntityRoleRequest.json"
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/compositeentities/{cEntityId}/roles/{roleId}": {
      "get": {
        "summary": "Get one entity role for a given entity",
        "operationId": "Model_GetCompositeEntityRole",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "$ref": "#/parameters/CEntityIdInPath"
          },
          {
            "name": "roleId",
            "in": "path",
            "description": "entity role ID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "$ref": "#/parameters/ApiKey"
          }
        ],
        "responses": {
          "200": {
            "description": "An entity role",
            "schema": {
              "$ref": "#/definitions/EntityRole"
            }
          },
          "429": {
            "$ref": "#/responses/429"
          },
          "400": {
            "description": "This error can be returned if the request's parameters are incorrect meaning the required parameters are missing, malformed, or too large.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          }
        },
        "x-ms-examples": {
          "Get Composite Entity Role request": {
            "$ref": "./examples/model/GetCompositeEntityRoleInfoRequest.json"
          }
        }
      },
      "put": {
        "summary": "Update an entity role for a given entity",
        "operationId": "Model_UpdateCompositeEntityRole",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "$ref": "#/parameters/CEntityIdInPath"
          },
          {
            "name": "roleId",
            "in": "path",
            "description": "The entity role ID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "entityRoleUpdateObject",
            "in": "body",
            "description": "The new entity role.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EntityRoleUpdateObject"
            }
          },
          {
            "$ref": "#/parameters/ApiKey"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully updated the entity role.",
            "schema": {
              "$ref": "#/definitions/OperationStatus"
            }
          },
          "429": {
            "$ref": "#/responses/429"
          },
          "400": {
            "description": "This error can be returned if the request's parameters are incorrect meaning the required parameters are missing, malformed, or too large.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          }
        },
        "x-ms-examples": {
          "Update Composite Entity Extractor Role request": {
            "$ref": "./examples/model/UpdateCompositeEntityRoleRequest.json"
          }
        }
      },
      "delete": {
        "summary": "Delete an entity role.",
        "operationId": "Model_DeleteCompositeEntityRole",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "$ref": "#/parameters/CEntityIdInPath"
          },
          {
            "name": "roleId",
            "in": "path",
            "description": "The entity role Id.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "$ref": "#/parameters/ApiKey"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully operation.",
            "schema": {
              "$ref": "#/definitions/OperationStatus"
            }
          },
          "429": {
            "$ref": "#/responses/429"
          },
          "400": {
            "description": "This error can be returned if the request's parameters are incorrect meaning the required parameters are missing, malformed, or too large.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          }
        },
        "x-ms-examples": {
          "Delete Composite Entity Role request": {
            "$ref": "./examples/model/DeleteCompositeEntityRoleRequest.json"
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/patternanyentities/{entityId}/roles/{roleId}": {
      "get": {
        "summary": "Get one entity role for a given entity",
        "operationId": "Model_GetPatternAnyEntityRole",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "name": "entityId",
            "in": "path",
            "description": "entity ID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "roleId",
            "in": "path",
            "description": "entity role ID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "$ref": "#/parameters/ApiKey"
          }
        ],
        "responses": {
          "200": {
            "description": "An entity role",
            "schema": {
              "$ref": "#/definitions/EntityRole"
            }
          },
          "429": {
            "$ref": "#/responses/429"
          },
          "400": {
            "description": "This error can be returned if the request's parameters are incorrect meaning the required parameters are missing, malformed, or too large.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          }
        },
        "x-ms-examples": {
          "Get Pattern.Any Entity Role request": {
            "$ref": "./examples/model/GetPatternAnyEntityRoleInfoRequest.json"
          }
        }
      },
      "put": {
        "summary": "Update an entity role for a given entity",
        "operationId": "Model_UpdatePatternAnyEntityRole",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "name": "entityId",
            "in": "path",
            "description": "The entity ID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "roleId",
            "in": "path",
            "description": "The entity role ID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "entityRoleUpdateObject",
            "in": "body",
            "description": "The new entity role.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EntityRoleUpdateObject"
            }
          },
          {
            "$ref": "#/parameters/ApiKey"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully updated the entity role.",
            "schema": {
              "$ref": "#/definitions/OperationStatus"
            }
          },
          "429": {
            "$ref": "#/responses/429"
          },
          "400": {
            "description": "This error can be returned if the request's parameters are incorrect meaning the required parameters are missing, malformed, or too large.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          }
        },
        "x-ms-examples": {
          "Update Pattern.Any Entity Extractor Role request": {
            "$ref": "./examples/model/UpdatePatternAnyEntityRoleRequest.json"
          }
        }
      },
      "delete": {
        "summary": "Delete an entity role.",
        "operationId": "Model_DeletePatternAnyEntityRole",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "name": "entityId",
            "in": "path",
            "description": "The entity ID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "roleId",
            "in": "path",
            "description": "The entity role Id.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "$ref": "#/parameters/ApiKey"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully operation.",
            "schema": {
              "$ref": "#/definitions/OperationStatus"
            }
          },
          "429": {
            "$ref": "#/responses/429"
          },
          "400": {
            "description": "This error can be returned if the request's parameters are incorrect meaning the required parameters are missing, malformed, or too large.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          }
        },
        "x-ms-examples": {
          "Delete Pattern.Any Entity Role request": {
            "$ref": "./examples/model/DeletePatternAnyEntityRoleRequest.json"
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/hierarchicalentities/{hEntityId}/roles/{roleId}": {
      "get": {
        "summary": "Get one entity role for a given entity",
        "operationId": "Model_GetHierarchicalEntityRole",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "$ref": "#/parameters/HEntityIdInPath"
          },
          {
            "name": "roleId",
            "in": "path",
            "description": "entity role ID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "$ref": "#/parameters/ApiKey"
          }
        ],
        "responses": {
          "200": {
            "description": "An entity role",
            "schema": {
              "$ref": "#/definitions/EntityRole"
            }
          },
          "429": {
            "$ref": "#/responses/429"
          },
          "400": {
            "description": "This error can be returned if the request's parameters are incorrect meaning the required parameters are missing, malformed, or too large.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          }
        },
        "x-ms-examples": {
          "Get Hierarchical Entity Role request": {
            "$ref": "./examples/model/GetHierarchicalEntityRoleInfoRequest.json"
          }
        }
      },
      "put": {
        "summary": "Update an entity role for a given entity",
        "operationId": "Model_UpdateHierarchicalEntityRole",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "$ref": "#/parameters/HEntityIdInPath"
          },
          {
            "name": "roleId",
            "in": "path",
            "description": "The entity role ID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "entityRoleUpdateObject",
            "in": "body",
            "description": "The new entity role.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EntityRoleUpdateObject"
            }
          },
          {
            "$ref": "#/parameters/ApiKey"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully updated the entity role.",
            "schema": {
              "$ref": "#/definitions/OperationStatus"
            }
          },
          "429": {
            "$ref": "#/responses/429"
          },
          "400": {
            "description": "This error can be returned if the request's parameters are incorrect meaning the required parameters are missing, malformed, or too large.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          }
        },
        "x-ms-examples": {
          "Update Hierarchical Entity Extractor Role request": {
            "$ref": "./examples/model/UpdateHierarchicalEntityRoleRequest.json"
          }
        }
      },
      "delete": {
        "summary": "Delete an entity role.",
        "operationId": "Model_DeleteHierarchicalEntityRole",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "$ref": "#/parameters/HEntityIdInPath"
          },
          {
            "name": "roleId",
            "in": "path",
            "description": "The entity role Id.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "$ref": "#/parameters/ApiKey"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully operation.",
            "schema": {
              "$ref": "#/definitions/OperationStatus"
            }
          },
          "429": {
            "$ref": "#/responses/429"
          },
          "400": {
            "description": "This error can be returned if the request's parameters are incorrect meaning the required parameters are missing, malformed, or too large.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          }
        },
        "x-ms-examples": {
          "Delete Hierarchical Entity Role request": {
            "$ref": "./examples/model/DeleteHierarchicalEntityRoleRequest.json"
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/customprebuiltentities/{entityId}/roles/{roleId}": {
      "get": {
        "summary": "Get one entity role for a given entity",
        "operationId": "Model_GetCustomEntityRole",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "name": "entityId",
            "in": "path",
            "description": "entity ID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "roleId",
            "in": "path",
            "description": "entity role ID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "$ref": "#/parameters/ApiKey"
          }
        ],
        "responses": {
          "200": {
            "description": "An entity role",
            "schema": {
              "$ref": "#/definitions/EntityRole"
            }
          },
          "429": {
            "$ref": "#/responses/429"
          },
          "400": {
            "description": "This error can be returned if the request's parameters are incorrect meaning the required parameters are missing, malformed, or too large.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          }
        },
        "x-ms-examples": {
          "Get Custom Prebuilt Domain Entity Role request": {
            "$ref": "./examples/model/GetCustomPrebuiltEntityRoleInfoRequest.json"
          }
        }
      },
      "put": {
        "summary": "Update an entity role for a given entity",
        "operationId": "Model_UpdateCustomPrebuiltEntityRole",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "name": "entityId",
            "in": "path",
            "description": "The entity ID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "roleId",
            "in": "path",
            "description": "The entity role ID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "entityRoleUpdateObject",
            "in": "body",
            "description": "The new entity role.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EntityRoleUpdateObject"
            }
          },
          {
            "$ref": "#/parameters/ApiKey"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully updated the entity role.",
            "schema": {
              "$ref": "#/definitions/OperationStatus"
            }
          },
          "429": {
            "$ref": "#/responses/429"
          },
          "400": {
            "description": "This error can be returned if the request's parameters are incorrect meaning the required parameters are missing, malformed, or too large.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          }
        },
        "x-ms-examples": {
          "Update Custom Prebuilt Entity Extractor Role request": {
            "$ref": "./examples/model/UpdateCustomPrebuiltEntityRoleRequest.json"
          }
        }
      },
      "delete": {
        "summary": "Delete an entity role.",
        "operationId": "Model_DeleteCustomEntityRole",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "name": "entityId",
            "in": "path",
            "description": "The entity ID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "roleId",
            "in": "path",
            "description": "The entity role Id.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "$ref": "#/parameters/ApiKey"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully operation.",
            "schema": {
              "$ref": "#/definitions/OperationStatus"
            }
          },
          "429": {
            "$ref": "#/responses/429"
          },
          "400": {
            "description": "This error can be returned if the request's parameters are incorrect meaning the required parameters are missing, malformed, or too large.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          }
        },
        "x-ms-examples": {
          "Delete Custom Prebuilt Entity Role request": {
            "$ref": "./examples/model/DeleteCustomPrebuiltEntityRoleRequest.json"
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/patternanyentities/{entityId}/explicitlist/{itemId}": {
      "get": {
        "summary": "Get the explicit list of the pattern.any entity.",
        "operationId": "Model_GetExplicitListItem",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "name": "entityId",
            "in": "path",
            "description": "The Pattern.Any entity Id.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "itemId",
            "in": "path",
            "description": "The explicit list item Id.",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "$ref": "#/parameters/ApiKey"
          }
        ],
        "responses": {
          "200": {
            "description": "An explicit list item info.",
            "schema": {
              "$ref": "#/definitions/ExplicitListItem"
            }
          },
          "429": {
            "$ref": "#/responses/429"
          },
          "400": {
            "description": "This error can be returned if the request's parameters are incorrect meaning the required parameters are missing, malformed, or too large.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          }
        },
        "x-ms-examples": {
          "Get Pattern.Any Explicit List Item request": {
            "$ref": "./examples/model/GetPatternAnyExplicitListItemRequest.json"
          }
        }
      },
      "put": {
        "summary": "Updates an explicit list item for a Pattern.Any entity.",
        "operationId": "Model_UpdateExplicitListItem",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "name": "entityId",
            "in": "path",
            "description": "The Pattern.Any entity extractor ID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "itemId",
            "in": "path",
            "description": "The explicit list item ID.",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "item",
            "in": "body",
            "description": "The new explicit list item.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ExplicitListItemUpdateObject"
            }
          },
          {
            "$ref": "#/parameters/ApiKey"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully updated the explicit list item.",
            "schema": {
              "$ref": "#/definitions/OperationStatus"
            }
          },
          "429": {
            "$ref": "#/responses/429"
          },
          "400": {
            "description": "This error can be returned if the request's parameters are incorrect meaning the required parameters are missing, malformed, or too large.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          }
        },
        "x-ms-examples": {
          "Update Pattern.Any Entity Explicit List Item request": {
            "$ref": "./examples/model/UpdatePatternAnyEntityExplicitListItemRequest.json"
          }
        }
      },
      "delete": {
        "summary": "Delete the explicit list item from the Pattern.any explicit list.",
        "operationId": "Model_DeleteExplicitListItem",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "name": "entityId",
            "in": "path",
            "description": "The pattern.any entity id.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "itemId",
            "in": "path",
            "description": "The explicit list item which will be deleted.",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "$ref": "#/parameters/ApiKey"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully operation.",
            "schema": {
              "$ref": "#/definitions/OperationStatus"
            }
          },
          "429": {
            "$ref": "#/responses/429"
          },
          "400": {
            "description": "This error can be returned if the request's parameters are incorrect meaning the required parameters are missing, malformed, or too large.\r\n\r\nThis error can be returned if the request's body is incorrect meaning the JSON is missing, malformed, or too large.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          }
        },
        "x-ms-examples": {
          "Delete Pattern.Any Explicit List Item request": {
            "$ref": "./examples/model/DeletePatternAnyExplicitListItemRequest.json"
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/patternrule": {
      "post": {
        "summary": "Adds one pattern to the specified application.",
        "operationId": "Pattern_AddPattern",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "name": "pattern",
            "in": "body",
            "description": "The input pattern.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PatternRuleCreateObject"
            }
          },
          {
            "$ref": "#/parameters/ApiKey"
          }
        ],
        "responses": {
          "201": {
            "description": "The created pattern",
            "schema": {
              "$ref": "#/definitions/PatternRuleInfo"
            }
          },
          "429": {
            "$ref": "#/responses/429"
          },
          "400": {
            "description": "This error can be returned if the request's parameters are incorrect meaning the required parameters are missing, malformed, or too large.\r\n\r\nThis error can be returned if the request's body is incorrect meaning the JSON is missing, malformed, or too large.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          }
        },
        "x-ms-examples": {
          "Add Pattern request": {
            "$ref": "./examples/patterns/AddPatternRequest.json"
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/patternrules": {
      "get": {
        "summary": "Returns an application version's patterns.",
        "operationId": "Pattern_GetPatterns",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "$ref": "#/parameters/SkipInPath"
          },
          {
            "$ref": "#/parameters/TakeInPath"
          },
          {
            "$ref": "#/parameters/ApiKey"
          }
        ],
        "responses": {
          "200": {
            "description": "The retrieved patterns",
            "schema": {
              "$ref": "#/definitions/PatternRuleList"
            }
          },
          "429": {
            "$ref": "#/responses/429"
          },
          "400": {
            "description": "This error can be returned if the request's parameters are incorrect meaning the required parameters are missing, malformed, or too large.\r\n\r\nThis error can be returned if the request's body is incorrect meaning the JSON is missing, malformed, or too large.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          }
        },
        "x-ms-examples": {
          "Get Application Version Patterns request": {
            "$ref": "./examples/patterns/GetPatternsRequest.json"
          }
        }
      },
      "put": {
        "summary": "Updates patterns",
        "operationId": "Pattern_UpdatePatterns",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "name": "patterns",
            "in": "body",
            "description": "An array represents the patterns.",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PatternRuleUpdateObject"
              }
            }
          },
          {
            "$ref": "#/parameters/ApiKey"
          }
        ],
        "responses": {
          "200": {
            "description": "The updated patterns",
            "schema": {
              "$ref": "#/definitions/PatternRuleList"
            }
          },
          "429": {
            "$ref": "#/responses/429"
          },
          "400": {
            "description": "This error can be returned if the request's parameters are incorrect meaning the required parameters are missing, malformed, or too large.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          }
        },
        "x-ms-examples": {
          "Batch Update Patterns request": {
            "$ref": "./examples/patterns/UpdatePatternsRequest.json"
          }
        }
      },
      "post": {
        "summary": "Adds a batch of patterns to the specified application.",
        "operationId": "Pattern_BatchAddPatterns",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "name": "patterns",
            "in": "body",
            "description": "A JSON array containing patterns.",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PatternRuleCreateObject"
              }
            }
          },
          {
            "$ref": "#/parameters/ApiKey"
          }
        ],
        "responses": {
          "201": {
            "description": "The created patterns",
            "schema": {
              "$ref": "#/definitions/PatternRuleList"
            }
          },
          "429": {
            "$ref": "#/responses/429"
          },
          "400": {
            "description": "This error can be returned if the request's parameters are incorrect meaning the required parameters are missing, malformed, or too large.\r\n\r\nThis error can be returned if the request's body is incorrect meaning the JSON is missing, malformed, or too large.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          }
        },
        "x-ms-examples": {
          "Batch Add Patterns request": {
            "$ref": "./examples/patterns/BatchAddLabelsRequest.json"
          }
        }
      },
      "delete": {
        "summary": "Deletes the patterns with the specified IDs.",
        "operationId": "Pattern_DeletePatterns",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "name": "patternIds",
            "in": "body",
            "description": "The patterns IDs.",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "format": "uuid",
                "type": "string"
              }
            }
          },
          {
            "$ref": "#/parameters/ApiKey"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully operation.",
            "schema": {
              "$ref": "#/definitions/OperationStatus"
            }
          },
          "429": {
            "$ref": "#/responses/429"
          },
          "400": {
            "description": "This error can be returned if the request's parameters are incorrect meaning the required parameters are missing, malformed, or too large.\r\n\r\nThis error can be returned if the request's body is incorrect meaning the JSON is missing, malformed, or too large.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          }
        },
        "x-ms-examples": {
          "Batch Delete Patterns request": {
            "$ref": "./examples/patterns/DeletePatternsRequest.json"
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/patternrules/{patternId}": {
      "put": {
        "summary": "Updates a pattern",
        "operationId": "Pattern_UpdatePattern",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "name": "patternId",
            "in": "path",
            "description": "The pattern ID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "pattern",
            "in": "body",
            "description": "An object representing a pattern.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PatternRuleUpdateObject"
            }
          },
          {
            "$ref": "#/parameters/ApiKey"
          }
        ],
        "responses": {
          "200": {
            "description": "The updated pattern",
            "schema": {
              "$ref": "#/definitions/PatternRuleInfo"
            }
          },
          "429": {
            "$ref": "#/responses/429"
          },
          "400": {
            "description": "This error can be returned if the request's parameters are incorrect meaning the required parameters are missing, malformed, or too large.\r\n\r\nThis error can be returned if the request's body is incorrect meaning the JSON is missing, malformed, or too large.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          }
        },
        "x-ms-examples": {
          "Update Pattern request": {
            "$ref": "./examples/patterns/UpdatePatternRequest.json"
          }
        }
      },
      "delete": {
        "summary": "Deletes the pattern with the specified ID.",
        "operationId": "Pattern_DeletePattern",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "name": "patternId",
            "in": "path",
            "description": "The pattern ID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "$ref": "#/parameters/ApiKey"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully operation.",
            "schema": {
              "$ref": "#/definitions/OperationStatus"
            }
          },
          "429": {
            "$ref": "#/responses/429"
          },
          "400": {
            "description": "This error can be returned if the request's parameters are incorrect meaning the required parameters are missing, malformed, or too large.\r\n\r\nThis error can be returned if the request's body is incorrect meaning the JSON is missing, malformed, or too large.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          }
        },
        "x-ms-examples": {
          "Delete Pattern request": {
            "$ref": "./examples/patterns/DeletePatternRequest.json"
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/intents/{intentId}/patternrules": {
      "get": {
        "summary": "Returns patterns to be retrieved for the specific intent.",
        "operationId": "Pattern_GetIntentPatterns",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "$ref": "#/parameters/IntentIdInPath"
          },
          {
            "$ref": "#/parameters/SkipInPath"
          },
          {
            "$ref": "#/parameters/TakeInPath"
          },
          {
            "$ref": "#/parameters/ApiKey"
          }
        ],
        "responses": {
          "200": {
            "description": "The retrieved patterns",
            "schema": {
              "$ref": "#/definitions/PatternRuleList"
            }
          },
          "429": {
            "$ref": "#/responses/429"
          },
          "400": {
            "description": "This error can be returned if the request's parameters are incorrect meaning the required parameters are missing, malformed, or too large.\r\n\r\nThis error can be returned if the request's body is incorrect meaning the JSON is missing, malformed, or too large.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          }
        },
        "x-ms-examples": {
          "Get Intent Patterns request": {
            "$ref": "./examples/patterns/GetIntentPatternsRequest.json"
          }
        }
      }
    },
    "/apps/{appId}/versions/{versionId}/settings": {
      "get": {
        "description": "Gets the application version settings.",
        "operationId": "Settings_List",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "$ref": "#/parameters/ApiKey"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of the application version settings.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AppVersionSettingObject"
              }
            }
          },
          "429": {
            "$ref": "#/responses/429"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "400": {
            "description": "This error can be returned if the request's parameters are incorrect meaning the required parameters are missing, malformed, or too large.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "403": {
            "$ref": "#/responses/403"
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Get Application Version settings request": {
            "$ref": "./examples/versions/GetApplicationVersionSettingsRequest.json"
          }
        }
      },
      "put": {
        "description": "Updates the application version settings.",
        "operationId": "Settings_Update",
        "parameters": [
          {
            "$ref": "#/parameters/AppIdInPath"
          },
          {
            "$ref": "#/parameters/VersionIdInPath"
          },
          {
            "name": "listOfAppVersionSettingObject",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AppVersionSettingObject"
            },
            "description": "A list of the updated application version settings."
          },
          {
            "$ref": "#/parameters/ApiKey"
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation.",
            "schema": {
              "$ref": "#/definitions/OperationStatus"
            }
          },
          "429": {
            "$ref": "#/responses/429"
          },
          "400": {
            "description": "This error can be returned if the request's parameters are incorrect meaning the required parameters are missing, malformed, or too large.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Update Application Version settings request": {
            "$ref": "./examples/versions/UpdateApplicationVersionSettingsRequest.json"
          }
        }
      }
    }
  },
  "responses": {
    "401": {
      "description": "You do not have access. \r\n\r\nReasons can include:\r\n\r\n* used endpoint subscription key, instead of authoring key\r\n* invalid, malformed, or empty authoring key\r\n* authoring key doesn't match region\r\n* you are not the owner or collaborator\r\n* invalid order of API calls\r\n",
      "schema": {
        "$ref": "#/definitions/ErrorResponse"
      }
    },
    "403": {
      "description": "Total monthly key quota limit exceeded",
      "schema": {
        "$ref": "#/definitions/ErrorResponse"
      }
    },
    "429": {
      "description": "Rate limit is exceeded.",
      "schema": {
        "$ref": "#/definitions/ErrorResponse"
      }
    }
  },
  "definitions": {
    "EntityLabelObject": {
      "description": "Defines the entity type and position of the extracted entity within the example.",
      "type": "object",
      "required": [
        "entityName",
        "startCharIndex",
        "endCharIndex"
      ],
      "properties": {
        "entityName": {
          "description": "The entity type.",
          "type": "string"
        },
        "startCharIndex": {
          "description": "The index within the utterance where the extracted entity starts.",
          "type": "integer"
        },
        "endCharIndex": {
          "description": "The index within the utterance where the extracted entity ends.",
          "type": "integer"
        }
      }
    },
    "ApplicationCreateObject": {
      "description": "Properties for creating a new LUIS Application",
      "type": "object",
      "required": [
        "culture",
        "name"
      ],
      "properties": {
        "culture": {
          "description": "The culture for the new application. It is the language that your app understands and speaks. E.g.: \"en-us\". Note: the culture cannot be changed after the app is created.",
          "type": "string"
        },
        "domain": {
          "description": "The domain for the new application. Optional. E.g.: Comics.",
          "type": "string"
        },
        "description": {
          "description": "Description of the new application. Optional.",
          "type": "string"
        },
        "initialVersionId": {
          "description": "The initial version ID. Optional. Default value is: \"0.1\"",
          "type": "string"
        },
        "usageScenario": {
          "description": "Defines the scenario for the new application. Optional. E.g.: IoT.",
          "type": "string"
        },
        "name": {
          "description": "The name for the new application.",
          "type": "string"
        }
      }
    },
    "PrebuiltDomainCreateBaseObject": {
      "description": "A model object containing the name of the custom prebuilt entity and the name of the domain to which this model belongs.",
      "type": "object",
      "properties": {
        "domainName": {
          "description": "The domain name.",
          "type": "string"
        }
      }
    },
    "PrebuiltDomainCreateObject": {
      "description": "A prebuilt domain create object containing the name and culture of the domain.",
      "type": "object",
      "properties": {
        "domainName": {
          "description": "The domain name.",
          "type": "string"
        },
        "culture": {
          "description": "The culture of the new domain.",
          "type": "string"
        }
      }
    },
    "PrebuiltDomainModelCreateObject": {
      "description": "A model object containing the name of the custom prebuilt intent or entity and the name of the domain to which this model belongs.",
      "type": "object",
      "properties": {
        "domainName": {
          "description": "The domain name.",
          "type": "string"
        },
        "modelName": {
          "description": "The intent name or entity name.",
          "type": "string"
        }
      }
    },
    "HierarchicalEntityModel": {
      "description": "A Hierarchical Entity Extractor.",
      "type": "object",
      "properties": {
        "children": {
          "description": "Child entities.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "name": {
          "description": "Entity name.",
          "type": "string"
        }
      }
    },
    "CompositeEntityModel": {
      "description": "A composite entity.",
      "type": "object",
      "properties": {
        "children": {
          "description": "Child entities.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "name": {
          "description": "Entity name.",
          "type": "string"
        }
      }
    },
    "JSONEntity": {
      "description": "Exported Model - Extracted Entity from utterance.",
      "type": "object",
      "required": [
        "startPos",
        "endPos",
        "entity"
      ],
      "properties": {
        "startPos": {
          "description": "The index within the utterance where the extracted entity starts.",
          "type": "integer"
        },
        "endPos": {
          "description": "The index within the utterance where the extracted entity ends.",
          "type": "integer"
        },
        "entity": {
          "description": "The entity name.",
          "type": "string"
        }
      }
    },
    "ApplicationSettingUpdateObject": {
      "description": "Object model for updating an application's settings.",
      "type": "object",
      "properties": {
        "public": {
          "description": "Setting your application as public allows other people to use your application's endpoint using their own keys.",
          "type": "boolean",
          "x-nullable": false
        }
      }
    },
    "PublishSettingUpdateObject": {
      "description": "Object model for updating an application's publish settings.",
      "type": "object",
      "properties": {
        "sentimentAnalysis": {
          "description": "Setting sentiment analysis as true returns the Sentiment of the input utterance along with the resopnse",
          "type": "boolean",
          "x-nullable": false
        },
        "speech": {
          "description": "Setting speech as public enables speech priming in your app",
          "type": "boolean",
          "x-nullable": false
        },
        "spellChecker": {
          "description": "Setting spell checker as public enables spell checking the input utterance.",
          "type": "boolean",
          "x-nullable": false
        }
      }
    },
    "ExampleLabelObject": {
      "description": "A labeled example.",
      "type": "object",
      "properties": {
        "text": {
          "description": "The sample's utterance.",
          "type": "string"
        },
        "entityLabels": {
          "description": "The idenfied entities within the utterance.",
          "items": {
            "type": "object",
            "$ref": "#/definitions/EntityLabelObject"
          },
          "type": "array"
        },
        "intentName": {
          "description": "The idenfitied intent representing the utterance.",
          "type": "string"
        }
      }
    },
    "PhraselistCreateObject": {
      "description": "Object model for creating a phraselist model.",
      "type": "object",
      "properties": {
        "phrases": {
          "description": "List of comma-separated phrases that represent the Phraselist.",
          "type": "string"
        },
        "name": {
          "description": "The Phraselist name.",
          "type": "string"
        },
        "isExchangeable": {
          "description": "An exchangeable phrase list feature serves as a single feature to the LUIS underlying training algorithm. It is used as a lexicon lookup feature where its value is 1 if the lexicon contains a given word or 0 if it doesn’t. Think of an exchangeable as a synonyms list. A non-exchangeable phrase list feature has all the phrases in the list serve as separate features to the underlying training algorithm. So, if you your phrase list feature contains 5 phrases, they will be mapped to 5 separate features. You can think of the non-exchangeable phrase list feature as an additional bag of words that you are willing to add to LUIS existing vocabulary features. Think of a non-exchangeable as set of different words. Default value is true.",
          "default": true,
          "type": "boolean"
        }
      }
    },
    "SubClosedList": {
      "description": "Sublist of items for a Closed list.",
      "type": "object",
      "properties": {
        "canonicalForm": {
          "description": "The standard form that the list represents.",
          "type": "string"
        },
        "list": {
          "description": "List of synonym words.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      }
    },
    "SubClosedListResponse": {
      "description": "Sublist of items for a Closed list.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/SubClosedList"
        }
      ],
      "properties": {
        "id": {
          "description": "The sublist ID",
          "type": "integer",
          "x-nullable": false
        }
      }
    },
    "ApplicationUpdateObject": {
      "description": "Object model for updating the name or description of an application.",
      "type": "object",
      "properties": {
        "name": {
          "description": "The application's new name.",
          "type": "string"
        },
        "description": {
          "description": "The application's new description.",
          "type": "string"
        }
      }
    },
    "PrebuiltExtractorNames": {
      "description": "Objet model for adding a prebuilt entity to the application.",
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "JSONRegexFeature": {
      "description": "Exported Model - A Pattern feature.",
      "type": "object",
      "properties": {
        "pattern": {
          "description": "The Regular Expression to match.",
          "type": "string"
        },
        "activated": {
          "description": "Indicates if the Pattern feature is enabled.",
          "type": "boolean"
        },
        "name": {
          "description": "Name of the feature.",
          "type": "string"
        }
      }
    },
    "PatternUpdateObject": {
      "description": "Object model for updating an existing Pattern feature.",
      "type": "object",
      "properties": {
        "pattern": {
          "description": "The Regular Expression to match.",
          "type": "string"
        },
        "name": {
          "description": "Name of the feature.",
          "type": "string"
        },
        "isActive": {
          "description": "Indicates if the Pattern feature is enabled.",
          "default": true,
          "type": "boolean"
        }
      }
    },
    "ClosedList": {
      "description": "Exported Model - A Closed List.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Name of the closed list feature.",
          "type": "string"
        },
        "subLists": {
          "description": "Sublists for the feature.",
          "items": {
            "type": "object",
            "$ref": "#/definitions/SubClosedList"
          },
          "type": "array"
        },
        "roles": {
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      }
    },
    "ClosedListModelPatchObject": {
      "description": "Object model for adding a batch of sublists to an existing closedlist.",
      "type": "object",
      "properties": {
        "subLists": {
          "description": "Sublists to add.",
          "items": {
            "type": "object",
            "$ref": "#/definitions/WordListObject"
          },
          "type": "array"
        }
      }
    },
    "JSONModelFeature": {
      "description": "Exported Model - Phraselist Model Feature.",
      "type": "object",
      "properties": {
        "activated": {
          "description": "Indicates if the feature is enabled.",
          "type": "boolean"
        },
        "name": {
          "description": "The Phraselist name.",
          "type": "string"
        },
        "words": {
          "description": "List of comma-separated phrases that represent the Phraselist.",
          "type": "string"
        },
        "mode": {
          "description": "An exchangeable phrase list feature are serves as single feature to the LUIS underlying training algorithm. It is used as a lexicon lookup feature where its value is 1 if the lexicon contains a given word or 0 if it doesn’t. Think of an exchangeable as a synonyms list. A non-exchangeable phrase list feature has all the phrases in the list serve as separate features to the underlying training algorithm. So, if you your phrase list feature contains 5 phrases, they will be mapped to 5 separate features. You can think of the non-exchangeable phrase list feature as an additional bag of words that you are willing to add to LUIS existing vocabulary features. Think of a non-exchangeable as set of different words. Default value is true.",
          "type": "boolean"
        }
      }
    },
    "ModelCreateObject": {
      "description": "Object model for creating a new entity extractor.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Name of the new entity extractor.",
          "type": "string"
        }
      }
    },
    "PatternCreateObject": {
      "description": "Object model for creating a Pattern feature.",
      "type": "object",
      "properties": {
        "pattern": {
          "description": "The Regular Expression to match.",
          "type": "string"
        },
        "name": {
          "description": "Name of the feature.",
          "type": "string"
        }
      }
    },
    "WordListObject": {
      "description": "Sublist of items for a Closed list.",
      "type": "object",
      "properties": {
        "canonicalForm": {
          "description": "The standard form that the list represents.",
          "type": "string"
        },
        "list": {
          "description": "List of synonym words.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      }
    },
    "WordListBaseUpdateObject": {
      "description": "Object model for updating one of the closed list's sublists.",
      "type": "object",
      "properties": {
        "canonicalForm": {
          "description": "The standard form that the list represents.",
          "type": "string"
        },
        "list": {
          "description": "List of synonym words.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      }
    },
    "JSONUtterance": {
      "description": "Exported Model - Utterance that was used to train the model.",
      "type": "object",
      "properties": {
        "text": {
          "description": "The utterance.",
          "type": "string"
        },
        "intent": {
          "description": "The matched intent.",
          "type": "string"
        },
        "entities": {
          "description": "The matched entities.",
          "items": {
            "type": "object",
            "$ref": "#/definitions/JSONEntity"
          },
          "type": "array"
        }
      }
    },
    "ModelUpdateObject": {
      "description": "Object model for updating an intent classifier.",
      "type": "object",
      "properties": {
        "name": {
          "description": "The entity's new name.",
          "type": "string"
        }
      }
    },
    "ClosedListModelUpdateObject": {
      "description": "Object model for updating a closed list.",
      "type": "object",
      "properties": {
        "subLists": {
          "description": "The new sublists for the feature.",
          "items": {
            "type": "object",
            "$ref": "#/definitions/WordListObject"
          },
          "type": "array"
        },
        "name": {
          "description": "The new name of the closed list feature.",
          "type": "string"
        }
      }
    },
    "ClosedListModelCreateObject": {
      "description": "Object model for creating a closed list.",
      "type": "object",
      "properties": {
        "subLists": {
          "description": "Sublists for the feature.",
          "items": {
            "type": "object",
            "$ref": "#/definitions/WordListObject"
          },
          "type": "array"
        },
        "name": {
          "description": "Name of the closed list feature.",
          "type": "string"
        }
      }
    },
    "ExampleLabelObjectArray": {
      "description": "Object model for adding a batch of labeled examples.",
      "items": {
        "type": "object",
        "$ref": "#/definitions/ExampleLabelObject"
      },
      "type": "array"
    },
    "VersionInfo": {
      "description": "Object model of an application version.",
      "type": "object",
      "required": [
        "version",
        "trainingStatus"
      ],
      "properties": {
        "version": {
          "description": "The version ID. E.g.: \"0.1\"",
          "type": "string"
        },
        "createdDateTime": {
          "description": "The version's creation timestamp.",
          "type": "string",
          "format": "date-time"
        },
        "lastModifiedDateTime": {
          "description": "Timestamp of the last update.",
          "type": "string",
          "format": "date-time"
        },
        "lastTrainedDateTime": {
          "description": "Timestamp of the last time the model was trained.",
          "type": "string",
          "format": "date-time"
        },
        "lastPublishedDateTime": {
          "description": "Timestamp when was last published.",
          "type": "string",
          "format": "date-time"
        },
        "endpointUrl": {
          "description": "The Runtime endpoint URL for this model version.",
          "type": "string"
        },
        "assignedEndpointKey": {
          "description": "The endpoint key.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "externalApiKeys": {
          "description": "External keys.",
          "type": "object"
        },
        "intentsCount": {
          "description": "Number of intents in this model.",
          "type": "integer"
        },
        "entitiesCount": {
          "description": "Number of entities in this model.",
          "type": "integer"
        },
        "endpointHitsCount": {
          "description": "Number of calls made to this endpoint.",
          "type": "integer"
        },
        "trainingStatus": {
          "description": "The current training status.",
          "type": "string",
          "enum": [
            "NeedsTraining",
            "InProgress",
            "Trained"
          ],
          "x-ms-enum": {
            "name": "TrainingStatus"
          }
        }
      }
    },
    "TaskUpdateObject": {
      "description": "Object model for cloning an application's version.",
      "type": "object",
      "properties": {
        "version": {
          "description": "The new version for the cloned model.",
          "type": "string"
        }
      }
    },
    "PhraselistUpdateObject": {
      "description": "Object model for updating a Phraselist.",
      "type": "object",
      "properties": {
        "phrases": {
          "description": "List of comma-separated phrases that represent the Phraselist.",
          "type": "string"
        },
        "name": {
          "description": "The Phraselist name.",
          "type": "string"
        },
        "isActive": {
          "description": "Indicates if the Phraselist is enabled.",
          "default": true,
          "type": "boolean"
        },
        "isExchangeable": {
          "description": "An exchangeable phrase list feature are serves as single feature to the LUIS underlying training algorithm. It is used as a lexicon lookup feature where its value is 1 if the lexicon contains a given word or 0 if it doesn’t. Think of an exchangeable as a synonyms list. A non-exchangeable phrase list feature has all the phrases in the list serve as separate features to the underlying training algorithm. So, if you your phrase list feature contains 5 phrases, they will be mapped to 5 separate features. You can think of the non-exchangeable phrase list feature as an additional bag of words that you are willing to add to LUIS existing vocabulary features. Think of a non-exchangeable as set of different words. Default value is true.",
          "default": true,
          "type": "boolean"
        }
      }
    },
    "PrebuiltDomainObject": {
      "type": "object",
      "properties": {
        "domain_name": {
          "type": "string"
        },
        "model_name": {
          "type": "string"
        }
      }
    },
    "HierarchicalModel": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "children": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "inherits": {
          "type": "object",
          "$ref": "#/definitions/PrebuiltDomainObject"
        },
        "roles": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ApplicationPublishObject": {
      "description": "Object model for publishing a specific application version.",
      "type": "object",
      "properties": {
        "versionId": {
          "description": "The version ID to publish.",
          "type": "string"
        },
        "isStaging": {
          "description": "Indicates if the staging slot should be used, instead of the Production one.",
          "default": false,
          "type": "boolean"
        }
      }
    },
    "LuisApp": {
      "description": "Exported Model - An exported LUIS Application.",
      "additionalProperties": true,
      "type": "object",
      "properties": {
        "name": {
          "description": "The name of the application.",
          "type": "string"
        },
        "versionId": {
          "description": "The version ID of the application that was exported.",
          "type": "string"
        },
        "desc": {
          "description": "The description of the application.",
          "type": "string"
        },
        "culture": {
          "description": "The culture of the application. E.g.: en-us.",
          "type": "string"
        },
        "intents": {
          "description": "List of intents.",
          "items": {
            "type": "object",
            "$ref": "#/definitions/HierarchicalModel"
          },
          "type": "array"
        },
        "entities": {
          "description": "List of entities.",
          "items": {
            "type": "object",
            "$ref": "#/definitions/HierarchicalModel"
          },
          "type": "array"
        },
        "closedLists": {
          "description": "List of closed lists.",
          "items": {
            "type": "object",
            "$ref": "#/definitions/ClosedList"
          },
          "type": "array"
        },
        "composites": {
          "description": "List of composite entities.",
          "items": {
            "type": "object",
            "$ref": "#/definitions/HierarchicalModel"
          },
          "type": "array"
        },
        "patternAnyEntities": {
          "description": "List of Pattern.Any entities.",
          "items": {
            "type": "object",
            "$ref": "#/definitions/PatternAny"
          },
          "type": "array"
        },
        "regex_entities": {
          "description": "List of regular expression entities.",
          "items": {
            "type": "object",
            "$ref": "#/definitions/RegexEntity"
          },
          "type": "array"
        },
        "prebuiltEntities": {
          "description": "List of prebuilt entities.",
          "items": {
            "type": "object",
            "$ref": "#/definitions/PrebuiltEntity"
          },
          "type": "array"
        },
        "regex_features": {
          "description": "List of pattern features.",
          "items": {
            "type": "object",
            "$ref": "#/definitions/JSONRegexFeature"
          },
          "type": "array"
        },
        "model_features": {
          "description": "List of model features.",
          "items": {
            "type": "object",
            "$ref": "#/definitions/JSONModelFeature"
          },
          "type": "array"
        },
        "patterns": {
          "description": "List of patterns.",
          "items": {
            "type": "object",
            "$ref": "#/definitions/PatternRule"
          },
          "type": "array"
        },
        "utterances": {
          "description": "List of sample utterances.",
          "items": {
            "type": "object",
            "$ref": "#/definitions/JSONUtterance"
          },
          "type": "array"
        }
      }
    },
    "GuidResponse": {
      "description": "The ID (GUID) returned by an operation.",
      "type": "string",
      "format": "uuid"
    },
    "VersionResponse": {
      "description": "The new version ID returned by when importing a model version.",
      "type": "string"
    },
    "FeatureIDResponse": {
      "description": "The ID of the created feature.",
      "type": "integer",
      "x-nullable": false
    },
    "LabeledUtterances": {
      "description": "A list of predictions and label pairs for every example in the application.",
      "type": "array",
      "items": {
        "$ref": "#/definitions/LabeledUtterance"
      }
    },
    "LabeledUtterance": {
      "description": "A prediction and label pair of an example.",
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "ID of Labeled Utterance."
        },
        "text": {
          "type": "string",
          "description": "The utterance. E.g.: what's the weather like in seattle?"
        },
        "tokenizedText": {
          "type": "array",
          "description": "The utterance tokenized.",
          "items": {
            "type": "string"
          }
        },
        "intentLabel": {
          "description": "The intent matching the example.",
          "type": "string"
        },
        "entityLabels": {
          "description": "The entities matching the example.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/EntityLabel"
          }
        },
        "intentPredictions": {
          "description": "List of suggested intents.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/IntentPrediction"
          }
        },
        "entityPredictions": {
          "description": "List of suggested entities.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/EntityPrediction"
          }
        }
      }
    },
    "IntentsSuggestionExamples": {
      "description": "List of predicted/suggested intents.",
      "type": "array",
      "items": {
        "$ref": "#/definitions/IntentsSuggestionExample"
      }
    },
    "IntentsSuggestionExample": {
      "description": "Predicted/suggested intent.",
      "type": "object",
      "properties": {
        "text": {
          "type": "string",
          "description": "The utterance. E.g.: what's the weather like in seattle?"
        },
        "tokenizedText": {
          "type": "array",
          "description": "The utterance tokenized.",
          "items": {
            "type": "string"
          }
        },
        "intentPredictions": {
          "description": "Predicted/suggested intents.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/IntentPrediction"
          }
        },
        "entityPredictions": {
          "description": "Predicted/suggested entities.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/EntityPrediction"
          }
        }
      }
    },
    "EntitiesSuggestionExamples": {
      "description": "List of predicted/suggested entities.",
      "type": "array",
      "items": {
        "$ref": "#/definitions/EntitiesSuggestionExample"
      }
    },
    "EntitiesSuggestionExample": {
      "description": "Predicted/suggested entity.",
      "type": "object",
      "properties": {
        "text": {
          "type": "string",
          "description": "The utterance. E.g.: what's the weather like in seattle?"
        },
        "tokenizedText": {
          "type": "array",
          "description": "The utterance tokenized.",
          "items": {
            "type": "string"
          }
        },
        "intentPredictions": {
          "description": "Predicted/suggested intents.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/IntentPrediction"
          }
        },
        "entityPredictions": {
          "description": "Predicted/suggested entities.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/EntityPrediction"
          }
        }
      }
    },
    "EntityLabel": {
      "description": "Defines the entity type and position of the extracted entity within the example.",
      "type": "object",
      "properties": {
        "entityName": {
          "description": "The entity type.",
          "type": "string"
        },
        "startTokenIndex": {
          "description": "The index within the utterance where the extracted entity starts.",
          "type": "integer"
        },
        "endTokenIndex": {
          "description": "The index within the utterance where the extracted entity ends.",
          "type": "integer"
        }
      },
      "required": [
        "entityName",
        "startTokenIndex",
        "endTokenIndex"
      ]
    },
    "IntentPrediction": {
      "description": "A suggested intent.",
      "type": "object",
      "properties": {
        "name": {
          "description": "The intent's name",
          "type": "string"
        },
        "score": {
          "description": "The intent's score, based on the prediction model.",
          "type": "number"
        }
      }
    },
    "EntityPrediction": {
      "description": "A suggested entity.",
      "type": "object",
      "required": [
        "entityName",
        "startTokenIndex",
        "endTokenIndex",
        "phrase"
      ],
      "properties": {
        "entityName": {
          "description": "The entity's name",
          "type": "string"
        },
        "startTokenIndex": {
          "description": "The index within the utterance where the extracted entity starts.",
          "type": "integer"
        },
        "endTokenIndex": {
          "description": "The index within the utterance where the extracted entity ends.",
          "type": "integer"
        },
        "phrase": {
          "type": "string",
          "description": "The actual token(s) that comprise the entity."
        }
      }
    },
    "PersonalAssistantsResponse": {
      "type": "object",
      "description": "Response containing user's endpoint keys and the endpoint URLs of the prebuilt Cortana applications.",
      "properties": {
        "endpointKeys": {
          "$ref": "#/definitions/EndpointKeys"
        },
        "endpointUrls": {
          "$ref": "#/definitions/PersonalAssistantUrls"
        }
      }
    },
    "EndpointKeys": {
      "type": "array",
      "description": "An a array of GUIDs, comprised of Azure Endpoint Keys and the Authoring API key.",
      "items": {
        "type": "string",
        "format": "uuid"
      }
    },
    "PersonalAssistantUrls": {
      "type": "object",
      "description": "Endpoint URLs for prebuilt Cortana applications.",
      "additionalProperties": {
        "type": "string"
      }
    },
    "ModelInfo": {
      "description": "Base type used in entity types.",
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid",
          "description": "The ID of the Entity Model."
        },
        "name": {
          "type": "string",
          "description": "Name of the Entity Model."
        },
        "typeId": {
          "type": "integer",
          "description": "The type ID of the Entity Model."
        },
        "readableType": {
          "$ref": "#/definitions/ReadableType"
        }
      },
      "required": [
        "id",
        "readableType"
      ]
    },
    "ModelsInfoResponseObject": {
      "description": "A list of application model infos.",
      "type": "array",
      "items": {
        "$ref": "#/definitions/ModelInfoResponse"
      }
    },
    "ModelInfoResponse": {
      "description": "An application model info.",
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid",
          "description": "The ID of the Entity Model."
        },
        "name": {
          "type": "string",
          "description": "Name of the Entity Model."
        },
        "typeId": {
          "type": "integer",
          "description": "The type ID of the Entity Model."
        },
        "readableType": {
          "$ref": "#/definitions/ReadableType"
        }
      },
      "required": [
        "id",
        "readableType"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/HierarchicalEntityExtractor"
        },
        {
          "$ref": "#/definitions/CompositeEntityExtractor"
        },
        {
          "$ref": "#/definitions/ClosedListEntityExtractor"
        },
        {
          "$ref": "#/definitions/IntentClassifier"
        },
        {
          "$ref": "#/definitions/EntityExtractor"
        },
        {
          "$ref": "#/definitions/RegexEntityExtractor"
        },
        {
          "$ref": "#/definitions/PatternAnyEntityExtractor"
        }
      ]
    },
    "EntityModelInfo": {
      "description": "An Entity Extractor model info.",
      "type": "object",
      "properties": {
        "roles": {
          "$ref": "#/definitions/EntityRoleList"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ModelInfo"
        }
      ]
    },
    "ReadableType": {
      "description": "Full name of the entity type.",
      "type": "string",
      "enum": [
        "Entity Extractor",
        "Hierarchical Entity Extractor",
        "Hierarchical Child Entity Extractor",
        "Composite Entity Extractor",
        "Closed List Entity Extractor",
        "Prebuilt Entity Extractor",
        "Intent Classifier",
        "Pattern.Any Entity Extractor",
        "Regex Entity Extractor"
      ]
    },
    "HierarchicalEntityExtractor": {
      "description": "Hierarchical Entity Extractor.",
      "type": "object",
      "x-ms-discriminator-value": "Hierarchical Entity Extractor",
      "allOf": [
        {
          "$ref": "#/definitions/ModelInfo"
        },
        {
          "$ref": "#/definitions/EntityModelInfo"
        }
      ],
      "properties": {
        "children": {
          "description": "List of child entities.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ChildEntity"
          }
        }
      }
    },
    "HierarchicalEntityExtractorsList": {
      "description": "List of Hierarchical Entity Extractors.",
      "type": "array",
      "items": {
        "$ref": "#/definitions/HierarchicalEntityExtractor"
      }
    },
    "CompositeEntityExtractor": {
      "description": "A Composite Entity Extractor.",
      "type": "object",
      "x-ms-discriminator-value": "Composite Entity Extractor",
      "allOf": [
        {
          "$ref": "#/definitions/ModelInfo"
        },
        {
          "$ref": "#/definitions/EntityModelInfo"
        }
      ],
      "properties": {
        "children": {
          "description": "List of child entities.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ChildEntity"
          }
        }
      }
    },
    "CompositeEntityExtractorsList": {
      "description": "List of Composite Entity Extractors.",
      "type": "array",
      "items": {
        "$ref": "#/definitions/CompositeEntityExtractor"
      }
    },
    "ClosedListEntityExtractor": {
      "description": "Closed List Entity Extractor.",
      "type": "object",
      "x-ms-discriminator-value": "Closed List Entity Extractor",
      "allOf": [
        {
          "$ref": "#/definitions/ModelInfo"
        },
        {
          "$ref": "#/definitions/EntityModelInfo"
        }
      ],
      "properties": {
        "subLists": {
          "description": "List of sub-lists.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SubClosedListResponse"
          }
        }
      }
    },
    "ClosedListEntityExtractorsList": {
      "description": "List of Closed List Entity Extractors.",
      "type": "array",
      "items": {
        "$ref": "#/definitions/ClosedListEntityExtractor"
      }
    },
    "PrebuiltEntityExtractor": {
      "description": "Prebuilt Entity Extractor.",
      "type": "object",
      "x-ms-discriminator-value": "Prebuilt Entity Extractor",
      "allOf": [
        {
          "$ref": "#/definitions/ModelInfo"
        },
        {
          "$ref": "#/definitions/EntityModelInfo"
        }
      ]
    },
    "PrebuiltEntityExtractorsList": {
      "description": "List of Prebuilt Entity Extractors.",
      "type": "array",
      "items": {
        "$ref": "#/definitions/PrebuiltEntityExtractor"
      }
    },
    "ChildEntity": {
      "type": "object",
      "description": "The base child entity type.",
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid",
          "description": "The ID (GUID) belonging to a child entity."
        },
        "name": {
          "type": "string",
          "description": "The name of a child entity."
        }
      },
      "required": [
        "id"
      ]
    },
    "HierarchicalChildEntity": {
      "description": "A Hierarchical Child Entity.",
      "type": "object",
      "properties": {
        "typeId": {
          "description": "The type ID of the Entity Model.",
          "type": "integer"
        },
        "readableType": {
          "$ref": "#/definitions/ReadableType"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ChildEntity"
        }
      ]
    },
    "CustomPrebuiltModel": {
      "description": "A Custom Prebuilt model.",
      "allOf": [
        {
          "$ref": "#/definitions/ModelInfo"
        },
        {
          "$ref": "#/definitions/IntentClassifier"
        },
        {
          "$ref": "#/definitions/EntityExtractor"
        }
      ]
    },
    "CustomPrebuiltModelList": {
      "description": "A List of Custom Prebuilt models.",
      "type": "array",
      "items": {
        "$ref": "#/definitions/CustomPrebuiltModel"
      }
    },
    "IntentClassifier": {
      "description": "Intent Classifier.",
      "type": "object",
      "x-ms-discriminator-value": "Intent Classifier",
      "allOf": [
        {
          "$ref": "#/definitions/ModelInfo"
        }
      ],
      "properties": {
        "customPrebuiltDomainName": {
          "description": "The domain name.",
          "type": "string"
        },
        "customPrebuiltModelName": {
          "description": "The intent name or entity name.",
          "type": "string"
        }
      }
    },
    "EntityExtractor": {
      "description": "Entity Extractor.",
      "type": "object",
      "x-ms-discriminator-value": "Entity Extractor",
      "allOf": [
        {
          "$ref": "#/definitions/ModelInfo"
        },
        {
          "$ref": "#/definitions/EntityModelInfo"
        }
      ],
      "properties": {
        "customPrebuiltDomainName": {
          "description": "The domain name.",
          "type": "string"
        },
        "customPrebuiltModelName": {
          "description": "The intent name or entity name.",
          "type": "string"
        }
      }
    },
    "IntentClassifiersList": {
      "description": "List of Intent Classifiers.",
      "type": "array",
      "items": {
        "$ref": "#/definitions/IntentClassifier"
      }
    },
    "EntityExtractorsList": {
      "description": "List of Entity Extractors.",
      "type": "array",
      "items": {
        "$ref": "#/definitions/EntityExtractor"
      }
    },
    "FeaturesResponseObject": {
      "description": "Model Features, including Patterns and Phraselists.",
      "type": "object",
      "properties": {
        "phraselistFeatures": {
          "$ref": "#/definitions/PhraseListFeatureInfoList"
        },
        "patternFeatures": {
          "$ref": "#/definitions/PatternFeatureInfoList"
        }
      }
    },
    "FeatureInfoObject": {
      "description": "The base class Features-related response objects inherit from.",
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "A six-digit ID used for Features."
        },
        "name": {
          "type": "string",
          "description": "The name of the Feature."
        },
        "isActive": {
          "description": "Indicates if the feature is enabled.",
          "type": "boolean"
        }
      }
    },
    "PatternFeatureInfo": {
      "description": "Pattern feature.",
      "type": "object",
      "properties": {
        "pattern": {
          "description": "The Regular Expression to match.",
          "type": "string"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/FeatureInfoObject"
        }
      ]
    },
    "PatternFeatureInfoList": {
      "description": "List of Pattern features.",
      "type": "array",
      "items": {
        "$ref": "#/definitions/PatternFeatureInfo"
      }
    },
    "PhraseListFeatureInfo": {
      "description": "Phraselist Feature.",
      "type": "object",
      "properties": {
        "phrases": {
          "type": "string",
          "description": "A list of comma-separated values."
        },
        "isExchangeable": {
          "description": "An exchangeable phrase list feature are serves as single feature to the LUIS underlying training algorithm. It is used as a lexicon lookup feature where its value is 1 if the lexicon contains a given word or 0 if it doesn’t. Think of an exchangeable as a synonyms list. A non-exchangeable phrase list feature has all the phrases in the list serve as separate features to the underlying training algorithm. So, if you your phrase list feature contains 5 phrases, they will be mapped to 5 separate features. You can think of the non-exchangeable phrase list feature as an additional bag of words that you are willing to add to LUIS existing vocabulary features. Think of a non-exchangeable as set of different words. Default value is true.",
          "type": "boolean"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/FeatureInfoObject"
        }
      ]
    },
    "PhraseListFeatureInfoList": {
      "description": "List of Phraselist Features.",
      "type": "array",
      "items": {
        "$ref": "#/definitions/PhraseListFeatureInfo"
      }
    },
    "LabelExampleResponse": {
      "description": "Response when adding a labeled example.",
      "type": "object",
      "properties": {
        "UtteranceText": {
          "description": "The sample's utterance.",
          "type": "string"
        },
        "ExampleId": {
          "description": "The newly created sample ID.",
          "type": "integer"
        }
      }
    },
    "BatchLabelExample": {
      "description": "Response when adding a batch of labeled examples.",
      "type": "object",
      "properties": {
        "value": {
          "$ref": "#/definitions/LabelExampleResponse"
        },
        "hasError": {
          "type": "boolean"
        },
        "error": {
          "$ref": "#/definitions/OperationStatus"
        }
      }
    },
    "BatchLabelExampleResponse": {
      "description": "Response when adding a batch of labeled examples.",
      "type": "array",
      "items": {
        "$ref": "#/definitions/BatchLabelExample"
      }
    },
    "ApplicationInfoResponse": {
      "description": "Response containing the Application Info.",
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid",
          "description": "The ID (GUID) of the application."
        },
        "name": {
          "description": "The name of the application.",
          "type": "string"
        },
        "description": {
          "description": "The description of the application.",
          "type": "string"
        },
        "culture": {
          "description": "The culture of the application. E.g.: en-us.",
          "type": "string"
        },
        "usageScenario": {
          "description": "Defines the scenario for the new application. Optional. E.g.: IoT.",
          "type": "string"
        },
        "domain": {
          "description": "The domain for the new application. Optional. E.g.: Comics.",
          "type": "string"
        },
        "versionsCount": {
          "description": "Amount of model versions within the application.",
          "type": "integer"
        },
        "createdDateTime": {
          "description": "The version's creation timestamp.",
          "type": "string"
        },
        "endpoints": {
          "description": "The Runtime endpoint URL for this model version.",
          "type": "object"
        },
        "endpointHitsCount": {
          "description": "Number of calls made to this endpoint.",
          "type": "integer"
        },
        "activeVersion": {
          "description": "The version ID currently marked as active.",
          "type": "string"
        }
      }
    },
    "ApplicationsInfoList": {
      "description": "List of Application Infos.",
      "type": "array",
      "items": {
        "$ref": "#/definitions/ApplicationInfoResponse"
      }
    },
    "ProductionOrStagingEndpointInfo": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/EndpointInfo"
        }
      ]
    },
    "EndpointInfo": {
      "type": "object",
      "description": "The base class \"ProductionOrStagingEndpointInfo\" inherits from.",
      "properties": {
        "versionId": {
          "description": "The version ID to publish.",
          "type": "string"
        },
        "isStaging": {
          "description": "Indicates if the staging slot should be used, instead of the Production one.",
          "type": "boolean"
        },
        "endpointUrl": {
          "description": "The Runtime endpoint URL for this model version.",
          "type": "string"
        },
        "region": {
          "description": "The target region that the application is published to.",
          "type": "string"
        },
        "assignedEndpointKey": {
          "description": "The endpoint key.",
          "type": "string"
        },
        "endpointRegion": {
          "type": "string",
          "description": "The endpoint's region."
        },
        "publishedDateTime": {
          "description": "Timestamp when was last published.",
          "type": "string"
        }
      }
    },
    "AvailableEndpoints": {
      "type": "object",
      "description": "Collection of endpoint URLs where the selected application is deployed to.",
      "additionalProperties": {
        "type": "string"
      }
    },
    "AvailableCulture": {
      "description": "Available culture for using in a new application.",
      "type": "object",
      "properties": {
        "name": {
          "description": "The language name.",
          "type": "string"
        },
        "code": {
          "description": "The ISO value for the language.",
          "type": "string"
        }
      }
    },
    "AvailableCultures": {
      "type": "array",
      "description": "A list of available application cultures.",
      "items": {
        "$ref": "#/definitions/AvailableCulture"
      }
    },
    "AvailableDomains": {
      "description": "A list of available application domains.",
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "ApplicationUsageScenarios": {
      "description": "A list of possible application usage scenarios.",
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "ApplicationSettings": {
      "description": "The application settings.",
      "type": "object",
      "properties": {
        "id": {
          "description": "The application ID.",
          "type": "string",
          "format": "uuid"
        },
        "public": {
          "description": "Setting your application as public allows other people to use your application's endpoint using their own keys.",
          "type": "boolean",
          "x-nullable": false,
          "x-ms-client-name": "isPublic"
        }
      },
      "required": [
        "id",
        "public"
      ]
    },
    "PublishSettings": {
      "description": "The application publish settings.",
      "type": "object",
      "properties": {
        "id": {
          "description": "The application ID.",
          "type": "string",
          "format": "uuid"
        },
        "sentimentAnalysis": {
          "description": "Setting sentiment analysis as true returns the Sentiment of the input utterance along with the resopnse",
          "type": "boolean",
          "x-nullable": false,
          "x-ms-client-name": "IsSentimentAnalysisEnabled"
        },
        "speech": {
          "description": "Setting speech as public enables speech priming in your app",
          "type": "boolean",
          "x-nullable": false,
          "x-ms-client-name": "IsSpeechEnabled"
        },
        "spellChecker": {
          "description": "Setting spell checker as public enables spell checking the input utterance.",
          "type": "boolean",
          "x-nullable": false,
          "x-ms-client-name": "IsSpellCheckerEnabled"
        }
      },
      "required": [
        "id",
        "sentimentAnalysis",
        "speech",
        "spellChecker"
      ]
    },
    "AvailablePrebuiltEntityModel": {
      "description": "Available Prebuilt entity model for using in an application.",
      "type": "object",
      "properties": {
        "name": {
          "description": "The entity name.",
          "type": "string"
        },
        "description": {
          "description": "The entity description and usage information.",
          "type": "string"
        },
        "examples": {
          "description": "Usage examples.",
          "type": "string"
        }
      }
    },
    "AvailablePrebuiltEntityModels": {
      "description": "List of Available Prebuilt entity models.",
      "type": "array",
      "items": {
        "$ref": "#/definitions/AvailablePrebuiltEntityModel"
      }
    },
    "EnqueueTrainingResponse": {
      "description": "Response model when requesting to train the model.",
      "type": "object",
      "properties": {
        "statusId": {
          "description": "The train request status ID.",
          "type": "integer"
        },
        "status": {
          "$ref": "#/definitions/TrainingStatus"
        }
      }
    },
    "TrainingStatus": {
      "description": "The Training status.",
      "type": "string",
      "enum": [
        "Queued",
        "InProgress",
        "UpToDate",
        "Fail",
        "Success"
      ]
    },
    "ModelTrainingInfo": {
      "description": "Model Training Info.",
      "type": "object",
      "properties": {
        "modelId": {
          "type": "string",
          "format": "uuid",
          "description": "The ID (GUID) of the model."
        },
        "details": {
          "$ref": "#/definitions/ModelTrainingDetails"
        }
      }
    },
    "ModelTrainingDetails": {
      "description": "Model Training Details.",
      "type": "object",
      "properties": {
        "statusId": {
          "description": "The train request status ID.",
          "type": "integer"
        },
        "status": {
          "$ref": "#/definitions/TrainingStatus"
        },
        "exampleCount": {
          "description": "The count of examples used to train the model.",
          "type": "integer"
        },
        "trainingDateTime": {
          "description": "When the model was trained.",
          "type": "string",
          "format": "date-time"
        },
        "failureReason": {
          "description": "Reason for the training failure.",
          "type": "string"
        }
      }
    },
    "ModelTrainingInfoList": {
      "description": "List of Model Training Infos.",
      "type": "array",
      "items": {
        "$ref": "#/definitions/ModelTrainingInfo"
      }
    },
    "UserAccessList": {
      "description": "List of user permissions.",
      "type": "object",
      "properties": {
        "owner": {
          "type": "string",
          "description": "The email address of owner of the application."
        },
        "emails": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "UserCollaborator": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string",
          "description": "The email address of the user."
        }
      }
    },
    "CollaboratorsArray": {
      "type": "object",
      "properties": {
        "emails": {
          "type": "array",
          "description": "The email address of the users.",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "OperationStatus": {
      "description": "Response of an Operation status.",
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "description": "Status Code.",
          "enum": [
            "Failed",
            "FAILED",
            "Success"
          ],
          "x-ms-enum": {
            "modelAsString": true,
            "name": "OperationStatusType"
          }
        },
        "message": {
          "type": "string",
          "description": "Status details."
        }
      }
    },
    "ErrorResponse": {
      "type": "object",
      "description": "Error information returned by the API",
      "properties": {
        "statusCode": {
          "type": "integer",
          "description": "HTTP Status code"
        },
        "message": {
          "type": "string",
          "description": "Cause of the error."
        }
      }
    },
    "OperationError": {
      "description": "Operation error details when invoking an operation on the API.",
      "type": "object",
      "properties": {
        "code": {
          "type": "string"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "PrebuiltDomainsList": {
      "description": "List of Prebuilt Domains.",
      "type": "array",
      "items": {
        "$ref": "#/definitions/PrebuiltDomain"
      }
    },
    "PrebuiltDomain": {
      "description": "Prebuilt Domain.",
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "culture": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "examples": {
          "type": "string"
        },
        "intents": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PrebuiltDomainItem"
          }
        },
        "entities": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PrebuiltDomainItem"
          }
        }
      }
    },
    "PrebuiltDomainItem": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "examples": {
          "type": "string"
        }
      }
    },
    "GuidList": {
      "description": "List of IDs (GUID)",
      "type": "array",
      "items": {
        "$ref": "#/definitions/GuidResponse"
      }
    },
    "EntityRoleCreateObject": {
      "description": "Object model for creating an entity role.",
      "type": "object",
      "properties": {
        "name": {
          "description": "The entity role name.",
          "type": "string"
        }
      }
    },
    "RegexModelCreateObject": {
      "description": "Model object for creating a regex entity model.",
      "type": "object",
      "properties": {
        "regexPattern": {
          "description": "The regex entity pattern.",
          "type": "string"
        },
        "name": {
          "description": "The model name.",
          "type": "string"
        }
      }
    },
    "PatternAnyModelCreateObject": {
      "description": "Model object for creating a Pattern.Any entity model.",
      "type": "object",
      "properties": {
        "name": {
          "description": "The model name.",
          "type": "string"
        },
        "explicitList": {
          "description": "The Pattern.Any explicit list.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ExplicitListItemCreateObject": {
      "description": "Object model for creating an explicit list item.",
      "type": "object",
      "properties": {
        "explicitListItem": {
          "description": "The explicit list item.",
          "type": "string"
        }
      }
    },
    "RegexModelUpdateObject": {
      "description": "Model object for updating a regex entity model.",
      "type": "object",
      "properties": {
        "regexPattern": {
          "description": "The regex entity pattern.",
          "type": "string"
        },
        "name": {
          "description": "The model name.",
          "type": "string"
        }
      }
    },
    "PatternAnyModelUpdateObject": {
      "description": "Model object for updating a Pattern.Any entity model.",
      "type": "object",
      "properties": {
        "name": {
          "description": "The model name.",
          "type": "string"
        },
        "explicitList": {
          "description": "The Pattern.Any explicit list.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "EntityRoleUpdateObject": {
      "description": "Object model for updating an entity role.",
      "type": "object",
      "properties": {
        "name": {
          "description": "The entity role name.",
          "type": "string"
        }
      }
    },
    "ExplicitListItemUpdateObject": {
      "description": "Model object for updating an explicit list item.",
      "type": "object",
      "properties": {
        "explicitListItem": {
          "description": "The explicit list item.",
          "type": "string"
        }
      }
    },
    "PatternRuleCreateObject": {
      "description": "Object model for creating a pattern",
      "type": "object",
      "properties": {
        "pattern": {
          "description": "The pattern text.",
          "type": "string"
        },
        "intent": {
          "description": "The intent's name which the pattern belongs to.",
          "type": "string"
        }
      }
    },
    "PatternRuleUpdateObject": {
      "description": "Object model for updating a pattern.",
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "description": "The pattern ID.",
          "type": "string"
        },
        "pattern": {
          "description": "The pattern text.",
          "type": "string"
        },
        "intent": {
          "description": "The intent's name which the pattern belongs to.",
          "type": "string"
        }
      }
    },
    "RegexEntityExtractor": {
      "description": "Regex Entity Extractor.",
      "type": "object",
      "x-ms-discriminator-value": "Regex Entity Extractor",
      "allOf": [
        {
          "$ref": "#/definitions/ModelInfo"
        },
        {
          "$ref": "#/definitions/EntityModelInfo"
        }
      ],
      "properties": {
        "regexPattern": {
          "description": "The Regex entity pattern.",
          "type": "string"
        }
      }
    },
    "RegexEntityExtractorList": {
      "description": "List of Regex Entity Extractors.",
      "type": "array",
      "items": {
        "$ref": "#/definitions/RegexEntityExtractor"
      }
    },
    "PatternAnyEntityExtractor": {
      "description": "Pattern.Any Entity Extractor.",
      "type": "object",
      "x-ms-discriminator-value": "Pattern.Any Entity Extractor",
      "allOf": [
        {
          "$ref": "#/definitions/ModelInfo"
        },
        {
          "$ref": "#/definitions/EntityModelInfo"
        }
      ],
      "properties": {
        "explicitList": {
          "$ref": "#/definitions/ExplicitListItemList"
        }
      }
    },
    "PatternAnyEntityExtractorList": {
      "description": "List of Pattern.Any Entity Extractors.",
      "type": "array",
      "items": {
        "$ref": "#/definitions/PatternAnyEntityExtractor"
      }
    },
    "EntityRole": {
      "description": "Entity extractor role",
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "description": "The entity role ID.",
          "type": "string"
        },
        "name": {
          "description": "The entity role name.",
          "type": "string"
        }
      }
    },
    "EntityRoleList": {
      "description": "List of Pattern.Any Entity Extractors.",
      "type": "array",
      "items": {
        "$ref": "#/definitions/EntityRole"
      }
    },
    "ExplicitListItem": {
      "description": "Explicit list item",
      "type": "object",
      "properties": {
        "id": {
          "format": "int64",
          "description": "The explicit list item ID.",
          "type": "integer"
        },
        "explicitListItem": {
          "description": "The explicit list item value.",
          "type": "string"
        }
      }
    },
    "ExplicitListItemList": {
      "description": "List of explicit list items",
      "type": "array",
      "items": {
        "$ref": "#/definitions/ExplicitListItem"
      }
    },
    "ExplicitListItemIDResponse": {
      "description": "The ID of the created explicit list item.",
      "type": "integer",
      "x-nullable": false
    },
    "PatternRuleInfo": {
      "description": "Pattern rule",
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "description": "The pattern ID.",
          "type": "string"
        },
        "pattern": {
          "description": "The pattern text.",
          "type": "string"
        },
        "intent": {
          "description": "The intent's name where the pattern belongs to.",
          "type": "string"
        }
      }
    },
    "PatternRuleList": {
      "description": "List of patterns",
      "type": "array",
      "items": {
        "$ref": "#/definitions/PatternRuleInfo"
      }
    },
    "ExamplesPerModelResponseObject": {
      "description": "A list of examples per model.",
      "type": "array",
      "items": {
        "$ref": "#/definitions/LabelTextObject"
      }
    },
    "LabelTextObject": {
      "description": "An object containing the example's text.",
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "The ID of the Label."
        },
        "text": {
          "type": "string",
          "description": "The text of the label."
        }
      }
    },
    "PatternAny": {
      "description": "Pattern.Any Entity Extractor.",
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "explicitList": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "roles": {
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      }
    },
    "RegexEntity": {
      "description": "Regular Expression Entity Extractor.",
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "regexPattern": {
          "type": "string"
        },
        "roles": {
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      }
    },
    "PrebuiltEntity": {
      "description": "Prebuilt Entity Extractor.",
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "roles": {
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      }
    },
    "PatternRule": {
      "description": "Pattern",
      "type": "object",
      "properties": {
        "pattern": {
          "description": "The pattern text.",
          "type": "string"
        },
        "intent": {
          "description": "The intent's name where the pattern belongs to.",
          "type": "string"
        }
      }
    },
    "AppVersionSettingObject": {
      "description": "Object model of an application version setting.",
      "type": "object",
      "properties": {
        "name": {
          "description": "The application version setting name.",
          "type": "string"
        },
        "value": {
          "description": "The application version setting value.",
          "type": "string"
        }
      }
    }
  },
  "parameters": {
    "AppIdInPath": {
      "name": "appId",
      "in": "path",
      "required": true,
      "type": "string",
      "format": "uuid",
      "description": "The application ID.",
      "x-ms-parameter-location": "method"
    },
    "VersionIdInPath": {
      "name": "versionId",
      "in": "path",
      "description": "The version ID.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "CEntityIdInPath": {
      "name": "cEntityId",
      "in": "path",
      "description": "The composite entity extractor ID.",
      "required": true,
      "type": "string",
      "format": "uuid",
      "x-ms-parameter-location": "method"
    },
    "HEntityIdInPath": {
      "name": "hEntityId",
      "in": "path",
      "description": "The hierarchical entity extractor ID.",
      "required": true,
      "type": "string",
      "format": "uuid",
      "x-ms-parameter-location": "method"
    },
    "IntentIdInPath": {
      "name": "intentId",
      "in": "path",
      "description": "The intent classifier ID.",
      "required": true,
      "type": "string",
      "format": "uuid",
      "x-ms-parameter-location": "method"
    },
    "SkipInPath": {
      "name": "skip",
      "in": "query",
      "description": "The number of entries to skip. Default value is 0.",
      "type": "integer",
      "default": 0,
      "minimum": 0,
      "x-ms-parameter-location": "method"
    },
    "TakeInPath": {
      "name": "take",
      "in": "query",
      "description": "The number of entries to return. Maximum page size is 500. Default is 100.",
      "type": "integer",
      "default": 100,
      "minimum": 0,
      "maximum": 500,
      "x-ms-parameter-location": "method"
    },
    "Endpoint": {
      "name": "Endpoint",
      "description": "Supported Cognitive Services endpoints (protocol and hostname, for example: https://westus.api.cognitive.microsoft.com).",
      "x-ms-parameter-location": "client",
      "required": true,
      "type": "string",
      "in": "path",
      "x-ms-skip-url-encoding": true
    },
    "ApiKey": {
      "name": "Ocp-Apim-Subscription-Key",
      "description": "Subscription key which provides access to this API.",
      "in": "header",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "client"
    }
  }
}